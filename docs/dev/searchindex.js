Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[431, null]], "0.10 (Jan 28, 2019)": [[432, null]], "0.11 (Mar 29, 2019)": [[433, null]], "0.12 (May 30, 2019)": [[434, null]], "0.13 (Jul 26, 2019)": [[435, null]], "0.14 (Sep 30, 2019)": [[436, null]], "0.15 (Dec 3, 2019)": [[437, null]], "0.16 (Feb 1, 2020)": [[438, null]], "0.17 (Apr 1, 2020)": [[439, null]], "0.18 (Nov 4th, 2020)": [[440, null]], "0.18.1 (Nov 6th, 2020)": [[441, null]], "0.18.2 (Nov 19th, 2020)": [[442, null]], "0.19 (Nov 22nd, 2021)": [[443, null]], "0.2 (Apr 13, 2015)": [[444, null]], "0.20 (May 12th, 2022)": [[445, null]], "0.20.1 (June 16th, 2022)": [[446, null]], "0.3 (Aug 13, 2015)": [[447, null]], "0.4 (Apr 20, 2016)": [[448, null]], "0.5 (Nov 22, 2016)": [[449, null]], "0.6 (Apr 28, 2017)": [[450, null]], "0.7 (Feb 28, 2018)": [[451, null]], "0.8 (Sep 23, 2018)": [[452, null]], "0.9 (Nov 29, 2018)": [[453, null]], "1. Bayesian analysis": [[507, "bayesian-analysis"]], "1.0 (November 10th, 2022)": [[454, null]], "1.0.1 (March 14th, 2023)": [[455, null]], "1.0.2 (December 6th, 2023)": [[456, null]], "1.1 (June 13th 2023)": [[457, null]], "1.2 (February 29th 2024)": [[458, null]], "1.3 (November 26th, 2024)": [[459, null]], "1D Spectral": [[465, "d-spectral"], [518, "d-spectral"]], "1D spectrum simulation": [[471, null]], "2. Limitations of the Markov Chain Monte Carlo approach": [[507, "limitations-of-the-markov-chain-monte-carlo-approach"]], "2.0 (unreleased)": [[460, null]], "2D Image": [[473, null], [518, "d-image"]], "2D map fitting": [[474, null]], "3. Nested sampling approach": [[507, "nested-sampling-approach"]], "3D Cube": [[484, null], [518, "d-cube"]], "3D detailed analysis": [[477, null]], "3D map simulation": [[486, null]], "A fully configured Flux Points Estimation": [[498, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[468, "a-note-on-statistics"]], "A note on the internal representation": [[498, "a-note-on-the-internal-representation"]], "API Links": [[392, "api-links"]], "API changes": [[454, "api-changes"], [457, "api-changes"], [458, "api-changes"], [459, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[120, null]], "Abstract": [[396, "abstract"], [397, "abstract"], [398, "abstract"], [399, "abstract"], [400, "abstract"], [401, "abstract"], [403, "abstract"], [404, "abstract"], [405, "abstract"], [406, "abstract"], [407, "abstract"], [408, "abstract"], [409, "abstract"], [410, "abstract"], [411, "abstract"], [412, "abstract"], [413, "abstract"], [414, "abstract"], [415, "abstract"], [416, "abstract"], [417, "abstract"], [418, "abstract"], [419, "abstract"], [420, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[394, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[503, "accessing-data"]], "Accessing and visualising results": [[472, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[498, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[497, "accessing-contents-of-a-dataset"]], "Accessor methods": [[552, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[463, null]], "Adaptive smoothing": [[472, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[171, null]], "Add a model on multiple datasets": [[505, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[402, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[503, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[503, "adding-non-contiguous-axes"]], "Additional Models": [[414, "additional-models"]], "Additional PSF classes": [[546, "additional-psf-classes"]], "Additional utilities": [[601, "additional-utilities"]], "Aim": [[505, "aim"]], "Alternative": [[415, "alternative"]], "Alternatives": [[399, "alternatives"], [402, "alternatives"], [405, "alternatives"], [407, "alternatives"], [408, "alternatives"], [409, "alternatives"], [411, "alternatives"], [412, "alternatives"], [418, "alternatives"]], "Alternatives / Outlook": [[404, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[469, "analysis-configuration"], [477, "analysis-configuration"], [488, "analysis-configuration"], [523, "analysis-configuration"]], "Analysis steps": [[601, "analysis-steps"]], "Analysis workflow": [[601, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (EDISP_2D)": [[544, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "As a function of of true energy and offset angle (PSF_TABLE)": [[546, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "As a function of reconstructed energy and detector coordinates (BKG_3D)": [[543, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "As a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[543, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "As a function of true energy (RMF)": [[544, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "As a function of true energy and offset angle (AEFF_2D)": [[542, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "Assert convention": [[391, "assert-convention"]], "Assign to model to all datasets": [[489, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[505, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[531, null]], "Astrophysical source population models": [[530, null]], "Astrophysics": [[529, null]], "Authorship policy": [[417, "authorship-policy"]], "BACKEND_DEFAULT": [[333, null]], "BSD or GPL license?": [[391, "bsd-or-gpl-license"]], "Background": [[512, "background"], [543, null]], "Background / What we have now": [[406, "background-what-we-have-now"]], "Background Model Handling": [[413, "background-model-handling"]], "Background estimation": [[502, "background-estimation"], [548, "background-estimation"]], "Background2D": [[150, null]], "Background3D": [[151, null]], "BackgroundIRF": [[152, null]], "BackgroundIRFModel": [[402, "backgroundirfmodel"]], "BackgroundModel": [[402, "backgroundmodel"]], "Basic image exploration and fitting": [[479, null]], "Basic operators": [[503, "basic-operators"]], "Bayesian analysis with nested sampling": [[507, null]], "Bayesian blocks": [[494, "bayesian-blocks"]], "Bin volume and angular size": [[553, "bin-volume-and-angular-size"]], "Boundary mask": [[504, "boundary-mask"]], "Broken power law spectral model": [[569, null]], "BrokenPowerLawSpectralModel": [[223, null]], "Bug fixes and improvements": [[445, "bug-fixes-and-improvements"], [454, "bug-fixes-and-improvements"], [457, "bug-fixes-and-improvements"], [458, "bug-fixes-and-improvements"], [459, "bug-fixes-and-improvements"]], "Build": [[422, "build"]], "Building 1D datasets from the new observations": [[489, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[488, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[488, "building-the-3d-analysis-configuration"]], "Built-in models": [[600, "built-in-models"]], "Bundled gammapy.extern code": [[391, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[417, "citation-cff"]], "CLUMPY": [[528, "clumpy"]], "CTA 1DC": [[512, "cta-1dc"]], "CTAO with Gammapy": [[512, null]], "Caplog fixture": [[391, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[419, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 1: Estimate the posterior distribution with a tuning-parameter free approach": [[420, "case-1-estimate-the-posterior-distribution-with-a-tuning-parameter-free-approach"]], "Case 2: Favoring positive values for flux amplitudes": [[419, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 2: Minuit convergence issues": [[420, "case-2-minuit-convergence-issues"]], "Case 3: Model comparison using the Bayesian evidence (aka marginal evidence)": [[420, "case-3-model-comparison-using-the-bayesian-evidence-aka-marginal-evidence"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[419, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "Case 4: Parallelization of the \u201cfitting\u201d": [[420, "case-4-parallelization-of-the-fitting"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[604, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[605, "cash-counts-statistic"]], "CashCountsStatistic": [[294, null]], "Catalog table": [[496, "catalog-table"]], "Caveat": [[604, "caveat"]], "Changelog": [[411, "changelog"]], "Check Python code": [[392, "check-python-code"]], "Check broken links": [[392, "check-broken-links"]], "Check setup": [[462, "check-setup"], [464, "check-setup"], [468, "check-setup"], [469, "check-setup"], [470, "check-setup"], [471, "check-setup"], [472, "check-setup"], [474, "check-setup"], [475, "check-setup"], [477, "check-setup"], [478, "check-setup"], [479, "check-setup"], [480, "check-setup"], [481, "check-setup"], [482, "check-setup"], [483, "check-setup"], [488, "check-setup"], [489, "check-setup"], [490, "check-setup"], [491, "check-setup"], [495, "check-setup"], [496, "check-setup"], [497, "check-setup"], [499, "check-setup"], [502, "check-setup"], [503, "check-setup"], [504, "check-setup"], [505, "check-setup"], [506, "check-setup"], [509, "check-setup"], [511, "check-setup"], [512, "check-setup"], [513, "check-setup"], [514, "check-setup"], [515, "check-setup"], [523, "check-setup"], [524, "check-setup"], [526, "check-setup"]], "Check the dataset we produced": [[514, "check-the-dataset-we-produced"]], "Check your setup": [[427, "check-your-setup"]], "Checker": [[365, null]], "Chi2AsymmetricErrorFitStatistic": [[295, null]], "Chi2FitStatistic": [[296, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[392, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[417, "citation-scheme"]], "Class attributes": [[392, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[410, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[391, "clobber-or-overwrite"]], "Code in RST files": [[392, "code-in-rst-files"]], "Code in docstrings in Python files": [[392, "code-in-docstrings-in-python-files"]], "Code quality": [[422, "code-quality"]], "Collection of the personal information of authors": [[417, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[608, "colormaps"]], "Combining event lists and GTIs": [[537, "combining-event-lists-and-gtis"]], "Combining two Models": [[505, "combining-two-models"]], "Command line tools": [[603, null]], "Command not found": [[603, "command-not-found"]], "Common API": [[498, "common-api"]], "Compare against the literature": [[470, "compare-against-the-literature"]], "Compare results": [[488, "compare-results"]], "Comparing the posterior distribution of all runs": [[507, "comparing-the-posterior-distribution-of-all-runs"]], "Compound Spectral Model": [[506, "compound-spectral-model"]], "Compound spectral model": [[570, null]], "CompoundSpectralModel": [[224, null]], "Computation times": [[461, null], [467, null], [476, null], [485, null], [492, null], [510, null], [517, null], [520, null], [522, null], [527, null], [555, null], [566, null], [588, null], [599, null]], "Compute Flux Points": [[468, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[475, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[479, "compute-images"]], "Compute sensitivity": [[462, "compute-sensitivity"]], "Computing contours using stat_contour": [[499, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[499, "computing-contours-using-stat-surface"]], "Computing flux points": [[524, "computing-flux-points"]], "Conda Environments": [[423, "conda-environments"]], "Confidence contours": [[499, "confidence-contours"]], "Configurable analysis": [[601, "configurable-analysis"]], "Configuration": [[483, "configuration"]], "Configuration for stacked and joint analysis": [[477, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[469, "configuration-of-the-analysis"]], "Constant spatial model": [[557, null]], "Constant spectral model": [[571, null]], "Constant temporal model": [[590, null]], "ConstantFluxSpatialModel": [[225, null]], "ConstantSpatialModel": [[226, null]], "ConstantSpectralModel": [[227, null]], "ConstantTemporalModel": [[228, null]], "Context": [[464, "context"], [466, "context"], [468, "context"], [469, "context"], [470, "context"], [471, "context"], [472, "context"], [474, "context"], [475, "context"], [478, "context"], [480, "context"], [481, "context"], [483, "context"], [486, "context"], [488, "context"], [489, "context"], [490, "context"], [493, "context"], [494, "context"], [504, "context"], [507, "context"], [508, "context"], [509, "context"], [523, "context"], [524, "context"]], "Continuous integration": [[422, "continuous-integration"]], "Contribution in conferences": [[417, "contribution-in-conferences"]], "Contributors": [[431, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"], [435, "contributors"], [436, "contributors"], [437, "contributors"], [438, "contributors"], [439, "contributors"], [440, "contributors"], [443, "contributors"], [444, "contributors"], [445, "contributors"], [446, "contributors"], [447, "contributors"], [448, "contributors"], [449, "contributors"], [450, "contributors"], [451, "contributors"], [452, "contributors"], [453, "contributors"], [454, "contributors"], [455, "contributors"], [456, "contributors"], [457, "contributors"], [458, "contributors"], [459, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[391, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[391, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[553, "coordinates-defined-by-the-regiongeom"]], "Corner plot comparison": [[507, "corner-plot-comparison"]], "Correct format for bullet point list": [[392, "correct-format-for-bullet-point-list"]], "Counts": [[513, "counts"]], "Counts and fit statistics": [[605, "counts-and-fit-statistics"]], "Counts statistics classes": [[605, "counts-statistics-classes"]], "Covariance": [[212, null]], "Covariance and parameters errors": [[499, "covariance-and-parameters-errors"]], "CovarianceResult": [[213, null]], "Create DL4 product - PSFMap": [[501, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[498, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[504, "create-a-mask-in-energy"]], "Create a stacked dataset": [[475, "create-a-stacked-dataset"]], "Create edisp kernel map (DL4 product) - EDispKernelMap": [[501, "create-edisp-kernel-map-dl4-product-edispkernelmap"]], "Create exclusion mask": [[468, "create-exclusion-mask"], [475, "create-exclusion-mask"]], "Create exposure map (DL4 product)": [[501, "create-exposure-map-dl4-product"]], "Create the energy-dependent temporal model": [[482, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[524, "create-the-maker-classes-to-be-used"]], "Create the makers": [[464, "create-the-makers"]], "Create the mask from a catalog of sources": [[504, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[504, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[504, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[504, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[482, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[503, "creating-wcs-maps"]], "Creating a RegionGeom": [[553, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[553, "creating-a-regionndmap"]], "Creating a mask for fitting": [[504, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[504, "creating-a-mask-manually"]], "Creating an empty dataset": [[497, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[504, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[503, "creating-from-a-map-geometry"]], "Creating the config file": [[474, "creating-the-config-file"], [475, "creating-the-config-file"]], "Creation of the Flux points": [[469, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[489, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[489, "creation-of-the-datasets"]], "Creation of the model": [[469, "creation-of-the-model"]], "Creation of the theta2 plot": [[511, "creation-of-the-theta2-plot"]], "Cube plotting": [[503, "cube-plotting"]], "Cumulative excess and significance": [[464, "cumulative-excess-and-significance"]], "Current status": [[416, "current-status"]], "Custom models": [[600, "custom-models"]], "Cutouts": [[503, "cutouts"]], "Cython": [[422, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[417, "dco-implementation"]], "DL3 DR1": [[515, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[318, null]], "Dark matter": [[528, null]], "Dark matter spatial and spectral models": [[495, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[406, "data-fitting"]], "Data access and selection (DL3)": [[537, null]], "Data analysis": [[465, null], [518, "data-analysis"]], "Data analysis subpackages in gammapy": [[397, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[400, "data-and-observation-handling"]], "Data and models files": [[478, "data-and-models-files"]], "Data exploration": [[516, "data-exploration"], [518, "data-exploration"]], "Data reduction": [[406, "data-reduction"], [477, "data-reduction"], [477, "id1"], [493, "data-reduction"], [523, "data-reduction"], [524, "data-reduction"]], "Data reduction (DL3 to DL4)": [[548, null]], "Data reduction into a MapDataset": [[514, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[502, "data-reduction-loop"]], "Data selection": [[493, "data-selection"]], "Data structures": [[526, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [403, "dataset"], [502, "dataset"]], "Dataset helper / convenience methods": [[403, "dataset-helper-convenience-methods"]], "Dataset serialization": [[403, "dataset-serialization"]], "Dataset simulations": [[470, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[498, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[229, null]], "Datasets": [[100, null], [400, "datasets"], [403, "datasets"], [418, "datasets"], [497, "datasets"]], "Datasets (DL4)": [[536, null]], "Datasets - Reduced data, IRFs, models": [[497, null]], "Datasets serialization": [[478, "datasets-serialization"]], "DatasetsMaker": [[172, null]], "Datastore": [[512, "datastore"]], "Dealing with links": [[392, "dealing-with-links"]], "Decision": [[396, "decision"], [397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"], [401, "decision"], [402, "decision"], [403, "decision"], [404, "decision"], [405, "decision"], [406, "decision"], [407, "decision"], [408, "decision"], [409, "decision"], [410, "decision"], [411, "decision"], [412, "decision"], [413, "decision"], [414, "decision"], [415, "decision"], [416, "decision"], [417, "decision"], [418, "decision"], [419, "decision"], [420, "decision"]], "Define Target Region": [[468, "define-target-region"]], "Define a test position": [[511, "define-a-test-position"]], "Define an Observation": [[481, "define-an-observation"]], "Define an observation and make a dataset": [[482, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[462, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[479, "define-map-geometry"]], "Define the MapDataset": [[481, "define-the-mapdataset"]], "Define the ON region": [[470, "define-the-on-region"]], "Define the Sky model: a point-like source": [[481, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[464, "define-the-geometries"]], "Define the geometry": [[504, "define-the-geometry"]], "Define the model": [[524, "define-the-model"]], "Define the model to be used": [[488, "define-the-model-to-be-used"], [488, "id3"]], "Define the simulation source model": [[482, "define-the-simulation-source-model"]], "Define time intervals": [[489, "define-time-intervals"]], "Define underlying model": [[489, "define-underlying-model"]], "Defining the datastore and selecting observations": [[524, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[489, "defining-the-geometry"]], "Defining the sampler and options": [[507, "defining-the-sampler-and-options"]], "Definition of a Contributor": [[417, "definition-of-a-contributor"]], "Definition of the Maintainer": [[417, "definition-of-the-maintainer"]], "Definition of the data selection": [[488, "definition-of-the-data-selection"], [488, "id1"]], "Definition of the dataset geometry": [[488, "definition-of-the-dataset-geometry"], [488, "id2"]], "Dependencies": [[390, null], [408, "dependencies"]], "Deprecating a function or a class": [[391, "deprecating-a-function-or-a-class"]], "Deprecation": [[416, "deprecation"]], "Derivation of the WStat formula": [[606, null]], "Detailed plan": [[398, "detailed-plan"]], "Developer How To": [[391, null]], "Developer guide": [[393, null]], "Discussion / Alternatives": [[406, "discussion-alternatives"]], "Disk spatial model": [[558, null]], "DiskSpatialModel": [[230, null]], "Dissolve gammapy.background": [[410, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[410, "dissolve-gammapy-image"]], "Distributions": [[408, "distributions"], [408, "id1"]], "Docstring formatting": [[392, "docstring-formatting"]], "Documentation": [[400, "documentation"], [458, "documentation"]], "Documentation How To": [[392, null]], "Documentation building": [[392, "documentation-building"]], "Documentation guidelines": [[392, "documentation-guidelines"]], "Documentation improvements": [[459, "documentation-improvements"]], "Download": [[422, "download"]], "EBL absorption spectral model": [[568, null]], "EBLAbsorptionNormSpectralModel": [[231, null]], "EBL_DATA_BUILTIN": [[232, null]], "EDispKernel": [[153, null]], "EDispKernelMap": [[154, null]], "EDispMap": [[155, null]], "ESTIMATOR_REGISTRY": [[121, null]], "Effective Area": [[501, "effective-area"]], "Effective area": [[512, "effective-area"], [542, null]], "EffectiveAreaTable2D": [[156, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[414, "energy-dependent-spatial-models"]], "Energy Dispersion": [[501, "energy-dispersion"], [513, "energy-dispersion"], [544, null]], "Energy dispersion": [[512, "energy-dispersion"]], "Energy edges": [[538, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[122, null]], "EnergyDependentMultiGaussPSF": [[157, null]], "EnergyDispersion2D": [[158, null]], "Estimating TS": [[605, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[494, null]], "Estimator": [[123, null]], "Estimators": [[418, "estimators"], [498, null]], "Estimators (DL4 to DL5, and DL6)": [[538, null]], "Event Simulation": [[400, "event-simulation"]], "Event lists": [[526, "event-lists"]], "Event sampling": [[481, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[512, "events"], [513, "events"]], "Example": [[604, "example"], [604, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[509, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[509, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[587, "example-of-extrapolation"]], "Example plot": [[557, "example-plot"], [558, "example-plot"], [559, "example-plot"], [560, "example-plot"], [561, "example-plot"], [562, "example-plot"], [563, "example-plot"], [564, "example-plot"], [565, "example-plot"], [568, "example-plot"], [569, "example-plot"], [570, "example-plot"], [571, "example-plot"], [572, "example-plot"], [573, "example-plot"], [574, "example-plot"], [575, "example-plot"], [576, "example-plot"], [577, "example-plot"], [578, "example-plot"], [579, "example-plot"], [580, "example-plot"], [581, "example-plot"], [582, "example-plot"], [583, "example-plot"], [584, "example-plot"], [585, "example-plot"], [586, "example-plot"], [587, "example-plot"], [590, "example-plot"], [591, "example-plot"], [592, "example-plot"], [593, "example-plot"], [594, "example-plot"], [595, "example-plot"], [596, "example-plot"]], "Examples using Analysis": [[539, "examples-using-analysis"]], "Examples using FluxPointsEstimator": [[538, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[538, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[536, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[548, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[536, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[548, "examples-using-spectrumdatasetmaker"]], "Examples using catalog": [[535, "examples-using-catalog"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[547, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[549, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[605, "excess-and-significance"], [605, "id2"]], "Excess errors": [[605, "excess-errors"], [605, "id4"]], "Excess estimators": [[415, "excess-estimators"]], "ExcessMapEstimator": [[124, null]], "Exclusion masks": [[504, "exclusion-masks"]], "Execution": [[603, "execution"]], "Exemplary additional prior subclasses:": [[419, "exemplary-additional-prior-subclasses"]], "Exercises": [[462, "exercises"], [466, "exercises"], [468, "exercises"], [471, "exercises"], [477, "exercises"], [479, "exercises"], [481, "exercises"], [482, "exercises"], [490, "exercises"], [493, "exercises"], [512, "exercises"], [513, "exercises"], [514, "exercises"], [515, "exercises"], [526, "exercises"], [526, "id1"], [526, "id2"], [526, "id3"]], "Existing code": [[397, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[233, null]], "ExpCutoffPowerLawNormSpectralModel": [[234, null]], "ExpCutoffPowerLawSpectralModel": [[235, null]], "ExpDecay temporal model": [[591, null]], "ExpDecayTemporalModel": [[236, null]], "Expected number of detected events": [[545, "expected-number-of-detected-events"]], "Exploration of the fit results": [[469, "exploration-of-the-fit-results"]], "Explore the fit results": [[464, "explore-the-fit-results"]], "Explore the results": [[464, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[466, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[574, null]], "Exponential cutoff power law spectral model": [[572, null]], "Exponential cutoff power law spectral model used for 3FGL": [[573, null]], "Expose model parameters as attributes": [[402, "expose-model-parameters-as-attributes"]], "Exposure": [[513, "exposure"]], "Extended source using a template": [[481, "extended-source-using-a-template"]], "Extract the light curve": [[489, "extract-the-light-curve"]], "Extract the lightcurve": [[490, "extract-the-lightcurve"]], "Extracting the light curve": [[488, "extracting-the-light-curve"]], "Extracting the ring background": [[475, "extracting-the-ring-background"]], "Factorisation of the gamma-ray IRFs": [[545, "factorisation-of-the-gamma-ray-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[421, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[478, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[513, null]], "FermiST": [[528, "fermist"]], "FermipyDatasetsReader": [[101, null]], "Files": [[512, "files"]], "Filling a RegionNDMap": [[553, "filling-a-regionndmap"]], "Filling maps from event lists": [[503, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[503, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[489, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[396, "final-remarks"]], "Final result": [[606, "final-result"]], "Fit": [[214, null], [486, "fit"], [513, "fit"]], "Fit quality and model residuals": [[468, "fit-quality-and-model-residuals"], [470, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[499, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[477, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[477, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[468, "fit-spectrum"], [470, "fit-spectrum"]], "Fit statistics": [[604, null]], "Fit the datasets": [[490, "fit-the-datasets"]], "Fit the model": [[524, "fit-the-model"]], "FitResult": [[215, null]], "Fitting": [[400, "fitting"], [499, null]], "Fitting Multiple Datasets with and without the Prior": [[509, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[509, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[499, "fitting-options"]], "Fitting temporal models": [[490, "fitting-temporal-models"]], "Fitting the obtained light curve": [[490, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[391, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[391, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[498, "flux-points-estimation"]], "Flux Profile Estimation": [[483, null]], "Flux maps": [[538, "flux-maps"]], "Flux maps for annihilation": [[495, "flux-maps-for-annihilation"]], "Flux maps for decay": [[495, "flux-maps-for-decay"]], "Flux point fitting": [[466, null]], "Flux points": [[496, "flux-points"], [523, "flux-points"], [538, "flux-points"]], "Flux quantities": [[538, "flux-quantities"]], "FluxMaps": [[125, null]], "FluxMetaData": [[126, null]], "FluxPoints": [[127, null]], "FluxPointsDataset": [[102, null], [403, "fluxpointsdataset"], [497, "fluxpointsdataset"]], "FluxPointsEstimator": [[128, null]], "FluxProfileEstimator": [[129, null]], "FoV background": [[502, "fov-background"], [547, null]], "FoVAlignment": [[159, null]], "FoVBackgroundMaker": [[173, null]], "FoVBackgroundModel": [[237, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[494, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[505, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[392, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[391, "functions-returning-several-values"]], "Fundamental Concepts: Gammapy analysis workflow and package structure": [[601, null]], "Further extensions": [[463, "further-extensions"]], "Further references": [[604, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[513, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[530, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[495, "gamma-ray-spectra-at-production"]], "Gammapy": [[429, null]], "Gammapy Binder": [[422, "id1"]], "Gammapy overview": [[411, "gammapy-overview"]], "Gammapy repository": [[422, "gammapy-repository"]], "Gammapy webpages": [[422, "gammapy-webpages"]], "Gaussian spatial model": [[559, null]], "Gaussian spectral model": [[575, null]], "Gaussian temporal model": [[592, null]], "GaussianPrior": [[238, null]], "GaussianSpatialModel": [[239, null]], "GaussianSpectralModel": [[240, null]], "GaussianTemporalModel": [[241, null]], "General Gammapy publications": [[417, "general-gammapy-publications"]], "General code style guidelines": [[397, "general-code-style-guidelines"]], "General conventions": [[391, "general-conventions"]], "General idea and class diagram": [[401, "general-idea-and-class-diagram"]], "General method": [[538, "general-method"]], "General organization of the new approach": [[406, "general-organization-of-the-new-approach"]], "Generalist estimators": [[415, "generalist-estimators"]], "Generalized Gaussian temporal model": [[593, null]], "Generalized gaussian spatial model": [[560, null]], "GeneralizedGaussianSpatialModel": [[242, null]], "GeneralizedGaussianTemporalModel": [[243, null]], "Generating log messages": [[391, "generating-log-messages"]], "Geom": [[194, null]], "Get a fit stat profile for the redshift": [[463, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[394, "get-in-touch-early"]], "Get set up": [[394, "get-set-up"]], "Get some data": [[511, "get-some-data"]], "Get the flux points": [[463, "get-the-flux-points"]], "Getting started": [[411, "getting-started"], [424, null], [529, "getting-started"], [530, "getting-started"], [531, "getting-started"]], "Getting started section restructuring": [[411, "getting-started-section-restructuring"]], "Getting started with data": [[537, "getting-started-with-data"]], "Getting started with maps": [[552, "getting-started-with-maps"]], "Getting the reduced dataset": [[474, "getting-the-reduced-dataset"], [475, "getting-the-reduced-dataset"]], "Global Model Handling": [[413, "global-model-handling"]], "Glossary": [[602, "glossary"]], "Glossary and references": [[602, null]], "Goodness of fit": [[606, "goodness-of-fit"]], "Guidelines and specific actions": [[411, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[515, null]], "HAWC data access and reduction": [[514, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[514, null]], "HAWC: 1D dataset for flux point fitting": [[478, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[326, null]], "HEALPix geometry": [[551, "healpix-geometry"]], "HEALPix-based maps": [[551, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[478, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[417, "handling-of-conference-material"]], "Help!?": [[427, "help"]], "Hierarchical clustering of observations": [[508, "hierarchical-clustering-of-observations"]], "Hierarchy": [[418, "hierarchy"]], "High Level Analysis Interface": [[539, null]], "High level interface": [[400, "high-level-interface"], [523, null]], "How To": [[411, "how-to"], [540, null]], "How to contribute to Gammapy": [[394, null]], "How to get data values": [[503, "how-to-get-data-values"]], "How to handle API breaking changes?": [[391, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[421, null]], "How to make a pull request": [[391, "how-to-make-a-pull-request"]], "How to set data values": [[503, "how-to-set-data-values"]], "How to use logging": [[391, "how-to-use-logging"]], "How to use random numbers": [[391, "how-to-use-random-numbers"]], "How to write code": [[391, "how-to-write-code"]], "How to write tests": [[391, "how-to-write-tests"]], "HpxGeom": [[195, null]], "HpxMap": [[196, null]], "HpxNDMap": [[197, null]], "IPython": [[428, "id3"]], "IRF": [[160, null], [418, "irf"]], "IRF axis naming": [[545, "irf-axis-naming"]], "IRFMap": [[161, null]], "IRF_REGISTRY": [[162, null]], "IRFs": [[400, "irfs"], [512, "irfs"]], "Image Plotting": [[503, "image-plotting"]], "ImageProfile": [[130, null]], "ImageProfileEstimator": [[131, null]], "Images and masks": [[405, "images-and-masks"]], "Implement default parameters": [[402, "implement-default-parameters"]], "Implement evaluation region specifications": [[402, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[402, "implement-sky-coordinate-handling"]], "Implementation": [[411, "implementation"], [419, "implementation"]], "Implementation Outline": [[419, "implementation-outline"]], "Implementation impact": [[420, "implementation-impact"]], "Implementation road map": [[401, "implementation-road-map"]], "Implementing a custom model": [[506, "implementing-a-custom-model"]], "Implementing a custom prior": [[509, "implementing-a-custom-prior"]], "Imports and versions": [[486, "imports-and-versions"]], "Improve SourceModels class": [[402, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[402, "improve-and-implement-model-serilization"]], "Improve spatial models": [[402, "improve-spatial-models"]], "In the RST files": [[392, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[501, "inbuilt-gammapy-irfs"]], "Include png files as images": [[392, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[503, "indexing-and-slicing-sub-maps"]], "Individual run analysis": [[507, "individual-run-analysis"]], "Infrastructure": [[459, "infrastructure"]], "Inspect the reduced dataset": [[524, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[524, "inspecting-residuals"]], "Install issues": [[427, "install-issues"]], "Installation": [[411, "installation"], [424, "installation"], [425, null]], "Instrument Response Functions (DL3)": [[545, null]], "Interaction Between Models and Dataset Objects": [[413, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[552, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[503, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[391, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[414, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[415, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[415, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[415, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[412, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[412, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[412, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[410, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[412, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[402, "introduce-naming-scheme-for-models"]], "Introduction": [[402, "introduction"], [405, "introduction"], [406, "introduction"], [408, "introduction"], [409, "introduction"], [411, "introduction"], [415, "introduction"], [417, "introduction"], [418, "introduction"], [462, "introduction"], [468, "introduction"], [470, "introduction"], [479, "introduction"], [491, "introduction"], [495, "introduction"], [496, "introduction"], [497, "introduction"], [502, "introduction"], [503, "introduction"], [512, "introduction"], [513, "introduction"], [514, "introduction"], [515, "introduction"], [518, "introduction"], [525, null], [526, "introduction"], [528, "introduction"], [530, "introduction"], [531, "introduction"], [604, "introduction"]], "Introduction of background models": [[402, "introduction-of-background-models"]], "Introduction of model name attributes": [[402, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[402, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[340, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[513, "isotropic-diffuse-background"]], "Iterating by image": [[503, "iterating-by-image"]], "J Factors": [[495, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[536, "joint-analysis"]], "Joint analysis": [[477, "joint-analysis"], [478, "joint-analysis"]], "Jupyter": [[424, "id2"], [426, "jupyter"]], "Jupyter notebooks": [[428, "jupyter-notebooks"]], "Key Features": [[498, "key-features"]], "Known issues": [[459, "known-issues"]], "LabelMapAxis": [[198, null], [503, "labelmapaxis"]], "Latest CTAO performance files": [[512, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[403, "lazy-loading-of-datasets"]], "LazyFitsData": [[327, null]], "Let\u2019s simulate the model": [[482, "let-s-simulate-the-model"]], "Light Curve Fitting": [[406, "light-curve-fitting"]], "Light Curve estimation by observation": [[488, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[598, null]], "Light curves": [[488, null]], "Light curves for flares": [[489, null]], "LightCurveEstimator": [[132, null]], "LightCurveTemplateTemporalModel": [[244, null]], "Lightcurve": [[406, "lightcurve"]], "Lightcurves": [[496, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[406, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[401, "limitations"]], "Linear temporal model": [[594, null]], "LinearTemporalModel": [[245, null]], "Links to documentation": [[392, "links-to-documentation"]], "Links to other tutorials": [[392, "links-to-other-tutorials"]], "List available catalogs": [[496, "list-available-catalogs"]], "Load Data": [[468, "load-data"]], "Load IRFs and prepare dataset": [[462, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[496, "load-catalogs"]], "Load data": [[470, "load-data"]], "Load spectral points": [[466, "load-spectral-points"]], "Load the data": [[463, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[498, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[514, "load-the-tables"]], "Loading models from a catalog": [[505, "loading-models-from-a-catalog"]], "Loading the spectral datasets": [[507, "loading-the-spectral-datasets"]], "Locate origin of warnings": [[391, "locate-origin-of-warnings"]], "Log parabola spectral model": [[576, null]], "Log parabola spectral norm model": [[577, null]], "Log-Parabola Fit": [[466, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[246, null]], "LogParabolaSpectralModel": [[247, null]], "LogSpiral": [[34, null]], "LogUniformPrior": [[248, null]], "Long Term Support releases": [[417, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[524, null]], "Low level map and cube analysis": [[397, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[174, null]], "METHOD_DEFAULT": [[334, null]], "METHOD_KWARGS_DEFAULT": [[335, null]], "MODEL_REGISTRY": [[249, null]], "Maintainer and developer perspective": [[398, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[400, "maintenance-and-code-quality"]], "Make a Bugfix release": [[421, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[491, "make-a-li-ma-test-over-the-events"]], "Make a theta-square plot": [[511, null]], "Make sky images": [[479, "make-sky-images"]], "Make small pull requests": [[394, "make-small-pull-requests"]], "Maker": [[175, null]], "Makers": [[418, "makers"]], "Makers - Data reduction": [[502, null]], "Making a butterfly plot": [[524, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[391, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[391, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[391, "making-a-pull-request-with-new-or-modified-datasets"]], "Making a theta2 plot for a given energy range": [[511, "making-a-theta2-plot-for-a-given-energy-range"]], "Manual grouping of observations": [[508, "manual-grouping-of-observations"]], "Map": [[199, null]], "Map Analysis / Data Reduction": [[400, "map-analysis-data-reduction"]], "MapAxes": [[200, null]], "MapAxis": [[201, null]], "MapCoord": [[202, null], [552, "mapcoord"]], "MapDataset": [[103, null], [403, "mapdataset"], [497, "mapdataset"]], "MapDatasetEventSampler": [[104, null], [404, "mapdataseteventsampler"]], "MapDatasetMaker": [[176, null]], "MapDatasetMetaData": [[105, null]], "MapDatasetOnOff": [[106, null], [403, "mapdatasetonoff"]], "MapPanelPlotter": [[378, null]], "Maps": [[203, null], [400, "maps"], [503, null], [526, "maps"]], "Maps operations": [[503, "maps-operations"]], "Mask dilation and erosion": [[504, "mask-dilation-and-erosion"]], "Mask maps": [[504, null]], "Mask modifications": [[504, "mask-modifications"]], "Mask some sky regions": [[504, "mask-some-sky-regions"]], "Masks for fitting": [[504, "masks-for-fitting"]], "Masks operations": [[504, "masks-operations"]], "Meetings": [[400, "meetings"]], "Metadata API": [[418, "metadata-api"]], "Metadata files": [[417, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[418, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[494, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[250, null]], "Minor changes": [[412, "minor-changes"]], "Mission elapsed times (MET)": [[607, "mission-elapsed-times-met"]], "Model": [[251, null]], "Model Gallery": [[516, null], [518, "model-gallery"]], "Model and dataset": [[499, "model-and-dataset"], [509, "model-and-dataset"]], "Model definition": [[507, "model-definition"]], "Model fit": [[479, "model-fit"]], "Model fitting": [[469, "model-fitting"], [523, "model-fitting"]], "Model gallery": [[554, null]], "Model lists and serialisation": [[506, "model-lists-and-serialisation"]], "Model the observed spectrum": [[463, "model-the-observed-spectrum"]], "ModelBase": [[252, null]], "Modeling": [[400, "modeling"], [418, "modeling"], [493, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[600, null]], "Modeling and fitting": [[477, "modeling-and-fitting"]], "Modelling": [[474, "modelling"], [505, null]], "Models": [[253, null], [506, null]], "Models with energy dependent morphology": [[506, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[506, "models-with-shared-parameter"]], "Modifying Data": [[503, "modifying-data"]], "Modifying model parameters": [[506, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[480, null]], "Motivation": [[419, "motivation"], [420, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[478, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[336, null]], "Naima spectral model": [[578, null]], "NaimaSpectralModel": [[254, null]], "Need of four individual responses": [[545, "need-of-four-individual-responses"]], "New features": [[454, "new-features"], [457, "new-features"], [458, "new-features"], [459, "new-features"]], "Next steps": [[512, "next-steps"], [514, "next-steps"], [515, "next-steps"]], "Night-wise LC estimation": [[488, "night-wise-lc-estimation"]], "Norm Spectral Models": [[506, "norm-spectral-models"]], "Notations": [[605, "notations"]], "Note": [[499, "note"]], "Notes": [[604, "notes"]], "OGIPDatasetReader": [[107, null]], "OGIPDatasetWriter": [[108, null]], "Object text repr, str and info": [[391, "object-text-repr-str-and-info"]], "Objective": [[474, "objective"], [475, "objective"], [481, "objective"], [482, "objective"], [508, "objective"]], "Objectives": [[401, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[502, "observation-duration-and-effective-livetime"]], "Observation selection": [[469, "observation-selection"], [523, "observation-selection"]], "ObservationEventSampler": [[109, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[508, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[480, "obtain-the-data-to-use"]], "Obtain the observations": [[508, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[462, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[422, "old-example-data"]], "On-Off analysis": [[471, "on-off-analysis"]], "Opening the data": [[491, "opening-the-data"]], "OptimizeResult": [[216, null]], "Optional dependencies": [[390, "optional-dependencies"], [408, "optional-dependencies"]], "Other folders": [[422, "other-folders"]], "Other packages": [[528, "other-packages"]], "Other repositories": [[422, "other-repositories"]], "Other types of maps": [[552, "other-types-of-maps"]], "Others": [[391, "others"], [422, "others"]], "Outlook": [[403, "outlook"], [405, "outlook"], [407, "outlook"], [408, "outlook"], [410, "outlook"], [411, "outlook"], [412, "outlook"], [415, "outlook"]], "Output in Jupyter notebook cells": [[391, "output-in-jupyter-notebook-cells"]], "Outputs from the Nested Sampling": [[420, "outputs-from-the-nested-sampling"]], "Overview": [[547, "overview"], [549, "overview"], [550, "overview"]], "PIG 1 - PIG purpose and guidelines": [[396, null]], "PIG 10 - Regions": [[405, null]], "PIG 11 - Light curves": [[406, null]], "PIG 12 - High level interface": [[407, null]], "PIG 13 - Gammapy dependencies and distribution": [[408, null]], "PIG 14 - Uncertainty estimation": [[409, null]], "PIG 16 - Gammapy package structure": [[410, null]], "PIG 18 - Documentation": [[411, null]], "PIG 19 - Gammapy package structure follow up": [[412, null]], "PIG 2 - Organization of low level analysis code": [[397, null]], "PIG 20 - Global Model API": [[413, null]], "PIG 21 - Models improvements": [[414, null]], "PIG 22 - Unified flux estimators API": [[415, null]], "PIG 23 - Gammapy release cycle and version numbering": [[416, null]], "PIG 24 - Authorship policy": [[417, null]], "PIG 25 - Metadata container for Gammapy": [[418, null]], "PIG 26 - Model Priors API": [[419, null]], "PIG 27 - Bayesian Inference using Nested Sampling": [[420, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[398, null]], "PIG 4 - Setup for tutorial notebooks and data": [[399, null]], "PIG 5 - Gammapy 1.0 roadmap": [[400, null]], "PIG 6 - CTA observation handling": [[401, null]], "PIG 7 - Models": [[402, null]], "PIG 8 - Datasets": [[403, null]], "PIG 9 - Event sampling": [[404, null]], "PIG review": [[396, "pig-review"]], "PIG status": [[396, "pig-status"]], "PIGs": [[395, null]], "POOL_KWARGS_DEFAULT": [[337, null]], "PSF": [[501, "psf"], [513, "psf"]], "PSF3D": [[163, null]], "PSFKernel": [[164, null]], "PSFKing": [[165, null]], "PSFMap": [[166, null]], "PWN": [[50, null]], "Package / API": [[500, null], [518, "package-api"]], "Package and docs": [[422, "package-and-docs"]], "Package structure and dependencies": [[445, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[400, "papers"]], "Parallel evaluation of datasets": [[403, "parallel-evaluation-of-datasets"]], "Parameter": [[217, null]], "ParameterEstimator": [[133, null]], "ParameterSensitivityEstimator": [[134, null]], "Parameters": [[218, null]], "ParametricPSF": [[167, null]], "Perform spectral model fitting": [[464, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[524, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[464, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[404, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[597, null]], "Phase-resolved map": [[491, "phase-resolved-map"]], "Phase-resolved spectrum": [[491, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[177, null]], "Phasogram": [[491, "phasogram"]], "Piecewise  norm spectral model": [[579, null]], "Piecewise norm spatial model": [[561, null]], "PiecewiseNormSpatialModel": [[255, null]], "PiecewiseNormSpectralModel": [[256, null]], "Pixel coordinate convention": [[391, "pixel-coordinate-convention"]], "Plot": [[479, "plot"]], "Plot off regions": [[468, "plot-off-regions"]], "Plot the fitted spectrum": [[524, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[463, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[483, "plotting-results"]], "Plotting a RegionGeom": [[553, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[505, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[469, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[553, "plotting-the-map-content"]], "Plotting the results": [[480, "plotting-the-results"]], "Plotting the underlying region": [[553, "plotting-the-underlying-region"]], "Point Spread Function": [[546, null]], "Point source sensitivity": [[462, null]], "Point spatial model": [[562, null]], "Point spread function": [[512, "point-spread-function"]], "PointSpatialModel": [[257, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[417, "possible-implementations"]], "Post release": [[421, "post-release"]], "Power Law Fit": [[466, "power-law-fit"]], "Power law 2 spectral model": [[581, null]], "Power law norm spectral model": [[582, null]], "Power law spectral model": [[580, null]], "PowerLaw temporal model": [[595, null]], "PowerLaw2SpectralModel": [[258, null]], "PowerLawNormSpectralModel": [[259, null]], "PowerLawSpectralModel": [[260, null]], "PowerLawTemporalModel": [[261, null]], "Predicted counts": [[536, "predicted-counts"]], "Prepare and run the event sampler": [[482, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[464, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[524, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[464, "prerequisites"], [466, "prerequisites"], [468, "prerequisites"], [469, "prerequisites"], [470, "prerequisites"], [471, "prerequisites"], [474, "prerequisites"], [478, "prerequisites"], [480, "prerequisites"], [481, "prerequisites"], [482, "prerequisites"], [483, "prerequisites"], [486, "prerequisites"], [488, "prerequisites"], [489, "prerequisites"], [490, "prerequisites"], [494, "prerequisites"], [499, "prerequisites"], [504, "prerequisites"], [505, "prerequisites"], [509, "prerequisites"], [523, "prerequisites"], [524, "prerequisites"]], "Pretty-print source information": [[496, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[262, null]], "PriorParameter": [[219, null]], "PriorParameters": [[220, null]], "Priors": [[509, null]], "Profile Estimation": [[483, "profile-estimation"]], "Profile Likelihood": [[606, "profile-likelihood"]], "Profiles": [[495, "profiles"]], "Project Management": [[400, "project-management"]], "Project setup": [[422, null]], "Projects": [[400, "projects"]], "Proposal": [[399, "proposal"], [401, "proposal"], [402, "proposal"], [403, "proposal"], [404, "proposal"], [405, "proposal"], [406, "proposal"], [407, "proposal"], [409, "proposal"], [410, "proposal"], [411, "proposal"], [412, "proposal"], [413, "proposal"], [414, "proposal"], [420, "proposal"]], "Proposal of API for flux estimate results": [[415, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[483, "proposed-approach"]], "Proposed approach": [[464, "proposed-approach"], [466, "proposed-approach"], [469, "proposed-approach"], [471, "proposed-approach"], [472, "proposed-approach"], [474, "proposed-approach"], [475, "proposed-approach"], [478, "proposed-approach"], [481, "proposed-approach"], [482, "proposed-approach"], [486, "proposed-approach"], [488, "proposed-approach"], [489, "proposed-approach"], [490, "proposed-approach"], [493, "proposed-approach"], [494, "proposed-approach"], [499, "proposed-approach"], [504, "proposed-approach"], [505, "proposed-approach"], [507, "proposed-approach"], [508, "proposed-approach"], [523, "proposed-approach"], [524, "proposed-approach"]], "Proposed class diagram": [[401, "proposed-class-diagram"]], "Proposed metadata classes": [[418, "proposed-metadata-classes"]], "Proposed solution": [[418, "proposed-solution"]], "Pull Requests": [[445, "pull-requests"], [446, "pull-requests"], [454, "pull-requests"], [455, "pull-requests"], [456, "pull-requests"], [457, "pull-requests"], [458, "pull-requests"], [459, "pull-requests"]], "Pull requests": [[431, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"], [436, "pull-requests"], [437, "pull-requests"], [438, "pull-requests"], [439, "pull-requests"], [440, "pull-requests"], [441, "pull-requests"], [442, "pull-requests"], [443, "pull-requests"], [444, "pull-requests"], [447, "pull-requests"], [448, "pull-requests"], [449, "pull-requests"], [450, "pull-requests"], [451, "pull-requests"], [452, "pull-requests"], [453, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[532, null]], "Pulsar Wind Nebula Source Models": [[533, null]], "Pulsar analysis": [[491, null]], "Python": [[428, "id2"]], "Python scripts": [[428, "python-scripts"]], "Python version support": [[391, "python-version-support"]], "RadMax2D": [[168, null]], "Read and Introduce Data": [[483, "read-and-introduce-data"]], "Read in input images": [[472, "read-in-input-images"]], "Read the datasets": [[505, "read-the-datasets"]], "Read the energy-dependent model": [[482, "read-the-energy-dependent-model"]], "Reading Maps": [[503, "reading-maps"]], "Reading and Writing": [[503, "reading-and-writing"]], "Reading and writing masks": [[504, "reading-and-writing-masks"]], "Reading different datasets": [[478, "reading-different-datasets"]], "RecoPSFMap": [[169, null]], "Recommended Setup": [[424, "recommended-setup"], [426, null]], "Reference": [[411, "reference"], [603, "reference"]], "References": [[602, "publications"], [605, "references"]], "Reflected regions background": [[502, "reflected-regions-background"], [549, null]], "ReflectedRegionsBackgroundMaker": [[178, null]], "ReflectedRegionsFinder": [[179, null]], "Region arguments": [[405, "region-arguments"]], "RegionGeom": [[204, null], [553, "regiongeom"]], "RegionGeom and RegionNDMap": [[553, null]], "RegionGeom and coordinates": [[553, "regiongeom-and-coordinates"]], "RegionNDMap": [[205, null], [553, "regionndmap"]], "RegionsFinder": [[180, null]], "Relation to WCS geometries": [[553, "relation-to-wcs-geometries"]], "Release notes": [[391, "release-notes"], [430, null]], "Release preparation, feature freeze": [[416, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[416, "release-scheduling-and-lts"]], "Releases": [[400, "releases"], [417, "releases"], [422, "releases"]], "Releasing the final version of the major release": [[421, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[421, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[505, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[391, "removing-an-attribute"]], "Renaming an argument": [[391, "renaming-an-argument"]], "Required dependencies": [[390, "required-dependencies"], [408, "required-dependencies"]], "Requirements": [[418, "requirements"]], "Resampling datasets": [[497, "resampling-datasets"]], "Residual instrumental background rate": [[545, "residual-instrumental-background-rate"]], "Resolve gammapy.detect": [[412, "resolve-gammapy-detect"]], "Results": [[462, "results"], [507, "results"]], "Results exploration": [[469, "results-exploration"]], "Ring background": [[502, "ring-background"], [550, null]], "Ring background map": [[475, null]], "RingBackgroundMaker": [[181, null]], "Rotated regions": [[405, "rotated-regions"]], "Run Estimation": [[483, "run-estimation"]], "Run Estimator": [[480, "run-estimator"]], "Run data reduction chain": [[468, "run-data-reduction-chain"], [470, "run-data-reduction-chain"]], "Run the 1D data reduction": [[488, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[488, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[603, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[394, "running-tests-building-documentation"]], "Running the Data Reduction": [[469, "running-the-data-reduction"]], "Running the analysis": [[523, "running-the-analysis"]], "Running the estimation": [[469, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[469, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[469, "running-the-fit"]], "Running the light curve extraction in 1D": [[488, "running-the-light-curve-extraction-in-1d"]], "SED types": [[538, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[263, null]], "SPECTRAL_MODEL_REGISTRY": [[264, null]], "Safe data range definition": [[548, "safe-data-range-definition"]], "Safe data range handling": [[502, "safe-data-range-handling"]], "SafeMaskMaker": [[182, null]], "Sample a source with energy-dependent temporal evolution": [[482, null]], "Sampler": [[221, null]], "SamplerResult": [[222, null]], "Sampling methods": [[404, "sampling-methods"]], "Sampling the source and background events": [[481, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[469, "save-dataset-to-disk"], [523, "save-dataset-to-disk"], [524, "save-dataset-to-disk"]], "ScaleSpectralModel": [[265, null]], "ScaledRegularGridInterpolator": [[330, null]], "Scripts": [[518, "scripts"], [519, null]], "Select a catalog subset": [[496, "select-a-catalog-subset"]], "Select a source": [[496, "select-a-source"]], "Select observations": [[479, "select-observations"]], "Select the ON region": [[464, "select-the-on-region"]], "Select the data": [[464, "select-the-data"], [489, "select-the-data"]], "Selecting models contributing to a given region": [[505, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[505, "selecting-models-from-a-list"]], "SensitivityEstimator": [[135, null]], "Serialisation": [[419, "serialisation"], [501, "serialisation"], [501, "id1"], [501, "id2"], [513, "serialisation"]], "Serialisation and I/O": [[483, "serialisation-and-i-o"]], "Serialisation of datasets": [[536, "serialisation-of-datasets"]], "Serialisation of the fit result": [[469, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[469, "serialisation-of-the-results"]], "Serialisation of the samples": [[420, "serialisation-of-the-samples"]], "Serialising models": [[505, "serialising-models"]], "Serialization": [[418, "serialization"]], "Setting fitting parameters": [[469, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[523, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[523, "setting-the-background-normalization-maker"]], "Setting the data to use": [[523, "setting-the-data-to-use"]], "Setting the exclusion mask": [[469, "setting-the-exclusion-mask"], [523, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[523, "setting-the-reduced-datasets-geometry"]], "Setup": [[462, "setup"], [463, "setup"], [464, "setup"], [466, "setup"], [468, "setup"], [469, "setup"], [470, "setup"], [471, "setup"], [472, "setup"], [474, "setup"], [475, "setup"], [479, "setup"], [480, "setup"], [481, "setup"], [482, "setup"], [483, "setup"], [488, "setup"], [489, "setup"], [490, "setup"], [493, "setup"], [494, "setup"], [495, "setup"], [497, "setup"], [502, "setup"], [503, "setup"], [504, "setup"], [505, "setup"], [506, "setup"], [507, "setup"], [511, "setup"], [512, "setup"], [513, "setup"], [523, "setup"], [524, "setup"], [526, "setup"]], "Shell spatial model": [[563, null]], "Shell2 spatial model": [[564, null]], "Shell2SpatialModel": [[266, null]], "ShellSpatialModel": [[267, null]], "Show images": [[479, "show-images"]], "Show the results tables": [[480, "show-the-results-tables"]], "Show various observation quantities": [[508, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[414, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[414, "simplify-yaml-representation"]], "Simulate multiple event lists": [[481, "simulate-multiple-event-lists"]], "Simulating a light curve": [[490, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[490, null]], "Simulation": [[486, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[403, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[471, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[596, null]], "SineTemporalModel": [[268, null]], "Skip unit tests for some Astropy versions": [[391, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[405, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[552, null]], "SkyModel": [[269, null], [506, "skymodel"]], "Smooth broken power law spectral model": [[583, null]], "SmoothBrokenPowerLawSpectralModel": [[270, null]], "Some terminology": [[401, "some-terminology"]], "Source Detection": [[479, "source-detection"]], "Source candidates": [[472, "source-candidates"]], "Source catalogs": [[496, null], [526, "source-catalogs"], [535, null]], "Source detection and significance maps": [[472, null]], "Source information": [[496, "source-information"]], "Source models": [[496, "source-models"], [512, "source-models"]], "Source object": [[496, "source-object"]], "Source statistic": [[468, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[402, "sourceirfmodel"]], "Spatial analysis": [[479, "spatial-analysis"]], "Spatial models": [[506, "spatial-models"], [554, "spatial-models"], [556, null]], "SpatialIRFModel": [[402, "spatialirfmodel"]], "SpatialModel": [[271, null]], "Special cases": [[606, "special-cases"]], "Specificities of the HGPS catalog": [[496, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[414, "spectral-absorption-model"]], "Spectral Norm Models": [[414, "spectral-norm-models"]], "Spectral analysis": [[468, null]], "Spectral analysis of extended sources": [[464, null]], "Spectral analysis with energy-dependent directional cuts": [[470, null]], "Spectral analysis with the HLI": [[469, null]], "Spectral models": [[506, "spectral-models"], [554, "spectral-models"], [567, null]], "Spectral models and flux points": [[526, "spectral-models-and-flux-points"]], "Spectral points": [[479, "spectral-points"]], "SpectralIRFModel": [[402, "spectralirfmodel"]], "SpectralModel": [[272, null]], "Spectrum": [[479, "spectrum"]], "Spectrum dataset": [[502, "spectrum-dataset"]], "SpectrumDataset": [[110, null], [403, "spectrumdataset"], [497, "spectrumdataset"]], "SpectrumDatasetMaker": [[183, null]], "SpectrumDatasetOnOff": [[111, null], [403, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[392, "sphinx-gallery-extension"]], "Spiral arm models": [[530, "spiral-arm-models"]], "Stack observations": [[468, "stack-observations"]], "Stacked analysis": [[477, "stacked-analysis"]], "Stacking Multiple Datasets": [[536, "stacking-multiple-datasets"]], "Statistical significance of a detection": [[511, "statistical-significance-of-a-detection"]], "Statistical utility functions": [[605, "statistical-utility-functions"]], "Statistics in Gammapy": [[605, null]], "Status": [[401, "status"], [410, "status"]], "Storing the energy dispersion information as a function of sky position": [[544, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[406, "storing-the-results-and-further-studies"]], "Sub-packages": [[529, "sub-packages"]], "Suggestions": [[417, "suggestions"]], "Summary": [[431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [441, "summary"], [442, "summary"], [443, "summary"], [444, "summary"], [445, "summary"], [446, "summary"], [447, "summary"], [448, "summary"], [449, "summary"], [450, "summary"], [451, "summary"], [452, "summary"], [453, "summary"], [454, "summary"], [455, "summary"], [456, "summary"], [457, "summary"], [458, "summary"], [459, "summary"], [477, "summary"], [513, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[586, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[585, null]], "Super exponential cutoff power law model used for 3FGL": [[584, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[273, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[274, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[275, null]], "Supernova Remnant Models": [[534, null]], "Support for Asymmetric IRFs": [[501, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[416, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[521, null]], "Survey panel plots": [[608, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[276, null]], "TS map estimation": [[472, "ts-map-estimation"]], "TSMapEstimator": [[136, null]], "Table conversion": [[498, "table-conversion"]], "Task List": [[403, "task-list"]], "Task list": [[402, "task-list"], [404, "task-list"], [405, "task-list"], [406, "task-list"], [407, "task-list"], [408, "task-list"], [420, "task-list"]], "Template spatial model": [[565, null]], "Template spectral model": [[587, null]], "TemplateNDSpatialModel": [[277, null]], "TemplateNDSpectralModel": [[278, null]], "TemplateNPredModel": [[279, null]], "TemplatePhaseCurveTemporalModel": [[280, null]], "TemplateSpatialModel": [[281, null]], "TemplateSpectralModel": [[282, null]], "Temporal models": [[506, "temporal-models"], [554, "temporal-models"], [589, null]], "TemporalModel": [[283, null]], "Testing of plotting functions": [[391, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[397, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[480, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[422, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[422, "the-gammapy-extra-repository"]], "The index tables": [[537, "the-index-tables"]], "The reflected region finder": [[549, "the-reflected-region-finder"]], "The results for testing energy dependence": [[480, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[480, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[478, "the-setup"], [498, "the-setup"], [499, "the-setup"], [509, "the-setup"]], "Time": [[487, null], [518, "time"]], "Time bin preparation": [[406, "time-bin-preparation"]], "Time bins": [[406, "time-bins"]], "Time differences": [[607, "time-differences"]], "Time format and scale": [[607, "time-format-and-scale"]], "Time handling in Gammapy": [[607, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[493, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[493, null]], "Time variable source using a lightcurve": [[481, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[206, null], [503, "timemapaxis"]], "Timing Analysis": [[400, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[297, null]], "Troubleshooting": [[427, null], [603, "troubleshooting"]], "Tutorial overview": [[480, "tutorial-overview"], [512, "tutorial-overview"], [514, "tutorial-overview"]], "Tutorials": [[411, "tutorials"], [518, null]], "Tutorials Overview": [[424, "tutorials-overview"]], "Type validation": [[418, "type-validation"]], "Types of supported datasets": [[536, "types-of-supported-datasets"]], "Understanding the outputs": [[507, "understanding-the-outputs"]], "Unification of flux estimators?": [[415, "unification-of-flux-estimators"]], "UniformPrior": [[284, null]], "Unify calling interface for models": [[402, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[553, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[419, "use-cases"], [420, "use-cases"]], "Use cases / scenarios": [[401, "use-cases-scenarios"]], "User guide": [[541, null]], "User perspective": [[398, "user-perspective"]], "User testing of the API": [[420, "user-testing-of-the-api"]], "Using Anaconda / Miniconda": [[425, "using-anaconda-miniconda"]], "Using Factory Methods": [[503, "using-factory-methods"]], "Using Gammapy": [[428, null]], "Using Gammapy IRFs": [[501, null]], "Using Mamba": [[425, "using-mamba"]], "Using YAML configuration files": [[523, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[469, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[469, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[539, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[528, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[531, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[535, "using-gammapy-catalog"]], "Using gammapy.data": [[537, "using-gammapy-data"]], "Using gammapy.datasets": [[536, "using-gammapy-datasets"]], "Using gammapy.estimators": [[538, "using-gammapy-estimators"]], "Using gammapy.irf": [[545, "using-gammapy-irf"]], "Using gammapy.makers": [[548, "using-gammapy-makers"]], "Using gammapy.maps": [[552, "using-gammapy-maps"]], "Using gammapy.modeling": [[600, "using-gammapy-modeling"]], "Using masks": [[497, "using-masks"]], "Using other package managers": [[425, "using-other-package-managers"]], "Using pip": [[425, "using-pip"]], "Using regions": [[549, "using-regions"]], "Using the reflected background estimator": [[549, "using-the-reflected-background-estimator"]], "Utility functions": [[607, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[530, "velocity-distributions"]], "Venv Environments": [[423, "venv-environments"]], "Version 0.1": [[430, "version-0-1"]], "Version 0.10": [[430, "version-0-10"]], "Version 0.11": [[430, "version-0-11"]], "Version 0.12": [[430, "version-0-12"]], "Version 0.13": [[430, "version-0-13"]], "Version 0.14": [[430, "version-0-14"]], "Version 0.15": [[430, "version-0-15"]], "Version 0.16": [[430, "version-0-16"]], "Version 0.17": [[430, "version-0-17"]], "Version 0.18": [[430, "version-0-18"]], "Version 0.19": [[430, "version-0-19"]], "Version 0.2": [[430, "version-0-2"]], "Version 0.20": [[430, "version-0-20"]], "Version 0.20.1": [[430, "version-0-20-1"]], "Version 0.3": [[430, "version-0-3"]], "Version 0.4": [[430, "version-0-4"]], "Version 0.5": [[430, "version-0-5"]], "Version 0.6": [[430, "version-0-6"]], "Version 0.7": [[430, "version-0-7"]], "Version 0.8": [[430, "version-0-8"]], "Version 0.9": [[430, "version-0-9"]], "Version 1.0": [[430, "version-1-0"]], "Version 1.0.1": [[430, "version-1-0-1"]], "Version 1.0.2": [[430, "version-1-0-2"]], "Version 1.1": [[430, "version-1-1"]], "Version 1.2": [[430, "version-1-2"]], "Version 1.3": [[430, "version-1-3"]], "Version numbering": [[416, "version-numbering"]], "Virtual Environments": [[423, null]], "Visualing a RegionNDMap": [[553, "visualing-a-regionndmap"]], "Visualising the results": [[493, "visualising-the-results"]], "Visualization": [[608, null]], "Visualizing and Plotting": [[503, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[604, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[605, "wstat-counts-statistic"]], "WStatCountsStatistic": [[298, null]], "WcsGeom": [[207, null]], "WcsMap": [[208, null]], "WcsNDMap": [[209, null]], "What checks and conversions should I do for inputs?": [[391, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[396, "what-is-a-pig"]], "What is this?": [[394, "what-is-this"]], "What next?": [[466, "what-next"], [468, "what-next"], [472, "what-next"], [479, "what-next"], [488, "what-next"], [526, "what-next"]], "What others have": [[401, "what-others-have"]], "What we have": [[399, "what-we-have"], [407, "what-we-have"], [415, "what-we-have"]], "What\u2019s new?": [[432, "what-s-new"], [433, "what-s-new"], [434, "what-s-new"], [435, "what-s-new"], [436, "what-s-new"], [437, "what-s-new"], [438, "what-s-new"], [439, "what-s-new"], [440, "what-s-new"], [441, "what-s-new"], [442, "what-s-new"], [443, "what-s-new"], [445, "what-s-new"], [446, "what-s-new"], [448, "what-s-new"], [449, "what-s-new"], [450, "what-s-new"], [451, "what-s-new"], [452, "what-s-new"], [453, "what-s-new"]], "What\u2019s next": [[523, "whats-next"]], "What\u2019s next?": [[469, "whats-next"]], "Where should I import from?": [[391, "where-should-i-import-from"]], "WobbleRegionsFinder": [[184, null]], "Working with event lists": [[537, "working-with-event-lists"]], "Write your own CLI": [[603, "write-your-own-cli"]], "Writing Maps": [[503, "writing-maps"]], "Writing a PIG": [[396, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[553, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[537, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[557, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [560, "yaml-representation"], [561, "yaml-representation"], [562, "yaml-representation"], [563, "yaml-representation"], [564, "yaml-representation"], [565, "yaml-representation"], [568, "yaml-representation"], [569, "yaml-representation"], [570, "yaml-representation"], [571, "yaml-representation"], [572, "yaml-representation"], [573, "yaml-representation"], [574, "yaml-representation"], [575, "yaml-representation"], [576, "yaml-representation"], [577, "yaml-representation"], [578, "yaml-representation"], [579, "yaml-representation"], [580, "yaml-representation"], [581, "yaml-representation"], [582, "yaml-representation"], [583, "yaml-representation"], [584, "yaml-representation"], [585, "yaml-representation"], [586, "yaml-representation"], [587, "yaml-representation"], [590, "yaml-representation"], [591, "yaml-representation"], [592, "yaml-representation"], [593, "yaml-representation"], [594, "yaml-representation"], [595, "yaml-representation"], [596, "yaml-representation"], [597, "yaml-representation"], [598, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[372, null]], "add_colorbar": [[379, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[380, null]], "apply_edisp": [[112, null], [117, null]], "arbitrary type input and validation": [[418, "arbitrary-type-input-and-validation"]], "assert_quantity_allclose": [[366, null]], "assert_skycoord_allclose": [[367, null]], "assert_time_allclose": [[368, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[319, null]], "cash": [[299, null]], "cash_sum_cython": [[300, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[417, "codemeta-json"]], "colormap_hess": [[381, null]], "colormap_milagro": [[382, null]], "combine_flux_maps": [[137, null]], "combine_significance_maps": [[138, null]], "compound_region_to_regions": [[349, null]], "compute_chisq": [[301, null]], "compute_flux_doubling": [[302, null]], "compute_fpp": [[303, null]], "compute_fvar": [[304, null]], "compute_lightcurve_discrete_correlation": [[139, null]], "compute_lightcurve_doublingtime": [[140, null]], "compute_lightcurve_fpp": [[141, null]], "compute_lightcurve_fvar": [[142, null]], "config": [[11, "gammapy-analysis-config"], [11, "gammapy-workflow-config"]], "containment_radius": [[210, null]], "containment_region": [[211, null]], "create_cosmic_ray_spectral_model": [[285, null]], "create_crab_spectral_model": [[286, null]], "create_empty_map_dataset_from_irfs": [[113, null]], "create_fermi_isotropic_diffuse_model": [[287, null]], "create_map_dataset_from_dl4": [[118, null]], "create_map_dataset_from_observation": [[114, null]], "create_map_dataset_geoms": [[115, null]], "cstat": [[305, null]], "data": [[418, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[306, null]], "docs.gammapy.org": [[422, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[341, null]], "earth_location_from_dict": [[328, null]], "estimate_exposure_reco_energy": [[143, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[307, null]], "find_peaks": [[144, null]], "find_peaks_in_flux_map": [[145, null]], "fov_to_sky": [[320, null]], "from_yaml": [[354, null]], "galactic": [[321, null]], "gamLike": [[528, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[422, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_flux_maps": [[146, null]], "get_combined_significance_maps": [[147, null]], "get_images_paths": [[355, null]], "get_irfs_features": [[96, null]], "get_random_state": [[342, null]], "get_rebinned_axis": [[148, null]], "get_wstat_gof_terms": [[308, null]], "get_wstat_mu_bkg": [[309, null]], "hierarchical_clustering": [[316, null]], "hstack_columns": [[361, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[288, null]], "interpolate_profile": [[331, null]], "interpolation_scale": [[332, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[170, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[350, null]], "make_counts_rad_max": [[185, null]], "make_edisp_kernel_map": [[186, null]], "make_edisp_map": [[187, null]], "make_effective_livetime_map": [[188, null]], "make_map_background_irf": [[189, null]], "make_map_exposure_true_energy": [[190, null]], "make_observation_time_map": [[191, null]], "make_orthogonal_rectangle_sky_regions": [[351, null]], "make_path": [[356, null]], "make_psf_map": [[192, null]], "make_theta_squared_table": [[193, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[322, null]], "mpl_plot_check": [[369, null]], "multiprocessing_manager": [[338, null]], "norm_bounds_cython": [[310, null]], "normalize": [[343, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[344, null]], "plot_contour_line": [[383, null]], "plot_distribution": [[384, null]], "plot_heatmap": [[385, null]], "plot_map_rgb": [[386, null]], "plot_npred_signal": [[387, null]], "plot_spectrum_datasets_off_regions": [[388, null]], "plot_theta_squared_table": [[389, null]], "polar": [[323, null]], "pydantic": [[418, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[289, null], [291, null]], "read_yaml": [[357, null]], "recursive_merge_dicts": [[358, null]], "region_to_frame": [[352, null]], "regions_to_compound_region": [[353, null]], "requires_data": [[370, null]], "requires_dependency": [[371, null]], "resample_energy_edges": [[149, null]], "run": [[11, "gammapy-analysis-run"], [11, "gammapy-workflow-run"]], "run_multiprocessing": [[339, null]], "sample_powerlaw": [[345, null]], "sample_sphere": [[346, null]], "sample_sphere_distance": [[347, null]], "sample_times": [[348, null]], "scale_plot_flux": [[290, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[292, null]], "sigma_to_ts": [[311, null]], "sky_to_fov": [[324, null]], "split_dataset": [[116, null], [119, null]], "standard_scaler": [[317, null]], "standardise_unit": [[376, null]], "stat_profile_ul_scipy": [[293, null]], "stats - Statistics": [[12, null]], "structure_function": [[312, null]], "table_row_to_dict": [[362, null]], "table_standardise_units_copy": [[363, null]], "table_standardise_units_inplace": [[364, null]], "the base class": [[418, "the-base-class"]], "time_ref_from_dict": [[373, null]], "time_ref_to_dict": [[374, null]], "time_relative_to_ref": [[375, null]], "to_yaml": [[359, null]], "trapz_loglog": [[329, null]], "ts_to_sigma": [[313, null]], "unit_from_fits_image_hdu": [[377, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[325, null]], "visualization - Plotting features": [[14, null]], "weighted_cash_sum_cython": [[314, null]], "workflow": [[11, "gammapy-workflow"]], "write_yaml": [[360, null]], "wstat": [[315, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FermipyDatasetsReader", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_empty_map_dataset_from_irfs", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.create_map_dataset_from_dl4", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.ParameterSensitivityEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.combine_flux_maps", "api/gammapy.estimators.utils.combine_significance_maps", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_flux_maps", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.Sampler", "api/gammapy.modeling.SamplerResult", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianPrior", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.LogUniformPrior", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.UniformPrior", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.Chi2AsymmetricErrorFitStatistic", "api/gammapy.stats.Chi2FitStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.sigma_to_ts", "api/gammapy.stats.structure_function", "api/gammapy.stats.ts_to_sigma", "api/gammapy.stats.weighted_cash_sum_cython", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/pigs/pig-027", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "release-notes/v2.0", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/index", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/index", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/index", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/index", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/index", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/nested_sampling_Crab", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/api/theta_square_plot", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/index", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/index", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/index", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/index", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/index", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FermipyDatasetsReader.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_empty_map_dataset_from_irfs.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.create_map_dataset_from_dl4.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.ParameterSensitivityEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.combine_flux_maps.rst", "api/gammapy.estimators.utils.combine_significance_maps.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_flux_maps.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.Sampler.rst", "api/gammapy.modeling.SamplerResult.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianPrior.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.LogUniformPrior.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.UniformPrior.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.Chi2AsymmetricErrorFitStatistic.rst", "api/gammapy.stats.Chi2FitStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.sigma_to_ts.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.ts_to_sigma.rst", "api/gammapy.stats.weighted_cash_sum_cython.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/pigs/pig-027.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "release-notes/v2.0.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/index.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/index.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/index.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/index.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/index.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/nested_sampling_Crab.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/api/theta_square_plot.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/index.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/index.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/index.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/index.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/index.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[602, "term-1D-Analysis", true]], "3d analysis": [[602, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[330, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[372, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[379, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[602, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[125, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[127, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[380, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[112, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[117, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[366, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[367, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[368, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[182, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[176, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[183, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[333, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[150, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[151, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "background_models (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.background_models", false]], "background_models (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.background_models", false]], "backgroundirf (class in gammapy.irf)": [[152, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[602, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[319, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[602, "term-Cash", true]], "cash() (in module gammapy.stats)": [[299, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[300, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[294, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[365, "gammapy.utils.testing.Checker", false]], "chi2asymmetricerrorfitstatistic (class in gammapy.stats)": [[295, "gammapy.stats.Chi2AsymmetricErrorFitStatistic", false]], "chi2fitstatistic (class in gammapy.stats)": [[296, "gammapy.stats.Chi2FitStatistic", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[381, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[382, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "combine_flux_maps() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.combine_flux_maps", false]], "combine_significance_maps() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.combine_significance_maps", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[349, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[301, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[302, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[303, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[304, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[210, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[211, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[123, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[131, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[252, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.copy", false]], "copy() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[212, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[252, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[213, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[202, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[251, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[269, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[285, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[286, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_dataset() (gammapy.datasets.fermipydatasetsreader static method)": [[101, "gammapy.datasets.FermipyDatasetsReader.create_dataset", false]], "create_empty_map_dataset_from_irfs() (in module gammapy.datasets)": [[113, "gammapy.datasets.create_empty_map_dataset_from_irfs", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[287, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_dl4() (in module gammapy.datasets.utils)": [[118, "gammapy.datasets.utils.create_map_dataset_from_dl4", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[114, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[115, "gammapy.datasets.create_map_dataset_geoms", false]], "create_mask() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.create_mask", false]], "create_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.create_mask", false]], "create_mask() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.create_mask", false]], "create_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.create_mask", false]], "crop() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[305, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[318, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[164, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[602, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[172, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.dict", false]], "discrete_correlation() (in module gammapy.stats)": [[306, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[602, "term-DL3", true]], "dl4": [[602, "term-DL4", true]], "dl5": [[602, "term-DL5", true]], "dl6": [[602, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[341, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[328, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[232, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[602, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[153, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[154, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[155, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[156, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[158, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[143, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[124, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_sensitivity() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_sensitivity", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[602, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[123, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[121, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[230, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianprior static method)": [[238, "gammapy.modeling.models.GaussianPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[245, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.loguniformprior static method)": [[248, "gammapy.modeling.models.LogUniformPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[267, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[268, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.uniformprior static method)": [[284, "gammapy.modeling.models.UniformPrior.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[165, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[165, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[109, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[109, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[124, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[132, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[307, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "fermipydatasetsreader (class in gammapy.datasets)": [[101, "gammapy.datasets.FermipyDatasetsReader", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[144, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[145, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[214, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[215, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[127, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[128, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[602, "term-FoV", true]], "fov background": [[602, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[320, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[159, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[173, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[252, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[229, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[230, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianprior class method)": [[238, "gammapy.modeling.models.GaussianPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[245, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.loguniformprior class method)": [[248, "gammapy.modeling.models.LogUniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[251, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[252, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[253, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[257, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[262, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[267, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[268, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[269, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[271, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[272, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[279, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[283, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.uniformprior class method)": [[284, "gammapy.modeling.models.UniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[218, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[220, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[212, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[196, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[197, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[205, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[208, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[209, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[161, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[194, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[195, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[207, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[230, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianprior class method)": [[238, "gammapy.modeling.models.GaussianPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[245, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.loguniformprior class method)": [[248, "gammapy.modeling.models.LogUniformPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[252, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[257, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[262, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[267, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[268, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[269, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[271, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[272, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[279, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[283, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.uniformprior class method)": [[284, "gammapy.modeling.models.UniformPrior.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[230, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[257, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[267, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[271, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[230, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[204, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[196, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[198, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[199, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[208, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[209, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[212, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[218, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[220, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[198, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[200, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[201, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[206, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_ultranest() (gammapy.modeling.samplerresult class method)": [[222, "gammapy.modeling.SamplerResult.from_ultranest", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[197, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[229, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[253, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[354, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[252, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[602, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[321, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy-workflow-config command line option": [[11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "gammapy-workflow-run command line option": [[11, "cmdoption-gammapy-workflow-run-filename", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianprior (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.GaussianPrior", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[194, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[203, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_flux_maps() (in module gammapy.estimators.utils)": [[146, "gammapy.estimators.utils.get_combined_flux_maps", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[147, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[108, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[326, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[355, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[195, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[342, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[148, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[120, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[308, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[309, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[602, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[326, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[316, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[602, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[195, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[196, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[197, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[361, "gammapy.utils.table.hstack_columns", false]], "iact": [[602, "term-IACT", true]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[130, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[326, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[288, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[331, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[332, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inverse_transform() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.inverse_transform", false]], "inverse_transform() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.inverse_transform", false]], "inversecdfsampler (class in gammapy.utils.random)": [[340, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[602, "term-IRF", true]], "irf (class in gammapy.irf)": [[160, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[162, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[161, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[194, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[602, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[198, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[327, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[326, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[170, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "loglikelihood_dataset() (gammapy.stats.chi2asymmetricerrorfitstatistic class method)": [[295, "gammapy.stats.Chi2AsymmetricErrorFitStatistic.loglikelihood_dataset", false]], "loglikelihood_dataset() (gammapy.stats.chi2fitstatistic class method)": [[296, "gammapy.stats.Chi2FitStatistic.loglikelihood_dataset", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "loguniformprior (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.LogUniformPrior", false]], "lon (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[350, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[185, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[187, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[188, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[189, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[190, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[176, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[191, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[351, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[356, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[192, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[193, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[602, "term-Maker", true]], "maker (class in gammapy.makers)": [[175, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[174, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[199, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[200, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[201, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[202, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[176, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[106, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[378, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[203, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.max", false]], "max (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.max", false]], "max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[602, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.message", false]], "met": [[602, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[334, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[335, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.min", false]], "min (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.min", false]], "min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[249, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[322, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[369, "gammapy.utils.testing.mpl_plot_check", false]], "mu (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.mu", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[338, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[336, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[310, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[343, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[109, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[107, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[108, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[216, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[217, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameter_matching_significance() (gammapy.estimators.parametersensitivityestimator method)": [[134, "gammapy.estimators.ParameterSensitivityEstimator.parameter_matching_significance", false]], "parameterestimator (class in gammapy.estimators)": [[133, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[218, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[252, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[252, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.parameters_unique_names", false]], "parametersensitivityestimator (class in gammapy.estimators)": [[134, "gammapy.estimators.ParameterSensitivityEstimator", false]], "parametricpsf (class in gammapy.irf)": [[167, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[326, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[344, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[177, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[206, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[378, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[383, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[384, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[385, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[386, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[387, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[378, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[388, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[389, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[323, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[337, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[219, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[220, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.projection", false]], "psf": [[602, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[163, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[164, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[164, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[165, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[166, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pulse_profile_best_fit (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profile_best_fit", false]], "pulse_profile_radio (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profile_radio", false]], "pulse_profiles (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.pulse_profiles", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[168, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fermipydatasetsreader method)": [[101, "gammapy.datasets.FermipyDatasetsReader.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[107, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[110, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[125, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[127, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[150, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[151, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[152, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[153, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[154, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[155, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[156, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[158, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[160, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[161, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[167, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[163, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[164, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[165, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[166, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[168, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[169, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[196, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[197, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[199, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[203, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[205, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[208, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[209, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[229, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[253, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[289, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[291, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[107, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[357, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[252, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.reassign", false]], "reco energy": [[602, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[169, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[358, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[602, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[179, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[352, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[204, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[205, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[353, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[180, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[370, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[371, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[149, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_autoscale() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.reset_autoscale", false]], "reset_autoscale() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.reset_autoscale", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.reverse", false]], "reverse_lon_radec (gammapy.irf.fovalignment attribute)": [[159, "gammapy.irf.FoVAlignment.REVERSE_LON_RADEC", false]], "ring background": [[602, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[181, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[602, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[123, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[124, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[128, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[129, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[131, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[132, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[133, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.parametersensitivityestimator method)": [[134, "gammapy.estimators.ParameterSensitivityEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[135, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[136, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[172, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[173, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[175, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[176, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[177, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[179, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[180, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[181, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[182, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[183, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[184, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.run", false]], "run() (gammapy.modeling.sampler method)": [[221, "gammapy.modeling.Sampler.run", false]], "run() (gammapy.utils.testing.checker method)": [[365, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[339, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[182, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[340, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[340, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[345, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[109, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[346, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[347, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[348, "gammapy.utils.random.sample_times", false]], "sampler (class in gammapy.modeling)": [[221, "gammapy.modeling.Sampler", false]], "sampler_ultranest() (gammapy.modeling.sampler method)": [[221, "gammapy.modeling.Sampler.sampler_ultranest", false]], "samplerresult (class in gammapy.modeling)": [[222, "gammapy.modeling.SamplerResult", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[290, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scale_transform (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scale_transform", false]], "scale_transform (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scale_transform", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[330, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[602, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[292, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[120, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[135, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_lim() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.set_lim", false]], "set_lim() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.set_lim", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[212, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[200, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[212, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "sigma_to_ts() (in module gammapy.stats)": [[311, "gammapy.stats.sigma_to_ts", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[324, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[130, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[263, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[264, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[110, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[183, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[111, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[116, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[119, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "stacked analysis": [[602, "term-Stacked-Analysis", true]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[317, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[376, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_array_dataset() (gammapy.stats.chi2asymmetricerrorfitstatistic class method)": [[295, "gammapy.stats.Chi2AsymmetricErrorFitStatistic.stat_array_dataset", false]], "stat_array_dataset() (gammapy.stats.chi2fitstatistic class method)": [[296, "gammapy.stats.Chi2FitStatistic.stat_array_dataset", false]], "stat_contour() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[293, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_sum_dataset() (gammapy.stats.chi2asymmetricerrorfitstatistic class method)": [[295, "gammapy.stats.Chi2AsymmetricErrorFitStatistic.stat_sum_dataset", false]], "stat_sum_dataset() (gammapy.stats.chi2fitstatistic class method)": [[296, "gammapy.stats.Chi2FitStatistic.stat_sum_dataset", false]], "stat_surface() (gammapy.modeling.fit method)": [[214, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.stat_type", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[312, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[213, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[294, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[298, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[362, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[363, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[364, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fermipydatasetsreader attribute)": [[101, "gammapy.datasets.FermipyDatasetsReader.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[107, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[108, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[110, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[120, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[122, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[123, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[124, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[126, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[128, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[129, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[131, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[132, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[133, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.parametersensitivityestimator attribute)": [[134, "gammapy.estimators.ParameterSensitivityEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[135, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[136, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[154, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[155, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[161, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[166, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[169, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[171, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[172, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[173, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[175, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[176, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[177, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[178, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[181, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[182, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[183, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "tag (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[279, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[281, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[282, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[276, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[283, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[202, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[373, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[374, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[375, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[245, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[268, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[283, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[206, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[297, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[213, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[252, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[216, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[202, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[126, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[359, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[215, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[216, "gammapy.modeling.OptimizeResult.trace", false]], "transform() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.transform", false]], "transform() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.transform", false]], "transit": [[602, "term-Transit", true]], "trapz_loglog() (in module gammapy.utils.integrate)": [[329, "gammapy.utils.integrate.trapz_loglog", false]], "true energy": [[602, "term-True-Energy", true]], "ts": [[602, "term-TS", true]], "ts (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[294, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[298, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[125, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[127, "gammapy.estimators.FluxPoints.ts_scan", false]], "ts_to_sigma() (in module gammapy.stats)": [[313, "gammapy.stats.ts_to_sigma", false]], "tsmapestimator (class in gammapy.estimators)": [[136, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[224, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[227, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[228, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[230, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[237, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[240, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[241, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[245, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[252, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[254, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[257, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[265, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[266, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[268, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[269, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[271, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[272, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[279, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[282, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[283, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.type", false]], "type (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[223, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[224, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[225, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[226, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[227, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[228, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[230, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[231, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[235, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[236, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[237, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianprior method)": [[238, "gammapy.modeling.models.GaussianPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[239, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[240, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[241, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[243, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[245, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[247, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.loguniformprior method)": [[248, "gammapy.modeling.models.LogUniformPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[250, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[252, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[254, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[256, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[257, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[258, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[260, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[261, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[262, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[265, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[266, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[267, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[268, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[269, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[270, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[271, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[272, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[275, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[282, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[283, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.uniformprior method)": [[284, "gammapy.modeling.models.UniformPrior.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[218, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[220, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "uniformprior (class in gammapy.modeling.models)": [[284, "gammapy.modeling.models.UniformPrior", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[150, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[151, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[152, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[153, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[156, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[158, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[160, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[167, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[163, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[165, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[168, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[196, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[197, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[198, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[199, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[205, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[206, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[208, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[209, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[377, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "update_scale() (gammapy.modeling.parameter method)": [[217, "gammapy.modeling.Parameter.update_scale", false]], "update_scale() (gammapy.modeling.priorparameter method)": [[219, "gammapy.modeling.PriorParameter.update_scale", false]], "upsample() (gammapy.maps.geom method)": [[194, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[195, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[198, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[200, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[204, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[206, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[207, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[201, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[126, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[217, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[218, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[219, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[220, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[325, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcd": [[602, "term-WCD", true]], "wcs (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[229, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[253, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[207, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[208, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[209, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.gaussianprior attribute)": [[238, "gammapy.modeling.models.GaussianPrior.weight", false]], "weight (gammapy.modeling.models.loguniformprior attribute)": [[248, "gammapy.modeling.models.LogUniformPrior.weight", false]], "weight (gammapy.modeling.models.prior attribute)": [[262, "gammapy.modeling.models.Prior.weight", false]], "weight (gammapy.modeling.models.uniformprior attribute)": [[284, "gammapy.modeling.models.UniformPrior.weight", false]], "weighted_cash_sum_cython() (in module gammapy.stats)": [[314, "gammapy.stats.weighted_cash_sum_cython", false]], "width (gammapy.maps.hpxgeom attribute)": [[195, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[204, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[207, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[267, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[184, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[201, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[110, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[111, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[125, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[127, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[150, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[151, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[152, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[153, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[154, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[155, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[156, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[157, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[158, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[160, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[161, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[167, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[163, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[164, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[165, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[166, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[168, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[169, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[196, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[197, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[199, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[203, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[205, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[208, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[209, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[215, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[244, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[278, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[279, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[280, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[281, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[229, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[253, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[108, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[360, "gammapy.utils.scripts.write_yaml", false]], "wstat": [[602, "term-WStat", true]], "wstat() (in module gammapy.stats)": [[315, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[298, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[130, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy-workflow-config": [[11, 6, 1, "cmdoption-gammapy-workflow-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-workflow-config-overwrite", "--overwrite"]], "gammapy-workflow-run": [[11, 6, 1, "cmdoption-gammapy-workflow-run-filename", "--filename"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "pulse_profile_best_fit"], [77, 2, 1, "", "pulse_profile_radio"], [77, 2, 1, "", "pulse_profiles"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FermipyDatasetsReader"], [102, 1, 1, "", "FluxPointsDataset"], [103, 1, 1, "", "MapDataset"], [104, 1, 1, "", "MapDatasetEventSampler"], [105, 1, 1, "", "MapDatasetMetaData"], [106, 1, 1, "", "MapDatasetOnOff"], [107, 1, 1, "", "OGIPDatasetReader"], [108, 1, 1, "", "OGIPDatasetWriter"], [109, 1, 1, "", "ObservationEventSampler"], [110, 1, 1, "", "SpectrumDataset"], [111, 1, 1, "", "SpectrumDatasetOnOff"], [112, 4, 1, "", "apply_edisp"], [113, 4, 1, "", "create_empty_map_dataset_from_irfs"], [114, 4, 1, "", "create_map_dataset_from_observation"], [115, 4, 1, "", "create_map_dataset_geoms"], [116, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "stat_type"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FermipyDatasetsReader": [[101, 3, 1, "", "create_dataset"], [101, 3, 1, "", "read"], [101, 2, 1, "", "tag"]], "gammapy.datasets.FluxPointsDataset": [[102, 2, 1, "", "available_stat_type"], [102, 3, 1, "", "copy"], [102, 3, 1, "", "data_shape"], [102, 3, 1, "", "flux_pred"], [102, 3, 1, "", "from_dict"], [102, 2, 1, "", "gti"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_valid"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "plot_fit"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_spectrum"], [102, 3, 1, "", "read"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[103, 2, 1, "", "background"], [103, 2, 1, "", "background_model"], [103, 3, 1, "", "copy"], [103, 2, 1, "", "counts"], [103, 3, 1, "", "create"], [103, 3, 1, "", "cutout"], [103, 2, 1, "", "data_shape"], [103, 3, 1, "", "downsample"], [103, 2, 1, "", "edisp"], [103, 2, 1, "", "energy_range"], [103, 2, 1, "", "energy_range_fit"], [103, 2, 1, "", "energy_range_safe"], [103, 2, 1, "", "energy_range_total"], [103, 2, 1, "", "evaluators"], [103, 2, 1, "", "excess"], [103, 2, 1, "", "exposure"], [103, 3, 1, "", "fake"], [103, 3, 1, "", "from_dict"], [103, 3, 1, "", "from_geoms"], [103, 3, 1, "", "from_hdulist"], [103, 2, 1, "", "geoms"], [103, 2, 1, "", "gti"], [103, 3, 1, "", "info_dict"], [103, 2, 1, "", "mask"], [103, 2, 1, "", "mask_fit"], [103, 2, 1, "", "mask_fit_image"], [103, 2, 1, "", "mask_image"], [103, 2, 1, "", "mask_safe"], [103, 2, 1, "", "mask_safe_edisp"], [103, 2, 1, "", "mask_safe_image"], [103, 2, 1, "", "mask_safe_psf"], [103, 2, 1, "", "meta"], [103, 2, 1, "", "meta_table"], [103, 2, 1, "", "models"], [103, 2, 1, "", "name"], [103, 3, 1, "", "npred"], [103, 3, 1, "", "npred_background"], [103, 3, 1, "", "npred_signal"], [103, 3, 1, "", "pad"], [103, 3, 1, "", "peek"], [103, 3, 1, "", "plot_residuals"], [103, 3, 1, "", "plot_residuals_spatial"], [103, 3, 1, "", "plot_residuals_spectral"], [103, 2, 1, "", "psf"], [103, 3, 1, "", "read"], [103, 3, 1, "", "resample_energy_axis"], [103, 3, 1, "", "reset_data_cache"], [103, 3, 1, "", "residuals"], [103, 3, 1, "", "slice_by_energy"], [103, 3, 1, "", "slice_by_idx"], [103, 3, 1, "", "stack"], [103, 3, 1, "", "stat_array"], [103, 3, 1, "", "stat_sum"], [103, 2, 1, "", "stat_type"], [103, 2, 1, "", "tag"], [103, 3, 1, "", "to_dict"], [103, 3, 1, "", "to_hdulist"], [103, 3, 1, "", "to_image"], [103, 3, 1, "", "to_masked"], [103, 3, 1, "", "to_region_map_dataset"], [103, 3, 1, "", "to_spectrum_dataset"], [103, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[104, 3, 1, "", "event_det_coords"], [104, 3, 1, "", "event_list_meta"], [104, 3, 1, "", "run"], [104, 3, 1, "", "sample_background"], [104, 3, 1, "", "sample_edisp"], [104, 3, 1, "", "sample_psf"], [104, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[105, 3, 1, "", "construct"], [105, 3, 1, "", "copy"], [105, 3, 1, "", "dict"], [105, 3, 1, "", "from_header"], [105, 3, 1, "", "from_orm"], [105, 3, 1, "", "json"], [105, 2, 1, "", "model_computed_fields"], [105, 2, 1, "", "model_config"], [105, 3, 1, "", "model_construct"], [105, 3, 1, "", "model_copy"], [105, 3, 1, "", "model_dump"], [105, 3, 1, "", "model_dump_json"], [105, 2, 1, "", "model_extra"], [105, 2, 1, "", "model_fields"], [105, 2, 1, "", "model_fields_set"], [105, 3, 1, "", "model_json_schema"], [105, 3, 1, "", "model_parametrized_name"], [105, 3, 1, "", "model_post_init"], [105, 3, 1, "", "model_rebuild"], [105, 3, 1, "", "model_validate"], [105, 3, 1, "", "model_validate_json"], [105, 3, 1, "", "model_validate_strings"], [105, 3, 1, "", "parse_file"], [105, 3, 1, "", "parse_obj"], [105, 3, 1, "", "parse_raw"], [105, 3, 1, "", "schema"], [105, 3, 1, "", "schema_json"], [105, 3, 1, "", "stack"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_header"], [105, 3, 1, "", "to_yaml"], [105, 3, 1, "", "update_forward_refs"], [105, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[106, 2, 1, "", "alpha"], [106, 2, 1, "", "background"], [106, 2, 1, "", "background_model"], [106, 3, 1, "", "copy"], [106, 2, 1, "", "counts"], [106, 3, 1, "", "create"], [106, 3, 1, "", "cutout"], [106, 2, 1, "", "data_shape"], [106, 3, 1, "", "downsample"], [106, 2, 1, "", "edisp"], [106, 2, 1, "", "energy_range"], [106, 2, 1, "", "energy_range_fit"], [106, 2, 1, "", "energy_range_safe"], [106, 2, 1, "", "energy_range_total"], [106, 2, 1, "", "evaluators"], [106, 2, 1, "", "excess"], [106, 2, 1, "", "exposure"], [106, 3, 1, "", "fake"], [106, 3, 1, "", "from_dict"], [106, 3, 1, "", "from_geoms"], [106, 3, 1, "", "from_hdulist"], [106, 3, 1, "", "from_map_dataset"], [106, 2, 1, "", "geoms"], [106, 2, 1, "", "gti"], [106, 3, 1, "", "info_dict"], [106, 2, 1, "", "mask"], [106, 2, 1, "", "mask_fit"], [106, 2, 1, "", "mask_fit_image"], [106, 2, 1, "", "mask_image"], [106, 2, 1, "", "mask_safe"], [106, 2, 1, "", "mask_safe_edisp"], [106, 2, 1, "", "mask_safe_image"], [106, 2, 1, "", "mask_safe_psf"], [106, 2, 1, "", "meta"], [106, 2, 1, "", "meta_table"], [106, 2, 1, "", "models"], [106, 2, 1, "", "name"], [106, 3, 1, "", "npred"], [106, 3, 1, "", "npred_background"], [106, 3, 1, "", "npred_off"], [106, 3, 1, "", "npred_signal"], [106, 3, 1, "", "pad"], [106, 3, 1, "", "peek"], [106, 3, 1, "", "plot_residuals"], [106, 3, 1, "", "plot_residuals_spatial"], [106, 3, 1, "", "plot_residuals_spectral"], [106, 2, 1, "", "psf"], [106, 3, 1, "", "read"], [106, 3, 1, "", "resample_energy_axis"], [106, 3, 1, "", "reset_data_cache"], [106, 3, 1, "", "residuals"], [106, 3, 1, "", "slice_by_energy"], [106, 3, 1, "", "slice_by_idx"], [106, 3, 1, "", "stack"], [106, 3, 1, "", "stat_array"], [106, 3, 1, "", "stat_sum"], [106, 2, 1, "", "stat_type"], [106, 2, 1, "", "tag"], [106, 3, 1, "", "to_dict"], [106, 3, 1, "", "to_hdulist"], [106, 3, 1, "", "to_image"], [106, 3, 1, "", "to_map_dataset"], [106, 3, 1, "", "to_masked"], [106, 3, 1, "", "to_region_map_dataset"], [106, 3, 1, "", "to_spectrum_dataset"], [106, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[107, 3, 1, "", "get_filenames"], [107, 3, 1, "", "get_valid_path"], [107, 3, 1, "", "read"], [107, 3, 1, "", "read_arf"], [107, 3, 1, "", "read_bkg"], [107, 3, 1, "", "read_pha"], [107, 3, 1, "", "read_rmf"], [107, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[108, 3, 1, "", "get_filenames"], [108, 3, 1, "", "get_ogip_meta"], [108, 2, 1, "", "tag"], [108, 3, 1, "", "to_counts_hdulist"], [108, 3, 1, "", "write"], [108, 3, 1, "", "write_arf"], [108, 3, 1, "", "write_bkg"], [108, 3, 1, "", "write_pha"], [108, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[109, 3, 1, "", "event_det_coords"], [109, 3, 1, "", "event_list_meta"], [109, 3, 1, "", "run"], [109, 3, 1, "", "sample_background"], [109, 3, 1, "", "sample_edisp"], [109, 3, 1, "", "sample_psf"], [109, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[110, 2, 1, "", "background"], [110, 2, 1, "", "background_model"], [110, 3, 1, "", "copy"], [110, 2, 1, "", "counts"], [110, 3, 1, "", "create"], [110, 3, 1, "", "cutout"], [110, 2, 1, "", "data_shape"], [110, 3, 1, "", "downsample"], [110, 2, 1, "", "edisp"], [110, 2, 1, "", "energy_range"], [110, 2, 1, "", "energy_range_fit"], [110, 2, 1, "", "energy_range_safe"], [110, 2, 1, "", "energy_range_total"], [110, 2, 1, "", "evaluators"], [110, 2, 1, "", "excess"], [110, 2, 1, "", "exposure"], [110, 3, 1, "", "fake"], [110, 3, 1, "", "from_dict"], [110, 3, 1, "", "from_geoms"], [110, 3, 1, "", "from_hdulist"], [110, 2, 1, "", "geoms"], [110, 2, 1, "", "gti"], [110, 3, 1, "", "info_dict"], [110, 2, 1, "", "mask"], [110, 2, 1, "", "mask_fit"], [110, 2, 1, "", "mask_fit_image"], [110, 2, 1, "", "mask_image"], [110, 2, 1, "", "mask_safe"], [110, 2, 1, "", "mask_safe_edisp"], [110, 2, 1, "", "mask_safe_image"], [110, 2, 1, "", "mask_safe_psf"], [110, 2, 1, "", "meta"], [110, 2, 1, "", "meta_table"], [110, 2, 1, "", "models"], [110, 2, 1, "", "name"], [110, 3, 1, "", "npred"], [110, 3, 1, "", "npred_background"], [110, 3, 1, "", "npred_signal"], [110, 3, 1, "", "pad"], [110, 3, 1, "", "peek"], [110, 3, 1, "", "plot_counts"], [110, 3, 1, "", "plot_excess"], [110, 3, 1, "", "plot_fit"], [110, 3, 1, "", "plot_masks"], [110, 3, 1, "", "plot_residuals"], [110, 3, 1, "", "plot_residuals_spatial"], [110, 3, 1, "", "plot_residuals_spectral"], [110, 2, 1, "", "psf"], [110, 3, 1, "", "read"], [110, 3, 1, "", "resample_energy_axis"], [110, 3, 1, "", "reset_data_cache"], [110, 3, 1, "", "residuals"], [110, 3, 1, "", "slice_by_energy"], [110, 3, 1, "", "slice_by_idx"], [110, 3, 1, "", "stack"], [110, 3, 1, "", "stat_array"], [110, 3, 1, "", "stat_sum"], [110, 2, 1, "", "stat_type"], [110, 2, 1, "", "tag"], [110, 3, 1, "", "to_dict"], [110, 3, 1, "", "to_hdulist"], [110, 3, 1, "", "to_image"], [110, 3, 1, "", "to_masked"], [110, 3, 1, "", "to_region_map_dataset"], [110, 3, 1, "", "to_spectrum_dataset"], [110, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[111, 2, 1, "", "alpha"], [111, 2, 1, "", "background"], [111, 2, 1, "", "background_model"], [111, 3, 1, "", "copy"], [111, 2, 1, "", "counts"], [111, 3, 1, "", "create"], [111, 3, 1, "", "cutout"], [111, 2, 1, "", "data_shape"], [111, 3, 1, "", "downsample"], [111, 2, 1, "", "edisp"], [111, 2, 1, "", "energy_range"], [111, 2, 1, "", "energy_range_fit"], [111, 2, 1, "", "energy_range_safe"], [111, 2, 1, "", "energy_range_total"], [111, 2, 1, "", "evaluators"], [111, 2, 1, "", "excess"], [111, 2, 1, "", "exposure"], [111, 3, 1, "", "fake"], [111, 3, 1, "", "from_dict"], [111, 3, 1, "", "from_geoms"], [111, 3, 1, "", "from_hdulist"], [111, 3, 1, "", "from_map_dataset"], [111, 3, 1, "", "from_spectrum_dataset"], [111, 2, 1, "", "geoms"], [111, 2, 1, "", "gti"], [111, 3, 1, "", "info_dict"], [111, 2, 1, "", "mask"], [111, 2, 1, "", "mask_fit"], [111, 2, 1, "", "mask_fit_image"], [111, 2, 1, "", "mask_image"], [111, 2, 1, "", "mask_safe"], [111, 2, 1, "", "mask_safe_edisp"], [111, 2, 1, "", "mask_safe_image"], [111, 2, 1, "", "mask_safe_psf"], [111, 2, 1, "", "meta"], [111, 2, 1, "", "meta_table"], [111, 2, 1, "", "models"], [111, 2, 1, "", "name"], [111, 3, 1, "", "npred"], [111, 3, 1, "", "npred_background"], [111, 3, 1, "", "npred_off"], [111, 3, 1, "", "npred_signal"], [111, 3, 1, "", "pad"], [111, 3, 1, "", "peek"], [111, 3, 1, "", "plot_counts"], [111, 3, 1, "", "plot_excess"], [111, 3, 1, "", "plot_fit"], [111, 3, 1, "", "plot_masks"], [111, 3, 1, "", "plot_residuals"], [111, 3, 1, "", "plot_residuals_spatial"], [111, 3, 1, "", "plot_residuals_spectral"], [111, 2, 1, "", "psf"], [111, 3, 1, "", "read"], [111, 3, 1, "", "resample_energy_axis"], [111, 3, 1, "", "reset_data_cache"], [111, 3, 1, "", "residuals"], [111, 3, 1, "", "slice_by_energy"], [111, 3, 1, "", "slice_by_idx"], [111, 3, 1, "", "stack"], [111, 3, 1, "", "stat_array"], [111, 3, 1, "", "stat_sum"], [111, 2, 1, "", "stat_type"], [111, 2, 1, "", "tag"], [111, 3, 1, "", "to_dict"], [111, 3, 1, "", "to_hdulist"], [111, 3, 1, "", "to_image"], [111, 3, 1, "", "to_map_dataset"], [111, 3, 1, "", "to_masked"], [111, 3, 1, "", "to_region_map_dataset"], [111, 3, 1, "", "to_spectrum_dataset"], [111, 3, 1, "", "write"]], "gammapy.datasets.utils": [[117, 4, 1, "", "apply_edisp"], [118, 4, 1, "", "create_map_dataset_from_dl4"], [119, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[120, 1, 1, "", "ASmoothMapEstimator"], [121, 5, 1, "", "ESTIMATOR_REGISTRY"], [122, 1, 1, "", "EnergyDependentMorphologyEstimator"], [123, 1, 1, "", "Estimator"], [124, 1, 1, "", "ExcessMapEstimator"], [125, 1, 1, "", "FluxMaps"], [126, 1, 1, "", "FluxMetaData"], [127, 1, 1, "", "FluxPoints"], [128, 1, 1, "", "FluxPointsEstimator"], [129, 1, 1, "", "FluxProfileEstimator"], [130, 1, 1, "", "ImageProfile"], [131, 1, 1, "", "ImageProfileEstimator"], [132, 1, 1, "", "LightCurveEstimator"], [133, 1, 1, "", "ParameterEstimator"], [134, 1, 1, "", "ParameterSensitivityEstimator"], [135, 1, 1, "", "SensitivityEstimator"], [136, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "estimate_maps"], [120, 3, 1, "", "get_kernels"], [120, 3, 1, "", "get_scales"], [120, 3, 1, "", "run"], [120, 3, 1, "", "selection_all"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[122, 2, 1, "", "config_parameters"], [122, 3, 1, "", "copy"], [122, 3, 1, "", "estimate_energy_dependence"], [122, 3, 1, "", "run"], [122, 2, 1, "", "selection_optional"], [122, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 2, 1, "", "correlation_radius"], [124, 3, 1, "", "estimate_excess_map"], [124, 3, 1, "", "estimate_exposure_reco_energy"], [124, 3, 1, "", "estimate_kernel"], [124, 3, 1, "", "estimate_mask_default"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[125, 2, 1, "", "acceptance_off"], [125, 2, 1, "", "acceptance_on"], [125, 3, 1, "", "all_quantities"], [125, 2, 1, "", "alpha"], [125, 2, 1, "", "available_quantities"], [125, 3, 1, "", "copy"], [125, 2, 1, "", "counts"], [125, 2, 1, "", "dnde"], [125, 2, 1, "", "dnde_err"], [125, 2, 1, "", "dnde_errn"], [125, 2, 1, "", "dnde_errp"], [125, 2, 1, "", "dnde_ref"], [125, 2, 1, "", "dnde_scan_values"], [125, 2, 1, "", "dnde_ul"], [125, 2, 1, "", "e2dnde"], [125, 2, 1, "", "e2dnde_err"], [125, 2, 1, "", "e2dnde_errn"], [125, 2, 1, "", "e2dnde_errp"], [125, 2, 1, "", "e2dnde_ref"], [125, 2, 1, "", "e2dnde_ul"], [125, 2, 1, "", "eflux"], [125, 2, 1, "", "eflux_err"], [125, 2, 1, "", "eflux_errn"], [125, 2, 1, "", "eflux_errp"], [125, 2, 1, "", "eflux_ref"], [125, 2, 1, "", "eflux_ul"], [125, 2, 1, "", "energy_axis"], [125, 2, 1, "", "energy_max"], [125, 2, 1, "", "energy_min"], [125, 2, 1, "", "energy_ref"], [125, 2, 1, "", "filter_success_nan"], [125, 2, 1, "", "flux"], [125, 2, 1, "", "flux_err"], [125, 2, 1, "", "flux_errn"], [125, 2, 1, "", "flux_errp"], [125, 2, 1, "", "flux_ref"], [125, 2, 1, "", "flux_sensitivity"], [125, 2, 1, "", "flux_ul"], [125, 3, 1, "", "from_hdulist"], [125, 3, 1, "", "from_maps"], [125, 3, 1, "", "from_stack"], [125, 2, 1, "", "geom"], [125, 3, 1, "", "get_flux_points"], [125, 2, 1, "", "has_any_ts"], [125, 2, 1, "", "has_stat_profiles"], [125, 2, 1, "", "has_success"], [125, 2, 1, "", "has_ul"], [125, 2, 1, "", "is_convertible_to_flux_sed_type"], [125, 2, 1, "", "is_ul"], [125, 3, 1, "", "iter_by_axis"], [125, 2, 1, "", "n_dof"], [125, 2, 1, "", "n_sigma"], [125, 2, 1, "", "n_sigma_ul"], [125, 2, 1, "", "niter"], [125, 2, 1, "", "norm"], [125, 2, 1, "", "norm_err"], [125, 2, 1, "", "norm_errn"], [125, 2, 1, "", "norm_errp"], [125, 2, 1, "", "norm_sensitivity"], [125, 2, 1, "", "norm_ul"], [125, 2, 1, "", "npred"], [125, 2, 1, "", "npred_background"], [125, 2, 1, "", "npred_excess"], [125, 2, 1, "", "npred_excess_err"], [125, 2, 1, "", "npred_excess_errn"], [125, 2, 1, "", "npred_excess_errp"], [125, 2, 1, "", "npred_excess_ref"], [125, 2, 1, "", "npred_excess_ul"], [125, 3, 1, "", "read"], [125, 2, 1, "", "reference_model"], [125, 2, 1, "", "reference_model_default"], [125, 2, 1, "", "reference_spectral_model"], [125, 2, 1, "", "sed_type_init"], [125, 2, 1, "", "sed_type_plot_default"], [125, 3, 1, "", "slice_by_coord"], [125, 3, 1, "", "slice_by_energy"], [125, 3, 1, "", "slice_by_idx"], [125, 3, 1, "", "slice_by_time"], [125, 2, 1, "", "sqrt_ts"], [125, 2, 1, "", "sqrt_ts_threshold_ul"], [125, 2, 1, "", "stat"], [125, 2, 1, "", "stat_null"], [125, 2, 1, "", "stat_scan"], [125, 2, 1, "", "success"], [125, 3, 1, "", "to_hdulist"], [125, 3, 1, "", "to_maps"], [125, 2, 1, "", "ts"], [125, 2, 1, "", "ts_scan"], [125, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[126, 3, 1, "", "construct"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "dict"], [126, 3, 1, "", "from_header"], [126, 3, 1, "", "from_orm"], [126, 3, 1, "", "json"], [126, 2, 1, "", "model_computed_fields"], [126, 2, 1, "", "model_config"], [126, 3, 1, "", "model_construct"], [126, 3, 1, "", "model_copy"], [126, 3, 1, "", "model_dump"], [126, 3, 1, "", "model_dump_json"], [126, 2, 1, "", "model_extra"], [126, 2, 1, "", "model_fields"], [126, 2, 1, "", "model_fields_set"], [126, 3, 1, "", "model_json_schema"], [126, 3, 1, "", "model_parametrized_name"], [126, 3, 1, "", "model_post_init"], [126, 3, 1, "", "model_rebuild"], [126, 3, 1, "", "model_validate"], [126, 3, 1, "", "model_validate_json"], [126, 3, 1, "", "model_validate_strings"], [126, 3, 1, "", "parse_file"], [126, 3, 1, "", "parse_obj"], [126, 3, 1, "", "parse_raw"], [126, 3, 1, "", "schema"], [126, 3, 1, "", "schema_json"], [126, 2, 1, "", "tag"], [126, 3, 1, "", "to_header"], [126, 3, 1, "", "to_yaml"], [126, 3, 1, "", "update_forward_refs"], [126, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[127, 2, 1, "", "acceptance_off"], [127, 2, 1, "", "acceptance_on"], [127, 3, 1, "", "all_quantities"], [127, 2, 1, "", "alpha"], [127, 2, 1, "", "available_quantities"], [127, 3, 1, "", "copy"], [127, 2, 1, "", "counts"], [127, 2, 1, "", "dnde"], [127, 2, 1, "", "dnde_err"], [127, 2, 1, "", "dnde_errn"], [127, 2, 1, "", "dnde_errp"], [127, 2, 1, "", "dnde_ref"], [127, 2, 1, "", "dnde_scan_values"], [127, 2, 1, "", "dnde_ul"], [127, 2, 1, "", "e2dnde"], [127, 2, 1, "", "e2dnde_err"], [127, 2, 1, "", "e2dnde_errn"], [127, 2, 1, "", "e2dnde_errp"], [127, 2, 1, "", "e2dnde_ref"], [127, 2, 1, "", "e2dnde_ul"], [127, 2, 1, "", "eflux"], [127, 2, 1, "", "eflux_err"], [127, 2, 1, "", "eflux_errn"], [127, 2, 1, "", "eflux_errp"], [127, 2, 1, "", "eflux_ref"], [127, 2, 1, "", "eflux_ul"], [127, 2, 1, "", "energy_axis"], [127, 2, 1, "", "energy_max"], [127, 2, 1, "", "energy_min"], [127, 2, 1, "", "energy_ref"], [127, 2, 1, "", "filter_success_nan"], [127, 2, 1, "", "flux"], [127, 2, 1, "", "flux_err"], [127, 2, 1, "", "flux_errn"], [127, 2, 1, "", "flux_errp"], [127, 2, 1, "", "flux_ref"], [127, 2, 1, "", "flux_sensitivity"], [127, 2, 1, "", "flux_ul"], [127, 3, 1, "", "from_hdulist"], [127, 3, 1, "", "from_maps"], [127, 3, 1, "", "from_stack"], [127, 3, 1, "", "from_table"], [127, 2, 1, "", "geom"], [127, 3, 1, "", "get_flux_points"], [127, 2, 1, "", "has_any_ts"], [127, 2, 1, "", "has_stat_profiles"], [127, 2, 1, "", "has_success"], [127, 2, 1, "", "has_ul"], [127, 2, 1, "", "is_convertible_to_flux_sed_type"], [127, 2, 1, "", "is_ul"], [127, 3, 1, "", "iter_by_axis"], [127, 2, 1, "", "n_dof"], [127, 2, 1, "", "n_sigma"], [127, 2, 1, "", "n_sigma_ul"], [127, 2, 1, "", "niter"], [127, 2, 1, "", "norm"], [127, 2, 1, "", "norm_err"], [127, 2, 1, "", "norm_errn"], [127, 2, 1, "", "norm_errp"], [127, 2, 1, "", "norm_sensitivity"], [127, 2, 1, "", "norm_ul"], [127, 2, 1, "", "npred"], [127, 2, 1, "", "npred_background"], [127, 2, 1, "", "npred_excess"], [127, 2, 1, "", "npred_excess_err"], [127, 2, 1, "", "npred_excess_errn"], [127, 2, 1, "", "npred_excess_errp"], [127, 2, 1, "", "npred_excess_ref"], [127, 2, 1, "", "npred_excess_ul"], [127, 3, 1, "", "plot"], [127, 3, 1, "", "plot_ts_profiles"], [127, 3, 1, "", "read"], [127, 3, 1, "", "recompute_ul"], [127, 2, 1, "", "reference_model"], [127, 2, 1, "", "reference_model_default"], [127, 2, 1, "", "reference_spectral_model"], [127, 3, 1, "", "resample_axis"], [127, 2, 1, "", "sed_type_init"], [127, 2, 1, "", "sed_type_plot_default"], [127, 3, 1, "", "slice_by_coord"], [127, 3, 1, "", "slice_by_energy"], [127, 3, 1, "", "slice_by_idx"], [127, 3, 1, "", "slice_by_time"], [127, 2, 1, "", "sqrt_ts"], [127, 2, 1, "", "sqrt_ts_threshold_ul"], [127, 2, 1, "", "stat"], [127, 2, 1, "", "stat_null"], [127, 2, 1, "", "stat_scan"], [127, 2, 1, "", "success"], [127, 3, 1, "", "to_hdulist"], [127, 3, 1, "", "to_maps"], [127, 3, 1, "", "to_table"], [127, 2, 1, "", "ts"], [127, 2, 1, "", "ts_scan"], [127, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[128, 2, 1, "", "config_parameters"], [128, 3, 1, "", "copy"], [128, 3, 1, "", "estimate_best_fit"], [128, 3, 1, "", "estimate_counts"], [128, 3, 1, "", "estimate_errn_errp"], [128, 3, 1, "", "estimate_flux_point"], [128, 3, 1, "", "estimate_npred"], [128, 3, 1, "", "estimate_npred_excess"], [128, 3, 1, "", "estimate_scan"], [128, 3, 1, "", "estimate_sensitivity"], [128, 3, 1, "", "estimate_ts"], [128, 3, 1, "", "estimate_ul"], [128, 3, 1, "", "get_scale_model"], [128, 2, 1, "", "n_jobs"], [128, 2, 1, "", "parallel_backend"], [128, 3, 1, "", "run"], [128, 2, 1, "", "selection_optional"], [128, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_flux_point"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_npred_excess"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_sensitivity"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "get_scale_model"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "parallel_backend"], [129, 2, 1, "", "projected_distance_axis"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[130, 3, 1, "", "normalize"], [130, 3, 1, "", "peek"], [130, 3, 1, "", "plot"], [130, 3, 1, "", "plot_err"], [130, 2, 1, "", "profile"], [130, 2, 1, "", "profile_err"], [130, 3, 1, "", "smooth"], [130, 2, 1, "", "x_max"], [130, 2, 1, "", "x_min"], [130, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "estimate_best_fit"], [132, 3, 1, "", "estimate_counts"], [132, 3, 1, "", "estimate_errn_errp"], [132, 3, 1, "", "estimate_flux_point"], [132, 3, 1, "", "estimate_npred"], [132, 3, 1, "", "estimate_npred_excess"], [132, 3, 1, "", "estimate_scan"], [132, 3, 1, "", "estimate_sensitivity"], [132, 3, 1, "", "estimate_time_bin_flux"], [132, 3, 1, "", "estimate_ts"], [132, 3, 1, "", "estimate_ul"], [132, 3, 1, "", "expand_map"], [132, 3, 1, "", "get_scale_model"], [132, 2, 1, "", "n_jobs"], [132, 2, 1, "", "parallel_backend"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[133, 2, 1, "", "config_parameters"], [133, 3, 1, "", "copy"], [133, 3, 1, "", "estimate_best_fit"], [133, 3, 1, "", "estimate_counts"], [133, 3, 1, "", "estimate_errn_errp"], [133, 3, 1, "", "estimate_npred"], [133, 3, 1, "", "estimate_scan"], [133, 3, 1, "", "estimate_sensitivity"], [133, 3, 1, "", "estimate_ts"], [133, 3, 1, "", "estimate_ul"], [133, 3, 1, "", "run"], [133, 2, 1, "", "selection_optional"], [133, 2, 1, "", "tag"]], "gammapy.estimators.ParameterSensitivityEstimator": [[134, 3, 1, "", "parameter_matching_significance"], [134, 3, 1, "", "run"], [134, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[135, 2, 1, "", "config_parameters"], [135, 3, 1, "", "copy"], [135, 3, 1, "", "estimate_min_e2dnde"], [135, 3, 1, "", "estimate_min_excess"], [135, 3, 1, "", "run"], [135, 2, 1, "", "selection_optional"], [135, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[136, 2, 1, "", "config_parameters"], [136, 3, 1, "", "copy"], [136, 3, 1, "", "estimate_fit_input_maps"], [136, 3, 1, "", "estimate_flux_default"], [136, 3, 1, "", "estimate_flux_map"], [136, 3, 1, "", "estimate_kernel"], [136, 3, 1, "", "estimate_mask_default"], [136, 3, 1, "", "estimate_pad_width"], [136, 2, 1, "", "n_jobs"], [136, 2, 1, "", "parallel_backend"], [136, 3, 1, "", "run"], [136, 2, 1, "", "selection_all"], [136, 2, 1, "", "selection_optional"], [136, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[137, 4, 1, "", "combine_flux_maps"], [138, 4, 1, "", "combine_significance_maps"], [139, 4, 1, "", "compute_lightcurve_discrete_correlation"], [140, 4, 1, "", "compute_lightcurve_doublingtime"], [141, 4, 1, "", "compute_lightcurve_fpp"], [142, 4, 1, "", "compute_lightcurve_fvar"], [143, 4, 1, "", "estimate_exposure_reco_energy"], [144, 4, 1, "", "find_peaks"], [145, 4, 1, "", "find_peaks_in_flux_map"], [146, 4, 1, "", "get_combined_flux_maps"], [147, 4, 1, "", "get_combined_significance_maps"], [148, 4, 1, "", "get_rebinned_axis"], [149, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[150, 1, 1, "", "Background2D"], [151, 1, 1, "", "Background3D"], [152, 1, 1, "", "BackgroundIRF"], [153, 1, 1, "", "EDispKernel"], [154, 1, 1, "", "EDispKernelMap"], [155, 1, 1, "", "EDispMap"], [156, 1, 1, "", "EffectiveAreaTable2D"], [157, 1, 1, "", "EnergyDependentMultiGaussPSF"], [158, 1, 1, "", "EnergyDispersion2D"], [159, 1, 1, "", "FoVAlignment"], [160, 1, 1, "", "IRF"], [161, 1, 1, "", "IRFMap"], [162, 5, 1, "", "IRF_REGISTRY"], [163, 1, 1, "", "PSF3D"], [164, 1, 1, "", "PSFKernel"], [165, 1, 1, "", "PSFKing"], [166, 1, 1, "", "PSFMap"], [167, 1, 1, "", "ParametricPSF"], [168, 1, 1, "", "RadMax2D"], [169, 1, 1, "", "RecoPSFMap"], [170, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 2, 1, "", "default_unit"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot"], [150, 3, 1, "", "plot_at_energy"], [150, 3, 1, "", "plot_energy_dependence"], [150, 3, 1, "", "plot_offset_dependence"], [150, 3, 1, "", "plot_spectrum"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_3d"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[151, 2, 1, "", "axes"], [151, 3, 1, "", "cumsum"], [151, 2, 1, "", "data"], [151, 2, 1, "", "default_interp_kwargs"], [151, 2, 1, "", "default_unit"], [151, 3, 1, "", "evaluate"], [151, 2, 1, "", "fov_alignment"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "from_table"], [151, 2, 1, "", "has_offset_axis"], [151, 3, 1, "", "integral"], [151, 3, 1, "", "integrate_log_log"], [151, 3, 1, "", "interp_missing_data"], [151, 3, 1, "", "is_allclose"], [151, 2, 1, "", "is_pointlike"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "pad"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "plot_at_energy"], [151, 2, 1, "", "quantity"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "slice_by_idx"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_2d"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_table"], [151, 3, 1, "", "to_table_hdu"], [151, 3, 1, "", "to_unit"], [151, 2, 1, "", "unit"], [151, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 3, 1, "", "evaluate"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[153, 2, 1, "", "axes"], [153, 3, 1, "", "cumsum"], [153, 2, 1, "", "data"], [153, 2, 1, "", "default_interp_kwargs"], [153, 3, 1, "", "evaluate"], [153, 2, 1, "", "fov_alignment"], [153, 3, 1, "", "from_diagonal_response"], [153, 3, 1, "", "from_gauss"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "from_table"], [153, 3, 1, "", "get_bias"], [153, 3, 1, "", "get_bias_energy"], [153, 3, 1, "", "get_mean"], [153, 3, 1, "", "get_resolution"], [153, 2, 1, "", "has_offset_axis"], [153, 3, 1, "", "integral"], [153, 3, 1, "", "integrate_log_log"], [153, 3, 1, "", "interp_missing_data"], [153, 3, 1, "", "is_allclose"], [153, 2, 1, "", "is_pointlike"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "pad"], [153, 3, 1, "", "pdf_in_safe_range"], [153, 2, 1, "", "pdf_matrix"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot_bias"], [153, 3, 1, "", "plot_matrix"], [153, 2, 1, "", "quantity"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "slice_by_idx"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_image"], [153, 3, 1, "", "to_table"], [153, 3, 1, "", "to_table_hdu"], [153, 3, 1, "", "to_unit"], [153, 2, 1, "", "unit"], [153, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[154, 3, 1, "", "copy"], [154, 3, 1, "", "cutout"], [154, 3, 1, "", "downsample"], [154, 2, 1, "", "edisp_map"], [154, 3, 1, "", "from_diagonal_response"], [154, 3, 1, "", "from_edisp_kernel"], [154, 3, 1, "", "from_gauss"], [154, 3, 1, "", "from_geom"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "get_edisp_kernel"], [154, 2, 1, "", "has_single_spatial_bin"], [154, 2, 1, "", "mask_safe_image"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "resample_energy_axis"], [154, 3, 1, "", "slice_by_idx"], [154, 3, 1, "", "stack"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_image"], [154, 3, 1, "", "to_region_nd_map"], [154, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[155, 3, 1, "", "copy"], [155, 3, 1, "", "cutout"], [155, 3, 1, "", "downsample"], [155, 2, 1, "", "edisp_map"], [155, 3, 1, "", "from_diagonal_response"], [155, 3, 1, "", "from_geom"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "get_edisp_kernel"], [155, 2, 1, "", "has_single_spatial_bin"], [155, 2, 1, "", "mask_safe_image"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "sample_coord"], [155, 3, 1, "", "slice_by_idx"], [155, 3, 1, "", "stack"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_edisp_kernel_map"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_region_nd_map"], [155, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[156, 2, 1, "", "axes"], [156, 3, 1, "", "cumsum"], [156, 2, 1, "", "data"], [156, 2, 1, "", "default_interp_kwargs"], [156, 2, 1, "", "default_unit"], [156, 3, 1, "", "evaluate"], [156, 2, 1, "", "fov_alignment"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "from_parametrization"], [156, 3, 1, "", "from_table"], [156, 2, 1, "", "has_offset_axis"], [156, 3, 1, "", "integral"], [156, 3, 1, "", "integrate_log_log"], [156, 3, 1, "", "interp_missing_data"], [156, 3, 1, "", "is_allclose"], [156, 2, 1, "", "is_pointlike"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "pad"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "plot"], [156, 3, 1, "", "plot_energy_dependence"], [156, 3, 1, "", "plot_offset_dependence"], [156, 2, 1, "", "quantity"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "slice_by_idx"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_table"], [156, 3, 1, "", "to_table_hdu"], [156, 3, 1, "", "to_unit"], [156, 2, 1, "", "unit"], [156, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "containment"], [157, 3, 1, "", "containment_radius"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 3, 1, "", "evaluate"], [157, 3, 1, "", "evaluate_containment"], [157, 3, 1, "", "evaluate_direct"], [157, 3, 1, "", "evaluate_parameters"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "info"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot_containment_radius"], [157, 3, 1, "", "plot_containment_radius_vs_energy"], [157, 3, 1, "", "plot_psf_vs_rad"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 2, 1, "", "required_parameters"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_psf3d"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[158, 2, 1, "", "axes"], [158, 3, 1, "", "cumsum"], [158, 2, 1, "", "data"], [158, 2, 1, "", "default_interp_kwargs"], [158, 2, 1, "", "default_unit"], [158, 3, 1, "", "evaluate"], [158, 2, 1, "", "fov_alignment"], [158, 3, 1, "", "from_gauss"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "from_table"], [158, 2, 1, "", "has_offset_axis"], [158, 3, 1, "", "integral"], [158, 3, 1, "", "integrate_log_log"], [158, 3, 1, "", "interp_missing_data"], [158, 3, 1, "", "is_allclose"], [158, 2, 1, "", "is_pointlike"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "pad"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_bias"], [158, 3, 1, "", "plot_migration"], [158, 2, 1, "", "quantity"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 3, 1, "", "slice_by_idx"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_edisp_kernel"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_table"], [158, 3, 1, "", "to_table_hdu"], [158, 3, 1, "", "to_unit"], [158, 2, 1, "", "unit"], [158, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[159, 2, 1, "", "ALTAZ"], [159, 2, 1, "", "RADEC"], [159, 2, 1, "", "REVERSE_LON_RADEC"]], "gammapy.irf.IRF": [[160, 2, 1, "", "axes"], [160, 3, 1, "", "cumsum"], [160, 2, 1, "", "data"], [160, 2, 1, "", "default_interp_kwargs"], [160, 3, 1, "", "evaluate"], [160, 2, 1, "", "fov_alignment"], [160, 3, 1, "", "from_hdulist"], [160, 3, 1, "", "from_table"], [160, 2, 1, "", "has_offset_axis"], [160, 3, 1, "", "integral"], [160, 3, 1, "", "integrate_log_log"], [160, 3, 1, "", "interp_missing_data"], [160, 3, 1, "", "is_allclose"], [160, 2, 1, "", "is_pointlike"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "pad"], [160, 2, 1, "", "quantity"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 3, 1, "", "slice_by_idx"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_table"], [160, 3, 1, "", "to_table_hdu"], [160, 3, 1, "", "to_unit"], [160, 2, 1, "", "unit"], [160, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[161, 3, 1, "", "copy"], [161, 3, 1, "", "cutout"], [161, 3, 1, "", "downsample"], [161, 3, 1, "", "from_hdulist"], [161, 2, 1, "", "has_single_spatial_bin"], [161, 2, 1, "", "mask_safe_image"], [161, 3, 1, "", "read"], [161, 2, 1, "", "required_axes"], [161, 3, 1, "", "slice_by_idx"], [161, 3, 1, "", "stack"], [161, 2, 1, "", "tag"], [161, 3, 1, "", "to_hdulist"], [161, 3, 1, "", "to_region_nd_map"], [161, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[163, 2, 1, "", "axes"], [163, 3, 1, "", "containment"], [163, 3, 1, "", "containment_radius"], [163, 3, 1, "", "cumsum"], [163, 2, 1, "", "data"], [163, 2, 1, "", "default_interp_kwargs"], [163, 2, 1, "", "default_unit"], [163, 3, 1, "", "evaluate"], [163, 2, 1, "", "fov_alignment"], [163, 3, 1, "", "from_hdulist"], [163, 3, 1, "", "from_table"], [163, 2, 1, "", "has_offset_axis"], [163, 3, 1, "", "info"], [163, 3, 1, "", "integral"], [163, 3, 1, "", "integrate_log_log"], [163, 3, 1, "", "interp_missing_data"], [163, 3, 1, "", "is_allclose"], [163, 2, 1, "", "is_pointlike"], [163, 3, 1, "", "normalize"], [163, 3, 1, "", "pad"], [163, 3, 1, "", "peek"], [163, 3, 1, "", "plot_containment_radius"], [163, 3, 1, "", "plot_containment_radius_vs_energy"], [163, 3, 1, "", "plot_psf_vs_rad"], [163, 2, 1, "", "quantity"], [163, 3, 1, "", "read"], [163, 2, 1, "", "required_axes"], [163, 3, 1, "", "slice_by_idx"], [163, 2, 1, "", "tag"], [163, 3, 1, "", "to_hdulist"], [163, 3, 1, "", "to_table"], [163, 3, 1, "", "to_table_hdu"], [163, 3, 1, "", "to_unit"], [163, 2, 1, "", "unit"], [163, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[164, 2, 1, "", "data"], [164, 3, 1, "", "from_gauss"], [164, 3, 1, "", "from_spatial_model"], [164, 3, 1, "", "normalize"], [164, 3, 1, "", "peek"], [164, 3, 1, "", "plot_kernel"], [164, 2, 1, "", "psf_kernel_map"], [164, 3, 1, "", "read"], [164, 3, 1, "", "slice_by_idx"], [164, 3, 1, "", "to_image"], [164, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[165, 2, 1, "", "axes"], [165, 3, 1, "", "containment"], [165, 3, 1, "", "containment_radius"], [165, 3, 1, "", "cumsum"], [165, 2, 1, "", "data"], [165, 2, 1, "", "default_interp_kwargs"], [165, 3, 1, "", "evaluate"], [165, 3, 1, "", "evaluate_containment"], [165, 3, 1, "", "evaluate_direct"], [165, 3, 1, "", "evaluate_parameters"], [165, 2, 1, "", "fov_alignment"], [165, 3, 1, "", "from_hdulist"], [165, 3, 1, "", "from_table"], [165, 2, 1, "", "has_offset_axis"], [165, 3, 1, "", "info"], [165, 3, 1, "", "integral"], [165, 3, 1, "", "integrate_log_log"], [165, 3, 1, "", "interp_missing_data"], [165, 3, 1, "", "is_allclose"], [165, 2, 1, "", "is_pointlike"], [165, 3, 1, "", "normalize"], [165, 3, 1, "", "pad"], [165, 3, 1, "", "peek"], [165, 3, 1, "", "plot_containment_radius"], [165, 3, 1, "", "plot_containment_radius_vs_energy"], [165, 3, 1, "", "plot_psf_vs_rad"], [165, 2, 1, "", "quantity"], [165, 3, 1, "", "read"], [165, 2, 1, "", "required_axes"], [165, 2, 1, "", "required_parameters"], [165, 3, 1, "", "slice_by_idx"], [165, 2, 1, "", "tag"], [165, 3, 1, "", "to_hdulist"], [165, 3, 1, "", "to_psf3d"], [165, 3, 1, "", "to_table"], [165, 3, 1, "", "to_table_hdu"], [165, 3, 1, "", "to_unit"], [165, 2, 1, "", "unit"], [165, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[166, 3, 1, "", "containment"], [166, 3, 1, "", "containment_radius"], [166, 3, 1, "", "containment_radius_map"], [166, 3, 1, "", "copy"], [166, 3, 1, "", "cutout"], [166, 3, 1, "", "downsample"], [166, 2, 1, "", "energy_name"], [166, 3, 1, "", "from_gauss"], [166, 3, 1, "", "from_geom"], [166, 3, 1, "", "from_hdulist"], [166, 3, 1, "", "get_psf_kernel"], [166, 2, 1, "", "has_single_spatial_bin"], [166, 2, 1, "", "mask_safe_image"], [166, 3, 1, "", "normalize"], [166, 3, 1, "", "peek"], [166, 3, 1, "", "plot_containment_radius_vs_energy"], [166, 3, 1, "", "plot_psf_vs_rad"], [166, 2, 1, "", "psf_map"], [166, 3, 1, "", "read"], [166, 2, 1, "", "required_axes"], [166, 3, 1, "", "sample_coord"], [166, 3, 1, "", "slice_by_idx"], [166, 3, 1, "", "stack"], [166, 2, 1, "", "tag"], [166, 3, 1, "", "to_hdulist"], [166, 3, 1, "", "to_image"], [166, 3, 1, "", "to_region_nd_map"], [166, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[167, 2, 1, "", "axes"], [167, 3, 1, "", "containment"], [167, 3, 1, "", "containment_radius"], [167, 3, 1, "", "cumsum"], [167, 2, 1, "", "data"], [167, 2, 1, "", "default_interp_kwargs"], [167, 3, 1, "", "evaluate"], [167, 3, 1, "", "evaluate_containment"], [167, 3, 1, "", "evaluate_direct"], [167, 3, 1, "", "evaluate_parameters"], [167, 2, 1, "", "fov_alignment"], [167, 3, 1, "", "from_hdulist"], [167, 3, 1, "", "from_table"], [167, 2, 1, "", "has_offset_axis"], [167, 3, 1, "", "info"], [167, 3, 1, "", "integral"], [167, 3, 1, "", "integrate_log_log"], [167, 3, 1, "", "interp_missing_data"], [167, 3, 1, "", "is_allclose"], [167, 2, 1, "", "is_pointlike"], [167, 3, 1, "", "normalize"], [167, 3, 1, "", "pad"], [167, 3, 1, "", "peek"], [167, 3, 1, "", "plot_containment_radius"], [167, 3, 1, "", "plot_containment_radius_vs_energy"], [167, 3, 1, "", "plot_psf_vs_rad"], [167, 2, 1, "", "quantity"], [167, 3, 1, "", "read"], [167, 2, 1, "", "required_axes"], [167, 2, 1, "", "required_parameters"], [167, 3, 1, "", "slice_by_idx"], [167, 2, 1, "", "tag"], [167, 3, 1, "", "to_hdulist"], [167, 3, 1, "", "to_psf3d"], [167, 3, 1, "", "to_table"], [167, 3, 1, "", "to_table_hdu"], [167, 3, 1, "", "to_unit"], [167, 2, 1, "", "unit"], [167, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[168, 2, 1, "", "axes"], [168, 3, 1, "", "cumsum"], [168, 2, 1, "", "data"], [168, 2, 1, "", "default_interp_kwargs"], [168, 2, 1, "", "default_unit"], [168, 3, 1, "", "evaluate"], [168, 2, 1, "", "fov_alignment"], [168, 3, 1, "", "from_hdulist"], [168, 3, 1, "", "from_irf"], [168, 3, 1, "", "from_table"], [168, 2, 1, "", "has_offset_axis"], [168, 3, 1, "", "integral"], [168, 3, 1, "", "integrate_log_log"], [168, 3, 1, "", "interp_missing_data"], [168, 3, 1, "", "is_allclose"], [168, 2, 1, "", "is_fixed_rad_max"], [168, 2, 1, "", "is_pointlike"], [168, 3, 1, "", "normalize"], [168, 3, 1, "", "pad"], [168, 3, 1, "", "plot_rad_max_vs_energy"], [168, 2, 1, "", "quantity"], [168, 3, 1, "", "read"], [168, 2, 1, "", "required_axes"], [168, 3, 1, "", "slice_by_idx"], [168, 2, 1, "", "tag"], [168, 3, 1, "", "to_hdulist"], [168, 3, 1, "", "to_table"], [168, 3, 1, "", "to_table_hdu"], [168, 3, 1, "", "to_unit"], [168, 2, 1, "", "unit"], [168, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[169, 3, 1, "", "containment"], [169, 3, 1, "", "containment_radius"], [169, 3, 1, "", "containment_radius_map"], [169, 3, 1, "", "copy"], [169, 3, 1, "", "cutout"], [169, 3, 1, "", "downsample"], [169, 2, 1, "", "energy_name"], [169, 3, 1, "", "from_gauss"], [169, 3, 1, "", "from_geom"], [169, 3, 1, "", "from_hdulist"], [169, 3, 1, "", "get_psf_kernel"], [169, 2, 1, "", "has_single_spatial_bin"], [169, 2, 1, "", "mask_safe_image"], [169, 3, 1, "", "normalize"], [169, 3, 1, "", "peek"], [169, 3, 1, "", "plot_containment_radius_vs_energy"], [169, 3, 1, "", "plot_psf_vs_rad"], [169, 2, 1, "", "psf_map"], [169, 3, 1, "", "read"], [169, 2, 1, "", "required_axes"], [169, 3, 1, "", "sample_coord"], [169, 3, 1, "", "slice_by_idx"], [169, 3, 1, "", "stack"], [169, 2, 1, "", "tag"], [169, 3, 1, "", "to_hdulist"], [169, 3, 1, "", "to_image"], [169, 3, 1, "", "to_region_nd_map"], [169, 3, 1, "", "write"]], "gammapy.makers": [[171, 1, 1, "", "AdaptiveRingBackgroundMaker"], [172, 1, 1, "", "DatasetsMaker"], [173, 1, 1, "", "FoVBackgroundMaker"], [174, 5, 1, "", "MAKER_REGISTRY"], [175, 1, 1, "", "Maker"], [176, 1, 1, "", "MapDatasetMaker"], [177, 1, 1, "", "PhaseBackgroundMaker"], [178, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [179, 1, 1, "", "ReflectedRegionsFinder"], [180, 1, 1, "", "RegionsFinder"], [181, 1, 1, "", "RingBackgroundMaker"], [182, 1, 1, "", "SafeMaskMaker"], [183, 1, 1, "", "SpectrumDatasetMaker"], [184, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[171, 3, 1, "", "kernels"], [171, 3, 1, "", "make_cubes"], [171, 3, 1, "", "run"], [171, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[172, 3, 1, "", "callback"], [172, 3, 1, "", "error_callback"], [172, 3, 1, "", "make_dataset"], [172, 2, 1, "", "n_jobs"], [172, 2, 1, "", "offset_max"], [172, 2, 1, "", "parallel_backend"], [172, 3, 1, "", "run"], [172, 2, 1, "", "safe_mask_maker"], [172, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[173, 2, 1, "", "available_methods"], [173, 3, 1, "", "make_background_fit"], [173, 3, 1, "", "make_background_scale"], [173, 3, 1, "", "make_default_fov_background_model"], [173, 3, 1, "", "make_exclusion_mask"], [173, 2, 1, "", "method"], [173, 3, 1, "", "run"], [173, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[175, 3, 1, "", "run"], [175, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[176, 2, 1, "", "available_selection"], [176, 3, 1, "", "make_background"], [176, 3, 1, "", "make_counts"], [176, 3, 1, "", "make_edisp"], [176, 3, 1, "", "make_edisp_kernel"], [176, 3, 1, "", "make_exposure"], [176, 3, 1, "", "make_exposure_irf"], [176, 3, 1, "", "make_meta_table"], [176, 3, 1, "", "make_psf"], [176, 3, 1, "", "run"], [176, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[177, 3, 1, "", "make_counts"], [177, 3, 1, "", "make_counts_off"], [177, 3, 1, "", "run"], [177, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[178, 3, 1, "", "make_counts_off"], [178, 3, 1, "", "run"], [178, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[179, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[180, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[181, 3, 1, "", "kernel"], [181, 3, 1, "", "make_maps_off"], [181, 3, 1, "", "run"], [181, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[182, 2, 1, "", "available_methods"], [182, 3, 1, "", "make_mask_bkg_invalid"], [182, 3, 1, "", "make_mask_energy_aeff_default"], [182, 3, 1, "", "make_mask_energy_aeff_max"], [182, 3, 1, "", "make_mask_energy_bkg_peak"], [182, 3, 1, "", "make_mask_energy_edisp_bias"], [182, 3, 1, "", "make_mask_offset_max"], [182, 3, 1, "", "run"], [182, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[183, 2, 1, "", "available_selection"], [183, 3, 1, "", "make_background"], [183, 3, 1, "", "make_counts"], [183, 3, 1, "", "make_edisp"], [183, 3, 1, "", "make_edisp_kernel"], [183, 3, 1, "", "make_exposure"], [183, 3, 1, "", "make_exposure_irf"], [183, 3, 1, "", "make_meta_table"], [183, 3, 1, "", "make_psf"], [183, 3, 1, "", "run"], [183, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[184, 3, 1, "", "run"]], "gammapy.makers.utils": [[185, 4, 1, "", "make_counts_rad_max"], [186, 4, 1, "", "make_edisp_kernel_map"], [187, 4, 1, "", "make_edisp_map"], [188, 4, 1, "", "make_effective_livetime_map"], [189, 4, 1, "", "make_map_background_irf"], [190, 4, 1, "", "make_map_exposure_true_energy"], [191, 4, 1, "", "make_observation_time_map"], [192, 4, 1, "", "make_psf_map"], [193, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[194, 1, 1, "", "Geom"], [195, 1, 1, "", "HpxGeom"], [196, 1, 1, "", "HpxMap"], [197, 1, 1, "", "HpxNDMap"], [198, 1, 1, "", "LabelMapAxis"], [199, 1, 1, "", "Map"], [200, 1, 1, "", "MapAxes"], [201, 1, 1, "", "MapAxis"], [202, 1, 1, "", "MapCoord"], [203, 1, 1, "", "Maps"], [204, 1, 1, "", "RegionGeom"], [205, 1, 1, "", "RegionNDMap"], [206, 1, 1, "", "TimeMapAxis"], [207, 1, 1, "", "WcsGeom"], [208, 1, 1, "", "WcsMap"], [209, 1, 1, "", "WcsNDMap"], [210, 4, 1, "", "containment_radius"], [211, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[194, 2, 1, "", "as_energy_true"], [194, 2, 1, "", "center_coord"], [194, 2, 1, "", "center_pix"], [194, 2, 1, "", "center_skydir"], [194, 3, 1, "", "contains"], [194, 3, 1, "", "contains_pix"], [194, 3, 1, "", "coord_to_idx"], [194, 3, 1, "", "coord_to_pix"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create_mask"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "data_nbytes"], [194, 2, 1, "", "data_shape"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "drop"], [194, 3, 1, "", "energy_mask"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "get_coord"], [194, 3, 1, "", "get_idx"], [194, 2, 1, "", "has_energy_axis"], [194, 2, 1, "", "is_allsky"], [194, 2, 1, "", "is_flat"], [194, 2, 1, "", "is_image"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "pix_to_coord"], [194, 3, 1, "", "pix_to_idx"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "replace_axis"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "solid_angle"], [194, 3, 1, "", "squash"], [194, 3, 1, "", "to_bands_hdu"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_image"], [194, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[195, 2, 1, "", "as_energy_true"], [195, 2, 1, "", "axes"], [195, 2, 1, "", "axes_names"], [195, 2, 1, "", "center_coord"], [195, 2, 1, "", "center_pix"], [195, 2, 1, "", "center_skydir"], [195, 3, 1, "", "contains"], [195, 3, 1, "", "contains_pix"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create"], [195, 3, 1, "", "create_mask"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "cutout"], [195, 3, 1, "", "data_nbytes"], [195, 2, 1, "", "data_shape"], [195, 2, 1, "", "data_shape_axes"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "drop"], [195, 3, 1, "", "energy_mask"], [195, 2, 1, "", "frame"], [195, 3, 1, "", "from_hdu"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "from_header"], [195, 3, 1, "", "get_coord"], [195, 3, 1, "", "get_idx"], [195, 3, 1, "", "get_index_list"], [195, 3, 1, "", "global_to_local"], [195, 2, 1, "", "has_energy_axis"], [195, 3, 1, "", "interp_weights"], [195, 2, 1, "", "ipix"], [195, 3, 1, "", "is_aligned"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "is_allsky"], [195, 2, 1, "", "is_flat"], [195, 2, 1, "", "is_hpx"], [195, 2, 1, "", "is_image"], [195, 2, 1, "", "is_region"], [195, 2, 1, "", "is_regular"], [195, 3, 1, "", "local_to_global"], [195, 2, 1, "", "ndim"], [195, 2, 1, "", "nest"], [195, 2, 1, "", "npix"], [195, 2, 1, "", "npix_max"], [195, 2, 1, "", "nside"], [195, 2, 1, "", "order"], [195, 2, 1, "", "ordering"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 2, 1, "", "pixel_scales"], [195, 2, 1, "", "projection"], [195, 2, 1, "", "region"], [195, 3, 1, "", "region_mask"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "replace_axis"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "separation"], [195, 2, 1, "", "shape_axes"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "solid_angle"], [195, 3, 1, "", "squash"], [195, 3, 1, "", "to_bands_hdu"], [195, 3, 1, "", "to_binsz"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_header"], [195, 3, 1, "", "to_image"], [195, 3, 1, "", "to_nside"], [195, 3, 1, "", "to_swapped"], [195, 3, 1, "", "to_wcs_geom"], [195, 3, 1, "", "to_wcs_tiles"], [195, 3, 1, "", "upsample"], [195, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[196, 3, 1, "", "coadd"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_interactive"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_hdu"], [196, 3, 1, "", "to_hdulist"], [196, 3, 1, "", "to_swapped"], [196, 3, 1, "", "to_unit"], [196, 3, 1, "", "to_wcs"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[197, 3, 1, "", "coadd"], [197, 3, 1, "", "convolve"], [197, 3, 1, "", "convolve_full"], [197, 3, 1, "", "convolve_wcs"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "create"], [197, 3, 1, "", "crop"], [197, 3, 1, "", "cumsum"], [197, 3, 1, "", "cutout"], [197, 2, 1, "", "data"], [197, 3, 1, "", "dot"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "fill_by_coord"], [197, 3, 1, "", "fill_by_idx"], [197, 3, 1, "", "fill_by_pix"], [197, 3, 1, "", "fill_events"], [197, 3, 1, "", "from_geom"], [197, 3, 1, "", "from_hdu"], [197, 3, 1, "", "from_hdulist"], [197, 3, 1, "", "from_stack"], [197, 3, 1, "", "from_wcs_tiles"], [197, 2, 1, "", "geom"], [197, 3, 1, "", "get_by_coord"], [197, 3, 1, "", "get_by_idx"], [197, 3, 1, "", "get_by_pix"], [197, 3, 1, "", "get_image_by_coord"], [197, 3, 1, "", "get_image_by_idx"], [197, 3, 1, "", "get_image_by_pix"], [197, 3, 1, "", "get_spectrum"], [197, 3, 1, "", "integral"], [197, 3, 1, "", "interp_by_coord"], [197, 3, 1, "", "interp_by_pix"], [197, 3, 1, "", "interp_to_geom"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_mask"], [197, 3, 1, "", "iter_by_axis"], [197, 3, 1, "", "iter_by_image"], [197, 3, 1, "", "iter_by_image_data"], [197, 3, 1, "", "iter_by_image_index"], [197, 3, 1, "", "mask_nearest_position"], [197, 2, 1, "", "meta"], [197, 3, 1, "", "normalize"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "plot"], [197, 3, 1, "", "plot_grid"], [197, 3, 1, "", "plot_interactive"], [197, 3, 1, "", "plot_mask"], [197, 2, 1, "", "quantity"], [197, 3, 1, "", "read"], [197, 3, 1, "", "reduce"], [197, 3, 1, "", "reduce_over_axes"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "reorder_axes"], [197, 3, 1, "", "reproject_by_image"], [197, 3, 1, "", "reproject_to_geom"], [197, 3, 1, "", "resample"], [197, 3, 1, "", "resample_axis"], [197, 3, 1, "", "sample_coord"], [197, 3, 1, "", "set_by_coord"], [197, 3, 1, "", "set_by_idx"], [197, 3, 1, "", "set_by_pix"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "smooth"], [197, 3, 1, "", "split_by_axis"], [197, 3, 1, "", "stack"], [197, 3, 1, "", "sum_over_axes"], [197, 2, 1, "", "tag"], [197, 3, 1, "", "to_cube"], [197, 3, 1, "", "to_hdu"], [197, 3, 1, "", "to_hdulist"], [197, 3, 1, "", "to_nside"], [197, 3, 1, "", "to_region_nd_map"], [197, 3, 1, "", "to_swapped"], [197, 3, 1, "", "to_unit"], [197, 3, 1, "", "to_wcs"], [197, 3, 1, "", "to_wcs_tiles"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"], [197, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[198, 2, 1, "", "as_plot_center"], [198, 2, 1, "", "as_plot_edges"], [198, 2, 1, "", "as_plot_labels"], [198, 2, 1, "", "as_plot_xerr"], [198, 3, 1, "", "assert_name"], [198, 2, 1, "", "bin_width"], [198, 2, 1, "", "center"], [198, 3, 1, "", "concatenate"], [198, 3, 1, "", "coord_to_idx"], [198, 3, 1, "", "coord_to_pix"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "downsample"], [198, 2, 1, "", "edges"], [198, 2, 1, "", "edges_max"], [198, 2, 1, "", "edges_min"], [198, 3, 1, "", "format_plot_xaxis"], [198, 3, 1, "", "from_stack"], [198, 3, 1, "", "from_table"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "name"], [198, 2, 1, "", "nbin"], [198, 2, 1, "", "node_type"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "pix_to_coord"], [198, 3, 1, "", "pix_to_idx"], [198, 3, 1, "", "resample"], [198, 3, 1, "", "slice"], [198, 3, 1, "", "squash"], [198, 3, 1, "", "to_header"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[199, 3, 1, "", "coadd"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "create"], [199, 3, 1, "", "crop"], [199, 3, 1, "", "cumsum"], [199, 2, 1, "", "data"], [199, 3, 1, "", "dot"], [199, 3, 1, "", "downsample"], [199, 3, 1, "", "fill_by_coord"], [199, 3, 1, "", "fill_by_idx"], [199, 3, 1, "", "fill_by_pix"], [199, 3, 1, "", "fill_events"], [199, 3, 1, "", "from_geom"], [199, 3, 1, "", "from_hdulist"], [199, 3, 1, "", "from_stack"], [199, 2, 1, "", "geom"], [199, 3, 1, "", "get_by_coord"], [199, 3, 1, "", "get_by_idx"], [199, 3, 1, "", "get_by_pix"], [199, 3, 1, "", "get_image_by_coord"], [199, 3, 1, "", "get_image_by_idx"], [199, 3, 1, "", "get_image_by_pix"], [199, 3, 1, "", "get_spectrum"], [199, 3, 1, "", "integral"], [199, 3, 1, "", "interp_by_coord"], [199, 3, 1, "", "interp_by_pix"], [199, 3, 1, "", "interp_to_geom"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "is_mask"], [199, 3, 1, "", "iter_by_axis"], [199, 3, 1, "", "iter_by_image"], [199, 3, 1, "", "iter_by_image_data"], [199, 3, 1, "", "iter_by_image_index"], [199, 3, 1, "", "mask_nearest_position"], [199, 2, 1, "", "meta"], [199, 3, 1, "", "normalize"], [199, 3, 1, "", "pad"], [199, 3, 1, "", "plot_grid"], [199, 3, 1, "", "plot_interactive"], [199, 2, 1, "", "quantity"], [199, 3, 1, "", "read"], [199, 3, 1, "", "reduce"], [199, 3, 1, "", "reduce_over_axes"], [199, 3, 1, "", "rename_axes"], [199, 3, 1, "", "reorder_axes"], [199, 3, 1, "", "reproject_by_image"], [199, 3, 1, "", "reproject_to_geom"], [199, 3, 1, "", "resample"], [199, 3, 1, "", "resample_axis"], [199, 3, 1, "", "sample_coord"], [199, 3, 1, "", "set_by_coord"], [199, 3, 1, "", "set_by_idx"], [199, 3, 1, "", "set_by_pix"], [199, 3, 1, "", "slice_by_idx"], [199, 3, 1, "", "split_by_axis"], [199, 3, 1, "", "sum_over_axes"], [199, 2, 1, "", "tag"], [199, 3, 1, "", "to_cube"], [199, 3, 1, "", "to_unit"], [199, 2, 1, "", "unit"], [199, 3, 1, "", "upsample"], [199, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[200, 3, 1, "", "assert_names"], [200, 3, 1, "", "bin_volume"], [200, 2, 1, "", "center_coord"], [200, 3, 1, "", "coord_to_idx"], [200, 3, 1, "", "coord_to_pix"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "count"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "drop"], [200, 3, 1, "", "from_default"], [200, 3, 1, "", "from_table"], [200, 3, 1, "", "from_table_hdu"], [200, 3, 1, "", "get_coord"], [200, 3, 1, "", "index"], [200, 3, 1, "", "index_data"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_flat"], [200, 2, 1, "", "is_unidimensional"], [200, 2, 1, "", "iter_with_reshape"], [200, 2, 1, "", "names"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "pix_to_coord"], [200, 3, 1, "", "pix_to_idx"], [200, 2, 1, "", "primary_axis"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "replace"], [200, 3, 1, "", "resample"], [200, 2, 1, "", "reverse"], [200, 2, 1, "", "shape"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "squash"], [200, 3, 1, "", "to_header"], [200, 3, 1, "", "to_table"], [200, 3, 1, "", "to_table_hdu"], [200, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[201, 2, 1, "", "as_plot_center"], [201, 2, 1, "", "as_plot_edges"], [201, 2, 1, "", "as_plot_labels"], [201, 2, 1, "", "as_plot_scale"], [201, 2, 1, "", "as_plot_xerr"], [201, 3, 1, "", "assert_name"], [201, 2, 1, "", "bin_width"], [201, 2, 1, "", "bounds"], [201, 2, 1, "", "center"], [201, 3, 1, "", "concatenate"], [201, 3, 1, "", "coord_to_idx"], [201, 3, 1, "", "coord_to_pix"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "downsample"], [201, 2, 1, "", "edges"], [201, 2, 1, "", "edges_max"], [201, 2, 1, "", "edges_min"], [201, 3, 1, "", "format_plot_xaxis"], [201, 3, 1, "", "format_plot_yaxis"], [201, 3, 1, "", "from_bounds"], [201, 3, 1, "", "from_edges"], [201, 3, 1, "", "from_energy_bounds"], [201, 3, 1, "", "from_energy_edges"], [201, 3, 1, "", "from_nodes"], [201, 3, 1, "", "from_stack"], [201, 3, 1, "", "from_table"], [201, 3, 1, "", "from_table_hdu"], [201, 3, 1, "", "group_table"], [201, 2, 1, "", "interp"], [201, 3, 1, "", "is_aligned"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_energy_axis"], [201, 2, 1, "", "iter_by_edges"], [201, 2, 1, "", "name"], [201, 2, 1, "", "nbin"], [201, 2, 1, "", "nbin_per_decade"], [201, 2, 1, "", "node_type"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "pix_to_coord"], [201, 3, 1, "", "pix_to_idx"], [201, 3, 1, "", "rename"], [201, 3, 1, "", "round"], [201, 3, 1, "", "slice"], [201, 3, 1, "", "squash"], [201, 3, 1, "", "to_header"], [201, 3, 1, "", "to_node_type"], [201, 3, 1, "", "to_table"], [201, 3, 1, "", "to_table_hdu"], [201, 2, 1, "", "unit"], [201, 3, 1, "", "upsample"], [201, 2, 1, "", "use_center_as_plot_labels"], [201, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[202, 3, 1, "", "apply_mask"], [202, 2, 1, "", "axis_names"], [202, 2, 1, "", "broadcasted"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "create"], [202, 2, 1, "", "flat"], [202, 2, 1, "", "frame"], [202, 2, 1, "", "lat"], [202, 2, 1, "", "lon"], [202, 2, 1, "", "match_by_name"], [202, 2, 1, "", "ndim"], [202, 2, 1, "", "phi"], [202, 2, 1, "", "shape"], [202, 2, 1, "", "size"], [202, 2, 1, "", "skycoord"], [202, 2, 1, "", "theta"], [202, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[203, 3, 1, "", "clear"], [203, 3, 1, "", "from_geom"], [203, 3, 1, "", "from_hdulist"], [203, 2, 1, "", "geom"], [203, 3, 1, "", "get"], [203, 3, 1, "", "items"], [203, 3, 1, "", "keys"], [203, 3, 1, "", "pop"], [203, 3, 1, "", "popitem"], [203, 3, 1, "", "read"], [203, 3, 1, "", "setdefault"], [203, 3, 1, "", "to_hdulist"], [203, 3, 1, "", "update"], [203, 3, 1, "", "values"], [203, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[204, 2, 1, "", "as_energy_true"], [204, 2, 1, "", "axes"], [204, 2, 1, "", "axes_names"], [204, 3, 1, "", "bin_volume"], [204, 2, 1, "", "binsz_wcs"], [204, 2, 1, "", "center_coord"], [204, 2, 1, "", "center_pix"], [204, 2, 1, "", "center_skydir"], [204, 3, 1, "", "contains"], [204, 3, 1, "", "contains_pix"], [204, 3, 1, "", "contains_wcs_pix"], [204, 3, 1, "", "coord_to_idx"], [204, 3, 1, "", "coord_to_pix"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "create"], [204, 3, 1, "", "create_mask"], [204, 3, 1, "", "crop"], [204, 3, 1, "", "data_nbytes"], [204, 2, 1, "", "data_shape"], [204, 2, 1, "", "data_shape_axes"], [204, 3, 1, "", "downsample"], [204, 3, 1, "", "drop"], [204, 3, 1, "", "energy_mask"], [204, 2, 1, "", "frame"], [204, 3, 1, "", "from_hdulist"], [204, 3, 1, "", "from_regions"], [204, 3, 1, "", "get_coord"], [204, 3, 1, "", "get_idx"], [204, 3, 1, "", "get_wcs_coord_and_weights"], [204, 2, 1, "", "has_energy_axis"], [204, 2, 1, "", "is_all_point_sky_regions"], [204, 3, 1, "", "is_allclose"], [204, 2, 1, "", "is_allsky"], [204, 2, 1, "", "is_flat"], [204, 2, 1, "", "is_hpx"], [204, 2, 1, "", "is_image"], [204, 2, 1, "", "is_region"], [204, 2, 1, "", "is_regular"], [204, 2, 1, "", "npix"], [204, 3, 1, "", "pad"], [204, 3, 1, "", "pix_to_coord"], [204, 3, 1, "", "pix_to_idx"], [204, 3, 1, "", "plot_region"], [204, 2, 1, "", "projection"], [204, 2, 1, "", "region"], [204, 3, 1, "", "rename_axes"], [204, 3, 1, "", "replace_axis"], [204, 3, 1, "", "resample_axis"], [204, 3, 1, "", "separation"], [204, 3, 1, "", "slice_by_idx"], [204, 3, 1, "", "solid_angle"], [204, 3, 1, "", "squash"], [204, 3, 1, "", "to_bands_hdu"], [204, 3, 1, "", "to_binsz"], [204, 3, 1, "", "to_binsz_wcs"], [204, 3, 1, "", "to_cube"], [204, 3, 1, "", "to_hdulist"], [204, 3, 1, "", "to_image"], [204, 3, 1, "", "to_wcs_geom"], [204, 3, 1, "", "union"], [204, 3, 1, "", "upsample"], [204, 2, 1, "", "wcs"], [204, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[205, 3, 1, "", "coadd"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "create"], [205, 3, 1, "", "crop"], [205, 3, 1, "", "cumsum"], [205, 3, 1, "", "cutout"], [205, 2, 1, "", "data"], [205, 3, 1, "", "dot"], [205, 3, 1, "", "downsample"], [205, 3, 1, "", "fill_by_coord"], [205, 3, 1, "", "fill_by_idx"], [205, 3, 1, "", "fill_by_pix"], [205, 3, 1, "", "fill_events"], [205, 3, 1, "", "from_geom"], [205, 3, 1, "", "from_hdulist"], [205, 3, 1, "", "from_stack"], [205, 3, 1, "", "from_table"], [205, 2, 1, "", "geom"], [205, 3, 1, "", "get_by_coord"], [205, 3, 1, "", "get_by_idx"], [205, 3, 1, "", "get_by_pix"], [205, 3, 1, "", "get_image_by_coord"], [205, 3, 1, "", "get_image_by_idx"], [205, 3, 1, "", "get_image_by_pix"], [205, 3, 1, "", "get_spectrum"], [205, 3, 1, "", "integral"], [205, 3, 1, "", "interp_by_coord"], [205, 3, 1, "", "interp_by_pix"], [205, 3, 1, "", "interp_to_geom"], [205, 3, 1, "", "is_allclose"], [205, 2, 1, "", "is_mask"], [205, 3, 1, "", "iter_by_axis"], [205, 3, 1, "", "iter_by_axis_data"], [205, 3, 1, "", "iter_by_image"], [205, 3, 1, "", "iter_by_image_data"], [205, 3, 1, "", "iter_by_image_index"], [205, 3, 1, "", "mask_nearest_position"], [205, 2, 1, "", "meta"], [205, 3, 1, "", "normalize"], [205, 3, 1, "", "pad"], [205, 3, 1, "", "plot"], [205, 3, 1, "", "plot_grid"], [205, 3, 1, "", "plot_hist"], [205, 3, 1, "", "plot_interactive"], [205, 3, 1, "", "plot_mask"], [205, 3, 1, "", "plot_region"], [205, 2, 1, "", "quantity"], [205, 3, 1, "", "read"], [205, 3, 1, "", "reduce"], [205, 3, 1, "", "reduce_over_axes"], [205, 3, 1, "", "rename_axes"], [205, 3, 1, "", "reorder_axes"], [205, 3, 1, "", "reproject_by_image"], [205, 3, 1, "", "reproject_to_geom"], [205, 3, 1, "", "resample"], [205, 3, 1, "", "resample_axis"], [205, 3, 1, "", "sample_coord"], [205, 3, 1, "", "set_by_coord"], [205, 3, 1, "", "set_by_idx"], [205, 3, 1, "", "set_by_pix"], [205, 3, 1, "", "slice_by_idx"], [205, 3, 1, "", "split_by_axis"], [205, 3, 1, "", "stack"], [205, 3, 1, "", "sum_over_axes"], [205, 2, 1, "", "tag"], [205, 3, 1, "", "to_cube"], [205, 3, 1, "", "to_hdulist"], [205, 3, 1, "", "to_region_nd_map"], [205, 3, 1, "", "to_table"], [205, 3, 1, "", "to_unit"], [205, 2, 1, "", "unit"], [205, 3, 1, "", "upsample"], [205, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[206, 2, 1, "", "as_plot_center"], [206, 2, 1, "", "as_plot_edges"], [206, 2, 1, "", "as_plot_labels"], [206, 2, 1, "", "as_plot_xerr"], [206, 3, 1, "", "assert_name"], [206, 2, 1, "", "bin_width"], [206, 2, 1, "", "bounds"], [206, 2, 1, "", "center"], [206, 3, 1, "", "coord_to_idx"], [206, 3, 1, "", "coord_to_pix"], [206, 3, 1, "", "copy"], [206, 3, 1, "", "downsample"], [206, 2, 1, "", "edges"], [206, 2, 1, "", "edges_max"], [206, 2, 1, "", "edges_min"], [206, 3, 1, "", "format_plot_xaxis"], [206, 3, 1, "", "from_gti"], [206, 3, 1, "", "from_gti_bounds"], [206, 3, 1, "", "from_table"], [206, 3, 1, "", "from_time_bounds"], [206, 3, 1, "", "from_time_edges"], [206, 3, 1, "", "group_table"], [206, 2, 1, "", "interp"], [206, 3, 1, "", "is_aligned"], [206, 3, 1, "", "is_allclose"], [206, 2, 1, "", "is_contiguous"], [206, 2, 1, "", "iter_by_edges"], [206, 2, 1, "", "name"], [206, 2, 1, "", "nbin"], [206, 2, 1, "", "node_type"], [206, 3, 1, "", "pix_to_coord"], [206, 3, 1, "", "pix_to_idx"], [206, 2, 1, "", "reference_time"], [206, 3, 1, "", "slice"], [206, 3, 1, "", "squash"], [206, 2, 1, "", "time_bounds"], [206, 2, 1, "", "time_delta"], [206, 2, 1, "", "time_edges"], [206, 2, 1, "", "time_format"], [206, 2, 1, "", "time_max"], [206, 2, 1, "", "time_mid"], [206, 2, 1, "", "time_min"], [206, 3, 1, "", "to_contiguous"], [206, 3, 1, "", "to_gti"], [206, 3, 1, "", "to_header"], [206, 3, 1, "", "to_table"], [206, 2, 1, "", "unit"], [206, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[207, 2, 1, "", "as_energy_true"], [207, 2, 1, "", "axes"], [207, 2, 1, "", "axes_names"], [207, 3, 1, "", "bin_volume"], [207, 3, 1, "", "binary_structure"], [207, 3, 1, "", "boundary_mask"], [207, 2, 1, "", "center_coord"], [207, 2, 1, "", "center_pix"], [207, 2, 1, "", "center_skydir"], [207, 3, 1, "", "contains"], [207, 3, 1, "", "contains_pix"], [207, 3, 1, "", "coord_to_idx"], [207, 3, 1, "", "coord_to_pix"], [207, 3, 1, "", "copy"], [207, 3, 1, "", "create"], [207, 3, 1, "", "create_mask"], [207, 3, 1, "", "crop"], [207, 3, 1, "", "cutout"], [207, 3, 1, "", "cutout_slices"], [207, 3, 1, "", "data_nbytes"], [207, 2, 1, "", "data_shape"], [207, 2, 1, "", "data_shape_axes"], [207, 2, 1, "", "data_shape_image"], [207, 3, 1, "", "downsample"], [207, 3, 1, "", "drop"], [207, 3, 1, "", "energy_mask"], [207, 2, 1, "", "footprint"], [207, 2, 1, "", "footprint_rectangle_sky_region"], [207, 2, 1, "", "frame"], [207, 3, 1, "", "from_aligned"], [207, 3, 1, "", "from_hdulist"], [207, 3, 1, "", "from_header"], [207, 3, 1, "", "get_coord"], [207, 3, 1, "", "get_idx"], [207, 3, 1, "", "get_pix"], [207, 2, 1, "", "has_energy_axis"], [207, 3, 1, "", "is_aligned"], [207, 3, 1, "", "is_allclose"], [207, 2, 1, "", "is_allsky"], [207, 2, 1, "", "is_flat"], [207, 2, 1, "", "is_hpx"], [207, 2, 1, "", "is_image"], [207, 2, 1, "", "is_region"], [207, 2, 1, "", "is_regular"], [207, 2, 1, "", "ndim"], [207, 2, 1, "", "npix"], [207, 3, 1, "", "pad"], [207, 3, 1, "", "pix_to_coord"], [207, 3, 1, "", "pix_to_idx"], [207, 2, 1, "", "pixel_area"], [207, 2, 1, "", "pixel_scales"], [207, 2, 1, "", "projection"], [207, 3, 1, "", "region_mask"], [207, 3, 1, "", "region_weights"], [207, 3, 1, "", "rename_axes"], [207, 3, 1, "", "replace_axis"], [207, 3, 1, "", "resample_axis"], [207, 3, 1, "", "separation"], [207, 2, 1, "", "shape_axes"], [207, 3, 1, "", "slice_by_idx"], [207, 3, 1, "", "solid_angle"], [207, 3, 1, "", "squash"], [207, 3, 1, "", "to_bands_hdu"], [207, 3, 1, "", "to_binsz"], [207, 3, 1, "", "to_cube"], [207, 3, 1, "", "to_even_npix"], [207, 3, 1, "", "to_header"], [207, 3, 1, "", "to_image"], [207, 3, 1, "", "to_odd_npix"], [207, 3, 1, "", "upsample"], [207, 2, 1, "", "wcs"], [207, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[208, 3, 1, "", "coadd"], [208, 3, 1, "", "copy"], [208, 3, 1, "", "create"], [208, 3, 1, "", "crop"], [208, 3, 1, "", "cumsum"], [208, 2, 1, "", "data"], [208, 3, 1, "", "dot"], [208, 3, 1, "", "downsample"], [208, 3, 1, "", "fill_by_coord"], [208, 3, 1, "", "fill_by_idx"], [208, 3, 1, "", "fill_by_pix"], [208, 3, 1, "", "fill_events"], [208, 3, 1, "", "from_geom"], [208, 3, 1, "", "from_hdulist"], [208, 3, 1, "", "from_stack"], [208, 2, 1, "", "geom"], [208, 3, 1, "", "get_by_coord"], [208, 3, 1, "", "get_by_idx"], [208, 3, 1, "", "get_by_pix"], [208, 3, 1, "", "get_image_by_coord"], [208, 3, 1, "", "get_image_by_idx"], [208, 3, 1, "", "get_image_by_pix"], [208, 3, 1, "", "get_spectrum"], [208, 3, 1, "", "integral"], [208, 3, 1, "", "interp_by_coord"], [208, 3, 1, "", "interp_by_pix"], [208, 3, 1, "", "interp_to_geom"], [208, 3, 1, "", "is_allclose"], [208, 2, 1, "", "is_mask"], [208, 3, 1, "", "iter_by_axis"], [208, 3, 1, "", "iter_by_image"], [208, 3, 1, "", "iter_by_image_data"], [208, 3, 1, "", "iter_by_image_index"], [208, 3, 1, "", "mask_nearest_position"], [208, 2, 1, "", "meta"], [208, 3, 1, "", "normalize"], [208, 3, 1, "", "pad"], [208, 3, 1, "", "plot_grid"], [208, 3, 1, "", "plot_interactive"], [208, 2, 1, "", "quantity"], [208, 3, 1, "", "read"], [208, 3, 1, "", "reduce"], [208, 3, 1, "", "reduce_over_axes"], [208, 3, 1, "", "rename_axes"], [208, 3, 1, "", "reorder_axes"], [208, 3, 1, "", "reproject_by_image"], [208, 3, 1, "", "reproject_to_geom"], [208, 3, 1, "", "resample"], [208, 3, 1, "", "resample_axis"], [208, 3, 1, "", "sample_coord"], [208, 3, 1, "", "set_by_coord"], [208, 3, 1, "", "set_by_idx"], [208, 3, 1, "", "set_by_pix"], [208, 3, 1, "", "slice_by_idx"], [208, 3, 1, "", "split_by_axis"], [208, 3, 1, "", "sum_over_axes"], [208, 2, 1, "", "tag"], [208, 3, 1, "", "to_cube"], [208, 3, 1, "", "to_hdu"], [208, 3, 1, "", "to_hdulist"], [208, 3, 1, "", "to_unit"], [208, 2, 1, "", "unit"], [208, 3, 1, "", "upsample"], [208, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[209, 3, 1, "", "binary_dilate"], [209, 3, 1, "", "binary_erode"], [209, 3, 1, "", "coadd"], [209, 3, 1, "", "convolve"], [209, 3, 1, "", "copy"], [209, 3, 1, "", "create"], [209, 3, 1, "", "crop"], [209, 3, 1, "", "cumsum"], [209, 3, 1, "", "cutout"], [209, 3, 1, "", "cutout_and_mask_region"], [209, 2, 1, "", "data"], [209, 3, 1, "", "dot"], [209, 3, 1, "", "downsample"], [209, 3, 1, "", "fill_by_coord"], [209, 3, 1, "", "fill_by_idx"], [209, 3, 1, "", "fill_by_pix"], [209, 3, 1, "", "fill_events"], [209, 3, 1, "", "from_geom"], [209, 3, 1, "", "from_hdu"], [209, 3, 1, "", "from_hdulist"], [209, 3, 1, "", "from_stack"], [209, 2, 1, "", "geom"], [209, 3, 1, "", "get_by_coord"], [209, 3, 1, "", "get_by_idx"], [209, 3, 1, "", "get_by_pix"], [209, 3, 1, "", "get_image_by_coord"], [209, 3, 1, "", "get_image_by_idx"], [209, 3, 1, "", "get_image_by_pix"], [209, 3, 1, "", "get_spectrum"], [209, 3, 1, "", "integral"], [209, 3, 1, "", "interp_by_coord"], [209, 3, 1, "", "interp_by_pix"], [209, 3, 1, "", "interp_to_geom"], [209, 3, 1, "", "is_allclose"], [209, 2, 1, "", "is_mask"], [209, 3, 1, "", "iter_by_axis"], [209, 3, 1, "", "iter_by_image"], [209, 3, 1, "", "iter_by_image_data"], [209, 3, 1, "", "iter_by_image_index"], [209, 3, 1, "", "mask_contains_region"], [209, 3, 1, "", "mask_nearest_position"], [209, 2, 1, "", "meta"], [209, 3, 1, "", "normalize"], [209, 3, 1, "", "pad"], [209, 3, 1, "", "plot"], [209, 3, 1, "", "plot_grid"], [209, 3, 1, "", "plot_interactive"], [209, 3, 1, "", "plot_mask"], [209, 2, 1, "", "quantity"], [209, 3, 1, "", "read"], [209, 3, 1, "", "reduce"], [209, 3, 1, "", "reduce_over_axes"], [209, 3, 1, "", "rename_axes"], [209, 3, 1, "", "reorder_axes"], [209, 3, 1, "", "reproject_by_image"], [209, 3, 1, "", "reproject_to_geom"], [209, 3, 1, "", "resample"], [209, 3, 1, "", "resample_axis"], [209, 3, 1, "", "sample_coord"], [209, 3, 1, "", "set_by_coord"], [209, 3, 1, "", "set_by_idx"], [209, 3, 1, "", "set_by_pix"], [209, 3, 1, "", "slice_by_idx"], [209, 3, 1, "", "smooth"], [209, 3, 1, "", "split_by_axis"], [209, 3, 1, "", "stack"], [209, 3, 1, "", "sum_over_axes"], [209, 2, 1, "", "tag"], [209, 3, 1, "", "to_cube"], [209, 3, 1, "", "to_hdu"], [209, 3, 1, "", "to_hdulist"], [209, 3, 1, "", "to_region_nd_map"], [209, 3, 1, "", "to_region_nd_map_histogram"], [209, 3, 1, "", "to_unit"], [209, 2, 1, "", "unit"], [209, 3, 1, "", "upsample"], [209, 3, 1, "", "write"]], "gammapy.modeling": [[212, 1, 1, "", "Covariance"], [213, 1, 1, "", "CovarianceResult"], [214, 1, 1, "", "Fit"], [215, 1, 1, "", "FitResult"], [216, 1, 1, "", "OptimizeResult"], [217, 1, 1, "", "Parameter"], [218, 1, 1, "", "Parameters"], [219, 1, 1, "", "PriorParameter"], [220, 1, 1, "", "PriorParameters"], [221, 1, 1, "", "Sampler"], [222, 1, 1, "", "SamplerResult"], [10, 0, 0, "-", "models"], [292, 4, 1, "", "select_nested_models"], [293, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[212, 2, 1, "", "correlation"], [212, 2, 1, "", "data"], [212, 3, 1, "", "from_factor_matrix"], [212, 3, 1, "", "from_stack"], [212, 3, 1, "", "get_subcovariance"], [212, 3, 1, "", "plot_correlation"], [212, 2, 1, "", "scipy_mvn"], [212, 3, 1, "", "set_subcovariance"], [212, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[213, 2, 1, "", "backend"], [213, 2, 1, "", "matrix"], [213, 2, 1, "", "message"], [213, 2, 1, "", "method"], [213, 2, 1, "", "success"], [213, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[214, 3, 1, "", "confidence"], [214, 3, 1, "", "covariance"], [214, 3, 1, "", "optimize"], [214, 3, 1, "", "run"], [214, 3, 1, "", "stat_contour"], [214, 3, 1, "", "stat_profile"], [214, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[215, 2, 1, "", "backend"], [215, 2, 1, "", "covariance_result"], [215, 2, 1, "", "message"], [215, 2, 1, "", "method"], [215, 2, 1, "", "minuit"], [215, 2, 1, "", "models"], [215, 2, 1, "", "nfev"], [215, 2, 1, "", "optimize_result"], [215, 2, 1, "", "parameters"], [215, 2, 1, "", "success"], [215, 2, 1, "", "total_stat"], [215, 2, 1, "", "trace"], [215, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[216, 2, 1, "", "backend"], [216, 2, 1, "", "message"], [216, 2, 1, "", "method"], [216, 2, 1, "", "minuit"], [216, 2, 1, "", "models"], [216, 2, 1, "", "nfev"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "success"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "total_stat"], [216, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[217, 3, 1, "", "autoscale"], [217, 3, 1, "", "check_limits"], [217, 2, 1, "", "conf_max"], [217, 2, 1, "", "conf_min"], [217, 3, 1, "", "copy"], [217, 2, 1, "", "error"], [217, 2, 1, "", "factor"], [217, 2, 1, "", "factor_max"], [217, 2, 1, "", "factor_min"], [217, 2, 1, "", "frozen"], [217, 3, 1, "", "inverse_transform"], [217, 2, 1, "", "max"], [217, 2, 1, "", "min"], [217, 2, 1, "", "name"], [217, 2, 1, "", "prior"], [217, 3, 1, "", "prior_stat_sum"], [217, 2, 1, "", "quantity"], [217, 3, 1, "", "reset_autoscale"], [217, 2, 1, "", "scale"], [217, 2, 1, "", "scale_method"], [217, 2, 1, "", "scale_transform"], [217, 2, 1, "", "scan_max"], [217, 2, 1, "", "scan_min"], [217, 2, 1, "", "scan_n_sigma"], [217, 2, 1, "", "scan_values"], [217, 3, 1, "", "set_lim"], [217, 3, 1, "", "to_dict"], [217, 3, 1, "", "transform"], [217, 2, 1, "", "type"], [217, 2, 1, "", "unit"], [217, 3, 1, "", "update_from_dict"], [217, 3, 1, "", "update_scale"], [217, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[218, 3, 1, "", "autoscale"], [218, 3, 1, "", "check_limits"], [218, 3, 1, "", "copy"], [218, 3, 1, "", "count"], [218, 2, 1, "", "free_parameters"], [218, 3, 1, "", "freeze_all"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_stack"], [218, 3, 1, "", "index"], [218, 2, 1, "", "max"], [218, 2, 1, "", "min"], [218, 2, 1, "", "names"], [218, 2, 1, "", "prior"], [218, 3, 1, "", "prior_stat_sum"], [218, 3, 1, "", "restore_status"], [218, 3, 1, "", "select"], [218, 3, 1, "", "set_parameter_factors"], [218, 3, 1, "", "to_dict"], [218, 3, 1, "", "to_table"], [218, 2, 1, "", "types"], [218, 3, 1, "", "unfreeze_all"], [218, 2, 1, "", "unique_parameters"], [218, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[219, 3, 1, "", "autoscale"], [219, 3, 1, "", "check_limits"], [219, 2, 1, "", "conf_max"], [219, 2, 1, "", "conf_min"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "error"], [219, 2, 1, "", "factor"], [219, 2, 1, "", "factor_max"], [219, 2, 1, "", "factor_min"], [219, 2, 1, "", "frozen"], [219, 3, 1, "", "inverse_transform"], [219, 2, 1, "", "max"], [219, 2, 1, "", "min"], [219, 2, 1, "", "name"], [219, 2, 1, "", "prior"], [219, 3, 1, "", "prior_stat_sum"], [219, 2, 1, "", "quantity"], [219, 3, 1, "", "reset_autoscale"], [219, 2, 1, "", "scale"], [219, 2, 1, "", "scale_method"], [219, 2, 1, "", "scale_transform"], [219, 2, 1, "", "scan_max"], [219, 2, 1, "", "scan_min"], [219, 2, 1, "", "scan_n_sigma"], [219, 2, 1, "", "scan_values"], [219, 3, 1, "", "set_lim"], [219, 3, 1, "", "to_dict"], [219, 3, 1, "", "transform"], [219, 2, 1, "", "type"], [219, 2, 1, "", "unit"], [219, 3, 1, "", "update_from_dict"], [219, 3, 1, "", "update_scale"], [219, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[220, 3, 1, "", "autoscale"], [220, 3, 1, "", "check_limits"], [220, 3, 1, "", "copy"], [220, 3, 1, "", "count"], [220, 2, 1, "", "free_parameters"], [220, 3, 1, "", "freeze_all"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_stack"], [220, 3, 1, "", "index"], [220, 2, 1, "", "max"], [220, 2, 1, "", "min"], [220, 2, 1, "", "names"], [220, 2, 1, "", "prior"], [220, 3, 1, "", "prior_stat_sum"], [220, 3, 1, "", "restore_status"], [220, 3, 1, "", "select"], [220, 3, 1, "", "set_parameter_factors"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_table"], [220, 2, 1, "", "types"], [220, 3, 1, "", "unfreeze_all"], [220, 2, 1, "", "unique_parameters"], [220, 2, 1, "", "value"]], "gammapy.modeling.Sampler": [[221, 3, 1, "", "run"], [221, 3, 1, "", "sampler_ultranest"]], "gammapy.modeling.SamplerResult": [[222, 3, 1, "", "from_ultranest"]], "gammapy.modeling.models": [[223, 1, 1, "", "BrokenPowerLawSpectralModel"], [224, 1, 1, "", "CompoundSpectralModel"], [225, 1, 1, "", "ConstantFluxSpatialModel"], [226, 1, 1, "", "ConstantSpatialModel"], [227, 1, 1, "", "ConstantSpectralModel"], [228, 1, 1, "", "ConstantTemporalModel"], [229, 1, 1, "", "DatasetModels"], [230, 1, 1, "", "DiskSpatialModel"], [231, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [232, 5, 1, "", "EBL_DATA_BUILTIN"], [233, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [234, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [235, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [236, 1, 1, "", "ExpDecayTemporalModel"], [237, 1, 1, "", "FoVBackgroundModel"], [238, 1, 1, "", "GaussianPrior"], [239, 1, 1, "", "GaussianSpatialModel"], [240, 1, 1, "", "GaussianSpectralModel"], [241, 1, 1, "", "GaussianTemporalModel"], [242, 1, 1, "", "GeneralizedGaussianSpatialModel"], [243, 1, 1, "", "GeneralizedGaussianTemporalModel"], [244, 1, 1, "", "LightCurveTemplateTemporalModel"], [245, 1, 1, "", "LinearTemporalModel"], [246, 1, 1, "", "LogParabolaNormSpectralModel"], [247, 1, 1, "", "LogParabolaSpectralModel"], [248, 1, 1, "", "LogUniformPrior"], [249, 5, 1, "", "MODEL_REGISTRY"], [250, 1, 1, "", "MeyerCrabSpectralModel"], [251, 1, 1, "", "Model"], [252, 1, 1, "", "ModelBase"], [253, 1, 1, "", "Models"], [254, 1, 1, "", "NaimaSpectralModel"], [255, 1, 1, "", "PiecewiseNormSpatialModel"], [256, 1, 1, "", "PiecewiseNormSpectralModel"], [257, 1, 1, "", "PointSpatialModel"], [258, 1, 1, "", "PowerLaw2SpectralModel"], [259, 1, 1, "", "PowerLawNormSpectralModel"], [260, 1, 1, "", "PowerLawSpectralModel"], [261, 1, 1, "", "PowerLawTemporalModel"], [262, 1, 1, "", "Prior"], [263, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [264, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [265, 1, 1, "", "ScaleSpectralModel"], [266, 1, 1, "", "Shell2SpatialModel"], [267, 1, 1, "", "ShellSpatialModel"], [268, 1, 1, "", "SineTemporalModel"], [269, 1, 1, "", "SkyModel"], [270, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [271, 1, 1, "", "SpatialModel"], [272, 1, 1, "", "SpectralModel"], [273, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [274, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [275, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [276, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [277, 1, 1, "", "TemplateNDSpatialModel"], [278, 1, 1, "", "TemplateNDSpectralModel"], [279, 1, 1, "", "TemplateNPredModel"], [280, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [281, 1, 1, "", "TemplateSpatialModel"], [282, 1, 1, "", "TemplateSpectralModel"], [283, 1, 1, "", "TemporalModel"], [284, 1, 1, "", "UniformPrior"], [285, 4, 1, "", "create_cosmic_ray_spectral_model"], [286, 4, 1, "", "create_crab_spectral_model"], [287, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [288, 4, 1, "", "integrate_spectrum"], [289, 4, 1, "", "read_hermes_cube"], [290, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[223, 3, 1, "", "__call__"], [223, 2, 1, "", "amplitude"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 2, 1, "", "ebreak"], [223, 3, 1, "", "energy_flux"], [223, 3, 1, "", "energy_flux_error"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_error"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 2, 1, "", "frozen"], [223, 2, 1, "", "index1"], [223, 2, 1, "", "index2"], [223, 3, 1, "", "integral"], [223, 3, 1, "", "integral_error"], [223, 3, 1, "", "inverse"], [223, 3, 1, "", "inverse_all"], [223, 2, 1, "", "is_norm_spectral_model"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 2, 1, "", "pivot_energy"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "reassign"], [223, 3, 1, "", "reference_fluxes"], [223, 3, 1, "", "spectral_index"], [223, 3, 1, "", "spectral_index_error"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[224, 3, 1, "", "__call__"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 3, 1, "", "energy_flux"], [224, 3, 1, "", "energy_flux_error"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_error"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "integral"], [224, 3, 1, "", "integral_error"], [224, 3, 1, "", "inverse"], [224, 3, 1, "", "inverse_all"], [224, 2, 1, "", "is_norm_spectral_model"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "pivot_energy"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "reassign"], [224, 3, 1, "", "reference_fluxes"], [224, 3, 1, "", "spectral_index"], [224, 3, 1, "", "spectral_index_error"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_geom"], [225, 2, 1, "", "evaluation_bin_size_min"], [225, 2, 1, "", "evaluation_radius"], [225, 2, 1, "", "evaluation_region"], [225, 2, 1, "", "frame"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 3, 1, "", "from_position"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integrate_geom"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "phi_0"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "plot_grid"], [225, 3, 1, "", "plot_interactive"], [225, 3, 1, "", "plot_position_error"], [225, 2, 1, "", "position"], [225, 2, 1, "", "position_error"], [225, 2, 1, "", "position_lonlat"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 3, 1, "", "to_region"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[226, 3, 1, "", "__call__"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_geom"], [226, 2, 1, "", "evaluation_bin_size_min"], [226, 2, 1, "", "evaluation_radius"], [226, 2, 1, "", "evaluation_region"], [226, 2, 1, "", "frame"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 3, 1, "", "from_position"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integrate_geom"], [226, 2, 1, "", "is_energy_dependent"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 2, 1, "", "phi_0"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "plot_error"], [226, 3, 1, "", "plot_grid"], [226, 3, 1, "", "plot_interactive"], [226, 3, 1, "", "plot_position_error"], [226, 2, 1, "", "position"], [226, 2, 1, "", "position_error"], [226, 2, 1, "", "position_lonlat"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 3, 1, "", "to_region"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"], [226, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[227, 3, 1, "", "__call__"], [227, 2, 1, "", "const"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 3, 1, "", "energy_flux"], [227, 3, 1, "", "energy_flux_error"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "evaluate_error"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integral"], [227, 3, 1, "", "integral_error"], [227, 3, 1, "", "inverse"], [227, 3, 1, "", "inverse_all"], [227, 2, 1, "", "is_norm_spectral_model"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 2, 1, "", "pivot_energy"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "plot_error"], [227, 3, 1, "", "reassign"], [227, 3, 1, "", "reference_fluxes"], [227, 3, 1, "", "spectral_index"], [227, 3, 1, "", "spectral_index_error"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "to_dict"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[228, 3, 1, "", "__call__"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "integral"], [228, 2, 1, "", "is_energy_dependent"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "reference_time"], [228, 3, 1, "", "sample_time"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "time_sum"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[229, 2, 1, "", "background_models"], [229, 3, 1, "", "copy"], [229, 3, 1, "", "count"], [229, 2, 1, "", "covariance"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_yaml"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "index"], [229, 2, 1, "", "names"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 3, 1, "", "plot_positions"], [229, 3, 1, "", "plot_regions"], [229, 2, 1, "", "positions"], [229, 3, 1, "", "read"], [229, 3, 1, "", "read_covariance"], [229, 3, 1, "", "reassign"], [229, 3, 1, "", "restore_status"], [229, 3, 1, "", "select"], [229, 3, 1, "", "select_from_geom"], [229, 3, 1, "", "select_mask"], [229, 3, 1, "", "select_region"], [229, 3, 1, "", "selection_mask"], [229, 3, 1, "", "set_parameters_bounds"], [229, 3, 1, "", "to_dict"], [229, 3, 1, "", "to_parameters_table"], [229, 3, 1, "", "to_regions"], [229, 3, 1, "", "to_template_sky_model"], [229, 3, 1, "", "to_template_spectral_model"], [229, 3, 1, "", "to_yaml"], [229, 3, 1, "", "unfreeze"], [229, 3, 1, "", "update_link_label"], [229, 3, 1, "", "update_parameters_from_table"], [229, 2, 1, "", "wcs_geom"], [229, 3, 1, "", "write"], [229, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[230, 3, 1, "", "__call__"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 2, 1, "", "e"], [230, 2, 1, "", "edge_width"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_geom"], [230, 2, 1, "", "evaluation_bin_size_min"], [230, 2, 1, "", "evaluation_radius"], [230, 2, 1, "", "evaluation_region"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 3, 1, "", "from_position"], [230, 3, 1, "", "from_region"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integrate_geom"], [230, 2, 1, "", "is_energy_dependent"], [230, 2, 1, "", "lat_0"], [230, 2, 1, "", "lon_0"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 2, 1, "", "phi"], [230, 2, 1, "", "phi_0"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "plot_grid"], [230, 3, 1, "", "plot_interactive"], [230, 3, 1, "", "plot_position_error"], [230, 2, 1, "", "position"], [230, 2, 1, "", "position_error"], [230, 2, 1, "", "position_lonlat"], [230, 2, 1, "", "r_0"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "to_dict"], [230, 3, 1, "", "to_region"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[231, 3, 1, "", "__call__"], [231, 2, 1, "", "alpha_norm"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 3, 1, "", "energy_flux"], [231, 3, 1, "", "energy_flux_error"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "evaluate_error"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integral"], [231, 3, 1, "", "integral_error"], [231, 3, 1, "", "inverse"], [231, 3, 1, "", "inverse_all"], [231, 2, 1, "", "is_norm_spectral_model"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 2, 1, "", "pivot_energy"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "plot_error"], [231, 3, 1, "", "read"], [231, 3, 1, "", "read_builtin"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "redshift"], [231, 3, 1, "", "reference_fluxes"], [231, 3, 1, "", "spectral_index"], [231, 3, 1, "", "spectral_index_error"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[233, 3, 1, "", "__call__"], [233, 2, 1, "", "amplitude"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 2, 1, "", "ecut"], [233, 3, 1, "", "energy_flux"], [233, 3, 1, "", "energy_flux_error"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "evaluate_error"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 2, 1, "", "index"], [233, 3, 1, "", "integral"], [233, 3, 1, "", "integral_error"], [233, 3, 1, "", "inverse"], [233, 3, 1, "", "inverse_all"], [233, 2, 1, "", "is_norm_spectral_model"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 2, 1, "", "pivot_energy"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "plot_error"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference"], [233, 3, 1, "", "reference_fluxes"], [233, 3, 1, "", "spectral_index"], [233, 3, 1, "", "spectral_index_error"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[234, 3, 1, "", "__call__"], [234, 2, 1, "", "alpha"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 3, 1, "", "energy_flux"], [234, 3, 1, "", "energy_flux_error"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_error"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 2, 1, "", "index"], [234, 3, 1, "", "integral"], [234, 3, 1, "", "integral_error"], [234, 3, 1, "", "inverse"], [234, 3, 1, "", "inverse_all"], [234, 2, 1, "", "is_norm_spectral_model"], [234, 2, 1, "", "lambda_"], [234, 2, 1, "", "norm"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 2, 1, "", "pivot_energy"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "plot_error"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference"], [234, 3, 1, "", "reference_fluxes"], [234, 3, 1, "", "spectral_index"], [234, 3, 1, "", "spectral_index_error"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "alpha"], [235, 2, 1, "", "amplitude"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 2, 1, "", "e_peak"], [235, 3, 1, "", "energy_flux"], [235, 3, 1, "", "energy_flux_error"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_error"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 2, 1, "", "index"], [235, 3, 1, "", "integral"], [235, 3, 1, "", "integral_error"], [235, 3, 1, "", "inverse"], [235, 3, 1, "", "inverse_all"], [235, 2, 1, "", "is_norm_spectral_model"], [235, 2, 1, "", "lambda_"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 2, 1, "", "pivot_energy"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "reference"], [235, 3, 1, "", "reference_fluxes"], [235, 3, 1, "", "spectral_index"], [235, 3, 1, "", "spectral_index_error"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[236, 3, 1, "", "__call__"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "integral"], [236, 2, 1, "", "is_energy_dependent"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "reference_time"], [236, 3, 1, "", "sample_time"], [236, 2, 1, "", "t0"], [236, 2, 1, "", "t_ref"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "time_sum"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[237, 3, 1, "", "contributes"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "evaluate_geom"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 2, 1, "", "name"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 3, 1, "", "reassign"], [237, 3, 1, "", "reset_to_default"], [237, 2, 1, "", "spatial_model"], [237, 2, 1, "", "spectral_model"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianPrior": [[238, 3, 1, "", "__call__"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 2, 1, "", "mu"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 3, 1, "", "reassign"], [238, 2, 1, "", "sigma"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"], [238, 2, 1, "", "weight"]], "gammapy.modeling.models.GaussianSpatialModel": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 2, 1, "", "e"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "evaluate_geom"], [239, 2, 1, "", "evaluation_bin_size_min"], [239, 2, 1, "", "evaluation_radius"], [239, 2, 1, "", "evaluation_region"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 3, 1, "", "from_position"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integrate_geom"], [239, 2, 1, "", "is_energy_dependent"], [239, 2, 1, "", "lat_0"], [239, 2, 1, "", "lon_0"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 2, 1, "", "phi"], [239, 2, 1, "", "phi_0"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "plot_error"], [239, 3, 1, "", "plot_grid"], [239, 3, 1, "", "plot_interactive"], [239, 3, 1, "", "plot_position_error"], [239, 2, 1, "", "position"], [239, 2, 1, "", "position_error"], [239, 2, 1, "", "position_lonlat"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "sigma"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "to_dict"], [239, 3, 1, "", "to_region"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[240, 3, 1, "", "__call__"], [240, 2, 1, "", "amplitude"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 3, 1, "", "energy_flux"], [240, 3, 1, "", "energy_flux_error"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "evaluate_error"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integral"], [240, 3, 1, "", "integral_error"], [240, 3, 1, "", "inverse"], [240, 3, 1, "", "inverse_all"], [240, 2, 1, "", "is_norm_spectral_model"], [240, 2, 1, "", "mean"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 2, 1, "", "pivot_energy"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "plot_error"], [240, 3, 1, "", "reassign"], [240, 3, 1, "", "reference_fluxes"], [240, 2, 1, "", "sigma"], [240, 3, 1, "", "spectral_index"], [240, 3, 1, "", "spectral_index_error"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[241, 3, 1, "", "__call__"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 2, 1, "", "is_energy_dependent"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "reassign"], [241, 2, 1, "", "reference_time"], [241, 3, 1, "", "sample_time"], [241, 2, 1, "", "sigma"], [241, 2, 1, "", "t_ref"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "time_sum"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[242, 3, 1, "", "__call__"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 2, 1, "", "e"], [242, 2, 1, "", "eta"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "evaluate_geom"], [242, 2, 1, "", "evaluation_bin_size_min"], [242, 2, 1, "", "evaluation_radius"], [242, 2, 1, "", "evaluation_region"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 3, 1, "", "from_position"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integrate_geom"], [242, 2, 1, "", "is_energy_dependent"], [242, 2, 1, "", "lat_0"], [242, 2, 1, "", "lon_0"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 2, 1, "", "phi"], [242, 2, 1, "", "phi_0"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "plot_error"], [242, 3, 1, "", "plot_grid"], [242, 3, 1, "", "plot_interactive"], [242, 3, 1, "", "plot_position_error"], [242, 2, 1, "", "position"], [242, 2, 1, "", "position_error"], [242, 2, 1, "", "position_lonlat"], [242, 2, 1, "", "r_0"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "to_dict"], [242, 3, 1, "", "to_region"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[243, 3, 1, "", "__call__"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 2, 1, "", "eta"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integral"], [243, 2, 1, "", "is_energy_dependent"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "reassign"], [243, 2, 1, "", "reference_time"], [243, 3, 1, "", "sample_time"], [243, 2, 1, "", "t_decay"], [243, 2, 1, "", "t_ref"], [243, 2, 1, "", "t_rise"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "time_sum"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[244, 3, 1, "", "__call__"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 3, 1, "", "from_table"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 2, 1, "", "is_energy_dependent"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "read"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "reference_time"], [244, 3, 1, "", "sample_time"], [244, 2, 1, "", "t_ref"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "time_sum"], [244, 3, 1, "", "to_dict"], [244, 3, 1, "", "to_table"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"], [244, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[245, 3, 1, "", "__call__"], [245, 2, 1, "", "alpha"], [245, 2, 1, "", "beta"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integral"], [245, 2, 1, "", "is_energy_dependent"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "reference_time"], [245, 3, 1, "", "sample_time"], [245, 2, 1, "", "t_ref"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "time_sum"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[246, 3, 1, "", "__call__"], [246, 2, 1, "", "alpha"], [246, 2, 1, "", "beta"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 3, 1, "", "energy_flux"], [246, 3, 1, "", "energy_flux_error"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "evaluate_error"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_log10"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "integral"], [246, 3, 1, "", "integral_error"], [246, 3, 1, "", "inverse"], [246, 3, 1, "", "inverse_all"], [246, 2, 1, "", "is_norm_spectral_model"], [246, 2, 1, "", "norm"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 2, 1, "", "pivot_energy"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "plot_error"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "reference"], [246, 3, 1, "", "reference_fluxes"], [246, 3, 1, "", "spectral_index"], [246, 3, 1, "", "spectral_index_error"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[247, 3, 1, "", "__call__"], [247, 2, 1, "", "alpha"], [247, 2, 1, "", "amplitude"], [247, 2, 1, "", "beta"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 2, 1, "", "e_peak"], [247, 3, 1, "", "energy_flux"], [247, 3, 1, "", "energy_flux_error"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "evaluate_error"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_log10"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 3, 1, "", "integral"], [247, 3, 1, "", "integral_error"], [247, 3, 1, "", "inverse"], [247, 3, 1, "", "inverse_all"], [247, 2, 1, "", "is_norm_spectral_model"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 2, 1, "", "pivot_energy"], [247, 3, 1, "", "plot"], [247, 3, 1, "", "plot_error"], [247, 3, 1, "", "reassign"], [247, 2, 1, "", "reference"], [247, 3, 1, "", "reference_fluxes"], [247, 3, 1, "", "spectral_index"], [247, 3, 1, "", "spectral_index_error"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogUniformPrior": [[248, 3, 1, "", "__call__"], [248, 3, 1, "", "copy"], [248, 2, 1, "", "covariance"], [248, 2, 1, "", "default_parameters"], [248, 3, 1, "", "evaluate"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_parameters"], [248, 2, 1, "", "frozen"], [248, 2, 1, "", "max"], [248, 2, 1, "", "min"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 3, 1, "", "reassign"], [248, 2, 1, "", "tag"], [248, 3, 1, "", "to_dict"], [248, 2, 1, "", "type"], [248, 3, 1, "", "unfreeze"], [248, 2, 1, "", "weight"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[250, 3, 1, "", "__call__"], [250, 2, 1, "", "coefficients"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 3, 1, "", "energy_flux"], [250, 3, 1, "", "energy_flux_error"], [250, 3, 1, "", "evaluate"], [250, 3, 1, "", "evaluate_error"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 2, 1, "", "frozen"], [250, 3, 1, "", "integral"], [250, 3, 1, "", "integral_error"], [250, 3, 1, "", "inverse"], [250, 3, 1, "", "inverse_all"], [250, 2, 1, "", "is_norm_spectral_model"], [250, 2, 1, "", "norm"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "parameters_unique_names"], [250, 2, 1, "", "pivot_energy"], [250, 3, 1, "", "plot"], [250, 3, 1, "", "plot_error"], [250, 3, 1, "", "reassign"], [250, 3, 1, "", "reference_fluxes"], [250, 3, 1, "", "spectral_index"], [250, 3, 1, "", "spectral_index_error"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[251, 3, 1, "", "create"], [251, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 2, 1, "", "frozen"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 3, 1, "", "reassign"], [252, 3, 1, "", "to_dict"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[253, 3, 1, "", "append"], [253, 2, 1, "", "background_models"], [253, 3, 1, "", "clear"], [253, 3, 1, "", "copy"], [253, 3, 1, "", "count"], [253, 2, 1, "", "covariance"], [253, 3, 1, "", "extend"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_yaml"], [253, 2, 1, "", "frozen"], [253, 3, 1, "", "index"], [253, 3, 1, "", "insert"], [253, 2, 1, "", "names"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 3, 1, "", "plot_positions"], [253, 3, 1, "", "plot_regions"], [253, 3, 1, "", "pop"], [253, 2, 1, "", "positions"], [253, 3, 1, "", "read"], [253, 3, 1, "", "read_covariance"], [253, 3, 1, "", "reassign"], [253, 3, 1, "", "remove"], [253, 3, 1, "", "restore_status"], [253, 3, 1, "", "reverse"], [253, 3, 1, "", "select"], [253, 3, 1, "", "select_from_geom"], [253, 3, 1, "", "select_mask"], [253, 3, 1, "", "select_region"], [253, 3, 1, "", "selection_mask"], [253, 3, 1, "", "set_parameters_bounds"], [253, 3, 1, "", "set_prior"], [253, 3, 1, "", "to_dict"], [253, 3, 1, "", "to_parameters_table"], [253, 3, 1, "", "to_regions"], [253, 3, 1, "", "to_template_sky_model"], [253, 3, 1, "", "to_template_spectral_model"], [253, 3, 1, "", "to_yaml"], [253, 3, 1, "", "unfreeze"], [253, 3, 1, "", "update_link_label"], [253, 3, 1, "", "update_parameters_from_table"], [253, 2, 1, "", "wcs_geom"], [253, 3, 1, "", "write"], [253, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[254, 3, 1, "", "__call__"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "energy_flux"], [254, 3, 1, "", "energy_flux_error"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_error"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 2, 1, "", "include_ssc"], [254, 3, 1, "", "integral"], [254, 3, 1, "", "integral_error"], [254, 3, 1, "", "inverse"], [254, 3, 1, "", "inverse_all"], [254, 2, 1, "", "is_norm_spectral_model"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 2, 1, "", "particle_distribution"], [254, 2, 1, "", "pivot_energy"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "reassign"], [254, 3, 1, "", "reference_fluxes"], [254, 3, 1, "", "spectral_index"], [254, 3, 1, "", "spectral_index_error"], [254, 2, 1, "", "ssc_model"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[255, 3, 1, "", "__call__"], [255, 2, 1, "", "coords"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_geom"], [255, 2, 1, "", "evaluation_bin_size_min"], [255, 2, 1, "", "evaluation_radius"], [255, 2, 1, "", "evaluation_region"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 3, 1, "", "from_position"], [255, 2, 1, "", "frozen"], [255, 3, 1, "", "integrate_geom"], [255, 2, 1, "", "is_energy_dependent"], [255, 2, 1, "", "norms"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "phi_0"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "plot_grid"], [255, 3, 1, "", "plot_interactive"], [255, 3, 1, "", "plot_position_error"], [255, 2, 1, "", "position"], [255, 2, 1, "", "position_error"], [255, 2, 1, "", "position_lonlat"], [255, 3, 1, "", "reassign"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[256, 3, 1, "", "__call__"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 2, 1, "", "energy"], [256, 3, 1, "", "energy_flux"], [256, 3, 1, "", "energy_flux_error"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "evaluate_error"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integral"], [256, 3, 1, "", "integral_error"], [256, 3, 1, "", "inverse"], [256, 3, 1, "", "inverse_all"], [256, 2, 1, "", "is_norm_spectral_model"], [256, 2, 1, "", "norms"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 2, 1, "", "pivot_energy"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "reassign"], [256, 3, 1, "", "reference_fluxes"], [256, 3, 1, "", "spectral_index"], [256, 3, 1, "", "spectral_index_error"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "evaluate_geom"], [257, 2, 1, "", "evaluation_bin_size_min"], [257, 2, 1, "", "evaluation_radius"], [257, 2, 1, "", "evaluation_region"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 3, 1, "", "from_position"], [257, 2, 1, "", "frozen"], [257, 3, 1, "", "integrate_geom"], [257, 2, 1, "", "is_energy_dependent"], [257, 2, 1, "", "lat_0"], [257, 2, 1, "", "lon_0"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "phi_0"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "plot_grid"], [257, 3, 1, "", "plot_interactive"], [257, 3, 1, "", "plot_position_error"], [257, 2, 1, "", "position"], [257, 2, 1, "", "position_error"], [257, 2, 1, "", "position_lonlat"], [257, 3, 1, "", "reassign"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "to_dict"], [257, 3, 1, "", "to_region"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[258, 3, 1, "", "__call__"], [258, 2, 1, "", "amplitude"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 2, 1, "", "emax"], [258, 2, 1, "", "emin"], [258, 3, 1, "", "energy_flux"], [258, 3, 1, "", "energy_flux_error"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "evaluate_error"], [258, 3, 1, "", "evaluate_integral"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 2, 1, "", "index"], [258, 3, 1, "", "integral"], [258, 3, 1, "", "integral_error"], [258, 3, 1, "", "inverse"], [258, 3, 1, "", "inverse_all"], [258, 2, 1, "", "is_norm_spectral_model"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "pivot_energy"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "reassign"], [258, 3, 1, "", "reference_fluxes"], [258, 3, 1, "", "spectral_index"], [258, 3, 1, "", "spectral_index_error"], [258, 2, 1, "", "tag"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[259, 3, 1, "", "__call__"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "energy_flux"], [259, 3, 1, "", "energy_flux_error"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_energy_flux"], [259, 3, 1, "", "evaluate_error"], [259, 3, 1, "", "evaluate_integral"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 3, 1, "", "integral"], [259, 3, 1, "", "integral_error"], [259, 3, 1, "", "inverse"], [259, 3, 1, "", "inverse_all"], [259, 2, 1, "", "is_norm_spectral_model"], [259, 2, 1, "", "norm"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 2, 1, "", "pivot_energy"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference"], [259, 3, 1, "", "reference_fluxes"], [259, 3, 1, "", "spectral_index"], [259, 3, 1, "", "spectral_index_error"], [259, 2, 1, "", "tag"], [259, 2, 1, "", "tilt"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[260, 3, 1, "", "__call__"], [260, 2, 1, "", "amplitude"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "energy_flux"], [260, 3, 1, "", "energy_flux_error"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "evaluate_energy_flux"], [260, 3, 1, "", "evaluate_error"], [260, 3, 1, "", "evaluate_integral"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 2, 1, "", "index"], [260, 3, 1, "", "integral"], [260, 3, 1, "", "integral_error"], [260, 3, 1, "", "inverse"], [260, 3, 1, "", "inverse_all"], [260, 2, 1, "", "is_norm_spectral_model"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 2, 1, "", "pivot_energy"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "reassign"], [260, 2, 1, "", "reference"], [260, 3, 1, "", "reference_fluxes"], [260, 3, 1, "", "spectral_index"], [260, 3, 1, "", "spectral_index_error"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[261, 3, 1, "", "__call__"], [261, 2, 1, "", "alpha"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 3, 1, "", "integral"], [261, 2, 1, "", "is_energy_dependent"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "reassign"], [261, 2, 1, "", "reference_time"], [261, 3, 1, "", "sample_time"], [261, 2, 1, "", "t0"], [261, 2, 1, "", "t_ref"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "time_sum"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[262, 3, 1, "", "__call__"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 2, 1, "", "frozen"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "parameters_unique_names"], [262, 3, 1, "", "reassign"], [262, 3, 1, "", "to_dict"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"], [262, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[265, 3, 1, "", "__call__"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 3, 1, "", "energy_flux"], [265, 3, 1, "", "energy_flux_error"], [265, 3, 1, "", "evaluate"], [265, 3, 1, "", "evaluate_error"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 2, 1, "", "frozen"], [265, 3, 1, "", "integral"], [265, 3, 1, "", "integral_error"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "inverse_all"], [265, 2, 1, "", "is_norm_spectral_model"], [265, 2, 1, "", "norm"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "pivot_energy"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "plot_error"], [265, 3, 1, "", "reassign"], [265, 3, 1, "", "reference_fluxes"], [265, 3, 1, "", "spectral_index"], [265, 3, 1, "", "spectral_index_error"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 2, 1, "", "eta"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "evaluate_geom"], [266, 2, 1, "", "evaluation_bin_size_min"], [266, 2, 1, "", "evaluation_radius"], [266, 2, 1, "", "evaluation_region"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 3, 1, "", "from_position"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integrate_geom"], [266, 2, 1, "", "is_energy_dependent"], [266, 2, 1, "", "lat_0"], [266, 2, 1, "", "lon_0"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "phi_0"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_error"], [266, 3, 1, "", "plot_grid"], [266, 3, 1, "", "plot_interactive"], [266, 3, 1, "", "plot_position_error"], [266, 2, 1, "", "position"], [266, 2, 1, "", "position_error"], [266, 2, 1, "", "position_lonlat"], [266, 2, 1, "", "r_0"], [266, 2, 1, "", "r_in"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "to_dict"], [266, 3, 1, "", "to_region"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[267, 3, 1, "", "__call__"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "evaluate_geom"], [267, 2, 1, "", "evaluation_bin_size_min"], [267, 2, 1, "", "evaluation_radius"], [267, 2, 1, "", "evaluation_region"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 3, 1, "", "from_position"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integrate_geom"], [267, 2, 1, "", "is_energy_dependent"], [267, 2, 1, "", "lat_0"], [267, 2, 1, "", "lon_0"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "phi_0"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "plot_error"], [267, 3, 1, "", "plot_grid"], [267, 3, 1, "", "plot_interactive"], [267, 3, 1, "", "plot_position_error"], [267, 2, 1, "", "position"], [267, 2, 1, "", "position_error"], [267, 2, 1, "", "position_lonlat"], [267, 2, 1, "", "radius"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "to_dict"], [267, 3, 1, "", "to_region"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"], [267, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[268, 3, 1, "", "__call__"], [268, 2, 1, "", "amp"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 3, 1, "", "evaluate"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 2, 1, "", "frozen"], [268, 3, 1, "", "integral"], [268, 2, 1, "", "is_energy_dependent"], [268, 2, 1, "", "omega"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "reassign"], [268, 2, 1, "", "reference_time"], [268, 3, 1, "", "sample_time"], [268, 2, 1, "", "t_ref"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "time_sum"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[269, 3, 1, "", "__call__"], [269, 3, 1, "", "contributes"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 3, 1, "", "create"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "evaluate"], [269, 3, 1, "", "evaluate_geom"], [269, 2, 1, "", "evaluation_bin_size_min"], [269, 2, 1, "", "evaluation_radius"], [269, 2, 1, "", "evaluation_region"], [269, 2, 1, "", "frame"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 2, 1, "", "frozen"], [269, 3, 1, "", "integrate_geom"], [269, 2, 1, "", "name"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 2, 1, "", "position"], [269, 2, 1, "", "position_lonlat"], [269, 3, 1, "", "reassign"], [269, 2, 1, "", "spatial_model"], [269, 2, 1, "", "spectral_model"], [269, 2, 1, "", "tag"], [269, 2, 1, "", "temporal_model"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[270, 3, 1, "", "__call__"], [270, 2, 1, "", "amplitude"], [270, 2, 1, "", "beta"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 2, 1, "", "ebreak"], [270, 3, 1, "", "energy_flux"], [270, 3, 1, "", "energy_flux_error"], [270, 3, 1, "", "evaluate"], [270, 3, 1, "", "evaluate_error"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 2, 1, "", "frozen"], [270, 2, 1, "", "index1"], [270, 2, 1, "", "index2"], [270, 3, 1, "", "integral"], [270, 3, 1, "", "integral_error"], [270, 3, 1, "", "inverse"], [270, 3, 1, "", "inverse_all"], [270, 2, 1, "", "is_norm_spectral_model"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "pivot_energy"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "reassign"], [270, 2, 1, "", "reference"], [270, 3, 1, "", "reference_fluxes"], [270, 3, 1, "", "spectral_index"], [270, 3, 1, "", "spectral_index_error"], [270, 2, 1, "", "tag"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[271, 3, 1, "", "__call__"], [271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 2, 1, "", "default_parameters"], [271, 3, 1, "", "evaluate_geom"], [271, 2, 1, "", "evaluation_bin_size_min"], [271, 2, 1, "", "evaluation_radius"], [271, 2, 1, "", "evaluation_region"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 3, 1, "", "from_position"], [271, 2, 1, "", "frozen"], [271, 3, 1, "", "integrate_geom"], [271, 2, 1, "", "is_energy_dependent"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 2, 1, "", "phi_0"], [271, 3, 1, "", "plot"], [271, 3, 1, "", "plot_error"], [271, 3, 1, "", "plot_grid"], [271, 3, 1, "", "plot_interactive"], [271, 3, 1, "", "plot_position_error"], [271, 2, 1, "", "position"], [271, 2, 1, "", "position_error"], [271, 2, 1, "", "position_lonlat"], [271, 3, 1, "", "reassign"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[272, 3, 1, "", "__call__"], [272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 2, 1, "", "default_parameters"], [272, 3, 1, "", "energy_flux"], [272, 3, 1, "", "energy_flux_error"], [272, 3, 1, "", "evaluate_error"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 2, 1, "", "frozen"], [272, 3, 1, "", "integral"], [272, 3, 1, "", "integral_error"], [272, 3, 1, "", "inverse"], [272, 3, 1, "", "inverse_all"], [272, 2, 1, "", "is_norm_spectral_model"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 2, 1, "", "pivot_energy"], [272, 3, 1, "", "plot"], [272, 3, 1, "", "plot_error"], [272, 3, 1, "", "reassign"], [272, 3, 1, "", "reference_fluxes"], [272, 3, 1, "", "spectral_index"], [272, 3, 1, "", "spectral_index_error"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[273, 3, 1, "", "__call__"], [273, 2, 1, "", "amplitude"], [273, 3, 1, "", "copy"], [273, 2, 1, "", "covariance"], [273, 2, 1, "", "default_parameters"], [273, 2, 1, "", "ecut"], [273, 3, 1, "", "energy_flux"], [273, 3, 1, "", "energy_flux_error"], [273, 3, 1, "", "evaluate"], [273, 3, 1, "", "evaluate_error"], [273, 3, 1, "", "freeze"], [273, 3, 1, "", "from_dict"], [273, 3, 1, "", "from_parameters"], [273, 2, 1, "", "frozen"], [273, 2, 1, "", "index_1"], [273, 2, 1, "", "index_2"], [273, 3, 1, "", "integral"], [273, 3, 1, "", "integral_error"], [273, 3, 1, "", "inverse"], [273, 3, 1, "", "inverse_all"], [273, 2, 1, "", "is_norm_spectral_model"], [273, 2, 1, "", "parameters"], [273, 2, 1, "", "parameters_unique_names"], [273, 2, 1, "", "pivot_energy"], [273, 3, 1, "", "plot"], [273, 3, 1, "", "plot_error"], [273, 3, 1, "", "reassign"], [273, 2, 1, "", "reference"], [273, 3, 1, "", "reference_fluxes"], [273, 3, 1, "", "spectral_index"], [273, 3, 1, "", "spectral_index_error"], [273, 2, 1, "", "tag"], [273, 3, 1, "", "to_dict"], [273, 2, 1, "", "type"], [273, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[274, 3, 1, "", "__call__"], [274, 2, 1, "", "amplitude"], [274, 3, 1, "", "copy"], [274, 2, 1, "", "covariance"], [274, 2, 1, "", "default_parameters"], [274, 2, 1, "", "e_peak"], [274, 3, 1, "", "energy_flux"], [274, 3, 1, "", "energy_flux_error"], [274, 3, 1, "", "evaluate"], [274, 3, 1, "", "evaluate_error"], [274, 2, 1, "", "expfactor"], [274, 3, 1, "", "freeze"], [274, 3, 1, "", "from_dict"], [274, 3, 1, "", "from_parameters"], [274, 2, 1, "", "frozen"], [274, 2, 1, "", "index_1"], [274, 2, 1, "", "index_2"], [274, 3, 1, "", "integral"], [274, 3, 1, "", "integral_error"], [274, 3, 1, "", "inverse"], [274, 3, 1, "", "inverse_all"], [274, 2, 1, "", "is_norm_spectral_model"], [274, 2, 1, "", "parameters"], [274, 2, 1, "", "parameters_unique_names"], [274, 2, 1, "", "pivot_energy"], [274, 3, 1, "", "plot"], [274, 3, 1, "", "plot_error"], [274, 3, 1, "", "reassign"], [274, 2, 1, "", "reference"], [274, 3, 1, "", "reference_fluxes"], [274, 3, 1, "", "spectral_index"], [274, 3, 1, "", "spectral_index_error"], [274, 2, 1, "", "tag"], [274, 3, 1, "", "to_dict"], [274, 2, 1, "", "type"], [274, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[275, 3, 1, "", "__call__"], [275, 2, 1, "", "amplitude"], [275, 3, 1, "", "copy"], [275, 2, 1, "", "covariance"], [275, 2, 1, "", "default_parameters"], [275, 3, 1, "", "energy_flux"], [275, 3, 1, "", "energy_flux_error"], [275, 3, 1, "", "evaluate"], [275, 3, 1, "", "evaluate_error"], [275, 2, 1, "", "expfactor"], [275, 3, 1, "", "freeze"], [275, 3, 1, "", "from_dict"], [275, 3, 1, "", "from_parameters"], [275, 2, 1, "", "frozen"], [275, 2, 1, "", "index_1"], [275, 2, 1, "", "index_2"], [275, 3, 1, "", "integral"], [275, 3, 1, "", "integral_error"], [275, 3, 1, "", "inverse"], [275, 3, 1, "", "inverse_all"], [275, 2, 1, "", "is_norm_spectral_model"], [275, 2, 1, "", "parameters"], [275, 2, 1, "", "parameters_unique_names"], [275, 2, 1, "", "pivot_energy"], [275, 3, 1, "", "plot"], [275, 3, 1, "", "plot_error"], [275, 3, 1, "", "reassign"], [275, 2, 1, "", "reference"], [275, 3, 1, "", "reference_fluxes"], [275, 3, 1, "", "spectral_index"], [275, 3, 1, "", "spectral_index_error"], [275, 2, 1, "", "tag"], [275, 3, 1, "", "to_dict"], [275, 2, 1, "", "type"], [275, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[277, 3, 1, "", "__call__"], [277, 3, 1, "", "copy"], [277, 2, 1, "", "covariance"], [277, 2, 1, "", "default_parameters"], [277, 3, 1, "", "evaluate"], [277, 3, 1, "", "evaluate_geom"], [277, 2, 1, "", "evaluation_bin_size_min"], [277, 2, 1, "", "evaluation_radius"], [277, 2, 1, "", "evaluation_region"], [277, 3, 1, "", "freeze"], [277, 3, 1, "", "from_dict"], [277, 3, 1, "", "from_parameters"], [277, 3, 1, "", "from_position"], [277, 2, 1, "", "frozen"], [277, 3, 1, "", "integrate_geom"], [277, 2, 1, "", "is_energy_dependent"], [277, 2, 1, "", "map"], [277, 2, 1, "", "parameters"], [277, 2, 1, "", "parameters_unique_names"], [277, 2, 1, "", "phi_0"], [277, 3, 1, "", "plot"], [277, 3, 1, "", "plot_error"], [277, 3, 1, "", "plot_grid"], [277, 3, 1, "", "plot_interactive"], [277, 3, 1, "", "plot_position_error"], [277, 2, 1, "", "position"], [277, 2, 1, "", "position_error"], [277, 2, 1, "", "position_lonlat"], [277, 3, 1, "", "reassign"], [277, 2, 1, "", "tag"], [277, 3, 1, "", "to_dict"], [277, 2, 1, "", "type"], [277, 3, 1, "", "unfreeze"], [277, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[278, 3, 1, "", "__call__"], [278, 3, 1, "", "copy"], [278, 2, 1, "", "covariance"], [278, 2, 1, "", "default_parameters"], [278, 3, 1, "", "energy_flux"], [278, 3, 1, "", "energy_flux_error"], [278, 3, 1, "", "evaluate"], [278, 3, 1, "", "evaluate_error"], [278, 3, 1, "", "freeze"], [278, 3, 1, "", "from_dict"], [278, 3, 1, "", "from_parameters"], [278, 2, 1, "", "frozen"], [278, 3, 1, "", "integral"], [278, 3, 1, "", "integral_error"], [278, 3, 1, "", "inverse"], [278, 3, 1, "", "inverse_all"], [278, 2, 1, "", "is_norm_spectral_model"], [278, 2, 1, "", "map"], [278, 2, 1, "", "parameters"], [278, 2, 1, "", "parameters_unique_names"], [278, 2, 1, "", "pivot_energy"], [278, 3, 1, "", "plot"], [278, 3, 1, "", "plot_error"], [278, 3, 1, "", "reassign"], [278, 3, 1, "", "reference_fluxes"], [278, 3, 1, "", "spectral_index"], [278, 3, 1, "", "spectral_index_error"], [278, 2, 1, "", "tag"], [278, 3, 1, "", "to_dict"], [278, 2, 1, "", "type"], [278, 3, 1, "", "unfreeze"], [278, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[279, 3, 1, "", "copy"], [279, 2, 1, "", "covariance"], [279, 3, 1, "", "cutout"], [279, 2, 1, "", "default_parameters"], [279, 2, 1, "", "energy_center"], [279, 3, 1, "", "evaluate"], [279, 2, 1, "", "evaluation_radius"], [279, 3, 1, "", "freeze"], [279, 3, 1, "", "from_dict"], [279, 3, 1, "", "from_parameters"], [279, 2, 1, "", "frozen"], [279, 2, 1, "", "map"], [279, 2, 1, "", "name"], [279, 2, 1, "", "parameters"], [279, 2, 1, "", "parameters_unique_names"], [279, 2, 1, "", "position"], [279, 3, 1, "", "reassign"], [279, 3, 1, "", "slice_by_energy"], [279, 2, 1, "", "spectral_model"], [279, 3, 1, "", "stack"], [279, 2, 1, "", "tag"], [279, 3, 1, "", "to_dict"], [279, 2, 1, "", "type"], [279, 3, 1, "", "unfreeze"], [279, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[280, 3, 1, "", "__call__"], [280, 3, 1, "", "copy"], [280, 2, 1, "", "covariance"], [280, 2, 1, "", "default_parameters"], [280, 3, 1, "", "evaluate"], [280, 2, 1, "", "f0"], [280, 2, 1, "", "f1"], [280, 2, 1, "", "f2"], [280, 3, 1, "", "freeze"], [280, 3, 1, "", "from_dict"], [280, 3, 1, "", "from_parameters"], [280, 2, 1, "", "frozen"], [280, 3, 1, "", "integral"], [280, 2, 1, "", "is_energy_dependent"], [280, 2, 1, "", "parameters"], [280, 2, 1, "", "parameters_unique_names"], [280, 2, 1, "", "phi_ref"], [280, 3, 1, "", "plot"], [280, 3, 1, "", "plot_phasogram"], [280, 3, 1, "", "read"], [280, 3, 1, "", "reassign"], [280, 2, 1, "", "reference_time"], [280, 3, 1, "", "sample_time"], [280, 2, 1, "", "t_ref"], [280, 2, 1, "", "tag"], [280, 3, 1, "", "time_sum"], [280, 3, 1, "", "to_dict"], [280, 2, 1, "", "type"], [280, 3, 1, "", "unfreeze"], [280, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[281, 3, 1, "", "__call__"], [281, 3, 1, "", "copy"], [281, 2, 1, "", "covariance"], [281, 2, 1, "", "default_parameters"], [281, 3, 1, "", "evaluate"], [281, 3, 1, "", "evaluate_geom"], [281, 2, 1, "", "evaluation_bin_size_min"], [281, 2, 1, "", "evaluation_radius"], [281, 2, 1, "", "evaluation_region"], [281, 3, 1, "", "freeze"], [281, 3, 1, "", "from_dict"], [281, 3, 1, "", "from_parameters"], [281, 3, 1, "", "from_position"], [281, 2, 1, "", "frozen"], [281, 3, 1, "", "integrate_geom"], [281, 2, 1, "", "is_energy_dependent"], [281, 2, 1, "", "lat_0"], [281, 2, 1, "", "lon_0"], [281, 2, 1, "", "map"], [281, 2, 1, "", "map_center"], [281, 2, 1, "", "parameters"], [281, 2, 1, "", "parameters_unique_names"], [281, 2, 1, "", "phi_0"], [281, 3, 1, "", "plot"], [281, 3, 1, "", "plot_error"], [281, 3, 1, "", "plot_grid"], [281, 3, 1, "", "plot_interactive"], [281, 3, 1, "", "plot_position_error"], [281, 2, 1, "", "position"], [281, 2, 1, "", "position_error"], [281, 2, 1, "", "position_lonlat"], [281, 3, 1, "", "read"], [281, 3, 1, "", "reassign"], [281, 2, 1, "", "tag"], [281, 3, 1, "", "to_dict"], [281, 3, 1, "", "to_region"], [281, 2, 1, "", "type"], [281, 3, 1, "", "unfreeze"], [281, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[282, 3, 1, "", "__call__"], [282, 3, 1, "", "copy"], [282, 2, 1, "", "covariance"], [282, 2, 1, "", "default_parameters"], [282, 3, 1, "", "energy_flux"], [282, 3, 1, "", "energy_flux_error"], [282, 3, 1, "", "evaluate"], [282, 3, 1, "", "evaluate_error"], [282, 3, 1, "", "freeze"], [282, 3, 1, "", "from_dict"], [282, 3, 1, "", "from_parameters"], [282, 3, 1, "", "from_region_map"], [282, 2, 1, "", "frozen"], [282, 3, 1, "", "integral"], [282, 3, 1, "", "integral_error"], [282, 3, 1, "", "inverse"], [282, 3, 1, "", "inverse_all"], [282, 2, 1, "", "is_norm_spectral_model"], [282, 2, 1, "", "parameters"], [282, 2, 1, "", "parameters_unique_names"], [282, 2, 1, "", "pivot_energy"], [282, 3, 1, "", "plot"], [282, 3, 1, "", "plot_error"], [282, 3, 1, "", "read_xspec_model"], [282, 3, 1, "", "reassign"], [282, 3, 1, "", "reference_fluxes"], [282, 3, 1, "", "spectral_index"], [282, 3, 1, "", "spectral_index_error"], [282, 2, 1, "", "tag"], [282, 3, 1, "", "to_dict"], [282, 2, 1, "", "type"], [282, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[283, 3, 1, "", "__call__"], [283, 3, 1, "", "copy"], [283, 2, 1, "", "covariance"], [283, 2, 1, "", "default_parameters"], [283, 3, 1, "", "freeze"], [283, 3, 1, "", "from_dict"], [283, 3, 1, "", "from_parameters"], [283, 2, 1, "", "frozen"], [283, 3, 1, "", "integral"], [283, 2, 1, "", "is_energy_dependent"], [283, 2, 1, "", "parameters"], [283, 2, 1, "", "parameters_unique_names"], [283, 3, 1, "", "plot"], [283, 3, 1, "", "reassign"], [283, 2, 1, "", "reference_time"], [283, 3, 1, "", "sample_time"], [283, 3, 1, "", "time_sum"], [283, 3, 1, "", "to_dict"], [283, 2, 1, "", "type"], [283, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.UniformPrior": [[284, 3, 1, "", "__call__"], [284, 3, 1, "", "copy"], [284, 2, 1, "", "covariance"], [284, 2, 1, "", "default_parameters"], [284, 3, 1, "", "evaluate"], [284, 3, 1, "", "freeze"], [284, 3, 1, "", "from_dict"], [284, 3, 1, "", "from_parameters"], [284, 2, 1, "", "frozen"], [284, 2, 1, "", "max"], [284, 2, 1, "", "min"], [284, 2, 1, "", "parameters"], [284, 2, 1, "", "parameters_unique_names"], [284, 3, 1, "", "reassign"], [284, 2, 1, "", "tag"], [284, 3, 1, "", "to_dict"], [284, 2, 1, "", "type"], [284, 3, 1, "", "unfreeze"], [284, 2, 1, "", "weight"]], "gammapy.modeling.models.utils": [[291, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[294, 1, 1, "", "CashCountsStatistic"], [295, 1, 1, "", "Chi2AsymmetricErrorFitStatistic"], [296, 1, 1, "", "Chi2FitStatistic"], [297, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [298, 1, 1, "", "WStatCountsStatistic"], [299, 4, 1, "", "cash"], [300, 4, 1, "", "cash_sum_cython"], [301, 4, 1, "", "compute_chisq"], [302, 4, 1, "", "compute_flux_doubling"], [303, 4, 1, "", "compute_fpp"], [304, 4, 1, "", "compute_fvar"], [305, 4, 1, "", "cstat"], [306, 4, 1, "", "discrete_correlation"], [307, 4, 1, "", "f_cash_root_cython"], [308, 4, 1, "", "get_wstat_gof_terms"], [309, 4, 1, "", "get_wstat_mu_bkg"], [310, 4, 1, "", "norm_bounds_cython"], [311, 4, 1, "", "sigma_to_ts"], [312, 4, 1, "", "structure_function"], [313, 4, 1, "", "ts_to_sigma"], [314, 4, 1, "", "weighted_cash_sum_cython"], [315, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[294, 3, 1, "", "compute_errn"], [294, 3, 1, "", "compute_errp"], [294, 3, 1, "", "compute_upper_limit"], [294, 2, 1, "", "error"], [294, 3, 1, "", "info_dict"], [294, 2, 1, "", "n_bkg"], [294, 2, 1, "", "n_sig"], [294, 3, 1, "", "n_sig_matching_significance"], [294, 2, 1, "", "p_value"], [294, 2, 1, "", "sqrt_ts"], [294, 2, 1, "", "stat_max"], [294, 2, 1, "", "stat_null"], [294, 3, 1, "", "sum"], [294, 2, 1, "", "ts"]], "gammapy.stats.Chi2AsymmetricErrorFitStatistic": [[295, 3, 1, "", "loglikelihood_dataset"], [295, 3, 1, "", "stat_array_dataset"], [295, 3, 1, "", "stat_sum_dataset"]], "gammapy.stats.Chi2FitStatistic": [[296, 3, 1, "", "loglikelihood_dataset"], [296, 3, 1, "", "stat_array_dataset"], [296, 3, 1, "", "stat_sum_dataset"]], "gammapy.stats.WStatCountsStatistic": [[298, 3, 1, "", "compute_errn"], [298, 3, 1, "", "compute_errp"], [298, 3, 1, "", "compute_upper_limit"], [298, 2, 1, "", "error"], [298, 3, 1, "", "info_dict"], [298, 2, 1, "", "n_bkg"], [298, 2, 1, "", "n_sig"], [298, 3, 1, "", "n_sig_matching_significance"], [298, 2, 1, "", "p_value"], [298, 2, 1, "", "sqrt_ts"], [298, 2, 1, "", "stat_max"], [298, 2, 1, "", "stat_null"], [298, 3, 1, "", "sum"], [298, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[316, 4, 1, "", "hierarchical_clustering"], [317, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[318, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [319, 4, 1, "", "cartesian"], [320, 4, 1, "", "fov_to_sky"], [321, 4, 1, "", "galactic"], [322, 4, 1, "", "motion_since_birth"], [323, 4, 1, "", "polar"], [324, 4, 1, "", "sky_to_fov"], [325, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[326, 1, 1, "", "HDULocation"], [327, 1, 1, "", "LazyFitsData"], [328, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[326, 3, 1, "", "get_hdu"], [326, 3, 1, "", "info"], [326, 3, 1, "", "load"], [326, 3, 1, "", "path"]], "gammapy.utils.integrate": [[329, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[330, 1, 1, "", "ScaledRegularGridInterpolator"], [331, 4, 1, "", "interpolate_profile"], [332, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[330, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[333, 5, 1, "", "BACKEND_DEFAULT"], [334, 5, 1, "", "METHOD_DEFAULT"], [335, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [336, 5, 1, "", "N_JOBS_DEFAULT"], [337, 5, 1, "", "POOL_KWARGS_DEFAULT"], [338, 1, 1, "", "multiprocessing_manager"], [339, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[340, 1, 1, "", "InverseCDFSampler"], [341, 4, 1, "", "draw"], [342, 4, 1, "", "get_random_state"], [343, 4, 1, "", "normalize"], [344, 4, 1, "", "pdf"], [345, 4, 1, "", "sample_powerlaw"], [346, 4, 1, "", "sample_sphere"], [347, 4, 1, "", "sample_sphere_distance"], [348, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[340, 3, 1, "", "sample"], [340, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[349, 4, 1, "", "compound_region_to_regions"], [350, 4, 1, "", "make_concentric_annulus_sky_regions"], [351, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [352, 4, 1, "", "region_to_frame"], [353, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[354, 4, 1, "", "from_yaml"], [355, 4, 1, "", "get_images_paths"], [356, 4, 1, "", "make_path"], [357, 4, 1, "", "read_yaml"], [358, 4, 1, "", "recursive_merge_dicts"], [359, 4, 1, "", "to_yaml"], [360, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[361, 4, 1, "", "hstack_columns"], [362, 4, 1, "", "table_row_to_dict"], [363, 4, 1, "", "table_standardise_units_copy"], [364, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[365, 1, 1, "", "Checker"], [366, 4, 1, "", "assert_quantity_allclose"], [367, 4, 1, "", "assert_skycoord_allclose"], [368, 4, 1, "", "assert_time_allclose"], [369, 4, 1, "", "mpl_plot_check"], [370, 4, 1, "", "requires_data"], [371, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[365, 3, 1, "", "run"]], "gammapy.utils.time": [[372, 4, 1, "", "absolute_time"], [373, 4, 1, "", "time_ref_from_dict"], [374, 4, 1, "", "time_ref_to_dict"], [375, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[376, 4, 1, "", "standardise_unit"], [377, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[378, 1, 1, "", "MapPanelPlotter"], [379, 4, 1, "", "add_colorbar"], [380, 4, 1, "", "annotate_heatmap"], [381, 4, 1, "", "colormap_hess"], [382, 4, 1, "", "colormap_milagro"], [383, 4, 1, "", "plot_contour_line"], [384, 4, 1, "", "plot_distribution"], [385, 4, 1, "", "plot_heatmap"], [386, 4, 1, "", "plot_map_rgb"], [387, 4, 1, "", "plot_npred_signal"], [388, 4, 1, "", "plot_spectrum_datasets_off_regions"], [389, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[378, 3, 1, "", "plot"], [378, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 102, 103, 104, 105, 106, 109, 110, 111, 126, 127, 128, 132, 136, 144, 150, 151, 152, 156, 176, 182, 203, 209, 223, 227, 228, 233, 235, 236, 240, 241, 243, 244, 245, 247, 251, 253, 254, 258, 260, 261, 268, 269, 270, 273, 274, 275, 280, 283, 285, 286, 292, 304, 326, 376, 380, 381, 388, 391, 392, 394, 396, 401, 402, 403, 405, 407, 408, 409, 410, 411, 414, 417, 421, 422, 424, 425, 427, 428, 429, 430, 458, 459, 461, 462, 463, 464, 466, 468, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 521, 524, 526, 532, 533, 534, 535, 538, 540, 545, 557, 558, 559, 560, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 603, 604, 605, 607], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 77, 83, 85, 87, 88, 89, 90, 91, 94, 96, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 144, 145, 147, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 179, 180, 184, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 290, 292, 294, 297, 298, 299, 302, 303, 304, 305, 306, 311, 313, 316, 317, 336, 340, 347, 348, 368, 379, 381, 382, 386, 388, 391, 392, 395, 398, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 428, 429, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 520, 522, 523, 524, 526, 527, 528, 532, 534, 538, 542, 544, 547, 549, 550, 551, 552, 553, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 603, 604, 605, 606, 608], "00": [67, 87, 88, 89, 91, 102, 200, 392, 406, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 481, 482, 485, 486, 489, 490, 492, 493, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 509, 510, 512, 513, 514, 517, 520, 522, 523, 524, 526, 527, 555, 566, 587, 588, 599, 607], "000": [67, 87, 88, 91, 127, 406, 463, 466, 468, 469, 471, 472, 477, 478, 479, 481, 482, 486, 489, 490, 493, 496, 497, 498, 503, 505, 506, 507, 513, 522, 523, 526, 555, 608], "0000": [417, 507], "000000": 496, "000000000000002": 503, "00000000000001": 471, "00000000000003": 491, "00000000000004": 496, "0000000000016": 86, "0000000000018": 94, "000000000002": 481, "0000000000030": 507, "0000000000037": 507, "0000000000057": 507, "0000000000064": 481, "000000000007": 496, "0000000000080": 507, "00000000001": 496, "0000000000206": 507, "0000000000290": 507, "0000000000334": 507, "0000000000340": 507, "0000000000375": 507, "0000000000444": 507, "0000000000501": 507, "0000000000534": 507, "0000000000549": 507, "0000000000581": 507, "0000000000776": 507, "0000000000874": 507, "00000000e": [499, 501], "00000001": 86, "0000000e": 501, "00000143": [392, 607], "0000e": [102, 463, 464, 468, 469, 470, 471, 474, 477, 486, 489, 490, 499, 506, 509, 524, 587], "0001": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 382, 479], "00010298": 497, "00015": 498, "000150": 466, "0002": [466, 526], "00020": 466, "0002000": 466, "0003": 479, "00050": 466, "000500": 466, "0006": 466, "00074287037": [94, 482], "000742870370370241": 94, "0008": 496, "0009": 466, "000e": [463, 468, 471, 474, 477, 478, 486, 490, 496, 499, 506, 509, 524, 526, 587], "000true": 466, "001": [50, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 368, 481, 499, 564], "0010": 507, "0016": 507, "0016288e": 501, "0019e": 486, "001e": 67, "002": 486, "002018": 513, "0021": 507, "0025508e": 501, "0028272e": 501, "0029": 416, "002924909437196891": 523, "002e": [67, 469], "003": [491, 505, 513], "003026327991562108": 478, "003105928246293051": 523, "0033": 605, "0033685231218731e": 493, "0036925550396303": 471, "00375698": 244, "0039": 507, "004": 67, "0040": 507, "00422666667": 494, "00449161": 250, "00472179200096": 420, "00490": 479, "00490483": 479, "0049409": 512, "005": 496, "00511624e": 498, "00521472221220211": 478, "0059": 507, "005911103564621735": 480, "006": 510, "0064": 507, "0064830e": 501, "00688029": 244, "007": 496, "007638805438": 490, "0076540e": 501, "008": [496, 604], "008166963876141447": 480, "0088": 507, "00889194478934663": 480, "00894": 526, "009": [493, 496], "00931e": 462, "009428253484623464": 480, "00e": [83, 462, 469, 472, 481, 486, 490, 491, 493, 497, 501, 502, 507, 513, 523], "01": [39, 52, 75, 83, 87, 88, 91, 94, 103, 106, 110, 111, 113, 114, 129, 134, 136, 179, 180, 184, 194, 195, 200, 204, 207, 230, 236, 241, 243, 245, 261, 268, 392, 420, 428, 461, 462, 463, 468, 470, 472, 474, 477, 478, 481, 486, 490, 491, 492, 495, 496, 497, 499, 501, 502, 503, 504, 505, 506, 507, 509, 510, 513, 514, 523, 524, 526, 532, 537, 547, 549, 550, 553, 558, 560, 562, 575, 585, 591, 592, 593, 599, 604, 607], "010": [505, 507], "010066705375548107": 420, "010e": 67, "011": [311, 313, 505], "011872336272724": 523, "0118e": 486, "012": 505, "0122385e": 501, "01235137e": 501, "012733796525585": 508, "0130": 507, "0133": 507, "0134": 507, "0139252e": 501, "014": [85, 103, 106, 110, 111, 176, 469, 477, 496, 502, 523, 524, 549], "0143724": 244, "0143764": 512, "01449": 83, "0145": 504, "01450": [488, 524], "0147": 507, "0148015517529894": 420, "014811633859834": 420, "0149044e": 501, "015": 496, "0155": 507, "01551196351647377": 244, "0159": 507, "0162": 507, "0163": 479, "01648855015875024": 603, "0168": 507, "017": 527, "01700709977114979": 494, "0174": [507, 511], "017442925431194484": 494, "018": 67, "0180": 507, "018182745349064267": 478, "0182": 507, "0183519e": 501, "0185": 507, "0186": 507, "0189": 507, "0189e": 490, "0195": 507, "019672": 498, "019899368286133": 478, "01e": [176, 428, 462, 486, 496], "01t00": [87, 91, 94, 200, 392, 472, 481, 607], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 103, 106, 110, 111, 112, 117, 164, 171, 176, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 428, 461, 462, 463, 466, 467, 468, 469, 474, 475, 477, 478, 479, 480, 481, 482, 485, 486, 488, 489, 490, 491, 492, 496, 499, 501, 502, 503, 504, 505, 506, 507, 510, 513, 520, 523, 524, 526, 527, 547, 549, 550, 558, 559, 560, 566], "020": [478, 496, 498], "0201": 507, "0204": 507, "0204081632653064": 483, "020420144596410953": 508, "021": [67, 496], "0216": 507, "0225e": 496, "02288737": 244, "023": 496, "0233": 507, "0234": 507, "023472813526874605": 523, "023977": 474, "024": 496, "0242": 507, "02432": 496, "0245": 507, "02471554675416": 523, "024897178551308": 420, "024e": 526, "025": [496, 513], "025119120535663": 479, "0252": 507, "026": [53, 67, 496], "02653": [472, 479], "026891": 496, "026914": 496, "027": 67, "0280": 507, "028549898215494e": 420, "028854": 504, "0296": 507, "029e": [463, 496], "02e": [83, 493], "02t23": 86, "03": [67, 87, 89, 91, 206, 404, 419, 461, 462, 463, 466, 478, 479, 481, 490, 492, 496, 501, 503, 505, 507, 508, 509, 510, 515, 517, 524, 561], "030188": 569, "03034567e": 498, "0308": 507, "031": [461, 467], "0319": 507, "032": 496, "0321": 507, "0322": 67, "0322775e": 501, "033": [67, 496], "0330": 507, "033176650892097": 96, "03383": 512, "034": 604, "0344": 67, "03447394e": 498, "0347": 507, "0349": 507, "03493": 498, "034e": 466, "035": 498, "0354700e": 501, "0356": [462, 507], "0356551": 462, "036": 67, "0363": 507, "0366": 507, "036e": 496, "037": 505, "03745318352059925": 597, "0375512e": 501, "0376213e": 501, "0383": 507, "0384": 507, "0387": 507, "03893": 498, "039": [477, 478, 498], "03921700077803329": 478, "0393": 507, "0395135e": 501, "03978226e": 506, "04": [30, 67, 94, 105, 126, 461, 467, 469, 471, 472, 475, 478, 481, 490, 491, 496, 501, 503, 506, 507, 510, 513], "040": 468, "0409": 507, "040e": 472, "041": 513, "0412": 507, "0414": 472, "0415": 526, "041882": 496, "042": 496, "0421": 507, "0423761": 462, "042e": 496, "043": 67, "0430": 507, "04357249662280083": 468, "044": [461, 510], "04454": 513, "0447": 507, "0452": 507, "0454683": 512, "0459": 507, "046": 67, "0460": 507, "0462798e": 501, "0469": 507, "047": 67, "0472": 507, "0473174": 250, "0474750e": 501, "048": [477, 513], "0482342e": 501, "0486": 507, "04897634344908595": 96, "048e": 67, "049": [466, 477], "04939e": 462, "049676": 496, "04d": 481, "04e": 502, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 77, 87, 91, 105, 124, 125, 126, 127, 135, 207, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 350, 419, 461, 462, 463, 464, 466, 468, 469, 472, 474, 475, 477, 478, 479, 482, 486, 489, 495, 496, 497, 499, 501, 502, 505, 506, 507, 509, 512, 514, 517, 523, 524, 552, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "050": 505, "0503641": 462, "0505949e": 501, "0506": 507, "05075": 501, "0508075688763": 496, "05088486522436142": 468, "0509": 507, "050e": 472, "051": 505, "0519": 507, "052": 496, "0520119e": 501, "0521468441366": 480, "052234": 469, "05227": 496, "053": 477, "053212009682775": 508, "0542": 507, "0543": 507, "054833602905273e": 478, "0548e": 478, "054e": 67, "055": 496, "0554": 507, "055e": 466, "0560": 526, "056130": 496, "05628243": 526, "05637e": 462, "05673": 526, "057": 496, "05762513693893088": 478, "058": 67, "058201": 496, "0585": 507, "05853": 472, "059": 67, "05901956e": 501, "0593": 507, "0597": 507, "0598579": 462, "05deg": 207, "05zokpr0": 493, "06": [150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 461, 475, 476, 477, 478, 479, 496, 497, 499, 501, 502, 503, 507, 513, 517, 588], "061": 526, "061224489795904": 483, "0617": 507, "062": [481, 505, 506, 513], "0625": 506, "0627": 507, "0628": 526, "063": 67, "0631757e": 501, "06334488877417636": 508, "064108e": 496, "0643": 507, "06430": 479, "0643032": 479, "0644": 507, "0648": 507, "065071": 496, "065119": 526, "0659": 507, "066": 468, "0660": 507, "066442": 496, "0669": 507, "067": 472, "0676": 507, "0681": 507, "068245": 496, "0689": 499, "068e": 466, "069": 67, "06n997dy": 493, "07": [103, 176, 366, 406, 428, 461, 466, 467, 469, 477, 479, 489, 491, 493, 496, 497, 501, 503, 505, 507, 513, 517], "0702": 507, "070238": 597, "0704": 507, "070483": 496, "0707": 507, "0709": 507, "0711412": 462, "0713": 507, "072": 67, "0720": 507, "0721": 507, "073": 67, "0735e": 486, "0739282e": 501, "074": [496, 513], "0741": 507, "07454639": 479, "07455": 479, "0746": 526, "0748": [496, 526], "075": [67, 566], "07512322002655547": 478, "0756e": 462, "076": 526, "0762": 507, "077": 462, "0770": 507, "077035": 469, "078": 466, "0781": 507, "0782": 507, "07871368968": 497, "07943648658692837": 508, "07944657408": 496, "079464e": 526, "0796": 507, "0799109224230051": 508, "07e": 491, "08": [86, 386, 428, 461, 467, 470, 471, 474, 475, 477, 478, 486, 490, 496, 497, 499, 502, 507, 513, 523, 524, 568], "0800792e": 501, "0801": 507, "08075": 501, "08081469527497996": 471, "08088": 182, "080e": 472, "0811551760882139": 508, "0814": 507, "08142": 495, "081632653061217": 483, "08191603310406206": 508, "08192": 479, "08192101": 479, "082": 496, "0826": 507, "082691868487906": 494, "08269984": 526, "082e": 127, "083": [67, 496, 507], "08324341244420914": 507, "08328557573258877": 508, "0833333358168602": 468, "0833333432674408": 468, "0834": 507, "08388624433428049": 508, "084": 67, "08437": 507, "08447355125099419": 508, "0845515": 462, "08461": 507, "084836": 578, "085": 496, "08529426": 97, "0853": 507, "0854": 507, "0855013383552432": 508, "0859123667444601e": 493, "0860": 507, "0862": 507, "08675": 497, "086e": 496, "087": 526, "0873": 507, "0875": 507, "0878": 507, "08795162606984375": 508, "087e": 496, "088": 486, "0886": 507, "088742": 496, "08880368117243051": 508, "08894569035619496": 508, "089": 140, "0894640e": 501, "0895": 507, "0897868126630783": 508, "089881": 496, "08e": [486, 505], "09": [33, 127, 176, 461, 463, 469, 472, 475, 477, 485, 496, 497, 501, 502, 507, 510, 523, 524, 526, 605], "0900": 507, "0901": 507, "0902437e": 501, "0903": 507, "090488": 576, "0907128e": 501, "0909": 507, "090e": 468, "0910": [259, 260], "0914": [52, 53], "0932": 507, "093477": 479, "09348": 479, "09375": 493, "09426693227142095": 508, "094834": 496, "0952": 507, "095232": 496, "0953": 507, "0954": 507, "09562941": 526, "095707": 526, "096": 469, "0960": [507, 526], "09607": 526, "0961": 507, "09610314778983592": 508, "0962": 507, "09623312838375568": 508, "0966": 507, "0968": 507, "0971": 507, "09740295372903346": 508, "097e": 67, "098": 599, "09866": 507, "0988": 507, "098903": 496, "099": [461, 599], "09907043184188653": 508, "0999": 507, "09e": 502, "0b100": 336, "0d": [129, 483, 497, 562, 608], "0e": [414, 469, 471, 472, 474, 478, 481, 486, 490, 493, 497, 498, 501, 503, 505, 506, 507, 513, 523, 557, 558, 559, 560, 562, 563, 564, 565, 569, 570, 572, 576, 578, 579, 580, 581, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "0f": [499, 513, 526], "0rc": 421, "0rc1": 421, "0true": 479, "0x105fd0cf8": 391, "0x105fe3b70": 391, "0x129602550": 391, "0x7f7aee1f6070": 497, "0x7f7aee1f6340": 497, "0x7f7af62ca730": 506, "0x7f7af6a5c970": 509, "0x7f7af6cc75e0": 508, "0x7f7af6cc7c40": 508, "0x7f7af6d35280": 512, "0x7f7af6df5850": 512, "0x7f7af6df5f10": 512, "0x7f7af6fd3eb0": 494, "0x7f7af701bc70": 497, "0x7f7b059cfbe0": 508, "0x7f7b05d67220": 508, "0x7f7b05dba0a0": 512, "0x7f7b064b8d60": 497, "0x7f7b06500190": 483, "0x7f7b06500490": 483, "0x7f7b1221d3a0": 587, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 77, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 103, 106, 110, 111, 112, 116, 117, 119, 120, 124, 127, 128, 129, 130, 132, 133, 136, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 171, 176, 179, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 217, 219, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 253, 254, 256, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 292, 294, 297, 298, 302, 303, 311, 313, 316, 317, 329, 330, 336, 337, 338, 347, 348, 350, 351, 376, 378, 381, 382, 386, 388, 391, 392, 394, 395, 398, 399, 401, 402, 403, 405, 406, 408, 411, 413, 414, 415, 416, 417, 418, 421, 422, 425, 428, 432, 433, 435, 436, 440, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 511, 512, 513, 514, 515, 520, 523, 524, 526, 528, 532, 533, 534, 537, 538, 540, 542, 543, 544, 545, 546, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601, 602, 604, 605, 606, 608], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 77, 86, 87, 88, 89, 91, 101, 103, 104, 106, 109, 110, 111, 112, 117, 120, 124, 125, 127, 128, 129, 133, 135, 136, 138, 144, 145, 150, 151, 153, 155, 157, 158, 163, 164, 165, 166, 167, 169, 176, 182, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 214, 217, 219, 221, 230, 233, 246, 247, 248, 250, 251, 273, 274, 286, 297, 311, 313, 336, 338, 348, 379, 384, 386, 388, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 407, 408, 413, 414, 415, 419, 420, 422, 428, 433, 435, 446, 448, 451, 455, 457, 461, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 523, 524, 526, 528, 534, 538, 544, 547, 549, 550, 551, 552, 563, 564, 568, 570, 573, 574, 576, 577, 578, 579, 581, 582, 584, 585, 586, 587, 591, 592, 593, 603, 604, 607, 608], "100": [19, 20, 26, 46, 47, 74, 77, 94, 127, 134, 136, 155, 156, 166, 207, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 286, 288, 348, 391, 392, 394, 399, 410, 420, 431, 462, 464, 468, 471, 477, 478, 479, 481, 482, 483, 486, 491, 494, 495, 496, 497, 498, 501, 502, 503, 506, 507, 509, 512, 513, 514, 526, 530, 532, 533, 534, 538, 549, 552, 553, 557, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 604], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 197, 202, 221, 391, 394, 466, 496, 497, 501, 509, 513, 526, 552], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 104, 109, 155, 166, 169, 179, 496, 513], "100000": [74, 496, 523], "1000000": [51, 52, 54, 496, 587], "10000000": 587, "100000000000": 498, "10000_100000_wtct": 77, "1000_3000_wtct": 77, "1000e": 509, "1001": [450, 481, 482], "1002": [450, 507], "10045": [65, 275, 586], "10049": 462, "1005": 507, "1006": 450, "1007": 507, "1009": 507, "100_300_wtct": 77, "101": [436, 477, 491, 496, 507], "1010": 507, "1012": 495, "1013": 451, "1014": [451, 507], "101430": 491, "10172": 506, "1019": 507, "102": [176, 469, 472, 507, 604, 605], "1020": 507, "102040816326531": 483, "1021": 451, "1023": 507, "1024": 507, "1025": 451, "1026": [451, 507], "10262943822890519": [96, 508], "1027": 451, "1028": 507, "102877228833871": 508, "1029": [451, 507], "10295505": 526, "102e": 496, "103": [431, 454, 507], "103000133": 514, "1031": 451, "1032": [451, 507], "10325325433327517": 523, "1034": 526, "1035": 451, "10350020170706745": 469, "1036": 472, "1036827687975": 490, "1037e": 509, "1038": [451, 507], "1039": 507, "104": [477, 479, 507], "1040": 451, "10409": 479, "10409446": 479, "10416667": 493, "1043": 451, "104317": [103, 497, 505], "1044": 472, "1045": [451, 507], "1046": [409, 507], "1047": 507, "10470702368766069": 508, "10477": 526, "1048": 507, "105": [82, 507, 515], "1050": 507, "1051": [451, 507], "1052": 496, "1053": [451, 507], "1054": 451, "1055": 507, "1057": [451, 507], "1058": 507, "10592": 607, "105953": 526, "105e": 472, "106": [461, 507, 599], "1061": 507, "1061971e": 501, "106217": 83, "1062535e": 501, "1063": 507, "1064": [496, 507], "1065": [451, 507], "1066": 507, "1067": [451, 507], "1068": 507, "1069": 451, "107": [462, 503, 507], "1070": [451, 507, 526], "1072": 507, "1072542e": 501, "1073": 451, "1075": 507, "10752883769757363": 508, "1076": 451, "1078": 451, "107e": [472, 496], "108": [448, 507], "1080": 507, "108034597491956e": 506, "108043": 477, "1082": 451, "1083": [451, 507], "1084": 451, "1085": 451, "1085000": 477, "1087": 451, "1088": [451, 507], "1089": 451, "109": [431, 461, 463, 490, 503, 507, 599], "1090": 451, "1092": [451, 472], "1093": [451, 472, 507], "1094": 507, "1095": 507, "1098": [451, 507], "1099": 507, "1099306e": 501, "109e": 479, "10e": [176, 496, 501], "10k": 197, "10th": [418, 430], "11": [19, 20, 67, 87, 91, 94, 127, 128, 132, 133, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 350, 395, 398, 400, 408, 415, 419, 431, 432, 453, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 479, 481, 482, 483, 486, 488, 489, 490, 491, 493, 496, 497, 498, 499, 502, 504, 505, 507, 509, 511, 513, 523, 524, 526, 527, 549, 551, 605], "110": [461, 496, 507, 513, 599], "1100": [451, 468], "110000": [497, 502], "1102": 451, "1102e": 464, "1103": 451, "110380": [83, 407, 474, 477, 479, 512], "1104": [451, 507], "1105": [451, 507], "1107": [451, 507], "1108": [451, 507], "111": [379, 398, 451, 477, 496, 507], "1110": [451, 507], "1111": [138, 496, 526], "111140": [407, 474, 477, 479], "111159": [407, 474, 477, 479, 512], "1112": 507, "11132": 64, "1115": 451, "111507416": 491, "111630": [89, 491, 512], "111797": 496, "11184": [65, 274, 585], "112": [462, 468, 471, 507], "11208": 65, "11220184543": 498, "1123": 507, "1125": 507, "1127": 451, "1128": 507, "11291820875721864": 508, "113": [507, 526], "1131": [399, 475, 507], "1132": 507, "1133": 451, "1134": 451, "1135": 507, "1136": 451, "1137": 507, "1138": 507, "1139": 507, "114": [461, 507, 599], "1140": [311, 313, 507], "1143": 507, "114416978060042": 490, "1145": 507, "1146": 507, "1149": 507, "115": [67, 507], "1150": 451, "11517": 526, "1153": 507, "1154": 507, "11553325504064559": [96, 508], "1158": 507, "11587179071752986": 96, "116": [431, 463, 464, 507], "1160": 496, "11610": 526, "1162": [451, 507], "1162290849837497e": 488, "1164": 507, "1165": 507, "1166": [451, 507], "1167": [398, 405, 507], "1169": 451, "116e": 67, "117": [431, 507, 568], "1170": [451, 507], "1171": 507, "1172": 405, "1173775": 496, "1176": [451, 507], "1177": 507, "1178": 507, "117877e": 496, "1179": 451, "118": [477, 507], "1181": 507, "1182": 507, "1183": [451, 507], "118355": 496, "1184": 507, "1186386818689917": 507, "1187": 507, "119": [463, 472, 477, 507], "1190": [451, 507], "1193": 507, "1194": 507, "119432": 462, "1195": 451, "119e": 468, "11af4c": 431, "11e": 496, "12": [17, 38, 42, 67, 86, 87, 91, 113, 114, 127, 166, 169, 195, 196, 197, 199, 205, 208, 209, 223, 227, 233, 235, 240, 247, 258, 260, 270, 273, 274, 275, 286, 395, 397, 398, 399, 400, 402, 403, 408, 411, 414, 420, 431, 435, 436, 437, 449, 454, 461, 462, 463, 466, 468, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 485, 488, 489, 490, 493, 494, 496, 497, 498, 499, 503, 505, 506, 507, 509, 513, 523, 526, 538, 549, 552, 553, 557, 558, 559, 560, 562, 563, 564, 565, 568, 569, 570, 572, 576, 579, 580, 581, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 596, 597, 598, 608], "120": [53, 406, 470, 507, 513, 561], "1200": 507, "120000": 474, "1201": 507, "120154": 496, "1204": 451, "1205": 507, "1206": 507, "1207": 451, "1208": 507, "120e": [67, 526], "121": [67, 461, 479, 505, 507, 599, 608], "1210": [451, 507], "1211": [451, 496], "121241": 477, "1213": 507, "12148": 472, "1215": 451, "1216": [464, 507], "12186": 526, "1219": [496, 507], "122": [67, 431, 466, 505, 507, 608], "1220": [451, 507], "1221": 507, "1223": 507, "1224": 507, "1224489795918373": 483, "1225": 507, "1226": 451, "1227": 451, "12276676166802643": 508, "1228": 507, "1229": 507, "122e": 478, "123": [87, 91, 403, 472, 507], "1230": 507, "1231": 452, "1234": 88, "123456789": [200, 392, 607], "1235": 451, "1237": 399, "1238": 451, "123890826": 86, "123892513": 86, "1239": [396, 507], "123944": 83, "123e": [472, 490], "124": [403, 472, 496, 505, 507], "1240": 451, "1241": 507, "12423250e": 501, "1243": [507, 526], "1244": 507, "1244969200533408": 317, "1246": [451, 507], "12493874": 501, "124e": 67, "125": [67, 127, 468, 479, 503, 507, 513, 526, 604], "1250": 507, "1251": 507, "12518": 478, "1252": 507, "12525306": 494, "12546": 65, "1255": 507, "1256": 507, "1257": 507, "1258925411": 498, "126": [67, 466, 496, 499, 507], "1260": 507, "1264": 507, "1264500e": 501, "126585": 462, "1266": [451, 507], "1268": [451, 507], "12688": 83, "1269263e": 501, "12697": 478, "127": [472, 507], "1270": 507, "1273": 507, "1274": 507, "12751": 462, "1277": 397, "1278": 398, "12794487": 506, "128": [431, 491, 507, 528], "12809": [103, 497, 505], "1281": 451, "12816": 526, "12856": 513, "1287": [451, 507], "1288": 507, "1289": 451, "128e": 466, "129": [457, 507, 524], "1290": [451, 507], "1291": 451, "1292": 507, "1294": 451, "1297": 507, "1299": 496, "12nan5": 466, "12r_": 53, "12th": [416, 430], "13": [67, 102, 103, 106, 127, 206, 316, 395, 396, 400, 405, 410, 419, 436, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 534, 560, 561, 564, 605], "130": [507, 549], "1300": [451, 507], "1301v": 38, "1303": 507, "13030": 526, "1304": 507, "1305": 451, "13061": 506, "131": [466, 507], "1310": [507, 526], "1311": 507, "1312": [451, 507], "13133": 526, "1315": 507, "13152": 479, "1316": [451, 507], "1317": [452, 507], "1318": 451, "1319": [94, 451], "13197": 477, "132": [461, 472, 507, 599], "1320": 507, "1322": 507, "13226": 526, "1323e": 478, "132472": 479, "132e": 468, "133": 507, "1330": 507, "1331": 452, "1333": 507, "133389": 572, "1334": [452, 507], "1337": [452, 507], "1338": 507, "1339": [452, 507], "133e": 466, "134": [461, 469, 472, 479, 485, 507], "1340": 507, "1341": [452, 507], "1342": 507, "1342a": 156, "1343": 452, "1344": [496, 507], "1345": 452, "1346": 452, "1347": 452, "1348": 507, "13499879586502125": 480, "135": [38, 102, 466, 496, 499], "1350": 507, "13500212963": 496, "1351e": 496, "1354": [452, 507], "135498046875": 468, "1355": 507, "1357": 452, "1359316": 526, "135e": 127, "136": [496, 507], "1360": 452, "1361": 496, "1362": 452, "1364": 507, "1366": 507, "1367": 452, "1369": [399, 452], "137": [472, 480, 507], "1372": 452, "1373": 452, "1374": [452, 507], "1375": 507, "13752123871171e": 523, "1376": 452, "1376407467165896e": 488, "1377": [452, 507], "1378": 452, "1379190199428797": 317, "137990": 496, "138": [431, 466, 481, 507, 526], "1380": 507, "1381": 452, "1384": 507, "1386": [452, 507], "1387": 452, "1388": 507, "1389": 507, "138e": 479, "139": [468, 472, 507, 513], "1391": 507, "13911": 526, "1393": 507, "139388186431198e": 493, "13944023e": 498, "1395": [452, 507], "1396": [391, 469], "13960": 526, "1397": 452, "1397412321592923": 508, "13e": 497, "13nan6": 466, "13th": 430, "14": [28, 65, 67, 86, 248, 275, 392, 395, 400, 403, 408, 410, 411, 420, 450, 461, 462, 466, 468, 469, 472, 477, 483, 491, 493, 496, 497, 498, 499, 502, 504, 505, 506, 507, 510, 524, 526, 558, 562, 565, 586, 604], "140": [507, 514], "1400": 507, "1401": 452, "1402": 507, "1405": 507, "1406": [452, 507], "1407": 507, "1408": [452, 507, 526], "141": [315, 479, 496, 507], "1410": 507, "1411180": 477, "1412": 452, "14121": 479, "1412536400000000": 526, "1414": 507, "14149953611195087": [96, 508], "14150": 479, "1418": 507, "1419": [399, 453], "141945": 462, "142": [35, 67, 431, 466, 496, 507, 526], "1421": [452, 507], "14210": 466, "1423": 507, "1426": 452, "1427": 507, "142857142857132": 483, "1429": 507, "142e": 496, "143": 507, "1430": 507, "1431": 507, "1432": [452, 507], "143291": 475, "1433": 452, "1434": 507, "1435": [452, 507], "1437": 507, "1438": 179, "1438465e": 501, "1439110308062257": 508, "144": [466, 505, 507, 526], "1440": 507, "14419991": 97, "1442739329466746e": 506, "1443": 452, "144352265405659e": 507, "1444": 452, "1445": [405, 507], "14457": 526, "1446": 452, "1447": 452, "145": [461, 496, 497, 507, 510], "1451": 406, "1452": 507, "1453": 507, "1453105388336073": 479, "1454": 507, "1456": 452, "1456479e": 501, "146": 526, "14610": 607, "1462": 507, "1464": 507, "146472": 496, "1466": 507, "1467": 138, "1468": 507, "1469": 507, "147": [450, 461, 496, 503, 507, 566], "1470": [452, 507, 526], "1474": [452, 507], "1475": 452, "1476": [452, 507], "14773": 513, "1479": 507, "147e": 496, "148": [472, 507], "1482": 496, "1484": 507, "1485314": 97, "1486": 507, "1486415e": 501, "1488": 507, "1489": [452, 479, 507], "149": [468, 502, 505], "1490": 507, "1492": [452, 507], "1493": 507, "1494": 479, "1495": 452, "1497": 507, "1499472780781963": 317, "149e": 496, "14e": [474, 495], "14msts37sst": [481, 482, 512], "14nan3": 466, "14nan5": 466, "14th": [415, 418, 430], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 105, 126, 153, 154, 155, 156, 157, 158, 163, 164, 165, 167, 206, 221, 381, 382, 386, 400, 408, 431, 435, 440, 445, 448, 449, 450, 452, 461, 462, 468, 472, 475, 477, 478, 479, 481, 482, 483, 486, 491, 493, 494, 496, 497, 498, 499, 502, 503, 505, 506, 507, 510, 513, 526, 549, 558, 573, 583, 608], "150": [133, 431, 461, 466, 468, 476, 481, 482, 503, 507, 526], "1500": 507, "1502": 507, "1504": 507, "1505": 452, "15076259": 97, "1508": 507, "150e": 490, "151": [431, 505, 507], "1510": 140, "1510240e": 501, "1511": 507, "1513": 507, "1514": 490, "15140": 472, "1515": [452, 507], "15154854": 97, "1516": 507, "1517": 452, "151955134028793": 480, "152": [472, 479], "1521": [479, 507], "1522": 507, "1523": [481, 507], "1524": 507, "15246": 481, "152477": 513, "1526": 507, "1527": 452, "1529": 507, "153": [496, 507], "1530": [497, 507], "15319": 481, "1532": 507, "1532e": 490, "1535": 507, "153600": 497, "1538": 274, "154": [431, 462, 496, 507], "1541": 507, "1542": 507, "1543": 452, "154e": 479, "155": [431, 507], "1550": 507, "15518": 526, "1552": [475, 507], "1553": [496, 526], "1554": [311, 313, 452, 507], "1554106e": 501, "1556": [452, 496, 526], "1556008e": 501, "1557": 507, "1558": [452, 507], "156": [431, 468, 469, 472, 479, 498, 505, 507], "1560": 507, "1562": 452, "15621": 526, "1564": 452, "156525": 496, "1567629e": 501, "1568": [452, 507], "157": [431, 507, 526], "1572": 507, "1573": [452, 507], "1576": 452, "1577": 507, "1579": 507, "158": [462, 469, 477], "1580": 507, "1581": 507, "1582": [452, 507], "1583": 507, "1584": 507, "15848931924": 498, "1586": 94, "1587": 507, "15899": 472, "159": 507, "1590": 507, "1591": 507, "1592": 507, "1593": 507, "1594": 452, "1596": 507, "1597317": 97, "1599": 507, "159t": 52, "15e": 475, "15h14m00": 496, "15nan8": 466, "16": [16, 24, 53, 67, 94, 110, 111, 195, 395, 399, 408, 411, 412, 420, 436, 451, 456, 458, 459, 461, 462, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 551, 572, 575, 596, 604, 605], "160": [31, 127, 431, 440, 483, 490, 505, 507], "1600": [482, 507], "1600e": 463, "1602": 507, "1604": 507, "1605": 452, "16056": 472, "1606": [452, 507], "1607": 495, "1608": 507, "1609": 507, "160e": 67, "161": [399, 468, 479, 496, 507], "1610e": [463, 496], "1611": 507, "1612": 507, "161250": 486, "161298": 571, "1613279491744304": 508, "1616": 452, "1617": 507, "1618850e": 501, "1619e": 102, "162": [67, 507], "1620": 507, "16227766": 503, "1622776601683795": [502, 503, 523], "1623": 507, "16240": 524, "1625e": 474, "16287": 526, "1629219e": 501, "163": [507, 604], "1630": [452, 526], "16303": 479, "16303044": 479, "1631": 507, "163265306122433": 483, "1634": [452, 507], "1636": 507, "164": [461, 496, 507], "1642": [462, 507], "1643": 507, "1645": 507, "1647": 507, "1648": 507, "165": [505, 507], "1650": [507, 526], "16506": 462, "16511": 479, "16511148": 479, "1654": 507, "1658": 452, "165e": 472, "166": [431, 479, 496, 507], "1660": 452, "166015625": 464, "1661919226690951e": 493, "1662": 507, "1663": 507, "1664": 507, "1665": 507, "1665478": 97, "166871893872855e": 493, "167": [431, 479, 486, 507], "1670": 507, "1671": 507, "167219": 496, "1675": [452, 507], "1677": 507, "168": [496, 497, 507, 526], "1680": 507, "1681": 452, "1683": 507, "1685": 452, "1686": 496, "1687": 86, "168702": 462, "1688": 507, "169": [479, 507], "1691": [462, 507], "1694": 507, "169454": 486, "1695": 452, "1696": 452, "1697": 452, "1698": 468, "169871": 486, "16th": 430, "17": [20, 21, 40, 67, 86, 402, 405, 408, 440, 457, 461, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 577, 578, 582, 605], "170": [464, 507], "1701": 507, "17016467e": 499, "1702": 452, "17020": 472, "1705": 507, "1707": 507, "1708": 507, "1709": 507, "171": 490, "1710": [453, 507], "1711": [452, 507], "1713": 464, "1715": 405, "1717": 526, "171749": 526, "1718": 507, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 285, "172": 507, "1721": 507, "17229679": 97, "1727": 507, "173": [496, 507], "1731": [452, 505], "1732": [496, 507], "17320": 496, "1734": 507, "1735": 507, "1736": [472, 507], "1737799900000000": 526, "1739": 507, "174": [468, 507], "1740": 507, "1742": [67, 507], "17445": 526, "1745": 507, "1746": [452, 507, 526], "1747": 507, "1748": [452, 505], "1749": 507, "175": [490, 507], "1750": [452, 507], "1751": [452, 507], "1753": [507, 526], "1755": 452, "1756": 469, "1758": 507, "1759": 452, "175e": 496, "176": [431, 491, 496, 507], "1760": [452, 507], "1761": 452, "1762": [507, 528], "1763": [453, 496], "1764": [452, 479], "1765": 507, "1766": [453, 507], "1767": 507, "1768896e": 501, "177": [431, 507, 513, 514], "1770": 507, "1772": 507, "1773": 507, "1777": 507, "17776": 462, "1778": 507, "1778279410": 498, "1779": 507, "177e": 496, "178": [451, 461, 507, 566], "1781": 507, "1782": 507, "178442": 67, "1785": [452, 462, 507], "179": 507, "1790": 507, "1791": 452, "1794": 507, "179475": 250, "1795": 507, "1799": 452, "17a": [60, 496], "17e": 505, "17g": 50, "17th": 446, "18": [11, 87, 91, 206, 395, 410, 416, 437, 443, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 568], "180": [405, 424, 426, 431, 496, 503, 507, 608], "1800": [452, 482, 503, 507, 512], "180000": [481, 482, 512], "1801": 507, "1804": 496, "180458": 477, "18046952655570045": 317, "1805": [405, 507], "1806": 490, "1807": 453, "1808": [452, 496, 507, 526], "1809": 507, "181": [472, 507], "1811": [471, 507], "1812": [452, 507], "1813": 496, "1817": 507, "1818": 452, "1821": 452, "1822": [452, 507], "1823": 507, "1825": [496, 507], "18257": 472, "1826": 507, "1828": 507, "1829": 507, "183": [468, 507], "1830": 507, "1830e": 468, "1831": 507, "183139597": 86, "1834": [464, 507], "1835": [94, 507], "1836": 453, "1836544903987521": 508, "18367346938775508": 483, "1837": 453, "1838": 507, "18385658": 479, "18386": 479, "18392464": 540, "184": [86, 94, 445, 449, 472, 477, 481, 489, 493, 504, 505], "1840": 507, "18400002": 489, "1841": [400, 507], "1842": 507, "1843": 507, "1844": 507, "1845": [453, 507], "1846": 453, "18465": 526, "1847": 507, "1849": 453, "184989894219835": 494, "185": [504, 507], "1852": 507, "1854": [453, 496, 507], "1855": [453, 507], "1857": 453, "1858": 507, "1859": [453, 507], "186": [444, 461, 479, 496, 507, 566], "1860": 507, "1861": 453, "1862": 453, "1863": 507, "186484131475074": 348, "1866": 502, "186643": 526, "1867": 507, "1869": 507, "187": [437, 444, 479, 507], "1871": 453, "1872": 507, "1876": 507, "1877": 401, "1879": 507, "188": [444, 462, 496], "1881": 507, "1883": 453, "1884": 453, "18842984749180410": 479, "1885": 507, "1887": 507, "1888": 453, "188e": 466, "189": [468, 501, 507], "1890": [453, 507], "1891": [453, 507], "18921591": 501, "1893": [453, 507], "1893e": [463, 496], "1894": 453, "1895": [453, 507], "1896e": 463, "1897": 507, "1897e": 470, "1898": 453, "18988": 526, "1899070e": 501, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 206, 395, 407, 409, 411, 431, 439, 440, 442, 454, 461, 467, 469, 472, 479, 480, 485, 490, 491, 492, 493, 494, 496, 497, 498, 503, 505, 507, 571, 581, 586], "190": [490, 496], "1902": [65, 275, 586], "1903": [453, 507], "1904": 453, "1905": [478, 507], "1907": 507, "1908": 453, "1909": 453, "190e": 468, "191": [444, 507], "1910": 182, "1912": [453, 507], "1914": 507, "1915": 507, "1917": 526, "1918": [453, 507], "1919": 453, "192": 507, "1920": [507, 526], "1921": 453, "19214093": 97, "1922": 453, "1926": 453, "1926520e": 501, "1927": [453, 507], "1928": 496, "1929": [453, 507], "193": [472, 507], "1930": [453, 507], "1931": 507, "1932": 507, "1933": [453, 507], "1934": 453, "1935": 507, "19354": 479, "1936925": 97, "1937": [453, 496, 507], "193e": 469, "194": [444, 472, 507], "1940": 507, "1943": [311, 313, 507], "1943186": 97, "1944": 507, "1946": 507, "1947565": 97, "1948": 507, "1949": 453, "195": [244, 468], "1950": 507, "1950rspsa": 52, "1951": 432, "1952": 507, "1953": [420, 507], "1953830": 97, "1955810e": 501, "1957": 507, "1958e": 499, "196": [67, 462, 486, 505, 507], "1961": [138, 147], "1962": 432, "1963": [496, 507], "1964": 507, "19644": 513, "1965": [21, 507], "1966": [432, 507], "1969": 432, "196991563774588": 286, "197": [67, 479, 507, 513], "1970": 507, "1971": 402, "19736017641361556": 480, "1975": 432, "1976572e": 501, "1978": 496, "1979": [299, 305, 432, 507, 602], "1979892": 479, "198": [461, 507, 599], "1980": [496, 507], "1982": 37, "1983": 602, "1986": 403, "1986027": 526, "1987": [479, 507], "19879005": 179, "1988": [139, 306, 432], "1989": 432, "199": [479, 505], "1990": [36, 37, 432], "1991": [22, 432], "1992": 507, "1993": 507, "19932878": 501, "1994": [432, 507, 602], "1994a": [52, 53], "1995": [17, 297, 431, 432, 507], "1996": [27, 472, 494, 507, 602], "1997": [25, 507, 523], "1998": [28, 87, 91, 432, 507, 602], "1999": [53, 200, 392, 607], "19991": 523, "199999809265137": 496, "19999999999999998": 471, "1999apj": 53, "19e": 502, "19th": 430, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 110, 111, 129, 154, 155, 164, 178, 195, 197, 343, 384, 397, 401, 402, 404, 405, 406, 407, 410, 411, 412, 424, 434, 436, 437, 438, 439, 443, 445, 448, 452, 454, 455, 458, 461, 462, 464, 466, 467, 468, 470, 472, 477, 484, 485, 490, 493, 497, 499, 502, 504, 506, 507, 508, 509, 512, 513, 523, 536, 538, 540, 545, 553, 602], "1dc": [82, 83, 89, 103, 106, 110, 111, 116, 119, 120, 124, 144, 145, 151, 155, 156, 157, 166, 379, 384, 386, 399, 401, 407, 411, 433, 462, 471, 474, 477, 479, 486, 490, 491, 497, 498, 501, 505, 538], "1deg": 207, "1e": [19, 20, 26, 86, 100, 132, 133, 136, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 221, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 248, 250, 251, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 286, 299, 305, 350, 366, 368, 391, 402, 463, 466, 468, 470, 472, 475, 477, 479, 481, 482, 486, 488, 489, 490, 491, 496, 499, 506, 507, 509, 513, 514, 534, 538, 542, 568, 569, 570, 572, 575, 576, 580, 581, 583, 584, 585, 586], "1e0": 532, "1e10": [51, 156], "1e12": [532, 542], "1e2": [466, 532, 534], "1e3": [513, 542], "1e30": 578, "1e4": [499, 513, 514], "1e40": 533, "1e5": [470, 513, 534, 552, 553], "1e51": 52, "1e6": [45, 513, 530, 587], "1e7": [129, 587], "1f": 469, "1fhl": [437, 450], "1fhl_name": 71, "1h": 166, "1k": [103, 110], "1kpc": 534, "1lhaaso": [57, 70, 458, 496], "1lhaaso_catalog": 57, "1omzjlyz": 493, "1rc1": 421, "1tev": [52, 53, 133, 482], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 101, 102, 103, 105, 106, 110, 111, 115, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 143, 147, 148, 149, 153, 154, 155, 156, 158, 164, 166, 169, 176, 179, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 209, 214, 217, 218, 220, 221, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 280, 281, 285, 286, 292, 294, 295, 296, 297, 298, 299, 304, 305, 311, 313, 316, 336, 338, 376, 379, 384, 386, 388, 391, 392, 395, 396, 400, 402, 403, 405, 406, 407, 408, 411, 414, 415, 416, 417, 418, 421, 428, 429, 431, 432, 433, 434, 435, 436, 443, 448, 449, 450, 451, 452, 453, 459, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 511, 512, 513, 514, 515, 523, 524, 526, 534, 537, 538, 540, 545, 546, 547, 549, 550, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 603, 604, 605, 606], "20": [16, 38, 83, 87, 89, 91, 103, 105, 106, 110, 111, 126, 157, 158, 163, 165, 167, 176, 196, 197, 199, 205, 208, 209, 214, 297, 316, 392, 395, 396, 397, 399, 404, 406, 409, 411, 416, 429, 454, 461, 462, 463, 468, 469, 470, 472, 474, 475, 476, 477, 479, 480, 481, 488, 489, 490, 491, 493, 494, 495, 496, 497, 499, 502, 503, 505, 506, 507, 509, 510, 511, 512, 523, 524, 526, 528, 547, 549, 550, 551, 558, 559, 560, 563, 564, 570, 574, 577, 579, 582, 587, 588, 604], "200": [52, 87, 91, 136, 207, 415, 444, 468, 469, 472, 479, 483, 486, 496, 503, 506, 526, 604], "2000": [88, 103, 106, 110, 111, 129, 236, 241, 243, 245, 261, 268, 432, 481, 482, 483, 502, 513, 526, 602], "2000000": 477, "20000000000000004": 471, "20009124": 501, "2000apj": 286, "2000e": 506, "2001": [94, 432, 472, 602], "200162": 475, "20016392130233e": 493, "2002": [87, 91, 303, 494], "2003": [304, 494], "2004": [24, 39, 40, 86, 94, 420, 494, 507, 515], "2004aph": [83, 88], "2005": [65, 602], "200503": 462, "2005a": 496, "2006": [30, 31, 32, 33, 35, 120, 406, 472, 480, 489, 493], "200638": 526, "2006a": 286, "2006apj": 33, "2006ara": 50, "2007": [409, 602], "20072608": 501, "2008": [38, 86, 231, 282, 463, 507, 513, 528, 568], "2008aj": 38, "2009": [136, 307, 433, 472, 602], "20097159": 501, "2009851": 501, "20099855": 501, "201": [52, 503, 507], "2010": [129, 156, 231, 250, 312, 392, 459, 507, 568, 602, 607], "2010a": [250, 286], "2010mnra": 156, "2011": [17, 19, 20, 21, 22, 24, 25, 26, 27, 134, 231, 311, 313, 463, 528, 568], "2012": [91, 433, 602], "2013": [102, 140, 411, 417, 422, 431, 494], "20136": [82, 317, 515], "20137": [317, 515], "2013aph": 285, "2013apj": 60, "2014": [138, 147, 430, 507, 528], "2015": [52, 86, 405, 408, 430, 513], "20151": 317, "2015apj": 61, "2015jheap": 286, "2016": [26, 405, 408, 430, 433, 494, 502, 507, 512], "2016apj": 58, "2017": [59, 231, 396, 398, 408, 411, 428, 430, 433, 479, 512, 568], "2017apj": 62, "2017icrc": 512, "2018": [52, 396, 397, 398, 399, 400, 401, 402, 406, 408, 410, 411, 430, 457, 512, 515, 602], "2019": [398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 430, 452, 453, 480, 602], "202": [461, 479, 507, 566], "2020": [206, 400, 411, 412, 413, 414, 415, 430, 480, 481, 490, 503, 591, 592, 593], "2021": [63, 89, 231, 413, 415, 430, 457, 506, 507, 512, 568], "2021345e": 501, "2022": [392, 416, 417, 420, 430, 433, 507, 514], "2023": [57, 392, 403, 418, 419, 420, 430, 433, 507], "2024": [420, 430, 507, 512], "2024e": 524, "2025": [105, 126, 420, 429, 469, 474, 475, 477, 506, 523, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "2026": [403, 433, 507], "2028": 433, "2029": 507, "2030": [403, 433], "2031": [433, 507], "20326": [316, 464], "20327": [316, 464], "2033": 433, "20339": 316, "2034": 433, "20343": 316, "20344": 316, "20345": 316, "20346": 316, "20349": 464, "2035": [125, 127, 433], "20350": 464, "2036": [125, 127, 507], "2037": 433, "20372": 512, "2038": 433, "2039": 433, "20396": 464, "20397": 464, "2040": 507, "2040469e": 501, "204081632653062": 483, "2041222e": 501, "20421": 464, "20422": 464, "2043": 507, "2044": 507, "2045": 403, "2046": 433, "2049": [433, 496, 526], "205": [444, 479, 503], "2050": [433, 507], "20508075688775": 496, "2051": 433, "20517": 464, "20518": 464, "20519": 464, "205192": 496, "20521": 464, "2053": 507, "2053315944536949e": 512, "205357": 496, "2054": 433, "20559": 526, "2058": 507, "2058705e": 501, "2059": 507, "206": 496, "2061": 496, "2062580e": 501, "2064": [433, 507], "2064335": 97, "2065": 433, "2066": 433, "2068": 507, "2068682e": 501, "2069": [433, 507], "207": [479, 483, 505], "2070": 507, "2071": [403, 433], "2075": [419, 507], "207520865": 489, "207521165": 493, "207521465": 489, "207521627": 493, "2076": 433, "2077": [433, 507], "2079": 507, "2079930e": 501, "207e": 472, "208": [60, 507], "2080": 507, "2082": 507, "2085": [433, 507], "2086": 507, "2087": 507, "2089": [405, 435, 507], "20898": 464, "20899": 464, "209": 479, "20900": 464, "2091": 507, "2093": 433, "2095": 479, "2097": [433, 507], "2097e": 468, "2098": [433, 507], "20deg": [481, 482], "20e": 501, "20t15": [469, 474, 475, 477, 523, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "20t16": 506, "20th": 417, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 129, 151, 274, 394, 395, 440, 446, 455, 462, 463, 472, 479, 489, 490, 493, 495, 496, 501, 503, 507, 526, 553, 574, 576, 604], "210": [444, 461, 496, 507, 588], "2100": 507, "2101": 507, "2103": [496, 507], "2104": 434, "2104353e": 501, "2106": 434, "2108": 434, "211": [496, 497], "2111": 434, "2112": [434, 507, 524], "21134890398": 498, "2114": [434, 507], "2115": [434, 507], "211770556360534": 491, "2118": [434, 507], "2119": 434, "211e": 496, "212": [67, 444, 459, 461, 468, 496, 507, 588], "2121": 434, "2121164e": 501, "2122": 507, "2123": 434, "21236e": 462, "2124": 434, "2125": 507, "2126": [434, 462, 471, 474, 477, 479, 486, 490, 507, 512], "2127": 507, "2128": 434, "2129": [405, 435, 507], "213": [461, 470, 523, 527], "2130": [434, 507], "2131": [434, 496], "2132": 434, "21325": 513, "2133": [434, 507], "2134": 507, "2135": 507, "2136": [404, 436], "2139": 434, "214": [461, 466, 472, 566], "2140": [434, 507], "2141": 434, "2142": 434, "2144": 507, "2145": 434, "2146": 434, "21464892": 526, "214e": 468, "215": [67, 444, 458, 496, 507], "21500000000003": 561, "2151": [434, 507], "2152": 434, "21525839967018867": 480, "2153": [434, 496], "2154": [434, 496, 507], "2155": [438, 463, 489, 490, 493, 494, 496, 508, 526, 568], "215548": 591, "2156": 507, "2157": 434, "2159e": 102, "215e": 496, "216": [244, 468, 503, 505, 598], "2160": 434, "2162670e": 501, "2163": 434, "2164": 507, "2164425e": 501, "2166": 434, "2167": 507, "2169": [434, 507], "217": [461, 468, 496, 507, 588], "2171": 434, "21731921e": 503, "21733761e": 503, "21735587e": 503, "2174": 507, "2176": 507, "218": [61, 507], "2182": 507, "2189": 507, "2190": 409, "2192": [435, 507], "2194": 507, "2196": 507, "2197": 479, "2199": [490, 507], "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 103, 106, 110, 111, 136, 171, 176, 179, 194, 195, 204, 207, 395, 430, 443, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 523, 524, 526, 537, 544, 547, 549, 550, 553, 569, 584, 587], "220": [496, 505, 507, 604, 605], "2200": [435, 507], "2201": [65, 274, 496, 526, 585], "2202e": 526, "2204": 435, "2206": 435, "2207": 507, "2208": 507, "220e": 496, "221": [405, 444], "2214": 507, "22149": 472, "2215": 507, "2217": 435, "2217412e": 501, "2218": [408, 436], "2219": [407, 436], "222": [58, 477, 496, 505], "2221": 496, "22245374e": 127, "2225": 507, "2227134679628": 490, "22271346796282": 490, "222713467962826": 490, "2229": [404, 435], "223": [505, 507], "2230": [435, 507], "2231": [496, 507], "2233": 507, "2235": 435, "2237": [435, 526], "2238": 435, "2239": [435, 490, 507], "224": 507, "2240": [435, 507], "2242": 507, "2243": 435, "2244": 435, "224436": 526, "2247": 507, "2249": 507, "225": [96, 316, 317, 415, 444, 461, 475, 496, 566], "2250": [435, 507], "22500": 475, "2254": 435, "2255": [409, 508], "225575051666": 496, "2255890": [489, 493, 508], "2256": 507, "2257": 435, "2259": 435, "226": [475, 479, 513], "226052": 562, "22608": 497, "2261": 507, "2262": [435, 507], "22635141851205703": 499, "2264": [403, 435], "22646134620907912": 499, "2264827221149211": 499, "22648882813333465": 499, "2265": 507, "22651631005759018": 499, "2266": 507, "22662623775461227": 499, "2267": 507, "227": [461, 588], "2270": 408, "2272": 435, "2273": 507, "2274": [410, 436, 462], "2275": 507, "2276": 435, "2277": 435, "2278": 435, "22788666362099286": 499, "2279": [408, 436], "227e": 496, "228": [299, 305, 399, 405, 461, 469, 475, 496, 502, 515, 566, 588], "2285": 507, "2287": [435, 507], "2289": [435, 507], "229": [67, 461, 466, 467, 496, 588], "2290": 410, "2291": 507, "2292": [436, 507], "2294": 435, "2296": 435, "2297": 435, "22974080e": 513, "2298": [435, 507], "22e": 502, "22nd": 430, "23": [77, 94, 179, 391, 395, 417, 430, 454, 464, 468, 470, 472, 478, 490, 493, 496, 499, 503, 505, 507, 508, 517, 526, 549, 580, 585], "230": [444, 461, 472, 588], "2300": [435, 507], "2301": 507, "2304": [409, 507], "2305": [435, 507], "230542e": 496, "2306": 507, "2307": [64, 65, 507], "2308": 436, "2309": 507, "231": [444, 507], "2310": [435, 507], "2311": 507, "2313": [436, 507], "2314": 436, "2315": 507, "2317": 507, "232": 62, "2320": [436, 496, 497], "2321": 436, "2323": 436, "2326": 436, "2327": [496, 505], "23273": 513, "2329": 507, "232e": 490, "233": 469, "2330": 436, "23306": 472, "2332": 505, "2334": [436, 507], "2335": [436, 507], "2336": 507, "2338": 436, "2339": [464, 496, 507, 526], "234": [444, 491, 507], "2340": 507, "234132519034915": 503, "23413252": 503, "2342": [436, 507], "2343": 436, "234359264373779": 502, "2343e": 505, "2344": [436, 507], "2345": [436, 507], "2346": [436, 507], "2347": 436, "235": [444, 507], "2350": 437, "2351": [436, 507], "23523": [149, 176, 214, 428, 468, 469, 478, 488, 497, 499, 502, 511, 515, 523, 524, 537, 540, 603], "23526": [149, 214, 468, 469, 478, 488, 497, 499, 502, 507, 511, 523, 524, 603], "2353": 507, "2354": 436, "23559": [468, 469, 488, 497, 502, 507, 523, 524, 547, 549, 550, 603], "2356": [436, 507], "2357": [505, 507], "2358": 436, "2359": [436, 507], "23592": [468, 469, 488, 497, 502, 507, 523, 524, 547, 549, 550, 603], "236": [444, 496, 507], "2360": 436, "2361": 507, "2362506e": 501, "23628": 513, "2365": 436, "2366": 436, "2367": [436, 507], "2368": 436, "237": [462, 507], "2373": 507, "23734": 526, "2375": 436, "2377": 436, "2378": 436, "2379": 436, "238": 507, "2380": 507, "2381": 436, "238298": 462, "2384": 462, "2385": 436, "2387": 507, "2389": 507, "239": [67, 479], "23905561": 501, "2391": 507, "2392": 507, "239439": 526, "239557414": 83, "239557417": 86, "239559565": 83, "2399": 496, "239e": 496, "23a": 61, "24": [25, 27, 52, 53, 86, 87, 91, 94, 394, 395, 408, 412, 447, 452, 462, 469, 472, 477, 490, 493, 496, 497, 503, 505, 507, 512, 513, 523, 549, 568, 575, 584, 585, 586, 590, 593, 594, 596, 597], "240": [103, 106, 110, 111, 124, 496, 497, 498, 507, 538], "2400": 436, "2401": [436, 507], "2404": 436, "2405": 437, "240e": 468, "241": [496, 507], "2411": 507, "2412": [436, 507], "2413": 507, "2414": [496, 507], "2419": 462, "2420": 507, "2422": 507, "2423920669016": 490, "2424": 507, "2427": 507, "2428255": 498, "242835": 67, "243": [468, 498], "2430": 507, "2431": [496, 507], "2432": 472, "2433": 437, "2435": 437, "243745080459877e": 493, "244": [67, 444, 461, 468, 588], "2440": 496, "2441": 437, "244140625": 505, "2443672e": 501, "2444": 437, "2446": [437, 505], "2447": 507, "2448": 437, "244897959183646": 483, "2449": [437, 507], "245": 444, "2450": [437, 505], "245152": 479, "2452": 507, "2454": [437, 507], "2455": [437, 507], "24579": 498, "2459": [437, 507], "246": [444, 498], "2461": [437, 507], "24611324074": 496, "2463": [411, 437, 507], "2464": 437, "2465": 507, "2465055e": 501, "2467": 507, "2468": [437, 507], "24685677e": 501, "247": [67, 444, 507], "2470": 437, "2471938975366008": 316, "2472": 437, "2474": 507, "2475": 437, "2476": 437, "2477": 437, "2478": 437, "2479": [437, 524], "248": 444, "2481": 437, "248122": 496, "2483": [437, 507], "2485": 523, "2486": [437, 507], "249": 444, "2490": 437, "2491": 437, "2492": [437, 507], "2493": 437, "2496": [437, 507], "24968": 462, "2497": [437, 507], "2498": 437, "2499": 437, "249965667724609": 502, "24e": [496, 505], "25": [33, 52, 87, 91, 102, 144, 155, 166, 179, 299, 305, 395, 408, 415, 430, 451, 458, 459, 461, 462, 463, 467, 468, 469, 472, 479, 490, 491, 493, 496, 501, 503, 505, 507, 526, 559, 564, 591, 592, 595, 598], "250": [503, 602], "2501": [437, 507], "250185": 502, "2502": [437, 479, 507], "2505": 437, "2505121": 97, "2505703": 491, "2507": 507, "2509": 496, "251": [472, 477], "2510": [437, 507], "2511": 507, "251185": 526, "2511884200000000": 526, "2511886431": 498, "2515": 507, "25162e": 462, "2518": [496, 507], "2519": 507, "251932": 496, "252": [444, 479, 496], "2520": 437, "2521": 437, "2523": [437, 507], "2525": 437, "2527": 507, "2528": 437, "2529": 507, "253": [471, 505, 507], "2531": 507, "2534": 507, "2535": 437, "2536": [437, 505, 507], "2537": 505, "2538": [437, 507], "254": 444, "2540": 437, "2542": 507, "2543": 507, "2546": [437, 507], "2547": 507, "25496": 526, "2551": 437, "2552": [437, 496], "2553": 437, "2555": 412, "2556": 507, "2557": 437, "255750516626": 496, "2558": 437, "2559": 437, "256": [67, 447], "2560538e": 501, "2561": 437, "2562": 437, "2563": [437, 507], "2564": 437, "2565": 507, "2567": [437, 507], "2568710837134529": 480, "257": 471, "2570": 507, "257122": 506, "2574": [437, 507], "25743552e": 499, "2575": 507, "25763": 472, "257642": 496, "2577": 507, "2579": 507, "2579999": 512, "258": [471, 565], "2580": [437, 507], "25823909e": 498, "2585": 437, "2586": 507, "2587": 437, "2588": 507, "2589254117941673": 523, "259": [471, 507, 526], "2591e": [463, 496], "2592": 507, "2593": 507, "2594": 437, "2595": 437, "2595e": 477, "2597": 507, "259e": 472, "25e": 505, "25t_": 53, "25th": 417, "26": [19, 87, 91, 395, 430, 458, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 528, 578, 597], "260": [447, 507, 526], "2602": 507, "2603": 507, "2604": 437, "2608": 507, "2609": [505, 507], "261": [447, 526], "2615": 507, "2616": 437, "2617": 507, "26173": 472, "2619": 437, "262": [447, 472, 505, 507, 526], "2620": 437, "26255414786544": 523, "26258181596485647": 499, "2626": 507, "2627": 437, "262728": 512, "26272868097919794": 508, "2628525e": 501, "263": [472, 505], "2630": 507, "2633e": 478, "2635": 437, "2635108e": 501, "2636": 507, "2637": 437, "2639554729438709": 508, "264": [447, 479], "2641": 507, "2643": 507, "2644": 507, "2645": 437, "2647": 507, "26475": 475, "2648150": 97, "2649": 507, "2649e": 499, "265": [32, 405, 462, 472, 479, 505, 507, 526], "2650": 507, "2651": [437, 507], "265306122448973": 483, "2654": 437, "2655": 507, "2656": 507, "266": [405, 461, 471, 472, 479, 481, 486, 503, 505, 507, 510, 523, 526], "2660": 437, "266192": 462, "2665": 507, "26665050077722524": 508, "2667": 438, "267": [67, 471, 472, 479, 483, 505, 507, 512], "2672": 438, "2673": 438, "26739753": 97, "2674": 438, "2676": 507, "2678": 507, "268": [417, 472, 479, 496, 505, 507, 526], "2681": 438, "2682": 507, "2683": 507, "2684": 438, "2685": 438, "268663733018811": 508, "2687": 438, "2688": 507, "26883694": 526, "26887783978974283": 508, "2689": [479, 507], "269": 526, "2692": 438, "2693": 507, "269385": 496, "2695": 507, "269548": 561, "269627": 512, "2697": 438, "2699": 507, "2699878e": 501, "26a": [50, 52, 53, 250, 286, 496], "26e": [496, 505], "26th": [413, 430], "27": [395, 397, 458, 461, 468, 472, 479, 493, 497, 507, 526, 604], "270": [464, 472, 496, 505, 507, 526], "2703": 438, "2705": 438, "27057337686547633": 508, "2707": 438, "2708": [250, 507], "2709": 438, "27093776e": 501, "270d": 608, "271": [468, 471, 472, 477, 507, 526], "2711": 438, "2712": 438, "2713": 438, "2715": 438, "2717": 507, "271777777777796": 464, "27177778": 94, "2718": 438, "2719": 438, "272": [471, 472, 496, 505, 507], "2720": [412, 439, 507], "27209": 526, "2721": 507, "2723": 438, "2724": 507, "2725": 438, "2726": [438, 507], "2726e": 526, "2727": 438, "2727693": 512, "2727e": 468, "2728": [438, 507], "2729": 438, "273": [83, 447, 466, 472, 526], "2730": 438, "2731": 438, "2732": 507, "2733": 438, "2734": [127, 507], "2735": 438, "2737": 438, "2738": 438, "2739": 438, "274": 503, "2740": 507, "27409496735322464": 508, "2741": 438, "2742": 438, "2743": 438, "2746": 438, "2747": 438, "27473": 479, "275": [461, 467, 471, 496, 507, 597], "2750": 438, "2751": [438, 507], "2752": [438, 507], "2753": 438, "2755": 438, "2756": 438, "2759": 439, "276": 447, "2760": 507, "2761": 439, "2762": 439, "2764": [439, 507], "2765": 439, "2766": 507, "2767": [439, 507], "2768": 439, "277": [471, 507], "2770": 507, "2771": 439, "2772": [439, 507], "27727": 505, "2775": [439, 507], "277522361013748": 480, "2776": 439, "2777": 439, "2777074437073429": 508, "2778": 439, "2779": 439, "278": [447, 461, 471, 486, 496, 505, 588], "2781": 439, "2782": 439, "2783": 439, "2784": 439, "2785": 439, "2785e": 468, "2786": 507, "2787": 439, "2788": 439, "2789": [439, 507], "278e": 472, "279": [447, 461, 507, 588], "2790": 439, "2791": 439, "2792": 439, "2793": [439, 507], "2794": 439, "2795": 507, "2796": 439, "2797": 439, "2798": 439, "2799": 439, "27_theorem": [311, 313], "27e": 496, "27t20": 89, "28": [21, 24, 67, 94, 400, 430, 461, 466, 468, 470, 471, 472, 479, 481, 483, 485, 486, 492, 493, 495, 496, 499, 502, 503, 505, 507, 510, 512, 523, 526], "280": [67, 447, 468, 471, 503], "2800": [481, 505, 507, 526], "2801": 439, "2802": 439, "2803": [439, 507], "2804": 439, "2805": 439, "2807": 507, "2808": 439, "2809": 439, "281": [471, 496], "2810": 439, "2811": 439, "28118133544922": 496, "2812": 439, "28120079": 496, "2815": [439, 507], "2816": [439, 505, 507], "2817": 439, "2818": 439, "2818047723094509": 508, "28183829312": 498, "2820": 439, "2822": [439, 505], "2823": 439, "2825456e": 501, "2827": 439, "28275990e": 498, "2827988e": 501, "2828": 439, "2829": 439, "282952714500289e": 493, "282e": 496, "283": [447, 471], "2831": 507, "2832": 439, "283218": 462, "2834": 507, "283487": 496, "2837": 439, "28382603": 501, "2838398": 512, "28385358839966657": 508, "2839": 439, "284": [471, 496, 607], "2840": 507, "2841": [439, 507], "2842": [439, 507], "28429": 479, "2843": 507, "2845": 439, "2846": [439, 479], "285": [447, 471, 507], "2850": 507, "2852": [505, 507], "2853": 507, "2857": 507, "285714285714286": 483, "2859229": 498, "285f": [83, 88], "286": [447, 471, 498], "2861432787940619": 508, "2863": 507, "2866": 507, "2869": 507, "286e": [472, 496], "287": [52, 53, 507], "2871": 507, "2872": 440, "28720322": 97, "2873": 507, "2874": [440, 526], "28755283551095173": 508, "2876": 507, "2878662980210884": 317, "288": [127, 490], "2880470e": 501, "2884": 507, "2885": 440, "2886": 507, "2887": 507, "288e": 466, "289": [447, 471], "28905": 513, "2891": 440, "2892": 507, "2893": 507, "28958": 472, "2896": 440, "2897": 440, "28e": [103, 466, 477, 479, 497, 513], "29": [67, 280, 406, 416, 420, 430, 458, 461, 462, 466, 469, 471, 472, 479, 486, 489, 492, 493, 496, 498, 503, 505, 506, 507, 510, 512, 523, 526, 527], "290": [448, 471, 480, 498], "2900": 505, "290098": 498, "2903": [440, 505, 507], "2903e": 470, "2906": 507, "2907": 440, "291": [447, 483], "2911": 507, "2912": 440, "2914": 507, "29170324": 497, "291e": 526, "292": 507, "2921": 507, "2922": 507, "2922477": 97, "2923273215208544e": 493, "2924": 440, "2925": 507, "2927": 440, "2929": 440, "293": 471, "2930": [496, 507], "2931": 440, "2932": 440, "29355238360800506": 508, "2938": 440, "293895": 594, "2939": 440, "2940": 507, "2941": 507, "2942": 413, "2943": 440, "2944": [414, 440], "2945": 440, "2947": 440, "2948": 440, "295": [447, 461, 485, 507], "2950": 440, "2951": 440, "2952": 507, "2953": 479, "2954": 507, "2956": 440, "2958": 507, "29585273e": 513, "2959": 505, "295e": 496, "296": 447, "2960": 507, "2965": 440, "2966": 440, "2967": 440, "297": [462, 507], "2971e": 496, "2972": 507, "2974": [440, 507], "2976": 440, "2978e": 463, "298": [471, 479, 490, 496, 507], "2981": [440, 507], "2984": 440, "2988": 507, "29882214027996945": 508, "299": [447, 471, 496, 507], "2990": 440, "2991": 440, "2992": 440, "2993": 440, "2995484265169": 494, "2996": [507, 526], "2998": 440, "2999": [440, 496, 507], "299940468335294": 479, "299995937905366": 479, "299e": 496, "299t": 53, "29t20": [489, 493], "29t21": 493, "29t22": 493, "29t23": 493, "29th": 430, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 144, 145, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 176, 186, 187, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 239, 384, 397, 402, 407, 410, 411, 412, 424, 432, 438, 451, 452, 453, 461, 472, 475, 476, 479, 503, 504, 526, 536, 539, 550, 551, 552, 565], "2degx2deg": 481, "2e": [201, 462, 464, 466, 481, 482, 493, 496, 499, 505, 507], "2e3": [201, 503], "2e6": 513, "2f": [380, 462, 469, 508, 524, 605], "2fhl": [58, 71, 437, 449, 450, 496, 526, 535], "2hwc": [59, 72, 437, 443, 451, 496, 535], "2k": [103, 110], "2m": [250, 286], "2nd": [60, 416], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 459, 496], "2pc_catalog_v04": 60, "2v1ywdzb": 493, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 77, 80, 83, 85, 86, 87, 91, 94, 96, 101, 103, 106, 110, 111, 112, 117, 120, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 179, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 218, 220, 239, 242, 251, 274, 280, 282, 285, 286, 294, 297, 298, 303, 311, 313, 316, 317, 338, 347, 368, 379, 384, 386, 388, 391, 392, 394, 395, 397, 402, 403, 405, 406, 407, 408, 410, 415, 416, 417, 421, 423, 428, 431, 432, 433, 435, 436, 441, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 511, 512, 513, 514, 515, 523, 524, 526, 527, 528, 530, 533, 534, 537, 538, 542, 544, 546, 547, 549, 550, 553, 558, 560, 561, 563, 564, 568, 573, 574, 576, 577, 578, 579, 581, 582, 585, 587, 592, 593, 597, 601, 602, 604, 605, 608], "30": [24, 52, 67, 83, 96, 103, 113, 114, 156, 195, 316, 317, 398, 399, 404, 411, 418, 430, 432, 462, 463, 464, 468, 469, 472, 474, 479, 482, 485, 486, 489, 490, 491, 493, 496, 497, 499, 503, 505, 506, 507, 508, 509, 512, 513, 526, 538, 544, 549, 550, 558, 559, 574, 577, 578, 579, 582, 587], "300": [74, 87, 91, 471, 474, 478, 481, 482, 486, 490, 496, 507, 513], "3000": [401, 496, 507, 552], "30000": 496, "3000000": 587, "30000000": 587, "3000020211954284": 479, "3000_100000_wtct": 77, "3000e": 463, "3001": 440, "30015e": 462, "3002": 440, "3003": 505, "3004625872247901": 478, "3005": 440, "3006": 526, "3006942": 97, "3007": 440, "300_1000_wtct": 77, "301": [447, 471, 507], "3011061699260256": 508, "3012": 440, "3013": 496, "3014": 507, "301668796295": 496, "302": 471, "3020791585772495": 316, "3028": 507, "30287": 472, "3028e": 505, "302e": 496, "303": [468, 471, 496], "3030": [440, 507], "3032": [440, 507], "3034": 496, "3035": 440, "3037": 440, "3037632e": 501, "3038": [440, 526], "3039": 440, "304": [463, 489, 490, 493, 494, 496, 507, 508, 526, 568], "3041": 440, "3042": [440, 507], "3043": 505, "3045": 440, "3046875": [497, 505], "3049": 507, "3049664466089965": 317, "304_steadi": 463, "305": [67, 471], "3050": 507, "3051": 440, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 440, "3053": 440, "30535345877453707": 508, "3054": [440, 507], "3055487448271073": 480, "3058": 440, "3058422e": 501, "305e": 496, "306": [447, 461, 507, 566, 604], "3060": 440, "3061224489795924": 483, "306196370000000": 526, "3063": 440, "3069": 440, "306e": 496, "307": [471, 486], "3070": 440, "3071": 496, "3072": [440, 507], "3074": 440, "3075": 415, "3076": 440, "307e": 496, "308": [471, 479, 507, 561], "3080": 440, "3081": 440, "3083": 440, "3085": 440, "3086": 440, "3088": [440, 507], "3089": [440, 507], "3091": [440, 507], "3092": [440, 507], "30997": 526, "30a": 286, "30d00m00": 418, "30e": [463, 501, 505], "30t00": 493, "30t01": 493, "30t02": 493, "30th": 403, "31": [400, 401, 414, 415, 428, 455, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526], "310": 507, "3100": 440, "3106": 440, "31067517": 496, "3107": [496, 507, 526], "311": [483, 561, 605], "3110": 441, "3111": 441, "3112": 441, "3113": 441, "311332": 585, "31139055e": 499, "3114": [441, 507], "311489174710791e": 526, "3116": 441, "3117": 507, "3117988e": 501, "31186857659616535": 508, "3119611261122878": 508, "312": 447, "3122": 442, "3123": 442, "3124": 442, "3125": [442, 507], "3126": 442, "3127": [442, 507], "3129": 442, "313": [471, 478], "3130": 442, "3131": [443, 505], "3134": 507, "3135914081482271": 508, "3136": 443, "313714614138": 497, "3138": 443, "3139": 507, "314": [452, 507], "3140": 443, "3141": 443, "3145": 443, "3148": 443, "315": [496, 507], "3150": 507, "3152": 443, "3153": 443, "3155": 443, "3157": 507, "315767532000283": 523, "3158": [443, 507], "316": [471, 513, 514], "3162": 443, "316227": 496, "316227766016838": 502, "3163": 507, "3165": 443, "3168": 443, "3169": 443, "317": [447, 471], "3170": 507, "3173": 443, "3178": 443, "317a": 286, "317e": [463, 496], "318": 447, "3180": 443, "3182": 443, "3185": 443, "3188": 507, "3189697265625": 468, "319": [448, 483, 507, 513], "3191": 443, "3195": 526, "3196": 507, "3197": 443, "319725": 512, "3199": 443, "32": [83, 195, 468, 472, 475, 493, 502, 503, 507, 526], "320": [103, 106, 110, 111, 124, 496, 497, 498, 505, 538], "3202": [443, 507], "3205": 507, "3206": 507, "3207": 443, "3208": [443, 507], "32095": 526, "321": [471, 483], "3211": 443, "3213": 507, "3216": 443, "3217": 443, "3219": 443, "322": [471, 483, 507], "3222": 443, "3228": 443, "3229": 479, "323": 471, "3230": 443, "3232": 507, "3232943": 358, "3233356": 358, "3235": 507, "32377509405904137": 96, "3237948931463171": 508, "3238": 443, "3241": 443, "3243": [443, 507], "3246": 443, "32465247": 506, "3254": 443, "3255": 507, "3256": 507, "3257": 443, "3258": 443, "325e": 469, "326": [447, 507], "3262": 443, "326530612244888": 483, "32684": 526, "32684833": 512, "327": [461, 479, 588], "3270": 507, "3271": 507, "3272": 443, "3273": 507, "3276": 443, "3277": 443, "3278": 443, "3279": 443, "3279955e": 501, "328": [479, 483, 507], "3281": 443, "3282": 507, "3283": 443, "3284": 443, "32843": 526, "32847": 462, "3285": 443, "329": [96, 316, 317, 489, 490, 493, 496, 508, 540], "3290": 507, "3293": 443, "3294": 507, "3299": 496, "329e": [468, 496], "33": [493, 494, 495, 499, 503, 507, 526, 540], "330": [448, 471, 505, 507], "3301": 443, "33013e": 462, "3302": 443, "3302565e": 501, "3303": 443, "330376": 67, "3304": 443, "3305": 443, "330505": 512, "33055e": 462, "3306": 443, "3307": 443, "3308": 443, "3309": [443, 507], "331": [461, 507, 588], "3310": 443, "3314": 443, "33164865722698683": 508, "3319": 443, "3319831545301117": 316, "332": [67, 448, 507], "3320": 443, "3321": 507, "3323": [443, 497], "332525": 496, "3328": 443, "332e": [472, 479], "332f": 33, "333": 507, "3330487": 97, "3331": 526, "3331761": 97, "3333": [443, 507], "33333333": 391, "3335": 443, "33368e": 462, "3337": 443, "3338": 443, "334": [127, 507, 513], "3342": 443, "3343": 443, "3346": 443, "3347": 443, "33484": 462, "3349": 443, "3349654391": 498, "334e": 496, "335": [448, 461, 507, 510, 588], "3351": 507, "3353": 443, "3357": 443, "3358": 443, "335e": 466, "336": 496, "3363": 443, "3364130e": 501, "336444e": 496, "3366": 507, "336606": 462, "3368855e": 501, "3369": 443, "337": [448, 471, 490], "3374": 443, "3377": 443, "33787": [96, 508], "33788": [96, 508], "33789": [96, 508], "3379": 443, "33790": 508, "33791": 508, "33792": 508, "33793": 508, "33794": 508, "33795": 508, "33796": 508, "33797": 508, "33798": 508, "33799": 508, "338": [448, 461, 496, 507, 588], "33800": 508, "33800122": 97, "33801": 508, "3380311e": 501, "3381": 443, "3382": 507, "3388": 507, "339": [448, 468, 492], "3390": 443, "3392": 443, "3393": 443, "3395": 443, "3397": 443, "339835555384604": 508, "3398360": 501, "33983991887701287": 96, "3399": 443, "33e": [475, 491], "34": [52, 53, 67, 431, 462, 479, 489, 490, 493, 497, 503, 505, 507, 526], "340": 507, "34005": 462, "3402": 443, "3403": 443, "340391": 526, "3404": [443, 507], "34047": 462, "3406": 443, "3409": [94, 443], "341": [461, 462, 510], "3410": 507, "3413": 443, "3416": 443, "3418": 443, "342": 448, "3420": 443, "3423": 443, "3426": 443, "3428": 443, "3434": 443, "3438": 443, "3439": 443, "343e": 466, "344": [483, 490, 496, 507], "344238": 526, "3443842": 512, "3445": 443, "3446": 443, "3447": 443, "3449": 443, "344e": 67, "345": [462, 505], "3453": 443, "3454": 443, "345692": 526, "3458": 443, "346": 505, "3460": 507, "34613054105945": 480, "3464": 507, "346488e": 496, "3466": 443, "3468": 443, "34693877551019": 483, "347": [448, 464, 490, 507], "3471": 443, "3474": [443, 507], "3476": 507, "348": [448, 468], "3480": 443, "3481e": 477, "3488": [443, 507], "348e": [67, 496], "349": 507, "3491": [443, 472], "3494": 507, "349530550364513": 499, "349530725238324": 499, "349530739434762": 499, "34953075814257": 499, "349530774637106": 499, "349530793294022": 499, "349530807499818": 499, "349535814771492": 499, "349536722980144": 499, "34953715852974": 499, "349537804335895": 499, "34953807800248": 499, "349538946234787": 499, "349539326364486": 499, "349541972204694": 499, "349559366767238": 499, "349655": 498, "349711555166778": 499, "349724385715966": 499, "3499075e": 501, "349e": 472, "34e": [496, 505], "35": [67, 408, 415, 428, 468, 489, 493, 496, 499, 507, 509, 512], "350": [483, 491, 498], "3500": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 507], "350105": 479, "3502": 496, "350292033852874": 499, "3503706026275275": 508, "3504": 526, "35050396342807": 499, "35053891085894": 499, "351": [448, 496, 526], "3514e": 524, "3515": 443, "3516": 507, "351d": 483, "352": [448, 496, 507], "3521": 464, "3523": [443, 507], "3525": 507, "3529": 443, "353": [448, 526], "3531": 507, "3535": 445, "3535924566679284e": 523, "3536": 462, "3539": 507, "353e": 479, "354": 507, "3544": 443, "355": 507, "35569283": 501, "355804": 526, "3559": 443, "356": 526, "3561": 443, "3568": 443, "357": [483, 496, 526], "35722435185": 496, "3576e": 464, "358": [479, 496, 526], "3583": 479, "3584": 443, "3589": 507, "359": [448, 479, 496, 507, 526], "3590188e": 501, "3591": 507, "3592": 443, "359514": 477, "3599": 481, "359e": 526, "36": [67, 86, 151, 336, 464, 479, 481, 490, 496, 497, 501, 507, 526], "360": [405, 503, 507, 528], "3600": [471, 481, 482, 503], "36014": 477, "36073833513766157": 508, "361": [67, 448, 461, 483, 507, 527], "3612": 507, "3619e": 524, "36228879": 526, "3626": 507, "36273": 526, "363": [461, 507, 588], "3632": 507, "363472509034498": 508, "3636": 507, "3639946": 491, "364": [448, 507], "364151": 557, "3642": 507, "3650": 507, "3654": 507, "3659253e": 501, "365e": 490, "366": [461, 498, 507, 517, 524], "3662": 507, "366486": 498, "36669663417038234": 508, "3668": 507, "3669": 445, "367": [448, 505, 507], "36734693877551017": 483, "367438": 573, "36747222e": 498, "3674884": 496, "367550": 477, "3676": 507, "368": [483, 507], "36834038301420274": 508, "368346217294295": 96, "3684": 445, "3685": 507, "3689322e": 501, "369": [448, 507, 588], "3690": 526, "3693": 507, "3694": 507, "3699": 445, "36e": [495, 496], "37": [462, 463, 469, 471, 475, 498, 499, 507, 513, 605], "370": [496, 505, 507], "3701": 507, "3707": 507, "371": [448, 507], "3710784e": 501, "3712": 445, "3713": 445, "3715810e": 501, "3718745": 97, "372": [127, 526], "3720": 445, "3722": 445, "3726": 507, "3728": 445, "373": [479, 507], "3733": 445, "3735": 507, "373907718050568e": 493, "3739292e": 501, "374": [483, 507], "3740": [445, 507], "37455141": 526, "3748": 445, "375": [448, 503], "3750": 479, "37506": 526, "37517": 472, "3752": 445, "3759377929871826": 508, "376": [67, 507], "3760": 445, "3761": 445, "3765": 462, "3766": 507, "3768": 507, "3777": 445, "37773": 472, "3778": 507, "3779": 526, "3783": 445, "3786": 507, "379": [448, 468], "3792": 505, "3796": 445, "3797": 445, "38": [22, 67, 83, 462, 464, 476, 496, 503, 505, 507, 523, 526, 587], "3802": [445, 507], "3804": 445, "3805": 507, "3806": 445, "381": 505, "3810": 445, "3812": [496, 507, 526], "3812120e": 501, "3812160e": 501, "38143003": 97, "3817": [445, 507], "3829": 526, "382e": 468, "383": [67, 448, 496, 503], "3833": 445, "3837": 445, "3838": 507, "383e": 67, "384": [498, 507], "3841385": 498, "3842": 445, "3846": 445, "3847": 274, "3848912826152664e": 526, "385": [483, 507], "3856": 445, "386": 483, "3860": 445, "3862": 454, "387": [448, 507, 526], "3872": 496, "3873": 445, "3874": [445, 507], "3876": 445, "387755102040817": 483, "387834": 526, "388": [507, 565], "388405": 526, "3885947175689592": 508, "3886270e": 501, "3887": 445, "389": [396, 507], "3892": 445, "3895": 445, "3896": 507, "3898": 445, "389e": 526, "39": [17, 18, 21, 22, 24, 25, 27, 59, 495, 496, 503, 507, 513, 565, 587], "390": [443, 461, 483, 507, 566], "3900": 507, "3901": 507, "3904": [445, 507], "39042": 86, "3905": 445, "3906": [445, 507], "391": [496, 507], "3915": 445, "3918": [445, 507], "392": [448, 469], "3922": 507, "39224": 472, "3925": 454, "393": [210, 211], "3933": [445, 507], "3935": 464, "3936": 445, "394": [448, 507], "3941": 445, "3945": [464, 496], "3947637541758": 490, "394767169890468": 523, "3948": 446, "395": 448, "3950": [416, 454], "395004": 526, "3953": 507, "3955": 507, "3956": [454, 507], "3959": 446, "396": [448, 507], "3962942e": 501, "3966": 446, "39666267e": 493, "3967": 507, "3968": 507, "397": [468, 507], "3970": 417, "3970355304768176e": 493, "39728": 526, "3975": 446, "3976": 507, "3979": [446, 603], "397918129147546": [428, 603], "39791813": [428, 603], "398": [448, 475, 477], "3981": 526, "39810717055": 498, "3981075200000000": 526, "3983": 446, "3986": 446, "3987": 446, "3988": 446, "3989": 507, "398e": 496, "399": 507, "3990": 446, "3998": 507, "39e": 496, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 151, 157, 164, 165, 167, 176, 189, 289, 291, 397, 400, 401, 402, 406, 407, 410, 411, 412, 424, 432, 433, 434, 436, 437, 438, 439, 450, 451, 452, 459, 461, 462, 463, 466, 468, 469, 472, 474, 475, 479, 480, 481, 482, 483, 485, 489, 490, 493, 497, 499, 501, 502, 503, 504, 505, 506, 508, 512, 513, 514, 523, 524, 536, 538, 539, 540, 545, 547, 552, 600, 602], "3d33m15": 67, "3dataset": 478, "3e": [20, 127, 133, 479, 482, 486, 488, 491, 493, 496, 505, 507], "3e4": 513, "3e5": 513, "3e6": 587, "3e7": 587, "3f": [127, 480, 604, 605], "3fgl": [61, 67, 74, 233, 273, 414, 444, 447, 449, 450, 451, 461, 466, 496, 506, 526, 535, 554, 567, 588], "3fgl_name": 71, "3fhl": [62, 75, 86, 129, 131, 136, 229, 253, 292, 411, 450, 451, 466, 472, 481, 483, 496, 503, 504, 505, 506, 513, 526, 535, 537], "3fhl_data_fermi": 478, "3fhl_dataset": [292, 478, 504], "3fhl_model": [292, 478, 505], "3g": [495, 496], "3hwc": [63, 76, 443, 454, 496, 535], "3ml": [409, 513], "3pc": [64, 69, 77, 459, 496], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "3supxkwm": 493, "4": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 102, 103, 106, 110, 111, 116, 119, 130, 136, 148, 153, 156, 164, 176, 179, 195, 196, 197, 198, 199, 200, 205, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 244, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 285, 292, 293, 336, 378, 391, 392, 394, 395, 403, 405, 408, 411, 415, 416, 428, 431, 440, 442, 443, 444, 447, 449, 450, 453, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 517, 523, 524, 526, 528, 533, 534, 535, 549, 552, 553, 558, 559, 562, 568, 573, 586, 587, 596, 602, 603, 604, 605, 606], "40": [59, 110, 111, 398, 444, 461, 464, 466, 468, 469, 471, 477, 479, 485, 489, 490, 493, 503, 506, 507, 512, 526, 549, 574, 577, 582, 587, 604], "400": [136, 221, 472, 474, 479, 483, 496, 503, 507, 526, 597], "4000": 454, "40000": [176, 524], "400056": 462, "4002": 507, "40050506591797": 496, "40051035": 496, "40071076": 97, "400x200": 483, "401": 469, "40112": 526, "4013": 454, "4014": [454, 507], "4015": 454, "4016": 507, "4017": 454, "4018": [454, 507], "401e": 472, "402": [156, 507], "4020": 507, "4022": 454, "40235": 477, "4024": 454, "4025": 454, "4026": 454, "402712": 496, "403": [448, 479, 505, 507], "4031": 507, "4035": [507, 526], "4037": 454, "403718": 570, "4042": 507, "4043": 454, "4044": 454, "4048": 507, "40481": 477, "405": [399, 483], "4051": 454, "40525": 477, "4054": 454, "4058": 454, "406": [507, 526], "40611": 526, "4067": 454, "40671": 475, "40672": 475, "407": 496, "4071": 454, "4073": 454, "4073799600000000": 526, "4074": 507, "4075": 454, "4076": 454, "4079": 454, "408": [468, 503], "4080": 454, "4080942e": 501, "40822469e": 506, "4083": 454, "4084": 454, "4088": 454, "4089": [454, 507], "409": 507, "4091": 507, "40919": 472, "4093": 454, "409416": 526, "4095": 454, "4098": 454, "40deg": 512, "41": [67, 86, 94, 405, 496, 497, 503, 507, 513, 526], "410": 507, "41009347393684": 497, "4103": 454, "4105": 454, "4106": 454, "4107": [454, 507], "4108": 454, "4108125971006": 490, "411": 526, "4110": 507, "4110e": 496, "4112": [127, 454, 507], "4113": 454, "4115": 454, "4117": 507, "4119": 454, "411e": 466, "4120719e": 501, "412165": 479, "4122": 507, "4124": 507, "412779907405": 496, "413": 479, "414": [448, 507], "414054187946": 480, "41415047": 97, "4142135623730951": 120, "41449": 472, "414e": 472, "415": [448, 507, 578], "4151e": 477, "4155": [496, 526], "41584196": 494, "416": [67, 477, 496, 502], "4161e": 477, "4164": 507, "417": 496, "4175": 507, "4176": 507, "4179": 507, "418007850646973": 428, "41803": 475, "41866": 513, "4189": 507, "419": 505, "4191": [457, 507], "4198250e": 501, "41995": 472, "419e": 496, "41e19": [19, 20], "42": [19, 20, 25, 26, 27, 94, 156, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 358, 405, 471, 479, 496, 501, 502, 503, 507, 508, 512, 553, 557], "420": 507, "4203": 507, "42050348": 497, "4208": 457, "4209": [457, 472], "421": [448, 507, 526, 602], "4210": 457, "4212": [457, 507], "4212028e": 501, "4213": 457, "42130982e": 493, "4215": 457, "4216": 457, "4217": 458, "4219": 457, "4220": [477, 507], "4221": 455, "4225498e": 501, "4225631e": 501, "42267": 479, "4226731": 479, "422e": 490, "423": 468, "4230": 507, "4231": [455, 457], "4232": 507, "42361": 472, "42399798": 479, "423e": 127, "42400": 479, "4242": 457, "4243": 457, "4245": 457, "42463": 513, "424650": 497, "42474": 526, "4249": 507, "425": 526, "4252": 457, "4253": 507, "426": 496, "4264": 457, "4268": [455, 507], "427": 469, "42721474e": 498, "4275": [455, 457], "4277": 457, "4278": 507, "4280": [457, 507], "4281": 496, "4282": 457, "428571428571404": 483, "4286": 507, "4288": 457, "429": [468, 507], "4290": 507, "4294": 457, "42e": [499, 505], "43": [285, 358, 405, 469, 479, 490, 497, 503, 507, 526, 527, 553], "430": 496, "43000": [52, 53], "4301": [455, 457, 507], "4303606e": 501, "4304": 507, "4305": 457, "4309": 507, "431": [399, 497], "431024101062279e": 523, "43113": 462, "4313847458879893": 508, "4314": 507, "4319": 526, "43197": 472, "432": 507, "4324": [455, 457, 507], "4326": 457, "432878": 496, "432e": 496, "433": [461, 472, 492, 493, 507], "4331": 507, "4333": 507, "4336": [455, 457], "43366": 597, "4337": 507, "4338e": 463, "4339": 507, "434": [496, 507], "43416595": 491, "4344": 455, "4346": 457, "435": 448, "4350": 457, "4351": 507, "4351637481047363": 508, "4352": 457, "4355": 507, "4357": 274, "4359": [455, 457], "435e": 468, "435l": 496, "436": [448, 461, 499, 507, 510], "4360750e": 501, "4369": 457, "437": [496, 505], "4370": 457, "4371": 507, "4373240195300975": 508, "4376": 507, "437851442921017e": 507, "438": [505, 507], "4380": [456, 457], "4381": [419, 458], "4382": 456, "439": [468, 507], "4393": [456, 457], "4394": 456, "4395": 457, "4397": [456, 457], "439e": 496, "43e": 505, "44": [21, 50, 86, 358, 463, 471, 489, 491, 503, 507], "4402": 457, "44055555555555603": 94, "4406": 457, "4408": 458, "4409": 457, "441": 507, "4412": [456, 457], "441650": 592, "4417": 457, "4418": 457, "442": 507, "4420": 507, "4420073e": 501, "4420222e": 501, "4422": 507, "4428": 457, "4428634e": 501, "443": [461, 468, 507, 524, 527], "4430": 457, "44319": 497, "4432": [458, 507], "4433": 459, "4435": [456, 457], "4435001410518196e": 507, "4444": [457, 507], "444e": 478, "445": [472, 507], "4450": 526, "4451": 507, "44528685": 526, "4453": [456, 457], "4454": 507, "4455": 507, "4457": 507, "44573": 94, "4458": 457, "4459": 457, "446": [505, 507, 605], "4460": 507, "4466": [457, 477, 507], "4466832000000000": 526, "4466835921": 498, "447": [448, 507], "4471": 507, "44742": 526, "447497": 506, "44749e": 462, "44755": 475, "447552": 462, "4479": 507, "447e": [479, 496], "4480056e": 501, "44802852": 526, "4481": 496, "4483": 507, "4485": [458, 507], "4486": [456, 457], "44897959183673": 483, "449": 507, "4491": [418, 458], "4495": 457, "4497": 497, "44e": [428, 507], "45": [51, 54, 461, 467, 468, 471, 478, 490, 491, 493, 497, 503, 504, 506, 507, 528, 553, 559, 560], "450": [505, 507], "4500": [456, 457], "4501": 458, "4504": 457, "4506": 457, "4508": 457, "451": 507, "4510": [457, 477, 526], "4511": 507, "4512": 507, "4515": 495, "4516": 507, "4517490659800822": 488, "4520": 456, "4521": 457, "4524": [456, 507], "453": [463, 505], "453149925008": 490, "454": 468, "4540": 458, "4545": 457, "4546": 458, "4549": 507, "455": [448, 466, 507], "45515263080596924": 464, "45517415e": 498, "4553": 507, "455870": 479, "455e": 67, "456": 448, "4560": 507, "4561": 458, "45646095": 491, "4567": 458, "457": [286, 448, 505, 507], "4571": 507, "457251": 526, "4574": [456, 458], "4575": 94, "4578": 456, "4579e": 462, "458": 496, "4584": 458, "45856": 526, "4586649826004114": 316, "4588": 507, "459": [448, 497, 505, 507], "4591": 507, "4593": 456, "45935": 526, "4595": 458, "4599": 458, "459941302": 83, "45\u00ba": 514, "46": [53, 67, 110, 111, 405, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526], "460": [461, 507, 588], "460249999": 86, "4608": 458, "461": [448, 493, 507], "4611": 507, "4615": 458, "46186956763267517": 464, "4619": 456, "462": [448, 468], "4620": [419, 458, 507], "4620e": 496, "46225": 472, "4628": 458, "463": 526, "4631": 456, "4635": 458, "4638": 458, "4639e": 474, "464": 486, "4642048e": 501, "4647544e": 501, "4648": 507, "4649": 507, "465": [468, 496, 505, 507], "4653": 456, "4657": [456, 458], "465784": 526, "4660": 458, "4664": 458, "4667": 507, "4668": 458, "4669": 458, "467": 507, "4671": 458, "46711": 472, "4673": 507, "4675e": 489, "4677": [456, 458], "468": [491, 496, 507], "468036": 575, "4681": 456, "4682": 507, "4684": 464, "468805426856864e": 52, "4689": 507, "468e": 67, "469": 507, "4692": 507, "469387755102041": 483, "4697": 458, "46e": [83, 474, 479], "47": [67, 490, 493, 496, 503, 507, 526], "4703": 458, "4711": 526, "4712": 472, "4714": 458, "4721": 456, "4726": 458, "4728": 456, "4729": 458, "473": [448, 468, 507], "4738": 458, "474": 448, "4740": 458, "4741": 458, "4742": 507, "474e": 496, "475": [448, 461, 478, 485, 505], "4750": 458, "4752": 507, "4753": [456, 458], "475468": 462, "4755": 456, "4759": 458, "476": 507, "4761": 507, "4763": 507, "4766": 507, "4768": 507, "4770": 458, "4772": 456, "47797": 472, "477e": 496, "478": 448, "47802": 508, "47803": 508, "47804": 508, "47827": 508, "47828": 508, "47829": [82, 508, 515], "4783": 458, "4785": 458, "479": [461, 507, 520], "4796": 507, "4799729466574": 490, "47e": 496, "48": [33, 176, 431, 461, 477, 478, 490, 503, 505, 507, 510, 513], "480": [464, 496, 505, 507], "4802": 458, "4805": 458, "480554966161": 477, "48068": 472, "4807": 507, "4808": 458, "480e": 496, "481": [396, 448], "4810": 458, "4814": [458, 507, 526], "4817": [458, 507], "48180953439317e": 523, "4819444e": 501, "482": [462, 507], "4821": 507, "48215685": 97, "4822": 458, "48248": 496, "4825": [496, 526], "4827": 507, "4828": 458, "4829": 458, "4832": 507, "4834": 458, "4834488e": 501, "4835": 458, "4837": 458, "4839": 507, "484": [448, 483, 507], "48442": 280, "4845": 458, "4847": 458, "4848653": 496, "4849": [458, 496, 526], "485": 448, "4850": 458, "4851": 458, "4852": 507, "4854": 458, "485726": 577, "4868": 507, "487": [448, 483, 507, 523], "4875723e": 501, "4876": 456, "4879": 458, "4881": [259, 260], "4886": 458, "48871": 462, "4897959183673475": 483, "489e": 496, "48e": [496, 505, 524], "49": [53, 472, 477, 483, 496, 505, 507, 513, 523, 552], "4902": 458, "4904": 458, "4904078e": 501, "49078e": 462, "4908": 507, "4913": 456, "49152": 513, "4917": 458, "4930435940405": 477, "4933": 507, "4933657e": 501, "4936": [456, 458], "4937": [456, 458], "4939": 507, "494": 507, "4940": [458, 507], "49417615": 86, "4942": 458, "4948": 507, "494e": 468, "4956": 507, "4958277": 97, "496021": 512, "4963": [507, 526], "4966": [507, 526], "4968236e": 501, "497": [461, 483, 485], "4970": 458, "4971": 458, "49716789e": 498, "4971704e": 501, "4973": 458, "4974": 507, "4975": 458, "4978": 458, "498": 526, "4983": 459, "498784": 496, "4989": 458, "498e": [496, 526], "499": [67, 496, 507], "49919925926": [244, 598], "4992": 458, "4994": 458, "4996": 459, "49972277488662115": 508, "4999833830074": 479, "4d": 410, "4e": [491, 496, 505, 507, 587], "4f": [603, 604, 605], "4fgl": [65, 78, 274, 275, 414, 435, 437, 443, 445, 458, 461, 463, 478, 496, 504, 506, 535, 554, 567, 588], "4th": [403, 430], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 103, 104, 106, 109, 110, 111, 120, 124, 127, 128, 130, 132, 133, 134, 135, 136, 144, 145, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 176, 179, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 221, 223, 224, 227, 229, 230, 231, 233, 234, 235, 239, 240, 242, 244, 246, 247, 250, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 286, 312, 318, 350, 381, 382, 386, 388, 391, 392, 395, 396, 398, 402, 403, 405, 406, 407, 408, 410, 414, 415, 416, 420, 423, 428, 431, 433, 435, 436, 443, 445, 447, 448, 450, 451, 452, 456, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 523, 524, 526, 528, 533, 534, 537, 544, 547, 549, 550, 551, 552, 553, 558, 559, 560, 561, 563, 568, 569, 576, 577, 578, 582, 583, 587, 591, 592, 593, 594, 596, 602, 604, 605, 608], "50": [87, 91, 94, 112, 117, 134, 358, 398, 418, 462, 469, 470, 475, 477, 486, 489, 490, 491, 496, 497, 501, 503, 505, 506, 507, 508, 512, 513, 515, 523, 524, 526, 549, 552, 561, 605], "500": [196, 197, 199, 205, 208, 209, 472, 479, 481, 482, 503, 507, 512, 513, 526, 552, 558], "5000": [19, 20, 87, 91, 528, 552], "5000056568267741": 479, "5000e": 471, "50022222": 94, "500249": 496, "5004": 479, "5009": 507, "5010": 507, "5012": 507, "5015": 458, "501vzpuw": 477, "502": [448, 507], "5027": 507, "5029747": 470, "503": 448, "5030": 526, "5034": 507, "5036": 507, "504": 507, "5040": 458, "5041": 507, "5044": 458, "5049": 526, "505": [67, 496, 497, 507], "505523195912": 477, "5057": 459, "5058": 459, "506": [448, 507], "5066": 496, "5068": 507, "507": 448, "5070": 507, "5074834": 97, "5078068": 97, "50807568877": 496, "509": 507, "509587": 498, "509632": 498, "5098": 507, "509e": 496, "50_100_wtct": 77, "50e": [471, 505], "51": [52, 53, 67, 475, 477, 507, 523], "510": [448, 461, 498, 507, 588], "5101": 507, "510204081632645": 483, "5106": 526, "51095676": 491, "511": [67, 448], "5115": 459, "51179": [392, 607], "5118": 459, "512": [468, 507], "5123": 507, "5124": 507, "5125": 459, "5126": 67, "5129": 459, "513": [428, 503], "51312": 479, "5135": 459, "5137": 507, "5144": [94, 462], "5145": 459, "514854": 512, "5152": 507, "51544": [471, 481, 482, 486], "5156": [459, 507], "516": 507, "5160": 459, "5161": 459, "5162628e": 501, "5163273": 512, "5165": 507, "5169": [459, 507], "5175": 507, "5176": [459, 507], "518": [448, 505], "5180": 459, "5183": 507, "5184": 459, "5186": 459, "5188": 459, "5188338e": 501, "51910": 94, "5192420e": 501, "5194": 507, "5194769e": 501, "51948705e": 506, "51958055e": 498, "52": [53, 105, 126, 127, 176, 462, 464, 472, 475, 477, 490, 496, 507, 512, 515, 523, 526, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "520": 507, "5200": 459, "5205": [459, 513], "5206": 459, "5207": 459, "52074074074": 83, "5209": 507, "521": 449, "5216": 507, "5217": 507, "522": [461, 495, 510], "5222": 459, "5224": 507, "523": [449, 503, 507], "5230376e": 501, "52318414": 97, "5232": 507, "523681640625": 468, "5237647004325865": 508, "52389101852": 496, "523a": [250, 286], "523e": 469, "524": [449, 496, 505], "5240": 507, "524418": 596, "5248": 526, "524807800000000": 526, "5250": 507, "5251": 507, "5254": [459, 507], "5255": 459, "5258": 459, "52587": 472, "526": 449, "5260": 507, "52607": 526, "5263": 507, "5269": 459, "527": [449, 507, 513], "5270": 459, "5271": 459, "5275": [459, 507], "5279": 459, "527e": 469, "528": [468, 505], "5280": 459, "5281": 507, "52826166": 496, "5283": [496, 526], "52839183495354": 490, "5285": 459, "5289": 459, "529": [449, 507], "5292": 497, "5297": 459, "5297030e": 501, "5298": 459, "52e": [491, 523], "53": [28, 479, 493, 507, 509, 558, 568], "530": 449, "5300": 459, "5302": 507, "53025": 94, "5303": 459, "5304": 459, "530612244897945": 483, "531": [449, 507], "5312": 459, "5314": 459, "5316": [459, 507], "532": 507, "5320": [459, 507], "53213": 479, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": [496, 507], "53343": [428, 488], "53344": 488, "53345": 488, "53346": 488, "53347": 488, "53348": 488, "5338": 507, "534": [461, 491, 492], "5340": 507, "5342": [459, 507], "5345": 507, "5345275e": 501, "5346": 459, "53482e": 462, "535": [449, 496], "5350": 459, "535058216604496": 286, "5353": 459, "5356": 459, "53566": 462, "536": 507, "53616": 250, "5365": 507, "5366": 459, "5369": 507, "537": 483, "5370": 459, "5374": 507, "5378": 459, "5380": 459, "5381": 459, "5382": 459, "538491845944134e": 493, "5385": [459, 507], "53863556835843": 490, "5389": 459, "539": [286, 505, 565], "5390": 459, "5390438": 97, "5392e": 489, "539397": 496, "5394": 507, "53945": 489, "53946": [493, 494], "5396": 507, "539e": 496, "53e": [428, 471], "54": [67, 461, 464, 468, 496, 501, 507, 509, 510], "540": 507, "5400": 497, "5404": 507, "5405": [459, 507], "5407": 459, "5407363826067": 537, "5407363826070": 537, "5408": [459, 507], "5409": 459, "541": 449, "5410": 507, "5411": 462, "5413": 507, "5414": 507, "5415": 507, "5417": 507, "5419": 507, "542": 507, "5423": 459, "5427": 459, "5427520e": 501, "54282": 472, "543": 507, "5433": 459, "5435": 507, "5437": 459, "5438": 459, "5438860e": 501, "544": [449, 496, 513], "5443": 507, "5445": [459, 507], "5448": 459, "5449": 459, "545": 449, "5453": 459, "5455": 507, "54566271": 604, "546": [449, 507], "5461745": 97, "5462": 459, "5464": 507, "5466": 459, "54676809e": 499, "54682": [472, 496, 513, 526], "547": [449, 462, 496], "5472": 459, "54721e": 462, "5477": 496, "54772": 496, "5479": 507, "548": 507, "5481": 507, "5484": 507, "54892": 472, "548e": 496, "549": 449, "5490039491683206e": 523, "5498": 507, "5499840": 512, "54e": 505, "55": [39, 42, 87, 91, 214, 490, 491, 499, 504, 507, 509], "550": 468, "55045": 496, "551": 496, "5510204081632653": 483, "5518": 507, "55197": [392, 607], "552": 496, "5522": 507, "5525": [459, 507], "55275": 513, "553": [463, 496, 507], "5531e": 463, "553337": 526, "5538": 526, "5538942e": 501, "553e": 472, "554": [67, 507], "55410": 496, "5545": 459, "5545130e": 501, "55461982e": 498, "554e": 466, "556": [449, 468, 605], "5561760e": 501, "557": [449, 505], "5576": 507, "55775": 496, "558": 449, "5583371740851524": 523, "5584": 507, "5585": 507, "5587": 507, "559": 449, "5591": 507, "5592e": 470, "5594": 83, "5595": 507, "5597": 507, "56": [462, 469, 491, 503, 507, 514], "560": [37, 496], "5606": 507, "5606985": 491, "5607778e": 501, "56093766": 97, "561": 507, "56139108884": 594, "56139372478": 596, "561406973546": 595, "56141": 496, "562": 496, "5622482": 97, "56234132519": 498, "562391": 486, "5625": 507, "5632": 507, "56353481": 604, "5636": 507, "5639": 507, "563e": [468, 479], "564": [303, 449, 461, 468, 480, 485, 505, 507], "564139576922415": 480, "5644": 497, "565": [449, 507], "56506": 496, "565095": 462, "566": 507, "56623973441069": 490, "5664": 507, "5667": 507, "566e": 468, "567": 507, "56711": 526, "567253": 565, "5687": 507, "56871": 496, "569": 449, "56922612": 604, "5692809e": 501, "5694": 507, "56973": 526, "5698": 507, "57": [33, 471, 472, 479, 491, 503, 507], "570": 507, "57011": 479, "570311": 574, "571": 496, "5712": 507, "5714": 507, "571428571428572": 483, "57185": 537, "5719922e": 501, "571e": 496, "572": 469, "57233": 526, "57236": [472, 496, 513, 526], "572e": [466, 472], "573": [67, 468, 526], "57300957": 179, "5732": 507, "574": 485, "575": 507, "5751": 507, "5754970e": 501, "576": 505, "5760": 526, "57602": 496, "5763635e": 501, "5768262e": 501, "576e": 472, "5772": 507, "5773": 507, "577398": 513, "5779092e": 501, "578": [496, 498, 604], "5781": 507, "5782814": 498, "578709": 469, "579": 496, "5790": 507, "5791754818483286e": 493, "5792": 507, "57944657408": 496, "57967": 496, "57e": 496, "58": [428, 431, 471, 474, 475, 477, 480, 496, 502, 503, 505, 507, 515, 523], "580": 605, "5801": 507, "5806": 507, "581": 469, "5815": 507, "5819e": 470, "582": 449, "5828": 507, "583": 507, "58332": 496, "5833e": 496, "5835918e": 501, "5838630763914314": 507, "583e": 472, "584": 507, "5842497e": 501, "585": 496, "58540702": 97, "586": 507, "5860": 507, "5861": 507, "5864": 507, "5867488e": 501, "58693695": 491, "58698": 496, "5872": 507, "5888": 507, "588e": 496, "58909": 490, "58926": 472, "5892966e": 501, "5895": 464, "5899": 507, "58999": 244, "58e": [486, 496, 498], "59": [83, 475, 486, 488, 496, 502, 507, 515, 526], "590": 468, "59000": [244, 598], "59001": 244, "59063": 496, "5908": 496, "590835686434463": 508, "5909": 507, "591": [449, 496, 507], "59100": [597, 598], "59123": [591, 592, 593], "5913": 507, "5915030546513255": 494, "5915e": 496, "5919": 507, "5920": 507, "59200": 597, "59233": 506, "59235": [83, 512], "59240": 506, "5924e": 524, "59250": 506, "59254e": 462, "59265": 462, "593": [449, 507], "59300": 491, "5934": 507, "59344": 526, "59348": 526, "59365": 598, "594": 449, "59400008": 97, "5941": 507, "59428": 496, "59451": 472, "595": 507, "5951631e": 501, "5956621435": 498, "5959": 507, "596": [505, 507], "5969": 507, "59696": 472, "596e": 496, "5970": 507, "597195622266303e": 493, "597774": 501, "59793": 496, "598": 526, "5980": 507, "5985": 526, "5987": 507, "5987726": 97, "5988": 507, "599": [449, 489, 505, 507], "5990": 507, "599625": 512, "5997": 507, "59976": 496, "599999904632568": 496, "59d09m41": 496, "59e": [496, 505, 513], "5a": 58, "5d": 608, "5e": [471, 482, 496, 498, 505, 507], "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 103, 110, 112, 117, 127, 132, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 244, 286, 379, 382, 395, 398, 403, 407, 408, 411, 416, 425, 428, 441, 443, 445, 451, 452, 456, 458, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 532, 549, 553, 560, 564, 585, 602, 604, 608], "60": [67, 91, 158, 456, 469, 471, 472, 496, 499, 507, 513], "600": [469, 472, 478, 507], "6000": 552, "6000000000000001": 506, "6006": 507, "600661": 501, "60075": 501, "60090769e": 506, "600e": 468, "6018166e": 501, "601e": 496, "602": 507, "6021": 507, "6024e": 524, "603": [505, 507, 526], "6033": [462, 507], "60350": 466, "603625": 501, "6038": 507, "604": 468, "6046689e": 501, "605": 507, "6060": 507, "60603928": 506, "607": 483, "6080": 507, "60815": [594, 595, 596], "609": 507, "60e": 496, "61": [67, 438, 477, 496, 505, 507, 513, 605], "610": 505, "61051": 513, "6105760e": 501, "6108": 507, "611": [472, 498, 604], "611168": 498, "6113": 507, "6115": 507, "6116853": 496, "611e": 496, "612": [461, 510], "612244897959162": 483, "6123": 507, "6125": 515, "612e": 472, "613": [461, 467], "613114": 494, "613444": 581, "6136": 507, "61422433": 97, "6144": 507, "614753": 560, "61489": 501, "6152": 507, "615316": 526, "615896": 587, "616": 507, "6161": 507, "6167": 507, "617": 507, "6175": 507, "617835": 501, "618": 507, "6181862e": 501, "61862": 244, "6187": 507, "619": 496, "6194453e": 501, "61975474351522": 523, "62": [490, 496, 507, 514, 524], "620": 496, "620398": 501, "6205": 526, "6208": 507, "62111": 472, "621499": 526, "6218742e": 501, "6219": 466, "622": [449, 466], "62258": 496, "6227766": 503, "62277660168379": 503, "6228e": 466, "623": [496, 507, 526], "62320": 466, "623397": 501, "62341325": 503, "623413251903492": 503, "624": 505, "624122": 479, "625": 507, "6250": 507, "62503": 496, "62514628": 501, "6253652e": 501, "6254": 507, "6259962e": 501, "626": 507, "6266": 526, "6267247": 526, "6269": 507, "628": 449, "6280": 507, "62842028": 497, "629": 507, "6294": 507, "6298": 507, "63": [194, 195, 204, 207, 462, 468, 470, 471, 497, 502, 507, 514, 523, 524, 547, 549, 550, 553], "630": [82, 505, 507, 515, 523], "6303": 507, "6307": 507, "6309576500000000": 526, "630e": 67, "631": [449, 477], "631155605": 481, "631159205": 481, "631170005": 481, "631173605": 481, "631177205": 481, "631180805": 481, "6316": 507, "6318811e": 501, "6319": 507, "6324": [507, 511], "6326": 507, "632627": 526, "632653061224474": 483, "6327": 507, "633": [85, 103, 106, 110, 111, 176, 469, 478, 502, 523, 524, 549], "63307": 83, "63308": [488, 524], "633083": 504, "63310241699219": 478, "63326": 472, "6333": 94, "63342": 526, "633600": 505, "6340": 507, "6341": 507, "635": 449, "63500212963": 496, "6354": 526, "63541": 512, "6355": 507, "6357": 507, "6358": 507, "6364": 507, "63668832485633": 490, "6372": 507, "638": 505, "639": 496, "6390": 462, "63902": 462, "6394e": 474, "6397": 526, "6398": 507, "63e": 497, "64": [39, 67, 83, 127, 195, 431, 486, 490, 496, 507, 513], "640": [449, 507], "6402822e": 501, "6404": 507, "641": [449, 507, 526], "64103": 512, "6411": 507, "6412": 507, "6413": 479, "6414": 507, "6417": [479, 507], "6419578e": 501, "642": [461, 505, 507, 510, 526], "6424": 507, "6424216679053606": 480, "6427": 507, "6429005895278312": 508, "642e": 468, "643": [33, 507], "64323": 472, "644": 507, "6440": 507, "6442": 507, "64438": 513, "6444": [462, 507], "644527": 498, "6447": [490, 507], "645": [497, 498], "6451": 479, "646": 507, "6464": 462, "6466": 507, "647": [449, 507], "6471115e": 501, "64794383e": 506, "648": 449, "6481": 507, "648e": 67, "649": 449, "64987376": 97, "6499": 507, "64e": 469, "65": [63, 415, 431, 433, 497, 507], "650": 497, "6509": 462, "651": [496, 507], "651058": 526, "6514": [507, 526], "652": 478, "6522806": 526, "652368617859867": 478, "653": [449, 464], "6530612244897958": 483, "65357608e": 501, "6539": 507, "654": [462, 496, 507], "65412": 479, "6547": 507, "654e": 496, "655": 472, "655283": 472, "6554088e": 501, "6556248e": 501, "6557": 472, "655e": [67, 469], "656": [507, 604], "65603222222": 513, "65603794185": 496, "6561e": 477, "6562": 507, "657": 507, "6577182894355391": 508, "658": [461, 505, 509, 510], "658909145253801e": 526, "6589622747787678": 508, "659": [468, 472, 507], "6590": 507, "66": [52, 53, 431, 434, 468, 471, 478, 497, 499, 505, 507, 509, 513, 523], "660": [449, 507], "6604475": 479, "660e": 526, "660fals": 466, "661": 449, "6610048102039": 480, "66104": 462, "6610e": 509, "6612": 507, "662": [496, 507], "6620": 507, "663": [468, 604], "663742400000000": 526, "664": 507, "6642": 507, "664502403": 512, "664502405": 512, "664502408": 512, "664502409": 512, "664502414": 512, "664777": 523, "664e": 472, "6652219e": 501, "6656873021399468": 480, "666273": 563, "66650390625": 464, "6666666666583865": 489, "6666666666666666": 593, "667": [461, 492], "6677569298213673": 507, "6678": 472, "66813": 479, "66984341": 501, "6699": 507, "669e": 472, "66e": [477, 497], "67": [17, 431, 496, 507, 526], "670": [496, 507], "6701": 507, "6705024680435898": 316, "671": [470, 481, 507, 515, 591], "6713462785565527": 507, "671616": 462, "6720": 507, "6721": 507, "6725": 507, "6728": [496, 526], "67304": 97, "6737": 507, "67375": 462, "674": 507, "67457342435522e": 526, "6746": 507, "6748": 507, "675": 468, "6754": 507, "6759": 507, "6765": 507, "6768369882203884": 469, "6768e": 469, "677": [449, 467], "6772235e": 501, "67759236e": 501, "6779": 507, "678": [86, 480], "67824": 497, "6783": 507, "6784": 604, "67861": 501, "6786834721261165e": 469, "679": [449, 461, 517], "679478008101006e": 469, "6795": 507, "6795e": 469, "6796": 507, "6798": 507, "67992517": 97, "67e21": 495, "68": [67, 83, 96, 157, 163, 165, 166, 167, 169, 239, 431, 462, 496, 499, 501, 503, 507, 512, 526, 605], "680": [505, 507], "6803": 526, "6812310184489": 490, "68125": 501, "6815": 507, "682": 507, "6823": 462, "6826": 507, "6828": 507, "683531458783184e": 493, "684": [176, 461, 475, 476], "6843": 507, "685": 507, "68542112": 97, "685880899226832e": 493, "6859": 507, "6861": 507, "68628538586": 497, "6869": 507, "687": [505, 507], "6872": 507, "687214": 502, "687500": 502, "687685": 496, "688": [461, 510], "6885": 507, "6887": 507, "6891": 507, "6892": 507, "6895": 507, "6897": 507, "68e": [463, 477, 496], "69": [103, 458, 472, 486, 496, 497, 507], "690": [67, 507], "6901": 507, "690557685186": 496, "6909290e": 501, "691": 496, "6911": 507, "69138": 472, "691492300600545": 480, "691680": [103, 497, 505], "692": 472, "6927": 507, "692e": 469, "69314486": 504, "6934": 507, "693877551020403": 483, "6939": 507, "693940": 477, "6944": 507, "695": 507, "6953125": 497, "69543812": 97, "6959369197218669": 508, "695e": 472, "6965": 507, "697": 507, "697317": 513, "69735": 501, "697e": 466, "697fals": 466, "6981": 507, "6985": 464, "699": 507, "6992": 479, "6994": 507, "6999732270269603": 507, "6dqyjcg6": 472, "6e": [466, 496, 505, 507], "6h": 514, "6k381mhf": 493, "6th": 430, "6xdxqubc": 493, "7": [30, 31, 38, 52, 53, 67, 87, 91, 103, 106, 127, 133, 176, 179, 206, 212, 214, 242, 381, 382, 391, 395, 396, 403, 407, 408, 411, 428, 432, 433, 435, 436, 442, 443, 448, 449, 450, 452, 453, 462, 468, 469, 471, 472, 478, 480, 481, 488, 489, 490, 491, 493, 494, 496, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 512, 513, 523, 526, 553, 558, 559, 597, 604, 605], "70": [67, 91, 103, 469, 479, 496, 497, 507, 604], "700": [399, 482, 498, 504, 507], "70000000e": 506, "7000e": 506, "70016": 479, "7005": 507, "7007": 479, "7008": 507, "701": 549, "702": [488, 496, 513, 524], "7029": 507, "702e": 472, "703": 428, "7032": 507, "70358483e": 506, "704": [505, 507], "70428": 526, "70437": 501, "705": 526, "70537542e": 498, "70546": 472, "7059": 507, "705967": 523, "706": 507, "7062": 507, "70634e": 462, "7067": 507, "7068": 507, "706e": [478, 496], "707945784": 498, "708": [468, 469, 507], "7080": 507, "7088": 507, "709": 449, "7097381e": 501, "70e": 506, "71": [33, 311, 313, 469, 471, 505, 507, 605], "710": 449, "71067811865478": 496, "7110": 507, "711541686998153e": 493, "7116851": 506, "711e": 472, "712": [476, 480], "71220672": 497, "7123895e": 501, "7124": 507, "712e": [488, 524], "713": [449, 496, 507], "7132e": 526, "714": 496, "7142": 507, "714285714285705": 483, "7143": 507, "7147": 507, "715": [507, 526], "716": [96, 316, 317, 503], "7160": 507, "716062": 512, "7162": 507, "7167": 507, "71693826": [489, 493, 508, 540], "717": [496, 507], "7171": 507, "7175": 507, "7178": 507, "71795506": 526, "718": 507, "7184": 526, "719": [449, 505, 507], "7190994e": 501, "7192": 507, "71944e": 462, "7195": 496, "7198": 507, "719e": 496, "72": [435, 464, 496, 502, 507, 526], "720": [482, 496, 507], "7200": 486, "7213": 507, "7217": 507, "7219": 507, "722": 505, "72217": 526, "722557505166": 496, "723": [461, 472, 502, 510], "7230": 507, "723e": 496, "7240965e": 501, "7245": 507, "725": 496, "7262": 507, "727": 505, "7272": 507, "7273": 507, "7276": 507, "72775": 526, "7284447e": 501, "7287": 507, "7290": 507, "7293": 507, "7294": 507, "729e": 472, "73": [462, 507, 526], "7303": 526, "7307": 507, "731": 449, "7312": 507, "731586963481223e": 523, "7319": 507, "732": 507, "7327": 507, "732e": [67, 496], "733": [67, 449, 507], "7332": 507, "7339": 507, "734": 526, "7341": 507, "734451": 523, "7345": 507, "7346938775510206": 483, "7348": 507, "735": [461, 485], "7350250533013533": 508, "7350380e": 501, "7351": 507, "7351418e": 501, "735635867153437e": 507, "735e": 496, "736": [468, 507, 604, 605], "7368": 507, "737": [468, 507], "738": [449, 496, 507], "7385727e": 501, "739": 449, "7392": 507, "7395744e": 501, "739770898783367e": 420, "739e": 67, "73e": [496, 523], "74": [462, 507, 526], "740": [449, 507], "7404": 507, "7407": 507, "7417": 507, "742": 505, "7422": 507, "7429": 507, "743e": [463, 496], "7440": 507, "7442": 507, "74427": 479, "7445": 507, "74465974e": 501, "7447": 507, "74479": 472, "7454": 507, "74542e": 462, "7457": 507, "746": [449, 507], "7463": 507, "747": 507, "7471700e": 501, "7479085e": 501, "748": 496, "748259": 477, "74989420933": 498, "75": [67, 384, 459, 463, 468, 486, 507, 526], "750": [507, 605], "7500": 507, "750165": 580, "7504": 507, "7505": 507, "7508": 507, "751647922374016": 523, "75267735": 526, "753": [449, 469], "7532": 507, "7536": 507, "7537086e": 501, "754": [449, 513], "7540": 507, "75408483": 526, "754294": 579, "755": 507, "755102040816327": 483, "7555": 502, "7559": 526, "756": 496, "7562": 507, "7563": 507, "7564": 507, "7564085695863936": 507, "7567": 462, "7571": 507, "7574": 507, "7575": 507, "7576": 507, "7580410e": 501, "7582": 507, "7586": 507, "758856": 595, "759": 449, "7594": 507, "7596682e": 501, "7596e": 486, "759738": 593, "75e": [496, 524], "76": [480, 493, 503, 507], "7609": 507, "7613": 428, "762": 449, "762199399999986": 565, "763": 449, "7636": 507, "7637308880733709": 508, "7638": 472, "763e": 472, "764": 507, "76419591747674": 490, "7647": 526, "76473": 472, "7649": 507, "7652512e": 501, "7653": 507, "766": [449, 472], "7660168382": 496, "766d": 512, "766e": 490, "767": [449, 507], "76739": 496, "768000": [103, 497], "768048": 97, "7681656e": 501, "76837444": 491, "7684028": 526, "7689": 507, "7692170e": 501, "7696": 507, "7698": 507, "76e": 505, "77": 507, "770": [67, 507], "771667": 515, "77174": 472, "7718272408581743": 316, "771e": 496, "772": [449, 462], "77206": 526, "77218": 472, "7724": 507, "773": [496, 507], "7733e": [463, 496], "77351": 472, "7738": 507, "774": [449, 486, 507], "7742": 507, "7743835449219": 468, "774e": 496, "775": [67, 505, 507], "7752246952377783": 479, "7755386e": 501, "776": 507, "7760": 526, "7763307219821931": 316, "7765957e": 501, "77678": 462, "7768": 507, "7769": 507, "7769775": 512, "777": 449, "7771617763704126": 316, "7774": 507, "77751797": 97, "7778": 507, "777e": [67, 466], "778": [449, 468, 496], "77827941": 503, "778279410038923": 503, "779": [469, 496], "7796942": 526, "779e": 468, "77e": [471, 496], "78": [503, 504, 507, 514, 524], "780": [31, 127, 507], "7800e": 468, "7803": 507, "7804888e": 501, "7808": 507, "780e": 127, "78188": 472, "78188096": 97, "782": [507, 513], "78231838515889": 490, "7826": 507, "7827941": 503, "78279410038923": 503, "783": [449, 496, 526], "78332719": 479, "78333": 479, "7834": 507, "783587001383003": 512, "7838": 507, "783e": 479, "784": [450, 469], "7844": 507, "7847": 507, "78499999999997": 561, "785": [507, 561], "7853981633974483": 596, "786": 507, "7863": 507, "787": [67, 176], "7871694602003052e": 488, "7873": 507, "7875405607868806": 508, "7876233e": 501, "788": 496, "7887840e": 501, "788e": 496, "789": 449, "78910994": 97, "7892": 507, "7894": 479, "78952750835169": 490, "78e": 505, "79": [464, 496, 507], "790": 449, "7903": 507, "790491": 568, "791": [450, 461, 467, 469, 507], "7913e": 468, "7915": 507, "792": 490, "7922": 462, "793": [450, 461, 472, 588], "794": 498, "7940": 507, "7941697": 498, "79432823": 506, "7943282347": 498, "7945": 507, "79469899": 479, "79470": 479, "794e": 472, "7959": 507, "79591836734692": 483, "796": [450, 505], "7961": 507, "7962": 507, "797": 450, "7971": 507, "7972": 502, "7973": 507, "798": 450, "798218": 462, "7986": 507, "799": 468, "7990194e": 501, "7991": 507, "7994": 507, "7997221e": 501, "799999952316284": 496, "7c": 503, "7d": 496, "7e": [496, 505, 506, 507], "7e955f": 431, "7mhzx": 493, "7oea": 463, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 101, 103, 106, 110, 111, 112, 117, 130, 150, 151, 200, 207, 242, 244, 318, 391, 395, 398, 399, 408, 432, 433, 436, 438, 439, 443, 444, 445, 448, 449, 450, 453, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 533, 535, 544, 549, 553, 558, 568, 579, 587, 604], "80": [179, 470, 472, 497, 503, 507, 513, 549, 578, 587], "800": 507, "8000": 507, "8008": 507, "800932": 496, "801": [526, 549], "8015": 507, "801668796295": 496, "802": [505, 507, 526], "803": [468, 507], "8031431e": 501, "8037": 507, "8037638e": 501, "8038": 507, "804": [505, 507], "804492": 486, "8045": 507, "8057": 507, "8062607e": 501, "80683246": 501, "807": [472, 507, 565], "8071": 472, "8072": 507, "807201": 526, "8075": [496, 526], "8075185": 496, "808159": 583, "8084e": 477, "8085": 507, "808693108304212e": 499, "80871364": 97, "809": 507, "8090746": 512, "8095": 507, "809505": 496, "8098": 507, "80982039": 501, "80e": 463, "81": [439, 463, 488, 507, 568], "810": [450, 496, 507], "810000": 486, "8100e": 463, "8102": 507, "810e": 496, "811": 450, "811533729700176e": 499, "812": [450, 507], "8120751984899354e": 499, "8121": 507, "81221696315049e": 499, "8122425528751894e": 499, "8122e": 499, "8123587278110435e": 499, "81292578645326e": 499, "812951376050203e": 499, "813": [450, 490, 507], "8137": 507, "814": 450, "81482879e": 493, "8150": 526, "8155": 507, "815791997446166e": 499, "816": 450, "8160964882165554": 316, "8161": 507, "81632653061222": 483, "81699e": 462, "816e": 496, "817": 517, "818": [461, 498, 510], "8182": 507, "818388e": 526, "81847286": 491, "8187": 507, "8187e": 470, "818e": 466, "819": 496, "8199": 507, "81e": 568, "82": [67, 431, 477, 496, 507, 524, 553], "820": 450, "8203": 486, "8204": 507, "8205513": 512, "820562952023891": 316, "82073484337354e": 493, "8219": 507, "8221": 507, "8222980e": 501, "8223": 507, "823": [468, 507], "824": [450, 461, 505, 517], "8241471833009617": 508, "8248": 507, "825": [450, 462, 480, 496, 507], "8254": 507, "8255": 507, "8256": 526, "826": 450, "8261": 507, "8263": 507, "826414166666": 94, "8268": 507, "827": 450, "8272": 528, "82739": 472, "8279": 507, "828": 507, "8287": 507, "8289": 507, "8290458e": 501, "8293": 526, "82946153": 526, "8296": 507, "8299": 507, "82e": 478, "83": [30, 67, 83, 85, 94, 103, 106, 110, 111, 176, 179, 194, 195, 204, 207, 468, 469, 470, 472, 478, 488, 497, 502, 503, 504, 507, 511, 514, 523, 524, 544, 547, 549, 550, 553], "830": [450, 507], "8300": 526, "831": [450, 507], "832": [450, 507], "83242471": 501, "8329": 507, "833": [450, 469, 472, 507], "8333": 507, "833333333336": 491, "8335": 507, "834": 450, "8341884287660133": 508, "8346": 507, "8349780e": 501, "835": 450, "8353": 507, "8358": 507, "835e": [469, 479], "835fals": 466, "836": [450, 491, 496], "836731": 496, "836734693877551": 483, "8369650e": 501, "837": [450, 490, 505], "8377268e": 501, "838": 472, "8383396349722769": 316, "8396": 507, "84": [24, 431, 468, 470, 479, 496, 505, 507, 553], "840": [450, 472, 507], "8402": 507, "8403": 507, "841": 496, "8418": 507, "84196311": 97, "842": [450, 496], "84233": 472, "842x": 138, "843": [462, 491], "8431": 507, "8436": 507, "843864549579762e": 523, "843e": 67, "8441040e": 501, "844770648146": 94, "8448": 507, "8449575657133206": 316, "845": 451, "84529": 496, "8455480e": 501, "845693": 462, "8457": 507, "846": [472, 496, 507, 604], "8460": 507, "8462": 507, "8467": 507, "8468": 507, "847": 450, "8472": 507, "8475576e": 501, "8475650e": 501, "8485": 507, "849": 507, "8496": 507, "84e": 477, "85": [87, 91, 457, 479, 507, 558, 559], "8501": 507, "8504": 507, "851": 450, "85157506": 526, "8515948e": 501, "8518": 507, "85188496e": 501, "852": 507, "85202": 526, "8522": 507, "85287": 513, "852e": 496, "8532": 507, "8538": 507, "854": [450, 507], "854166666664": 491, "85416667": 489, "85469291": 97, "855": 450, "85527": 479, "85527359": 479, "8555": 507, "8555500e": 501, "856": 507, "85624": 474, "85625": 474, "8563": 507, "8564": 507, "8568": 526, "856e": 496, "857": 507, "8570719e": 501, "85722435185": 496, "8577": 507, "858": [450, 461, 463, 467, 507], "858e": 496, "859": [450, 468], "8590": 507, "85900": 479, "85900392": 479, "85925": 526, "8593054": 496, "8599": 507, "859e": 472, "85e": 496, "86": [461, 466, 468, 469, 472, 503, 507, 526, 537], "860": 496, "861": 526, "8610": 507, "86111111": 489, "861150": 466, "8613613e": 501, "8620": 486, "8623": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "8627": 507, "863": [461, 490, 492, 507], "864": [450, 507, 526], "865": [450, 472], "86676": 513, "8669": [462, 507], "8671": 507, "8672": 479, "8676": 507, "86793518066406": 464, "868": [450, 496, 507], "86831929": 97, "8699": [462, 507], "8699165e": 501, "87": [67, 479, 503, 507], "870": [67, 450, 507], "8701": 507, "8704": 472, "871": [450, 507], "8715": 507, "871719011827246e": 493, "872": [450, 472], "8726": 507, "8729": 507, "873": 469, "8732": 507, "8733348": 512, "8735": 507, "8736082200157": 480, "873659477745188": 508, "874": [464, 507], "8742": 507, "8743": 507, "875": [450, 507], "8756": 507, "876": [505, 507], "87621184": 475, "8769": 507, "8769240e": 501, "876e": 472, "87710186": 97, "877551020408161": 483, "877563": 496, "878": [496, 505], "87897": 479, "87897418": 479, "879": [461, 472, 476], "8792": 507, "8799": 507, "8799800e": 501, "88": [431, 453, 470, 479, 480, 493, 496, 503, 507, 526], "8808": 507, "880e": 472, "881": [450, 461, 462, 472, 507, 510], "8815212313941426": 508, "8817": 507, "882": 67, "882138": 582, "8824": 507, "882877": 105, "883": [450, 507], "8834862e": 501, "883e": 67, "884": 450, "8843": 507, "88470839": 506, "8848": 507, "885": 450, "8857": 507, "886": 496, "8865": 526, "8867": 507, "88781": 472, "888": [450, 507], "8885": 507, "8885138e": 501, "889": 496, "8893": 507, "8893600e": 501, "8899": 507, "88e": [466, 496], "89": [33, 503, 507], "890": 507, "8900": 507, "8908866e": 501, "8909e": 490, "890e": 67, "891": [461, 481, 485], "892": [505, 507], "89243456": 526, "8926": 526, "892627291553865": 490, "8928": 507, "89287": 462, "8929": 507, "893": [450, 461, 489, 492], "894": [461, 466, 510], "8943121e": 501, "8945": 507, "89492101e": 499, "895": [491, 507], "8952": 507, "8954039e": 501, "89595846": 506, "896": 507, "8962": 507, "8969": 507, "897": 507, "8970": 507, "89709472": 526, "8972": 507, "89795918367346": 483, "898": [450, 507], "8983": 507, "8986348363207728": 508, "89873": 479, "8989": 507, "8989213": 479, "898e": [472, 496], "899": 67, "8990": 507, "8995": 507, "8997": 507, "8999": 479, "899a": 286, "89e": 497, "8e": [466, 477, 480, 482, 505, 507, 513, 587], "9": [31, 33, 35, 67, 83, 87, 91, 200, 212, 242, 244, 348, 355, 388, 395, 396, 400, 408, 428, 434, 436, 447, 450, 452, 455, 457, 462, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 552, 560, 564, 565, 566, 591, 599, 604], "90": [57, 67, 414, 471, 475, 478, 479, 496, 503, 506, 507, 528], "900": [496, 507], "9002269877996247": 491, "900269": 501, "9008": 507, "9021": 507, "9023670e": 501, "9024": 507, "90242058e": 497, "9026": 507, "9032163": 86, "9039": 507, "904": 526, "905": 496, "9053655e": 501, "9053906e": 501, "9057": 507, "905717": 564, "9058": 507, "906": [450, 496], "90605275e": 513, "9066": 507, "90677811e": 498, "90685": 472, "907": 496, "9070": 507, "9073": 507, "9074812e": 501, "9077294": 512, "9088": 507, "908e": 468, "909": 507, "9091": 507, "9098": 507, "90d": 608, "90e": [103, 469, 477, 497], "91": [471, 503, 507, 509, 553], "9100": 507, "911": 450, "9114": 507, "911552441438736e": 488, "912": [496, 507], "912525e": 526, "912779907405": 496, "9129": 507, "9131": 507, "913196574074": 488, "9137": 507, "913e": 472, "914": [67, 507], "914867": 126, "9149": 507, "915": 496, "91507": [103, 497], "91612243652344": 464, "9163195e": 501, "9167": 507, "91719": 497, "9177": 507, "918": 67, "918365": 496, "9183673469387759": 483, "9189": 507, "919": [450, 507], "9194": 507, "9195": 507, "919e": 496, "91e": 505, "92": [471, 472, 503, 507, 512], "920": [468, 507], "9201": 507, "92052435e": 498, "9205875e": 501, "921": [469, 507], "9213": 507, "9214": 507, "9215375e": 501, "922": 507, "9221": 507, "92234009259": [428, 488], "923": 507, "9231": 507, "9238": 507, "924": 469, "9240": 507, "9240e": 506, "9249": 507, "92490": 472, "925106": 479, "9254": 507, "926": 507, "9266": 507, "9269494e": 501, "9277492e": 501, "928": 496, "9280475e": 501, "9283": 507, "9284": 507, "929": [462, 469], "9290": 507, "9293": 507, "929597172179024": 523, "93": [67, 125, 127, 471, 472, 503, 507, 512], "930": 507, "9302": 507, "93026": 496, "9303": [496, 526], "9304": 507, "9305": 507, "9309": 507, "93128e": 462, "932": [450, 461, 467, 507], "9323": 507, "9325": 507, "93271046296": 488, "933": [450, 507], "9332549000000": 526, "934": 507, "9343": [462, 507], "935826709880043": 494, "93702": 513, "9377": 507, "938": 507, "9382336444241555": 508, "9387755102040822": 483, "938e": [479, 496], "939": [299, 305], "9391360e": 501, "93988308": 97, "93e": 496, "94": [471, 496, 503, 507, 512, 523, 526], "940e": 496, "940fals": 466, "9411": 507, "94111838": 97, "9412": 507, "9415": 507, "94186555556": [428, 488], "9419": 507, "9432": 507, "943282347242818": 523, "9437": 507, "944060876": 498, "9441e": 474, "945": 507, "9453950989269149": 508, "9456": 507, "9462": 479, "946923": 280, "94722599": 479, "94723": 479, "9474": 507, "947e": 472, "948": [461, 467, 468], "948683": 462, "9489": 507, "9489822e": 501, "949": [461, 488, 492, 505, 507, 517], "9499210e": 501, "94e": [479, 496], "95": [33, 67, 157, 163, 165, 166, 167, 169, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 471, 472, 479, 486, 496, 497, 499, 503, 504, 507, 512, 558, 605], "950": [450, 507], "9500979841335693": 316, "9502": 507, "95024536e": 499, "950e": 468, "951": 507, "9512": 507, "9515": 507, "9516": 507, "9519": 507, "952": 67, "9521": 507, "9529719e": 501, "953": 505, "9532": 507, "9537056583888585e": 420, "9539": 507, "954": 507, "95421509259": 488, "95451985e": 127, "9546285068162436": 508, "9549": 507, "9550": 507, "95615": 462, "9565": 507, "957": 67, "9570": 507, "9580e": 470, "9581": 507, "958559": 586, "95883": 526, "959198": 496, "9593": 507, "959d": [52, 53], "96": [431, 463, 471, 497, 503, 507, 568], "960": 507, "9600": 507, "9606": 507, "9606540e": 501, "9608912e": 501, "9615": 507, "9618": 507, "9618e": 486, "9619812963": 488, "9625": 507, "9626e": 490, "96374320": 475, "9645e": 490, "965144": 584, "9652": 507, "9659": 507, "966": [450, 507], "96602": 474, "967546": 472, "9677107409819438": 316, "968": [468, 479, 507], "96814": 526, "96833546296": [496, 513], "9684": 507, "969": 496, "9692": 507, "9692e": 463, "96e": 466, "96r": 503, "97": [471, 496, 501, 507, 508, 524], "970": 490, "97003": 526, "9705": 507, "97054": 472, "9709": 507, "970e": 496, "971": 507, "97116": 479, "9712": 507, "9717": 507, "9721": 507, "972194607053448e": 493, "973": 496, "9730e": 478, "97369425926": 488, "9738": 507, "9744": 507, "9746": 507, "9748": 507, "974e": 496, "975": 450, "9751": 507, "9756": 507, "9757": 507, "97596": 472, "976": [450, 507], "97749": 479, "97749371": 479, "9776920e": 501, "978": 507, "9780": 507, "9782": 507, "979": [67, 450, 503], "97934": 472, "979591836734677": 483, "97978": 83, "97e": 496, "98": [83, 358, 464, 470, 471, 472, 477, 488, 490, 501, 507, 523], "980": 67, "980328149735046e": 507, "98049": 472, "9814": 507, "98149518519": 488, "9816452e": 501, "9817": 507, "982": 507, "982075849517389e": 506, "9822": 507, "98258": 472, "983": [461, 477, 485, 507], "9833462074166": 496, "9834338e": 501, "98359211280635647": 479, "983678": 590, "984": 507, "98429": 472, "9845": [462, 507], "9847": 507, "9847406e": 501, "9849": 507, "984e": 472, "985": [450, 466, 507], "9853": 507, "985502122122975": 508, "986": 507, "9862": 507, "9863": 507, "9866": 507, "9868": 507, "9868439189392118": 523, "987": 507, "9873": 507, "9875e": 490, "9876": 462, "988": [450, 496, 505], "9880": 507, "9880e": 490, "9882": 507, "988409870698051e": 52, "988413141629203e": 420, "9889": 507, "989": 507, "9890": 526, "989693": 598, "989779066475214e": 420, "98e": 496, "99": [358, 471, 472, 474, 486, 498, 507, 524, 526], "990": 507, "991": [496, 507], "9910796e": 501, "9912648e": 501, "9912712e": 501, "9915": 507, "9919": 507, "992": 507, "9929": 507, "993": 464, "9931": 526, "9935": 507, "993998": 558, "994": 450, "994e": 496, "995": [505, 507], "9952623149688797": 523, "9957": 507, "9959": 507, "996": 507, "9963": 507, "9969731e": 501, "997": 450, "9977859e": 501, "9978": 526, "9979": 507, "998": 480, "99848e": 513, "99878762e": 498, "999": [50, 166, 169, 496, 507], "99919925926": 244, "999458": 559, "99993896484375": 468, "9999912037958": 479, "999999": 496, "99999994": 86, "9999999995": 496, "9999999997835": 464, "99999999999545": 493, "999999999997": 481, "9999999999977": 496, "9999999999978": 489, "9999999999998": 496, "99999999999994": 496, "99999999999999": [471, 496], "99e": 496, "9d": 483, "9e": [463, 466, 496, 507, 587], "A": [16, 19, 20, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 109, 110, 111, 125, 126, 127, 136, 139, 144, 145, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 218, 219, 220, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 294, 298, 306, 307, 318, 327, 380, 381, 382, 384, 385, 392, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 430, 432, 436, 437, 438, 439, 440, 443, 445, 446, 449, 450, 451, 452, 454, 456, 457, 458, 459, 462, 464, 470, 472, 477, 479, 480, 483, 488, 489, 490, 491, 494, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 518, 522, 524, 526, 528, 536, 537, 538, 540, 541, 549, 550, 552, 553, 555, 558, 597, 598, 601, 602, 605], "AND": [504, 505], "AS": 421, "And": [286, 391, 394, 409, 411, 417, 423, 464, 466, 468, 469, 477, 481, 483, 490, 497, 499, 503, 504, 506, 507, 512, 523, 524, 526], "As": [83, 318, 348, 391, 392, 394, 399, 403, 404, 405, 407, 409, 417, 418, 421, 428, 433, 452, 462, 463, 464, 468, 469, 470, 472, 474, 475, 479, 481, 482, 488, 489, 490, 493, 494, 495, 496, 497, 499, 502, 503, 506, 507, 509, 513, 523, 526, 540, 549, 605], "At": [269, 405, 408, 417, 418, 420, 422, 436, 481, 503, 512, 601], "But": [391, 396, 399, 405, 410, 418, 422, 428, 452, 468, 469, 499, 509, 512, 523, 603], "By": [19, 20, 26, 50, 65, 87, 91, 102, 103, 106, 110, 111, 124, 128, 132, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 176, 183, 193, 195, 196, 197, 199, 205, 208, 209, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 239, 240, 242, 244, 246, 247, 250, 254, 255, 256, 258, 259, 260, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 388, 391, 417, 418, 419, 437, 438, 440, 481, 482, 489, 494, 499, 503, 507, 509, 524, 547, 551, 558, 559, 560, 606], "FOR": [139, 306], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 110, 111, 120, 122, 124, 125, 127, 128, 129, 132, 133, 135, 136, 153, 154, 155, 160, 161, 166, 169, 176, 181, 182, 183, 186, 187, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 253, 254, 255, 256, 257, 258, 260, 261, 262, 266, 267, 268, 270, 271, 273, 274, 275, 277, 281, 282, 284, 297, 299, 303, 305, 315, 321, 336, 390, 391, 392, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 416, 417, 418, 419, 422, 423, 427, 428, 430, 433, 434, 435, 437, 438, 439, 440, 443, 450, 454, 457, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 481, 483, 486, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 518, 519, 523, 524, 526, 528, 535, 536, 538, 540, 545, 550, 552, 553, 559, 564, 598, 602, 603, 605, 606, 607], "IN": [92, 100, 253], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 122, 124, 125, 126, 127, 128, 129, 130, 132, 136, 139, 143, 144, 146, 148, 153, 154, 155, 161, 164, 166, 169, 170, 172, 173, 176, 178, 179, 182, 183, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 214, 217, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 293, 315, 318, 330, 331, 336, 377, 380, 384, 385, 386, 387, 391, 392, 393, 394, 396, 398, 399, 404, 405, 407, 408, 409, 412, 413, 414, 416, 417, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 451, 452, 453, 462, 464, 466, 468, 470, 471, 474, 477, 479, 482, 486, 488, 489, 490, 491, 493, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 512, 513, 514, 526, 538, 540, 545, 551, 553, 560, 562, 576, 603, 604, 605, 606], "In": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 87, 88, 91, 94, 102, 104, 109, 124, 127, 136, 153, 172, 195, 197, 200, 203, 209, 217, 219, 281, 293, 311, 313, 331, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 428, 433, 434, 435, 436, 437, 438, 439, 440, 443, 454, 457, 462, 463, 464, 466, 468, 469, 470, 471, 472, 475, 477, 478, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 513, 514, 518, 523, 524, 526, 536, 538, 540, 545, 548, 549, 550, 552, 553, 554, 558, 559, 564, 578, 598, 601, 602, 603, 604, 605, 606, 607], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 110, 111, 112, 115, 117, 125, 144, 153, 154, 155, 157, 161, 164, 165, 166, 167, 169, 179, 182, 186, 187, 192, 196, 197, 199, 201, 204, 205, 208, 209, 211, 223, 224, 227, 230, 231, 233, 234, 235, 240, 244, 246, 247, 250, 254, 256, 258, 265, 269, 270, 272, 273, 274, 275, 278, 282, 297, 301, 303, 304, 326, 340, 345, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 422, 423, 427, 429, 433, 434, 435, 436, 440, 443, 445, 446, 447, 452, 454, 456, 457, 458, 459, 462, 469, 475, 478, 480, 482, 486, 491, 494, 496, 497, 498, 499, 502, 503, 504, 506, 507, 509, 512, 513, 514, 515, 518, 523, 524, 526, 528, 529, 536, 537, 539, 540, 544, 545, 547, 549, 553, 569, 572, 573, 575, 576, 580, 581, 583, 584, 585, 586, 600, 601, 602, 603, 604, 605, 607], "Its": [28, 403, 417, 418, 443, 445, 483, 489, 509, 524, 542, 543, 544, 546], "NOT": 504, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 402, 412, 415, 416, 451, 453, 460, 483, 493, 496, 499, 502, 503, 507, 526], "Not": [106, 110, 111, 198, 204, 206, 399, 587], "ON": [103, 106, 135, 183, 184, 185, 193, 389, 397, 445, 459, 462, 463, 468, 471, 475, 479, 488, 489, 491, 499, 502, 509, 511, 540, 549, 602, 604, 606], "OR": [103, 110, 497, 504, 505], "Of": [391, 394, 428, 477, 497, 503, 507, 513, 603, 606], "On": [21, 147, 171, 177, 178, 181, 297, 304, 312, 391, 392, 397, 399, 406, 407, 421, 423, 424, 425, 426, 447, 477, 478, 499, 518, 605], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102, 103, 106, 110, 111, 229, 238, 253, 344, 391, 392, 397, 399, 400, 401, 402, 405, 407, 408, 409, 417, 420, 457, 464, 469, 475, 488, 499, 502, 503, 504, 507, 523, 526, 549, 553, 578, 603, 605], "Ones": 318, "Or": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 392, 410, 411, 469, 477, 493, 497, 498, 503, 512, 513, 538], "Such": [403, 544], "THE": [139, 306], "That": [16, 19, 20, 84, 90, 105, 126, 214, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 391, 392, 396, 405, 408, 411, 499, 526, 603], "The": [11, 15, 16, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 173, 177, 178, 182, 183, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 284, 285, 286, 292, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 312, 318, 330, 336, 338, 339, 342, 358, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 429, 432, 433, 435, 436, 437, 438, 439, 440, 443, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 475, 477, 479, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 518, 519, 523, 524, 525, 526, 528, 529, 530, 531, 535, 536, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 558, 560, 562, 563, 564, 568, 576, 578, 587, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608], "Their": 504, "Then": [67, 103, 108, 110, 394, 396, 401, 404, 406, 407, 408, 409, 415, 425, 464, 468, 477, 478, 481, 486, 488, 499, 504, 506, 509, 524], "There": [87, 91, 144, 391, 392, 396, 397, 398, 400, 405, 406, 407, 408, 409, 410, 411, 412, 415, 418, 420, 422, 424, 425, 451, 459, 479, 483, 494, 495, 496, 497, 499, 501, 502, 504, 505, 514, 528, 536, 537, 540, 553], "These": [77, 95, 201, 285, 391, 392, 396, 397, 402, 404, 405, 406, 407, 411, 412, 417, 420, 435, 437, 438, 439, 443, 451, 457, 462, 478, 480, 481, 490, 494, 495, 497, 503, 506, 507, 508, 514, 516, 518, 528, 545, 550, 552, 553, 604, 605, 606], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 100, 105, 109, 124, 126, 128, 132, 195, 207, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 285, 297, 381, 382, 393, 394, 398, 399, 402, 403, 404, 406, 407, 412, 413, 414, 415, 416, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 438, 439, 443, 445, 451, 452, 454, 457, 462, 463, 464, 466, 468, 469, 470, 471, 474, 475, 477, 479, 480, 481, 482, 483, 486, 488, 489, 490, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 518, 523, 526, 536, 537, 538, 541, 545, 547, 549, 550, 558, 601, 603, 604, 605, 608], "With": [83, 101, 248, 391, 400, 401, 417, 439, 452, 509, 536, 605], "_": [103, 110, 130, 240, 260, 391, 392, 405, 415, 417, 468, 471, 475, 495, 496, 499, 505, 509, 536, 545, 549], "_0": [50, 51], "_1": [106, 111, 537], "_2": [106, 111], "__all__": 391, "__array__": 318, "__array_ufunc__": [470, 481, 515, 591], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 330, 397, 402, 419, 439], "__class__": [391, 415, 495, 534], "__dict__": [16, 84, 90, 105, 126, 391], "__enter__": 369, "__eq__": 445, "__exit__": 369, "__fields__": 418, "__getitem__": [401, 402, 403, 459], "__init__": [16, 84, 90, 105, 126, 204, 281, 391, 397, 403, 415, 420, 454], "__int__": 336, "__len__": 401, "__main__": [264, 391, 509, 521, 603], "__name__": [391, 475, 488, 489, 490, 493, 495, 521, 534, 603], "__neq__": 445, "__pydantic_extra__": [16, 84, 90, 105, 126], "__pydantic_fields_set__": [16, 84, 90, 105, 126], "__repr__": [391, 438, 452], "__str__": [391, 403, 418, 435], "__subclasses__": 495, "__version__": 427, "_build": [392, 422], "_check_interv": 457, "_compute_flux_spati": 443, "_covari": [229, 253], "_data": 415, "_dataset": 392, "_dom_class": [477, 486, 503, 523, 524], "_energy_t": 415, "_err": 493, "_errn": [128, 129, 132, 133], "_errp": [128, 129, 132, 133], "_evaluate_timevar_sourc": 457, "_f_cash_root_cython": 310, "_factr": 499, "_fields_set": [16, 84, 90, 105, 126], "_i": 130, "_k": [103, 110, 536], "_l": 536, "_lat": 391, "_lon": 391, "_map": 384, "_model": 125, "_new_attribut": 391, "_old_attribut": 391, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 105, 126], "_parse_dataset": 420, "_phi": 391, "_prior": 419, "_propagate_error": 442, "_reco": 391, "_repr_html_": 391, "_row_index": 69, "_sampl": 420, "_sample_coord_time_energi": 457, "_sampler": 420, "_scan": 499, "_time_group": 415, "_time_t": 415, "_true": 391, "_type": [419, 509], "_types_namespac": [16, 84, 90, 105, 126], "_update_model": 420, "_was_": [16, 84, 90, 105, 126], "_wc": 565, "_weight": 419, "a_": [106, 111, 156, 542, 545, 605], "a_i7gewr": 493, "a_off": 605, "a_on": 605, "a_scan": 509, "aa": [87, 91, 318, 417], "aaguasca": 454, "ab": [33, 38, 50, 52, 53, 58, 60, 61, 62, 64, 65, 83, 88, 138, 156, 209, 217, 219, 250, 285, 286, 495, 496], "abc": [18, 56, 99, 123, 175, 194, 199, 502], "abcmeta": 502, "abdalla2018": [549, 550, 602], "abeysekara": 59, "abil": [415, 420, 507, 509], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 401, 406, 409, 420, 464, 486, 488, 489, 507, 509, 516, 518, 603], "about": [11, 13, 84, 90, 105, 126, 151, 156, 219, 238, 239, 244, 248, 284, 348, 391, 394, 396, 400, 407, 408, 410, 411, 412, 416, 417, 419, 421, 422, 427, 428, 447, 448, 452, 453, 454, 463, 466, 472, 474, 475, 477, 478, 479, 481, 496, 501, 503, 506, 507, 513, 524, 526, 536, 537, 603, 606], "abov": [29, 44, 52, 53, 83, 124, 126, 127, 130, 134, 135, 136, 144, 145, 171, 206, 380, 382, 391, 392, 394, 397, 400, 401, 403, 405, 407, 408, 409, 410, 411, 415, 420, 424, 425, 428, 462, 472, 479, 481, 482, 483, 488, 491, 493, 498, 499, 502, 503, 504, 506, 507, 508, 509, 512, 513, 514, 523, 534, 536, 537, 544, 547, 553, 602, 603, 604, 605, 606], "abramowski": 156, "abruptli": [391, 416], "abs_path": 326, "absenc": [406, 475, 502, 504, 549, 604], "absolut": [82, 91, 107, 150, 151, 152, 153, 156, 158, 160, 163, 168, 196, 197, 199, 201, 205, 208, 209, 322, 348, 368, 372, 538], "absolute_tim": 607, "absopt": 409, "absorb": [282, 401, 414, 450, 568], "absorbedspectralmodel": [437, 450], "absorbt": 414, "absorpt": [231, 409, 440, 450, 459, 461, 465, 467, 518, 554, 567, 588], "abstract": [16, 56, 59, 84, 90, 99, 105, 123, 126, 167, 175, 180, 194, 196, 199, 208, 262, 402, 439, 552], "abstractsetintstr": [16, 84, 90, 105, 126], "ac": [311, 313], "acada": 417, "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 106, 107, 111, 124, 125, 127, 129, 171, 188, 193, 195, 196, 197, 199, 207, 208, 209, 229, 253, 298, 389, 395, 396, 397, 398, 399, 400, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 444, 448, 457, 459, 462, 463, 469, 470, 471, 475, 479, 482, 497, 502, 503, 507, 513, 536, 552, 559, 578, 604, 605], "acceptance_off": [106, 107, 111, 124, 125, 127, 171, 181, 403, 462, 464, 468, 471, 475, 536, 605], "acceptance_on": [124, 125, 127], "acceptang": 124, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 77, 82, 83, 87, 91, 103, 124, 136, 164, 194, 195, 204, 207, 304, 326, 391, 399, 400, 401, 402, 404, 407, 415, 422, 424, 427, 432, 433, 440, 447, 448, 450, 451, 457, 458, 466, 468, 469, 470, 477, 493, 496, 499, 501, 505, 506, 507, 512, 515, 523, 524, 526, 535, 540, 551, 552, 553, 601], "accessor": 503, "accident": [513, 603], "accomplish": 498, "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 83, 87, 91, 103, 106, 110, 111, 120, 125, 148, 154, 164, 171, 195, 201, 217, 219, 311, 313, 315, 380, 401, 402, 405, 406, 409, 415, 417, 437, 446, 458, 465, 475, 488, 497, 502, 506, 508, 516, 518, 536, 537, 540], "accordingli": [209, 403, 417, 434, 440, 504], "account": [103, 106, 110, 111, 124, 125, 139, 173, 189, 229, 253, 269, 294, 298, 304, 366, 399, 404, 407, 415, 417, 439, 456, 458, 461, 462, 464, 465, 467, 468, 470, 475, 477, 483, 490, 491, 498, 499, 502, 504, 518, 524, 536, 538, 604, 605], "accur": [137, 146, 221, 409, 420, 453, 477, 499, 507, 547], "accuraci": [405, 499, 540], "acee67": 274, "aceptance_off": 403, "acero": [409, 420, 433, 435, 437, 440, 443, 445, 450, 452, 458, 459], "achiev": [16, 84, 90, 105, 120, 126, 171, 381, 382, 391, 400, 401, 402, 403, 404, 405, 407, 414, 417, 440, 503, 506, 508, 550, 608], "acknowledg": [394, 417, 429], "acquir": 428, "acquisit": 602, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 120, 391, 400, 403, 422, 480, 490, 505, 513, 536, 552, 562, 602], "act": [91, 407, 505, 564], "action": [171, 396, 401, 407, 417, 421, 422, 443, 490], "activ": [91, 304, 394, 408, 423, 424, 426, 427, 428, 437, 454, 494, 540], "actual": [184, 366, 367, 368, 390, 391, 392, 396, 400, 402, 404, 406, 407, 415, 416, 418, 421, 471, 482, 486, 489, 497, 498, 499, 502, 503, 504, 509, 513, 514, 524, 526, 547, 549, 602, 603, 605], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 82, 83, 84, 87, 90, 91, 103, 105, 106, 110, 111, 115, 116, 119, 126, 127, 196, 197, 199, 204, 205, 208, 209, 391, 392, 394, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 415, 417, 432, 433, 434, 436, 437, 438, 440, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 470, 475, 477, 478, 501, 502, 505, 506, 508, 509, 514, 536, 553, 606], "adapt": [120, 171, 214, 400, 401, 404, 405, 410, 411, 413, 414, 417, 421, 428, 433, 434, 436, 437, 438, 440, 441, 443, 446, 449, 450, 452, 454, 456, 457, 458, 459, 497, 501, 503, 504, 547, 550], "adaptiveringbackgroundestim": [181, 397], "adaptiveringbackgroundmak": [174, 437, 550], "adass": 411, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 90, 91, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 125, 126, 127, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 173, 196, 197, 199, 203, 205, 208, 209, 215, 229, 253, 269, 315, 360, 379, 388, 390, 391, 392, 394, 396, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 417, 419, 420, 421, 424, 426, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 471, 477, 478, 481, 486, 488, 491, 497, 501, 502, 503, 504, 506, 509, 512, 526, 530, 531, 540, 553, 570, 603, 606], "add_artist": [506, 558, 559], "add_cbar": [103, 106, 110, 111, 127, 150, 151, 153, 156, 157, 158, 163, 164, 165, 167, 196, 197, 199, 205, 208, 209, 229, 253, 379, 472, 474, 475, 477, 479, 486, 491, 495, 497, 501, 502, 503, 505, 506, 513, 514, 523, 524, 553, 557, 558, 559, 562, 563, 565, 608], "add_chain": 507, "add_column": [87, 91], "add_enabled_unit": [462, 471, 474, 477, 479, 486, 490, 512], "add_index": [87, 91], "add_loc": 391, "add_row": [87, 91], "add_subplot": [379, 608], "addit": [16, 19, 20, 26, 43, 84, 87, 90, 91, 103, 105, 106, 110, 111, 115, 124, 126, 128, 133, 168, 196, 197, 199, 202, 205, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 391, 394, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 410, 411, 412, 415, 416, 417, 418, 420, 422, 423, 424, 425, 434, 435, 437, 439, 440, 443, 444, 451, 452, 454, 457, 458, 459, 466, 470, 483, 491, 496, 497, 498, 499, 503, 505, 506, 507, 509, 512, 513, 524, 526, 536, 538, 540, 547, 552, 553, 600, 606], "addition": [133, 403, 497, 499, 503, 505, 506], "address": [400, 403, 404, 405, 407, 417, 509, 539], "adequ": 204, "adher": 394, "adjac": [148, 201, 443, 489, 503, 549], "adjust": [16, 67, 196, 197, 199, 205, 208, 209, 400, 402, 414, 459, 469, 494, 497, 498, 506, 508, 523, 540, 547, 602], "admit": 411, "adonath": 397, "adopt": [37, 404, 407, 412, 470, 481, 482, 495], "adress": 420, "adsab": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 250, 285, 286], "adult": 391, "advanc": [403, 407, 408, 411, 419, 424, 501, 503, 540, 602, 603], "advantag": [399, 405, 408, 415, 420, 443, 503, 509, 578, 603], "advanteg": 403, "advertis": 421, "advic": [391, 417], "advis": [392, 417, 499, 509, 518], "advoc": 391, "aeff": [16, 82, 87, 88, 106, 111, 156, 182, 190, 401, 403, 404, 439, 440, 464, 468, 469, 470, 474, 475, 477, 479, 489, 493, 501, 502, 512, 514, 515, 523, 524, 542, 547, 549, 550, 602], "aeff2d": 155, "aeff_2d": [82, 87, 156, 512, 515], "aeff_3d": 501, "aeff_ev": 501, "aeff_new": 501, "aeff_perc": [182, 464, 468, 469, 479, 489, 493, 502, 514, 549], "aegi": 231, "af": 387, "affect": [139, 391, 399, 403, 405, 416, 434, 435, 446, 455, 463, 509], "affili": [405, 417, 454], "afmhot": [505, 526], "aforement": 417, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 103, 105, 106, 110, 126, 166, 169, 222, 304, 330, 348, 372, 375, 391, 394, 396, 399, 400, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 428, 432, 439, 441, 442, 443, 445, 451, 453, 454, 455, 466, 475, 477, 489, 493, 494, 499, 503, 505, 507, 512, 514, 515, 540, 603, 607], "aftervalid": 90, "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 322, 391, 530], "again": [166, 394, 401, 403, 405, 407, 412, 418, 423, 438, 439, 442, 449, 454, 466, 468, 469, 477, 482, 483, 503, 506, 509, 513, 523, 526, 553, 603], "against": [16, 84, 90, 105, 126, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 392, 394, 408, 414, 422, 496, 498, 513, 523, 535, 538], "agent": 407, "agglom": 13, "aggreg": 418, "agil": 404, "agn": [140, 302, 405, 468, 488, 490, 494, 512], "agnost": 499, "ago": 398, "agre": [198, 201, 394, 396, 405, 417], "agreement": [391, 394, 412, 491], "aguasca": [445, 454, 455, 456, 457, 459], "aharonian": 480, "ahead": [405, 432], "ahelp": 214, "aic": 420, "aim": [391, 400, 401, 417, 420, 477, 481, 495, 508, 528, 602], "air": 512, "ait": [195, 196, 197, 521], "aitoff": 405, "aka": 526, "al": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 35, 39, 40, 57, 59, 63, 102, 120, 134, 139, 140, 156, 231, 303, 304, 306, 311, 312, 313, 392, 401, 420, 459, 472, 480, 494, 507, 528, 602], "alamo": 420, "albert": [63, 602], "albert2007": 602, "alexi": [440, 443], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 120, 134, 136, 171, 214, 297, 391, 397, 403, 404, 405, 410, 418, 420, 435, 440, 448, 449, 450, 459, 472, 494, 498, 499, 507, 514, 538, 552, 601, 605], "alia": [16, 56, 84, 90, 105, 126, 394, 526], "alias": [16, 56, 84, 90, 105, 126], "align": [87, 91, 100, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 176, 195, 196, 197, 199, 201, 205, 207, 208, 209, 391, 459, 501, 504, 506], "alisha": 445, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 103, 104, 105, 106, 108, 109, 110, 111, 124, 125, 126, 127, 128, 132, 133, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 170, 176, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 363, 364, 365, 366, 367, 368, 378, 387, 390, 391, 392, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 468, 469, 470, 474, 475, 477, 479, 480, 481, 486, 488, 490, 491, 493, 496, 497, 498, 499, 501, 503, 504, 505, 506, 509, 512, 513, 514, 515, 516, 518, 521, 523, 524, 526, 530, 536, 538, 540, 545, 549, 551, 552, 553, 554, 578, 600, 603, 604, 605], "all_quant": [125, 127], "allclos": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 198, 199, 201, 205, 206, 208, 209, 366], "alloc": [197, 205, 209], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 105, 120, 125, 126, 127, 135, 136, 166, 169, 195, 200, 202, 341, 391, 392, 394, 396, 397, 398, 401, 402, 403, 404, 405, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 434, 436, 437, 438, 439, 440, 443, 445, 452, 453, 454, 457, 459, 462, 468, 480, 490, 497, 498, 499, 501, 502, 503, 504, 507, 524, 536, 538, 540, 547, 552, 553, 600, 601, 603, 608], "allow_extra": 200, "allow_pickl": [16, 84, 90, 105, 126], "allowed_channel": [26, 495], "allski": [83, 503], "alma": 410, "almeida": 440, "almost": [390, 392, 394, 405, 513, 526], "alogrithm": 420, "alon": 396, "along": [68, 102, 125, 127, 131, 148, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 167, 168, 196, 197, 199, 205, 207, 208, 209, 302, 303, 304, 306, 329, 330, 340, 350, 351, 400, 401, 415, 420, 454, 457, 459, 474, 483, 496, 497, 501, 502, 505, 506, 507, 537, 552, 553, 571, 602], "alpha": [21, 27, 28, 48, 103, 106, 110, 111, 124, 125, 127, 171, 193, 214, 234, 235, 245, 246, 247, 261, 298, 309, 315, 388, 389, 403, 414, 416, 443, 450, 459, 462, 463, 464, 466, 468, 470, 471, 475, 477, 478, 482, 491, 496, 499, 509, 512, 558, 568, 570, 572, 574, 576, 577, 578, 587, 594, 595, 604, 605, 606], "alpha_": [106, 111], "alpha_1": [106, 111], "alpha_2": [106, 111], "alpha_norm": [231, 414, 463, 568], "alphabet": [408, 417, 433, 434, 435, 436, 437, 438, 439, 440, 443], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 214, 277, 278, 279, 281, 391, 394, 397, 398, 399, 402, 403, 404, 405, 406, 408, 411, 412, 413, 415, 418, 420, 421, 422, 452, 463, 466, 470, 472, 475, 482, 491, 495, 496, 497, 503, 504, 505, 506, 507, 512, 513, 514, 526, 528, 553, 565], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 120, 124, 125, 127, 128, 137, 138, 144, 146, 147, 168, 173, 179, 194, 201, 203, 204, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 293, 318, 326, 331, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 443, 451, 452, 453, 457, 462, 463, 464, 468, 469, 470, 471, 472, 475, 477, 479, 480, 481, 482, 483, 491, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 523, 524, 528, 536, 537, 538, 539, 540, 545, 547, 549, 552, 553, 578, 581, 600, 602, 603, 604, 605, 607], "alt": [83, 85, 88, 94, 95, 391, 607], "alt_pnt": 91, "altaz": [83, 85, 94, 159, 176, 189, 391, 501, 607], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 87, 91, 292, 390, 391, 394, 396, 400, 425, 443, 463, 468, 470, 472, 480, 496, 499, 501, 503, 505, 512, 536, 537, 603], "although": [391, 404, 405, 406, 408, 411, 415, 499, 507, 512, 563, 564, 600, 607], "altitud": 464, "alwai": [77, 83, 87, 91, 153, 201, 204, 211, 217, 219, 237, 391, 392, 394, 397, 398, 399, 401, 402, 403, 405, 408, 416, 417, 420, 425, 432, 439, 454, 455, 457, 471, 472, 477, 486, 495, 499, 502, 503, 505, 508, 509, 518, 538, 552, 553], "am": 400, "ambigu": [405, 451], "amend": 394, "among": [82, 87, 91, 103, 106, 110, 111, 137, 146, 407, 411, 412, 414, 419, 440, 499, 602], "amount": [398, 405, 419, 540], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 268, 596], "ampl_2": [157, 501], "ampl_3": [157, 501], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 102, 128, 133, 136, 196, 197, 199, 208, 209, 214, 223, 230, 233, 235, 240, 247, 251, 258, 259, 260, 268, 270, 273, 274, 275, 286, 292, 307, 402, 403, 406, 414, 420, 463, 464, 466, 468, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 486, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 505, 506, 507, 512, 513, 523, 524, 526, 538, 557, 558, 559, 560, 562, 563, 564, 565, 568, 569, 570, 572, 573, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 596, 597, 598, 605], "amplitude_err": 493, "amplitude_maximum_signific": 494, "amplitude_maximum_vari": 494, "amplitude_ref": 491, "amwjjipv": 493, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 109, 110, 111, 112, 115, 117, 118, 125, 126, 127, 128, 129, 130, 132, 133, 136, 143, 144, 145, 147, 151, 153, 154, 155, 156, 158, 161, 164, 166, 168, 169, 172, 176, 179, 181, 184, 186, 187, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 288, 297, 302, 304, 316, 318, 322, 336, 347, 351, 369, 375, 381, 382, 384, 387, 390, 392, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 428, 429, 432, 433, 436, 437, 438, 439, 440, 443, 445, 446, 447, 450, 451, 452, 454, 455, 457, 458, 459, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 483, 486, 488, 489, 490, 491, 493, 494, 496, 498, 499, 502, 503, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 521, 523, 524, 525, 526, 528, 530, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606], "anaconda": [408, 423, 424], "analog": [87, 91, 196, 197, 199, 205, 208, 209, 553], "analogi": 412, "analys": [82, 390, 391, 400, 401, 402, 403, 405, 409, 411, 413, 414, 419, 428, 429, 435, 436, 437, 439, 440, 450, 452, 455, 468, 469, 477, 489, 490, 495, 496, 504, 506, 507, 512, 513, 514, 523, 524, 528, 536, 603], "analysi": [6, 16, 35, 57, 67, 70, 72, 74, 83, 101, 103, 105, 106, 110, 111, 116, 119, 154, 155, 161, 166, 169, 178, 182, 221, 222, 390, 391, 392, 395, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 418, 420, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 436, 437, 438, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 461, 463, 466, 467, 472, 474, 475, 476, 480, 481, 483, 484, 485, 486, 487, 490, 492, 493, 495, 496, 497, 499, 500, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 524, 525, 526, 528, 538, 540, 545, 547, 548, 549, 550, 553, 581, 600, 602, 603, 605], "analysis3d": 453, "analysis_1": [461, 523, 527], "analysis_1d": 488, "analysis_2": [392, 461, 524, 527], "analysis_3d": [452, 461, 477, 485, 488], "analysis_joint": 477, "analysis_mwl": [461, 478, 485], "analysis_stack": 477, "analysisconfig": [15, 392, 469, 474, 475, 477, 488, 523], "analyt": [19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 156, 157, 165, 167, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 404, 409, 458, 459, 498, 501, 506, 538, 560, 606], "analyz": [139, 306, 401, 602], "andrea": 404, "andrew": 452, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 103, 106, 116, 119, 120, 124, 131, 136, 150, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 172, 176, 179, 180, 182, 184, 194, 195, 197, 202, 204, 207, 209, 210, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 279, 281, 285, 346, 378, 391, 397, 405, 407, 414, 418, 431, 433, 434, 435, 452, 459, 462, 464, 468, 471, 478, 481, 482, 489, 493, 496, 503, 504, 506, 508, 512, 513, 540, 545, 549, 552, 553, 558, 559, 560, 563, 564, 602, 608], "angle_incr": 179, "angular": [23, 103, 106, 116, 119, 130, 154, 155, 161, 166, 169, 172, 197, 204, 207, 209, 230, 239, 242, 279, 322, 325, 391, 407, 456, 470, 482, 491, 511, 545, 546, 602], "angular_extens": 41, "angular_s": 553, "angular_separ": [414, 456, 458, 506], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 105, 122, 126, 132, 155, 178, 196, 197, 199, 204, 205, 207, 208, 209, 318, 341, 376, 390, 391, 392, 394, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 417, 418, 420, 421, 424, 425, 426, 427, 428, 432, 433, 451, 452, 453, 458, 469, 479, 480, 483, 488, 489, 491, 493, 497, 502, 503, 505, 506, 507, 509, 512, 513, 514, 515, 523, 524, 526, 528, 537, 538, 550, 552, 553, 570, 603, 607], "ann": [23, 451], "anna": 391, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 454, 506, 528], "annoi": [391, 603], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 380, 418, 558], "announc": [391, 396, 398, 405, 407, 410, 412, 414, 416, 417, 421, 422], "annuli": [483, 553], "annulu": [129, 350, 553], "anonym": 394, "anoth": [19, 20, 26, 83, 86, 87, 91, 103, 106, 110, 111, 154, 155, 156, 161, 166, 168, 169, 198, 201, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 391, 392, 405, 406, 407, 409, 411, 412, 415, 418, 420, 423, 424, 426, 428, 437, 452, 491, 497, 503, 504, 506, 553, 603], "another_posit": 549, "answer": [499, 540], "anti": [503, 504], "anticip": 400, "anymor": 454, "anyon": [396, 398, 512], "anyth": [16, 84, 90, 105, 126, 153, 407, 603], "anytim": [394, 434], "anywai": [394, 405], "anywher": [405, 408, 410, 536], "ap": [396, 408, 416], "apart": 406, "apertur": 602, "api": [237, 395, 397, 400, 401, 402, 403, 404, 405, 407, 410, 411, 412, 416, 417, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 443, 447, 451, 452, 461, 464, 468, 469, 472, 479, 481, 489, 497, 503, 504, 505, 506, 510, 512, 513, 523, 525, 526, 527, 538, 539, 547, 600, 601, 602, 603], "apj": [299, 305], "aplpi": 452, "apologis": [432, 433, 452], "app": [87, 91, 422, 428, 451], "appar": 420, "appear": [87, 91, 391, 392, 399, 405, 418, 446, 457, 459, 496], "append": [87, 91, 92, 100, 149, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 253, 403, 404, 406, 438, 457, 464, 468, 470, 471, 477, 478, 479, 481, 489, 490, 491, 493, 497, 498, 499, 502, 505, 506, 507, 508, 509, 549], "append_ax": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 379], "appendix": [30, 136, 156, 250, 286, 307, 472, 507], "appl": 428, "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 104, 106, 110, 111, 112, 116, 117, 119, 120, 124, 127, 128, 132, 136, 153, 154, 155, 161, 166, 168, 169, 173, 179, 182, 183, 196, 197, 199, 200, 204, 205, 207, 208, 209, 217, 219, 229, 237, 253, 269, 282, 293, 294, 297, 298, 311, 313, 330, 331, 376, 380, 388, 391, 397, 398, 401, 402, 404, 406, 409, 415, 416, 417, 440, 445, 450, 451, 452, 453, 457, 459, 462, 468, 470, 481, 489, 490, 491, 493, 497, 498, 502, 503, 504, 505, 506, 507, 509, 512, 515, 524, 526, 538, 540, 547, 587, 601, 604], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 147, 391, 402, 417, 419, 439, 494, 499, 552, 602], "apply_async": [338, 339], "apply_edisp": 458, "apply_hysteresis_threshold": 504, "apply_irf": [269, 439], "apply_mask": 202, "apply_psf": [402, 436], "apply_standard_scal": 96, "apply_threshold_sensit": 124, "apply_union": 211, "approach": [87, 91, 136, 391, 397, 399, 403, 407, 412, 415, 416, 418, 457, 462, 468, 502, 518, 525, 602, 605], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 195, 196, 197, 199, 208, 209, 318, 326, 392, 470, 475, 477, 493, 503, 603], "approv": [397, 398, 399], "approx": [52, 53], "approxim": [102, 136, 137, 146, 182, 183, 195, 196, 197, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 294, 298, 329, 402, 405, 420, 434, 459, 462, 468, 499, 507, 512, 538, 549, 559, 560, 563, 564, 602], "appveyor": 448, "apr": [413, 430], "april": [411, 418, 439], "apt": 425, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 105, 106, 109, 110, 111, 113, 114, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 139, 140, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 182, 183, 184, 189, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 213, 214, 216, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 297, 302, 306, 311, 312, 318, 330, 336, 338, 350, 351, 366, 380, 382, 387, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 519, 523, 524, 526, 528, 529, 530, 531, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 558, 559, 568, 578, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608], "arakelian": 303, "arang": [120, 406, 472, 489, 493, 552], "arb": 509, "arbitrari": [202, 204, 205, 402, 414, 438, 451, 481, 497, 503, 509, 552, 553], "arbitrary_types_allow": [16, 84, 90, 105, 126, 418], "arbitrarytypemetadata": 418, "archiv": [417, 515, 524], "arcsec": 179, "arctan": 405, "area": [82, 88, 106, 108, 155, 156, 171, 182, 183, 190, 197, 205, 207, 209, 391, 392, 402, 447, 449, 462, 468, 481, 491, 502, 514, 515, 545, 552, 553, 602], "areasc": [450, 452], "aren": [367, 391, 405, 410, 411, 423, 424, 426], "arf": [107, 108, 111, 200, 201, 204, 205, 468, 553], "arf_ob": 107, "arffil": 107, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 105, 110, 111, 126, 150, 151, 152, 156, 157, 158, 160, 163, 164, 165, 167, 168, 197, 198, 205, 224, 237, 251, 258, 259, 260, 341, 603], "arg_in_kwarg": 391, "argmax": 494, "argmin": 494, "argpars": [396, 603], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 102, 103, 105, 106, 109, 110, 111, 126, 127, 128, 130, 132, 136, 149, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 172, 182, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 287, 293, 316, 318, 330, 336, 338, 339, 378, 379, 380, 384, 385, 386, 387, 388, 394, 397, 403, 406, 439, 440, 443, 445, 451, 457, 458, 459, 472, 477, 482, 499, 502, 503, 506, 508, 524, 538, 540, 551, 552, 553, 578, 603], "aris": [396, 407, 540], "arithmet": [224, 402, 453, 503, 504, 506, 570], "arjun": [450, 451], "arm": [33, 34, 38, 45, 447], "armstrong": 451, "arnau": [445, 454, 455, 456, 457, 459], "around": [56, 144, 172, 195, 197, 207, 209, 330, 405, 406, 470, 491, 495, 499, 504, 507, 514, 526, 540, 549, 552, 553], "arpit": 450, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 102, 103, 106, 110, 111, 120, 125, 127, 128, 129, 132, 133, 136, 139, 144, 145, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 217, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 279, 280, 281, 282, 283, 293, 294, 298, 300, 306, 312, 314, 318, 329, 330, 331, 345, 346, 347, 351, 384, 385, 390, 391, 404, 405, 409, 415, 418, 428, 438, 451, 454, 456, 458, 470, 471, 481, 482, 491, 493, 496, 497, 499, 501, 503, 505, 506, 509, 512, 514, 515, 526, 552, 553, 561, 587, 591, 604, 605], "array_lik": [103, 110, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 299, 305, 315], "array_shap": [456, 458], "arriba": [444, 447, 448], "arriv": [228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 396, 404, 437, 438, 439, 481, 602, 606], "arrow": 601, "arrowprop": 558, "arrowstyl": 558, "artefact": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "arthmet": 402, "articl": [138, 274, 396, 464, 489], "artifact": [124, 197], "artifici": 481, "artist": [204, 229, 253, 558, 559], "arxiv": [64, 65, 182, 259, 260, 274, 275, 478, 495, 496, 585, 586], "as_arrai": [87, 91], "as_artist": [204, 205, 506, 553, 558, 559], "as_energy_tru": [194, 195, 204, 207], "as_plot_cent": [198, 201, 206, 493], "as_plot_edg": [198, 201, 206], "as_plot_label": [198, 201, 206], "as_plot_scal": 201, "as_plot_xerr": [198, 201, 206], "asanyarrai": 391, "ascii": [87, 91, 127, 391], "ashton": [420, 507], "ashton2022": 420, "asid": 498, "asimov": [134, 311, 313, 509], "asinh": 472, "asinha": 82, "ask": [392, 394, 396, 398, 405, 407, 408, 411, 417, 427, 488, 526, 540, 541, 603], "asmooth": [120, 121, 410, 438, 449, 452], "asmoothestim": 412, "asmoothmapestim": [121, 412, 438, 440, 443, 472, 540], "aspect": [394, 417, 541, 603, 608], "assert": [198, 200, 201, 206, 366, 367, 368, 394, 402, 414, 503], "assert_allclos": 391, "assert_equ": 391, "assert_nam": [198, 200, 201, 206], "assert_quantity_allclos": [391, 447], "assess": [468, 470, 494], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 104, 109, 110, 195, 217, 219, 269, 279, 387, 391, 400, 403, 406, 418, 421, 464, 486, 488, 497, 499, 503, 506, 509, 524, 526, 552], "assist": 407, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 496, 526], "assoc2": [74, 75, 78, 526], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 496, "assoc_prob_lr": 496, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 87, 91, 100, 103, 106, 124, 125, 135, 136, 139, 140, 141, 142, 154, 155, 166, 169, 186, 187, 192, 205, 229, 253, 280, 306, 318, 391, 397, 407, 415, 416, 417, 418, 419, 457, 458, 463, 464, 466, 468, 472, 478, 496, 497, 498, 502, 503, 505, 506, 509, 514, 526, 537, 538, 540, 553, 605], "association_catalog": [67, 496], "association_nam": [67, 496], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 102, 124, 125, 127, 136, 137, 138, 143, 146, 147, 156, 168, 179, 193, 195, 196, 197, 199, 202, 206, 208, 209, 214, 275, 281, 285, 292, 295, 311, 313, 345, 348, 391, 394, 403, 404, 406, 414, 415, 419, 428, 429, 462, 463, 464, 468, 470, 471, 475, 481, 482, 483, 486, 495, 501, 503, 506, 509, 513, 530, 536, 538, 545, 600, 605], "assumpt": [72, 95, 103, 106, 110, 111, 120, 135, 138, 147, 311, 405, 415, 463, 507, 545, 549, 604], "astri": 97, "astrisim": 404, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 128, 189, 196, 197, 199, 208, 209, 264, 282, 391, 392, 403, 410, 411, 415, 435, 444, 448, 452, 454, 458, 470, 495, 501, 503, 512, 529, 530, 532, 533, 534, 537, 601, 602], "astro_dark_matt": [411, 461, 495, 510], "astromodel": 528, "astronom": [13, 405, 412, 451, 602], "astronomi": [11, 286, 390, 401, 405, 409, 420, 422, 429, 450, 464, 468, 475, 479, 502, 507, 512, 540, 549, 550, 600, 601, 602, 603, 604, 605, 607, 608], "astrophys": [6, 23, 322, 406, 540, 601, 602], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 103, 106, 110, 111, 116, 119, 120, 125, 127, 129, 131, 132, 136, 144, 145, 153, 155, 164, 166, 179, 193, 194, 195, 196, 197, 199, 200, 202, 204, 205, 206, 207, 208, 209, 217, 219, 223, 224, 227, 231, 233, 234, 235, 240, 243, 244, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 269, 270, 272, 273, 274, 275, 278, 280, 282, 283, 286, 297, 306, 316, 317, 318, 348, 367, 368, 377, 381, 382, 386, 390, 392, 393, 394, 396, 397, 398, 402, 404, 405, 406, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419, 421, 428, 429, 431, 435, 436, 437, 438, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 511, 512, 513, 514, 515, 518, 523, 524, 526, 530, 532, 533, 534, 536, 537, 538, 540, 542, 544, 547, 549, 550, 551, 552, 553, 558, 559, 560, 561, 562, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 604, 607, 608], "astropy_healpix": 400, "astropy_help": [391, 433, 434, 435], "astropy_introduct": 434, "astropy_timeseri": 406, "astropy_vers": 391, "astyp": [87, 91], "asymetr": 102, "asymmetr": [124, 128, 129, 132, 133, 136, 137, 146, 295, 409, 433, 439, 458, 468, 509, 523, 538, 559], "asymmetri": 501, "asymptot": [134, 605, 606], "atmospher": [406, 424, 429, 507, 512, 545, 602], "atnf": 451, "atol": [86, 100, 132, 201, 206, 366, 368, 391], "atol_ax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209], "atom": 407, "atproduction_gamma": 26, "atreye": [403, 406, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 451, 452, 453, 454, 455, 456, 457, 458, 459], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 229, 237, 253, 269, 279, 402, 412, 420, 456, 490, 499, 505, 506, 603], "attempt": [16, 84, 90, 105, 126, 394, 405, 408], "attenu": 463, "attr": 391, "attract": 411, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 181, 182, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 298, 318, 401, 403, 413, 418, 419, 420, 433, 434, 437, 438, 439, 440, 443, 445, 447, 449, 451, 456, 457, 458, 466, 470, 499, 502, 503, 504, 506, 526, 536, 552, 553, 605], "attributeerror": 391, "attrribut": 503, "aug": [404, 407, 408, 410, 430], "august": [398, 404, 407, 410, 479], "aujxnnti": 502, "authent": 394, "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421], "author2": 392, "authoris": 417, "authorship": 395, "auto": [77, 196, 197, 199, 208, 209, 392, 394, 402, 411, 438, 452, 499, 603], "autocorrel": 139, "autodiff": 409, "autogener": 411, "autograd": [402, 409], "autom": [11, 399, 407, 417, 420, 421, 422, 445, 499, 603], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 105, 113, 114, 126, 128, 132, 136, 226, 230, 237, 239, 242, 255, 266, 267, 271, 277, 281, 390, 391, 392, 394, 398, 399, 401, 402, 408, 411, 413, 417, 421, 432, 433, 439, 470, 479, 499, 503, 507, 603, 607], "automatis": 539, "autopep8": 391, "autoscal": [217, 218, 219, 220], "auxiliari": 77, "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 102, 103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 136, 137, 146, 149, 170, 176, 182, 183, 201, 214, 217, 219, 221, 225, 226, 230, 231, 239, 242, 255, 257, 266, 267, 271, 277, 279, 281, 286, 342, 379, 391, 394, 397, 398, 399, 400, 402, 403, 404, 405, 408, 409, 411, 418, 422, 423, 424, 425, 426, 427, 433, 437, 438, 439, 443, 446, 450, 452, 454, 457, 459, 463, 468, 469, 472, 493, 498, 499, 502, 504, 506, 507, 512, 513, 518, 523, 526, 528, 530, 531, 537, 539, 540, 542, 543, 544, 546, 554, 568, 601, 603, 605], "available_hdu": 88, "available_irf": 88, "available_method": [173, 182], "available_quant": [124, 125, 127, 136, 472, 498], "available_select": [176, 183], "available_stat_typ": 102, "averag": [19, 103, 106, 110, 111, 176, 183, 186, 187, 189, 190, 209, 443, 463, 464, 468, 536, 602], "averageaz": [481, 482], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 124, 176, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 297, 391, 392, 397, 398, 399, 401, 405, 409, 410, 413, 414, 416, 417, 419, 424, 426, 443, 445, 454, 456, 457, 459, 468, 475, 504, 509, 537, 540, 549, 603], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 294, 298], "awar": [391, 396, 403, 411, 417], "ax": [16, 19, 20, 26, 66, 67, 83, 102, 103, 106, 110, 111, 112, 113, 114, 115, 117, 124, 125, 127, 129, 130, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 183, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 294, 298, 378, 379, 383, 384, 385, 386, 387, 388, 391, 400, 410, 434, 438, 443, 449, 450, 451, 454, 457, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 504, 505, 506, 507, 508, 509, 512, 513, 514, 523, 524, 526, 536, 538, 540, 542, 547, 549, 550, 551, 552, 558, 559, 560, 564, 568, 597, 598, 602, 608], "ax1": [462, 472, 475, 479, 491, 504, 505], "ax2": [462, 472, 475, 479, 491, 504, 505], "ax3": [472, 479], "ax_crab_3fhl": 526, "ax_ebl": 568, "ax_excess": [464, 468], "ax_model": 568, "ax_residu": [102, 110, 111, 464, 468, 469, 470, 491, 523], "ax_s": [469, 523], "ax_spati": [103, 106, 110, 111], "ax_spectr": [103, 106, 110, 111], "ax_spectrum": [102, 110, 111, 464, 468, 469, 470, 491], "ax_sqrt_t": [464, 468], "axcols1": 503, "axcols2": 503, "axel": [400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "axes0": [196, 197, 199, 205, 208, 209], "axes_loc": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 379], "axes_nam": [195, 196, 197, 199, 204, 205, 207, 208, 209], "axesimag": [379, 380], "axesn": [196, 197, 199, 205, 208, 209], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 102, 103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 120, 124, 125, 127, 128, 129, 131, 132, 136, 137, 140, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 223, 224, 227, 228, 229, 230, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 253, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 279, 280, 282, 283, 290, 294, 297, 298, 302, 303, 304, 306, 329, 330, 340, 379, 384, 385, 386, 387, 397, 400, 413, 415, 435, 438, 439, 440, 443, 445, 450, 452, 453, 454, 457, 462, 464, 468, 469, 470, 471, 474, 475, 477, 479, 481, 482, 483, 486, 489, 490, 493, 494, 496, 497, 501, 502, 503, 512, 513, 514, 523, 524, 526, 536, 538, 540, 544, 549, 552, 553, 598, 602], "axis0": 552, "axis1": 503, "axis2": 503, "axis_edg": 384, "axis_nam": [102, 103, 106, 110, 111, 125, 127, 140, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 483, 488, 489, 490, 497, 498], "axis_new": [127, 148, 489, 494], "axis_origin": 494, "axis_rgb": 386, "axis_tru": 479, "axisymmetr": 458, "axvlin": [471, 495, 507, 508, 509], "axvspan": [205, 491], "az": [83, 85, 88, 94, 95, 391, 607], "azimuth": 513, "azur": 439, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 105, 126, 156, 214, 358, 391, 392, 394, 405, 414, 417, 421, 468, 480, 495, 496, 499, 503, 504, 506, 507, 513, 526, 532, 536, 553], "b1509": 496, "b7nspe5z": 477, "b_0": [558, 559], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 197, 330, 394, 401, 402, 405, 411, 420, 421, 468, 469, 471, 503, 506, 523, 603], "backend": [93, 102, 122, 128, 129, 132, 133, 136, 172, 213, 214, 215, 216, 221, 222, 292, 333, 338, 339, 390, 400, 402, 433, 452, 453, 457, 464, 466, 468, 469, 470, 477, 478, 479, 491, 493, 498, 499, 507, 513, 523, 524, 540, 600, 601], "backend_default": [129, 132, 136], "background": [16, 67, 82, 83, 88, 93, 103, 104, 106, 107, 109, 110, 111, 114, 115, 120, 124, 125, 127, 135, 150, 151, 152, 162, 171, 173, 174, 176, 177, 178, 179, 181, 182, 183, 189, 231, 237, 279, 287, 294, 298, 307, 308, 309, 310, 315, 387, 391, 397, 400, 403, 404, 405, 407, 411, 412, 415, 424, 429, 432, 433, 434, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458, 459, 461, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 482, 483, 486, 488, 489, 490, 491, 493, 496, 497, 499, 501, 503, 504, 509, 511, 514, 515, 518, 524, 536, 538, 539, 601, 602, 603, 605, 606], "background2d": [151, 152, 162, 439, 446, 454, 456, 458, 543], "background3d": [88, 150, 162, 189, 397, 439, 443, 451, 452, 453, 459, 501, 512, 543], "background_estim": 410, "background_interp_missing_data": 176, "background_map": [279, 402], "background_min": 149, "background_model": [103, 106, 110, 111, 136, 229, 253, 403, 404, 411, 413, 439, 474, 524], "background_oversampl": [176, 183, 502], "background_pad_offset": 176, "background_r": [410, 497], "backgroundconfig": 16, "backgroundestim": [406, 437], "backgroundevalu": 402, "backgroundirf": [150, 151], "backgroundirfmodel": 413, "backgroundmodel": [403, 413, 414, 436, 438, 439, 440, 443], "backgroundtempl": 402, "backport": [398, 416, 421], "backround": 400, "backscal": 205, "backward": [129, 396, 405, 414, 415, 416, 435, 498, 538], "bad": [86, 391, 405], "badli": 422, "balanc": 536, "band": [19, 20, 26, 68, 83, 89, 122, 125, 127, 130, 154, 155, 158, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 397, 409, 410, 414, 415, 424, 432, 466, 468, 469, 478, 479, 480, 491, 495, 496, 506, 513, 515, 535, 536, 538, 601], "bandshdu": 503, "banner": 422, "bar": [15, 82, 87, 91, 103, 106, 110, 111, 120, 132, 136, 150, 151, 209, 214, 240, 304, 339, 385, 408, 443, 446, 447, 453, 458, 491, 507, 509, 540, 575], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 298, 317, 326, 327, 330, 336, 338, 340, 365, 378, 386, 391, 392, 394, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 414, 419, 420, 422, 424, 425, 432, 434, 435, 437, 439, 440, 443, 445, 448, 449, 450, 451, 452, 458, 459, 463, 468, 470, 471, 474, 477, 478, 479, 480, 481, 483, 491, 494, 496, 498, 501, 503, 504, 506, 507, 508, 509, 512, 513, 524, 526, 528, 537, 538, 540, 550, 552, 565, 576, 601, 602, 604, 605], "base_dir": [82, 87, 326, 512, 514, 515, 528], "baselin": [82, 83, 245, 512], "basement": 434, "basemodel": [16, 84, 90, 105, 126, 418, 477], "baseradi": 254, "bash": [424, 426, 603], "bash_profil": 394, "bashrc": 394, "basi": [396, 397, 407, 410, 421, 445, 447, 491, 495], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 106, 111, 127, 244, 394, 397, 401, 402, 403, 404, 405, 407, 411, 415, 418, 428, 440, 450, 452, 461, 464, 468, 470, 484, 485, 488, 494, 495, 496, 504, 518, 525, 526, 528, 530, 531, 538, 549, 552, 602, 603], "basicconfig": [16, 479, 521], "bayesian": [221, 222, 395, 409, 461, 499, 500, 510, 518], "bayesian_block": 494, "bayesian_edg": 494, "bayesianfit": 420, "bayesianinfer": 420, "baysian": 400, "bb": [87, 91, 417], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bbtukqwj": 493, "bcf": [151, 155, 156, 157, 166, 462, 471, 486, 490, 501, 512], "becam": 398, "becaus": [16, 84, 90, 105, 126, 196, 197, 199, 203, 205, 208, 209, 391, 392, 394, 396, 398, 402, 403, 405, 406, 410, 414, 415, 418, 422, 443, 445, 459, 464, 466, 469, 483, 489, 491, 502, 503, 504, 505, 512, 513, 514, 523, 524, 526, 536, 540, 603, 606], "becom": [391, 399, 401, 402, 405, 410, 418, 420, 481, 489, 506, 507, 540, 603, 606], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 105, 124, 125, 126, 127, 168, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 318, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 423, 425, 439, 440, 443, 445, 446, 452, 453, 454, 455, 456, 457, 458, 459, 463, 469, 480, 489, 490, 491, 493, 498, 503, 506, 507, 508, 512, 514, 523, 537, 552, 587], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 105, 125, 126, 196, 197, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 330, 386, 391, 392, 394, 396, 398, 399, 400, 401, 405, 406, 407, 409, 410, 416, 421, 422, 428, 446, 452, 463, 469, 471, 488, 489, 498, 499, 503, 506, 507, 514, 518, 523, 578, 603], "beforevalid": 90, "begeman": 22, "begin": [52, 87, 91, 103, 110, 125, 127, 136, 411, 414, 417, 468, 470, 503, 506, 558, 563, 564, 569, 585, 605], "behav": [391, 401, 457, 474, 606], "behavior": [16, 84, 87, 90, 91, 95, 105, 126, 415, 442, 446, 457, 459], "behaviour": [366, 391, 413, 414, 440, 445, 451, 458, 489, 504, 513, 514, 536, 604], "behind": 493, "being": [124, 135, 197, 391, 396, 399, 405, 412, 415, 422, 470, 480, 494, 504, 529, 540, 553, 603], "belief": 509, "believ": [427, 509], "belong": [86, 415, 439], "below": [52, 53, 87, 91, 124, 136, 195, 199, 206, 207, 380, 381, 382, 386, 388, 392, 394, 395, 400, 401, 405, 407, 408, 411, 414, 415, 417, 418, 419, 420, 422, 423, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 468, 472, 491, 496, 499, 502, 504, 506, 508, 509, 512, 513, 537, 540, 559, 605], "benchmark": [407, 417, 422], "benefit": 408, "benn": 407, "berg": 602, "berge2007": [405, 549, 550, 602], "bernet": 458, "besancon": 530, "besid": [124, 136, 405, 406, 415, 420, 469, 470, 503, 507, 513, 523, 524, 553], "best": [67, 71, 74, 75, 77, 78, 80, 102, 125, 127, 128, 129, 132, 133, 144, 215, 216, 292, 294, 298, 384, 391, 394, 401, 404, 409, 417, 420, 424, 426, 463, 466, 468, 469, 470, 474, 477, 480, 491, 496, 498, 499, 507, 509, 518, 523, 538, 540, 542, 568, 574, 577, 578, 582, 605, 606, 607], "best_fit_model": 470, "best_fit_profil": 77, "beta": [27, 28, 48, 214, 245, 246, 247, 270, 414, 416, 439, 463, 466, 470, 478, 496, 499, 570, 576, 577, 578, 583, 594], "better": [391, 394, 396, 397, 398, 399, 400, 404, 405, 410, 411, 412, 415, 420, 433, 450, 451, 477, 478, 481, 491, 493, 499, 503, 504, 507, 513, 536], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 106, 111, 122, 124, 125, 127, 129, 130, 132, 134, 144, 145, 157, 163, 165, 166, 167, 169, 176, 179, 193, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 286, 292, 315, 348, 381, 382, 389, 391, 392, 394, 399, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 415, 416, 418, 419, 420, 421, 430, 440, 443, 446, 457, 462, 470, 472, 478, 480, 483, 490, 491, 494, 498, 499, 502, 503, 504, 505, 507, 509, 513, 514, 526, 536, 538, 545, 546, 549, 559, 560, 602, 605, 607], "bewar": [280, 464, 489], "bexcub": 200, "bexpcub": [195, 196, 197, 199, 208, 209, 503], "beyond": [200, 405, 415, 418, 439, 502, 528, 545], "bfg": 499, "bgstat": 449, "bi": [450, 453], "bia": [96, 153, 154, 158, 182, 451, 457, 502, 509, 544], "bias": [470, 604], "bias_energi": 153, "bias_perc": 182, "bibliographi": 602, "bic": 420, "biederbeck": [419, 458], "big": [398, 401, 408, 421, 453, 513, 604, 606], "bigger": 197, "biggest": 410, "billion": 391, "bimod": 31, "bin": [19, 20, 26, 77, 83, 86, 88, 101, 103, 106, 109, 110, 111, 113, 114, 120, 122, 124, 125, 127, 128, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 147, 148, 149, 153, 154, 155, 156, 158, 161, 164, 166, 168, 169, 176, 178, 179, 180, 182, 184, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 288, 296, 299, 305, 306, 315, 384, 386, 389, 397, 402, 403, 404, 405, 407, 410, 411, 415, 423, 424, 434, 435, 437, 438, 440, 442, 443, 445, 448, 449, 450, 451, 452, 457, 458, 459, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 536, 538, 540, 544, 545, 547, 548, 601, 602, 603, 604, 606], "bin_cent": 491, "bin_edg": 491, "bin_volum": [200, 204, 207, 553], "bin_width": [198, 201, 206, 491], "binari": [207, 209, 399, 405, 408, 417, 422, 443], "binary_dil": [209, 504], "binary_erod": [209, 504], "binary_eros": [209, 443], "binary_structur": 207, "bincent": 306, "bind": 394, "binder": [399, 421, 451, 454, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 521, 523, 524, 526, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "binlik": 127, "binned_likelihood": 128, "binneddataaxi": [434, 450], "binnedtimeseri": [127, 406], "bins_axi": 209, "binsiz": [16, 469, 474, 475, 477, 488, 523, 524], "binsize_irf": [16, 469, 474, 475, 477, 488, 523], "binsz": [103, 106, 110, 111, 112, 117, 155, 164, 166, 176, 179, 180, 184, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 407, 468, 479, 480, 481, 482, 486, 491, 495, 497, 501, 502, 503, 504, 506, 513, 514, 524, 547, 549, 550, 552, 553, 557, 559, 560, 561, 562], "binsz_irf": [103, 106, 110, 111, 115, 497, 502, 540], "binsz_irf_default": [103, 106, 110, 111, 502], "binsz_wc": [204, 205], "bintabl": [195, 196, 197, 199, 208, 209], "bintablehdu": [83, 86, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 200, 201, 207, 208, 209, 481, 503, 536], "birth": [29, 30, 31, 32, 36, 50, 51, 52, 53], "bit": [83, 144, 392, 394, 398, 399, 405, 409, 410, 418, 459, 491, 503, 553], "bitbucket": 515, "bitpix": 503, "bkg": [16, 82, 87, 88, 103, 107, 108, 110, 111, 150, 151, 152, 182, 189, 237, 413, 438, 440, 445, 459, 462, 468, 469, 474, 475, 477, 478, 481, 482, 486, 491, 497, 501, 502, 505, 512, 514, 515, 523, 524, 536, 543, 545, 602, 604, 605, 606], "bkg_": [103, 110], "bkg_2d": [87, 150], "bkg_3d": [82, 87, 151, 512, 515], "bkg_err": 491, "bkg_maker": [413, 464, 468, 470, 479, 489, 493, 549], "bkg_model": [403, 413, 419, 477, 481, 482, 486, 505, 524, 561], "bkg_ob": 107, "bkg_sy": 135, "bkg_syst_fract": [135, 462], "bkg_syst_fraction_sensit": 124, "bkgfile": 107, "black": [110, 111, 380, 381, 388, 409, 452, 454, 462, 491, 495, 502, 508, 549, 587], "blanch": [451, 452], "blanklin": [244, 428, 538, 553], "blazar": [312, 463, 493], "blind": [454, 540, 608], "bll": 526, "blob": 431, "block": [392, 394, 397, 404, 411, 422, 431, 451], "block_reduc": 452, "blue": [102, 103, 106, 110, 111, 229, 253, 381, 463, 468, 475, 477, 480, 508, 549, 587], "blur": 33, "board": [400, 411], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 391, "boller": 494, "boni": [443, 446], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 119, 124, 125, 126, 127, 128, 132, 133, 136, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 277, 278, 279, 280, 281, 297, 315, 318, 327, 330, 331, 348, 354, 357, 359, 360, 362, 388, 391, 405, 479, 496, 502, 503], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 125, 128, 129, 132, 133, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 214, 229, 253, 269, 407, 440, 477, 496, 503, 504, 505], "boost": 481, "bootstrap": [87, 91, 420, 507], "border": 91, "bose": 434, "bot": 397, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 193, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 217, 219, 391, 394, 396, 397, 402, 403, 404, 405, 406, 411, 416, 421, 433, 437, 439, 440, 443, 446, 468, 469, 470, 481, 486, 497, 498, 503, 504, 505, 508, 509, 537, 538, 540, 552, 553, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 605], "bother": 474, "bottom": [411, 413, 463, 481, 488, 489, 490, 494, 496], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 194, 195, 201, 204, 206, 207, 214, 223, 224, 227, 228, 229, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 253, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 279, 280, 282, 283, 310, 400, 503, 509], "boundari": [201, 207, 281, 311, 313, 419, 420, 448, 459, 499, 506, 507, 552], "boundary_mask": [207, 504], "boundary_typ": 201, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 391, 501], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 129, 130, 204, 207, 209, 350, 351, 400, 405, 409, 415, 420, 450, 504, 506, 553], "bpl": [223, 414, 506], "bpwl_norm": 414, "bracket": [153, 214, 455, 457], "brake": 51, "branch": [391, 394, 398, 405, 416, 422, 431], "branchnam": 391, "bratio": 528, "break": [223, 270, 397, 405, 407, 416, 437, 438, 439, 459, 569, 583], "brent": 472, "brentq": [19, 20, 26, 127, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 293], "breviti": [477, 540], "brief": 607, "briefli": [514, 515], "bright": [68, 129, 269, 285, 475, 488, 489, 504, 506, 534, 549], "brighter": 481, "brightest": 496, "brigitta": [408, 433, 435, 437, 439, 448, 449, 450, 451, 452, 453, 454, 459], "bring": 396, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 196, 197, 199, 202, 205, 208, 209, 269, 330, 459, 482, 501, 503, 552], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [223, 270, 417, 421, 461, 493, 554, 567, 588], "brokenpowerlaw": 414, "brokenpowerlawspectralmodel": [264, 270, 414, 440, 506, 569], "brought": 459, "brown": [140, 494], "brows": [87, 91, 392, 428, 526], "browser": [87, 91, 394, 422, 428, 448, 451, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 521, 523, 524, 526, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "bruno": [417, 420, 435, 437, 440, 443, 446, 450, 451, 452, 454, 455, 456, 457, 458, 459], "br\u00fcgge": [451, 452], "bsd": 417, "bst": [87, 91], "buchner": [420, 443, 507], "buchner2023": 420, "budget": [507, 540], "buffer": 369, "bug": [391, 394, 397, 398, 416, 417, 421, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 455, 456], "bugfix": [398, 400, 416, 450, 451], "build": [16, 84, 90, 105, 126, 195, 231, 391, 397, 398, 399, 404, 405, 407, 411, 415, 416, 417, 418, 421, 439, 445, 454, 459, 472, 477, 491, 502, 504, 537, 540, 545, 603], "build_doc": [355, 392, 394, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 565, 591], "built": [10, 183, 231, 358, 375, 390, 391, 392, 402, 403, 405, 407, 408, 410, 418, 422, 429, 452, 457, 496, 505, 513, 518, 536], "builtin": 526, "bullet": 396, "bump": [405, 450], "bunch": [104, 109, 392, 603], "bundl": [102, 103, 106, 110, 111, 400, 403, 422, 444, 452, 479, 497, 502, 536, 553, 601, 602], "bunit": [377, 452, 503], "bureaucrat": 396, "burkert": [17, 528], "burn": 420, "burst": [36, 37, 494], "butterfli": [451, 499, 526], "button": [454, 503], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bxa": 507, "by_alia": [16, 84, 90, 105, 126], "by_nam": [16, 84, 90, 105, 126], "byte": [16, 84, 87, 90, 91, 105, 126, 336, 369, 391], "bytearrai": [16, 84, 90, 105, 126, 336], "bytestr": [87, 91], "b\u00fchler": 431, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 202, 212, 233, 273, 299, 305, 311, 313, 318, 358, 390, 391, 408, 424, 425, 427, 444, 451, 468, 475, 491, 493, 495, 499, 507, 509, 512, 513, 528, 552, 573, 584, 603, 604, 606], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 102, "c_": 212, "c_0": [194, 195, 204, 207], "c_i": [194, 195, 204, 207], "c_n": [194, 195, 204, 207], "cabot": 459, "cach": [16, 84, 87, 88, 90, 91, 100, 103, 105, 106, 110, 111, 126, 279, 326, 327, 400, 401, 403, 410, 413, 422, 436, 440, 443, 458], "cached_properti": [16, 84, 90, 105, 126], "cahil": 445, "cal_gen_92_002": [153, 201], "cal_gen_92_002_summari": 153, "calcul": [13, 15, 19, 20, 26, 96, 139, 140, 141, 142, 182, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 265, 270, 272, 273, 274, 275, 278, 281, 282, 295, 296, 301, 303, 304, 315, 317, 340, 373, 381, 382, 401, 404, 433, 439, 443, 444, 445, 451, 456, 458, 462, 491, 494, 495, 498, 509, 523, 524, 528, 540, 602, 606], "caldb": [82, 151, 153, 155, 156, 157, 166, 201, 445, 462, 471, 481, 482, 486, 490, 501, 512], "calendar": [416, 421], "calib_vers": [513, 526], "calibr": 507, "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 102, 103, 105, 106, 110, 111, 126, 139, 140, 141, 142, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 178, 194, 195, 204, 207, 214, 222, 223, 224, 225, 226, 227, 230, 231, 233, 234, 235, 238, 239, 240, 242, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 284, 330, 342, 363, 369, 377, 380, 388, 391, 392, 394, 396, 397, 400, 403, 404, 405, 406, 407, 409, 411, 413, 415, 417, 419, 420, 422, 424, 428, 439, 443, 457, 468, 469, 479, 496, 497, 498, 499, 502, 503, 506, 513, 515, 523, 524, 526, 536, 540, 549, 550, 551, 552, 553, 603, 604, 605, 606], "callabl": [16, 45, 84, 90, 105, 126, 288, 420], "callback": [172, 603], "caller": [391, 402], "camera": [490, 501, 502], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 103, 105, 106, 109, 110, 111, 115, 120, 124, 125, 126, 127, 129, 132, 133, 134, 136, 137, 144, 146, 151, 156, 164, 166, 169, 173, 179, 182, 194, 195, 196, 197, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 214, 218, 219, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 238, 239, 240, 242, 244, 246, 247, 248, 250, 253, 254, 255, 256, 258, 259, 260, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 284, 293, 297, 302, 311, 313, 318, 330, 331, 336, 339, 348, 367, 369, 384, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 435, 437, 439, 440, 443, 445, 446, 450, 451, 452, 453, 454, 457, 458, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 523, 524, 526, 528, 530, 531, 536, 537, 538, 540, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 576, 578, 587, 598, 600, 601, 602, 603, 604, 605, 606, 608], "candel": 231, "candid": [416, 445, 496, 545], "candl": [286, 602], "cannot": [16, 67, 84, 87, 90, 91, 95, 105, 113, 114, 125, 126, 127, 211, 305, 358, 388, 394, 404, 405, 457, 501, 505, 506, 538, 553], "cao": 57, "cap": [51, 54], "capabl": [401, 513, 528], "capsiz": 509, "captur": [391, 407], "car": [103, 106, 110, 111, 176, 207, 208, 209, 229, 253, 405, 435, 479, 501, 502, 503, 524, 526], "card": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 503], "care": [125, 127, 318, 391, 400, 407, 416, 464, 470, 477, 503, 603], "carefulli": [417, 481, 482, 509], "carina": [33, 38], "carlo": [409, 420, 545, 602], "carri": [406, 414, 416, 418, 443, 466, 524], "carr\u00e9": 207, "cartesian": [41, 46, 197, 208, 209, 321, 323, 456, 526, 552], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 102, 153, 172, 184, 195, 197, 203, 204, 207, 209, 214, 217, 219, 242, 254, 277, 279, 281, 293, 305, 311, 313, 331, 348, 386, 391, 392, 394, 396, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 424, 432, 433, 436, 439, 445, 446, 451, 457, 458, 462, 464, 465, 468, 469, 470, 471, 474, 475, 477, 481, 482, 486, 488, 490, 491, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 513, 515, 518, 523, 525, 526, 535, 538, 539, 540, 550, 553, 558, 559, 560, 563, 564, 569, 578, 585, 601, 603, 605], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [103, 106, 110, 111, 176, 300, 305, 314, 391, 403, 443, 471, 474, 477, 486, 490, 497, 502, 505, 509, 523, 524, 536, 602], "cash1979": [602, 605], "cashcountsstatist": [428, 458, 603, 605], "cast": 91, "cat": [66, 67, 79, 399, 422, 450, 451, 466, 496, 506, 535, 602, 603], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 124, 128, 229, 253, 405, 411, 431, 435, 437, 439, 443, 444, 445, 448, 449, 450, 451, 452, 454, 458, 459, 461, 463, 466, 472, 478, 497, 500, 506, 510, 513, 518, 525, 530, 565, 601, 602], "catalog_3fgl": 466, "catalog_3fhl": [466, 496], "catalog_3fhl_bright": 496, "catalog_4fgl": 496, "catalog_4fgl_roi": 496, "catalog_gammacat": [466, 496], "catalog_hgp": 496, "catalog_registri": [466, 496, 504], "catalogimageestim": 452, "catalogu": [78, 443, 450], "catch_warn": 540, "categori": [391, 402, 415, 443, 459, 504, 506, 554], "caus": [398, 405, 452, 455, 540], "cautious": 480, "caveat": [214, 312, 458, 559], "cax": 501, "cb98": 48, "cbar": 379, "cbar_kw": 385, "cbarlabel": 385, "cc": [400, 405, 407, 410, 412, 414, 417, 419], "ccube": [195, 196, 197, 199, 200, 201, 207, 208, 209, 503], "cd": [391, 392, 394, 407, 424, 425, 426], "cdelt": [207, 209], "cdelt1": 503, "cdelt2": 503, "cdf": [340, 404, 420, 481, 499], "cdot": [51, 52, 53, 54, 103, 110, 258, 273, 414, 506, 536, 558, 563, 564, 569, 572, 573, 580, 581, 583, 584, 585, 586, 592, 593, 594, 596, 604], "celesti": [503, 552, 558, 562, 607], "celfix": 565, "cell": [399, 428, 454, 478, 491, 503, 512, 513, 526], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 103, 106, 110, 111, 113, 114, 125, 127, 129, 130, 131, 136, 153, 154, 155, 156, 157, 158, 161, 165, 166, 167, 169, 176, 179, 180, 182, 183, 184, 186, 187, 189, 190, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 225, 226, 229, 230, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 279, 281, 320, 324, 350, 391, 392, 405, 407, 414, 415, 433, 434, 443, 445, 458, 462, 464, 468, 470, 471, 472, 474, 475, 477, 479, 481, 482, 483, 489, 490, 491, 493, 495, 501, 502, 503, 504, 505, 506, 512, 513, 524, 526, 542, 543, 544, 545, 546, 547, 549, 550, 552, 553, 558, 559, 562], "center_coord": [194, 195, 200, 204, 207], "center_pix": [194, 195, 204, 207], "center_ski": 553, "center_skydir": [194, 195, 204, 207, 502, 503, 513, 514, 547, 549, 550], "centr": [495, 504, 528], "central": [134, 311, 313, 403, 412, 466, 526], "cern": 528, "certain": [50, 83, 87, 91, 214, 302, 390, 405, 407, 409, 415, 462, 495, 502, 503, 513, 535, 553], "certainli": 394, "certif": 417, "certifi": 417, "cfa": [214, 499], "cff": 421, "cg": 532, "ch": 53, "chain": [172, 404, 407, 420, 437, 502, 540, 550, 602], "chainconfig": 507, "chainconsum": 507, "chainer": 409, "chakraborti": [449, 450], "challeng": [398, 400, 404, 450, 475, 477, 479, 512], "chanc": 396, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 105, 125, 126, 127, 195, 204, 207, 223, 224, 227, 231, 233, 234, 235, 240, 244, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 366, 376, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 415, 416, 417, 421, 422, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 449, 450, 451, 452, 453, 455, 460, 470, 471, 472, 479, 481, 482, 488, 493, 494, 497, 498, 499, 504, 506, 507, 509, 512, 523, 536, 540, 547, 549, 553, 565, 603], "changelog": [391, 421, 444, 452], "channel": [19, 20, 26, 390, 393, 394, 408, 451, 482, 495, 503, 515, 528], "channel0": 528, "channel1": 528, "channel_registri": [19, 20, 26], "chapter": 495, "charact": [87, 91, 391, 505], "character": [304, 415, 481], "characterist": [21, 25, 27, 51, 52, 53, 54, 140, 302, 402, 457, 494, 602], "charg": [417, 421, 545, 578], "chat": 429, "chatti": [391, 479], "cheat": 427, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 103, 106, 107, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 218, 220, 229, 253, 269, 312, 365, 367, 394, 407, 413, 417, 421, 422, 424, 425, 426, 429, 438, 443, 451, 459, 466, 486, 493, 501, 518, 528, 540, 544, 553, 600, 603, 604], "check_limit": [217, 218, 219, 220], "check_random_st": 391, "check_tutorials_setup": [462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526], "checker": [449, 452], "checklist": 422, "checkout": [391, 394, 421, 434, 477, 481, 506], "checksum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 215, 229, 253, 354, 357, 360, 458, 468, 478, 513], "chen": [147, 452], "cherenkov": [156, 404, 424, 429, 464, 468, 475, 488, 502, 512, 514, 549, 550, 602], "cherri": [391, 398, 405, 416], "chi": [301, 406, 604, 605, 606], "chi2": [102, 134, 138, 147, 295, 296, 311, 313, 403, 434, 468, 480, 490, 499, 536, 605], "chi2assym": 437, "chi2asymmetricerrorfitstatist": 604, "chi2fitstatist": 604, "child": 401, "children": [477, 486, 503, 523, 524], "chime": 394, "chisq": 301, "chisquar": 301, "chmod": 603, "choic": [139, 404, 408, 410, 417, 420, 468, 469, 471, 474, 499, 507, 514, 523, 541, 600, 603], "choos": [45, 77, 194, 195, 198, 200, 201, 204, 207, 282, 332, 394, 403, 405, 407, 411, 420, 424, 426, 443, 466, 468, 472, 477, 479, 490, 497, 499, 502, 503, 505, 506, 508, 513, 524, 540, 603], "chose": [392, 481, 513, 514, 605, 607], "chosen": [26, 153, 166, 169, 195, 196, 197, 205, 208, 209, 229, 239, 253, 391, 406, 407, 410, 469, 489, 502, 503, 508, 509, 514, 523, 538, 548, 549, 553], "christoph": [396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 431, 432, 433, 434, 435, 436, 437, 438, 444, 447, 448, 449, 450, 451, 452, 453], "chrome": [87, 91], "chromei": 445, "chunk": [155, 166, 169], "chunk_siz": [155, 166, 169], "ci": [391, 394, 398, 417, 422, 437, 443, 445, 448, 454], "circl": [83, 184, 388, 392, 405, 445, 468, 479, 490, 495, 502, 504, 508, 512, 524, 526, 537, 547, 549, 550, 553], "circle_area": 392, "circleannulusskyregion": [266, 267, 549], "circledast": 536, "circlepixelregion": 405, "circleskyregion": [103, 106, 110, 111, 178, 179, 183, 207, 230, 392, 405, 462, 464, 468, 470, 471, 475, 477, 479, 481, 482, 489, 493, 495, 497, 502, 504, 505, 524, 547, 549, 550, 553], "circular": [91, 103, 106, 183, 195, 197, 207, 402, 410, 412, 464, 470, 497, 508, 549, 553], "circumv": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "cirelli": [26, 528], "citat": [221, 421, 507], "cite": [221, 394, 417, 507], "cl": [16, 84, 90, 103, 105, 110, 126, 418], "clabel": 499, "claim": 420, "clang": 428, "clarif": 396, "clarifi": [415, 457], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 298, 326, 327, 330, 338, 340, 365, 378, 394, 397, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 419, 420, 424, 428, 431, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 462, 466, 468, 469, 470, 471, 472, 474, 475, 479, 481, 482, 486, 488, 491, 496, 497, 498, 499, 501, 502, 503, 506, 507, 509, 512, 513, 514, 518, 523, 526, 531, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 548, 550, 551, 552, 553, 554, 578, 587, 600, 601, 602, 603, 608], "class1": 496, "class2": 496, "classic": [400, 409, 420, 424, 433, 464, 468, 475, 479, 497, 502, 507, 538, 540, 549, 550, 602, 605], "classifi": [514, 545], "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 295, 296, 418], "classproperti": 443, "classvar": [16, 84, 90, 105, 126], "claudio": [456, 458, 459], "claus": [391, 417], "clean": [391, 392, 394, 399, 400, 405, 407, 409, 431, 433, 434, 435, 436, 437, 438, 439, 440, 443, 450, 451, 452, 453], "cleaner": 454, "cleanup": [398, 410, 422, 431, 436, 437, 442, 443, 444, 448, 449, 451, 459], "clear": [92, 100, 203, 253, 391, 396, 398, 402, 405, 406, 410, 411, 412, 451, 480, 607], "clearer": 436, "clearli": [140, 391, 396, 397, 405, 408, 416], "cli": [11, 407, 453, 601], "click": [390, 407, 408, 428, 436, 451, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 603], "clip": [19, 20, 26, 194, 195, 198, 200, 201, 204, 206, 207, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 281, 282, 330, 436, 437, 472], "clockwis": [230, 239, 242, 558], "clone": [394, 425, 452], "close": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 281, 366, 367, 368, 400, 405, 421, 446, 457, 458, 459, 499, 587], "closer": 526, "closest": [120, 124, 128, 132, 136, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 498, 504, 538], "cloud": [422, 518], "cluster": [24, 25, 96, 316, 317, 404, 420, 457, 458, 461, 500, 510, 518, 537, 540], "clutter": [477, 540], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 102, 127, 133, 136, 223, 227, 233, 235, 240, 247, 251, 258, 260, 269, 270, 273, 274, 275, 285, 376, 402, 414, 463, 464, 466, 468, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 486, 489, 490, 491, 495, 496, 498, 499, 506, 509, 512, 513, 523, 526, 533, 534, 538, 540, 557, 558, 559, 560, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602], "cm2": [51, 54, 67, 108, 127, 156, 209, 286, 376, 462, 463, 466, 468, 469, 471, 472, 477, 478, 479, 481, 482, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 503, 505, 506, 507, 509, 513, 523, 524, 526, 538, 553, 571, 574, 577, 582, 587], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 495], "cm5": 495, "cmap": [103, 106, 110, 111, 229, 253, 381, 382, 470, 477, 495, 503, 505, 507, 513, 514, 523, 524, 549, 608], "cmb": 578, "co": [53, 202, 416, 417, 462, 558, 559, 560], "coadd": [196, 197, 199, 205, 208, 209], "coars": 497, "coarser": [201, 206, 497], "codaci": 422, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 153, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 386, 394, 395, 396, 398, 399, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 425, 428, 431, 434, 435, 437, 438, 439, 440, 443, 445, 448, 449, 450, 451, 452, 454, 457, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 521, 523, 524, 526, 528, 540, 547, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 603], "codebas": [392, 408, 420, 431, 450, 452], "codemeta": 445, "codespel": 443, "codestyl": 394, "coeffici": [130, 245, 250, 568], "coerce_numbers_to_str": 105, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coher": 459, "coincid": 494, "col": [87, 91, 443], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 385, "collabor": [77, 381, 382, 396, 398, 400, 404, 445, 480, 513, 602], "colleagu": [394, 420, 603], "collect": [203, 253, 391, 393, 418, 420, 422, 450, 451, 469, 497, 505, 507, 528, 537, 541, 545, 602, 607], "collis": 50, "colnam": [87, 91, 196, 197, 199, 205, 208, 209, 513, 526], "color": [102, 110, 111, 150, 151, 209, 229, 253, 380, 381, 382, 385, 388, 392, 462, 463, 466, 468, 469, 470, 471, 472, 475, 477, 479, 480, 483, 488, 491, 495, 498, 499, 502, 505, 507, 508, 509, 540, 549, 553, 558, 559, 578, 587, 608], "colorbar": [127, 150, 151, 153, 156, 157, 158, 163, 164, 165, 167, 209, 379, 385, 493, 499, 503], "colorblind": 540, "colorblind10": 540, "colormap": [380, 381, 382, 431, 444, 526], "colormap_hess": [412, 608], "colormap_milagro": 608, "colour": 454, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 104, 109, 125, 127, 130, 144, 150, 151, 153, 177, 196, 197, 198, 199, 200, 201, 205, 206, 208, 209, 280, 304, 316, 361, 362, 363, 364, 384, 385, 388, 389, 391, 404, 406, 415, 454, 457, 458, 462, 482, 491, 496, 503, 506, 507, 512, 537, 540], "column_nam": 501, "column_prefix": 201, "columnclass": [87, 91], "columnspac": 388, "com": [138, 345, 346, 358, 394, 411, 421, 422, 425], "combin": [99, 102, 103, 106, 110, 111, 137, 146, 147, 148, 182, 190, 196, 197, 199, 204, 205, 208, 209, 224, 269, 391, 397, 401, 402, 403, 404, 405, 406, 411, 414, 424, 436, 451, 457, 459, 466, 471, 477, 478, 486, 490, 497, 499, 501, 502, 503, 504, 506, 514, 524, 526, 528, 530, 540, 547, 552, 570, 601, 602], "combine_flux_map": [146, 459], "combine_significance_map": 147, "combined_ev": 537, "combining_and_defin": [462, 471, 474, 477, 479, 486, 490, 512], "come": [69, 394, 397, 398, 399, 400, 401, 405, 406, 407, 408, 410, 411, 416, 418, 421, 422, 439, 440, 443, 452, 453, 457, 468, 477, 486, 506, 507, 512, 523, 545, 603], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 496], "command": [6, 13, 94, 102, 127, 157, 163, 165, 167, 390, 391, 392, 394, 399, 400, 402, 407, 408, 422, 423, 424, 425, 426, 427, 433, 437, 448, 451, 452, 454, 481, 539, 601], "commensur": 209, "comment": [127, 391, 392, 396, 400, 404, 405, 407, 408, 410, 412, 414, 416, 417, 420], "commit": [391, 394, 399, 405, 416, 417, 421, 430, 431, 454], "committe": [396, 398, 416, 417], "commod": 417, "common": [95, 390, 391, 392, 394, 396, 397, 405, 407, 411, 412, 414, 415, 417, 425, 427, 428, 443, 445, 469, 470, 483, 496, 501, 504, 506, 523, 524, 528, 535, 538, 539, 553, 559, 603], "common_irf_head": 501, "commonli": [29, 83, 405, 409, 420, 452, 483, 528, 600, 601, 603, 605, 608], "commun": [391, 407, 413, 417, 421, 423, 429, 515], "comp": 496, "compact": [16, 84, 87, 90, 91, 105, 126], "compar": [87, 91, 128, 129, 132, 133, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 292, 391, 405, 408, 411, 420, 440, 456, 457, 462, 463, 464, 468, 472, 477, 480, 483, 486, 489, 493, 496, 499, 502, 509, 513, 523, 535, 602, 604], "comparison": [86, 87, 91, 100, 132, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 348, 448, 530], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 196, 197, 199, 208, 209, 237, 396, 398, 402, 405, 414, 416, 418, 419, 428, 431, 433, 435, 452, 458, 459, 503, 552], "compil": [394, 444], "complain": 394, "complaint": 409, "complement": 411, "complementari": [102, 137, 146, 295, 468], "complet": [13, 16, 84, 90, 105, 124, 126, 136, 222, 348, 391, 397, 401, 402, 403, 404, 405, 408, 409, 411, 415, 416, 417, 420, 421, 425, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 448, 449, 450, 451, 452, 453, 477, 482, 499, 507, 508, 518, 525, 540, 545], "complex": [221, 391, 392, 397, 401, 405, 406, 407, 413, 415, 420, 428, 459, 464, 468, 479, 482, 490, 494, 497, 503, 504, 506, 507, 508, 513, 545, 549], "complianc": [417, 454], "compliant": [196, 197, 199, 208, 209, 458, 602], "complic": [405, 553], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 103, 104, 106, 109, 110, 111, 132, 140, 168, 170, 204, 229, 253, 254, 269, 285, 402, 403, 404, 407, 413, 414, 433, 437, 439, 443, 451, 452, 463, 469, 470, 471, 474, 477, 478, 479, 480, 481, 482, 486, 488, 489, 490, 493, 496, 497, 498, 505, 506, 507, 512, 513, 523, 524, 528, 536, 538, 540, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 602], "component_1": 402, "component_2": 402, "component_class": 496, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 397, 417], "composit": [21, 57, 70, 80, 329, 417, 450, 545], "compound": [204, 211, 224, 349, 353, 405, 414, 461, 463, 483, 554, 567, 588], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 445], "compoundpixelregion": 353, "compoundskymodel": 402, "compoundskyregion": [211, 349, 353], "compoundsourcemodel": 402, "compoundspectralmodel": [264, 414, 457, 463, 506, 513, 568, 570, 574, 577, 579, 582, 587], "compress": 399, "compris": 514, "compromis": [391, 396, 404, 509], "compton": [254, 439, 578], "compulsori": 506, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 102, 103, 105, 106, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 182, 183, 185, 188, 189, 190, 191, 193, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 210, 214, 221, 223, 224, 227, 229, 231, 233, 234, 235, 240, 244, 246, 247, 250, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 285, 286, 292, 293, 294, 298, 301, 302, 303, 304, 306, 310, 311, 312, 313, 317, 321, 322, 325, 391, 400, 401, 402, 403, 404, 405, 406, 409, 411, 412, 413, 414, 415, 419, 420, 422, 424, 425, 429, 431, 433, 434, 435, 436, 439, 440, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 464, 470, 472, 477, 478, 482, 483, 488, 489, 491, 494, 495, 497, 498, 502, 505, 506, 507, 508, 509, 511, 513, 514, 515, 523, 526, 528, 536, 538, 540, 549, 578, 601, 602, 603, 604, 605, 606, 607], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 214, 404, 405, 536], "compute_chisq": 450, "compute_differential_jfactor": 23, "compute_errn": [294, 298, 454, 605], "compute_errp": [294, 298, 605], "compute_flux_doubl": 140, "compute_fpp": 141, "compute_fvar": [142, 303], "compute_jfactor": [23, 495], "compute_lightcurve_doublingtim": 494, "compute_lightcurve_fpp": 494, "compute_lightcurve_fvar": 494, "compute_lima_map": 439, "compute_npr": 404, "compute_upper_limit": [294, 298], "con": [391, 407], "concaten": [83, 86, 92, 198, 201, 403, 407, 413, 457, 503], "concentr": 350, "concept": [16, 84, 90, 105, 126, 411, 412, 418, 420, 424, 426, 429, 495, 503, 507, 518, 541], "conception": [404, 413], "conceptu": 420, "concern": [394, 396, 405, 407, 408, 410, 412, 414, 417, 443, 453, 514, 605], "conclud": 400, "concret": [16, 84, 90, 105, 126, 408, 411, 507], "conda": [390, 394, 398, 399, 408, 411, 416, 421, 422, 424, 425, 426, 427, 428, 433, 435, 451, 452, 603], "condit": [52, 53, 149, 201, 218, 220, 229, 253, 415, 419, 440, 459, 462, 468, 471, 482, 496, 504, 505, 507, 508, 514, 536, 545], "conduct": [454, 490], "cone": [91, 405, 469, 508, 523, 524, 540], "conesearch": 407, "conf": [87, 91, 391, 392, 422, 434, 449], "conf_1d": 488, "conf_3d": 488, "conf_max": [217, 219], "conf_min": [217, 219], "confid": [124, 214, 217, 219, 294, 298, 402, 409, 434, 439, 453, 602, 605], "confidence_opt": [214, 498], "config": [15, 16, 84, 90, 105, 126, 390, 392, 394, 397, 399, 400, 407, 408, 411, 418, 424, 426, 436, 437, 438, 443, 451, 469, 477, 523, 600], "config_dict": 523, "config_joint": 477, "config_paramet": [120, 122, 123, 124, 128, 129, 131, 132, 133, 135, 136], "config_stack": 477, "config_str": 16, "configdict": [16, 84, 90, 105, 126], "configpars": 449, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 102, 105, 110, 111, 120, 122, 123, 124, 126, 128, 129, 131, 132, 133, 135, 136, 338, 391, 392, 394, 400, 402, 406, 407, 411, 412, 418, 421, 422, 428, 436, 438, 439, 443, 445, 454, 457, 458, 468, 470, 472, 479, 481, 482, 493, 512, 518, 525, 539, 540, 545, 602, 603], "confirm": [394, 421], "conflict": [87, 91, 391, 394, 417], "confluenc": 515, "conform": [16, 84, 90, 105, 126, 503], "confus": [391, 392, 397, 410], "connect": [401, 429, 468, 483, 486, 504, 524, 600], "consant": [196, 197, 199, 205, 208, 209], "consciou": 396, "consecut": [179, 348, 391, 416], "consensu": [396, 417], "consent": 391, "consequ": [417, 482, 518, 553], "conserv": [536, 562], "consid": [19, 20, 59, 96, 176, 183, 186, 187, 189, 190, 197, 209, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 292, 387, 396, 397, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 417, 419, 464, 468, 470, 477, 481, 482, 494, 501, 504, 507, 537, 540, 545, 606], "consider": [407, 433, 443, 451, 477], "consist": [74, 91, 95, 125, 127, 154, 155, 166, 169, 194, 195, 196, 197, 199, 204, 207, 208, 209, 221, 239, 242, 391, 401, 402, 404, 405, 406, 411, 418, 436, 437, 438, 439, 440, 447, 451, 452, 454, 456, 457, 458, 469, 470, 471, 472, 480, 486, 490, 499, 502, 503, 506, 509, 511, 523, 576, 578, 604], "consol": [391, 603], "consortium": [418, 512], "const": [225, 226, 227, 228, 414, 482, 506, 571], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 414, "constant": [50, 51, 52, 53, 103, 110, 120, 156, 196, 197, 199, 205, 207, 208, 209, 225, 226, 227, 228, 230, 243, 245, 347, 404, 405, 410, 451, 461, 488, 513, 533, 536, 554, 556, 566, 567, 588, 589, 599, 602, 606], "constant_model": 590, "constantmodel": 453, "constantnormspectralmodel": 414, "constantspatialmodel": [263, 414, 506, 513, 557], "constantspectralmodel": [264, 414, 482, 506, 571], "constanttemporalmodel": [276, 414, 436, 506, 590], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": [497, 545], "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 417, 463, 474, 478, 502, 507, 509, 547], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 540], "construct": [16, 21, 84, 90, 105, 126, 201, 246, 247, 356, 553, 602], "constructor": [194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 457, 524, 551], "consult": 427, "consum": [420, 499, 507, 540], "contact": [393, 398, 400, 417, 427, 429, 432, 433, 434, 448, 451], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 77, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 102, 103, 105, 106, 109, 110, 111, 113, 114, 118, 124, 125, 126, 127, 136, 137, 138, 139, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 178, 181, 183, 188, 191, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 302, 316, 317, 384, 386, 388, 389, 391, 394, 395, 397, 399, 400, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 417, 420, 421, 422, 429, 433, 437, 438, 439, 440, 442, 443, 445, 446, 449, 450, 451, 452, 453, 457, 458, 459, 462, 466, 468, 469, 470, 474, 477, 478, 481, 482, 486, 488, 489, 491, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 523, 524, 526, 528, 529, 531, 536, 537, 538, 540, 544, 548, 549, 552, 553, 554, 600, 602, 604, 605, 606], "containment_correct": [16, 103, 106, 183, 462, 468, 469, 470, 474, 475, 477, 479, 488, 489, 491, 493, 497, 502, 523], "containment_fract": 96, "containment_radiu": [157, 163, 165, 166, 167, 169, 462, 497, 501, 504], "containment_radius_map": [166, 169], "contains_pix": [194, 195, 204, 207], "contains_wcs_pix": 204, "contamin": [67, 475, 496, 504, 549], "content": [84, 90, 105, 126, 127, 196, 197, 199, 205, 208, 209, 221, 354, 357, 391, 394, 396, 400, 406, 411, 418, 422, 437, 446, 451, 464, 503, 504, 512, 514, 537, 540, 551, 552], "content_typ": [16, 84, 90, 105, 126], "context": [16, 84, 87, 90, 91, 105, 126, 218, 220, 229, 253, 338, 369, 391, 406, 417, 422, 458, 503, 530], "contigu": [201, 206, 443], "continu": [201, 221, 398, 400, 401, 404, 405, 407, 408, 410, 411, 416, 428, 431, 432, 435, 443, 448, 449, 450, 452, 468, 482, 493, 504, 552, 602], "continuous_upd": [477, 486, 503, 523, 524], "contour": [211, 214, 383, 400, 420, 453, 507], "contour_": 499, "contourf": 209, "contract": 417, "contrari": [392, 399], "contrast": [411, 602], "contrera": 453, "contribut": [100, 116, 119, 229, 237, 253, 269, 387, 391, 393, 400, 405, 413, 415, 422, 429, 432, 443, 445, 447, 502, 541, 578, 600, 603, 604], "contributes_to_stat": 100, "contributor": [391, 394, 411, 422, 430, 441, 442], "control": [83, 87, 91, 103, 106, 110, 111, 391, 404, 423, 425, 462, 495, 503, 509, 540, 605], "controversi": [391, 396, 397, 411], "conveni": [13, 125, 390, 391, 401, 405, 413, 415, 423, 433, 435, 440, 443, 445, 450, 479, 493, 495, 496, 497, 503, 504, 505, 506, 512, 514, 526, 535, 539, 601], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 153, 195, 196, 197, 199, 207, 208, 209, 392, 413, 415, 435, 436, 439, 440, 454, 459, 497, 502, 503, 506, 536, 538, 545, 552, 605], "converg": [24, 222, 419, 434, 455, 468, 470, 477, 493, 499, 507, 536, 540, 547, 558], "convers": [84, 87, 90, 91, 105, 125, 126, 127, 137, 146, 396, 415, 418, 424, 426, 443, 456, 457, 458, 462, 553], "conversion_typ": [513, 526], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 102, 103, 106, 108, 110, 111, 125, 127, 130, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 216, 217, 218, 219, 220, 229, 244, 253, 292, 311, 313, 315, 318, 319, 323, 336, 352, 372, 374, 375, 392, 397, 405, 406, 415, 418, 422, 444, 456, 457, 458, 459, 462, 472, 480, 489, 490, 493, 497, 498, 499, 504, 505, 512, 526, 538, 544, 549, 552, 605, 607], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 526, "convolut": [120, 124, 130, 136, 164, 197, 209, 390, 403, 409, 431, 438, 440, 449, 451, 452, 458, 459, 475, 503, 536, 553], "convolution_method": 197, "convolv": [106, 112, 117, 136, 164, 197, 209, 402, 431, 440, 443, 452, 471, 472, 475, 503, 546, 578], "convolve_ful": 197, "convolve_wc": 197, "cookbook": [17, 19, 20, 21, 22, 24, 25, 26, 27], "cookiecutt": 407, "coolwarm": [477, 513, 514, 524], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 255, 302, 402, 436, 482, 503, 504, 549, 552, 553, 561], "coord_to_idx": [194, 195, 198, 200, 201, 204, 206, 207, 503], "coord_to_pix": [194, 195, 198, 200, 201, 204, 206, 207, 503], "coordin": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 90, 91, 94, 95, 96, 103, 104, 106, 109, 110, 111, 113, 114, 125, 127, 129, 130, 131, 140, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 179, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 229, 230, 239, 242, 244, 253, 255, 257, 266, 267, 269, 281, 302, 306, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 330, 340, 346, 350, 351, 367, 392, 396, 397, 398, 400, 404, 405, 410, 411, 414, 416, 417, 431, 433, 436, 438, 449, 451, 452, 454, 462, 464, 468, 470, 471, 475, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 497, 501, 502, 503, 504, 505, 506, 508, 511, 512, 513, 514, 524, 526, 536, 544, 549, 551, 552, 558, 559, 562, 601, 602, 607, 608], "coordsi": 438, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 154, 155, 158, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 318, 363, 391, 394, 396, 399, 401, 405, 407, 413, 420, 421, 422, 428, 443, 445, 452, 453, 454, 457, 459, 463, 464, 468, 470, 471, 477, 479, 486, 489, 490, 493, 496, 499, 502, 506, 509, 513, 540, 549, 553, 565, 603], "copy_data": [87, 91, 229, 237, 253, 269, 277, 279, 281], "copy_indic": [87, 91], "copy_ob": [82, 540], "copy_on_getitem": [87, 91], "copyright": 428, "core": [16, 53, 84, 90, 105, 126, 162, 390, 391, 398, 404, 405, 412, 416, 417, 420, 421, 429, 432, 449, 453, 457, 462, 470, 471, 474, 477, 479, 481, 483, 486, 490, 493, 505, 512, 528, 538, 603], "corner": [222, 405, 408, 420, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526], "cornerplot": 507, "corr_coord": [166, 169], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 103, 104, 106, 155, 166, 169, 183, 188, 189, 202, 237, 255, 256, 281, 391, 403, 404, 416, 417, 418, 420, 421, 435, 438, 440, 441, 442, 443, 446, 449, 450, 452, 454, 455, 456, 457, 458, 459, 462, 463, 468, 469, 470, 471, 481, 486, 488, 496, 497, 499, 502, 504, 505, 506, 509, 514, 523, 526, 537, 538, 547, 561, 574, 577, 579, 582, 587], "correctli": [19, 20, 26, 77, 101, 154, 155, 161, 166, 169, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 392, 394, 417, 418, 433, 435, 440, 445, 446, 455, 501, 502, 503, 504, 505, 509, 552, 559], "correl": [19, 20, 26, 124, 130, 139, 212, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 265, 270, 272, 273, 274, 275, 278, 282, 306, 409, 414, 415, 420, 443, 453, 459, 480, 483, 499, 504, 506, 507, 509, 523, 538, 600], "correlate_off": [124, 475], "correlation_radiu": [16, 124, 144, 145, 147, 469, 474, 475, 477, 491, 498, 514, 523, 538], "correspond": [19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 77, 87, 89, 91, 100, 101, 103, 106, 110, 111, 125, 127, 128, 129, 130, 132, 133, 136, 137, 146, 153, 154, 155, 161, 164, 166, 168, 169, 170, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 223, 224, 227, 231, 233, 234, 235, 239, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 295, 316, 384, 394, 401, 402, 403, 404, 411, 412, 415, 417, 419, 437, 440, 464, 466, 468, 469, 470, 477, 481, 482, 488, 496, 499, 502, 503, 506, 508, 509, 512, 513, 514, 523, 526, 536, 537, 538, 540, 552, 553, 564, 568, 601, 602, 607], "cosimo": [440, 443, 445, 451, 452, 454, 457], "cosmic": [52, 231, 285, 409, 512, 545], "cosmologi": [420, 507], "cost": [221, 602], "coto": 451, "could": [16, 84, 90, 105, 126, 392, 394, 396, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 420, 422, 464, 468, 477, 479, 496, 498, 499, 507, 509, 512, 513, 523, 539], "count": [16, 77, 83, 92, 100, 101, 103, 106, 107, 108, 109, 110, 111, 115, 120, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 143, 171, 173, 176, 177, 178, 183, 185, 189, 193, 196, 197, 199, 200, 201, 205, 208, 209, 218, 220, 229, 253, 294, 298, 299, 300, 305, 307, 310, 311, 313, 314, 315, 340, 376, 378, 387, 389, 397, 399, 402, 403, 404, 406, 407, 411, 415, 434, 435, 438, 440, 443, 445, 446, 452, 453, 457, 458, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 479, 481, 483, 486, 488, 489, 490, 491, 493, 497, 499, 502, 503, 504, 509, 511, 514, 521, 523, 524, 526, 538, 540, 544, 545, 547, 548, 549, 550, 553, 602, 603, 604, 606, 608], "count_bkg": 491, "count_statist": 605, "counter": [230, 239, 242, 558], "counts_3d": 503, "counts_fil": 101, "counts_imag": [483, 497], "counts_min": 149, "counts_off": [103, 106, 107, 110, 111, 171, 177, 178, 181, 389, 403, 445, 456, 457, 463, 469, 470, 471, 475, 479, 491, 497, 536, 605], "counts_on": 434, "counts_rat": 497, "counts_statist": 475, "countspredictor": 402, "countsspectrum": [403, 406, 434, 435, 437, 439, 448], "countsstatist": [294, 298, 415, 439, 440, 443, 454], "coupl": [399, 405, 410, 422, 440, 452, 503], "cours": [391, 394, 398, 401, 408, 428, 469, 477, 497, 503, 507, 513, 523, 602, 603, 606], "cousin": [434, 440, 448, 450, 602], "cousins2007": 602, "coutinho": [440, 443], "cov": [259, 260, 420, 422], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [212, 384, 453], "covar_list": 212, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 128, 129, 132, 133, 213, 214, 215, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 298, 384, 409, 419, 420, 439, 445, 453, 454, 457, 459, 469, 523, 605], "covariance_data": [229, 237, 253, 269, 279], "covariance_opt": 214, "covariance_result": 215, "covariance_typ": 419, "covariancegaussianprior": 419, "covariancemixin": [224, 229, 269, 459], "covarianceresult": [102, 214, 215, 464, 466, 468, 469, 470, 477, 478, 479, 491, 493, 499, 513, 523, 524], "cover": [280, 391, 393, 405, 406, 407, 415, 420, 464, 465, 488, 489, 497, 503, 518, 526, 541, 545], "coverag": [400, 406, 422, 431, 435, 443, 449, 452, 489, 499], "coveral": [422, 431], "cowan": [134, 311, 313], "cpu": [128, 129, 132, 136, 338, 339, 404, 420, 507], "cpython": 396, "crab": [67, 83, 110, 111, 133, 149, 214, 250, 286, 292, 399, 403, 411, 420, 431, 437, 449, 451, 468, 469, 470, 478, 479, 488, 496, 497, 498, 499, 504, 507, 509, 511, 513, 514, 515, 523, 524, 526, 538, 549, 553, 602], "crab_10gev_100tev_dataset": 478, "crab_3fhl": 526, "crab_3fhl_spec": 526, "crab_events_pass4": 514, "crab_fp": 469, "crab_fp_tabl": 469, "crab_hess_ecpl": 286, "crab_hess_fp": [125, 127, 148], "crab_magic_lp": 470, "crab_model": 499, "crab_posit": 549, "crab_spec": 478, "crab_spectrum": 499, "crabnebula": 488, "crabspectrum": 435, "crash": 507, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 103, 105, 106, 110, 111, 112, 113, 114, 115, 117, 118, 120, 125, 126, 127, 128, 129, 132, 136, 137, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 178, 179, 180, 184, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 286, 292, 318, 328, 349, 353, 369, 378, 380, 385, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 435, 436, 437, 440, 443, 445, 451, 452, 454, 455, 456, 457, 458, 459, 462, 463, 466, 469, 470, 471, 477, 479, 480, 481, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 499, 502, 505, 506, 507, 508, 509, 512, 513, 514, 515, 521, 523, 526, 528, 535, 536, 537, 540, 544, 547, 549, 550, 551, 552, 557, 559, 560, 561, 562, 568, 578, 587, 600, 601, 603, 608], "create_chain": 507, "create_crab_spectral_model": [468, 470, 478], "create_dataset": 101, "create_fermi_isotropic_diffuse_model": [505, 513], "create_map_dataset_from_observ": [93, 109], "create_mask": [194, 195, 204, 207], "create_t": 493, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 129, 207, 400, 401, 405, 414, 417, 437, 443, 459, 494, 506, 515], "creator": [105, 126, 394, 418, 469, 474, 475, 477, 506, 523, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "creatormedadata": 418, "creatormetadata": [84, 90, 105, 126, 418], "credit": 428, "crimson": 470, "criteria": [15, 91, 420, 445, 502, 507, 508, 516, 518], "criterion": [91, 134, 136, 316, 462, 540], "critic": [420, 507, 509], "criticis": 382, "crop": [86, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209], "crop_width": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209], "cross": [19, 397, 411, 459, 528], "crowd": 496, "crpix": 207, "crpix1": 503, "crpix2": 503, "crucial": [418, 420, 481, 482, 497], "cruft": 422, "crux": [33, 38, 493], "crval1": 503, "crval2": 503, "cryptic": 402, "csh": 603, "csobsselect": 401, "css": [87, 91, 422, 459], "cstat": [403, 420, 437], "csv": 127, "ct": [376, 452], "cta": [82, 83, 89, 103, 106, 110, 111, 116, 119, 120, 124, 144, 145, 151, 155, 156, 157, 166, 231, 379, 384, 386, 395, 398, 399, 400, 404, 407, 410, 411, 421, 432, 433, 443, 449, 450, 451, 452, 459, 461, 462, 471, 474, 477, 479, 481, 482, 486, 490, 491, 497, 498, 501, 505, 516, 517, 518, 523, 538, 542, 602], "cta_data_analysi": [411, 461, 479, 485], "cta_dataset": 505, "cta_north": 97, "cta_sensist": 411, "cta_sensit": [461, 462, 467], "cta_simul": 432, "cta_south": 97, "cta_util": 452, "ctadata": 512, "ctao": [82, 155, 156, 160, 176, 285, 391, 394, 411, 417, 421, 424, 429, 459, 461, 462, 469, 471, 474, 479, 481, 482, 491, 508, 514, 515, 516, 517, 518, 528, 540, 601, 602], "ctao_north": 97, "ctao_south": [97, 462, 471, 481, 482, 486, 490], "ctapip": [394, 398, 400, 407, 408, 410, 411, 412], "ctaspectrumobserv": 452, "ctobssim": 404, "ctool": [401, 404, 407, 411, 576], "cts_sigma": 499, "ctselect": 401, "ctype1": 503, "ctype2": 503, "cube": [46, 103, 106, 136, 171, 189, 196, 197, 199, 205, 208, 209, 249, 269, 391, 402, 403, 404, 410, 411, 412, 414, 420, 424, 431, 435, 436, 439, 444, 447, 448, 449, 450, 451, 452, 465, 472, 474, 479, 483, 513, 526, 536, 545, 547, 552, 553, 602], "cubic": 503, "cumbersom": [401, 409], "cumsum": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209], "cumul": [100, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 340, 404, 420, 468, 481, 505, 540], "cunit1": 503, "cunit2": 503, "curat": [422, 432], "curl": [67, 408, 423, 424, 426, 512], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 102, 103, 106, 110, 111, 127, 128, 132, 159, 182, 194, 195, 196, 197, 199, 205, 206, 207, 208, 209, 214, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 296, 369, 385, 391, 392, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 423, 424, 425, 426, 435, 453, 469, 495, 498, 501, 502, 503, 505, 512, 514, 515, 523, 524, 529, 536, 537, 538, 545, 553, 600, 602, 603, 604], "curv": [15, 19, 20, 22, 26, 73, 77, 83, 132, 140, 223, 224, 227, 231, 233, 234, 235, 240, 244, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 304, 383, 395, 402, 404, 407, 411, 415, 424, 433, 437, 439, 440, 444, 447, 448, 450, 452, 454, 457, 458, 461, 462, 465, 487, 492, 493, 494, 518, 538, 539, 549, 554, 589, 599, 601], "curve_fit": 384, "cuspi": 528, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 105, 126, 131, 400, 401, 402, 407, 409, 414, 418, 423, 437, 438, 440, 452, 462, 471, 474, 477, 479, 486, 490, 497, 501, 503, 512, 540, 587], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 506, "customis": [411, 501], "customprior": 509, "cut": [91, 124, 168, 182, 183, 401, 451, 457, 461, 462, 465, 467, 471, 491, 497, 502, 503, 507, 508, 512, 518, 524, 526, 548, 549], "cutoff": [233, 234, 235, 273, 274, 275, 292, 437, 457, 461, 471, 477, 554, 567, 588], "cutout": [103, 106, 110, 111, 116, 119, 154, 155, 161, 166, 169, 172, 195, 197, 205, 207, 209, 279, 397, 403, 433, 438, 443, 449, 452, 459, 474, 475, 477, 479, 483, 497, 502, 513, 524, 526, 536], "cutout2d": [103, 106, 154, 155, 161, 166, 169, 172, 207, 209, 279, 397], "cutout_and_mask_region": [209, 457], "cutout_info": 437, "cutout_mod": 172, "cutout_slic": 207, "cutout_template_model": 459, "cutout_width": 172, "cval": [196, 197, 199, 205, 208, 209], "cwd": 399, "cwt": [411, 437, 449, 452], "cxc": [214, 411, 499], "cyan": 388, "cycl": [388, 394, 395, 396, 408, 410, 425, 450, 454], "cycler": [388, 462], "cython": [394, 434, 444], "d": [19, 20, 23, 28, 87, 89, 91, 200, 203, 206, 244, 250, 261, 280, 286, 358, 394, 409, 411, 445, 454, 466, 475, 481, 482, 490, 503, 506, 508, 545, 552, 558, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603, 606], "dai": [87, 91, 125, 127, 206, 236, 241, 243, 261, 268, 394, 405, 411, 421, 422, 503, 596, 602, 603], "daniel": [453, 456, 458, 459], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 411, 419, 452, 457, 458, 461, 500, 510, 518, 529, 601], "dark_matter_spectra": 26, "darkbit": 528, "darkblu": 509, "darkgreen": 509, "darkmatt": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 264, 392, 411, 452, 495, 529], "darkmatterannihilationspectralmodel": [20, 264, 454, 495, 506], "darkmatterdecayspectralmodel": [264, 458, 495, 506], "darkorang": [468, 469], "darksusi": 528, "darwin": 428, "dash": [491, 495, 509], "dashboard": 422, "dat": [26, 87, 91, 229, 253, 469, 523, 528], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 118, 120, 125, 126, 127, 128, 129, 130, 131, 139, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 182, 189, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 295, 299, 304, 305, 306, 308, 309, 315, 316, 317, 326, 327, 330, 348, 354, 357, 361, 362, 370, 379, 380, 381, 382, 384, 385, 390, 392, 394, 395, 398, 401, 402, 403, 404, 405, 407, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 424, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 457, 458, 461, 462, 466, 471, 472, 474, 475, 479, 481, 482, 486, 490, 495, 496, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 512, 513, 515, 517, 519, 521, 525, 527, 528, 535, 536, 538, 540, 542, 543, 544, 545, 546, 547, 549, 550, 552, 553, 560, 561, 574, 577, 579, 581, 582, 587, 600, 601, 602, 605, 606, 607, 608], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [194, 195, 204, 207], "data_path": 514, "data_reduct": 407, "data_shap": [102, 103, 106, 110, 111, 194, 195, 204, 207, 497, 553], "data_shape_ax": [195, 204, 207], "data_shape_imag": 207, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 176, 316, 317, 407, 428, 470, 479, 481, 489, 491, 493, 502, 508, 511, 512, 514, 515, 521, 524, 537, 547, 549, 550], "data_storag": 537, "data_summari": 449, "dataaxi": 434, "databas": [397, 540], "dataclass": 391, "datafram": [87, 91, 507], "dataset": [6, 15, 16, 19, 20, 26, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 138, 143, 144, 145, 146, 147, 149, 154, 155, 161, 166, 169, 171, 172, 173, 176, 177, 178, 181, 182, 183, 198, 203, 214, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 295, 296, 311, 313, 338, 384, 387, 388, 392, 394, 395, 397, 399, 404, 406, 407, 408, 410, 411, 415, 419, 420, 421, 422, 424, 426, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 450, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 466, 468, 471, 472, 479, 480, 481, 483, 486, 491, 493, 495, 496, 500, 503, 506, 508, 510, 511, 512, 513, 515, 518, 521, 526, 537, 538, 540, 547, 548, 549, 550, 561, 565, 568, 597, 598, 600, 601, 602, 603, 604, 605], "dataset1": [509, 536], "dataset1_prior": 509, "dataset2": [509, 536], "dataset2_prior": 509, "dataset_1": 538, "dataset_2": 538, "dataset_3fgl": 466, "dataset_3fhl": 466, "dataset_cta": 497, "dataset_empti": [464, 468, 470, 471, 479, 489, 493, 497, 502, 514, 549], "dataset_energy_depend": 480, "dataset_fak": 471, "dataset_fp": 490, "dataset_gammacat": 466, "dataset_hawc": 478, "dataset_hess": [478, 499], "dataset_imag": [479, 497], "dataset_kwarg": [93, 109], "dataset_lc": 490, "dataset_mak": [468, 470, 479, 489, 493, 502, 549], "dataset_nam": [109, 113, 114, 132, 229, 237, 253, 413, 419, 459, 477, 481, 482, 486, 497, 505, 524, 561], "dataset_on_off": [171, 177, 178, 181, 462, 468, 470, 471, 475, 479, 489, 493, 502, 549, 550], "dataset_on_off1": 462, "dataset_onoff": 403, "dataset_simul": 470, "dataset_stack": [468, 477], "datasetmodel": [216, 253, 269, 413, 440, 481, 482, 486, 493, 507], "datasetread": [101, 107], "datasets1": 388, "datasets2": 388, "datasets3": 388, "datasets_fil": [16, 469, 474, 475, 477, 523], "datasets_hess": 478, "datasets_in_phase_bin_3": 415, "datasets_mak": 502, "datasets_nam": [19, 20, 26, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 287, 439, 478, 505, 523, 561], "datasets_read": [505, 513], "datasets_sl": 497, "datasets_to_fit": 493, "datasetsconfig": 16, "datasetsmak": [174, 445, 457, 468, 502, 508, 540], "datasetsmetadata": 418, "datasetwrit": 108, "datastor": [16, 89, 96, 176, 316, 317, 397, 401, 406, 424, 428, 434, 445, 446, 448, 449, 451, 457, 458, 464, 468, 469, 470, 474, 475, 477, 479, 481, 486, 489, 491, 493, 502, 508, 511, 514, 515, 521, 523, 537, 540, 547, 549, 550, 603], "datastorecheck": 452, "datastoreindex": 401, "datastoreinmemori": 401, "datastoremak": [434, 445], "datastoremetadata": 418, "datastoreobserv": [177, 397, 401, 438, 451], "datastorexml": 401, "datasum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 110, 111, 125, 127, 153, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209], "datat": [87, 91], "date": [87, 91, 105, 126, 372, 408, 416, 417, 418, 420, 421, 429, 451, 469, 472, 474, 475, 477, 506, 515, 523, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 607], "datefmt": [16, 469, 474, 475, 477, 523, 603], "dateref": 472, "datetim": [105, 126, 418], "datetime64": [87, 91], "datfix": 472, "daughter": 418, "david": [401, 406, 432, 452, 453], "dc": 477, "dc1": [400, 411, 453, 481, 491, 501, 505, 512], "dc2": 400, "ddof": 494, "de": [19, 20, 26, 67, 100, 223, 224, 227, 231, 233, 234, 235, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 315, 417, 421, 440, 443, 446, 495, 602], "deabsorb": 463, "deactiv": 423, "dead": [83, 86, 88, 348, 401, 420, 507], "dead_tim": [83, 88, 348], "deadc": 401, "deadlin": [400, 404], "deadtim": [88, 90, 189, 471, 481, 486, 512], "deadtime_fract": [88, 90], "deal": [86, 391, 397, 406, 407, 471, 481, 489, 518, 525, 540], "debanjan": 434, "debian": [408, 425, 447], "debug": [11, 391, 397, 402, 407, 454, 468, 498, 503, 507, 540, 603], "dec": [67, 83, 85, 87, 88, 91, 94, 144, 179, 391, 392, 396, 400, 402, 404, 407, 408, 411, 430, 456, 462, 468, 470, 472, 475, 479, 482, 488, 489, 491, 493, 496, 502, 504, 511, 512, 513, 514, 524, 526, 528, 540, 544, 549, 607], "dec_pnt": 515, "dec_tru": 404, "decad": [17, 18, 21, 22, 24, 25, 27, 101, 113, 114, 201, 288, 458, 481], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 236, 243, 261, 414, 481, 490, 494, 506, 528, 593], "decemb": 430, "decid": [391, 397, 400, 401, 402, 403, 405, 406, 410, 413, 414, 415, 421, 469, 508, 523], "decim": [87, 91, 312], "decis": [391, 392], "declar": [15, 87, 91, 269, 370, 371, 398, 399, 402, 407, 408, 414, 422, 439, 539], "decor": [370, 371, 391, 418, 603], "decorrel": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "decoupl": 69, "dedic": [394, 405, 406, 415, 417, 418, 422, 438, 439, 440, 458, 468, 469, 470, 477, 491, 499, 523, 524, 537], "deduc": [415, 458], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 282, 283, 284, 477], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 277, 279, 281], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 297, 370, 371, 391, 392, 402, 403, 404, 405, 414, 415, 418, 419, 420, 468, 477, 493, 499, 506, 507, 509, 521, 549, 603, 605], "def_unit": [462, 471, 474, 477, 479, 486, 490, 512], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 297, 298, 299, 303, 304, 305, 306, 311, 312, 313, 315, 316, 318, 329, 330, 331, 336, 338, 339, 345, 346, 347, 348, 350, 351, 354, 357, 359, 360, 362, 368, 373, 374, 378, 380, 381, 382, 384, 385, 387, 388, 391, 392, 397, 403, 407, 408, 414, 417, 422, 428, 434, 436, 437, 438, 440, 443, 445, 451, 452, 454, 455, 456, 457, 458, 468, 469, 470, 472, 475, 477, 481, 482, 489, 490, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 513, 518, 523, 524, 526, 536, 538, 540, 547, 550, 551, 552, 553, 558, 559, 560, 568, 578, 603, 607], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 374, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 450], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 419], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [150, 151, 156, 158, 163, 168, 501], "defer": [106, 111], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 102, 103, 104, 105, 106, 109, 110, 111, 116, 119, 124, 125, 126, 127, 128, 129, 131, 132, 136, 153, 154, 155, 157, 161, 164, 165, 166, 167, 169, 172, 173, 177, 182, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 217, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 297, 299, 305, 307, 311, 313, 330, 340, 345, 346, 347, 348, 351, 381, 382, 384, 391, 392, 394, 396, 397, 400, 402, 403, 404, 405, 406, 407, 408, 412, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 433, 434, 437, 440, 443, 446, 450, 451, 456, 457, 458, 463, 469, 471, 472, 474, 475, 477, 478, 480, 483, 486, 490, 491, 493, 494, 496, 497, 498, 499, 501, 502, 503, 505, 506, 508, 509, 512, 513, 514, 518, 523, 526, 536, 537, 538, 540, 542, 545, 549, 550, 552, 558, 560, 562, 563, 564, 568, 569, 572, 573, 575, 576, 578, 580, 581, 583, 584, 585, 586, 587, 598, 600, 601, 602, 603, 604, 605, 606], "definit": [83, 84, 86, 88, 90, 100, 103, 105, 106, 110, 111, 126, 173, 204, 222, 297, 315, 329, 391, 400, 401, 405, 412, 413, 414, 415, 418, 435, 439, 440, 456, 458, 459, 468, 470, 474, 483, 489, 501, 502, 523, 536, 538, 545, 546, 551, 553, 558, 559, 605], "deform": 553, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 103, 106, 110, 111, 113, 114, 115, 116, 119, 120, 124, 129, 130, 136, 144, 145, 147, 155, 157, 158, 163, 164, 165, 166, 167, 168, 169, 171, 176, 179, 180, 182, 184, 189, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 229, 230, 239, 242, 253, 257, 266, 267, 269, 316, 317, 350, 386, 391, 392, 402, 405, 407, 414, 415, 418, 428, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 508, 511, 512, 513, 514, 515, 523, 524, 526, 537, 538, 540, 542, 544, 547, 549, 550, 551, 552, 553, 558, 559, 560, 561, 562, 563, 564, 565, 608], "deg2": 511, "degeneraci": 507, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 113, 114, 115, 122, 125, 127, 138, 147, 195, 196, 197, 199, 202, 207, 208, 209, 229, 253, 257, 269, 280, 311, 313, 458, 462, 464, 469, 475, 480, 489, 493, 496, 502, 503, 504, 512, 523, 538, 552, 553, 605, 606], "deil": [396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 431, 432, 433, 434, 435, 436, 437, 438, 444, 447, 448, 449, 450, 451, 452, 453], "deiml": 451, "dej2000": [496, 526], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 402], "delai": [412, 416], "deleg": 407, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 391, 402, 422, 423, 424, 426, 458, 505], "delete_interv": 86, "delimit": 127, "deliv": [407, 545], "delta": [19, 20, 23, 87, 91, 124, 125, 130, 133, 136, 158, 206, 259, 260, 293, 311, 312, 313, 457, 463, 472, 499, 509, 538, 545, 546, 559, 560, 562, 605], "delta_t": [122, 293, 480], "deltaaic": 507, "deltacstat": 420, "deltaloglik": 507, "deltalogz": 507, "demonstr": [407, 433, 436, 437, 438, 439, 440, 445, 457, 458, 488, 494, 500, 503, 505, 507, 518, 552], "denot": [103, 110, 415, 536], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 102, 127, 158, 209, 219, 238, 248, 284, 344, 347, 384, 404, 475, 477, 495, 496, 509, 528, 530, 534, 544, 545, 546, 602], "dep": 457, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 103, 104, 109, 110, 122, 125, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 183, 194, 195, 204, 207, 209, 222, 229, 244, 253, 269, 318, 371, 391, 393, 394, 395, 397, 402, 403, 404, 405, 406, 409, 410, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 432, 436, 437, 440, 447, 449, 452, 453, 455, 457, 458, 459, 461, 462, 465, 467, 471, 474, 475, 484, 485, 489, 496, 499, 501, 502, 503, 504, 505, 507, 508, 509, 512, 513, 518, 536, 540, 544, 545, 548, 549, 552, 568], "deploy": 417, "deposit": 417, "deprec": [16, 19, 20, 26, 84, 85, 90, 105, 126, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 434, 443, 456, 457, 458, 459, 477, 565], "deprecated_argument_funct": 391, "deprecated_argument_function_kwarg": 391, "deprecated_attribut": 391, "deprecated_funct": 391, "deprecated_renamed_argu": 391, "deprecatedparseprotocol": [16, 84, 90, 105, 126], "deprecation_polici": 416, "depriv": 547, "depth": [16, 84, 90, 105, 126, 358, 424, 429, 463, 494, 568], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 118, 124, 128, 132, 136, 137, 146, 280, 391, 403, 404, 409, 412, 415, 472, 498, 512, 514, 538, 545, 552, 604, 605], "descent": [420, 507], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 127, 128, 130, 136, 165, 205, 214, 282, 307, 311, 313, 392, 394, 396, 397, 400, 401, 403, 404, 405, 407, 408, 410, 411, 414, 415, 416, 417, 420, 429, 435, 443, 451, 452, 468, 469, 472, 481, 482, 494, 498, 499, 506, 507, 509, 512, 514, 515, 518, 523, 536, 540, 544, 553, 554, 602, 603, 604, 605], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 124, 129, 136, 214, 221, 222, 392, 396, 397, 405, 411, 416, 417, 429, 454, 458, 477, 486, 496, 499, 503, 507, 512, 514, 523, 524, 540, 605], "description1": 392, "description2": 392, "description3": 392, "description_width": [477, 486, 503, 523, 524], "descriptionstyl": [477, 486, 503, 523, 524], "descriptor": [87, 88, 91, 103, 106, 110, 111, 279, 327, 392, 439], "design": [396, 397, 400, 401, 404, 405, 407, 411, 413, 415, 416, 420, 431, 451, 458], "desir": [16, 84, 87, 90, 91, 105, 126, 164, 194, 195, 204, 207, 209, 297, 366, 367, 368, 503, 526, 553], "desktop": 429, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 103, 106, 110, 111, 127, 128, 154, 155, 161, 166, 169, 172, 195, 207, 209, 214, 217, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 279, 280, 281, 391, 392, 394, 396, 399, 400, 401, 404, 405, 406, 410, 411, 412, 416, 417, 420, 423, 427, 429, 430, 437, 441, 442, 461, 462, 463, 468, 470, 471, 472, 474, 479, 480, 481, 484, 485, 486, 490, 493, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 512, 514, 515, 518, 524, 526, 536, 537, 539, 545, 549, 550, 552, 600, 601, 602, 603, 605, 607], "detect": [17, 19, 20, 21, 22, 24, 25, 26, 27, 59, 144, 145, 292, 381, 382, 392, 407, 410, 411, 413, 431, 437, 438, 439, 449, 451, 452, 458, 461, 473, 476, 496, 512, 514, 518, 602, 605], "detect_t": 411, "detector": [83, 88, 104, 109, 158, 504, 514, 545, 602], "determin": [19, 20, 21, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 113, 114, 135, 157, 163, 165, 167, 179, 180, 182, 184, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 318, 340, 402, 406, 409, 417, 445, 457, 458, 462, 470, 474, 475, 480, 488, 502, 504, 530, 601], "determinist": 391, "deti": [83, 104, 109, 404, 512], "detx": [83, 104, 109, 404, 512], "dev": [11, 16, 82, 391, 393, 394, 407, 417, 420, 421, 422, 459, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 565, 568, 597, 598], "dev1249": [105, 126, 429, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "develop": [392, 396, 397, 399, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 413, 414, 416, 417, 419, 421, 422, 425, 429, 431, 444, 451, 452, 453, 512], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 128, 197, 209, 214, 238, 297, 301, 499, 509], "devoid": [468, 543], "devop": 417, "devot": [465, 518], "dex": 318, "df": [87, 91, 122, 138, 147, 311, 313, 480, 499, 605], "diagnosi": 400, "diagnost": 407, "diagon": [153, 154, 155, 409, 419, 513], "diagram": 607, "dialog": [424, 426], "diamet": [195, 196, 197, 464], "diamond": 508, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 120, 122, 125, 126, 127, 128, 129, 130, 132, 133, 136, 138, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 287, 292, 293, 294, 297, 298, 302, 316, 330, 338, 339, 354, 357, 358, 359, 362, 372, 373, 374, 375, 378, 379, 380, 384, 385, 386, 387, 388, 391, 406, 408, 412, 415, 418, 436, 440, 443, 451, 469, 477, 488, 489, 493, 496, 499, 503, 508, 523, 524, 552, 558, 568], "dict_kei": [463, 507, 568], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 122, 125, 126, 127, 128, 129, 132, 133, 136, 138, 139, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 181, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 213, 214, 216, 217, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 294, 297, 298, 302, 328, 354, 357, 358, 359, 362, 372, 375, 385, 392, 408, 410, 415, 418, 419, 468, 470, 477, 499, 501, 507, 508, 509, 598], "dictionnari": [229, 253, 384, 420, 507], "did": [77, 222, 398, 405, 410, 411, 412, 414, 417, 434, 462, 471, 474, 477, 479, 486, 490, 499, 509, 512], "didn": [83, 88, 398, 401, 405, 408, 528], "diemand": 24, "diff": [102, 103, 106, 110, 111, 391, 394, 399, 403, 477, 486, 524], "diff_flux": 495, "diff_flux_point": [102, 497], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 77, 80, 86, 87, 91, 94, 100, 102, 122, 124, 125, 127, 128, 129, 132, 133, 134, 136, 144, 150, 151, 152, 153, 156, 158, 160, 163, 168, 178, 196, 197, 199, 202, 203, 204, 205, 207, 208, 209, 219, 238, 248, 284, 292, 293, 294, 298, 348, 352, 366, 367, 382, 391, 392, 394, 396, 397, 399, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 419, 420, 422, 424, 426, 435, 438, 440, 450, 453, 454, 455, 457, 459, 462, 468, 469, 470, 472, 474, 477, 480, 481, 482, 483, 488, 490, 493, 494, 496, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 509, 512, 513, 514, 516, 518, 523, 525, 526, 528, 536, 538, 540, 545, 552, 553, 559, 560, 601, 603, 604, 605], "different": 399, "differenti": [19, 20, 23, 26, 79, 125, 127, 135, 196, 197, 199, 201, 205, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 269, 270, 272, 273, 274, 275, 278, 282, 285, 286, 345, 397, 402, 409, 415, 450, 503, 506, 513, 526, 538, 602], "differential_flux": 127, "difficult": [402, 405, 422], "diffus": [68, 196, 197, 199, 205, 208, 209, 287, 391, 407, 410, 452, 453, 477, 481, 496, 503, 505, 506, 512, 600], "diffuse_cub": 506, "diffuse_galactic_fermi": 505, "diffuse_iem": [505, 513], "diffuse_iso": [505, 513], "diffuse_model": 287, "difrsp0": [513, 526], "difrsp1": [513, 526], "difrsp2": [513, 526], "difrsp3": [513, 526], "difrsp4": [513, 526], "digit": 391, "dilat": [209, 443], "dim": [163, 347, 448, 449, 479, 602], "dimens": [46, 53, 103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 221, 277, 278, 281, 318, 330, 384, 407, 420, 440, 451, 453, 457, 459, 499, 500, 501, 503, 506, 507, 518, 536, 552, 553, 559], "dimension": [31, 32, 37, 68, 87, 91, 120, 194, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 221, 238, 239, 242, 288, 331, 344, 397, 405, 419, 424, 449, 472, 498, 499, 501, 503, 506, 526, 544, 546, 552, 553, 601, 602], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 158, 274, 275, 317, 483, 506], "dimitri": [443, 445], "dipol": [51, 54, 545], "dirac": 19, "direct": [91, 105, 168, 186, 187, 190, 192, 201, 221, 230, 239, 242, 322, 325, 392, 397, 403, 405, 410, 412, 415, 418, 443, 461, 465, 467, 471, 502, 518, 537, 545, 546, 548, 549, 558, 601, 602], "directional_offset_bi": [462, 471], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 90, 91, 105, 126, 137, 143, 146, 147, 168, 183, 196, 197, 199, 205, 208, 209, 277, 279, 281, 391, 393, 394, 396, 398, 399, 402, 403, 404, 405, 409, 411, 418, 420, 424, 426, 427, 431, 433, 434, 435, 437, 451, 458, 466, 468, 469, 471, 477, 478, 479, 482, 483, 486, 489, 490, 494, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 512, 513, 523, 524, 526, 528, 536, 540, 545, 549, 552, 578, 605], "directori": [11, 82, 87, 391, 407, 469, 480, 507, 515, 523, 526, 537, 540, 603], "dirk": [434, 448, 450], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 443], "disadvantag": 603, "disagr": 396, "disambigu": 396, "disc": [474, 475, 477, 482], "discard": [418, 493, 496], "discard_on_copi": [87, 91], "discarded_ind": 496, "discarded_spati": 496, "discarded_t": 496, "disccus": 400, "discourag": 391, "discov": [221, 507, 603], "discoveri": [35, 507], "discrep": 468, "discret": [91, 139, 306, 312, 404, 459, 499, 552], "discrete_correl": 139, "discrete_correlation_dict": 139, "discrete_correlation_err": [139, 306], "discuss": [13, 59, 282, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 429, 451, 507, 509, 515, 529, 607], "disjoint": 405, "disk": [82, 111, 155, 158, 197, 207, 209, 230, 242, 244, 369, 390, 391, 401, 402, 403, 407, 414, 415, 420, 459, 461, 462, 468, 477, 478, 503, 504, 505, 506, 507, 551, 554, 556, 560, 564, 566], "disk_inc": 405, "diskspatialmodel": [72, 263, 414, 436, 457, 505, 506, 558], "dismiss": 100, "disp": [544, 545], "dispatch": 402, "dispers": [82, 88, 101, 103, 104, 106, 108, 109, 110, 111, 112, 115, 117, 153, 154, 155, 158, 176, 182, 183, 186, 187, 190, 391, 397, 402, 403, 404, 437, 439, 449, 450, 451, 453, 462, 464, 468, 469, 477, 481, 502, 514, 515, 523, 524, 536, 545, 548, 602], "displac": 322, "displai": [11, 15, 82, 87, 91, 120, 132, 136, 214, 302, 339, 384, 388, 391, 392, 422, 424, 426, 443, 446, 457, 458, 462, 464, 468, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 483, 486, 488, 490, 491, 496, 497, 498, 499, 503, 505, 506, 512, 513, 515, 540, 603], "display_length": [87, 91], "disrupt": [432, 433], "dissolv": 436, "dist": [341, 422], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 129, 144, 145, 204, 254, 281, 312, 321, 347, 405, 449, 456, 470, 472, 483, 495, 496, 499, 511, 534, 549, 578], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 495], "distance_max": [46, 47, 347, 496], "distance_min": [47, 347, 496], "distance_refer": 496, "distibut": [137, 146], "distinct": [406, 407, 412, 514, 606], "distinguish": [294, 298, 415, 418, 462, 503], "distort": [405, 435], "distrib": [102, 137, 146, 468], "distribut": [13, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 102, 109, 134, 137, 138, 146, 147, 158, 193, 219, 221, 223, 224, 227, 231, 233, 234, 235, 238, 240, 246, 247, 248, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 284, 294, 295, 298, 311, 313, 340, 341, 345, 384, 387, 389, 390, 391, 395, 396, 399, 404, 409, 410, 413, 416, 417, 421, 422, 425, 436, 445, 451, 457, 458, 462, 468, 470, 471, 475, 477, 481, 483, 486, 488, 499, 505, 509, 511, 512, 526, 528, 540, 544, 545, 547, 553, 562, 578, 601, 602, 604, 605], "divers": 415, "divid": [195, 201, 206, 412, 415, 470, 481, 508, 514, 515], "divis": 201, "djangoproject": 411, "djuvsland": 458, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 182, 200, 201, 316, 317, 392, 397, 399, 400, 402, 411, 418, 424, 428, 434, 437, 439, 445, 454, 458, 464, 468, 469, 470, 474, 475, 477, 488, 489, 493, 502, 504, 508, 511, 521, 523, 524, 536, 540, 542, 543, 544, 546, 547, 549, 550, 601, 602], "dl4": [99, 102, 103, 106, 110, 111, 118, 120, 124, 128, 132, 136, 146, 147, 161, 182, 392, 397, 418, 424, 439, 490, 497, 498, 499, 540, 601, 602], "dl5": [120, 124, 128, 132, 136, 418, 458, 490, 498, 499, 601, 602], "dl6": [120, 124, 128, 132, 136, 498, 601, 602], "dlogz": 507, "dm": [17, 19, 20, 21, 22, 24, 25, 26, 27, 439, 454, 495, 506], "dm_exampl": 528, "dmfitfunct": 528, "dmpipe": 528, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 495, 528], "dmsky": 528, "dn": [235, 247, 274, 495, 602], "dnde": [19, 20, 26, 67, 125, 126, 127, 135, 137, 139, 140, 141, 142, 146, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 285, 415, 443, 466, 468, 469, 479, 483, 496, 497, 498, 506, 513, 523, 526, 538], "dnde_cu": 286, "dnde_err": [125, 127, 137, 146, 538], "dnde_errn": [19, 20, 26, 67, 125, 127, 137, 146, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 496], "dnde_errp": [19, 20, 26, 67, 125, 127, 137, 146, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 496], "dnde_ref": [125, 127, 415], "dnde_scan_axi": [137, 146], "dnde_scan_valu": [125, 127], "dnde_ul": [67, 125, 127, 137, 146, 496, 526], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 105, 126, 153, 164, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 342, 384, 392, 394, 396, 397, 398, 401, 405, 406, 407, 408, 409, 410, 411, 414, 415, 418, 420, 421, 422, 424, 426, 437, 463, 466, 468, 469, 471, 472, 474, 475, 477, 479, 480, 481, 486, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 512, 513, 523, 524, 526, 536, 540, 547, 552, 600, 603, 606, 607], "do_someth": 391, "doc": [11, 13, 16, 83, 87, 91, 153, 195, 201, 204, 207, 214, 221, 229, 253, 318, 355, 391, 392, 394, 396, 399, 405, 407, 408, 410, 411, 420, 421, 428, 429, 431, 437, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 553, 565, 568, 591, 597, 598, 602, 603, 607], "docker": [408, 422], "dockerfil": [399, 421, 422], "docstr": [391, 411, 417, 443, 444, 445, 447, 450, 456, 457, 458, 459, 477, 506], "doctest": [164, 379, 392], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 298, 326, 330, 340, 365, 378, 391, 393, 395, 396, 398, 399, 401, 405, 407, 408, 410, 412, 414, 416, 417, 420, 422, 423, 428, 429, 430, 437, 439, 440, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 503, 505, 512, 514, 515, 540, 545, 551, 552, 553, 603], "doe": [16, 84, 87, 90, 91, 105, 126, 128, 132, 139, 156, 166, 169, 203, 244, 280, 292, 391, 392, 398, 399, 401, 403, 405, 406, 408, 410, 411, 414, 415, 417, 418, 420, 434, 443, 454, 462, 463, 468, 471, 474, 477, 479, 480, 496, 499, 501, 502, 503, 504, 514, 528, 540, 549, 603], "doesn": [69, 391, 392, 396, 398, 399, 405, 408, 409, 411, 459, 512, 513, 603], "dof": 605, "doi": [138, 311, 313, 417], "domain": [196, 197, 199, 205, 208, 209, 391, 405, 494], "domenico": 449, "dominguez": [231, 232, 414, 463, 568], "dominquez": 231, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 153, 390, 391, 394, 396, 398, 399, 408, 418, 422, 464, 468, 474, 479, 488, 504, 506, 507, 601, 603, 606, 607], "donath": [400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 128, 154, 155, 161, 166, 169, 384, 391, 392, 394, 396, 397, 398, 402, 404, 405, 406, 407, 409, 410, 411, 414, 415, 417, 421, 424, 428, 452, 457, 464, 471, 477, 478, 482, 483, 486, 490, 491, 497, 498, 502, 503, 506, 507, 508, 536, 540, 548, 549, 553, 587, 605, 607], "dos2unix": 391, "dot": [50, 51, 54, 110, 111, 196, 197, 199, 205, 208, 209, 457], "doubl": [27, 124, 139, 140, 302, 417, 450, 458], "doubling_dict": 302, "down": [50, 51, 54, 136, 396, 398, 401, 405, 410, 421, 435, 497, 507, 513, 606], "downgrad": [195, 390], "download": [67, 94, 102, 127, 394, 399, 407, 408, 411, 418, 421, 423, 424, 426, 428, 432, 433, 435, 436, 443, 452, 453, 454, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 521, 523, 524, 526, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603], "downsampl": [103, 106, 110, 111, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 434, 440, 449, 459, 497, 498], "downsampled_energi": 497, "downsampling_factor": [136, 479], "downward": [294, 298], "dozen": 391, "dpp": 417, "dr": [17, 18, 21, 22, 24, 25, 27, 560], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 158, 176, 275, 316, 317, 392, 399, 411, 428, 461, 464, 468, 469, 475, 477, 489, 493, 502, 508, 511, 521, 523, 524, 537, 540, 542, 543, 544, 546, 547, 549, 550, 554, 567, 588], "dr2": [65, 275, 443, 461, 554, 567, 588], "dr3": [65, 274, 461, 506, 554, 567, 588], "dr4": [65, 458], "draft": [391, 395, 396, 419, 452], "drag": 394, "draw": [33, 197, 340, 404, 509], "drawback": [406, 410], "drawn": [340, 404, 420, 507], "drift": [85, 94, 95, 454, 602], "drive": 407, "driven": [11, 15, 397, 407, 409, 411, 451, 518, 525, 539], "drop": [52, 53, 103, 106, 110, 111, 125, 127, 132, 154, 155, 161, 166, 169, 173, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 230, 237, 279, 376, 395, 396, 407, 408, 413, 433, 436, 437, 440, 443, 450, 453, 503, 536], "ds9": [83, 195, 204, 207, 211, 229, 253, 391, 392, 405, 435, 504, 506, 553], "ds9parser": 405, "dss": 401, "dt": [87, 91], "dtime_t": 494, "dtype": [33, 38, 87, 91, 112, 117, 151, 153, 156, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 229, 253, 318, 391, 419, 470, 474, 483, 493, 496, 497, 498, 501, 502, 503, 512, 513, 526, 538], "duck": [16, 84, 90, 105, 126], "due": [59, 87, 91, 391, 419, 420, 446, 461, 465, 467, 468, 503, 507, 509, 512, 518, 578, 603], "dummi": [110, 111, 405, 474, 540], "dump": [16, 84, 90, 105, 126, 407], "dumps_kwarg": [16, 84, 90, 105, 126], "duplic": [87, 91, 100, 154, 391, 392, 397, 411, 412, 415, 440, 443, 459], "durat": [83, 86, 88, 94, 471, 481, 486, 489, 493, 512, 537, 540], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 103, 105, 106, 110, 111, 126, 173, 176, 292, 392, 399, 403, 407, 410, 411, 413, 416, 417, 418, 419, 421, 422, 437, 440, 457, 458, 469, 470, 481, 488, 489, 493, 497, 502, 504, 507, 509, 524, 536, 537, 545, 602, 606], "dust": 231, "duti": 417, "dwarf": [17, 528], "dx": [33, 322], "dy": [33, 322], "dynam": [22, 388, 537], "dynesti": 420, "dz": 322, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 105, 115, 126, 127, 128, 134, 144, 153, 154, 155, 156, 158, 182, 189, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 214, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 294, 298, 302, 318, 320, 324, 350, 358, 369, 380, 381, 386, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 431, 432, 433, 437, 443, 444, 445, 449, 451, 452, 453, 457, 459, 461, 463, 464, 466, 468, 469, 470, 471, 475, 478, 479, 480, 481, 482, 483, 486, 488, 489, 491, 493, 494, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 521, 523, 524, 526, 528, 535, 536, 537, 538, 540, 544, 545, 550, 551, 552, 558, 559, 560, 568, 569, 571, 572, 573, 575, 576, 580, 581, 583, 584, 585, 586, 597, 600, 602, 603, 604, 605, 606, 607, 608], "e0vhoyfx": 502, "e2dnd": [19, 20, 26, 125, 126, 127, 135, 139, 140, 141, 142, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 415, 443, 450, 462, 463, 466, 468, 469, 470, 478, 496, 498, 524, 526, 538, 540, 578], "e2dnde_err": [125, 127], "e2dnde_errn": [125, 127, 496], "e2dnde_errp": [125, 127, 496], "e2dnde_ref": [125, 127], "e2dnde_ul": [125, 127, 496], "e4t0fxk": 493, "e501": [19, 20, 153, 189, 200, 201, 207, 388], "e9x9rshj": 502, "e_": [19, 20, 26, 50, 52, 53, 153, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 536, 542, 544, 545, 546, 569, 573, 581, 583, 584], "e_0": [233, 234, 235, 246, 247, 259, 260, 270, 273, 274, 275, 572, 573, 576, 578, 580, 583, 584, 585, 586], "e_b": 414, "e_cut": [67, 496], "e_cutoff": 578, "e_d": [259, 260], "e_edg": 440, "e_max": [67, 127, 415, 462, 468, 469, 470, 482, 488, 496, 497, 498, 499, 503, 509, 526, 538], "e_min": [67, 127, 415, 462, 468, 469, 470, 482, 488, 496, 497, 498, 499, 503, 509, 513, 526, 538], "e_peak": [235, 247, 274], "e_reco": [112, 117, 153, 158, 491, 602], "e_ref": [67, 127, 415, 462, 468, 469, 488, 496, 498, 523, 526, 538], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 466, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 479, "e_sn": [43, 44, 52], "e_tru": [112, 117, 158, 491, 513, 602], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 86, 87, 91, 92, 100, 103, 106, 109, 110, 111, 116, 119, 120, 122, 124, 125, 127, 128, 132, 135, 136, 138, 140, 141, 142, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 177, 178, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 214, 221, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 253, 254, 255, 256, 258, 259, 260, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 306, 316, 355, 380, 389, 391, 394, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 411, 412, 415, 417, 420, 422, 423, 430, 437, 440, 451, 454, 457, 459, 464, 471, 472, 475, 477, 478, 479, 481, 482, 488, 489, 490, 491, 493, 495, 496, 497, 499, 501, 502, 503, 505, 506, 508, 509, 514, 515, 518, 524, 529, 535, 536, 537, 540, 544, 545, 546, 552, 553, 561, 578, 579, 602, 603, 606, 607], "eager": 407, "earli": [405, 410, 411, 512], "earlier": [398, 417], "earth": [41, 88, 90, 285, 513], "earth_azimuth_angl": [513, 526], "earthloc": [83, 85, 88, 90, 94, 97, 328, 418], "easi": [391, 392, 397, 402, 405, 406, 407, 410, 411, 415, 418, 437, 443, 451, 503, 504, 513, 537, 600, 601, 603, 607], "easier": [391, 397, 402, 410, 415, 451, 454, 512], "easiest": 425, "easili": [87, 91, 127, 397, 402, 403, 407, 418, 420, 424, 425, 488, 489, 499, 501, 503, 513, 526, 603], "ebel": [120, 472], "ebl": [231, 232, 282, 409, 414, 437, 440, 450, 457, 459, 461, 465, 467, 506, 518, 554, 567, 588], "ebl_data_builtin": [463, 568], "ebl_dominguez11": [232, 568], "ebl_franceschini": [232, 282], "ebl_franceschini_2017": 232, "ebl_saldana": 232, "eblabsorbtionnormspectralmodel": 414, "eblabsorptionnormspectralmodel": [264, 414, 440, 463, 506, 568], "ebltabl": 463, "ebound": [153, 201, 553], "ebreak": [223, 270, 569, 583], "ec": [491, 506, 553], "eccentr": [230, 239, 242, 558, 559, 560], "echo": 603, "eco": 417, "ecosystem": 418, "ecpl": [67, 80, 233, 234, 235, 292, 414, 449, 466, 496, 506], "ecpl_norm": 574, "ecsv": [59, 63, 127, 403], "ecut": [233, 273, 573, 584], "edelson": [139, 303, 306, 494], "edg": [103, 106, 110, 111, 120, 122, 124, 128, 131, 132, 136, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 167, 168, 176, 177, 182, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 230, 384, 405, 415, 434, 440, 443, 462, 463, 468, 478, 479, 480, 481, 482, 494, 498, 501, 502, 503, 504, 513, 514, 523, 547, 558], "edge_max": [194, 195, 204, 207, 558], "edge_min": [194, 195, 204, 207, 558], "edge_width": [230, 505, 558], "edgecolor": [388, 468, 470, 472, 479, 480, 483, 491, 495, 549, 558, 559, 560], "edges_max": [198, 200, 201, 206, 503], "edges_min": [198, 200, 201, 206, 503], "edisp": [16, 82, 87, 88, 96, 103, 106, 107, 110, 111, 112, 117, 153, 154, 155, 158, 162, 176, 182, 183, 186, 187, 269, 316, 317, 392, 401, 402, 403, 404, 407, 438, 440, 443, 449, 450, 451, 459, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 479, 481, 482, 486, 489, 490, 493, 497, 502, 508, 512, 513, 514, 515, 523, 536, 544, 602], "edisp2d": [155, 158, 392], "edisp2d_ax": 158, "edisp3d": 501, "edisp_": 536, "edisp_2d": [82, 87, 158, 512, 515], "edisp_3d": 501, "edisp_bin": 101, "edisp_ev": 501, "edisp_fil": 101, "edisp_kernel": [153, 497, 544], "edisp_kernel_map": [154, 514], "edisp_map": [104, 109, 154, 155, 501, 544], "edisp_new": 501, "edispkernel": [106, 112, 117, 154, 158, 186, 438, 544], "edispkernelmap": [103, 106, 107, 110, 111, 115, 155, 161, 162, 166, 169, 176, 183, 186, 439, 440, 472, 502, 513, 540, 544], "edispmap": [103, 104, 106, 109, 110, 111, 161, 162, 166, 169, 176, 183, 186, 187, 403, 404, 412, 433, 436, 437, 438, 440, 443, 501, 536, 544], "edit": [392, 394, 396, 398, 399, 400, 407, 411, 421, 422, 425, 523, 603], "editor": [392, 417, 469, 523, 603], "editori": 417, "edm": 499, "edu": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 195, 204, 207, 214, 229, 250, 253, 285, 286, 411, 499, 553], "eemin": 578, "eff": [156, 507, 542, 545, 559, 560], "eff_area": 501, "effarea": 501, "effect": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 84, 87, 88, 90, 91, 105, 106, 108, 126, 155, 156, 182, 183, 188, 190, 191, 204, 221, 229, 253, 381, 382, 391, 396, 401, 402, 404, 405, 415, 447, 449, 468, 481, 483, 488, 494, 507, 509, 514, 515, 518, 523, 545, 553, 559, 560, 602], "effective_area": [162, 404, 512], "effective_livetim": 502, "effective_times_src": 502, "effectivearea3d": 501, "effectiveareat": [403, 431, 443, 447], "effectiveareatable2d": [88, 155, 162, 168, 190, 397, 447, 501, 512, 542], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 111, 120, 221, 396, 402, 403, 404, 405, 406, 413, 466, 507, 508, 545, 550, 605], "effort": [398, 400, 407, 408, 410, 411, 414, 434, 536, 545], "eflux": [19, 20, 26, 125, 126, 127, 139, 140, 141, 142, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 415, 443, 483, 506, 538], "eflux_err": [125, 127, 415], "eflux_errn": [125, 127], "eflux_errp": [125, 127], "eflux_ref": [125, 127], "eflux_ul": [125, 127], "eg": [391, 459, 463, 477, 486, 490, 493, 497, 501, 505, 506, 509], "egal": 512, "egg": 425, "einasto": [21, 528], "either": [67, 82, 83, 87, 88, 91, 95, 111, 125, 127, 158, 173, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 207, 208, 209, 244, 297, 318, 348, 380, 392, 394, 396, 398, 405, 407, 410, 413, 417, 424, 443, 457, 469, 477, 483, 490, 497, 499, 506, 509, 523, 536, 538, 540, 551, 553, 600, 603], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 495], "elabor": [417, 472], "elaps": [83, 400, 602], "electron": [50, 285, 512, 545, 578], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 384, 409, 420, 457, 459, 496, 503, 507, 552], "elementtre": 512, "elev": 406, "elif": [391, 405, 418], "elli": [431, 444], "ellips": [230, 405, 553, 558], "ellipseannulusskyregion": [549, 553], "ellipseskyregion": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 464, 506, 549], "ellipsoid": 499, "ellipt": [553, 560], "elong": [433, 436, 437, 558, 559], "elpas": 457, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 125, 127, 136, 203, 391, 394, 405, 408, 415, 418, 419, 422, 424, 426, 508, 603, 605], "elsewher": [116, 119], "email": [392, 394, 417, 422], "emax": [101, 132, 258, 286, 474, 480, 581], "emax_fit": 491, "embryon": 407, "emce": [400, 408, 433, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526], "emerg": 401, "emeri": 452, "emin": [101, 132, 258, 286, 474, 480, 581], "emin_fit": 491, "emiss": [52, 68, 140, 397, 402, 406, 468, 475, 477, 478, 481, 505, 512, 513, 536, 545, 550, 578, 600], "emit": [82, 217, 218, 219, 220, 377, 391, 433, 451, 463, 545], "emitt": 468, "emmanoulopoulo": [312, 459], "emphas": 498, "emphasi": 499, "empir": 40, "emploi": 470, "empti": [92, 100, 103, 106, 110, 111, 144, 176, 196, 197, 199, 203, 205, 208, 209, 214, 253, 377, 399, 401, 434, 446, 477, 481, 482, 486, 490, 502, 503, 514, 529, 536, 549, 550, 553], "empty_dataset": 462, "empty_i": 490, "empty_map": [103, 106, 110, 111, 480, 502, 549], "emsembl": 93, "en": [34, 83, 87, 88, 91, 128, 189, 204, 214, 282, 311, 313, 318, 411, 462, 471, 474, 477, 479, 486, 490, 499, 501, 504, 512, 537, 551, 553], "enabl": [400, 403, 425, 434, 443, 452, 462, 471, 474, 477, 479, 486, 490, 512, 547], "encapsul": [207, 415, 551], "enclos": [209, 392, 464, 470, 499, 504], "enclosur": [82, 160, 459, 470, 501], "encod": [16, 84, 87, 90, 91, 105, 126], "encompass": [195, 551, 553], "encount": [16, 84, 90, 105, 126, 170, 424, 425, 426, 427, 470, 475, 481, 490, 493, 515, 591, 603], "encourag": [391, 396, 417, 421, 451], "end": [52, 53, 86, 87, 91, 92, 94, 100, 103, 110, 125, 127, 136, 201, 244, 253, 396, 398, 400, 402, 403, 405, 406, 407, 408, 410, 411, 414, 420, 444, 454, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 521, 523, 524, 526, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 605], "end_po": [129, 351, 483], "endswith": 391, "energet": 481, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 77, 80, 82, 83, 88, 96, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 124, 125, 127, 128, 129, 132, 135, 136, 138, 140, 141, 142, 143, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 176, 178, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 288, 290, 386, 387, 391, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 413, 415, 419, 424, 428, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 461, 463, 464, 465, 467, 468, 469, 471, 472, 474, 475, 477, 478, 479, 481, 483, 484, 485, 486, 488, 489, 490, 491, 493, 496, 497, 498, 502, 503, 514, 515, 518, 523, 524, 526, 535, 536, 537, 540, 545, 547, 548, 549, 551, 552, 553, 561, 568, 574, 577, 579, 582, 587, 598, 601, 602, 604], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 103, 106, 110, 111, 112, 113, 114, 117, 125, 127, 153, 154, 155, 158, 166, 169, 176, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 415, 462, 464, 468, 470, 471, 472, 475, 479, 481, 482, 489, 490, 493, 497, 501, 502, 503, 506, 513, 514, 524, 544, 547, 549, 550, 552, 553], "energy_axis_new": 497, "energy_axis_tru": [103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 153, 154, 155, 156, 158, 164, 166, 176, 392, 437, 462, 464, 468, 470, 471, 472, 475, 479, 481, 482, 486, 489, 490, 491, 493, 497, 501, 502, 513, 514, 524, 544, 547, 549, 550], "energy_bin": 407, "energy_bin_per_decade_max": [113, 114], "energy_bound": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 405, 443, 463, 466, 468, 470, 477, 478, 491, 495, 496, 499, 506, 513, 524, 526, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 587], "energy_cent": 279, "energy_column": 415, "energy_depend": 480, "energy_dependent_estim": [461, 480, 485], "energy_edg": [16, 120, 122, 124, 128, 129, 132, 136, 144, 145, 149, 193, 201, 338, 415, 463, 468, 469, 472, 474, 475, 477, 478, 479, 480, 483, 488, 489, 490, 491, 498, 511, 514, 523, 524, 538], "energy_estim": 514, "energy_flux": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 506, 526], "energy_flux_errn": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "energy_flux_error": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "energy_flux_errp": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "energy_index": 163, "energy_integr": 51, "energy_logspac": 410, "energy_mask": [194, 195, 204, 207, 439, 470, 477, 491, 497, 499, 504, 509], "energy_max": [19, 20, 26, 83, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 153, 194, 195, 201, 204, 207, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 279, 282, 288, 405, 407, 477, 482, 491, 493, 495, 497, 502, 506, 526], "energy_min": [19, 20, 26, 52, 53, 83, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 153, 194, 195, 201, 204, 207, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 279, 282, 288, 405, 407, 477, 482, 491, 493, 495, 497, 502, 506, 526], "energy_nam": [166, 169], "energy_nod": [414, 506], "energy_pow": [19, 20, 26, 127, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 290, 468, 477, 491, 499, 526], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 103, 106, 110, 111, 443, 497, 504, 585, 586], "energy_range_fit": [103, 106, 110, 111, 497], "energy_range_saf": [103, 106, 110, 111, 497], "energy_range_tot": [103, 106, 110, 111, 504], "energy_reco": [391, 486], "energy_ref": [125, 127], "energy_resolut": 451, "energy_saf": 407, "energy_tru": [16, 96, 103, 106, 110, 111, 112, 117, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 176, 183, 186, 194, 195, 201, 204, 207, 316, 317, 391, 392, 404, 457, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 479, 481, 482, 486, 488, 489, 490, 491, 493, 497, 501, 502, 503, 504, 506, 508, 512, 513, 514, 523, 524, 544, 545, 547, 549, 550, 552, 553], "energy_true_axi": 153, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 435, "energydependentmorphologi": 480, "energydependentmorphologyestim": [458, 480], "energydependentmultigausspsf": [162, 431, 501, 512, 546], "energydependenttablepsf": [397, 412, 432, 443], "energydispers": [153, 154, 155, 158, 403, 438, 448, 451, 452], "energydispersion2d": [88, 153, 155, 162, 168, 186, 187, 392, 397, 443, 445, 450, 501, 512, 544], "energydispersion3d": 501, "energyoffsetarrai": 448, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 394, 418], "engin": [87, 91], "english": 540, "enhanc": [396, 400, 428], "enlarg": 550, "enough": [404, 406, 407, 420, 468, 471, 475, 486, 488, 504, 547], "enrico": 407, "enrico_config": 407, "enrico_xml": 407, "enriqu": [399, 407, 411, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 451, 452, 453], "ensembl": [93, 420, 507], "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 182, 202, 292, 391, 397, 402, 403, 414, 418, 425, 445, 459, 462, 468, 489, 498, 504, 547, 552, 562], "enter": [218, 220, 229, 253, 428], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 103, 105, 106, 110, 111, 126, 183, 420, 464, 477, 480, 494, 507], "entri": [43, 44, 87, 91, 94, 122, 125, 128, 129, 132, 133, 136, 138, 139, 146, 147, 214, 215, 229, 253, 292, 358, 391, 392, 403, 411, 415, 418, 421, 443, 454, 459, 464, 469, 496, 499, 503, 506, 508, 540, 541, 553], "entry_point": 444, "enum": [95, 159, 333, 334], "enumer": [420, 468, 481, 496, 499, 505, 507, 509], "env": [394, 408, 421, 423, 424, 426, 427, 452, 603], "envelop": [404, 499, 524], "environ": [11, 82, 356, 390, 391, 394, 398, 399, 403, 408, 411, 421, 422, 424, 425, 426, 427, 428, 432, 433, 435, 451, 452, 459, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 603], "envis": 400, "envvar": 11, "eosc": 417, "episod": 140, "epjc": [311, 313], "epoch": 374, "epsilon": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "epsilon_": [103, 110, 536], "epsilon_k": [103, 110, 536], "epsmch": 499, "eq": [102, 274], "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 414, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 120, 124, 128, 132, 136, 153, 201, 311, 313, 391, 401, 404, 453, 468, 488, 489, 504, 509, 536, 552, 606], "equat": [27, 274, 275, 303, 392, 563, 564, 569, 572, 573, 575, 576, 580, 581, 583, 584, 585, 586, 605, 606], "equatori": [95, 159, 195, 196, 197, 199, 202, 204, 207, 208, 209, 501], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 248, 384, 392, 403, 404, 405, 414, 415, 457, 458, 468, 496, 502, 503, 504, 506, 512, 523, 536, 538, 540, 551, 552, 553, 603, 604, 605], "er": [26, 495], "era": 231, "ereco": [153, 501], "erf": [240, 558], "erg": [52, 53, 67, 462, 468, 496, 526, 533, 540], "erlangen": 410, "erod": 209, "eros": [207, 209], "err": 499, "errat": 391, "errlo": [420, 507], "errn": [124, 128, 132, 133, 136, 214, 454, 605], "errn_2sigma": 605, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 102, 103, 105, 106, 110, 111, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 146, 172, 176, 189, 198, 201, 206, 217, 219, 223, 224, 225, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 294, 295, 296, 298, 302, 303, 304, 306, 312, 369, 391, 392, 405, 406, 407, 409, 414, 415, 418, 419, 420, 433, 437, 439, 441, 443, 444, 446, 450, 451, 454, 456, 457, 458, 459, 463, 464, 466, 468, 469, 471, 472, 474, 477, 478, 479, 480, 482, 486, 488, 490, 491, 493, 494, 496, 498, 506, 507, 508, 509, 512, 523, 524, 526, 528, 536, 538, 540, 559, 578, 587, 600, 603], "error_callback": 172, "errorbar": [83, 102, 103, 106, 110, 111, 201, 205, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 462, 493, 509], "errp": [124, 128, 132, 133, 136, 214, 454, 605], "errp_2sigma": 605, "errup": [420, 507], "escap": [391, 417, 420, 507], "especi": [87, 91, 140, 394, 398, 401, 405, 411, 412, 422, 443, 449, 464, 479, 489, 496, 503, 509, 512, 513], "ess": [420, 507], "essenti": [401, 403, 406, 437, 438, 439, 483, 503], "establish": [391, 404], "estim": [6, 19, 20, 26, 50, 72, 102, 106, 111, 113, 114, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 171, 177, 178, 179, 185, 194, 195, 204, 207, 209, 214, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 292, 295, 301, 304, 309, 338, 384, 395, 397, 400, 404, 405, 406, 407, 410, 413, 419, 424, 433, 434, 437, 438, 439, 440, 443, 444, 445, 449, 450, 451, 452, 454, 457, 458, 459, 461, 462, 463, 468, 470, 475, 477, 478, 479, 482, 484, 485, 487, 489, 490, 491, 492, 497, 499, 500, 504, 507, 509, 510, 514, 518, 523, 524, 536, 540, 545, 550, 600, 601, 602, 604, 606], "estimate_best_fit": [128, 129, 132, 133], "estimate_count": [128, 129, 132, 133], "estimate_energy_depend": 122, "estimate_errn_errp": [128, 129, 132, 133], "estimate_excess_map": 124, "estimate_exposure_reco_energi": 124, "estimate_fit_input_map": 136, "estimate_flux_default": 136, "estimate_flux_map": 136, "estimate_flux_point": [128, 129, 132], "estimate_kernel": [124, 136], "estimate_map": 120, "estimate_mask_default": [124, 136], "estimate_min_e2dnd": 135, "estimate_min_excess": 135, "estimate_npr": [128, 129, 132, 133], "estimate_npred_excess": [128, 129, 132], "estimate_pad_width": 136, "estimate_scan": [128, 129, 132, 133], "estimate_sensit": [128, 129, 132, 133], "estimate_t": [128, 129, 132, 133], "estimate_time_bin_flux": 132, "estimate_ul": [128, 129, 132, 133], "estimator_result": [138, 146, 147, 491], "et": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 35, 39, 40, 57, 59, 63, 102, 120, 134, 139, 140, 156, 231, 303, 304, 306, 311, 312, 313, 392, 401, 420, 459, 472, 480, 494, 507, 528, 602], "eta": [242, 243, 266, 560, 564, 593], "eta_": 50, "eta_b": 50, "eta_rang": [560, 564], "etc": [106, 111, 125, 391, 396, 397, 401, 402, 403, 406, 407, 411, 412, 415, 417, 418, 420, 440, 469, 471, 477, 486, 488, 490, 491, 493, 497, 503, 506, 507, 509, 513, 523, 536, 549, 602], "etru": 501, "eu": 411, "euclidean": 316, "europ": 417, "european": [311, 313], "ev": [498, 501, 540, 578], "ev2": 501, "eval": 507, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 103, 106, 109, 110, 111, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 183, 189, 193, 204, 215, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 331, 391, 396, 400, 406, 409, 410, 413, 414, 415, 419, 432, 433, 434, 436, 439, 443, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 481, 482, 491, 501, 506, 507, 509, 512, 513, 536, 559, 560, 568, 602, 605], "evaluate_contain": [157, 165, 167, 445], "evaluate_direct": [157, 165, 167], "evaluate_energy_flux": [259, 260], "evaluate_error": [19, 20, 26, 127, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 409], "evaluate_geom": [225, 226, 230, 237, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281, 458, 506, 560], "evaluate_integr": [258, 259, 260], "evaluate_paramet": [157, 165, 167], "evaluation_bin_size_min": [225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281], "evaluation_radiu": [225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 279, 281, 402, 403, 414, 506], "evaluation_region": [225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 137, 146, 207, 218, 220, 391, 394, 396, 398, 399, 405, 408, 409, 417, 418, 420, 435, 488, 491, 498, 499, 502, 503, 504, 505, 506, 523, 536, 538, 563, 564, 603], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 104, 105, 109, 115, 124, 135, 155, 166, 169, 170, 177, 185, 196, 197, 199, 205, 208, 209, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 348, 391, 392, 395, 397, 401, 403, 405, 406, 407, 418, 424, 428, 435, 436, 437, 439, 443, 444, 445, 450, 451, 452, 453, 454, 457, 458, 459, 461, 464, 468, 469, 470, 475, 477, 478, 484, 485, 490, 502, 511, 514, 515, 516, 518, 521, 523, 524, 525, 540, 548, 549, 550, 601, 602, 605, 608], "event_3fhl": 526, "event_class": [84, 513, 526], "event_det_coord": [104, 109], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [404, 512, 513, 526, 537], "event_list": [83, 391, 392, 404], "event_list_id": 83, "event_list_meta": [104, 109, 438], "event_list_zd": 83, "event_sampl": [461, 481, 485], "event_sampling_nrg_depend_model": [461, 482, 485], "event_typ": [105, 513, 526], "eventlist": [84, 88, 104, 109, 185, 196, 197, 199, 205, 208, 209, 391, 392, 397, 404, 405, 406, 418, 428, 433, 440, 445, 447, 448, 449, 451, 452, 481, 482, 491, 503, 512, 513, 526, 537, 540, 549, 608], "eventlistbas": 89, "eventlistdataset": 452, "eventlistmetadata": [83, 418], "events2": 83, "events_": 481, "events_0001": 481, "events_1": 537, "events_2": 537, "events_3fhl": 526, "events_bkg": 404, "events_gc_3fhl": 526, "events_list": 404, "events_path": [82, 481], "events_src": 404, "events_tot": 404, "events_vela": 491, "eventu": [391, 396, 407, 410, 411, 428, 506], "ever": [420, 507, 606], "everi": [195, 197, 209, 281, 391, 394, 399, 400, 401, 403, 407, 416, 418, 422, 464, 468, 503, 524, 603], "everyon": 396, "everyth": [391, 409, 410, 540], "everywher": [391, 405, 410, 411, 432], "evid": [140, 496, 507], "evolut": [30, 31, 32, 50, 52, 53, 231, 397, 411, 461, 484, 485, 518, 533, 534, 554], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 231, 408, 411, 418, 420, 482, 501, 507], "evt_sampl": 481, "ex": [11, 503, 505, 506], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 221, 409, 489, 503, 513], "exactli": [120, 124, 128, 132, 136, 201, 386, 420, 468, 470, 489, 491, 504, 509, 513, 536, 553], "exagger": 382, "examin": [417, 544], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 102, 103, 106, 110, 111, 112, 116, 117, 119, 120, 122, 124, 125, 127, 129, 131, 132, 133, 135, 136, 140, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 160, 164, 166, 169, 176, 179, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 219, 220, 221, 229, 238, 244, 248, 251, 253, 262, 282, 284, 286, 292, 297, 316, 317, 338, 342, 348, 358, 370, 371, 376, 379, 381, 382, 384, 386, 388, 391, 392, 394, 396, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 414, 417, 418, 419, 420, 424, 425, 426, 428, 432, 434, 437, 440, 443, 444, 445, 448, 450, 451, 452, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 530, 531, 537, 540, 542, 543, 544, 546, 551, 553, 554, 555, 566, 588, 597, 598, 599, 600, 603, 605, 607, 608], "example_cub": 503, "example_cube_fgst": 503, "exce": [113, 114], "except": [67, 69, 80, 87, 91, 103, 106, 110, 111, 172, 196, 197, 199, 205, 208, 209, 318, 388, 391, 402, 406, 410, 501, 505, 553], "excerpt": 515, "excess": [15, 67, 72, 103, 106, 110, 111, 121, 124, 125, 127, 128, 129, 132, 135, 136, 138, 141, 142, 146, 147, 176, 229, 253, 294, 298, 303, 304, 389, 403, 406, 439, 440, 446, 451, 458, 459, 462, 463, 468, 469, 471, 472, 474, 477, 479, 483, 486, 490, 491, 496, 497, 498, 502, 504, 505, 511, 514, 523, 524, 538, 540], "excess_estim": 514, "excess_estimator_integr": 514, "excess_integr": 514, "excess_map": [16, 469, 474, 475, 477, 523], "excess_map_estim": 491, "excess_matching_signific": [442, 452], "excess_min": 149, "excess_r": 497, "excessestim": 415, "excessmapconfig": 16, "excessmapestim": [121, 144, 145, 146, 147, 415, 439, 440, 441, 443, 446, 456, 458, 459, 475, 477, 491, 498, 504, 514, 538], "excesspointsestim": 415, "excessprofileestim": [415, 440], "exchang": 405, "exclud": [16, 84, 90, 102, 103, 105, 106, 110, 111, 126, 131, 177, 179, 218, 220, 229, 253, 397, 455, 477, 502, 504, 549, 550], "exclude_default": [16, 84, 90, 105, 126], "exclude_non": [16, 84, 90, 105, 126], "exclude_unset": [16, 84, 90, 105, 126], "exclus": [16, 83, 171, 173, 178, 179, 180, 181, 184, 195, 207, 397, 405, 407, 439, 441, 459, 464, 474, 477, 502, 547, 549], "exclusion_mask": [171, 173, 178, 179, 180, 181, 184, 468, 475, 479, 502, 504, 524, 547, 549, 550], "exclusion_mask_2d": 502, "exclusion_mask_crab": [469, 523], "exclusion_radiu": 504, "exclusion_region": 468, "exclusionmask": 449, "execut": [11, 124, 128, 132, 133, 136, 391, 392, 394, 396, 398, 399, 400, 406, 407, 411, 422, 423, 424, 425, 426, 427, 428, 437, 445, 451, 461, 467, 476, 485, 492, 502, 503, 510, 513, 517, 518, 520, 522, 526, 527, 555, 566, 588, 599, 601], "exercis": [394, 407, 411, 417], "exhibit": 480, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 88, 91, 99, 100, 102, 103, 106, 108, 110, 111, 125, 127, 154, 155, 161, 166, 169, 181, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 215, 229, 244, 253, 262, 277, 278, 279, 281, 360, 375, 391, 394, 396, 399, 400, 402, 403, 404, 405, 407, 408, 410, 411, 412, 414, 415, 417, 418, 420, 424, 425, 428, 429, 432, 436, 437, 451, 452, 454, 457, 472, 475, 497, 503, 504, 506, 507, 508, 513, 537, 552, 553, 604], "exist_ok": [468, 469, 477, 478, 481, 523, 524], "exit": [11, 15, 87, 91, 218, 220, 229, 253, 433, 565, 603], "exot": 408, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 156, 236, 240, 247, 259, 260, 273, 392, 414, 490, 506, 507, 559, 560, 568, 572, 573, 574, 575, 584, 585, 586, 591, 592, 593, 606], "expand": [132, 356, 401, 443], "expand_map": 132, "expans": [50, 52, 53], "expcutoffpowerlaw": 574, "expcutoffpowerlaw3fglspectralmodel": [264, 414, 466, 506, 573], "expcutoffpowerlawnormspectralmodel": [235, 264, 458, 506, 574], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 223, 224, 227, 231, 233, 234, 240, 246, 247, 250, 254, 256, 258, 259, 260, 264, 265, 270, 272, 273, 274, 275, 278, 282, 414, 466, 468, 477, 506, 572, 578], "expdecai": [236, 461, 554, 589, 599], "expdecay_model": [481, 591], "expdecaytemporalmodel": [276, 414, 439, 443, 481, 490, 506, 591], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 109, 111, 125, 181, 186, 187, 192, 207, 294, 297, 298, 299, 301, 305, 315, 348, 391, 396, 404, 406, 407, 408, 411, 416, 418, 462, 464, 470, 471, 472, 475, 481, 482, 488, 494, 495, 499, 503, 504, 507, 509, 513, 515, 536, 538, 604, 605, 606], "expected_ts_0": 608, "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 468, 482], "experi": [391, 394, 396, 400, 402, 406, 419, 420, 422, 451, 528, 602, 607], "experienc": [400, 427], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 407, 603], "expert": [411, 518], "expertis": 408, "expfactor": [274, 275, 585, 586], "expir": 404, "explain": [87, 91, 391, 394, 396, 405, 408, 410, 411, 417, 422, 424, 426, 437, 443, 462, 468, 470, 495, 499, 504, 506, 511, 512, 540, 601, 603], "explan": [120, 124, 128, 132, 136, 392, 396, 429, 494, 607], "explicit": [87, 91, 195, 197, 391, 392, 407, 409, 415, 552, 607], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 318, 401, 413, 423, 433, 482, 505, 538, 552, 607], "explor": [196, 197, 199, 205, 208, 209, 399, 407, 420, 428, 461, 468, 474, 477, 480, 483, 484, 485, 488, 489, 493, 494, 496, 497, 505, 507, 514, 515, 523, 526, 540, 549], "explos": 52, "expomap": 404, "expon": [414, 506], "exponenti": [28, 30, 36, 39, 40, 77, 233, 234, 235, 236, 273, 274, 275, 392, 402, 437, 461, 477, 481, 490, 554, 567, 588], "exponentialcutoffpowerlaw": 578, "export": [84, 87, 90, 91, 103, 105, 106, 125, 126, 127, 394, 415, 418, 424, 426, 437, 447, 454, 455, 458, 469, 506, 514, 515, 523], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 400, 405, 406, 407, 410, 411, 456, 458, 459, 500, 503, 518, 538, 539, 601], "exposur": [16, 83, 88, 101, 103, 106, 107, 109, 110, 111, 124, 136, 143, 154, 155, 161, 164, 166, 169, 171, 176, 183, 186, 187, 188, 190, 191, 192, 269, 307, 310, 315, 397, 400, 401, 402, 403, 404, 415, 435, 440, 448, 450, 451, 452, 454, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 479, 481, 482, 486, 489, 490, 493, 497, 502, 503, 504, 514, 523, 524, 536, 548, 553, 605], "exposure_fil": 101, "exposure_geom": 155, "exposure_hdu": [154, 155, 161, 166, 169], "exposure_hdu_band": [154, 155, 161, 166, 169], "exposure_hpx": 513, "exposure_map": [154, 155, 161, 166, 169, 186, 187, 192, 501], "exposure_max": 497, "exposure_min": 497, "exposure_tim": 404, "express": [124, 140, 294, 298, 402, 414, 415, 458, 475, 499, 501, 506, 509, 536, 545, 552, 560, 604, 605, 606], "exptest": 449, "extend": [15, 19, 20, 22, 26, 69, 72, 87, 91, 92, 100, 171, 198, 201, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 297, 398, 402, 403, 404, 405, 411, 413, 414, 415, 418, 424, 436, 438, 443, 461, 465, 467, 468, 472, 482, 488, 496, 503, 504, 505, 506, 511, 513, 518, 548, 549], "extended_archive_v18": 565, "extended_source_spectral_analysi": [461, 464, 467], "extens": [41, 153, 196, 197, 199, 201, 208, 209, 225, 226, 229, 230, 239, 242, 253, 255, 257, 266, 267, 271, 277, 281, 393, 396, 397, 398, 399, 400, 402, 404, 406, 407, 408, 409, 410, 411, 421, 422, 446, 480, 481, 482, 506, 603], "extent": [207, 229, 253, 405, 472, 506], "extern": [115, 392, 417, 444, 448, 449, 452, 512, 540], "extnam": 501, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 102, 105, 126, 194, 195, 200, 204, 205, 207, 213, 214, 216, 277, 278, 316, 390, 392, 398, 399, 405, 407, 408, 411, 417, 418, 448, 451, 452, 463, 503, 504, 518, 540, 553], "extra_term": 315, "extract": [16, 84, 90, 100, 103, 105, 106, 110, 111, 125, 126, 127, 132, 154, 155, 161, 166, 169, 172, 177, 178, 183, 185, 193, 196, 197, 198, 199, 201, 206, 207, 208, 209, 279, 391, 401, 406, 415, 417, 418, 445, 446, 457, 458, 462, 464, 468, 469, 470, 471, 477, 478, 481, 482, 483, 486, 493, 497, 498, 503, 523, 536, 544, 549], "extragalact": [231, 463, 512], "extrapol": [102, 150, 151, 152, 176, 196, 197, 199, 205, 208, 209, 231, 282, 330, 331, 443, 448, 450, 451, 459, 501, 503, 512, 513, 552], "extras_requir": 408, "extrem": [391, 418, 503, 560], "ey": 420, "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 136, 149, 203, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 317, 318, 345, 391, 394, 408, 413, 414, 419, 423, 424, 426, 445, 454, 462, 464, 469, 471, 478, 479, 480, 481, 482, 489, 490, 491, 493, 495, 496, 499, 502, 504, 506, 507, 508, 509, 513, 514, 521, 523, 524, 526, 534, 549, 568, 578, 590, 591, 592, 593, 594, 595, 596, 603, 604, 605], "f0": [280, 597], "f06": 48, "f06b": [49, 530], "f06p": 49, "f1": [280, 597], "f2": [280, 597], "f4": [151, 156, 470, 497, 501, 503, 512, 513], "f8": [501, 513], "f_": [302, 304, 317, 536], "f_0": [258, 581], "f_dead": [83, 88], "f_i": 302, "f_max": 494, "f_max_err": 494, "f_mean": 494, "f_mean_err": 494, "f_min": 494, "f_min_err": 494, "f_pp": 303, "f_var": 303, "fabio": [404, 409, 420, 433, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 450, 452, 454, 456, 457, 458, 459], "face": [396, 399], "facecolor": [388, 463, 468, 470, 479, 480, 483, 491, 495, 558, 559, 560], "facil": 416, "fact": [19, 20, 97, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 417, 464, 553], "facto": 417, "factor": [19, 20, 23, 103, 104, 106, 109, 110, 111, 120, 124, 125, 154, 155, 157, 161, 163, 164, 165, 166, 167, 169, 176, 183, 189, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 212, 217, 218, 219, 220, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 255, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 277, 280, 281, 283, 297, 391, 404, 406, 420, 439, 459, 462, 471, 472, 474, 477, 479, 483, 486, 490, 497, 498, 502, 506, 512, 536, 553, 568], "factor1": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281], "factor_max": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281], "factor_min": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281], "factori": [196, 197, 208, 209, 405, 410, 414, 551, 553], "factoris": [269, 414, 506, 600], "fail": [16, 84, 90, 105, 126, 214, 392, 394, 405, 420, 421, 422, 446, 459, 468, 478, 513], "failur": [454, 457], "faint": 604, "fair": [391, 417], "fair4r": [391, 417], "fake": [103, 106, 110, 111, 403, 404, 435, 470, 471, 486, 490, 509], "fall": [77, 140, 179, 206, 229, 253, 391, 398, 400, 401, 408, 420, 452, 453, 494, 507], "fallback": [16, 84, 90, 105, 126, 391], "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 119, 124, 125, 126, 127, 128, 129, 132, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 297, 318, 331, 348, 354, 357, 359, 360, 388, 391, 405, 407, 414, 419, 420, 451, 452, 458, 462, 463, 464, 468, 469, 470, 471, 474, 475, 477, 478, 479, 480, 481, 483, 486, 488, 489, 490, 493, 495, 496, 497, 499, 501, 502, 503, 504, 505, 506, 507, 509, 513, 523, 524, 526, 537, 540, 547, 549, 550, 565, 578, 587], "falsifi": 509, "famili": 417, "familiar": [408, 409, 503, 504, 526], "fanci": [391, 491], "far": [399, 404, 406, 408, 412, 415, 418, 420, 428, 443, 481, 507, 528], "fashion": [406, 411], "fast": [391, 405, 409, 499], "faster": [87, 91, 137, 146, 196, 197, 199, 205, 208, 209, 369, 458, 472, 507], "faucher": [30, 31, 32, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 530, "favour": [396, 404, 419, 509], "favourit": 479, "fc": [506, 553], "fcluster": [316, 508], "fcluster_kwarg": [316, 508], "fcn": [420, 499], "fdx": 391, "fe": 285, "feasibl": [405, 410, 471, 486, 497], "featur": [6, 13, 87, 91, 96, 120, 144, 316, 317, 381, 382, 391, 394, 398, 400, 401, 402, 403, 405, 407, 408, 413, 414, 415, 417, 418, 419, 425, 430, 433, 434, 435, 436, 437, 439, 440, 443, 447, 450, 451, 452, 453, 494, 503, 504, 506, 508, 538, 578], "feature_irf": 508, "features_irf": [96, 316, 317, 508], "feb": [397, 398, 408, 412, 428, 430], "februari": 430, "fed": 470, "feedback": [394, 396, 400, 405, 407, 408, 411, 412, 414, 420, 421, 451, 501, 540], "feedstock": [421, 422], "feel": [401, 603], "feijen": [456, 457, 458, 459], "feldman": [434, 440, 448, 450, 602], "feldman1998": 602, "fellowship": 417, "felt": 391, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 101, 128, 129, 131, 136, 196, 197, 199, 205, 206, 208, 209, 229, 231, 253, 285, 287, 292, 398, 399, 400, 401, 403, 404, 407, 408, 411, 422, 424, 429, 431, 432, 435, 437, 440, 444, 447, 448, 449, 450, 451, 452, 459, 461, 463, 466, 472, 481, 483, 496, 503, 504, 505, 506, 516, 517, 518, 526, 528, 537, 540, 545, 565, 576, 581, 600, 607], "fermi_3fhl": [83, 196, 197, 199, 205, 208, 209, 505, 513, 526, 608], "fermi_3fhl_events_select": [83, 513, 608], "fermi_3fhl_exposure_cube_hpx": 513, "fermi_3fhl_psf_gc": 513, "fermi_bkg_model": 505, "fermi_ct": 131, "fermi_dataset": [229, 253, 292, 505, 513], "fermi_lat": [411, 452, 461, 513, 517], "fermi_model": 513, "fermi_prof": 129, "fermi_ts_imag": 392, "fermilat": 463, "fermipi": [101, 398, 400, 403, 407, 411, 415, 449, 451, 513, 528], "fermitool": 407, "fetch": [15, 391, 394, 399, 421, 431, 444, 523, 603], "few": [82, 83, 87, 88, 91, 390, 391, 392, 394, 396, 397, 398, 399, 401, 403, 405, 409, 411, 416, 420, 421, 422, 428, 442, 453, 455, 458, 459, 464, 469, 475, 477, 479, 496, 498, 499, 503, 507, 512, 523, 524, 549, 553, 608], "fewer": [405, 411], "ff": 417, "fft": 209, "fftconvolv": 209, "fgl": [206, 504], "fgst": [195, 196, 197, 199, 200, 201, 207, 208, 209, 503], "fhit": 514, "fidalgo": [401, 406, 432, 452, 453], "fiduci": 503, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 105, 126, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 173, 237, 254, 320, 324, 378, 391, 405, 417, 418, 428, 433, 438, 445, 452, 468, 470, 475, 477, 479, 481, 501, 502, 504, 512, 513, 540, 542, 543, 544, 545, 546, 547, 549, 578, 602], "fieldinfo": [16, 84, 90, 105, 126], "fig": [209, 379, 462, 464, 468, 469, 470, 471, 472, 475, 477, 478, 479, 480, 483, 488, 490, 491, 495, 499, 504, 507, 509, 524, 549, 550, 560, 564, 568, 601, 608], "figsiz": [88, 103, 106, 110, 111, 130, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 196, 197, 199, 205, 208, 209, 212, 379, 464, 468, 471, 472, 475, 477, 478, 479, 480, 488, 489, 490, 491, 493, 494, 495, 496, 499, 501, 502, 503, 504, 505, 506, 508, 509, 511, 512, 513, 524, 549, 560, 564, 568, 608], "figur": [88, 103, 106, 110, 111, 130, 150, 151, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 169, 196, 197, 199, 205, 208, 209, 212, 369, 378, 379, 385, 391, 392, 396, 411, 422, 463, 468, 472, 477, 479, 480, 481, 483, 488, 489, 494, 495, 496, 497, 499, 502, 503, 505, 506, 511, 512, 513, 514, 603, 608], "file": [11, 15, 16, 26, 65, 66, 67, 77, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 103, 106, 107, 108, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 177, 182, 196, 197, 199, 203, 205, 208, 209, 215, 221, 229, 231, 244, 253, 277, 278, 279, 280, 281, 282, 326, 354, 357, 360, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 411, 412, 414, 415, 418, 419, 421, 422, 423, 424, 426, 428, 436, 437, 443, 445, 447, 449, 450, 451, 452, 454, 455, 457, 458, 459, 461, 462, 467, 470, 471, 476, 477, 479, 481, 482, 485, 486, 490, 492, 496, 497, 502, 503, 504, 505, 506, 507, 510, 514, 515, 516, 517, 518, 520, 522, 526, 527, 528, 539, 540, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 607], "file_dir": 326, "file_model": 481, "file_nam": 326, "filemod": [16, 469, 474, 475, 477, 523, 603], "filenam": [11, 16, 26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 103, 106, 107, 108, 110, 111, 125, 127, 129, 131, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 196, 197, 199, 203, 205, 208, 209, 229, 231, 244, 253, 277, 278, 279, 280, 281, 282, 287, 289, 291, 292, 326, 357, 360, 370, 391, 392, 396, 440, 459, 468, 469, 474, 475, 477, 478, 482, 483, 496, 497, 498, 503, 504, 505, 506, 512, 513, 523, 524, 526, 537, 540, 542, 543, 544, 546, 565, 568, 597, 598, 603, 608], "filename_1": 537, "filename_2": 537, "filename_arf": 108, "filename_bkg": 108, "filename_model": [100, 125, 292, 505, 513], "filename_rmf": 108, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 103, 105, 106, 109, 110, 111, 126, 153, 164, 195, 196, 197, 199, 205, 207, 208, 209, 282, 391, 399, 400, 404, 407, 411, 417, 421, 422, 437, 444, 451, 454, 464, 481, 482, 496, 501, 502, 504, 507, 513, 524, 552], "fill_between": [19, 20, 26, 130, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 491], "fill_by_coord": [164, 196, 197, 199, 205, 208, 209, 503, 513, 552], "fill_by_idx": [196, 197, 199, 205, 208, 209, 552], "fill_by_pix": [196, 197, 199, 205, 208, 209, 552], "fill_ev": [196, 197, 199, 205, 208, 209, 446, 457, 470, 503, 513, 521, 608], "fill_nan": 197, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 277, 278, 281, 391, 501, 503], "filled_t": [87, 91], "filter": [83, 88, 89, 397, 401, 403, 405, 406, 452, 453, 456, 493, 504, 508, 516, 518, 524, 526], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [125, 127], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [490, 491], "final": [132, 297, 391, 392, 398, 399, 401, 404, 405, 407, 408, 410, 412, 414, 416, 417, 422, 437, 438, 439, 462, 463, 464, 466, 468, 477, 479, 481, 482, 488, 489, 491, 495, 497, 499, 502, 504, 507, 508, 513, 514, 518, 523, 524, 525, 526, 536, 537, 538], "finalis": 395, "find": [19, 20, 26, 134, 136, 144, 145, 153, 179, 180, 184, 211, 222, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 307, 391, 396, 402, 404, 410, 421, 422, 423, 443, 445, 451, 452, 457, 458, 466, 468, 472, 496, 497, 503, 506, 507, 512, 515, 526, 603, 605, 606], "find_peak": [145, 452, 472, 479], "find_peaks_in_flux_map": 472, "find_root": 443, "finder": [144, 179, 180, 443, 452, 472], "fine": [293, 331, 404, 475, 497, 513, 553, 603], "finer": [481, 497, 553], "fingertip": 390, "finish": [394, 398, 400, 421, 449, 451], "finit": [100, 103, 106, 110, 111, 154, 155, 161, 166, 182, 197, 205, 209, 279, 409], "fink": [231, 232, 463, 568], "fir": 578, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 103, 106, 110, 111, 125, 127, 129, 137, 139, 144, 146, 153, 170, 179, 196, 197, 198, 201, 205, 206, 229, 253, 286, 306, 351, 380, 391, 392, 394, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 415, 416, 417, 420, 422, 423, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 450, 452, 453, 454, 455, 457, 459, 462, 464, 466, 468, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 502, 503, 504, 505, 506, 508, 509, 512, 513, 514, 518, 523, 524, 525, 526, 537, 549, 552, 603], "firstli": [392, 394, 480, 481, 498], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 107, 108, 110, 111, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 173, 176, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 213, 215, 216, 217, 219, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 279, 280, 281, 282, 284, 292, 293, 294, 295, 296, 298, 299, 300, 305, 308, 314, 315, 326, 327, 328, 373, 374, 377, 379, 384, 386, 390, 391, 392, 397, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 418, 419, 424, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 448, 450, 451, 452, 453, 455, 457, 458, 459, 461, 462, 465, 467, 471, 472, 473, 475, 476, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 512, 514, 515, 518, 521, 525, 526, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 558, 565, 568, 578, 597, 598, 601, 602, 607, 608], "fit2": 505, "fit_covari": [469, 523], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [464, 468, 477, 478], "fit_prior": 509, "fit_rang": [16, 469, 474, 475, 477, 523], "fit_result": [214, 292, 469, 493, 498, 523], "fit_results_nul": 292, "fit_scipi": 499, "fit_sherpa": 499, "fit_stat_scan": 406, "fit_statist": [391, 475], "fit_statistics_cython": 422, "fitconfig": 16, "fitmc": 409, "fitresult": [214, 445, 457, 459, 499, 524], "fitsfixedwarn": [472, 565], "fitsonli": 512, "fitspectrum": 447, "fitstatist": [295, 296], "fitstepresult": [213, 216], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 450, 451, 466], "five": 526, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 107, 108, 136, 148, 166, 168, 183, 214, 255, 256, 261, 281, 394, 396, 397, 398, 402, 403, 406, 408, 413, 415, 416, 417, 421, 422, 424, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 462, 470, 471, 474, 475, 477, 478, 481, 486, 489, 490, 493, 499, 501, 502, 505, 506, 508, 511, 523, 550, 552, 561, 579], "fixed_altaz": 85, "fixed_bin": 148, "fixed_icr": [85, 166, 462, 471, 481, 482, 486, 490], "fixed_offset": [96, 182, 443], "fixed_r_in": 171, "fixed_width": 171, "fixedpointinginfo": [88, 166, 189, 457, 458, 462, 471, 481, 482, 486, 490], "fk5": [553, 565], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 104, 109, 125, 127, 128, 129, 132, 133, 194, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 209, 213, 214, 215, 216, 392, 464, 477, 481, 496, 506], "flake8": 394, "flare": [140, 302, 424, 437, 438, 461, 487, 488, 490, 492, 493, 494, 518, 538, 549], "flask": 451, "flat": [127, 140, 158, 168, 194, 195, 200, 202, 204, 207, 210, 211, 255, 402, 415], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 195, 202, 204, 207, 494], "fledg": 419, "flexibl": [82, 342, 391, 396, 400, 401, 402, 405, 407, 411, 412, 418, 503, 540, 600], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 103, 106, 110, 111, 115, 120, 124, 126, 127, 130, 133, 134, 135, 136, 144, 145, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 171, 173, 182, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 210, 211, 214, 216, 217, 219, 221, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 292, 293, 294, 297, 298, 301, 305, 307, 311, 313, 318, 329, 336, 345, 347, 380, 381, 382, 502, 509, 512, 513, 603, 607], "float32": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 474, 479, 503], "float64": [87, 91, 112, 117, 153, 156, 391, 419, 428, 498, 501, 503, 538, 603], "float64float64float64": 479, "float64float64float64float64float64float64float64float32bool": 466, "float64float64float64float64float64float64float64float64": 479, "float_a": [87, 91], "flow": [418, 601, 602], "fluctuat": [294, 298, 415, 471, 486, 509, 605], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 102, 103, 106, 110, 111, 120, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 223, 224, 225, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 265, 268, 269, 270, 272, 273, 274, 275, 278, 280, 282, 283, 285, 286, 290, 295, 301, 302, 303, 304, 306, 312, 395, 403, 404, 406, 407, 409, 411, 412, 414, 424, 431, 434, 436, 437, 439, 443, 445, 449, 450, 451, 453, 458, 459, 461, 465, 467, 470, 472, 477, 479, 481, 482, 484, 485, 488, 489, 490, 491, 493, 494, 497, 503, 506, 513, 518, 525, 534, 536, 540, 545, 554, 562, 578, 600, 601, 602, 605], "flux1": 306, "flux2": 306, "flux_err": [124, 125, 127, 136, 302, 303, 304, 312, 472, 488, 494], "flux_err1": 306, "flux_err2": 306, "flux_errn": [19, 20, 26, 125, 127, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 496], "flux_errp": [19, 20, 26, 125, 127, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 496], "flux_int_cu": 286, "flux_map": [125, 127, 137, 146, 415, 495], "flux_metadata_fits_kei": 126, "flux_per_omega": 506, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 102, 125, 127, 128, 403, 462, 466, 468, 469, 474, 475, 477, 479, 491, 496, 497, 523, 524, 526], "flux_point_dataset": 403, "flux_points_at_tim": 415, "flux_points_ctb_37b": 127, "flux_points_dataset": [468, 479, 491], "flux_points_dataset_no_ul": 468, "flux_points_fermi": 478, "flux_points_hawc": 478, "flux_points_hess": 478, "flux_points_intrins": 463, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 468, "flux_points_ob": 463, "flux_points_recomput": 127, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 102, "flux_profil": [461, 483, 485], "flux_profile_estim": 483, "flux_profile_fermi": 483, "flux_quant": [139, 140, 141, 142, 494], "flux_ref": [125, 127, 415], "flux_sensit": [124, 125, 127, 136], "flux_ul": [124, 125, 127, 136, 496], "fluxestim": [125, 127, 128, 412, 439, 441, 442, 443, 445, 458], "fluxmap": [124, 126, 127, 136, 137, 138, 145, 146, 443, 458, 459, 472, 538], "fluxmapestim": 415, "fluxmapsmetadata": 418, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 102, 125, 126, 128, 129, 132, 139, 140, 141, 142, 148, 403, 406, 415, 418, 443, 450, 451, 457, 458, 459, 462, 466, 478, 483, 488, 489, 494, 496, 497, 526, 535, 536, 538, 540], "fluxpointdataset": 437, "fluxpointestim": [406, 434, 440, 453], "fluxpointfit": 403, "fluxpointfitt": 452, "fluxpointprofil": 453, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 103, 106, 412, 415, 418, 433, 437, 458, 459, 466, 468, 478, 479, 490, 491, 536], "fluxpointsdatasetmetadata": 418, "fluxpointsestim": [121, 129, 132, 338, 412, 413, 415, 424, 434, 439, 440, 443, 457, 458, 463, 468, 478, 479, 491, 498, 523, 524, 540], "fluxpointsetim": 415, "fluxpointsmetadata": 418, "fluxprofileestim": [121, 443, 456, 458, 483], "fly": 401, "fmt": [493, 499, 509], "focu": [401, 411, 437, 450, 470, 603], "focus": [401, 417, 420], "fold": [109, 129, 415, 466, 478, 489, 498, 536, 538], "folder": [11, 82, 94, 102, 107, 111, 127, 355, 391, 392, 396, 399, 421, 423, 428, 433, 443, 446, 469, 477, 481, 512, 523, 524, 601, 603], "follow": [15, 19, 20, 43, 44, 77, 80, 82, 83, 84, 90, 91, 103, 105, 107, 108, 110, 111, 124, 125, 126, 127, 130, 136, 138, 144, 147, 195, 196, 197, 199, 203, 208, 209, 214, 221, 269, 286, 292, 295, 311, 313, 381, 382, 384, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 435, 436, 437, 439, 440, 443, 445, 446, 452, 453, 457, 458, 459, 462, 463, 464, 465, 466, 468, 469, 471, 472, 474, 477, 478, 481, 482, 488, 489, 490, 491, 493, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506, 507, 511, 512, 518, 519, 523, 525, 526, 528, 530, 531, 536, 538, 540, 542, 544, 545, 549, 551, 552, 553, 554, 563, 564, 569, 572, 573, 575, 576, 580, 581, 583, 584, 585, 586, 587, 601, 602, 604, 605, 606, 608], "font": [196, 197, 199, 205, 208, 209, 392, 503], "fontsiz": [388, 491, 499], "foo": [87, 91], "footprint": [196, 197, 199, 205, 207, 208, 209, 561], "footprint_rectangle_sky_region": 207, "forbid": [16, 84, 90, 105, 126], "forbidden": 505, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 154, 155, 161, 164, 166, 169, 207, 209, 318, 396, 406, 433], "forecom": [391, 416], "foremost": 603, "forens": 407, "foreseen": [401, 416], "forev": 433, "forg": [390, 408, 421, 422, 424, 425, 428, 451], "forget": [469, 480, 523], "forgot": 391, "forgotten": 391, "fork": [394, 421], "form": [16, 84, 87, 90, 91, 103, 105, 126, 166, 169, 204, 219, 238, 248, 284, 330, 391, 397, 401, 406, 414, 416, 418, 420, 429, 451, 459, 504, 507, 509, 537, 545, 559, 570, 601], "formal": [396, 419, 472], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 103, 105, 106, 108, 110, 111, 125, 126, 127, 128, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 229, 237, 244, 253, 269, 279, 282, 326, 348, 372, 373, 380, 390, 399, 400, 401, 402, 403, 405, 407, 415, 417, 418, 422, 431, 443, 445, 448, 452, 454, 455, 457, 458, 459, 463, 466, 468, 469, 470, 472, 474, 475, 477, 479, 481, 482, 483, 488, 490, 494, 496, 498, 501, 503, 504, 506, 512, 513, 514, 515, 523, 526, 528, 534, 536, 537, 538, 539, 542, 543, 544, 545, 546, 553, 597, 598, 601, 602, 603, 604], "format_plot_xaxi": [198, 201, 206, 501], "format_plot_yaxi": [201, 501], "formatt": [380, 503], "formatwarn": 391, "former": [417, 434, 439, 464, 505, 601, 604], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 134, 165, 259, 260, 315, 462, 604], "forthcom": 498, "forum": 421, "forward": [19, 20, 26, 83, 87, 91, 103, 106, 110, 111, 129, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 178, 200, 204, 205, 206, 214, 223, 224, 227, 228, 231, 233, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 287, 316, 380, 385, 392, 398, 401, 415, 466, 478, 489, 498, 536, 538, 553], "forwardref": [16, 84, 90, 105, 126], "found": [19, 20, 26, 82, 86, 87, 91, 140, 179, 184, 203, 221, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 302, 394, 395, 399, 406, 416, 417, 437, 440, 441, 442, 446, 475, 481, 494, 501, 506, 507, 509, 515, 516, 518, 537, 538, 549, 550], "four": [394, 402, 415, 421, 488, 512, 513, 544, 546, 552, 602], "fov": [124, 150, 151, 173, 174, 188, 189, 191, 193, 237, 391, 397, 405, 448, 451, 452, 459, 474, 493, 501, 504, 505, 512, 524, 545, 548, 602], "fov_": 391, "fov_align": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 501], "fov_background": [474, 523], "fov_bkg_mak": [502, 547], "fov_lat": [151, 501, 512, 545], "fov_lat_axi": 501, "fov_lon": [151, 501, 512, 545], "fov_lon_axi": 501, "fov_rotation_step": [176, 189], "fov_theta": 391, "fovalign": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 501], "fovbackground": [419, 439], "fovbackgroundmak": [174, 438, 443, 502, 523, 524], "fovbackgroundmodel": [15, 103, 109, 110, 114, 173, 229, 249, 253, 419, 440, 457, 458, 459, 477, 478, 481, 482, 486, 497, 505, 523, 524, 545, 547, 561], "fp": [125, 127, 148, 415, 523, 538, 540], "fp_dataset": [468, 497], "fp_dnde": 415, "fp_energy_flux": 415, "fp_estim": 498, "fp_result": 498, "fpe": [338, 413, 415, 463, 468, 479, 491, 524], "fpe_no_ul": 468, "fpp": 303, "fpp_err": [303, 494], "fpp_tabl": 494, "fr": 417, "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 106, 111, 153, 156, 212, 235, 240, 258, 260, 273, 274, 302, 304, 317, 414, 536, 544, 545, 558, 559, 560, 563, 564, 569, 572, 573, 575, 576, 580, 581, 583, 584, 585, 586, 591, 592, 593, 595, 605, 606], "frac_remain": [221, 420, 507], "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 124, 135, 142, 157, 163, 165, 166, 167, 169, 204, 210, 211, 221, 223, 224, 227, 230, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 303, 304, 401, 406, 420, 450, 458, 462, 471, 481, 486, 497, 501, 504, 507, 512, 513, 514], "frame": [16, 83, 85, 91, 94, 95, 96, 103, 106, 110, 111, 112, 113, 114, 117, 129, 144, 166, 176, 179, 189, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281, 316, 317, 352, 367, 391, 392, 400, 402, 405, 415, 433, 434, 436, 437, 438, 464, 468, 469, 470, 471, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 497, 501, 502, 503, 504, 505, 506, 508, 513, 514, 523, 524, 526, 544, 549, 551, 552, 553, 558, 559, 560, 561, 562, 563, 564, 565, 608], "framework": [402, 404, 405, 407, 409, 410, 414, 420, 433, 434, 440, 452, 491, 506, 507, 530, 540], "franceschini": [231, 232, 282, 457, 463, 568], "franceschini17": [232, 463, 568], "franceschni": 568, "frd_ab": 232, "free": [50, 52, 53, 77, 103, 106, 110, 111, 128, 132, 133, 176, 214, 218, 220, 255, 256, 292, 396, 406, 433, 459, 463, 469, 471, 474, 475, 477, 479, 480, 486, 488, 490, 493, 497, 499, 502, 505, 506, 509, 513, 518, 523, 524, 528, 538, 547, 561, 578, 579, 603, 605, 606], "free_paramet": [218, 220, 292, 420, 493, 499, 505, 507], "freedom": [122, 125, 127, 138, 147, 311, 313, 417, 458, 480, 538, 605, 606], "freez": [19, 20, 26, 87, 91, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 406, 417, 433, 443, 458, 474, 486, 493, 499, 506, 578], "freeze_al": [218, 220], "frenk": 528, "frequenc": [280, 297, 532], "frequent": [201, 391, 400, 409, 417, 420, 489, 490, 494, 504, 518, 540, 541, 603], "frequentist": [409, 499], "fresh": 221, "fridai": 400, "friendli": [391, 396, 418, 454, 469, 523, 540, 608], "from": [13, 15, 16, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 182, 183, 185, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 286, 292, 293, 294, 295, 297, 298, 301, 304, 316, 317, 318, 328, 336, 338, 340, 341, 345, 348, 349, 353, 358, 370, 371, 373, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 426, 428, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608], "from_align": [207, 443], "from_attribut": [16, 84, 90, 105, 126], "from_bound": [156, 158, 166, 195, 201, 207, 415, 478, 481, 482, 497, 501, 502, 503, 511, 552, 553], "from_covariance_matrix": 419, "from_default": 200, "from_diagonal_respons": [112, 117, 153, 154, 155, 472, 513], "from_dict": [19, 20, 26, 102, 103, 106, 110, 111, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 436, 443, 509], "from_dir": [82, 89, 96, 176, 316, 317, 428, 464, 468, 470, 479, 489, 491, 493, 502, 508, 511, 512, 515, 521, 524, 537, 540, 547, 549, 550], "from_edg": [155, 196, 197, 199, 201, 205, 208, 209, 471, 486, 490, 501, 513, 514], "from_edisp_kernel": 154, "from_energy_bound": [103, 106, 110, 111, 112, 117, 153, 155, 156, 158, 164, 166, 176, 194, 195, 200, 201, 204, 207, 209, 392, 462, 464, 468, 470, 478, 479, 481, 482, 489, 491, 493, 497, 501, 502, 506, 513, 514, 524, 544, 547, 549, 550, 553], "from_energy_edg": [153, 201, 386, 497, 501], "from_events_fil": [82, 481, 512], "from_factor_matrix": 212, "from_fil": [82, 537], "from_fits_head": 85, "from_gauss": [153, 154, 158, 164, 166, 169, 544], "from_gaussian": 440, "from_geom": [103, 106, 110, 111, 154, 155, 164, 166, 169, 196, 197, 199, 203, 205, 208, 209, 437, 456, 497, 503, 504, 553, 560], "from_gti": 206, "from_gti_bound": 206, "from_hdu": [195, 197, 209], "from_hdulist": [103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 503], "from_head": [84, 90, 105, 126, 195, 207, 418], "from_irf": 168, "from_log10": [246, 247, 576], "from_map": [125, 127], "from_map_dataset": [106, 111], "from_nam": [475, 479, 511], "from_nod": 201, "from_orm": [16, 84, 90, 105, 126], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284], "from_parametr": [156, 542], "from_posit": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 482], "from_refer": 414, "from_region": [204, 230, 457, 549], "from_region_map": 282, "from_spatial_model": 164, "from_spectrum_dataset": [111, 462, 471], "from_stack": [83, 86, 92, 125, 127, 196, 197, 198, 199, 201, 205, 208, 209, 212, 218, 220, 457, 458, 537], "from_tabl": [127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 198, 200, 201, 205, 206, 244, 454, 462], "from_table_hdu": [86, 200, 201], "from_time_bound": 206, "from_time_edg": [206, 493, 494], "from_time_interv": 86, "from_ultranest": 222, "from_wcs_til": 197, "from_yaml": [16, 229, 253, 402, 469], "fromnumer": [470, 493], "front": [400, 420, 421, 450], "frozen": [19, 20, 26, 102, 128, 132, 173, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 406, 414, 419, 435, 458, 463, 464, 466, 468, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 483, 486, 489, 490, 493, 496, 497, 498, 499, 504, 505, 506, 507, 509, 513, 523, 524, 526, 538, 547, 578, 587], "fr\u00f6se": [458, 459], "ftol": 499, "ftool": 406, "fuaxiigq": 477, "fulfil": [418, 503], "full": [82, 128, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 197, 215, 221, 229, 253, 326, 387, 390, 391, 396, 400, 401, 404, 406, 407, 411, 417, 419, 420, 423, 430, 433, 443, 445, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 521, 523, 524, 526, 540, 551, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601, 602], "full_enclosur": [189, 501], "full_output": [19, 20, 26, 215, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284], "fulli": [132, 194, 195, 204, 207, 280, 400, 401, 408, 412, 417, 422, 425, 435, 437, 445, 464, 494, 506, 512, 514, 515], "fun": [391, 394], "func": [17, 18, 21, 22, 24, 25, 27, 90, 196, 197, 199, 205, 208, 209, 288, 339, 343, 344, 384, 475, 477], "function": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 84, 85, 87, 88, 90, 91, 100, 101, 102, 103, 104, 105, 109, 110, 120, 124, 125, 126, 132, 136, 137, 139, 140, 141, 142, 145, 146, 147, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 169, 196, 197, 199, 201, 205, 208, 209, 214, 215, 216, 219, 221, 223, 224, 227, 231, 233, 234, 235, 238, 240, 246, 247, 248, 250, 254, 256, 258, 259, 260, 265, 268, 269, 270, 272, 273, 274, 275, 278, 282, 284, 288, 294, 295, 296, 297, 298, 306, 307, 311, 312, 313, 331, 339, 340, 342, 343, 347, 348, 358, 376, 379, 380, 384, 386, 388, 390, 394, 397, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 414, 415, 416, 418, 419, 420, 424, 426, 428, 429, 431, 433, 434, 435, 436, 437, 439, 440, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 462, 463, 468, 469, 470, 471, 472, 477, 479, 480, 481, 482, 483, 493, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 514, 515, 516, 518, 523, 524, 526, 528, 529, 530, 535, 536, 537, 539, 540, 549, 551, 553, 559, 560, 562, 591, 600, 601, 602, 603, 604, 606, 608], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "functool": [16, 84, 90, 105, 126], "fundament": [404, 413, 418, 420, 424, 426, 507, 518, 541], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 120, 124, 128, 129, 132, 136, 202, 342, 394, 395, 397, 400, 401, 404, 405, 408, 410, 411, 412, 413, 414, 438, 439, 440, 443, 445, 475, 481, 495, 496, 497, 498, 503, 524, 526, 529, 530, 545, 603], "furthermor": 512, "futur": [104, 109, 391, 396, 401, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 451, 477, 503, 513, 529, 538, 600], "fvar": [142, 304, 406, 450], "fvar_err": [304, 494], "fvar_tabl": 494, "g": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 84, 85, 86, 87, 90, 91, 95, 105, 115, 126, 144, 195, 196, 197, 199, 201, 205, 207, 208, 209, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 302, 318, 358, 380, 386, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 417, 418, 420, 421, 422, 424, 425, 426, 443, 445, 449, 451, 452, 453, 454, 457, 464, 466, 468, 469, 471, 479, 481, 483, 495, 496, 497, 499, 503, 504, 505, 506, 507, 512, 513, 518, 526, 528, 532, 535, 536, 537, 538, 540, 545, 550, 551, 552, 560, 600, 602, 603, 605, 607, 608], "g0": [477, 513], "g28": 67, "g320": 496, "g_1": 156, "g_2": 156, "g_3": 156, "ga": 483, "gabriel": 452, "gadf": [83, 84, 85, 86, 88, 90, 95, 103, 105, 106, 110, 111, 126, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 401, 404, 415, 418, 443, 445, 454, 457, 459, 498, 501, 503, 523, 536, 540, 553, 602], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 396, 408, 451, 507], "gal_diffus": 407, "galact": [17, 18, 21, 22, 24, 25, 27, 28, 29, 35, 36, 37, 45, 47, 67, 68, 83, 91, 103, 106, 110, 111, 112, 117, 128, 129, 131, 166, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 230, 239, 242, 257, 266, 267, 325, 352, 391, 392, 402, 405, 411, 431, 433, 450, 463, 464, 468, 471, 472, 474, 477, 479, 480, 481, 483, 486, 490, 495, 496, 497, 503, 504, 505, 506, 512, 526, 528, 531, 535, 550, 551, 552, 553, 558, 559, 560, 561, 562, 563, 564, 602, 608], "galactic_median": 83, "galactocentr": 41, "galaxi": [17, 21, 22, 28, 30, 35, 39, 40, 41, 231, 303, 304, 431, 464], "galelli": [456, 458, 459], "gallant": 451, "galleri": [422, 438, 440, 443, 454, 458, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 521, 523, 524, 526, 541, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600], "gallery_jupyt": 554, "gallery_python": 554, "galprop": [195, 196, 197, 199, 208, 209], "galprop2": [195, 196, 197, 199, 208, 209], "gambit": 528, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 36, 37, 52, 53, 57, 59, 63, 66, 67, 79, 83, 124, 128, 135, 165, 189, 196, 197, 199, 208, 209, 231, 233, 234, 235, 258, 259, 260, 282, 286, 345, 391, 397, 399, 402, 403, 404, 405, 415, 422, 424, 428, 429, 434, 448, 449, 450, 451, 452, 462, 463, 466, 468, 469, 470, 475, 478, 479, 480, 481, 483, 496, 501, 503, 504, 508, 512, 514, 515, 523, 526, 528, 530, 531, 535, 536, 537, 540, 543, 547, 549, 550, 560, 568, 572, 573, 580, 581, 600, 601, 602, 603, 604, 605, 608], "gamma1": [223, 569, 583], "gamma2": [223, 569, 583], "gamma_1": [270, 273, 274, 275, 414, 584, 585, 586], "gamma_2": [270, 273, 274, 275, 414, 584, 585, 586], "gamma_min": [135, 462], "gamma_min_sensit": 124, "gammacat": [55, 66, 450, 466], "gammalib": [391, 404], "gammamc_dif": 528, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 413, 414, 415, 419, 420, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 516, 517, 518, 519, 521, 523, 524, 525, 526, 529, 530, 532, 533, 534, 540, 541, 542, 543, 544, 546, 550, 551, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 603, 604, 608], "gammapy_analysis_config": 407, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 102, 103, 106, 110, 111, 116, 119, 120, 124, 125, 127, 129, 131, 133, 136, 144, 145, 146, 147, 148, 149, 151, 155, 156, 157, 158, 166, 176, 196, 197, 199, 205, 208, 209, 214, 229, 232, 244, 253, 282, 292, 316, 317, 370, 379, 384, 386, 391, 392, 394, 407, 420, 424, 426, 428, 432, 433, 434, 443, 452, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 521, 523, 524, 526, 537, 538, 540, 542, 543, 544, 546, 547, 549, 550, 565, 597, 598, 608], "gammapy_extra": 432, "gammapybaseconfig": 16, "gammapydeprecationwarn": 391, "gammmapi": [401, 408], "gap": 139, "garcia": 452, "gather": [405, 411, 421], "gauss": [42, 51, 54, 103, 106, 130, 131, 157, 197, 209, 239, 240, 241, 242, 414, 449, 491, 503, 506, 526, 558, 559], "gauss_elong": 506, "gauss_temp": 506, "gaussian": [67, 68, 80, 81, 102, 120, 130, 137, 146, 153, 154, 158, 164, 166, 169, 197, 209, 219, 238, 239, 240, 241, 242, 243, 248, 284, 295, 296, 303, 304, 402, 410, 414, 419, 420, 436, 440, 459, 461, 463, 466, 468, 479, 481, 486, 490, 494, 496, 499, 501, 506, 507, 509, 512, 526, 544, 546, 554, 556, 566, 567, 588, 589, 599], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 120, "gaussian_compon": [67, 496], "gaussian_error": [137, 146], "gaussian_filt": [130, 209], "gaussian_model": 592, "gaussian_sigma": 499, "gaussianband2d": 451, "gaussianprior": [262, 419, 463, 509], "gaussianspatialmodel": [80, 81, 116, 119, 263, 414, 436, 479, 480, 486, 506, 559], "gaussianspectralmodel": [264, 414, 506, 575], "gaussiantemporalmod": 443, "gaussiantemporalmodel": [276, 414, 439, 506, 592], "gb": [399, 401, 512, 514], "gc": [86, 103, 106, 110, 111, 116, 119, 120, 124, 129, 131, 136, 144, 145, 229, 253, 379, 384, 386, 394, 472, 474, 477, 479, 481, 483, 495, 497, 498, 503, 505, 506, 512, 513, 526, 528, 537, 538], "gc_3fhl": 526, "gc_3fhl_cutout": 526, "gc_3fhl_smooth": 526, "gc_imag": 483, "gc_po": 513, "gc_sep": 505, "gca": 463, "gcc": 428, "gd95c3b3b6": [105, 126, 429, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "ge": 90, "geminga": 59, "gen_gaussian_model": 593, "gener": [16, 19, 20, 26, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 101, 103, 104, 105, 106, 109, 110, 111, 118, 126, 155, 166, 169, 196, 197, 199, 200, 201, 205, 208, 209, 214, 223, 224, 227, 228, 231, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 277, 278, 280, 282, 283, 297, 340, 342, 345, 346, 347, 348, 355, 392, 394, 400, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 420, 421, 422, 425, 428, 434, 438, 439, 440, 443, 445, 450, 454, 457, 458, 459, 461, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 521, 523, 524, 526, 536, 540, 545, 551, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 597, 598, 599, 603, 605, 606], "generalconfig": 16, "generalis": [127, 410, 437, 501], "generalized_gaussian_model": 593, "generalizedgaussianspatialmodel": [263, 440, 506, 560], "generalizedgaussiantemporalmodel": [276, 445, 506, 593], "generalrandom": 435, "generatejsonschema": [16, 84, 90, 105, 126], "gengauss": [243, 506, 560], "geodeticloc": 94, "geolat": 464, "geom": [16, 23, 83, 103, 106, 110, 111, 112, 115, 117, 118, 124, 125, 127, 129, 136, 154, 155, 164, 166, 169, 176, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 225, 226, 229, 230, 237, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 281, 402, 404, 406, 440, 443, 452, 458, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 479, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 509, 513, 514, 523, 524, 526, 538, 547, 549, 550, 551, 552, 553, 557, 559, 560, 561, 562, 608], "geom_24_energy_bin": 553, "geom_6_energy_bin": 553, "geom_edisp": [103, 106, 110, 111, 497], "geom_energi": 553, "geom_exposur": [103, 106, 110, 111, 456, 497], "geom_imag": [475, 479, 553], "geom_irf": 404, "geom_psf": [103, 106, 110, 111, 497], "geom_tru": 437, "geomconfig": 16, "geometri": [23, 83, 100, 103, 106, 110, 111, 113, 114, 115, 118, 125, 127, 136, 137, 138, 146, 154, 155, 161, 164, 166, 169, 173, 176, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 225, 226, 229, 230, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 281, 387, 397, 403, 406, 407, 437, 443, 454, 459, 468, 469, 470, 471, 474, 475, 477, 481, 482, 486, 497, 498, 502, 513, 514, 536, 538, 540, 548, 552, 601, 602], "geomspac": [127, 419, 498], "geq": [52, 53], "gerrit": 459, "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 103, 105, 107, 108, 110, 120, 124, 126, 128, 129, 132, 133, 136, 144, 148, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 212, 218, 220, 221, 223, 224, 225, 226, 227, 230, 231, 233, 234, 235, 238, 239, 240, 242, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 284, 285, 326, 342, 391, 392, 396, 397, 398, 399, 400, 401, 405, 406, 408, 415, 417, 418, 419, 422, 423, 425, 426, 428, 429, 432, 434, 449, 450, 451, 452, 459, 462, 469, 471, 472, 477, 478, 479, 486, 489, 493, 496, 497, 499, 501, 502, 504, 505, 506, 509, 512, 513, 514, 515, 516, 518, 523, 524, 526, 528, 536, 540, 553, 602, 606], "get_altaz": [85, 94, 457], "get_bia": 153, "get_bias_energi": 153, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [196, 197, 199, 205, 208, 209, 502, 503, 513, 514, 552], "get_by_idx": [196, 197, 199, 205, 208, 209, 503, 552], "get_by_pix": [196, 197, 199, 205, 208, 209, 552], "get_cl": [466, 496, 504], "get_combined_flux_map": 137, "get_combined_significance_map": 138, "get_coord": [194, 195, 200, 204, 207, 436, 443, 452, 482, 503, 504, 549, 553], "get_dataset": [15, 469, 474, 475, 477, 488, 523], "get_edges_fixed_bin": 148, "get_edges_min_t": 148, "get_edisp_kernel": [154, 155, 438, 443, 497, 513, 544], "get_events_meta_data": 404, "get_excess_map": [15, 523], "get_filenam": [107, 108], "get_flux_point": [15, 125, 127, 415, 438, 469, 523], "get_group_by_idx": 415, "get_hdu": 326, "get_icr": [85, 94, 457], "get_idx": [194, 195, 204, 207, 553], "get_image_by_coord": [196, 197, 199, 205, 208, 209, 503], "get_image_by_idx": [196, 197, 199, 205, 208, 209], "get_image_by_pix": [196, 197, 199, 205, 208, 209], "get_index_list": 195, "get_irfs_featur": [316, 317, 457, 508], "get_kernel": 120, "get_light_curv": 15, "get_mean": 153, "get_observ": [15, 82, 96, 316, 317, 434, 445, 464, 468, 469, 470, 474, 475, 477, 479, 481, 488, 489, 491, 493, 502, 508, 511, 514, 521, 523, 524, 540, 547, 549, 550], "get_ogip_meta": 108, "get_pix": 207, "get_pointing_altaz": [88, 508], "get_pointing_icr": [88, 457, 479, 502, 524], "get_psf_kernel": [164, 166, 169, 458, 459, 513], "get_random_st": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 345, 346, 347, 348, 391], "get_rebinned_axi": 489, "get_resolut": 153, "get_respons": 450, "get_scal": 120, "get_scale_model": [128, 129, 132], "get_spectrum": [196, 197, 199, 205, 208, 209], "get_subcovari": 212, "get_transform": [472, 479, 558, 559], "get_valid_path": 107, "get_wcs_coord_and_weight": 204, "getattr": 419, "getitem": 450, "getlogg": [391, 475, 479, 488, 489, 490, 493, 521], "getter": 392, "getting_start": 411, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 77, 129, 136, 196, 197, 199, 201, 205, 208, 209, 466, 470, 472, 477, 478, 483, 486, 490, 491, 495, 496, 502, 503, 504, 505, 512, 513, 514, 526, 553, 578, 601, 602], "gev2": [19, 495], "gevgevgev1": 466, "gh": [391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422], "gigu\u00e8r": [30, 31, 32, 39], "git": [86, 269, 391, 392, 394, 396, 398, 399, 417, 421, 425, 454], "github": [392, 394, 395, 396, 397, 399, 400, 409, 411, 417, 420, 421, 422, 425, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 448, 449, 450, 451, 452, 453, 507], "giuliani": 404, "giunti": [433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 454, 457], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 143, 302, 303, 391, 396, 400, 401, 405, 406, 407, 408, 411, 412, 417, 422, 433, 435, 437, 445, 458, 468, 469, 472, 480, 482, 489, 493, 494, 496, 499, 501, 502, 503, 506, 512, 513, 523, 540, 545, 603, 604, 606, 607], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 122, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 182, 184, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 294, 296, 298, 304, 316, 318, 321, 322, 329, 336, 340, 343, 344, 352, 378, 379, 384, 388, 391, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 414, 415, 417, 419, 432, 437, 443, 451, 452, 457, 462, 463, 464, 466, 469, 472, 481, 482, 483, 486, 488, 489, 490, 495, 496, 497, 498, 501, 502, 503, 504, 506, 507, 512, 513, 518, 523, 526, 536, 537, 538, 540, 544, 545, 549, 550, 552, 553, 560, 564, 568, 600, 602, 603, 604, 605], "glast": 513, "glat": [41, 67, 68, 83, 391, 468, 496, 503, 513], "glat_err": 496, "glat_pnt": [479, 512], "glimps": [514, 518, 525], "gll_iem_v06_cutout": [196, 197, 199, 205, 208, 209], "gll_iem_v06_gc": [481, 503, 505, 506, 513], "gll_psc_v16": 61, "gll_psc_v20": 496, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 392, 497, 498], "global": [16, 19, 20, 26, 33, 42, 45, 46, 47, 100, 103, 104, 106, 109, 110, 111, 155, 166, 169, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 214, 221, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 342, 345, 346, 347, 348, 391, 395, 397, 420, 440, 457, 468, 479, 480, 491, 505, 507, 509, 538, 601], "global_dataset": 502, "global_to_loc": 195, "glon": [41, 67, 68, 83, 391, 468, 496, 503, 513], "glon_pnt": [479, 512], "glossari": [411, 454, 536, 553], "glue": 540, "glueviz": 408, "go": [50, 87, 91, 394, 401, 411, 416, 420, 454, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 521, 523, 524, 526, 528, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603], "goal": [396, 405, 419, 499, 507], "goe": [41, 52, 381, 391, 410, 422, 483, 509], "gogia": 450, "good": [82, 86, 102, 127, 222, 308, 315, 391, 396, 398, 399, 400, 401, 402, 405, 407, 408, 409, 411, 420, 463, 468, 470, 471, 475, 486, 489, 490, 494, 495, 497, 499, 502, 504, 506, 507, 513, 514, 518, 563, 564, 602, 607], "googl": [87, 91, 411, 421, 459], "got": 512, "gov": [58, 60, 61, 62, 64, 65, 101, 153, 201, 411, 581], "gp": [82, 83, 89, 392, 401, 407, 474, 477, 479, 491, 512, 514], "gpg": 394, "gpl3": 391, "gps_baseline_110380": [82, 83, 512], "gradient": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 420, 507], "grai": [382, 549, 578], "grand": 391, "grant": [394, 417], "granular": 494, "grayify_colormap": 410, "grb": [490, 494], "great": [396, 405, 410, 449, 518, 519], "greater": [173, 384], "green": [102, 110, 111, 451, 480, 508, 509], "grei": 491, "grep": 427, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 128, 131, 157, 165, 167, 196, 197, 199, 201, 205, 208, 209, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 288, 384, 391, 402, 407, 420, 435, 437, 499, 552, 553, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596], "gridsearch": [214, 499], "gridspec": 378, "gridspec_kw": [472, 479, 488, 490, 568], "ground": [95, 406, 512, 604], "group": [86, 87, 91, 92, 128, 129, 132, 133, 136, 154, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 316, 397, 406, 410, 411, 412, 415, 421, 424, 434, 437, 439, 443, 449, 452, 465, 472, 488, 490, 518, 538, 540, 554, 603], "group_1": 508, "group_2": 508, "group_bi": [87, 91, 415], "group_by_axi": 415, "group_by_label": [92, 508], "group_high_zenith": 508, "group_low_zenith": 508, "group_siz": [148, 489], "group_tabl": [86, 201, 206], "grouped_observ": 508, "grow": [399, 410, 451], "grown": 411, "gr\u00e9aux": 457, "gsfc": [58, 60, 61, 62, 64, 65, 101, 153, 201, 411, 581], "gt": 501, "gt100_wtcnt": 77, "gtdrm": [153, 154], "gtexpcube2": 513, "gti": [82, 87, 88, 89, 100, 102, 103, 106, 110, 111, 125, 127, 129, 132, 137, 146, 170, 206, 269, 397, 400, 401, 404, 405, 406, 415, 435, 437, 438, 440, 453, 457, 458, 481, 489, 490, 493, 497, 502, 512, 514, 515, 536, 602], "gti_1": 537, "gti_2": 537, "gti_t0": 490, "gtimetadata": 418, "gtmktime": [401, 513], "gtobsim": 404, "gtol": 499, "gtpsf": [154, 155, 161, 166, 169, 201, 472, 513], "gtselect": [401, 513], "guarante": [399, 414, 416, 420, 507], "guess": [127, 195, 197, 458], "guid": [394, 407, 409, 424, 425, 426, 429, 452, 477, 501, 518, 540, 545, 555, 566, 588, 599], "guidelin": [391, 395, 429, 451], "guiger": 31, "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 103, 106, 110, 111, 116, 119, 120, 124, 129, 131, 136, 144, 145, 158, 229, 232, 253, 282, 379, 384, 386, 392, 413, 452, 463, 469, 472, 480, 481, 482, 483, 496, 497, 498, 501, 503, 505, 506, 512, 513, 514, 521, 523, 524, 526, 537, 538, 540, 542, 543, 544, 546, 568, 608], "h": [26, 67, 82, 86, 87, 91, 95, 128, 130, 155, 182, 196, 197, 199, 205, 208, 209, 297, 381, 411, 414, 420, 424, 428, 429, 437, 452, 459, 461, 462, 463, 464, 468, 469, 471, 475, 478, 480, 488, 489, 490, 493, 495, 499, 501, 502, 503, 506, 507, 508, 509, 511, 512, 513, 514, 516, 517, 518, 521, 523, 524, 535, 540, 553, 591, 592, 602, 603], "h0": [311, 480], "h05": [45, 49], "h1": [311, 480], "h_0": [480, 605], "h_1": [480, 605], "h_i": 130, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 87, 91, 102, 103, 106, 110, 111, 124, 125, 127, 168, 176, 190, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 217, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 280, 281, 282, 384, 386, 388, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 425, 439, 440, 443, 445, 446, 452, 453, 454, 456, 457, 458, 459, 463, 464, 468, 469, 470, 475, 480, 482, 488, 489, 491, 495, 496, 497, 499, 502, 503, 504, 506, 507, 508, 509, 512, 514, 515, 523, 524, 536, 537, 540, 545, 549, 550, 552, 553, 558, 559, 587, 600, 603, 605], "habilit": 315, "hack": 448, "had": [391, 397, 399, 417, 440, 446, 450, 451], "hadron": [285, 397, 402, 475, 497, 512, 536, 545, 549], "hajlaoui": [440, 443], "hal": 417, "half": [166, 169, 201, 207, 281], "halo": [17, 22, 528], "halv": [140, 302, 458], "halving_coord": 494, "halving_err": 494, "hand": [178, 391, 394, 399, 402, 411, 417, 419, 455, 499, 518, 540], "handbook": [411, 518], "handi": 477, "handl": [3, 16, 84, 90, 105, 125, 126, 127, 182, 203, 305, 390, 392, 395, 403, 404, 405, 407, 412, 414, 415, 418, 421, 424, 426, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 457, 468, 470, 477, 478, 479, 481, 497, 501, 503, 505, 506, 513, 514, 518, 524, 525, 526, 536, 537, 540, 602, 605], "handler_map": 388, "hanna": [458, 459], "hap": 407, "happen": [82, 394, 396, 398, 399, 405, 409, 422, 469, 505, 518, 523, 524, 525, 536, 540, 605], "happi": [394, 398, 411, 432, 433, 452], "hard": [391, 392, 414, 419, 438, 509], "harder": [398, 603], "hardli": 418, "harri": [447, 448], "harvard": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 214, 250, 285, 286, 411, 499], "has_any_t": [125, 127], "has_energy_axi": [194, 195, 204, 207], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "has_single_spatial_bin": [154, 155, 161, 166, 169], "has_stat_profil": [125, 127], "has_success": [125, 127], "has_ul": [125, 127], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 391, "hasn": 396, "hatch": 491, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 105, 108, 112, 117, 125, 126, 127, 128, 132, 134, 144, 145, 153, 154, 155, 164, 166, 169, 176, 178, 190, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 318, 342, 348, 388, 390, 391, 392, 393, 394, 396, 397, 398, 400, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 437, 440, 443, 445, 446, 449, 451, 452, 453, 454, 455, 457, 458, 459, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 489, 490, 491, 493, 496, 497, 498, 499, 501, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 518, 523, 524, 526, 528, 536, 537, 538, 540, 547, 551, 552, 553, 564, 576, 600, 603, 606, 607], "haven": [428, 507], "hawc": [55, 59, 63, 72, 76, 97, 146, 147, 429, 437, 443, 451, 454, 455, 457, 461, 516, 517, 518, 535, 548, 602], "hawc19_flux_point": [127, 478, 540], "hawc_crab": [127, 478, 540], "hawc_pass4_public_crab": [146, 147], "hd": 67, "hdr": 418, "hdr_dict": 418, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 326, 377, 392, 401, 431, 446, 448, 451, 454, 455, 501, 503, 512, 514, 515, 536, 537, 540, 542, 543, 544, 546, 553, 598, 608], "hdu1": 153, "hdu2": 153, "hdu_al": 481, "hdu_band": [125, 127, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209], "hdu_class": [82, 87, 326, 512, 514, 515], "hdu_class_uniqu": 87, "hdu_evt": 481, "hdu_filenam": 514, "hdu_gti": 481, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [154, 155, 157, 161, 165, 166, 167, 169, 196, 197, 208, 209], "hdu_loc": 87, "hdu_nam": 326, "hdu_ob": 82, "hdu_out": [196, 197], "hdu_region": [204, 205], "hdu_tabl": [82, 514], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 512, 514, 515], "hdu_type_uniqu": 87, "hduclas2": 501, "hduclas3": 501, "hduclas4": 501, "hduclasn": 501, "hduindext": [82, 326, 514], "hdulist": [103, 106, 108, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 209, 481, 503, 536], "hduloc": [87, 103], "he": [285, 401, 406], "hea": 406, "head": 392, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 102, 103, 105, 106, 107, 108, 110, 111, 125, 126, 127, 153, 154, 155, 161, 166, 169, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 281, 328, 373, 374, 377, 396, 401, 404, 418, 437, 445, 447, 452, 454, 457, 470, 482, 503, 512, 607], "healpi": [195, 390, 398, 400, 408, 423, 424, 426, 435, 443, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 551], "healpix": [13, 195, 196, 197, 199, 205, 208, 209, 390, 398, 400, 405, 443, 451, 503, 513, 552], "healpix_to_imag": 444, "heapsort": [87, 91], "hear": 420, "heart": 605, "heasarc": [153, 201], "heatmap": [380, 385], "heavi": [452, 453], "heavier": 477, "heavili": 443, "hegra": [97, 286], "heidelberg": [391, 421], "heidt": 494, "height": [16, 29, 87, 91, 94, 129, 351, 469, 474, 475, 477, 483, 488, 491, 495, 503, 504, 506, 523, 549, 553], "heighten": 494, "helen": 449, "hello": [428, 479], "help": [11, 87, 91, 299, 305, 391, 394, 396, 398, 405, 406, 407, 411, 417, 421, 422, 423, 428, 429, 432, 433, 434, 451, 452, 454, 496, 502, 503, 505, 513, 526, 540, 603], "helper": [13, 326, 331, 398, 400, 405, 406, 407, 410, 422, 428, 434, 435, 436, 437, 443, 445, 448, 450, 451, 457, 458, 483, 496, 504, 505, 549, 601, 608], "henc": [87, 91, 248, 407, 474, 475, 538, 553, 605], "here": [13, 82, 83, 87, 91, 101, 103, 110, 127, 138, 147, 151, 156, 165, 214, 294, 298, 301, 379, 390, 391, 392, 393, 394, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 417, 418, 419, 420, 421, 422, 424, 426, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 479, 480, 481, 482, 486, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 507, 508, 509, 512, 513, 514, 518, 523, 524, 526, 530, 536, 540, 545, 547, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603, 604, 605, 607, 608], "hereaft": 481, "herebi": 509, "heritag": 417, "herm": [289, 291, 458], "herr": [420, 507], "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 102, 110, 111, 133, 148, 149, 156, 158, 176, 214, 292, 316, 317, 392, 399, 400, 405, 407, 411, 420, 421, 424, 428, 431, 433, 436, 447, 448, 451, 452, 461, 464, 466, 468, 469, 470, 475, 477, 479, 480, 489, 491, 493, 496, 497, 498, 499, 502, 507, 508, 509, 511, 513, 515, 517, 521, 523, 524, 528, 537, 538, 540, 542, 543, 544, 546, 547, 549, 550, 608], "hess2": [156, 542], "hess_dl3_dr1_obs_id_020136": [88, 158, 392, 542, 543, 544, 546], "hess_dl3_dr1_obs_id_023523": [83, 86, 537], "hess_dl3_dr1_obs_id_023526": 537, "hess_ecpl": [286, 468], "hess_pl": 286, "hessian": 538, "heterogen": [418, 466, 478], "hfm": 67, "hgp": [67, 80, 81, 124, 411, 437, 449, 451, 452, 535], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 496], "hi": [391, 450], "hi_bnd": 201, "hi_threshold": 153, "hidden": 402, "hide": [13, 396, 413], "hierarch": [13, 25, 316, 358, 400, 402, 418, 458, 540, 552], "hierarchi": [316, 402, 436], "hierarchical_clust": [457, 508], "high": [6, 15, 58, 62, 63, 83, 153, 201, 341, 391, 395, 396, 397, 404, 405, 406, 411, 418, 420, 435, 436, 437, 438, 439, 443, 451, 452, 461, 462, 466, 469, 472, 474, 477, 483, 486, 488, 495, 496, 497, 498, 502, 504, 507, 512, 513, 514, 515, 518, 524, 525, 526, 527, 535, 536, 537, 538, 545, 548, 601, 602, 603, 604], "high_zenith": 508, "higher": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 221, 243, 394, 397, 402, 407, 410, 412, 425, 466, 482, 494, 501, 503, 547, 553], "highest": [144, 182, 494, 502, 512, 526], "highli": [506, 507], "highlight": 603, "hint": [418, 472, 538], "hire": [157, 411, 530, 532, 533, 534, 536, 537, 542, 543, 544, 546, 549, 553, 605, 608], "hist": [83, 110, 111, 205, 209, 384, 471, 507, 509], "histogram": [83, 110, 111, 201, 205, 209, 222, 384, 457, 491, 553, 602], "histori": [405, 417, 454], "hit": 420, "hkdcs1qa": 463, "hli": [404, 438, 439, 443, 454, 461, 465, 467, 518, 536, 539, 602], "hli_spectrum_analysi": 469, "hline": 558, "hoc": 405, "hold": [69, 82, 89, 92, 96, 100, 164, 237, 318, 400, 401, 403, 406, 603, 605], "home": [16, 355, 394, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 565, 568, 591, 597, 598], "homebrew": 408, "homework": 434, "homogen": [87, 91, 440], "honk": 396, "hood": [469, 518, 523, 525], "hook": [394, 454], "hope": 396, "hopefulli": 398, "horizont": [85, 95, 159, 361, 501, 607], "host": [391, 420], "hour": [67, 94, 394, 407, 421, 422, 462, 496, 502, 503, 540], "hover": 392, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 105, 126, 127, 129, 131, 176, 197, 207, 209, 342, 348, 393, 396, 399, 403, 405, 407, 408, 410, 413, 414, 417, 418, 420, 422, 423, 424, 428, 429, 432, 433, 434, 437, 438, 445, 447, 450, 451, 452, 457, 458, 462, 463, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 519, 523, 525, 526, 530, 536, 538, 541, 545, 549, 551, 552, 568, 587, 601, 603, 604, 605, 607, 608], "howev": [77, 87, 91, 102, 124, 129, 303, 390, 391, 392, 394, 398, 401, 404, 405, 409, 417, 419, 420, 425, 464, 475, 483, 491, 493, 495, 496, 497, 499, 507, 509, 514, 515, 518, 519, 536, 540, 552, 553, 559, 576, 603], "howto": [411, 454, 455], "hpx": [195, 196, 197, 199, 208, 209, 405, 443, 503, 513], "hpx2wc": [196, 197], "hpx_map": [196, 197], "hpx_pixel": 405, "hpx_reg": 195, "hpxgeom": [125, 194, 196, 197, 438, 443, 454, 513, 551], "hpxmap": [197, 199, 551], "hpxndmap": [277, 443, 551], "hpxsparsemap": 437, "hpxtowcsmap": [196, 197], "hr": [481, 482, 486, 490], "hspace": 495, "hspec": [447, 448, 449], "hst": 231, "hstack": [87, 91, 404], "html": [83, 87, 91, 101, 128, 153, 189, 195, 201, 204, 207, 214, 229, 253, 282, 318, 345, 346, 391, 392, 399, 411, 416, 417, 421, 422, 430, 451, 462, 471, 474, 477, 479, 486, 490, 499, 501, 512, 537, 551, 553, 581], "htmlcov": 422, "http": [11, 13, 33, 34, 38, 50, 52, 53, 58, 60, 61, 62, 64, 65, 67, 83, 87, 88, 91, 101, 128, 138, 153, 156, 182, 189, 195, 201, 204, 207, 214, 229, 250, 253, 259, 260, 274, 275, 282, 285, 286, 311, 313, 318, 345, 346, 358, 408, 411, 416, 417, 420, 421, 422, 423, 424, 425, 426, 430, 434, 451, 462, 468, 471, 474, 477, 478, 479, 486, 490, 495, 496, 499, 501, 507, 512, 537, 551, 553, 581, 585, 586, 603], "hubert": 452, "hue": 382, "huestart": 382, "huge": [422, 559], "hugovk": 433, "human": [372, 402, 420, 422, 445, 469, 507, 523], "hundr": 514, "hypercub": [503, 552, 553], "hypothes": [292, 311, 313, 457, 540, 605], "hypothesi": [125, 127, 128, 129, 132, 133, 134, 292, 294, 298, 459, 466, 472, 480, 498, 538, 540, 602, 605], "hysteresi": 493, "hz": [348, 526], "hz6xwbzw": 493, "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 315, 316, 318, 320, 324, 326, 329, 330, 331, 336, 338, 339, 342, 345, 346, 347, 348, 350, 351, 354, 357, 359, 360, 362, 366, 368, 369, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 523, 524, 525, 526, 528, 529, 530, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608], "i0": [87, 91], "i1": [87, 91], "i4": 483, "i8": [503, 526], "i_0": [196, 197, 199, 205, 208, 209], "i_hpx": [196, 197, 199, 205, 208, 209], "i_lat": [196, 197, 199, 205, 208, 209], "i_lon": [196, 197, 199, 205, 208, 209], "i_n": [196, 197, 199, 205, 208, 209], "i_scan": 509, "iact": [82, 83, 85, 94, 176, 179, 183, 397, 400, 401, 402, 403, 405, 407, 411, 429, 434, 448, 450, 452, 466, 472, 475, 502, 503, 505, 512, 513, 515, 537, 542, 543, 544, 545, 546, 600, 602], "iactbasicimageestim": [397, 451], "iau": [52, 431, 435], "iau2015": 52, "ic": 578, "icon": 601, "icr": [83, 85, 88, 91, 94, 95, 96, 103, 106, 110, 111, 113, 114, 144, 166, 176, 179, 195, 196, 197, 199, 202, 204, 207, 208, 209, 225, 226, 230, 239, 242, 257, 266, 267, 316, 317, 352, 391, 392, 415, 436, 468, 469, 470, 471, 472, 475, 478, 479, 481, 482, 486, 488, 489, 490, 491, 493, 496, 497, 501, 502, 503, 504, 506, 508, 511, 512, 513, 514, 523, 524, 537, 540, 544, 549, 553, 558, 559, 560, 562, 563, 564], "icrc": 447, "id": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 80, 82, 83, 87, 88, 91, 92, 113, 114, 404, 407, 428, 469, 471, 481, 483, 486, 491, 496, 506, 507, 512, 513, 514, 515, 523, 537], "id_obs_vela": 491, "idea": [396, 399, 406, 410, 411, 412, 469, 493, 501, 508, 513, 523], "ideal": [393, 394, 401, 405, 406, 415, 419, 421, 466, 513], "idempot": [16, 84, 90, 105, 126], "ident": [366, 406, 454, 468, 470], "identif": [67, 397, 496], "identifi": [67, 88, 104, 109, 195, 269, 391, 401, 402, 404, 407, 416, 417, 422, 438, 472, 481, 494, 496, 497, 506, 512, 514, 539], "identified_object": 496, "idx": [83, 87, 91, 92, 100, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 253, 471, 481, 490, 496, 499, 503, 552], "idx1": 499, "idx2": 499, "idx_glob": 195, "idx_loc": 195, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 124, 417, 463, 493, 505, 506, 536, 602], "iem": [505, 513], "iem_minus_iem": 503, "iem_plus_iem": 503, "iem_times_two": 503, "ignacio": 453, "ignasi": 447, "ignor": [11, 16, 84, 87, 90, 91, 102, 105, 126, 139, 160, 170, 199, 217, 219, 237, 318, 330, 392, 445, 459, 468, 483, 490, 491, 497, 504, 523, 540, 603], "ii": [212, 449], "ij": 212, "ilist": 195, "illustr": [110, 111, 392, 401, 403, 404, 405, 407, 410, 420, 470, 472, 478, 483, 497, 502, 503, 505, 506, 513, 518, 530, 536, 549, 550, 558, 559, 568, 601], "illustrate_colormap": 410, "iloc": [87, 91], "im": [380, 499], "imag": [103, 106, 110, 111, 120, 130, 131, 144, 155, 156, 157, 163, 165, 166, 167, 169, 171, 181, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 281, 307, 310, 355, 377, 379, 380, 381, 382, 386, 391, 399, 400, 402, 407, 408, 411, 412, 422, 424, 429, 431, 432, 433, 436, 437, 438, 444, 448, 449, 450, 451, 452, 459, 461, 465, 474, 477, 483, 484, 485, 502, 504, 506, 512, 524, 526, 536, 545, 549, 550, 551, 552, 553, 601, 602, 608], "image_analysi": [411, 432], "image_err": 131, "image_fitting_with_sherpa": [411, 453], "image_pip": 451, "image_profil": 450, "imagehdu": [196, 197, 208, 209], "imagenorm": [381, 382, 608], "imageprofil": 131, "images_t": 479, "imagin": 603, "img": [379, 503], "iminuit": [214, 390, 408, 417, 420, 443, 445, 452, 456, 457, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 600], "immut": 229, "impact": [398, 404, 408, 514], "imperfect": 502, "implement": [19, 20, 103, 106, 110, 111, 138, 147, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 297, 303, 391, 392, 396, 397, 399, 400, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 418, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 450, 451, 453, 454, 457, 458, 459, 464, 474, 489, 494, 495, 496, 502, 503, 504, 507, 528, 536, 538, 540, 545, 546, 547, 587, 600, 601, 602, 603, 604, 607], "implent": 391, "impli": [243, 391, 410, 420, 536, 602], "implic": 413, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 545], "implicitli": 502, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 102, 103, 105, 106, 110, 111, 112, 116, 117, 119, 120, 124, 125, 126, 127, 129, 131, 133, 136, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 164, 166, 176, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 220, 223, 224, 227, 229, 231, 233, 234, 235, 240, 244, 246, 247, 250, 251, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 286, 292, 297, 303, 304, 316, 317, 338, 348, 358, 370, 371, 376, 379, 381, 382, 384, 386, 392, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 427, 428, 439, 449, 451, 456, 458, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 521, 523, 524, 526, 529, 530, 532, 533, 534, 536, 537, 538, 540, 542, 543, 544, 546, 547, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601, 603, 604, 605, 607, 608], "importantli": [415, 452, 464, 603], "importerror": [87, 91], "impos": [456, 462, 549], "imposs": 420, "improv": [109, 292, 393, 395, 396, 397, 399, 400, 401, 405, 406, 407, 408, 409, 410, 411, 416, 422, 423, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 503, 512, 540, 545, 550, 558], "imshow": [103, 106, 164, 197, 209, 379, 385, 450, 503, 526], "in2p3": 417, "in_memori": [88, 540], "in_memory_gener": 92, "in_safe_data_rang": [103, 106, 110, 111], "inaccur": 391, "incex": [16, 84, 90, 105, 126], "incid": [397, 602], "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 105, 126, 132, 154, 164, 170, 172, 173, 179, 180, 184, 194, 195, 204, 207, 219, 238, 248, 254, 284, 326, 390, 391, 394, 397, 399, 402, 403, 404, 405, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 433, 435, 440, 451, 456, 457, 458, 459, 462, 477, 478, 480, 481, 483, 490, 495, 496, 498, 499, 502, 504, 505, 506, 507, 512, 514, 528, 530, 536, 538, 539, 550, 552, 600, 604, 607], "include_irf": [88, 537, 540], "include_ssc": 254, "inclus": [83, 204, 405], "incompat": [416, 445], "incomplet": [391, 422, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "inconsist": [440, 446, 456, 457], "inconveni": [410, 452], "incorpor": [407, 411, 419, 602], "incorrect": [83, 391, 418, 427, 436, 454, 455, 502, 509], "incorrectli": [454, 504], "increas": [144, 171, 201, 206, 221, 230, 239, 242, 391, 400, 418, 489, 498, 502, 536, 540, 558], "increment": [19, 20, 26, 120, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 405, 503, 552], "ind": [195, 207, 229, 253], "inde": [481, 559], "indefinit": 398, "indent": [16, 84, 90, 105, 126], "independ": [67, 128, 132, 137, 138, 146, 147, 315, 329, 391, 394, 397, 401, 402, 403, 404, 405, 406, 409, 412, 413, 414, 415, 417, 424, 433, 443, 462, 469, 488, 496, 503, 504, 505, 506, 514, 523, 524, 535, 540, 545, 602, 606], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 102, 103, 106, 110, 111, 120, 124, 125, 127, 128, 129, 133, 135, 136, 143, 153, 154, 155, 161, 164, 166, 169, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 218, 220, 223, 224, 227, 229, 231, 233, 234, 235, 240, 246, 247, 250, 251, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 286, 297, 326, 340, 345, 397, 400, 401, 402, 403, 406, 407, 414, 415, 416, 421, 424, 434, 448, 450, 451, 457, 458, 463, 464, 466, 468, 469, 471, 472, 474, 477, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 496, 497, 498, 499, 501, 505, 506, 507, 512, 513, 514, 515, 523, 524, 526, 538, 545, 551, 552, 553, 557, 558, 559, 560, 562, 563, 564, 565, 568, 570, 572, 573, 574, 579, 580, 581, 590, 591, 592, 593, 594, 595, 596, 597, 598], "index1": [223, 270, 569, 583], "index2": [223, 270, 569, 583], "index_1": [273, 274, 275, 584, 585, 586], "index_2": [77, 273, 274, 275, 584, 585, 586], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 200, "index_err": 493, "index_errn": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "index_errp": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "index_mod": [87, 91], "index_scan": 509, "indexerror": [92, 100, 253], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 391, 454, 471, 482, 494, 502, 503, 507, 508, 509, 514, 515, 540, 552, 553, 602], "indico": 400, "indirect": [17, 19, 20, 21, 22, 24, 25, 26, 27, 495, 528], "individu": [87, 91, 109, 122, 130, 387, 397, 403, 404, 406, 411, 414, 415, 419, 464, 468, 471, 480, 483, 489, 496, 497, 499, 502, 505, 506, 526, 536, 540, 602], "indiviud": 413, "indxschm": [196, 197, 208, 209], "ineffici": [87, 91, 394], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 242, 284, 419, 507, 509], "infer": [125, 127, 194, 195, 196, 197, 199, 207, 208, 209, 231, 392, 395, 507, 523, 552], "inferno": 503, "infil": 391, "infin": 509, "influenc": 509, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 157, 163, 165, 167, 294, 298, 326, 392, 406, 407, 411, 421, 427, 437, 438, 440, 447, 448, 451, 469, 474, 475, 477, 481, 489, 493, 495, 496, 497, 503, 507, 513, 514, 515, 518, 521, 523, 603], "info_dict": [103, 106, 110, 111, 294, 298, 384, 440, 458, 497], "info_t": [100, 464, 468, 469, 471, 477, 490, 497, 505, 540], "infodict": 384, "inform": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 127, 153, 157, 163, 165, 167, 168, 171, 176, 177, 182, 183, 202, 214, 219, 221, 223, 224, 225, 226, 227, 228, 230, 231, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 254, 255, 256, 257, 258, 260, 261, 266, 267, 268, 270, 273, 274, 275, 277, 278, 281, 282, 284, 299, 305, 326, 342, 373, 374, 391, 395, 396, 401, 403, 404, 405, 406, 407, 414, 415, 418, 419, 420, 422, 427, 428, 429, 437, 439, 440, 443, 445, 451, 457, 458, 463, 466, 469, 470, 478, 481, 482, 486, 493, 494, 497, 498, 499, 502, 503, 506, 507, 512, 513, 514, 515, 523, 524, 526, 535, 536, 537, 538, 540, 553, 602, 603, 606], "information_gain_bit": 507, "infrar": 231, "infrastructur": [422, 430, 443, 454, 457], "ingredi": [415, 495], "inher": 507, "inherit": [87, 91, 297, 391, 401, 403, 406, 415, 418, 419, 438, 443, 450, 497, 501, 551, 552], "init": [19, 20, 26, 87, 91, 124, 129, 136, 173, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 330, 342, 403, 440, 455, 457, 458, 459, 472, 483, 489, 496, 497, 498, 526], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 105, 125, 126, 127, 136, 194, 195, 197, 200, 201, 204, 207, 229, 253, 255, 256, 318, 391, 396, 401, 402, 403, 407, 420, 445, 462, 471, 475, 477, 478, 480, 481, 482, 486, 491, 496, 497, 503, 506, 523, 524, 526, 535, 537, 587, 602], "initialis": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 342, 345, 346, 347, 348, 391, 413, 507, 509], "initiliaz": 420, "inject": [471, 486], "inlin": [396, 462, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 503, 504, 505, 506, 511, 512, 513, 515, 523, 524, 526], "inner": [44, 52, 53, 129, 171, 181, 267, 475, 526, 564], "inner_height": [549, 553], "inner_width": [549, 553], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 103, 105, 106, 109, 120, 122, 124, 125, 126, 127, 128, 131, 132, 136, 140, 141, 142, 143, 145, 149, 154, 155, 157, 164, 165, 166, 167, 168, 169, 171, 173, 177, 179, 181, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 229, 244, 253, 280, 281, 282, 297, 318, 329, 339, 342, 361, 363, 384, 386, 397, 399, 401, 402, 403, 404, 405, 406, 407, 412, 428, 438, 443, 446, 453, 457, 459, 468, 471, 481, 482, 491, 498, 503, 509, 538, 552, 553, 604], "input_map": [112, 117], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 457, "insensit": 203, "insert": [87, 91, 92, 100, 253, 417, 438, 507, 606], "insert_row": [87, 91], "insertion_order_mww_test": [420, 507], "inset": 444, "insid": [50, 83, 103, 110, 116, 119, 153, 179, 195, 196, 197, 199, 204, 207, 208, 209, 229, 253, 269, 380, 384, 391, 392, 394, 405, 407, 415, 443, 462, 468, 471, 474, 477, 479, 486, 490, 497, 502, 504, 505, 506, 512, 514, 537, 547, 549, 550, 553], "inside_geom": 504, "insight": 427, "inspect": [403, 407, 428, 468, 470, 477, 481, 482, 499, 503, 505, 512, 513], "inspir": [391, 415, 421], "instal": [87, 91, 390, 391, 394, 398, 399, 400, 408, 421, 422, 423, 426, 428, 429, 432, 433, 443, 447, 450, 451, 452, 459, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 518, 523, 524, 526, 540, 603], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 105, 122, 126, 127, 128, 130, 132, 133, 168, 170, 178, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 336, 342, 378, 380, 381, 382, 385, 387, 391, 397, 402, 403, 406, 407, 413, 415, 418, 443, 466, 468, 471, 483, 496, 498, 499, 502, 504, 505, 506, 507, 526, 530, 540, 552, 553, 578], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 196, 197, 199, 201, 208, 209, 402, 407, 464, 469, 496, 497, 503, 506, 509, 523], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 103, 105, 106, 110, 111, 115, 126, 183, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 391, 392, 394, 396, 398, 399, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 419, 423, 424, 426, 433, 436, 439, 440, 453, 457, 459, 463, 470, 477, 481, 486, 488, 490, 491, 496, 497, 501, 502, 503, 506, 509, 537, 544, 545, 552, 553, 603], "instruct": [391, 394, 400, 408, 421, 423, 424, 432, 443, 447, 451, 481, 512], "instrument": [6, 83, 95, 109, 156, 160, 161, 237, 391, 401, 402, 403, 404, 406, 411, 415, 424, 428, 437, 440, 452, 453, 454, 461, 464, 466, 468, 469, 472, 477, 484, 485, 491, 493, 497, 499, 501, 502, 505, 506, 508, 509, 512, 513, 514, 515, 516, 518, 523, 524, 536, 537, 538, 542, 544, 546, 601, 602], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 101, 103, 104, 105, 106, 109, 110, 111, 113, 114, 120, 122, 126, 127, 128, 129, 132, 133, 134, 136, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 179, 183, 184, 189, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 288, 290, 292, 294, 297, 298, 302, 303, 304, 306, 311, 312, 313, 318, 329, 330, 336, 340, 342, 345, 346, 347, 348, 350, 351, 378, 384, 391, 405, 450, 499, 530], "int64": [103, 106, 110, 111, 112, 117, 124, 136, 538], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 223, 224, 227, 231, 233, 234, 235, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 545, 558], "int_flux": 495, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 103, 106, 110, 111, 125, 127, 128, 129, 132, 136, 144, 145, 154, 155, 161, 166, 169, 172, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 218, 220, 229, 253, 318, 336, 342, 391, 397, 405, 552], "integr": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 102, 103, 106, 110, 111, 125, 127, 130, 132, 143, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 171, 196, 197, 199, 201, 205, 208, 209, 210, 211, 221, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 285, 286, 288, 329, 390, 398, 400, 402, 404, 405, 406, 408, 409, 411, 415, 417, 420, 431, 433, 434, 438, 439, 443, 448, 449, 450, 451, 452, 453, 454, 457, 468, 470, 471, 474, 490, 493, 495, 496, 497, 503, 504, 506, 507, 526, 528, 536, 538, 544, 560, 581], "integral_error": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 409, 440, 493], "integral_flux": 493, "integral_flux_imag": 444, "integrate_geom": [225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281, 443, 456, 458], "integrate_log_log": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "integrate_spectrum": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 434, 440], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 318, 401, 419, 420, 501], "intens": [196, 197, 199, 205, 208, 209, 214, 243, 401, 503, 536], "intent": 396, "interact": [19, 20, 87, 91, 166, 169, 196, 197, 199, 205, 208, 209, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 390, 391, 392, 400, 401, 402, 403, 407, 411, 414, 428, 437, 463, 477, 486, 499, 503, 505, 506, 507, 518, 519, 523, 524, 549, 552, 578, 603], "interchang": 552, "interest": [116, 119, 128, 132, 214, 292, 396, 404, 405, 409, 411, 422, 466, 477, 481, 483, 493, 496, 497, 499, 502, 504, 507, 508, 512, 513, 526, 537, 538, 578, 602, 605, 606], "interfac": [6, 11, 15, 19, 20, 87, 91, 212, 214, 217, 218, 220, 221, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 391, 395, 396, 397, 401, 403, 404, 406, 408, 409, 410, 411, 420, 433, 436, 438, 439, 440, 443, 447, 450, 451, 457, 461, 463, 469, 472, 474, 477, 486, 488, 499, 506, 512, 518, 524, 525, 526, 527, 536, 537, 540, 548, 551, 578, 600, 601, 602, 603], "interfer": 421, "intermedi": [207, 400, 407, 417, 428, 464, 489], "intern": [15, 19, 20, 26, 87, 91, 125, 127, 129, 139, 140, 141, 142, 173, 179, 204, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 288, 318, 330, 391, 403, 405, 407, 410, 415, 443, 445, 454, 457, 462, 469, 477, 488, 494, 497, 503, 515, 523, 536, 540, 598], "interp": [19, 20, 158, 196, 197, 199, 201, 205, 206, 208, 209, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 331, 386, 414, 419, 456, 458, 471, 478, 482, 486, 490, 501, 502, 503, 506, 511, 513, 514, 552, 553, 578, 579], "interp1": 503, "interp1d": 331, "interp2": 503, "interp_by_coord": [196, 197, 199, 205, 208, 209, 281, 454, 503], "interp_by_pix": [196, 197, 199, 205, 208, 209, 277, 278, 503], "interp_kwarg": [68, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 231, 277, 278, 281, 282, 391, 501, 513, 587], "interp_map": [196, 197, 199, 205, 208, 209], "interp_missing_data": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168], "interp_param": 391, "interp_scal": [102, 293, 331], "interp_to_geom": [196, 197, 199, 205, 208, 209, 440, 456, 503, 513, 540], "interp_weight": 195, "interpol": [26, 94, 102, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 176, 195, 196, 197, 199, 201, 205, 206, 208, 209, 231, 244, 255, 256, 277, 278, 280, 281, 282, 293, 330, 331, 332, 390, 402, 403, 404, 433, 438, 443, 445, 448, 451, 453, 454, 455, 456, 457, 458, 468, 482, 501, 502, 506, 513, 514, 540, 548, 552, 587], "interpolatedunivariatesplin": 280, "interpolation_scal": [217, 219], "interpret": [91, 103, 106, 130, 144, 145, 197, 201, 207, 208, 209, 336, 409, 419, 503, 538, 553], "intersect": [89, 179, 180, 184, 204, 405, 489], "interspers": 396, "interstellar": [45, 481], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 102, 104, 109, 127, 132, 177, 193, 201, 206, 214, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 400, 401, 405, 406, 409, 415, 424, 437, 439, 440, 443, 452, 453, 458, 459, 488, 490, 493, 499, 503, 514, 524, 537, 552, 602, 605], "interval_edg": 206, "intervent": [420, 507], "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 254, 304, 402, 406], "intrinsic_model": 463, "intro": 420, "intro_map": 452, "introduc": [19, 20, 196, 197, 199, 201, 205, 208, 209, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 391, 398, 399, 401, 403, 404, 405, 406, 408, 411, 413, 416, 419, 420, 434, 436, 437, 439, 440, 443, 445, 446, 450, 451, 452, 454, 457, 458, 459, 480, 494, 502, 506, 507, 553, 559, 603, 606], "introduct": [394, 412, 413, 414, 420, 433, 437, 438, 439, 440, 459, 466, 469, 506, 516, 523, 524, 529], "introductori": 494, "introspect": 318, "intuit": [412, 606], "invalid": [377, 391, 405, 418, 419, 443, 459, 470, 475, 481, 515], "invalid_pixel": 504, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 207, 217, 219, 223, 224, 227, 231, 233, 234, 235, 240, 243, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 294, 297, 298, 340, 347, 404, 420, 481, 504, 506, 509, 578], "inverse_al": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "inverse_cdf": [420, 481], "inverse_transform": [217, 219], "inversecdf": 404, "inversecdfsampl": [404, 435], "inversecompton": [254, 578], "invert": [91, 195, 207, 526], "invest": 394, "investig": [480, 489, 493, 507], "involv": [87, 91, 103, 106, 110, 111, 391, 396, 405, 407, 409, 413, 472, 603], "io": [13, 83, 86, 87, 91, 128, 189, 199, 204, 214, 282, 400, 411, 420, 422, 434, 437, 449, 453, 457, 481, 499, 501, 503, 507, 512, 537, 540, 551, 553], "iop": 274, "iopscienc": 274, "ipix": 195, "ipykernel": [424, 426], "ipynb": [399, 411, 434, 437, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 521, 523, 524, 526, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "ipynb_to_galleri": 391, "ipython": [87, 91, 390, 391, 407, 408, 423, 427, 435, 462, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 518, 519, 523, 524, 526, 539, 603], "ipython3": 425, "ipywidget": 503, "irap": 411, "irevqymq": 506, "irf": [6, 82, 88, 96, 103, 104, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 182, 183, 185, 186, 187, 189, 191, 192, 195, 204, 207, 269, 317, 391, 392, 397, 401, 402, 403, 404, 407, 410, 411, 412, 413, 419, 424, 432, 434, 437, 439, 440, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 461, 463, 464, 466, 468, 469, 470, 471, 472, 474, 477, 481, 482, 486, 488, 490, 500, 502, 504, 508, 509, 510, 513, 514, 515, 516, 518, 523, 524, 536, 537, 540, 542, 543, 544, 546, 547, 601, 602], "irf_dict": 170, "irf_dl3_hdu_specif": 501, "irf_fil": [88, 151, 155, 156, 157, 166, 462, 471, 486, 490, 501, 512], "irf_filenam": [481, 482, 501, 512], "irf_map": [154, 155, 161, 166, 169], "irf_path": 481, "irfmap": [154, 155, 166, 169, 424, 440, 540], "irfmetadata": 418, "irfmodel": 402, "irfs1": 512, "irfs2": 512, "irfs_path": 82, "irfstack": [440, 449], "irreduc": 545, "irregular": [195, 207, 552], "irrespect": [404, 477, 503, 552], "is_align": [195, 201, 206, 207], "is_all_point_sky_region": 204, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209], "is_allski": [194, 195, 204, 207], "is_bkg": 108, "is_contigu": [206, 503], "is_convertible_to_flux_sed_typ": [125, 127], "is_energy_axi": 201, "is_energy_depend": [225, 226, 228, 230, 236, 239, 241, 242, 243, 244, 245, 255, 257, 261, 266, 267, 268, 271, 277, 280, 281, 283, 456, 506], "is_fixed_rad_max": 168, "is_flat": [194, 195, 200, 204, 207], "is_hpx": [195, 204, 207], "is_imag": [194, 195, 204, 207], "is_mask": [196, 197, 199, 205, 208, 209], "is_norm": [419, 445, 458], "is_norm_spectral_model": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 443, 506], "is_nul": 503, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 443], "is_rang": 83, "is_region": [195, 204, 207], "is_regular": [195, 204, 207], "is_ul": [67, 125, 127, 443, 458, 469, 496, 498, 526], "is_unidimension": 200, "isarfpiq": 493, "isf": [499, 605], "isinst": [391, 402, 405, 414, 418, 419, 420], "ism": [52, 53, 578], "isn": [398, 405, 407, 410, 422, 479, 603], "isnan": [503, 504], "iso": [88, 127, 206, 211, 457, 490, 505, 513, 552, 597], "iso_p8r2_source_v6_v06": [505, 513], "isol": [30, 31, 32, 405, 423, 504], "isot": [372, 607], "isotherm": [22, 528], "isotrop": [47, 101, 226, 287, 505], "isotropi": 545, "isotropic_fil": 101, "issu": [19, 20, 26, 87, 91, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 391, 392, 394, 399, 400, 402, 403, 405, 408, 411, 416, 417, 418, 419, 421, 424, 425, 426, 429, 430, 433, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 479, 504, 507, 512, 536, 540, 603, 604], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 203, 253, 411, 418], "iter": [87, 91, 92, 100, 125, 127, 134, 136, 196, 197, 199, 200, 201, 203, 205, 206, 208, 209, 253, 394, 397, 399, 407, 444, 472, 490, 507], "iter_by_axi": [125, 127, 196, 197, 199, 205, 208, 209], "iter_by_axis_data": 205, "iter_by_coord": 435, "iter_by_edg": [201, 206], "iter_by_imag": [196, 197, 199, 205, 208, 209, 452], "iter_by_image_data": [196, 197, 199, 205, 208, 209, 503], "iter_by_image_index": [196, 197, 199, 205, 208, 209], "iter_by_pix": 435, "iter_with_reshap": 200, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 499, "its": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 103, 106, 110, 111, 125, 127, 172, 173, 182, 195, 201, 203, 221, 230, 231, 292, 391, 394, 397, 400, 401, 403, 406, 407, 408, 410, 415, 417, 418, 422, 425, 443, 457, 458, 459, 464, 469, 470, 474, 481, 482, 488, 489, 494, 496, 498, 499, 502, 503, 504, 505, 506, 507, 509, 523, 526, 529, 545, 547, 549, 551, 552, 553, 602, 605], "itself": [87, 91, 390, 391, 406, 417, 464, 488, 489, 491, 509, 603], "ivoa": [391, 458], "j": [19, 20, 23, 103, 110, 130, 138, 392, 394, 536], "j0001": [496, 526], "j0002": [496, 526], "j0003": [496, 526], "j0006": 496, "j0007": 526, "j0008": [496, 526], "j0009": 526, "j0010": 496, "j0013": 496, "j0021": 496, "j0022": 496, "j0025": 496, "j0031": 496, "j0349": 496, "j0521": 468, "j0534": [496, 526], "j0633": 526, "j0835": [466, 526], "j0851": 496, "j1036": 496, "j1104": [496, 526], "j1506": 466, "j1507": 466, "j1513": 496, "j1514": 496, "j1555": 526, "j1653": 496, "j1713": 464, "j1731": 505, "j1732": 505, "j1741": 505, "j1744": 505, "j1745": 505, "j1746": 505, "j1747": 505, "j1748": 505, "j1753": 505, "j1800": 505, "j1801": 505, "j1802": 505, "j1809": 505, "j1811": 505, "j1824": 496, "j1825": 480, "j1843": 67, "j1844": 67, "j2028": 496, "j2158": 496, "j2347": 526, "j2350": 526, "j2351": 526, "j2352": 526, "j2356": 526, "j2357": [496, 526], "j2358": [496, 526], "j2359": [496, 526], "j6k3wscc": 493, "j_": 23, "jackson": [87, 91], "jacob": [433, 452], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 439], "jalel": [440, 443], "jan": [396, 397, 400, 403, 408, 412, 430], "jana": 458, "januari": [398, 400, 416], "jargon": 424, "jason": 433, "javascript": [87, 91], "jax": 409, "jbernet": 458, "jean": [451, 452], "jeffrei": 509, "jeltema": 528, "jep": 396, "jet": 382, "jfact": 495, "jfact_decai": 495, "jfact_map": 495, "jfactor": [19, 20, 457], "jfactori": 495, "jj": 212, "jk": [103, 110, 536], "jkl": 536, "jl": 536, "jo": [87, 91], "job": [93, 128, 129, 132, 136, 172, 445], "johann": [436, 443, 447, 448, 449, 450, 451, 452], "johannesbuchn": 420, "john": [87, 91, 420], "join": [393, 402, 403, 429, 512], "joint": [100, 110, 111, 122, 133, 137, 138, 147, 149, 214, 292, 399, 400, 403, 407, 411, 413, 420, 424, 433, 434, 436, 437, 452, 453, 459, 461, 464, 466, 468, 469, 470, 472, 480, 484, 485, 490, 497, 498, 499, 502, 506, 507, 508, 509, 513, 518, 523, 538, 540, 600, 601, 602], "joint_fit": 491, "joint_result": 491, "jointli": [508, 514], "jonathan": [447, 448], "jose": [443, 445, 451], "joshi": 443, "jos\u00e9": [399, 407, 411, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 451, 452, 453], "journal": [311, 313, 417], "jouvin": [433, 435, 436, 437, 440, 448, 449, 450, 451, 452], "jqueri": [87, 91], "jskwarg": [87, 91], "json": [16, 84, 90, 105, 126, 421, 445, 447, 451], "json_data": [16, 84, 90, 105, 126], "json_encode_earth_loc": 90, "json_schema": [16, 84, 90, 105, 126], "json_schema_input_typ": 90, "jsonschema": [408, 436, 437], "jsviewer": [87, 91, 479], "juan": 458, "jul": [397, 406, 408, 410, 430], "juli": [397, 400, 405, 407, 408, 410, 414, 416, 418, 489, 493], "julia": 458, "julian": 607, "julien": [449, 450, 451], "jun": [405, 407, 408, 413, 414], "june": [405, 409, 430], "junior": [66, 411], "jupyt": [390, 398, 407, 408, 411, 423, 427, 429, 434, 449, 450, 451, 453, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 519, 521, 523, 524, 526, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603], "jupyterlab": [390, 408, 411, 428, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526], "jupytext": 411, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 156, 366, 391, 392, 393, 394, 396, 399, 401, 405, 407, 408, 409, 411, 422, 423, 425, 451, 453, 463, 468, 469, 471, 477, 479, 481, 488, 489, 491, 494, 497, 503, 507, 513, 514, 518, 523, 526, 537, 553, 603], "juypter": 407, "jyear": [87, 91], "k": [19, 33, 52, 53, 103, 110, 203, 227, 280, 342, 466, 468, 470, 496, 499, 503, 505, 507, 513, 536, 553, 558, 571, 578], "k1mp7upr": 493, "kai": [451, 452], "kaori": 435, "kaspi": [30, 31, 32, 39, 45], "katrin": [419, 456, 457, 458], "kb": 399, "kde": 507, "kdel7szw": 493, "keep": [13, 87, 91, 100, 125, 164, 196, 197, 199, 205, 208, 209, 214, 391, 392, 394, 396, 397, 398, 399, 405, 408, 409, 410, 411, 414, 415, 420, 441, 451, 474, 475, 480, 486, 493, 499, 505, 513], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [104, 109], "keepdim": [164, 166, 169, 196, 197, 199, 205, 208, 209, 432, 437, 502], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 82, 84, 87, 89, 90, 91, 103, 105, 106, 110, 111, 120, 126, 203, 214, 354, 359, 360, 377, 394, 399, 401, 408, 413, 415, 418, 420, 429, 452, 463, 497, 506, 507, 568], "kept": [89, 103, 106, 110, 111, 125, 127, 128, 132, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 391, 397, 411, 415, 463, 493, 538], "kernel": [103, 106, 110, 111, 120, 124, 130, 131, 136, 153, 154, 155, 164, 166, 169, 171, 176, 181, 183, 186, 197, 207, 209, 397, 418, 424, 426, 438, 439, 444, 449, 453, 454, 459, 472, 475, 491, 502, 503, 504, 513, 526, 536, 540, 544], "kernel_width": [136, 472, 479], "kernelbackgroundestim": 439, "kernelbackgroundmapestim": 412, "kev": [108, 136, 201, 472, 497, 498, 553], "keyboard": 428, "keyerror": [91, 203, 415], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 102, 103, 105, 106, 110, 111, 126, 127, 129, 130, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 214, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 287, 293, 297, 330, 338, 339, 360, 372, 374, 375, 378, 379, 380, 384, 385, 386, 387, 388, 418, 439, 443, 446, 454, 455, 470, 481, 482, 497, 503, 507, 514, 538, 553, 565], "kg": 52, "khelifi": [420, 435, 437, 440, 443, 446, 450, 451, 452, 454, 455], "kh\u00e9lifi": [417, 454, 456, 457, 458, 459], "kill": 421, "kind": [87, 91, 366, 402, 403, 404, 409, 410, 414, 417, 452], "kinet": 44, "king": [165, 436, 447, 448, 449, 450, 451, 452, 501, 546], "kirsti": [456, 457, 458, 459], "kl": [507, 536], "klepser": 447, "km": [32, 37], "km2": 512, "km2a": [57, 70], "know": [221, 392, 394, 396, 400, 405, 407, 408, 415, 420, 422, 434, 451, 452, 453, 479, 482, 495, 501, 502, 503, 512, 514, 515, 603], "knowledg": [219, 238, 248, 284, 419, 420, 428, 466, 471, 478, 480, 483, 486, 488, 499, 502, 503, 505, 507, 509], "known": [134, 294, 298, 318, 404, 430, 468, 472, 475, 480, 488, 502, 503, 504, 507, 511, 526, 540, 550, 603, 604, 605], "koenig": [297, 459], "kon6g30c": 493, "konig": [297, 459], "konrad": 458, "kornecki": 458, "kovalev": 494, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 254, 318, 321, 495, 496, 534, 578], "kurt": 458, "kw": 493, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 102, 103, 106, 110, 111, 127, 128, 129, 130, 132, 148, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 178, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 287, 293, 330, 341, 366, 378, 379, 380, 383, 385, 386, 387, 388, 391, 402, 418, 419, 456, 466, 470, 481, 491, 502, 515, 591], "kwargs_ax": [384, 475, 477], "kwargs_background": [110, 111], "kwargs_colorbar": [150, 151, 153, 156, 157, 158, 163, 165, 167, 209, 379], "kwargs_count": [110, 111], "kwargs_excess": [110, 111], "kwargs_extens": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 480], "kwargs_fit": [110, 111, 384], "kwargs_fp": 102, "kwargs_hist": [384, 475, 477], "kwargs_list": 203, "kwargs_model": 102, "kwargs_npred_sign": [110, 111], "kwargs_point": [204, 229, 253, 470], "kwargs_posit": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 480], "kwargs_residu": [102, 110, 111], "kwargs_saf": [110, 111], "kwargs_spati": [103, 106, 110, 111, 477, 524], "kwargs_spectr": [103, 106, 110, 111, 477, 524], "kwargs_spectrum": [102, 110, 111], "l": [23, 26, 51, 54, 102, 103, 110, 111, 176, 295, 296, 388, 392, 405, 414, 417, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 479, 480, 486, 490, 491, 496, 497, 499, 502, 503, 504, 506, 507, 508, 509, 512, 513, 523, 524, 526, 536, 540, 553, 578, 587, 602, 604, 605, 606], "l06": [48, 530], "l_": [52, 53], "l_0": [51, 533, 558, 559], "l_snr": 44, "la": 449, "lab": [417, 424, 426, 428, 451], "label": [92, 198, 201, 206, 229, 253, 316, 379, 380, 385, 388, 391, 392, 395, 400, 404, 405, 421, 422, 443, 445, 454, 455, 457, 459, 462, 463, 466, 468, 470, 475, 477, 478, 482, 483, 488, 489, 491, 494, 495, 499, 503, 506, 508, 509, 526, 533, 534, 542, 568, 574, 577, 578, 582, 587], "label_axi": [198, 503], "label_axis2": 503, "labelcolor": 462, "labelmapaxi": [443, 457, 459], "lack": [203, 406, 491], "lafferti": [431, 602], "lafferty1994": 602, "lai": 504, "lambda": [67, 234, 235, 297, 384, 496, 512, 572, 605], "lambda_": [234, 235, 292, 466, 468, 477, 572, 574], "lancast": [138, 147], "land": 422, "landscap": [420, 507], "langl": 19, "languag": [398, 410], "laplac": [242, 560], "laptop": 420, "lar": [407, 432, 433, 434, 450, 451, 452, 455, 457, 459], "larg": [67, 87, 91, 196, 197, 199, 205, 208, 209, 277, 279, 281, 391, 394, 396, 397, 405, 411, 412, 420, 433, 443, 452, 453, 458, 462, 468, 475, 489, 496, 504, 507, 512, 513, 514, 526, 536, 538, 540, 541, 547, 553, 560, 600, 603, 608], "large_scale_compon": [67, 496], "larger": [27, 135, 154, 155, 161, 166, 169, 292, 303, 392, 399, 410, 457, 459, 462, 464, 468, 497, 502, 503, 504, 509, 537, 553, 560, 604, 605], "largest": [103, 106, 110, 111, 209, 391], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 196, 197, 198, 199, 201, 205, 208, 209, 253, 348, 388, 398, 401, 403, 413, 417, 421, 422, 424, 426, 432, 433, 494, 547, 549], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 101, 103, 106, 110, 112, 117, 124, 128, 129, 131, 136, 154, 155, 161, 166, 169, 172, 196, 197, 199, 202, 205, 207, 208, 209, 225, 226, 230, 237, 239, 242, 255, 257, 266, 267, 269, 271, 277, 279, 281, 287, 292, 320, 321, 324, 346, 391, 392, 399, 400, 401, 402, 403, 404, 410, 411, 414, 422, 424, 429, 432, 437, 450, 451, 452, 459, 461, 466, 469, 472, 474, 475, 477, 479, 483, 488, 489, 493, 496, 497, 498, 501, 502, 503, 504, 505, 506, 508, 516, 517, 518, 523, 524, 526, 528, 535, 537, 538, 540, 545, 552, 553, 558, 559, 560, 561, 562, 563, 564, 600, 607], "lat_0": [230, 239, 242, 257, 266, 267, 281, 406, 414, 472, 474, 477, 478, 480, 481, 482, 486, 488, 496, 497, 505, 506, 513, 523, 524, 558, 559, 560, 562, 563, 564, 565], "lat_0_err": 480, "lat_pnt": [320, 324], "lat_rang": 346, "lat_t": [320, 324], "later": [391, 396, 397, 398, 402, 403, 404, 407, 408, 409, 410, 411, 412, 420, 431, 433, 443, 444, 446, 447, 453, 463, 468, 470, 477, 478, 497, 502, 503, 506, 507, 513, 526, 536], "latest": [128, 189, 282, 318, 394, 398, 411, 416, 417, 421, 425, 454, 462, 471, 474, 477, 478, 479, 486, 490, 499, 537, 553], "latex": [391, 392], "latex_inlin": 457, "latitud": [94, 151, 194, 195, 196, 197, 202, 204, 207, 208, 209, 346, 378, 436, 483, 503, 506, 545, 552, 561], "latpol": 503, "latter": [183, 214, 402, 404, 406, 412, 415, 418, 420, 437, 470, 471, 481, 482, 486, 504, 505, 547, 549, 602, 604], "launch": [424, 426, 451, 603], "laura": [440, 443, 445, 446, 452, 454, 456, 457, 458, 459], "law": [27, 102, 120, 125, 127, 129, 135, 143, 164, 166, 169, 223, 233, 234, 235, 258, 259, 260, 261, 270, 273, 274, 275, 285, 297, 345, 404, 431, 437, 451, 461, 463, 471, 474, 477, 481, 483, 486, 489, 490, 491, 493, 505, 506, 509, 540, 554, 567, 568, 588, 595], "law2": 581, "layer": [87, 91, 403, 410], "layout": [443, 477, 486, 503, 512, 523, 524], "lazi": [88, 100, 103, 106, 110, 111, 279, 327, 451], "lazili": 103, "lazyfitsdata": 439, "lc": [86, 132, 206, 404, 406], "lc_1d": [125, 127, 148, 488, 489, 490, 494], "lc_3d": 488, "lc_estim": 406, "lc_maker_1d": [488, 489, 490], "lc_maker_3d": 488, "lc_new": 489, "le": 90, "lea": 440, "lead": [124, 391, 400, 405, 410, 412, 414, 416, 417, 420, 436, 459, 507, 509, 512, 514, 528, 603], "leak": [470, 549], "leakag": [297, 459, 488], "learn": [151, 156, 391, 408, 411, 421, 424, 426, 428, 452, 466, 468, 472, 479, 480, 481, 483, 494, 496, 497, 499, 503, 506, 507, 509, 512, 518, 526, 603], "least": [43, 44, 137, 146, 391, 394, 396, 400, 481, 494, 552], "leav": [396, 403, 405, 406, 408, 411, 423, 505], "lefaucheur": [449, 450, 451], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 110, 125, 127, 132, 136, 154, 156, 196, 197, 199, 205, 208, 209, 221, 235, 240, 260, 273, 274, 299, 302, 305, 391, 399, 401, 405, 407, 410, 414, 428, 472, 479, 488, 490, 494, 496, 505, 507, 538, 547, 550, 559, 560, 568, 569, 572, 573, 575, 576, 578, 580, 583, 584, 585, 586, 591, 592, 593, 595, 604, 605, 606], "legaci": [391, 451, 452], "legacy_altaz": 85, "legal": [87, 91], "legend": [388, 462, 463, 466, 468, 470, 477, 478, 482, 483, 488, 489, 491, 494, 495, 499, 506, 508, 509, 513, 533, 534, 542, 568, 574, 577, 578, 582, 587], "legend_kwarg": 388, "lemi\u00e8r": 451, "len": [83, 292, 388, 472, 480, 481, 482, 489, 491, 493, 494, 496, 502, 505, 526, 540], "lenain": [451, 452], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 172, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 297, 330, 384, 417, 420, 466, 468, 471, 479, 483, 493, 496, 499, 503, 513, 526, 558], "lengthi": 503, "lennarz": [434, 448, 450], "lepton": 545, "leq": [558, 563, 564], "less": [77, 195, 197, 201, 244, 280, 305, 391, 396, 398, 409, 420, 422, 451, 499, 506, 507, 508, 509], "let": [67, 286, 391, 394, 396, 400, 405, 408, 424, 427, 451, 452, 453, 466, 469, 470, 471, 472, 477, 478, 479, 480, 481, 483, 490, 491, 496, 497, 499, 503, 504, 506, 509, 513, 523, 526, 603], "level": [6, 11, 15, 16, 83, 84, 90, 105, 124, 126, 134, 214, 294, 298, 391, 392, 394, 395, 396, 402, 404, 406, 410, 411, 412, 415, 418, 424, 428, 435, 436, 437, 438, 439, 443, 451, 458, 461, 464, 466, 468, 469, 472, 474, 475, 477, 479, 481, 486, 488, 489, 490, 491, 494, 495, 498, 499, 505, 508, 512, 513, 514, 515, 518, 521, 525, 526, 527, 536, 537, 538, 545, 547, 548, 601, 602, 603, 607], "levelnam": 391, "levmar": [214, 499], "lf": 422, "lgpl": 391, "lgtm": 422, "lhaaso": [55, 57], "li": [120, 124, 179, 397, 420, 462, 472, 475, 481, 498, 507, 511, 602, 605], "lib": [355, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 565, 591], "librari": [87, 91, 221, 391, 396, 397, 401, 411, 417, 429, 464, 468, 481, 506, 507, 512, 518, 524, 528, 537, 540, 601, 603], "licenc": 417, "licens": [417, 428], "lie": [194, 195, 201, 204, 207, 498], "life": [398, 499], "lifetim": [20, 458], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 132, 140, 231, 244, 304, 395, 402, 404, 407, 411, 415, 424, 437, 439, 440, 447, 450, 452, 457, 458, 461, 463, 465, 487, 492, 493, 494, 518, 538, 539, 549, 554, 589, 599, 601], "light_curv": [16, 244, 411, 452, 461, 469, 474, 475, 477, 488, 492, 523, 598], "light_curve_flar": [461, 489, 492], "light_curve_model": 598, "light_curve_simul": [461, 490, 492], "lightcrv_pksb1222": [244, 598], "lightcurv": [71, 73, 74, 75, 77, 78, 121, 127, 132, 139, 140, 141, 142, 148, 205, 206, 244, 301, 302, 304, 400, 402, 407, 410, 412, 415, 424, 435, 437, 438, 439, 443, 449, 450, 451, 452, 454, 455, 457, 458, 461, 487, 488, 489, 492, 498, 518, 535, 540, 598], "lightcurve1": 139, "lightcurve2": 139, "lightcurve_at_energi": 415, "lightcurveconfig": 16, "lightcurveestim": [121, 406, 407, 412, 415, 424, 435, 437, 439, 440, 443, 451, 452, 457, 488, 489, 490, 493, 540], "lightcurvetablemodel": [402, 404], "lightcurvetempl": 402, "lightcurvetemplatemodel": [456, 457], "lightcurvetemplatetemporalmodel": [276, 414, 454, 457, 459, 482, 506, 598], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 144, 145, 160, 168, 196, 197, 199, 203, 205, 208, 209, 217, 221, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 318, 338, 348, 390, 391, 392, 394, 396, 397, 398, 399, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 421, 423, 424, 428, 434, 443, 445, 446, 450, 451, 453, 454, 456, 457, 462, 463, 466, 468, 469, 470, 471, 475, 482, 483, 491, 494, 495, 497, 499, 501, 503, 507, 508, 509, 512, 513, 518, 519, 523, 525, 526, 528, 529, 536, 540, 545, 553, 564, 601, 602, 603, 604, 605, 606], "likelhood": 403, "likelihood": [100, 102, 103, 106, 111, 124, 125, 126, 127, 129, 134, 136, 137, 146, 221, 222, 248, 293, 314, 315, 391, 397, 400, 403, 404, 407, 409, 411, 412, 413, 415, 420, 424, 431, 433, 434, 437, 444, 447, 450, 452, 453, 458, 459, 466, 468, 469, 470, 472, 479, 483, 488, 489, 491, 497, 498, 499, 502, 507, 509, 513, 523, 524, 528, 536, 538, 540, 578, 601, 602, 604, 605], "likelihood_profil": [402, 433], "likelihood_typ": 438, "likewis": [197, 209], "lima": 120, "lima1983": [511, 538, 602, 605], "lima_map": 475, "lima_maps2": 475, "limamapestim": [412, 439], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 102, 113, 114, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 146, 153, 168, 171, 201, 218, 219, 220, 238, 248, 258, 284, 293, 294, 295, 298, 338, 339, 378, 397, 399, 400, 402, 403, 404, 405, 406, 408, 409, 411, 412, 414, 415, 419, 420, 433, 439, 443, 450, 451, 452, 453, 458, 462, 468, 472, 477, 480, 483, 488, 497, 498, 499, 503, 504, 508, 513, 523, 536, 538, 540, 549, 559, 578, 587, 601, 602, 606], "lin": [19, 20, 201, 205, 206, 209, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 293, 330, 331, 332, 419, 482, 501, 503, 511, 553, 578], "line": [6, 13, 46, 82, 83, 87, 91, 102, 103, 106, 110, 111, 157, 163, 165, 167, 204, 205, 229, 253, 350, 351, 388, 390, 392, 394, 397, 400, 402, 405, 407, 408, 415, 422, 423, 424, 426, 428, 437, 448, 451, 459, 477, 499, 502, 506, 507, 528, 540, 553, 601], "line2d": [204, 229, 253], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 206, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 330, 391, 454, 461, 477, 482, 483, 486, 503, 506, 507, 513, 523, 524, 554, 589, 599], "linear_model": 594, "linearli": [206, 209, 503, 536], "linearsegmentedcolormap": [381, 382], "linearstretch": [381, 382, 608], "lineartemporalmodel": [276, 506, 594], "lineno": 391, "liner": [280, 405], "linestyl": [462, 491, 493, 495, 509, 534, 553, 558, 559], "linewidth": [229, 253, 388, 392, 493, 507], "linhoff": [455, 456, 457, 458, 459], "link": [67, 69, 80, 102, 229, 253, 292, 396, 399, 400, 403, 411, 417, 421, 422, 428, 429, 440, 443, 445, 449, 450, 451, 463, 464, 468, 469, 470, 471, 474, 477, 478, 486, 489, 490, 496, 499, 506, 507, 509, 512, 524, 526, 540, 587, 600], "link_to_nasaad": 392, "linkag": 316, "linkage_kwarg": 316, "linkcheck": 392, "linspac": [83, 155, 196, 197, 199, 205, 208, 209, 214, 481, 483, 491, 499, 501, 503, 509, 552, 558], "lint": [16, 84, 90, 105, 126], "linux": [398, 408, 422, 425, 452, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 603], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 102, 103, 104, 105, 106, 109, 110, 111, 120, 122, 124, 125, 127, 128, 129, 132, 133, 136, 137, 138, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 172, 176, 177, 179, 180, 182, 183, 184, 185, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 339, 349, 350, 351, 353, 380, 384, 385, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 468, 471, 472, 478, 482, 483, 486, 488, 490, 493, 494, 497, 498, 499, 501, 502, 508, 509, 512, 513, 514, 515, 516, 518, 524, 525, 536, 540, 543, 552, 553, 600, 601, 602, 603], "list_format": [87, 91], "listen": 540, "listenv": 394, "liter": [16, 84, 90, 105, 126, 336], "literatur": [420, 528, 530, 602], "littl": [87, 91, 410, 412, 418, 503, 513, 549, 603], "live": [83, 86, 88, 221, 391, 396, 399, 401, 412, 420, 453, 456, 498, 507], "live_point": [221, 420, 507], "livetim": [67, 88, 89, 106, 107, 111, 166, 188, 190, 191, 397, 462, 464, 468, 469, 471, 479, 481, 482, 486, 490, 496, 497, 501, 503, 513, 514, 526, 536, 540], "livetime_fract": 89, "ljouvin": 397, "ll": [125, 127, 136, 394, 396, 408, 425, 462, 463, 464, 468, 470, 474, 475, 479, 488, 489, 490, 491, 493, 494, 507, 603, 605], "llvm": 428, "ln": [53, 499, 585], "lo": [23, 420, 450], "lo_bnd": 201, "lo_threshold": 153, "load": [66, 67, 83, 86, 87, 91, 100, 102, 103, 106, 110, 129, 131, 170, 176, 194, 195, 196, 197, 207, 326, 391, 446, 449, 451, 457, 469, 471, 474, 475, 481, 482, 486, 490, 491, 494, 504, 512, 513, 515, 523, 526, 537], "load_cta_irf": [453, 457], "load_irf_dict_from_fil": [166, 457, 462, 471, 481, 482, 486, 490, 512], "loc": [87, 91, 209, 384, 491, 533, 534, 542, 568, 574, 577, 578, 582], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 144, 145, 181, 194, 195, 204, 205, 207, 391, 392, 394, 399, 405, 420, 421, 422, 425, 429, 433, 443, 469, 472, 474, 475, 480, 481, 495, 502, 507, 518, 523, 540], "local_dataset": 502, "local_dens": [17, 18, 21, 22, 24, 25, 27, 495], "local_to_glob": 195, "localfold": 11, "localis": 326, "localn": [16, 84, 90, 105, 126], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 140, 154, 155, 161, 166, 169, 207, 347, 394, 399, 405, 409, 412, 417, 418, 424, 426, 457, 459, 462, 471, 481, 482, 486, 490, 496, 514, 515, 537, 553, 603], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 103, 105, 125, 126, 127, 134, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 201, 205, 209, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 285, 288, 295, 296, 299, 305, 329, 330, 332, 377, 386, 403, 407, 420, 430, 447, 454, 458, 461, 463, 469, 471, 472, 474, 475, 477, 478, 479, 482, 486, 488, 489, 490, 493, 495, 497, 499, 501, 502, 503, 506, 507, 509, 513, 514, 521, 523, 524, 540, 542, 552, 553, 554, 567, 579, 587, 588, 595, 602, 603, 604, 605, 606], "log10": 491, "log_": [246, 247, 506, 576], "log_2": 302, "log_dir": [221, 507], "log_en": 506, "log_level": 11, "log_parabola": 466, "log_parabola_norm": 414, "logarithm": [34, 503, 509, 576], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 450, "loggaussian": 402, "logger": [357, 360, 391, 479], "logic": [16, 84, 86, 90, 105, 126, 182, 415, 459, 503, 504], "logical_and": [196, 197, 199, 205, 208, 209], "logical_or": [196, 197, 199, 205, 208, 209, 502], "loglikelihood_dataset": [295, 296], "loglog": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 329, 462, 495, 532, 533, 534], "lognorm": 495, "logo": 422, "logparabola": [402, 577], "logparabolanormspectralmodel": [247, 264, 414, 440, 506, 577], "logparabolaspectralmodel": [214, 246, 264, 414, 463, 466, 468, 470, 478, 496, 499, 506, 570, 576], "logscal": 437, "logspac": [155, 196, 197, 199, 205, 208, 209, 471, 486, 490, 491, 495, 503, 532, 533, 534, 553], "logspir": [33, 38], "loguniform": [248, 420, 507], "loguniformprior": [262, 507], "logz": [420, 507], "logz_b": [420, 507], "logz_singl": [420, 507], "logzerr": [420, 507], "logzerr_b": [420, 507], "logzerr_singl": [420, 507], "logzerr_tail": [420, 507], "lomb": [406, 451], "lon": [16, 47, 91, 94, 96, 103, 106, 110, 112, 117, 124, 129, 131, 136, 154, 155, 161, 166, 169, 172, 196, 197, 199, 202, 205, 207, 208, 209, 225, 226, 230, 237, 239, 242, 255, 257, 266, 267, 269, 271, 277, 279, 281, 320, 321, 324, 346, 391, 392, 402, 405, 410, 414, 436, 459, 469, 472, 474, 475, 477, 479, 483, 488, 489, 493, 496, 497, 498, 501, 502, 503, 506, 508, 513, 523, 524, 526, 538, 552, 553, 558, 559, 560, 561, 562, 563, 564], "lon_0": [230, 239, 242, 257, 266, 267, 281, 406, 414, 472, 474, 477, 478, 480, 481, 482, 486, 488, 496, 497, 505, 506, 513, 523, 524, 558, 559, 560, 562, 563, 564, 565], "lon_0_err": 480, "lon_pnt": [320, 324], "lon_rang": 346, "lon_t": [320, 324], "long": [391, 394, 396, 398, 405, 407, 410, 411, 413, 416, 418, 420, 445, 454, 463, 496, 507, 518, 519, 552], "longer": [303, 391, 397, 398, 405, 406, 408, 411, 425, 443, 446, 451, 452, 454, 457, 464, 471, 488], "longest": 200, "longitud": [68, 94, 151, 194, 195, 196, 197, 202, 204, 207, 208, 209, 346, 378, 405, 483, 503, 506, 545, 552, 561], "lonpol": 503, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 103, 106, 110, 111, 127, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 348, 391, 393, 394, 396, 403, 405, 406, 408, 410, 411, 414, 420, 428, 451, 464, 468, 469, 471, 472, 474, 475, 477, 479, 481, 483, 486, 488, 490, 491, 497, 501, 503, 506, 512, 513, 516, 518, 523, 526, 528, 537, 540, 603], "look_up": 449, "lookup": 202, "loop": [87, 91, 339, 404, 457, 468, 496, 503, 514, 523, 540], "lopez": [231, 451, 457, 568], "lopez21": [232, 463, 568], "lopez_2021": 232, "lorim": 35, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 391, "loss": [52, 602], "lost": [100, 103, 106, 110, 111, 540, 553], "lot": [82, 391, 394, 396, 397, 398, 399, 402, 404, 405, 407, 411, 422, 432, 434, 435, 443, 451, 452, 469, 479, 513, 523, 524, 550], "low": [87, 91, 153, 201, 221, 341, 391, 392, 394, 395, 400, 421, 449, 451, 461, 464, 468, 472, 479, 481, 497, 504, 505, 507, 512, 513, 518, 523, 525, 527, 547, 604], "low_zenith": 508, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 125, 127, 153, 182, 201, 203, 206, 221, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 391, 405, 410, 411, 418, 483, 502, 507, 524], "lower_error": 127, "lowest": [410, 494, 507], "lp": [246, 247, 414, 466, 496, 506, 570], "lp_norm": 577, "lqc_xo": 493, "lss": 468, "lst": [398, 512], "lsw": 421, "lt": [391, 417, 445, 454, 563, 564], "ltcube": [195, 196, 197, 199, 208, 209, 503], "lts_author": 417, "luca": [433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 454, 457], "lui": 453, "luigi": 448, "luminos": [41, 46, 51, 52, 53, 54, 254], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 534], "lvtm": 490, "lw": [468, 470, 472, 479, 491, 499, 553, 558, 560], "ly": [443, 505], "lyne": 37, "l\u00e9a": [433, 435, 436, 437, 440, 448, 449, 450, 451, 452], "l\u00f3pez": 451, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 112, 117, 132, 194, 195, 196, 197, 199, 205, 207, 208, 209, 315, 391, 392, 394, 405, 421, 423, 424, 425, 426, 482, 495, 499, 501, 503, 506, 521, 545, 549, 551, 552, 553, 565, 603, 606], "m2": [103, 156, 176, 463, 469, 471, 474, 475, 477, 479, 486, 497, 501, 502, 512, 523, 524], "m_": [20, 50, 52, 53], "m_3fhl_gc": 503, "m_4d": 503, "m_allski": 503, "m_b": 604, "m_cube": 503, "m_ejecta": [52, 533], "m_gc": 503, "m_hpx": 503, "m_i": 604, "m_iem_10gev": 503, "m_iem_cutout": 503, "m_iem_gc": 503, "m_iem_interp": 503, "m_sub": 503, "m_sun": 533, "m_wc": [196, 197, 199, 205, 208, 209, 503], "ma": [87, 91, 120, 124, 462, 472, 475, 498, 511, 602, 605], "mac": [87, 91, 391, 398, 422, 450, 603], "machin": [394, 398, 399, 404, 408, 422, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 477], "maco": [408, 452], "macport": [408, 450, 452], "made": [176, 183, 204, 207, 218, 220, 229, 253, 318, 350, 351, 391, 394, 396, 407, 410, 412, 415, 416, 417, 443, 454, 455, 459, 468, 472, 477, 478, 502, 512, 553, 565, 602], "madrid": 401, "magenta": [388, 480, 508], "magic": [97, 424, 429, 445, 451, 454, 470, 513, 602], "magic_ecpl": 286, "magic_lp": [286, 470], "magma": 507, "magnet": [42, 50, 51, 54, 578], "magnetic_field": [50, 51, 54], "magnitud": [330, 481], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 102, 105, 126, 127, 221, 391, 392, 394, 399, 400, 404, 405, 407, 408, 416, 417, 422, 423, 425, 429, 430, 431, 463, 474, 475, 481, 498, 512, 539, 540, 552, 560, 578, 600, 603, 607], "mail": [392, 394, 396, 398, 405, 407, 410, 412, 414, 417, 421, 427, 432, 433, 526, 603], "mailmap": [443, 454], "main": [91, 103, 110, 124, 136, 391, 394, 396, 397, 399, 403, 406, 407, 408, 411, 415, 417, 421, 422, 433, 439, 443, 446, 451, 457, 469, 480, 481, 483, 486, 493, 496, 501, 503, 504, 505, 507, 521, 523, 524, 535, 537, 541, 603, 605], "mainli": [391, 401, 402, 405, 412, 503, 545], "maint": 459, "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 391, 393, 408, 410, 411, 412, 416, 422, 452, 502], "mainten": [391, 398, 417, 422, 434, 456], "major": [204, 230, 239, 242, 391, 395, 396, 400, 408, 416, 445, 451, 452, 558, 559, 560], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 102, 105, 126, 171, 172, 176, 177, 178, 179, 181, 182, 183, 186, 187, 192, 193, 195, 196, 197, 200, 201, 204, 206, 207, 208, 209, 221, 280, 348, 350, 351, 362, 390, 392, 393, 396, 397, 398, 401, 403, 405, 407, 408, 409, 410, 411, 412, 415, 417, 418, 422, 424, 426, 428, 431, 432, 434, 437, 438, 443, 445, 448, 449, 450, 451, 454, 456, 459, 461, 463, 464, 468, 470, 471, 475, 477, 481, 486, 488, 500, 501, 502, 503, 506, 510, 512, 513, 518, 521, 526, 537, 540, 545, 603, 604], "make_background": [176, 183], "make_background_fit": 173, "make_background_scal": 173, "make_base_catalog_galact": [451, 530], "make_concentric_annulus_sky_region": 483, "make_contour": 499, "make_count": [176, 177, 178, 183], "make_counts_off": [177, 178], "make_cub": 171, "make_dataset": 172, "make_default_fov_background_model": 173, "make_edisp": [176, 183], "make_edisp_kernel": [176, 183], "make_edisp_kernel_map": 501, "make_edisp_map": 155, "make_effective_livetime_map": [459, 502], "make_exclusion_mask": 173, "make_exposur": [176, 183], "make_exposure_irf": [176, 183], "make_imag": 452, "make_lupton_rgb": 386, "make_map_background_irf": 446, "make_map_count": 397, "make_map_cutout": 397, "make_map_exposure_reco_energi": 397, "make_map_exposure_true_energi": [155, 397, 501], "make_map_fov_background": 397, "make_map_hadron_accept": 397, "make_map_ring_background": 397, "make_map_xxx": 397, "make_maps_off": 181, "make_mask_bkg_invalid": 182, "make_mask_energy_aeff_default": 182, "make_mask_energy_aeff_max": 182, "make_mask_energy_bkg_peak": 182, "make_mask_energy_edisp_bia": 182, "make_mask_offset_max": 182, "make_mean_edisp": 453, "make_mean_psf": 453, "make_meta_t": [176, 183], "make_model": 410, "make_more_random_stuff": 391, "make_observation_time_map": 502, "make_orthogonal_rectangle_sky_region": [129, 483], "make_path": [127, 478, 497, 498], "make_pixel_region": 405, "make_psf": [166, 176, 183, 453], "make_psf_map": 501, "make_quant": 362, "make_random_stuff": 391, "make_region": 405, "make_sampl": 507, "make_sky_coord": 405, "make_some_random_stuff": 391, "make_theta_squared_t": [443, 511], "makefil": [422, 447], "maker": [6, 155, 166, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 397, 404, 406, 417, 437, 439, 440, 445, 454, 457, 458, 461, 462, 468, 470, 471, 475, 479, 481, 482, 486, 490, 491, 493, 497, 500, 501, 504, 510, 511, 514, 518, 545, 550, 602], "maker_fov": 524, "maker_safe_mask": [479, 486, 524], "mamba": [394, 423, 424, 445], "manag": [87, 91, 218, 220, 229, 253, 338, 369, 390, 391, 394, 399, 407, 408, 410, 413, 417, 418, 421, 443, 448, 450, 454, 458, 503, 505, 603], "manconi": 435, "mandatori": [182, 394, 404, 417, 482, 506, 507, 545], "mandatory_keyword": 501, "mani": [87, 91, 330, 391, 392, 394, 396, 398, 400, 403, 405, 406, 407, 408, 411, 412, 417, 420, 422, 428, 434, 435, 440, 443, 449, 450, 451, 452, 453, 456, 457, 464, 468, 471, 480, 486, 494, 498, 503, 507, 515, 518, 528, 536, 538, 550, 553, 600, 601, 602, 603, 607], "manifest": 401, "manipul": [87, 91, 415, 418, 445, 509, 552], "manner": [456, 457], "manpow": [396, 408], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 398, 403, 413, 421, 540, 548, 603, 604], "manuel": [444, 447, 448], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 80, 83, 84, 87, 90, 91, 96, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 131, 132, 136, 137, 138, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 226, 229, 230, 237, 239, 242, 244, 253, 255, 257, 266, 267, 269, 271, 277, 278, 279, 281, 282, 290, 297, 340, 378, 379, 384, 386, 388, 390, 391, 392, 394, 398, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 418, 420, 424, 428, 432, 433, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 457, 458, 459, 461, 462, 464, 468, 469, 470, 471, 473, 476, 477, 480, 481, 482, 483, 484, 485, 488, 489, 490, 493, 494, 496, 497, 498, 500, 502, 506, 507, 510, 511, 512, 513, 514, 518, 519, 520, 523, 524, 525, 528, 535, 536, 539, 540, 544, 545, 546, 547, 548, 549, 550, 557, 559, 560, 561, 562, 565, 598, 601, 602, 608], "map_": [210, 211, 379, 386], "map_4d": 503, "map_analysi": 410, "map_cent": 281, "map_coord": [83, 155, 166, 169], "map_dataset": [403, 491], "map_dataset_empti": 491, "map_dataset_mak": 491, "map_dataset_on_off": 491, "map_edisp": [112, 117], "map_in": [196, 197, 199, 205, 208, 209], "map_out": [106, 111, 154, 155, 161, 166, 169, 196, 197, 199, 205, 208, 209], "map_result": 472, "map_select": [16, 469, 474, 475, 477, 523], "map_typ": [196, 197, 199, 205, 208, 209, 503, 552], "mapax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 440, 443, 445, 503], "mapaxi": [19, 20, 26, 103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 125, 127, 129, 137, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 176, 186, 187, 192, 193, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 386, 392, 406, 415, 434, 435, 437, 440, 443, 453, 457, 459, 462, 464, 468, 470, 471, 478, 479, 481, 482, 486, 489, 490, 491, 493, 497, 501, 502, 503, 506, 511, 513, 514, 524, 544, 547, 549, 550, 552, 553], "mapcoord": [83, 155, 166, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 255, 451, 452, 503, 553, 561], "mapdataset": [98, 99, 101, 104, 106, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 124, 129, 132, 136, 143, 144, 145, 146, 147, 171, 172, 173, 176, 177, 181, 182, 229, 237, 253, 384, 387, 404, 406, 412, 413, 433, 434, 435, 436, 437, 438, 439, 440, 443, 457, 458, 459, 472, 474, 478, 479, 480, 482, 483, 486, 488, 490, 491, 498, 499, 502, 504, 505, 513, 523, 524, 538, 540, 547, 550, 602, 604, 605], "mapdataseteventsampl": [93, 109, 437, 438, 439, 446, 457, 459, 481, 482], "mapdatasetmak": [166, 174, 183, 404, 437, 440, 443, 446, 454, 479, 481, 482, 486, 491, 501, 502, 514, 523, 524, 540, 545, 547, 550], "mapdatasetmetadata": [103, 106, 418], "mapdatasetoff": 445, "mapdatasetonoff": [98, 103, 110, 111, 120, 124, 143, 171, 177, 181, 437, 438, 440, 443, 456, 457, 475, 491, 502, 536, 550, 604], "mapdatasetsampl": 404, "mapevalu": [402, 403, 436, 437, 440, 443, 454, 455, 456, 458], "mapeventsampl": [435, 436], "mapfit": [402, 403, 433, 452, 453], "mapgeom": [397, 453, 454], "mapmak": [176, 407, 433, 437, 452], "mapmakerob": [436, 437], "mappabl": 415, "mappanelplott": [412, 608], "mapper": 326, "mappingintstrani": [16, 84, 90, 105, 126], "mappingnamespac": [16, 84, 90, 105, 126], "maps_off": 181, "mar": [408, 430, 455], "march": [398, 400, 430, 432, 453], "marco": [17, 19, 20, 21, 22, 24, 25, 26, 27], "margin": [101, 102, 106, 111, 116, 119, 195, 197, 207, 209, 229, 253, 269, 402, 504, 558, 602, 604], "marion": [433, 452], "mark": [91, 391, 402, 421], "marker": [102, 103, 106, 110, 111, 229, 253, 462, 464, 468, 470, 472, 479, 488, 489, 490, 494, 526], "markerfacecolor": [103, 106, 110, 111], "markers": [102, 103, 106, 110, 111, 229, 253, 509], "markov": [420, 602], "mask": [83, 87, 91, 99, 102, 103, 106, 110, 111, 124, 128, 129, 131, 132, 133, 136, 154, 155, 161, 166, 169, 171, 173, 178, 179, 180, 181, 182, 184, 194, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 218, 220, 229, 253, 269, 384, 403, 419, 437, 439, 440, 441, 443, 446, 452, 454, 455, 456, 457, 459, 461, 462, 464, 477, 479, 500, 502, 505, 510, 514, 518, 536, 547, 549, 552, 602], "mask_1": 508, "mask_2": 508, "mask_bright": 496, "mask_contains_region": 209, "mask_data": 504, "mask_energi": [497, 504], "mask_fit": [102, 103, 106, 110, 111, 116, 119, 403, 437, 454, 470, 475, 477, 491, 497, 499, 504, 509, 536], "mask_fit_imag": [103, 106, 110, 111], "mask_imag": [103, 106, 110, 111], "mask_map": [195, 207, 461, 504, 510], "mask_map_catalog": 504, "mask_nearest_posit": [196, 197, 199, 205, 208, 209], "mask_off": 491, "mask_roi": 496, "mask_saf": [102, 103, 106, 107, 110, 111, 182, 403, 437, 497, 502, 504, 536], "mask_safe_edisp": [103, 106, 110, 111, 459], "mask_safe_imag": [103, 106, 110, 111, 154, 155, 161, 166, 169], "mask_safe_psf": [103, 106, 110, 111], "mask_spac": 497, "mask_valid": 102, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 404, 439, 458, 495, 507, 528, 562], "massdm": [19, 20, 495], "master": [397, 398, 405, 421, 422, 431], "match": [83, 87, 91, 109, 114, 134, 194, 195, 197, 200, 201, 202, 204, 207, 209, 211, 294, 298, 391, 399, 451, 453, 458, 468, 471, 490, 498, 513, 535, 552], "match_by_nam": 202, "materi": 420, "math": [239, 390], "mathcal": [499, 536], "mathemat": [506, 509], "mathieu": [443, 446], "mathrm": [19, 20, 23, 103, 110, 156, 495, 499, 536, 604, 606], "mathworld": [345, 346], "matomo": 459, "matplotlib": [19, 20, 26, 66, 67, 83, 131, 150, 153, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 205, 208, 209, 212, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 369, 379, 380, 381, 384, 385, 386, 388, 390, 391, 392, 405, 408, 417, 425, 428, 435, 443, 445, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 523, 524, 526, 532, 533, 534, 540, 542, 543, 544, 546, 549, 558, 560, 564, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 607, 608], "matric": 212, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 112, 117, 153, 154, 155, 158, 212, 213, 214, 218, 229, 253, 294, 298, 384, 408, 409, 419, 453, 454, 457, 459, 499, 501, 536, 538, 544], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 405, 411, 419, 452, 457, 458, 461, 500, 502, 510, 513, 518, 529, 601, 603], "matthew": [398, 449, 451, 452], "matthia": [451, 452], "mattox": 472, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 103, 113, 114, 128, 130, 132, 168, 172, 176, 178, 182, 209, 217, 218, 219, 220, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 284, 346, 399, 407, 414, 419, 428, 439, 440, 441, 443, 445, 457, 459, 463, 464, 468, 469, 470, 471, 474, 475, 477, 478, 479, 480, 483, 486, 488, 489, 490, 491, 493, 494, 496, 497, 499, 501, 502, 503, 504, 506, 507, 508, 509, 513, 514, 523, 524, 526, 528, 547, 549, 550, 558, 578, 581, 587, 605], "max_ag": [45, 530], "max_column": [87, 91], "max_energi": 494, "max_lin": [87, 91], "max_nit": [134, 136, 459], "max_offset": 407, "max_percentil": 83, "max_radiu": [164, 166, 169, 207, 513], "max_region_numb": [179, 549], "max_width": [87, 91], "maxcal": 214, "maxclust": 316, "maxfev": 499, "maxim": [45, 82, 91, 113, 114, 134, 136, 182, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 420, 455, 456, 457, 458, 459, 549], "maxima": [144, 218, 220], "maximilian": [443, 445, 446, 455, 456, 457, 458, 459], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 125, 127, 130, 166, 169, 171, 176, 179, 182, 188, 189, 191, 195, 201, 206, 207, 217, 219, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 284, 294, 298, 345, 347, 350, 388, 394, 397, 405, 445, 466, 472, 494, 498, 499, 502, 503, 507, 509, 514, 524, 530, 538, 549, 578, 601, 602, 605], "maximum_likelihood": [420, 507], "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 391, 399, 401, 402, 413, 507], "mb": [194, 195, 204, 207, 399, 424, 426, 461, 467, 476, 485, 492, 510, 512, 513, 515, 517, 520, 522, 527, 555, 566, 588, 599], "mbox": [103, 110], "mc": 409, "mc_id": [83, 401, 404, 445, 481, 512], "mcerp": 409, "mckee": [53, 458], "mcmc": [409, 411, 420, 433, 438, 440, 507, 578, 602], "mcmc_sampl": [411, 435], "md": [16, 84, 90, 105, 126, 394, 411, 417], "mdm": [26, 495], "mean": [42, 68, 87, 91, 96, 102, 103, 129, 131, 153, 154, 155, 158, 161, 166, 169, 238, 240, 244, 280, 297, 301, 317, 336, 391, 392, 394, 396, 398, 404, 405, 407, 408, 414, 419, 420, 425, 428, 440, 449, 468, 471, 472, 482, 494, 498, 499, 502, 506, 507, 508, 509, 513, 514, 526, 559, 575, 603, 604], "meaning": 506, "meant": [397, 457, 462, 471, 474, 477, 479, 486, 490, 512], "measur": [27, 67, 102, 106, 111, 131, 134, 137, 146, 201, 286, 294, 295, 296, 298, 301, 302, 303, 304, 306, 308, 309, 312, 315, 397, 405, 410, 415, 422, 431, 436, 444, 450, 452, 463, 464, 468, 470, 471, 475, 478, 480, 483, 486, 488, 489, 494, 496, 511, 513, 524, 526, 538, 545, 547, 550, 601, 602, 605, 606], "mechan": [399, 409, 415, 418], "media": 417, "median": [19, 20, 26, 83, 166, 169, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 420, 428, 491, 507, 508, 513], "median_zenith": 508, "medium": [45, 52, 391, 400], "meeseeksdev": 391, "meeseeksmachin": 391, "meet": [229, 253, 318, 397, 399, 411, 416, 422], "megabyt": [194, 195, 204, 207], "mem": [461, 467, 476, 485, 492, 510, 517, 520, 522, 527, 555, 566, 588, 599], "member": [83, 392, 396, 405, 417, 418, 451, 457, 498, 512, 515], "memo": [153, 201], "memori": [87, 88, 91, 92, 100, 103, 104, 106, 109, 110, 111, 194, 195, 204, 207, 277, 279, 281, 369, 391, 401, 403, 404, 407, 413, 415, 437, 443, 458, 471, 486, 540, 602], "memoryobserv": 88, "mender": [456, 457, 458], "mention": [59, 148, 391, 392, 394, 398, 399, 403, 405, 408, 410, 411, 416, 417, 421, 422, 501, 505, 506, 509, 528, 602], "mentor": [394, 411], "mere": 401, "merg": [67, 86, 87, 91, 198, 201, 229, 253, 358, 391, 394, 395, 396, 397, 404, 405, 406, 410, 411, 416, 417, 421, 422, 432, 433, 434, 435, 436, 437, 438, 439, 440, 448, 449, 450, 451, 452, 453], "merge_equ": 86, "mergesort": [87, 91], "mess": 392, "messag": [102, 213, 215, 216, 394, 405, 407, 414, 420, 441, 456, 464, 466, 468, 469, 470, 477, 478, 479, 490, 491, 493, 498, 499, 513, 523, 524, 540, 603], "met": [86, 372, 457, 489, 493, 602], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 103, 104, 106, 108, 109, 110, 111, 125, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 183, 196, 197, 199, 205, 208, 209, 277, 278, 281, 282, 328, 372, 373, 374, 375, 401, 404, 405, 406, 415, 418, 421, 439, 440, 451, 455, 457, 458, 481, 491, 503, 508, 512, 514, 537, 538, 598], "meta_t": [100, 102, 103, 106, 110, 111, 176, 183, 415, 418, 440, 464, 471, 502, 536], "metaattribut": [87, 91], "metadata": [83, 84, 85, 87, 88, 90, 91, 105, 107, 125, 126, 127, 150, 151, 152, 156, 157, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209, 373, 395, 397, 408, 458, 469, 474, 475, 477, 481, 506, 523, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "metadata_fits_export_kei": [84, 90, 105, 126], "metadatabas": 418, "metadatabasemodel": 418, "metapackag": 408, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 298, 304, 306, 316, 326, 330, 334, 338, 339, 340, 365, 378, 380, 390, 391, 394, 397, 400, 401, 402, 405, 406, 407, 409, 410, 411, 413, 415, 417, 418, 420, 424, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 462, 464, 466, 468, 469, 470, 472, 474, 475, 477, 478, 479, 480, 481, 482, 486, 489, 491, 493, 495, 496, 497, 498, 499, 501, 502, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 523, 524, 526, 535, 537, 539, 540, 544, 547, 549, 550, 551, 553, 576, 591, 600, 601, 602, 603, 605], "method_kwarg": [338, 339], "methoda": 435, "metric": 316, "metropoli": 420, "mev": [74, 77, 83, 150, 151, 152, 156, 275, 462, 463, 471, 474, 477, 479, 486, 490, 491, 496, 501, 503, 506, 512, 513, 526, 587], "meval": 560, "mexico": 514, "meyer": [250, 286, 478, 602], "meyer2010": 602, "mgtime": 406, "mi": 545, "michael": [456, 458], "michel": 459, "mid": [113, 446, 457, 512], "middl": [380, 407], "midpoint": 88, "might": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 184, 201, 214, 391, 396, 402, 403, 405, 408, 410, 415, 417, 418, 420, 421, 424, 426, 433, 468, 489, 491, 497, 502, 504, 513, 514, 518, 519, 526, 528, 536, 540, 547, 553, 603, 605], "migra": [103, 106, 110, 111, 155, 158, 163, 187, 407, 481, 482, 501, 545], "migra_axi": [103, 106, 110, 111, 115, 155, 157, 158, 481, 482, 501, 502], "migrad": [102, 214, 464, 466, 468, 469, 470, 477, 478, 479, 491, 493, 498, 499, 513, 523, 524], "migrad_opt": [214, 499], "migrat": [103, 106, 110, 111, 115, 157, 158, 163, 400, 436, 443, 452, 477, 481, 502, 544, 545], "milagro": [97, 382, 608], "mileston": [400, 421], "milki": [33, 38, 431, 530], "miller": [87, 91], "million": [391, 418], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 103, 128, 130, 132, 148, 176, 217, 218, 219, 220, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 284, 302, 346, 406, 407, 414, 419, 428, 443, 451, 459, 463, 464, 468, 469, 470, 471, 474, 475, 477, 478, 479, 480, 483, 486, 488, 489, 490, 491, 493, 494, 496, 497, 499, 501, 502, 503, 506, 507, 508, 509, 513, 523, 524, 526, 528, 549, 578, 581, 587], "min_count": 173, "min_dist": [144, 145, 179, 472, 479, 549], "min_distance_input": [179, 549], "min_energi": 494, "min_ess": 221, "min_npix": [154, 155, 161, 166, 169, 207, 209], "min_npred_background": 173, "min_num_live_point": 420, "min_pix": 459, "min_signific": 406, "min_significance_lc": 406, "minaya": 453, "mind": [394, 411, 486, 499], "mini": 411, "miniconda": 423, "minim": [19, 20, 26, 113, 114, 135, 196, 197, 199, 204, 205, 208, 209, 210, 214, 223, 224, 226, 227, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 254, 255, 256, 257, 258, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 292, 403, 406, 414, 418, 420, 445, 455, 457, 462, 481, 497, 499, 509, 524, 540, 549, 550, 553, 601, 606], "minima": [218, 220, 420, 507, 509], "minimis": [490, 507, 508], "minimmum": [154, 155, 161, 166, 169, 207, 209], "minimum": [19, 20, 26, 47, 100, 124, 125, 127, 130, 135, 140, 144, 145, 148, 149, 171, 173, 179, 201, 204, 206, 216, 217, 219, 221, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 284, 288, 293, 299, 302, 318, 345, 347, 350, 386, 408, 420, 445, 451, 468, 472, 481, 498, 499, 503, 507, 509, 513, 538, 540, 549, 578, 606], "mino": [214, 499], "minor": [391, 396, 411, 414, 416, 442, 455, 559, 560], "minos_contour": [435, 453], "minu": [158, 491], "minuit": [102, 122, 214, 215, 216, 292, 402, 409, 437, 452, 453, 457, 464, 466, 468, 469, 470, 477, 478, 479, 491, 493, 498, 499, 507, 513, 523, 524], "minuit_opt": 499, "minut": [411, 422, 451, 463, 466, 468, 469, 472, 475, 477, 478, 479, 480, 481, 483, 488, 489, 490, 491, 493, 495, 497, 498, 499, 502, 505, 507, 509, 523, 524], "mireia": [454, 459], "mirror": 193, "misc": [431, 444, 448, 449, 450], "miss": [82, 87, 91, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 391, 394, 399, 400, 401, 402, 405, 411, 412, 415, 441, 443, 445, 451, 456, 459, 503, 545], "mission": [83, 457, 602], "mistak": [396, 416], "mix": [390, 391, 407, 497, 503], "mixin": [87, 91], "mjd": [86, 94, 127, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 373, 375, 392, 456, 457, 472, 481, 482, 488, 489, 490, 493, 494, 503, 506, 537, 591, 592, 593, 594, 595, 596, 597, 598, 607], "mjdref": [472, 503], "mjdreff": [94, 372, 375, 482], "mjdrefi": [94, 372, 375, 482], "mkdir": [407, 468, 469, 477, 478, 481, 523, 524], "mkn": [526, 602], "mkn_421_3fhl": 526, "mncontour": 214, "mnt": 454, "mock": 480, "mock_dl4": 480, "modal": 507, "mode": [16, 84, 85, 87, 90, 91, 94, 103, 105, 106, 110, 126, 130, 154, 155, 161, 166, 169, 172, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 279, 418, 420, 438, 451, 454, 458, 490, 507], "model": [1, 6, 15, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 114, 116, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 143, 146, 147, 150, 156, 157, 164, 165, 166, 167, 169, 173, 176, 189, 196, 197, 199, 205, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 307, 310, 315, 387, 390, 391, 392, 395, 396, 397, 403, 404, 406, 407, 409, 411, 412, 415, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 465, 466, 471, 472, 475, 480, 483, 486, 491, 498, 500, 501, 502, 503, 504, 510, 513, 514, 525, 528, 529, 535, 536, 538, 540, 541, 545, 547, 548, 555, 566, 588, 599, 601, 602, 605, 606], "model1": [224, 568, 570, 574, 577, 579, 582], "model2": [224, 463, 490, 568, 570, 574, 577, 579, 582], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 469], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [506, 570], "model_best": 463, "model_best_joint": 468, "model_best_stack": 468, "model_bin_": 493, "model_bin_0": 493, "model_bkg": 497, "model_computed_field": [16, 84, 90, 105, 126], "model_config": [16, 84, 90, 105, 126, 474, 523], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 105, 126], "model_copi": [16, 84, 90, 105, 126, 477, 506], "model_dump": [16, 84, 90, 105, 126], "model_dump_json": [16, 84, 90, 105, 126], "model_extra": [16, 84, 90, 105, 126], "model_field": [16, 84, 90, 105, 126], "model_fields_set": [16, 84, 90, 105, 126], "model_fit": 490, "model_in_bin": 493, "model_joint": 477, "model_json_schema": [16, 84, 90, 105, 126], "model_manag": [461, 505, 510], "model_nam": [103, 106, 110, 111, 229, 253, 387, 497], "model_parametrized_nam": [16, 84, 90, 105, 126], "model_plot": 480, "model_post_init": [16, 84, 90, 105, 126], "model_prior": 509, "model_read": 509, "model_rebuild": [16, 84, 90, 105, 126], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [471, 486, 490], "model_spectrum": 506, "model_str": 469, "model_typ": [229, 237, 251, 253, 269, 279, 292, 414, 505], "model_valid": [16, 84, 90, 105, 126], "model_validate_json": [16, 84, 90, 105, 126], "model_validate_str": [16, 84, 90, 105, 126], "model_weak": 509, "model_weak_prior": 509, "model_without_nam": 506, "modelbas": [237, 262, 269, 271, 272, 279, 283, 419], "modeldm": [19, 20], "modelevalu": 402, "modeling_2d": [461, 474, 476], "modelmetadata": 418, "modelmodel_dump": [16, 84, 90, 105, 126], "modelmodel_dump_json": [16, 84, 90, 105, 126], "models_3fhl": 505, "models_4fgl_roi": 496, "models_as_dict": [16, 84, 90, 105, 126], "models_diffus": 481, "models_fil": [16, 469, 474, 475, 477, 523], "models_fit": 486, "models_gc": 505, "models_gp": 512, "models_joint": 477, "models_or": 505, "models_read": 506, "models_select": 505, "models_stack": 477, "models_yaml": 506, "modelsmetadata": 418, "modern": [87, 91, 409], "modernis": [408, 437], "modest": [391, 559], "modif": [16, 84, 87, 90, 91, 105, 126, 391, 394, 413, 420, 421, 454], "modifi": [22, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 103, 110, 127, 128, 129, 132, 136, 172, 214, 338, 363, 388, 401, 403, 407, 413, 417, 418, 420, 438, 440, 441, 443, 445, 453, 456, 457, 459, 463, 469, 482, 502, 504, 509, 514, 523, 538, 553, 607], "modul": [268, 391, 392, 396, 400, 407, 412, 431, 433, 439, 451, 490, 496, 498, 502, 505, 528, 529, 530, 531, 578, 596, 607], "modular": 397, "mohanti": 102, "mohrmann": [407, 432, 433, 434, 450, 451, 452, 455, 457, 459, 602], "mohrmann2019": 602, "moment": [15, 51, 54, 86, 95, 269, 367, 397, 405, 407, 408, 411, 416, 417, 501, 503], "moncar": [214, 499], "monitor": [404, 507, 512, 540], "monkei": 391, "mono": [399, 507], "monoton": 201, "mont": [409, 420, 545, 602], "montecarlo": [104, 109, 214], "month": [78, 394, 400, 405, 408, 410, 411, 416, 421, 425, 431, 432, 433, 434, 435, 444, 447, 448, 449, 450, 451, 452, 453], "monthli": [400, 418, 424, 453], "moor": 24, "morcuend": [453, 456, 458, 459], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 102, 103, 106, 110, 111, 137, 144, 146, 153, 182, 196, 197, 199, 208, 209, 221, 223, 224, 225, 226, 227, 228, 230, 231, 233, 235, 236, 239, 240, 241, 242, 243, 244, 245, 247, 254, 255, 256, 257, 258, 260, 261, 266, 267, 268, 270, 273, 274, 275, 281, 282, 299, 305, 326, 366, 391, 392, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 437, 438, 439, 440, 443, 450, 452, 453, 457, 459, 463, 464, 468, 470, 472, 475, 477, 481, 482, 490, 493, 494, 495, 497, 499, 500, 502, 503, 504, 505, 506, 507, 508, 509, 514, 515, 518, 526, 536, 537, 538, 540, 549, 550, 552, 553, 559, 600, 601, 603, 605, 607], "moreov": [407, 496, 502, 536], "morpholog": [122, 404, 461, 484, 485, 518], "morphologi": [50, 52, 122, 402, 404, 414, 431, 448, 450, 464, 474, 480, 481, 482, 486, 496, 502, 554], "mosaic": 397, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 120, 127, 221, 390, 391, 392, 394, 396, 397, 398, 399, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 422, 424, 425, 443, 450, 451, 453, 454, 457, 458, 474, 475, 483, 488, 490, 496, 498, 499, 501, 502, 503, 504, 507, 512, 513, 518, 519, 526, 528, 538, 539, 540, 545, 547, 553, 600, 602, 603, 606], "mostli": [56, 69, 318, 391, 392, 397, 398, 399, 400, 405, 407, 410, 411, 412, 415, 416, 418, 422, 443, 451, 496, 502, 515, 526, 605, 607], "motion": [45, 322], "motiv": [182, 396, 398, 399, 405, 408, 410, 421, 506, 540], "move": [292, 396, 397, 398, 399, 402, 405, 410, 411, 412, 415, 421, 427, 433, 434, 436, 437, 438, 439, 443, 444, 448, 449, 451, 452, 453, 454, 471], "move_axi": 457, "movement": 417, "mpatch": 483, "mpg": 67, "mpi": [67, 420], "mpl": 391, "mpl_check_plot": 391, "mpl_kwarg": [468, 479, 483], "mpl_normal": [381, 382, 608], "mpl_plot_check": 391, "mpl_style": 451, "msg": [462, 471, 474, 477, 479, 486, 490, 512], "msh": [475, 496, 502], "msh15": 515, "mst": 512, "mu": [26, 238, 294, 298, 299, 384, 419, 463, 495, 509, 544, 545, 605], "mu_": [299, 305, 604, 605, 606], "mu_background": 603, "mu_bkg": [106, 111, 294, 309, 315, 428, 603, 605], "mu_off": 605, "mu_on": [299, 305, 605], "mu_sig": [298, 309, 315, 475, 604, 605], "mu_x": 605, "much": [197, 221, 391, 397, 402, 405, 407, 410, 411, 420, 436, 443, 471, 477, 483, 491, 507, 509, 513, 526, 560], "mul": [26, 463, 495, 506, 568, 574, 577, 579, 582, 587], "multi": [87, 91, 195, 207, 400, 405, 419, 437, 440, 444, 451, 461, 466, 472, 484, 485, 497, 499, 501, 506, 508, 513, 518, 538, 540, 552, 601, 602], "multibeam": 35, "multicompon": 459, "multidimension": [397, 407, 419, 458, 498, 516, 518, 545, 601], "multinorm": 409, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 102, 103, 106, 109, 110, 111, 114, 116, 119, 136, 144, 170, 196, 197, 199, 205, 208, 209, 214, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 391, 392, 397, 400, 403, 404, 405, 407, 409, 412, 413, 415, 419, 420, 424, 433, 440, 441, 443, 451, 457, 458, 459, 470, 477, 489, 496, 497, 498, 502, 503, 504, 506, 507, 513, 538, 552, 578, 587, 600, 601, 602, 603, 608], "multipli": [19, 20, 26, 127, 209, 223, 224, 226, 227, 229, 230, 231, 233, 234, 235, 238, 239, 240, 242, 244, 246, 247, 248, 250, 253, 254, 255, 256, 258, 259, 260, 262, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 284, 290, 297, 307, 310, 318, 463, 472, 475, 491, 495, 506, 568, 605], "multiprocess": [13, 93, 128, 129, 132, 136, 172, 333, 338, 339, 437, 457, 458], "multithread": 13, "multivari": 409, "multivariategaussianprior": 419, "multiwavelength": 231, "muon": 508, "muoneff": 508, "mur": [26, 495], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 88, 91, 102, 103, 106, 107, 111, 112, 117, 127, 132, 136, 137, 144, 145, 146, 164, 172, 176, 178, 183, 190, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 303, 304, 318, 336, 386, 391, 392, 396, 402, 403, 406, 415, 416, 417, 418, 420, 462, 468, 474, 489, 497, 498, 502, 504, 505, 506, 512, 513, 524, 526, 540, 552, 602], "mutablemap": 203, "mutablesequ": [92, 100, 253], "mutipl": 424, "mutltipl": 394, "my": [391, 413, 414, 420, 423, 481, 482, 497, 506], "my_custom_model": 506, "my_flux_map": 415, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 413, "mybind": [422, 451], "myconfig": [11, 603], "mycustomgaussianmodel": [414, 506], "mycustomprior": 509, "mycustomspectralmodel": [264, 506], "n": [19, 20, 51, 82, 87, 91, 125, 127, 194, 195, 196, 197, 199, 201, 202, 205, 207, 208, 209, 217, 219, 285, 292, 391, 394, 405, 408, 420, 423, 425, 449, 486, 489, 493, 495, 496, 498, 499, 503, 505, 507, 509, 512, 513, 514, 515, 522, 545, 552, 553, 555, 559, 560, 602, 604, 606], "n_": [103, 110, 299, 305, 536, 604, 605, 606], "n_0": [240, 575], "n_bad": 513, "n_bin": 497, "n_bkg": [294, 298, 605], "n_dof": [125, 127, 538], "n_event": [196, 197, 199, 205, 208, 209, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 404], "n_event_bunch": [104, 109], "n_events_bkg": 404, "n_fit_bin": [477, 490, 497, 505], "n_free_paramet": [134, 292], "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 533, 534], "n_job": [16, 93, 128, 129, 132, 136, 172, 338, 457, 469, 472, 474, 475, 477, 483, 489, 502, 523], "n_jobs_default": [93, 128, 129, 132, 136, 172], "n_model": [72, 76], "n_ob": [471, 481, 490], "n_observ": 603, "n_off": [106, 111, 298, 308, 309, 315, 475, 604, 605], "n_off_posit": 470, "n_off_region": [184, 470], "n_on": [294, 298, 299, 305, 308, 309, 315, 428, 475, 603, 604, 605], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 419, 597], "n_sampl": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "n_scale": 120, "n_sig": [294, 298, 491, 605], "n_sig_matching_signific": [294, 298], "n_sigma": [71, 74, 75, 78, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 292, 294, 298, 311, 313, 462, 472, 483, 489, 496, 497, 498, 523, 526, 538], "n_sigma_asimov": 311, "n_sigma_sensit": [124, 125, 126, 127, 128, 133, 136, 483], "n_sigma_ul": [71, 74, 75, 78, 124, 125, 126, 127, 128, 129, 132, 133, 136, 472, 483, 488, 489, 496, 497, 498, 523, 526, 538], "n_sourc": [45, 530], "n_spatial_ax": 200, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": [489, 493], "nachiketa": [449, 450], "nadarajah": 147, "naima": [254, 390, 408, 409, 410, 411, 414, 434, 461, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 540, 554, 567, 587, 588], "naimamodel": [434, 437, 439], "naimaspectralmodel": [264, 414, 443, 506, 540, 578], "nakashima": 435, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 116, 117, 118, 119, 125, 126, 127, 128, 129, 132, 133, 136, 140, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 177, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 316, 317, 339, 370, 371, 386, 392, 394, 397, 400, 401, 403, 404, 405, 406, 409, 410, 413, 414, 415, 417, 418, 419, 420, 421, 424, 426, 433, 434, 435, 436, 437, 438, 439, 440, 443, 452, 454, 455, 457, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 512, 513, 514, 515, 523, 524, 526, 528, 538, 540, 544, 547, 549, 550, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 605], "name1": 499, "name2": 499, "name_err": [128, 129, 132, 133], "name_scan": [128, 129, 132, 133], "name_substr": [229, 253, 505], "name_ul": [128, 129, 132, 133], "namedtupl": 391, "nameerror": 391, "namespac": [6, 16, 84, 90, 105, 126, 391, 410, 412, 436, 439, 449, 506, 529, 607], "namibia": 515, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 103, 125, 127, 139, 176, 194, 195, 196, 197, 199, 205, 208, 209, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 391, 414, 419, 459, 463, 464, 468, 469, 470, 471, 474, 475, 477, 478, 483, 486, 488, 489, 490, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 509, 523, 524, 526, 540, 578, 587], "nan_to_num": [100, 103, 106, 110, 111, 154, 155, 161, 166, 169, 197, 205, 209, 279], "nansum": [196, 197, 199, 208, 209], "nasa": [58, 60, 61, 62, 64, 65, 101, 153, 201, 411, 581], "nat": 507, "nativ": [87, 91, 202, 403, 408, 443, 503], "natur": [87, 91, 391, 397, 414, 417, 506, 576], "nauroi": [315, 602], "naurois2012": 602, "navarro": [25, 528], "navi": 463, "navig": [451, 453], "naxi": 503, "naxis1": 503, "naxis2": 503, "naxis3": 503, "naxis4": 503, "nbin": [16, 112, 117, 129, 156, 158, 164, 166, 198, 201, 206, 209, 350, 351, 407, 462, 468, 469, 470, 474, 475, 477, 478, 479, 481, 482, 483, 488, 489, 491, 493, 497, 501, 502, 503, 506, 511, 513, 514, 523, 544, 547, 549, 550, 553], "nbin_per_decad": 201, "nbstripout": 399, "ncall": [420, 507], "nchunk": 297, "ncol": [150, 151, 196, 197, 199, 205, 208, 209, 384, 388, 464, 468, 472, 475, 477, 479, 491, 497, 499, 503, 504, 549, 568], "ncp": 494, "nd": [196, 197, 199, 205, 208, 209, 277, 278, 412, 503, 553], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 87, 91, 92, 102, 120, 150, 151, 152, 153, 154, 157, 158, 160, 163, 164, 165, 166, 167, 169, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 212, 213, 217, 218, 219, 220, 222, 229, 237, 255, 256, 282, 293, 294, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 310, 312, 314, 315, 318, 329, 330, 331, 340, 345, 347, 380, 384, 385, 391, 497, 503, 526, 552, 553], "nddata": [434, 437], "nddataarrai": [435, 449, 450], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 288], "ndim": [103, 110, 112, 117, 151, 153, 156, 195, 202, 207, 470, 474, 479, 483, 497, 498, 501, 502, 503, 512, 513, 526, 538, 553], "ndimag": [209, 405], "ndmap": 498, "ndmin": 318, "ne": 403, "nearest": [26, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 196, 197, 199, 201, 205, 208, 209, 330, 445, 452, 454, 503, 538, 540, 552], "nearli": [391, 443, 464], "nebula": [50, 286, 292, 437, 468, 469, 470, 475, 478, 479, 480, 488, 499, 504, 506, 507, 509, 513, 514, 515, 523, 524, 526, 531, 553, 602], "necess": [415, 509], "necessari": [16, 84, 90, 102, 105, 126, 394, 401, 406, 417, 421, 445, 464, 468, 470, 471, 475, 481, 482, 486, 489, 490, 498, 502, 503, 505, 506, 524, 536, 537, 540, 545], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 406, 474], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 102, 103, 105, 106, 110, 111, 124, 126, 127, 154, 155, 166, 168, 169, 204, 221, 285, 286, 318, 390, 391, 392, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 420, 422, 423, 428, 429, 432, 433, 434, 451, 453, 458, 463, 464, 469, 471, 472, 474, 475, 479, 481, 482, 489, 490, 493, 494, 499, 501, 503, 504, 505, 506, 507, 508, 512, 514, 523, 526, 536, 549, 551, 552, 603, 607], "need_upd": 443, "neg": [19, 20, 26, 87, 91, 125, 127, 128, 129, 132, 133, 136, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 281, 282, 294, 298, 392, 440, 458, 459, 509, 538, 605, 606], "neglect": [130, 182, 462, 502, 538, 606], "neighbor": [157, 165, 167, 445, 452], "neighbour": [330, 562], "neither": [96, 182, 408, 416], "neldermead": 214, "nep": [396, 416], "neraest": 197, "nest": [15, 195, 196, 197, 221, 222, 254, 292, 318, 358, 395, 457, 461, 499, 500, 510, 513, 518, 551, 605], "nested_model": 254, "nested_sampling_crab": [461, 507, 510], "nestedsampl": 420, "net": [87, 91, 468], "neutrino": [52, 391], "neutron": 36, "never": [388, 390, 391, 394, 397, 401, 405, 413, 420, 507, 514], "nevertheless": [424, 426], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 102, 103, 105, 106, 110, 111, 125, 126, 127, 128, 132, 134, 136, 139, 148, 150, 151, 152, 153, 156, 158, 160, 163, 168, 179, 180, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 229, 253, 269, 279, 306, 318, 342, 369, 376, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 444, 447, 477, 493, 494, 496, 497, 503, 505, 506, 507, 537, 538, 540, 587, 602], "new_attribut": 391, "new_axi": 148, "new_dataset_nam": [229, 253], "new_datasets_nam": [19, 20, 26, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284], "new_ev": 540, "new_flux_map": 415, "new_funct": 391, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 587, "new_nam": [87, 91, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209], "new_ob": [88, 540], "new_observ": 92, "newaxi": 552, "newer": [408, 422, 433, 452], "newli": [437, 438, 439], "next": [87, 91, 103, 391, 392, 396, 407, 411, 412, 416, 419, 421, 449, 450, 462, 477, 480, 481, 483, 486, 496, 497, 498, 502, 503, 506, 507, 508, 509, 513], "nfcn": 499, "nfev": [102, 214, 215, 216, 222, 464, 466, 468, 469, 470, 477, 478, 479, 491, 493, 498, 499, 513, 523, 524], "nfw": [25, 27, 528], "nfwprofil": 495, "ni": 391, "nice": [391, 396, 402, 408, 410, 418, 435, 443, 472, 477, 496, 507, 603], "nicer": [391, 428, 526], "nieto": [440, 443, 445, 446, 454, 456, 457, 458, 459], "nieva": [454, 459], "night": [406, 489], "nightli": [424, 488], "nightwise_lc": 488, "nigro": [440, 443, 445, 451, 452, 454, 457], "niter": [125, 127, 136, 420, 472, 507], "nlxpvmi1": 502, "nmcid": 446, "nn": 514, "noah": [419, 458], "node": [19, 20, 26, 166, 169, 198, 201, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 255, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 434, 499, 501, 503, 512, 513, 561, 579], "node_typ": [158, 198, 201, 206, 481, 482, 501, 513], "noeth": [440, 441], "nois": [297, 303, 409, 602], "noisi": 512, "non": [16, 84, 87, 90, 91, 100, 103, 105, 106, 110, 111, 116, 119, 125, 126, 127, 134, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 182, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 279, 311, 313, 318, 381, 382, 384, 386, 397, 402, 405, 409, 411, 412, 418, 420, 433, 437, 438, 439, 443, 451, 454, 455, 457, 458, 459, 464, 493, 507, 513, 518, 519, 536, 540, 551, 552, 578, 602], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 118, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 287, 292, 294, 297, 298, 315, 316, 318, 321, 326, 330, 338, 339, 340, 342, 345, 346, 347, 348, 357, 360, 366, 374, 378, 379, 380, 384, 385, 386, 387, 388, 391, 403, 405, 408, 415, 418, 419, 420, 445, 456, 457, 459, 463, 464, 466, 468, 469, 471, 472, 477, 478, 479, 481, 482, 483, 486, 489, 490, 491, 493, 495, 496, 497, 498, 502, 503, 505, 506, 507, 509, 513, 523, 528, 536, 552, 558, 559, 560, 603], "nonetyp": [84, 90, 105, 126], "nonposit": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "nonposx": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 443], "nonstopmod": 392, "nonzero": 39, "nooverlaperror": 456, "noqa": [19, 20, 153, 189, 200, 201, 207, 388], "nor": [96, 182, 401, 412, 416, 421], "norm": [19, 20, 26, 124, 125, 127, 128, 129, 132, 133, 136, 138, 147, 173, 223, 224, 227, 228, 231, 233, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 247, 250, 254, 255, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 384, 402, 413, 415, 419, 437, 438, 440, 443, 458, 459, 461, 468, 472, 474, 475, 477, 478, 480, 481, 482, 483, 486, 489, 490, 491, 495, 496, 497, 498, 499, 513, 523, 524, 526, 528, 538, 540, 547, 554, 556, 560, 566, 567, 568, 587, 588, 597, 605, 608], "norm_0": [561, 579], "norm_1": [561, 579], "norm_2": [561, 579], "norm_3": [561, 579], "norm_4": 579, "norm_5": 579, "norm_err": [124, 125, 127, 129, 136, 415, 472, 483, 489, 497, 498, 538], "norm_errn": [125, 127, 489, 496, 498, 526, 538], "norm_errp": [125, 127, 489, 496, 498, 526, 538], "norm_only_chang": 455, "norm_prior": 419, "norm_scan": [125, 415, 468, 469, 498, 538], "norm_sensit": [125, 127, 489, 498], "norm_ul": [125, 127, 415, 483, 489, 496, 497, 498, 526, 538], "norma": [33, 38], "normal": [42, 102, 103, 106, 110, 111, 128, 129, 130, 132, 143, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 173, 196, 197, 199, 205, 206, 208, 209, 237, 255, 256, 259, 279, 281, 285, 295, 318, 381, 382, 391, 392, 394, 396, 397, 401, 402, 405, 409, 415, 432, 436, 445, 459, 463, 475, 481, 488, 489, 491, 502, 503, 504, 505, 506, 513, 524, 526, 552, 558, 559, 560, 563, 564, 565, 587, 602, 604, 605, 608], "normalis": [67, 80, 124, 125, 127, 132, 150, 151, 152, 153, 156, 158, 160, 163, 164, 168, 173, 193, 196, 197, 199, 205, 208, 209, 255, 256, 269, 389, 469, 472, 474, 475, 490, 498, 504, 505, 506, 507, 513, 523], "normed_templ": 506, "normspectralmodel": [229, 253, 414, 440, 456, 458, 506, 547], "north": [230, 239, 242, 558], "notabl": 507, "notat": [440, 542, 544, 550, 606], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 102, 103, 104, 105, 106, 109, 110, 111, 120, 124, 126, 127, 129, 132, 136, 153, 158, 166, 168, 178, 189, 207, 211, 214, 217, 221, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 303, 304, 318, 339, 366, 382, 388, 390, 393, 394, 396, 399, 404, 405, 408, 411, 415, 416, 417, 419, 420, 421, 422, 425, 431, 433, 453, 455, 457, 459, 462, 463, 464, 469, 470, 472, 474, 477, 480, 482, 489, 490, 491, 493, 494, 495, 496, 497, 501, 502, 503, 504, 505, 506, 507, 509, 512, 513, 514, 536, 538, 540, 545, 547, 552, 553, 563, 564, 576, 605, 606, 607], "notebook": [87, 91, 355, 394, 395, 400, 401, 405, 406, 407, 408, 409, 411, 421, 422, 424, 425, 426, 429, 432, 433, 434, 435, 437, 438, 439, 441, 443, 445, 449, 450, 451, 452, 453, 458, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 521, 523, 524, 526, 539, 540, 541, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603], "noteworthi": 221, "noth": [342, 408, 509], "notic": [397, 499], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "notion": 420, "nov": [398, 403, 408, 409, 411, 415, 430, 454], "novemb": [400, 430, 440, 441, 442, 443], "now": [16, 82, 84, 88, 90, 99, 101, 105, 125, 126, 127, 193, 206, 254, 262, 391, 394, 396, 397, 398, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 415, 417, 418, 419, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 468, 469, 470, 471, 474, 475, 477, 478, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 497, 499, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 523, 524, 526, 537, 538, 549, 590, 594, 595, 596, 603, 605, 606, 607], "np": [83, 87, 91, 103, 106, 110, 111, 112, 117, 120, 124, 127, 136, 155, 196, 197, 199, 205, 208, 209, 214, 285, 391, 392, 402, 403, 406, 414, 415, 419, 420, 428, 454, 459, 462, 471, 472, 475, 481, 483, 486, 489, 490, 491, 493, 494, 495, 496, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 532, 533, 534, 538, 540, 547, 552, 553, 558, 559, 561, 587, 596, 603], "npanel": [378, 608], "npix": [195, 204, 207, 208, 209, 468, 479, 501, 513, 549, 553, 557, 561], "npix_max": 195, "npoint": [297, 499], "npred": [103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 134, 136, 279, 300, 314, 402, 403, 404, 413, 415, 431, 433, 440, 443, 449, 451, 459, 472, 481, 483, 489, 496, 497, 498, 509, 513, 536, 538, 605], "npred_background": [103, 106, 110, 111, 125, 127, 440, 470, 471, 483, 497, 538, 605], "npred_background_min": 149, "npred_excess": [124, 125, 127, 129, 136, 138, 147, 472, 475, 483, 489, 491, 498, 538], "npred_excess_err": [125, 127], "npred_excess_errn": [125, 127], "npred_excess_errp": [125, 127], "npred_excess_ref": [125, 127], "npred_excess_ul": [125, 127], "npred_min": 149, "npred_off": [106, 111, 605], "npred_sig": [103, 106, 110, 111, 403], "npred_sign": [103, 106, 110, 111, 387, 443, 457, 497, 605], "npred_signal_min": 149, "npred_sourc": 497, "nrow": [464, 468, 499, 568], "nside": [195, 196, 197, 454, 513, 551], "nside2resol": 197, "nside_til": [195, 197], "nsou": 472, "nstep": [221, 406], "nu": [19, 26], "nu_e": [26, 495], "nu_mu": [26, 495], "nu_tau": [26, 495], "nuclei": 27, "nuisanc": [468, 499, 602, 606], "null": [125, 127, 128, 129, 132, 133, 134, 292, 294, 298, 459, 469, 474, 475, 477, 480, 498, 506, 523, 538, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 605], "null_valu": [133, 134, 292, 483], "nullabl": [87, 91], "num": 83, "numba": 408, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 101, 103, 104, 106, 109, 110, 111, 113, 114, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 173, 176, 179, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 283, 288, 292, 294, 297, 298, 311, 312, 313, 318, 336, 338, 339, 340, 341, 342, 345, 346, 347, 348, 350, 351, 378, 384, 392, 395, 396, 397, 400, 402, 403, 404, 405, 406, 410, 412, 415, 417, 418, 420, 421, 428, 433, 443, 445, 446, 447, 452, 453, 454, 457, 458, 459, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 479, 480, 481, 482, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 502, 503, 504, 506, 507, 508, 512, 513, 514, 515, 523, 524, 526, 530, 536, 538, 540, 547, 549, 552, 553, 602, 603, 604, 605, 606], "number_of_column": [87, 91], "number_param": 212, "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 83, 87, 91, 127, 201, 217, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 283, 318, 390, 391, 404, 409, 425, 443, 462, 471, 474, 477, 479, 486, 490, 503, 512], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 102, 112, 117, 120, 127, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 167, 168, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 211, 212, 214, 217, 218, 219, 220, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 280, 281, 294, 298, 318, 342, 347, 385, 390, 391, 392, 394, 398, 402, 404, 408, 409, 410, 417, 419, 428, 429, 436, 437, 440, 448, 449, 450, 452, 454, 455, 456, 458, 459, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 523, 524, 526, 532, 533, 534, 538, 540, 552, 553, 558, 559, 561, 587, 596], "numpoint": [214, 499], "numpy121": 394, "nupeak_ob": 526, "nutshel": 607, "n\u00f6the": [443, 445, 446], "o": [67, 82, 87, 91, 102, 203, 229, 253, 391, 400, 405, 408, 412, 415, 423, 424, 426, 435, 443, 446, 449, 450, 451, 457, 462, 464, 468, 472, 479, 488, 489, 490, 493, 494, 503, 508, 509, 512, 602, 603], "oa_nqukw": 471, "ob": [40, 82, 83, 88, 89, 91, 92, 96, 166, 176, 316, 317, 403, 404, 407, 408, 413, 428, 446, 447, 456, 462, 464, 468, 471, 472, 479, 481, 486, 489, 490, 491, 493, 502, 508, 512, 513, 514, 515, 521, 524, 537, 540, 545, 547, 549, 550], "obei": 552, "obj": [16, 84, 90, 105, 126, 470, 493], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 102, 103, 104, 105, 106, 110, 111, 124, 125, 126, 127, 130, 131, 132, 134, 136, 139, 140, 141, 142, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 180, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 294, 298, 318, 322, 326, 327, 330, 338, 340, 342, 348, 351, 365, 366, 367, 368, 373, 378, 384, 386, 387, 388, 397, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 417, 418, 420, 424, 428, 434, 435, 437, 438, 439, 440, 443, 445, 450, 451, 452, 454, 457, 458, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 478, 480, 483, 486, 488, 489, 490, 493, 494, 497, 499, 502, 503, 504, 505, 506, 507, 509, 512, 513, 514, 515, 523, 524, 526, 530, 535, 536, 537, 538, 546, 549, 551, 552, 553, 587, 600, 602, 603, 607], "obs2": 540, "obs_clust": [92, 508], "obs_col": 479, "obs_con": [16, 469, 474, 475, 477, 523], "obs_copi": 88, "obs_fil": [16, 469, 474, 475, 477, 523], "obs_filenam": 514, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 149, 214, 316, 317, 401, 403, 413, 418, 428, 464, 468, 469, 470, 471, 474, 475, 477, 478, 479, 481, 482, 488, 489, 490, 493, 499, 502, 508, 512, 514, 515, 521, 523, 524, 549], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [90, 105, 418], "obs_list": [451, 453], "obs_list_vela": 491, "obs_mod": 95, "obs_model": 463, "obs_muoneff": 508, "obs_po": [41, 321], "obs_tabl": [82, 91, 96, 316, 317, 445, 479, 481, 489, 493, 502, 508, 512, 514, 515, 521, 524, 549], "obs_table_filenam": 82, "obs_tim": [16, 469, 474, 475, 477, 523], "obs_time_src": 502, "obs_zenith": 508, "obscor": 458, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 118, 166, 171, 172, 173, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 228, 231, 236, 241, 243, 244, 245, 261, 268, 280, 283, 299, 305, 315, 317, 326, 347, 395, 397, 403, 404, 405, 406, 407, 411, 413, 415, 418, 424, 433, 437, 438, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 461, 462, 464, 470, 471, 474, 475, 477, 478, 486, 490, 491, 493, 494, 499, 500, 507, 509, 510, 511, 512, 514, 515, 518, 521, 528, 536, 537, 540, 543, 545, 547, 549, 550, 578, 602, 603, 604, 605], "observation_clust": [461, 508, 510], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 452, "observationcta": 401, "observationeventsampl": 458, "observationfilt": [88, 401, 406, 432, 453], "observationlist": [401, 453], "observationmetadata": 418, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 458, "observationseventssampl": 459, "observationssummari": 437, "observationstat": [432, 437], "observationt": [82, 404, 405, 454, 508, 514, 524], "observationtablecheck": 452, "observationtablesummari": 449, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 404, 418, 421, 424, 444, 512, 514, 515, 518, 535, 540, 545], "observatory_earth_loc": [83, 88, 459], "observatory_loc": [418, 445, 462, 471, 481, 482, 486, 490], "obsinfometadata": [90, 105], "obstim": [85, 94, 607], "obtain": [85, 103, 106, 109, 111, 125, 127, 140, 302, 401, 406, 408, 409, 415, 453, 459, 468, 469, 470, 472, 475, 481, 482, 489, 493, 494, 499, 503, 504, 509, 523, 526, 536, 540, 544, 545, 602, 604, 605], "obviou": [403, 410, 411, 412, 418], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 528], "occur": [196, 197, 199, 208, 209, 348, 391, 411, 412, 416, 513], "occurr": [92, 100, 200, 218, 220, 229, 253], "ockcgyfi": 493, "oct": [399, 401, 402, 406, 408, 411, 417], "octob": 400, "odd": [207, 209], "odd_npix": [207, 209], "odot": [28, 35, 39, 40, 52], "off": [103, 104, 106, 108, 109, 110, 111, 124, 125, 127, 171, 177, 178, 181, 184, 193, 298, 315, 388, 389, 394, 397, 403, 405, 406, 407, 437, 443, 445, 447, 457, 459, 462, 463, 464, 469, 470, 475, 479, 488, 489, 491, 493, 497, 499, 502, 507, 509, 511, 536, 545, 549, 550, 602, 604, 605, 606], "off_2": [106, 111], "off_ev": 491, "off_patch": 491, "off_phas": [177, 491], "off_phase_rang": 491, "offdatabackgroundmak": 448, "offer": [125, 394, 402, 417, 418, 424, 425, 452, 470, 498, 499, 502, 506, 540], "offici": [417, 541, 603], "offlin": [87, 91], "offset": [83, 96, 113, 114, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 172, 176, 182, 183, 188, 191, 196, 197, 199, 201, 205, 208, 209, 391, 397, 405, 428, 437, 447, 449, 451, 456, 457, 458, 459, 462, 470, 471, 474, 477, 478, 479, 486, 491, 501, 502, 508, 512, 524, 537, 545, 547, 550], "offset2": 83, "offset_axi": [156, 157, 158], "offset_band": 83, "offset_from_median": 83, "offset_index": 163, "offset_max": [16, 83, 172, 182, 188, 191, 469, 474, 475, 477, 479, 486, 491, 502, 523, 524, 547, 550], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 140, 286, 381, 382, 391, 396, 405, 406, 407, 409, 450, 462, 464, 469, 474, 475, 478, 479, 486, 493, 497, 499, 502, 504, 523, 524, 536, 540, 602], "ogip": [95, 107, 108, 111, 153, 198, 200, 201, 204, 205, 206, 403, 406, 450, 463, 468, 478, 536, 544, 553], "ogip_column": 205, "ogipdatasetread": 111, "ogipdatasetwrit": [111, 456, 458], "ok": [391, 405, 499, 507], "old": [200, 376, 391, 396, 399, 403, 407, 408, 434, 435, 450, 451, 452, 494], "old_attribut": 391, "older": [398, 408, 425, 450, 496], "oldest": 411, "olga": [448, 449], "olivera": [440, 443, 445, 446, 454, 456, 457, 458, 459], "omega": [19, 20, 23, 268, 285, 512, 558, 596], "omit": [136, 392, 477, 512, 603], "omp": 411, "on_circl": 549, "on_ellipse_annulu": 549, "on_ev": 491, "on_patch": 491, "on_phas": [177, 491], "on_phase_rang": 491, "on_posit": 193, "on_radii": 462, "on_radiu": [479, 491], "on_rectangl": 549, "on_region": [16, 103, 106, 179, 462, 464, 468, 469, 470, 471, 474, 475, 477, 479, 481, 482, 488, 489, 491, 493, 497, 523, 549], "on_region_radiu": [462, 468, 471, 481, 482, 489, 493], "onc": [87, 91, 103, 134, 207, 391, 394, 396, 401, 402, 405, 406, 407, 411, 412, 413, 415, 416, 420, 421, 422, 423, 424, 426, 470, 489, 491, 502, 505, 507, 514, 518, 537, 540, 603], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 77, 84, 87, 89, 90, 91, 92, 93, 95, 99, 102, 103, 105, 106, 109, 110, 111, 114, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 139, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 178, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 288, 292, 294, 297, 298, 326, 331, 347, 362, 378, 384, 385, 391, 392, 393, 394, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 451, 454, 455, 457, 459, 462, 464, 468, 469, 470, 474, 477, 481, 488, 490, 491, 494, 496, 497, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 523, 524, 526, 535, 536, 537, 538, 540, 545, 547, 549, 552, 553, 560, 600, 601, 602, 603, 604, 605, 606, 607], "ones": [87, 91, 120, 124, 128, 132, 136, 153, 200, 395, 399, 403, 405, 408, 411, 419, 425, 428, 490, 494, 501, 503, 528, 547, 602, 603], "ones_lik": [491, 547], "ongo": [394, 397, 398, 422, 507, 545], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 124, 126, 127, 128, 129, 132, 136, 137, 139, 146, 147, 154, 155, 159, 161, 166, 169, 172, 176, 178, 183, 193, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 253, 254, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 279, 280, 281, 294, 298, 311, 313, 318, 338, 366, 388, 391, 392, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 425, 433, 435, 439, 443, 445, 446, 451, 455, 457, 458, 459, 464, 466, 468, 469, 470, 474, 475, 477, 478, 480, 481, 482, 483, 488, 489, 490, 491, 493, 496, 497, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 524, 528, 536, 538, 544, 547, 550, 553, 598, 602, 603, 604, 605], "onlin": [87, 91, 392, 396, 399, 411, 428], "onlinelibrari": 138, "onoff": [446, 536], "onserv": 93, "ontim": [189, 401, 481, 497], "onto": [106, 111, 196, 197, 199, 205, 207, 208, 209, 378, 397, 524, 536, 540, 552, 601], "oo": 417, "op": 407, "opac": 231, "open": [66, 87, 91, 391, 392, 394, 396, 402, 405, 408, 410, 411, 415, 416, 417, 421, 423, 424, 426, 428, 429, 450, 469, 478, 503, 512, 514, 515, 523, 535, 602, 603], "openastronomi": 451, "oper": [87, 91, 195, 207, 224, 391, 397, 402, 405, 438, 440, 443, 452, 453, 457, 463, 497, 505, 506, 552, 553, 568, 570, 574, 577, 579, 582, 587], "opinion": [396, 603], "oppos": [494, 578, 603], "opposit": [196, 197, 420], "opt": [89, 392, 496, 568, 578], "opt_method": 499, "optic": [231, 405, 463, 568], "optim": [19, 20, 26, 102, 129, 133, 136, 147, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 384, 390, 391, 400, 403, 404, 413, 415, 464, 466, 468, 469, 470, 471, 472, 477, 478, 479, 491, 493, 494, 498, 499, 507, 509, 513, 523, 524], "optimis": [19, 20, 214, 215, 216, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 405, 407, 409, 452, 459, 538, 600], "optimize_opt": [214, 477, 486, 498, 499, 524], "optimize_result": [214, 215, 457], "optimizeresult": [102, 214, 215, 464, 466, 468, 469, 470, 477, 478, 479, 491, 493, 498, 499, 513, 523, 524], "optin": 417, "optinon": [110, 111], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 297, 298, 302, 303, 304, 306, 311, 312, 313, 315, 316, 318, 329, 339, 342, 345, 346, 347, 348, 350, 351, 354, 359, 360, 362, 373, 374, 378, 379, 380, 384, 385, 386, 387, 388, 391, 392, 394, 396, 397, 399, 400, 402, 403, 405, 407, 409, 411, 414, 418, 420, 422, 423, 424, 425, 426, 432, 433, 434, 437, 439, 440, 443, 445, 449, 451, 452, 453, 454, 456, 457, 458, 459, 472, 477, 486, 488, 490, 496, 497, 502, 503, 504, 506, 508, 512, 513, 523, 524, 536, 538, 540, 552, 553, 598, 602, 603], "option1": 392, "option2": 392, "option3": 392, "option_context": [87, 91], "optionali": 561, "optout": 417, "optpars": 396, "oral": 417, "orang": [392, 468, 477, 483, 488, 491, 495, 498, 509, 549], "orchestr": [397, 401, 403, 407, 469, 523, 524], "orcid": 417, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 103, 106, 127, 139, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 166, 168, 169, 172, 176, 183, 186, 187, 192, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 208, 209, 279, 292, 318, 388, 391, 392, 397, 402, 403, 405, 406, 407, 408, 415, 416, 417, 419, 420, 433, 434, 435, 436, 437, 438, 439, 440, 443, 459, 468, 469, 470, 472, 477, 478, 481, 491, 496, 499, 501, 502, 503, 506, 507, 514, 523, 524, 526, 545, 551, 552, 553, 603, 606], "ordereddict": [397, 408, 436], "ordinari": 526, "org": [11, 34, 64, 65, 83, 87, 88, 91, 182, 214, 259, 260, 274, 275, 311, 313, 318, 394, 399, 408, 411, 416, 417, 421, 423, 424, 426, 430, 449, 451, 462, 471, 474, 477, 478, 479, 486, 490, 495, 496, 499, 512, 585, 586, 603], "organ": [395, 411, 416, 417, 443, 514, 515, 537, 552], "organis": [398, 407, 410, 417, 451], "orient": [151, 159, 160, 391, 402], "origin": [16, 36, 37, 41, 84, 87, 90, 91, 103, 105, 110, 125, 126, 127, 197, 209, 277, 279, 281, 401, 405, 417, 418, 421, 449, 469, 474, 475, 477, 489, 494, 503, 506, 513, 523, 545, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 606, 607], "orthogon": 351, "orthonorm": 147, "oscar": [451, 452], "oshmld": 506, "osx": 439, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 103, 105, 106, 110, 111, 125, 126, 128, 132, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 178, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 218, 220, 221, 279, 293, 318, 331, 361, 380, 385, 390, 394, 396, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 423, 429, 451, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 536, 537, 538, 540, 545, 547, 549, 553, 570, 600, 601, 603, 607], "other_id": 464, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 103, 105, 110, 126, 164, 203, 207, 209, 211, 217, 218, 219, 220, 229, 253, 284, 318, 384, 404, 414, 417, 459, 505, 506, 513, 569], "our": [391, 394, 400, 405, 407, 408, 410, 413, 414, 415, 417, 433, 434, 450, 459, 462, 464, 468, 469, 470, 474, 475, 477, 478, 479, 482, 489, 490, 491, 493, 503, 504, 507, 509, 514, 523, 524, 603], "ourself": 526, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 102, 127, 196, 197, 199, 205, 208, 209, 253, 266, 267, 390, 391, 392, 394, 396, 399, 401, 403, 405, 407, 409, 410, 411, 416, 420, 421, 428, 429, 431, 437, 451, 466, 470, 474, 475, 493, 503, 504, 507, 512, 513, 523, 526, 528, 529, 549, 563, 564, 600, 603, 607], "out_fold": 407, "outcom": [396, 405], "outdat": [408, 411], "outdir": [16, 82, 93, 469, 474, 475, 477, 523], "outer": [43, 44, 52, 53, 129, 171, 266, 564], "outer_height": [549, 553], "outer_width": [549, 553], "outfil": 391, "outflow": 206, "outlin": [103, 106, 110, 111, 225, 226, 230, 239, 242, 257, 266, 267, 281, 394, 396, 399, 400, 401, 402, 405, 411, 414], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 105, 118, 124, 126, 136, 144, 145, 153, 158, 196, 197, 199, 205, 208, 209, 215, 221, 222, 229, 244, 253, 297, 347, 392, 399, 401, 404, 407, 408, 412, 415, 418, 432, 447, 453, 456, 457, 459, 477, 481, 482, 486, 490, 498, 502, 503, 523, 524, 538, 540, 603, 604], "output_map": [196, 197, 199, 205, 208, 209], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 103, 106, 110, 111, 116, 119, 153, 173, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 217, 219, 231, 282, 331, 379, 391, 405, 406, 407, 443, 475, 498, 499, 502, 503, 504, 540, 547, 560, 587, 602], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 102, 103, 106, 110, 111, 128, 136, 140, 153, 154, 164, 166, 169, 176, 183, 186, 187, 189, 190, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 229, 253, 285, 294, 298, 302, 329, 330, 343, 382, 391, 392, 396, 399, 400, 401, 404, 405, 406, 411, 414, 418, 420, 423, 425, 443, 464, 468, 472, 475, 477, 480, 481, 490, 496, 497, 498, 499, 502, 503, 506, 507, 524, 526, 538, 540, 544, 602, 604, 605], "overal": [399, 405, 459, 468], "overcom": [420, 504, 507], "overestim": [538, 605], "overflow": [206, 470, 490, 493, 591], "overkil": 490, "overlai": [469, 498], "overlaid": [103, 106, 110, 111, 468, 469], "overlap": [86, 91, 116, 119, 132, 184, 201, 206, 388, 406, 468], "overlap_ok": 86, "overlin": [103, 110, 536], "overload": 443, "overplot": [496, 535], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 358, 402, 468, 470, 479, 483], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 204, 388], "oversampl": [104, 109, 164, 166, 169, 176, 183, 189, 195, 196, 197, 199, 204, 205, 208, 209, 226, 230, 239, 242, 243, 244, 255, 266, 267, 269, 271, 277, 281, 283, 288, 434, 502], "oversample_energy_factor": [104, 109, 482], "oversampling_factor": [197, 207, 225, 226, 230, 239, 242, 243, 244, 255, 257, 266, 267, 269, 271, 277, 281, 283], "overview": [6, 394, 420, 422, 437, 438, 440, 443, 461, 491, 498, 503, 506, 507, 518, 525, 526, 527, 540, 541, 554, 604], "overwrit": [11, 15, 16, 19, 20, 26, 82, 88, 93, 100, 102, 103, 106, 108, 110, 111, 125, 127, 154, 155, 161, 166, 169, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 209, 215, 217, 221, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 281, 338, 360, 415, 452, 454, 459, 468, 469, 477, 478, 481, 482, 483, 501, 503, 504, 505, 506, 512, 513, 521, 523, 524, 536, 553, 565, 603], "overwrite_templ": [215, 229, 253], "overwritten": [166, 169, 330], "owen": [431, 444], "own": [87, 91, 99, 125, 127, 203, 205, 397, 407, 413, 417, 443, 462, 481, 506, 513, 524, 540, 552, 553], "owotai09": 493, "p": [38, 51, 54, 87, 91, 110, 111, 131, 301, 315, 391, 443, 469, 480, 495, 499, 523, 540, 545, 546, 605], "p0_birth": 43, "p90": 48, "p_": [542, 544, 545, 546], "p_0": [51, 196, 199, 205, 208, 209, 532], "p_dot": [51, 54], "p_i": [196, 199, 205, 208, 209], "p_lat": [196, 199, 205, 208, 209], "p_lon": [196, 199, 205, 208, 209], "p_mean": 42, "p_n": [196, 199, 205, 208, 209], "p_stdv": 42, "p_valu": [294, 298, 499, 603, 605], "pace": [399, 400], "packag": [11, 144, 318, 355, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 405, 408, 409, 411, 416, 417, 418, 420, 421, 423, 424, 426, 427, 428, 429, 430, 431, 433, 436, 437, 439, 440, 443, 446, 447, 448, 449, 450, 451, 452, 454, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 536, 539, 540, 541, 548, 553, 565, 576, 591, 603, 607], "pacman": 448, "paczynski": [36, 37], "paczynski1990": [28, 29, 30, 35, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 103, 106, 110, 111, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 176, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 379, 440, 443], "pad_width": [103, 110, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209], "pad_with": [196, 197, 199, 205, 208, 209], "page": [6, 87, 91, 214, 299, 305, 315, 392, 394, 396, 403, 405, 408, 411, 417, 420, 421, 422, 424, 425, 429, 437, 438, 443, 446, 447, 450, 451, 452, 453, 459, 499, 503, 515, 516, 518, 538, 540, 551, 553, 604, 605, 607], "pain": [391, 394, 398], "pair": [16, 84, 90, 103, 105, 106, 110, 111, 125, 126, 127, 140, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 407, 463], "panda": [87, 91, 390, 408, 452, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526], "panel": [88, 102, 103, 106, 110, 111, 378, 446, 481, 499], "panel_fov": 378, "panni": 443, "papadopoulo": [443, 445], "paper": [57, 59, 63, 72, 74, 128, 182, 411, 417, 420, 452, 489, 494, 496, 502, 507, 514, 528], "papermil": 407, "par": [402, 414, 419, 420, 463, 493, 499, 509, 512], "par_000_amplitud": 499, "par_001_alpha": 499, "par_002_beta": 499, "par_00x_": 402, "par_1": [214, 499], "par_2": [214, 499], "par_alpha": [214, 499], "par_beta": [214, 499], "par_box": 91, "par_nam": [229, 237, 253, 269, 279], "par_to_v": 512, "par_typ": [229, 237, 253, 269, 279], "parabol": [293, 331, 499], "parabola": [246, 247, 461, 478, 499, 554, 567, 588], "paragraph": 396, "parallel": [93, 128, 129, 132, 136, 172, 333, 334, 335, 336, 337, 338, 339, 394, 408, 422, 445, 457, 458, 459, 472, 497], "parallel_backend": [93, 128, 129, 132, 136, 172, 338, 483], "parallelbackendenum": 333, "parallelis": 420, "parallelmixin": [93, 128, 136, 172], "param": [16, 84, 90, 105, 126, 231, 282, 384, 407, 438, 499], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 499, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 324, 325, 327, 329, 330, 331, 332, 338, 339, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 400, 403, 404, 406, 407, 409, 410, 413, 415, 417, 429, 432, 433, 434, 435, 436, 437, 439, 440, 443, 445, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 466, 468, 470, 471, 472, 474, 475, 477, 478, 479, 481, 482, 483, 486, 488, 490, 491, 493, 495, 496, 497, 498, 501, 502, 507, 508, 509, 512, 513, 524, 526, 528, 536, 538, 539, 540, 547, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606], "parameter": 506, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_matching_signific": 134, "parameter_nam": 392, "parameter_name_scan": 214, "parameter_typ": 392, "parameterestim": [121, 439, 458], "parameteris": [542, 544], "parameters_list": [218, 220], "parameters_nam": [229, 253], "parameters_stat_sum": 419, "parameters_unique_nam": [19, 20, 26, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 499], "parametersensitivityestim": 121, "parametr": [16, 27, 84, 90, 102, 105, 126, 156, 157, 162, 165, 167, 246, 247, 266, 403, 407, 414, 433, 440, 443, 470, 472, 506, 512, 563, 564, 576], "parametricpsf": [157, 165, 443, 445], "parametris": [165, 414, 437, 544, 546, 558, 559, 560, 561, 569, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 590, 591, 592, 593, 594, 595, 596, 597, 598], "paramnam": [420, 507], "parent": [16, 84, 90, 105, 120, 124, 126, 128, 132, 136, 207, 391, 401, 418, 489, 498, 538, 578], "parenthes": [402, 408, 455, 457], "parfiv": [408, 436], "park": 35, "parnam": 509, "pars": [16, 84, 85, 90, 105, 126, 195, 204, 392, 405, 459, 462, 471, 474, 477, 479, 486, 490, 504, 512, 603], "parse_arg": 603, "parse_fil": [16, 84, 90, 105, 126], "parse_obj": [16, 84, 90, 105, 126], "parse_raw": [16, 84, 90, 105, 126], "parseabl": 318, "parser": 603, "part": [102, 391, 394, 397, 400, 402, 404, 405, 406, 407, 409, 410, 411, 416, 417, 420, 424, 426, 433, 437, 438, 439, 447, 452, 457, 458, 462, 464, 468, 477, 486, 496, 497, 503, 504, 507, 524, 526, 540, 545, 549], "parti": 396, "partial": [91, 103, 106, 154, 155, 161, 166, 169, 172, 195, 207, 209, 279, 405, 409, 438, 452, 551], "partial_overlap": 91, "particip": [396, 400, 411], "particl": [17, 19, 20, 21, 22, 24, 25, 26, 27, 254, 285, 439, 528, 578], "particle_distribut": [254, 578], "particular": [87, 91, 124, 136, 391, 397, 404, 406, 413, 415, 416, 418, 420, 440, 443, 454, 455, 464, 468, 469, 470, 471, 474, 478, 481, 489, 490, 494, 499, 502, 505, 507, 512, 514, 515, 523, 524, 537, 540, 547, 549, 553, 605], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [394, 400, 401, 405, 411, 412], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 102, 103, 105, 106, 109, 110, 111, 126, 127, 130, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 181, 189, 194, 195, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 212, 213, 214, 216, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 293, 297, 318, 330, 338, 339, 340, 345, 346, 347, 348, 378, 379, 384, 386, 387, 391, 394, 401, 403, 404, 405, 406, 418, 439, 443, 445, 457, 458, 459, 464, 466, 468, 469, 477, 478, 482, 488, 489, 494, 496, 497, 499, 501, 502, 503, 504, 506, 508, 512, 523, 524, 526, 540, 551, 552, 553, 558, 559, 603, 607], "pass4": 514, "pass8_edisp_usag": 101, "passkwarg": [470, 493], "past": [391, 396, 399, 407, 408, 411, 412, 414, 417, 419, 428, 449, 451, 452, 503, 603], "patch": [388, 391, 398, 417, 446, 455, 468, 470, 479, 483, 491], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 101, 105, 107, 108, 111, 126, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 170, 196, 197, 199, 204, 205, 208, 209, 215, 229, 244, 253, 280, 326, 355, 356, 357, 360, 391, 394, 420, 427, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 538, 597, 598, 602, 603], "path_effect": [204, 229, 253], "path_to_notebook": 391, "path_to_script": 391, "patheffect": [204, 229, 253], "pathlib": [16, 82, 83, 86, 87, 91, 153, 205, 215, 229, 253, 356, 468, 469, 477, 478, 481, 482, 512, 523, 524], "pathpatch": 483, "pattern": [391, 397, 405], "paula": 458, "paulakx": 458, "paz": [444, 447, 448], "pbar": 540, "pc": [46, 47, 50, 52, 533, 534], "pcolormesh": [83, 127, 150, 151, 153, 156, 157, 158, 163, 165, 167, 168, 450, 456, 499, 501], "pd": [87, 91], "pdf": [153, 157, 182, 259, 260, 274, 275, 295, 311, 313, 340, 384, 392, 478, 481, 495, 530, 532, 533, 534, 536, 537, 542, 543, 544, 546, 549, 553, 585, 586, 605, 608], "pdf_in_safe_rang": 153, "pdf_matrix": 153, "pdf_threshold": [153, 154, 158], "pdflatex": 392, "peak": [68, 130, 144, 145, 153, 182, 221, 235, 241, 243, 247, 274, 445, 451, 458, 472, 494, 496, 502, 507, 564], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 391, "peek": [83, 88, 103, 106, 110, 111, 130, 131, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 391, 403, 428, 440, 446, 450, 454, 464, 470, 477, 481, 482, 491, 497, 501, 512, 514, 515, 537, 540, 542, 543, 544, 546], "pei": 459, "penal": 248, "penalti": [420, 509], "peopl": [396, 398, 411, 417, 421, 422, 495, 528, 540, 603], "pep": 396, "pep257": 392, "pep8": 394, "per": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 99, 101, 102, 103, 106, 110, 111, 113, 114, 124, 125, 127, 128, 129, 132, 133, 138, 144, 147, 148, 149, 166, 169, 201, 223, 224, 227, 231, 233, 234, 235, 236, 240, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 288, 296, 299, 305, 315, 391, 397, 403, 404, 407, 415, 417, 418, 431, 439, 443, 445, 458, 462, 471, 481, 486, 488, 490, 495, 502, 503, 508, 509, 514, 515, 518, 536, 540, 543, 547, 602, 604], "per_decad": [201, 468, 470, 481, 482, 491, 497, 513, 544, 550], "percent": 135, "percentag": [153, 182, 502], "percentil": 83, "peresano": 459, "perfect": 153, "perfectli": [559, 603], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 105, 109, 126, 173, 181, 195, 207, 209, 226, 229, 230, 239, 242, 253, 255, 266, 267, 271, 277, 281, 294, 298, 354, 357, 384, 391, 392, 397, 400, 401, 402, 406, 407, 415, 418, 420, 421, 422, 424, 433, 440, 443, 445, 448, 452, 455, 457, 458, 459, 462, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 480, 482, 486, 488, 489, 490, 493, 497, 499, 500, 502, 503, 504, 505, 507, 508, 514, 516, 518, 523, 525, 536, 540, 548, 549, 552, 559, 578, 601, 602, 603, 604], "perhap": 553, "period": [42, 51, 54, 201, 280, 398, 417, 420, 451, 459, 507, 508, 532], "period_dot": 51, "periodicmapaxi": 459, "periodogram": [297, 406, 452, 459], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 417, 518], "perseu": [33, 38], "person": [391, 394, 396, 398, 399, 400, 404, 409, 412], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 451, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 526, "ph": 376, "pha": [107, 108, 111, 205, 403, 449, 452, 468, 478], "pha_": 497, "pha_meta": 107, "pha_ob": [107, 149, 214, 478, 498, 499, 507], "pha_obs23523": [110, 111, 133, 292, 420, 509, 538], "pha_obs23592": 538, "phacountsspectrum": 435, "phacountsspectrumlist": 434, "phase": [50, 52, 53, 89, 174, 177, 280, 396, 401, 402, 405, 406, 408, 410, 415, 428, 433, 452, 454, 457, 459, 461, 506, 529, 540, 545, 554, 589, 599], "phase_axi": 415, "phase_bkg_mak": 491, "phase_column_nam": [177, 491], "phase_curve_model": 597, "phase_filt": 89, "phase_max": 491, "phase_min": 491, "phase_model": 597, "phasebackgroundestim": 437, "phasebackgroundmak": [174, 437, 457, 459, 491], "phasecurv": [280, 451, 597], "phasecurve_lsi_dc": 597, "phasecurvemodel": 414, "phasecurvetablemodel": [402, 404], "phasecurvetempl": 402, "phasogram": [280, 597], "phi": [19, 20, 26, 202, 223, 224, 227, 230, 231, 233, 234, 235, 239, 242, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 322, 414, 486, 505, 506, 513, 526, 545, 558, 559, 560, 562, 563, 564, 569, 571, 572, 573, 575, 576, 580, 581, 583, 584, 585, 586], "phi_0": [223, 225, 226, 230, 233, 234, 235, 239, 242, 246, 247, 255, 257, 259, 260, 266, 267, 270, 271, 273, 274, 275, 277, 281, 414, 499, 569, 572, 573, 576, 580, 583, 584, 585, 586], "phi_ref": [280, 597], "philipp": [451, 452], "phone": 411, "photon": [44, 231, 254, 376, 406, 463, 471, 481, 486, 504, 506, 526, 545, 578, 602], "photutil": [144, 391, 405, 452], "physic": [128, 129, 132, 134, 136, 311, 313, 338, 339, 390, 415, 419, 434, 469, 478, 503, 506, 507, 509, 512, 523, 538, 540, 578, 602, 605, 606], "physicist": [17, 19, 20, 21, 22, 24, 25, 26, 27], "pi": [19, 20, 30, 31, 32, 37, 54, 240, 285, 414, 506, 534, 558, 559, 560, 563, 564, 575, 596], "pick": [391, 398, 405, 416, 433, 526], "pictur": 392, "pie": 540, "piec": [391, 397, 405, 410, 419], "piecewis": [255, 256, 461, 506, 554, 556, 566, 567, 588], "piecewisebrokenpowerlawnormspectralmodel": 414, "piecewisebrokenpowerlawnormspectramodel": 414, "piecewisenormsectralmodel": 440, "piecewisenormspatialmodel": [263, 457, 459, 506, 561], "piecewisenormspectralmodel": [264, 419, 440, 443, 456, 458, 506, 547, 579], "pig": [13, 391, 393, 394, 432, 433, 435, 436, 437, 439, 440, 451, 453, 454, 458], "pii": 138, "pillar": 407, "pin": 452, "pink": [110, 111], "pint": [491, 540], "pintor": [404, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 454, 456, 457, 458, 459], "pip": [390, 394, 398, 408, 423, 424, 426, 433, 452, 512, 603], "pipe": [448, 449, 450], "pipelin": [394, 404, 406, 420, 439, 507], "piron": 602, "piron2001": 602, "pivot": [19, 20, 26, 67, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 458, 496], "pivot_energi": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "pix": [194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 552], "pix_reg": 495, "pix_reg_rec": 495, "pix_to_coord": [194, 195, 198, 200, 201, 204, 206, 207, 458], "pix_to_idx": [194, 195, 198, 200, 201, 204, 206, 207], "pix_tuple_to_idx": 459, "pixcoord": 405, "pixel": [13, 83, 103, 106, 110, 111, 113, 114, 115, 120, 130, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 179, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 226, 229, 230, 239, 242, 253, 255, 266, 267, 271, 277, 281, 402, 431, 435, 449, 452, 472, 481, 483, 497, 502, 503, 513, 526, 536, 538, 550, 551, 552, 562], "pixel_area": 207, "pixel_scal": [120, 195, 207], "pixelis": 552, "pixelregion": [405, 549], "pixilis": 503, "pixreg": 560, "pixregion": 209, "pk": [140, 438, 463, 489, 490, 493, 494, 496, 508, 526, 568], "pks2155": [463, 489, 493], "pks2155_hess_lc": [125, 127, 148, 494, 498], "pl": [67, 80, 124, 129, 136, 173, 251, 258, 259, 260, 414, 466, 472, 483, 489, 496, 497, 498, 506, 507, 526], "pl_model": 595, "pl_spectrum": 509, "place": [83, 86, 87, 91, 92, 100, 103, 106, 110, 111, 144, 150, 151, 152, 153, 154, 155, 156, 160, 161, 166, 168, 169, 179, 184, 196, 197, 199, 205, 208, 209, 253, 279, 312, 364, 391, 392, 398, 399, 402, 403, 404, 405, 407, 410, 411, 412, 413, 416, 422, 436, 438, 468, 488, 503, 504, 506, 526, 536, 537, 601, 607], "placehold": 396, "plai": [411, 479], "plain": [408, 503], "plainseri": 90, "plan": [395, 396, 400, 401, 405, 407, 408, 411, 416, 421, 432, 449, 451, 452, 453, 600], "planar": [281, 402], "plane": [29, 67, 68, 128, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 411, 495, 496, 503, 512, 535, 550, 553, 559, 602, 608], "plate": [207, 503], "platform": [408, 417, 443], "plausibl": [418, 480], "pleas": [104, 109, 221, 392, 394, 396, 398, 400, 427, 432, 433, 434, 443, 451, 453, 459, 466, 468, 469, 470, 471, 474, 477, 481, 482, 489, 490, 494, 497, 498, 507, 523, 529, 540], "pleasant": 394, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 102, 103, 106, 110, 111, 127, 130, 131, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 196, 197, 198, 199, 201, 204, 205, 206, 208, 209, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 286, 290, 369, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 392, 405, 406, 407, 409, 410, 412, 415, 420, 428, 431, 434, 437, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 461, 462, 464, 466, 470, 472, 474, 475, 477, 478, 482, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 502, 504, 506, 508, 509, 510, 512, 513, 514, 515, 518, 523, 526, 530, 532, 533, 534, 536, 540, 542, 543, 544, 546, 549, 597, 598, 602, 605, 607], "plot_absorb": [461, 568, 588], "plot_at_energi": [150, 151, 512], "plot_bia": [153, 158], "plot_broken_powerlaw": [461, 569, 588], "plot_compound": [461, 570, 588], "plot_const": [461, 557, 566], "plot_constant_spectr": [461, 571, 588], "plot_constant_tempor": [461, 590, 599], "plot_containment_radiu": [157, 163, 165, 167], "plot_containment_radius_vs_energi": [157, 163, 165, 166, 167, 169, 512, 513], "plot_contour_lin": 499, "plot_correl": [212, 499], "plot_count": [110, 111], "plot_dat": 607, "plot_datapoint": 507, "plot_dens": 507, "plot_disk": [461, 558, 566], "plot_distribut": [459, 475, 477], "plot_energi": [83, 482], "plot_energy_depend": [150, 156, 512, 542], "plot_energy_offset": 83, "plot_err": 130, "plot_error": [19, 20, 26, 66, 67, 102, 223, 224, 225, 226, 227, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 270, 271, 272, 273, 274, 275, 277, 278, 281, 282, 409, 463, 466, 468, 470, 477, 478, 480, 496, 499, 524], "plot_excess": [110, 111, 446], "plot_exp_cutoff_powerlaw": [461, 572, 588], "plot_exp_cutoff_powerlaw_3fgl": [461, 573, 588], "plot_exp_cutoff_powerlaw_norm_spectr": [461, 574, 588], "plot_expdecay_tempor": [461, 591, 599], "plot_extension_error": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281], "plot_fit": [102, 110, 111, 464, 468, 469, 470, 479, 491, 523], "plot_gauss": [461, 559, 566], "plot_gauss_spectr": [461, 575, 588], "plot_gaussian_tempor": [461, 592, 599], "plot_gen_gauss": [461, 560, 566], "plot_generalized_gaussian_tempor": [461, 593, 599], "plot_grid": [164, 196, 197, 199, 205, 208, 209, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 415, 445, 456, 477, 497, 501, 502, 503, 504, 506, 514], "plot_heatmap": 212, "plot_hist": [205, 553], "plot_imag": 83, "plot_interact": [196, 197, 199, 205, 208, 209, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 445, 452, 477, 486, 503, 523, 524], "plot_kernel": 164, "plot_kwarg": [468, 470, 479], "plot_linear_tempor": [461, 594, 599], "plot_logparabola": [461, 576, 588], "plot_logparabola_norm_spectr": [461, 577, 588], "plot_map_rgb": 457, "plot_mask": [110, 111, 197, 205, 209, 549], "plot_matrix": [153, 497, 513], "plot_migr": 158, "plot_naima": [461, 578, 588], "plot_npred_sign": [457, 477, 479, 524], "plot_offset2_distribut": 83, "plot_offset_depend": [150, 156], "plot_panel": 378, "plot_phasogram": 280, "plot_piecewise_norm_spati": [461, 561, 566], "plot_piecewise_norm_spectr": [461, 579, 588], "plot_point": [461, 562, 566], "plot_posit": [229, 253, 505], "plot_position_error": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281], "plot_powerlaw": [461, 580, 588], "plot_powerlaw2": [461, 581, 588], "plot_powerlaw_norm_spectr": [461, 582, 588], "plot_powerlaw_tempor": [461, 595, 599], "plot_profil": 130, "plot_psf_vs_rad": [157, 163, 165, 166, 167, 169, 513], "plot_rad_max_vs_energi": [168, 459, 470], "plot_region": [204, 205, 229, 253, 388, 470, 483, 505, 549, 553], "plot_residu": [102, 103, 106, 110, 111, 441, 443, 477, 524], "plot_residuals_spati": [103, 106, 110, 111, 477, 486, 524], "plot_residuals_spectr": [103, 106, 110, 111], "plot_rgb": 457, "plot_shel": [461, 563, 566], "plot_shell2": [461, 564, 566], "plot_sine_tempor": [461, 596, 599], "plot_smooth_broken_powerlaw": [461, 583, 588], "plot_spati": 443, "plot_spectrum": [102, 150, 477, 490, 497], "plot_spectrum_datasets_off_region": [440, 456, 457, 468, 470, 479, 549], "plot_stat": 468, "plot_super_exp_cutoff_powerlaw_3fgl": [461, 584, 588], "plot_super_exp_cutoff_powerlaw_4fgl": [461, 585, 588], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [461, 586, 588], "plot_templ": [461, 565, 566], "plot_template_phase_tempor": [461, 597, 599], "plot_template_spectr": [461, 587, 588], "plot_template_tempor": [461, 598, 599], "plot_theta_squared_t": 511, "plot_tim": 83, "plot_ts_profil": [127, 468, 469, 483, 488, 498], "plotconfig": 507, "plotmixin": [110, 111], "plotter": [378, 507, 608], "plsuperexpcutoff3fgl": 450, "plsuperexpcutoff4fgl": 435, "plt": [19, 20, 26, 66, 67, 131, 150, 156, 157, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 379, 388, 391, 392, 428, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 523, 524, 526, 532, 533, 534, 540, 542, 543, 544, 546, 549, 558, 560, 564, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 608], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 230, 411, 417, 506], "plug": 420, "pmf": 404, "png": [157, 399, 428, 530, 532, 533, 534, 536, 537, 542, 543, 544, 546, 549, 553, 605, 608], "po": [155, 207, 549], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 110, 111, 113, 114, 121, 125, 127, 128, 129, 132, 133, 135, 136, 137, 141, 146, 148, 155, 157, 160, 166, 168, 169, 179, 180, 182, 183, 184, 186, 187, 189, 190, 192, 193, 196, 197, 199, 204, 205, 208, 209, 214, 221, 229, 253, 257, 269, 288, 292, 295, 297, 303, 320, 324, 330, 336, 346, 383, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 431, 434, 436, 437, 443, 445, 446, 448, 449, 450, 451, 453, 456, 457, 458, 461, 464, 465, 467, 470, 471, 472, 477, 482, 483, 486, 488, 489, 490, 491, 493, 497, 499, 501, 502, 503, 506, 507, 508, 513, 515, 518, 525, 528, 529, 535, 536, 537, 540, 545, 549, 552, 554, 556, 559, 560, 566, 578, 600, 601, 602], "point_sourc": 402, "pointer": 399, "pointing_altaz": [418, 457], "pointing_galact": 91, "pointing_info": [85, 94, 462], "pointing_posit": [166, 471, 482, 486], "pointing_radec": [83, 91, 457, 512], "pointing_t": 94, "pointing_zen": 457, "pointinginfo": [85, 449], "pointinginfometadata": [90, 105], "pointingmetadata": 418, "pointingmod": 85, "pointlik": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 451, 549], "points_scal": 330, "pointskyregion": [178, 183, 204, 257, 446, 470, 482], "pointsourc": [402, 528], "pointspatialmodel": [19, 20, 72, 80, 136, 263, 414, 415, 436, 456, 472, 474, 477, 478, 481, 482, 488, 496, 497, 505, 506, 513, 523, 524, 562], "pointspreadfunct": 501, "poisson": [106, 111, 294, 297, 298, 299, 305, 308, 309, 315, 348, 403, 404, 434, 439, 466, 471, 475, 486, 511, 602, 603, 605], "poisson_stats_imag": 608, "poissonian": [297, 491, 494, 602], "poissonlikelihoodfitt": 448, "polar": [51, 54, 319, 391], "pole": [51, 405, 503], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 197], "polici": 395, "pollut": 406, "polygon": [197, 211, 405], "polygonis": 405, "polygonpixelregion": 405, "polygonskyregion": [211, 405], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 250, 503], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [334, 338, 339], "pool_kwarg": [338, 339], "poolmethodenum": 334, "poon": 449, "poor": [17, 19, 20, 21, 22, 24, 25, 26, 27], "poorli": [502, 507, 547], "pop": [92, 100, 203, 253], "popitem": 203, "popul": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 392, 411, 450, 529, 531, 578, 601], "popular": 603, "port": 450, "pos_ob": 479, "pos_on": 193, "pos_target": [479, 491], "posit": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 103, 104, 105, 106, 109, 113, 114, 125, 126, 127, 128, 129, 132, 133, 136, 154, 155, 161, 164, 166, 169, 179, 182, 184, 193, 195, 196, 197, 199, 204, 205, 206, 207, 208, 209, 210, 217, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 292, 294, 298, 316, 317, 320, 321, 324, 325, 379, 391, 398, 402, 404, 405, 414, 415, 416, 417, 433, 435, 440, 443, 445, 458, 459, 462, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 490, 491, 495, 496, 497, 501, 502, 503, 504, 505, 506, 508, 512, 513, 526, 536, 537, 538, 540, 545, 546, 549, 550, 551, 553, 558, 559, 560, 562, 578, 605], "position_angl": 471, "position_error": [225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 437], "position_lonlat": [225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281], "position_off": 193, "positv": 454, "posixpath": [16, 355], "possibl": [33, 82, 87, 91, 139, 159, 391, 392, 394, 398, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 415, 418, 421, 422, 424, 434, 435, 443, 450, 452, 457, 459, 463, 468, 472, 474, 475, 480, 483, 497, 499, 501, 502, 503, 507, 513, 516, 518, 524, 526, 538, 540, 547, 552, 553, 578, 603, 604], "possibli": [87, 91, 125, 397, 401, 402, 404, 405, 409, 410, 411, 412, 418, 421, 443, 507, 547], "post": [52, 400, 418], "postbuild": 421, "poster": [394, 417, 422, 447], "posterior": [221, 409, 499, 509], "posteriori": 509, "postfix": 391, "potenti": [122, 399, 407, 420, 480, 540], "potentiel": 417, "power": [19, 20, 26, 27, 102, 120, 125, 127, 129, 135, 143, 164, 166, 169, 195, 217, 219, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 270, 272, 273, 274, 275, 278, 282, 285, 290, 297, 345, 402, 404, 431, 437, 449, 451, 459, 461, 463, 471, 474, 477, 481, 483, 486, 489, 490, 491, 493, 505, 506, 509, 540, 554, 567, 568, 588, 595], "power_spectrum": 297, "power_spectrum_param": 297, "powerlaw": [182, 259, 261, 297, 402, 403, 407, 449, 451, 461, 464, 474, 482, 483, 496, 506, 507, 509, 524, 554, 582, 589, 599], "powerlaw2spectralmodel": [251, 259, 260, 264, 414, 466, 474, 506, 526, 581], "powerlaw_with_paramet": 297, "powerlawnormspectralmodel": [67, 237, 258, 260, 264, 279, 413, 414, 419, 440, 458, 477, 478, 481, 482, 486, 497, 505, 506, 513, 523, 547, 561, 582, 587], "powerlawspectr": 136, "powerlawspectralmodel": [70, 72, 76, 80, 102, 110, 111, 116, 119, 124, 127, 133, 136, 218, 220, 258, 259, 264, 286, 414, 415, 419, 463, 464, 466, 469, 471, 472, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 496, 497, 498, 505, 506, 507, 509, 512, 513, 523, 524, 526, 538, 557, 558, 559, 560, 562, 563, 564, 565, 568, 570, 579, 580, 590, 591, 592, 593, 594, 595, 596, 597, 598], "powerlawspectramodel": 419, "powerlawtemporalmodel": [276, 506, 595], "pp": [311, 313], "pppc": [17, 19, 20, 21, 22, 24, 25, 26, 27], "pppc4dm": 528, "pprint": [87, 91, 604], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pr": [391, 401, 403, 405, 414, 415, 417, 419, 420, 421, 437, 438], "practic": [404, 408, 412, 415, 416, 417, 418, 468, 497, 504, 506, 524, 536, 540, 549, 602], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 105, 109, 126, 127, 391, 394, 400, 411, 417, 418, 423, 424, 440, 452, 454, 469, 474, 475, 478, 480, 483, 494, 496, 498, 499, 505, 509, 536, 542], "preced": [336, 405, 407, 417, 506], "precis": [134, 136, 157, 163, 165, 167, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 391, 409, 416, 417, 482], "precision_factor": [166, 169, 196, 197, 199, 205, 208, 209], "precomput": [26, 102, 127, 459, 497, 505], "pred": 536, "predefin": [424, 426, 445, 483, 488, 489, 523], "predic": 402, "predict": [102, 103, 106, 109, 110, 111, 124, 125, 127, 128, 129, 132, 133, 136, 143, 173, 176, 182, 189, 257, 269, 300, 311, 313, 314, 340, 387, 397, 402, 403, 404, 440, 457, 458, 463, 469, 471, 474, 475, 477, 479, 481, 483, 486, 497, 498, 502, 509, 523, 524, 538, 540, 544, 545, 547, 568, 602, 605], "prefer": [87, 91, 366, 391, 396, 398, 402, 410, 411, 417, 423, 424, 428, 483, 490, 503, 504, 509, 518, 519, 603, 605], "prefix": [201, 402], "preliminari": [400, 411, 419, 448, 450, 458, 472, 501, 513], "prepar": [82, 176, 401, 402, 420, 421, 469, 478, 498, 502, 506, 513, 523, 548, 600], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [77, 87, 91, 318], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 459, 472, 494, 503, 578, 602], "present": [15, 70, 82, 85, 91, 92, 100, 107, 111, 125, 127, 170, 198, 203, 229, 237, 253, 318, 391, 392, 394, 404, 407, 411, 415, 418, 420, 422, 443, 464, 470, 474, 475, 488, 489, 493, 494, 495, 501, 502, 503, 505, 536, 538, 541, 553, 603, 605], "preserv": [87, 91, 106, 196, 197, 199, 201, 205, 208, 209, 408, 497, 504], "preserve_count": [196, 197, 199, 205, 208, 209, 503], "press": 512, "pretti": [405, 411, 422, 428], "prevent": [197, 231, 318, 443, 477, 547], "preview": [394, 515], "previou": [74, 87, 91, 221, 391, 394, 405, 411, 412, 416, 421, 434, 440, 458, 459, 470, 480, 481, 503, 506, 508, 509, 526, 535], "previous": [292, 408, 439, 451, 452, 462, 468, 477, 478, 496, 502, 504], "primari": [26, 87, 91, 196, 197, 199, 200, 208, 209, 396, 417, 439, 454, 498, 503], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 200, "primary_band": 503, "primary_hdu": 481, "primaryflux": [19, 20, 495, 528], "primaryhdu": [481, 503], "prime": 23, "primer": 409, "princip": 480, "principl": [391, 417, 419, 468, 550], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 102, 103, 110, 112, 117, 124, 127, 129, 136, 151, 153, 156, 157, 163, 165, 167, 176, 179, 218, 220, 229, 244, 253, 286, 316, 317, 326, 358, 391, 392, 402, 403, 406, 415, 418, 427, 428, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 523, 524, 526, 538, 540, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603, 604, 605, 607], "print0": 391, "print_level": [477, 486, 499, 524], "print_stack": 391, "printout": [391, 450, 451, 497], "prior": [19, 20, 99, 102, 103, 106, 110, 111, 217, 218, 219, 220, 223, 226, 227, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 284, 395, 400, 420, 458, 459, 461, 463, 464, 468, 469, 470, 471, 474, 477, 478, 483, 486, 489, 490, 496, 499, 500, 506, 507, 510, 518, 524, 526, 587, 600], "prior_inverse_cdf": 420, "prior_registri": 509, "prior_stat_sum": [217, 218, 219, 220, 419, 509], "priorfitstatist": 419, "priori": [415, 475, 504], "prioriti": [388, 400, 402, 403, 405, 417, 421], "priormodel": 419, "priorparamet": [238, 248, 262, 284, 419, 509], "privat": [391, 400, 414, 451, 514, 515], "pro": [391, 407], "probabl": [13, 102, 137, 146, 147, 158, 219, 238, 248, 284, 295, 394, 397, 398, 399, 401, 404, 405, 409, 411, 413, 419, 420, 422, 468, 471, 486, 499, 503, 506, 507, 509, 513, 544, 545, 546, 602, 603, 605, 606], "probe": [136, 303, 420, 506, 507], "problem": [19, 20, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 312, 369, 399, 401, 405, 412, 419, 427, 455, 499, 540], "problemat": [410, 415, 418, 489, 540], "proce": [394, 422, 424, 426, 454, 463, 464, 468, 469, 481, 486, 489, 504, 505, 512, 513, 523, 524], "procedur": [404, 416, 421, 422, 463, 472, 477], "proceed": [411, 417, 514], "process": [11, 83, 93, 128, 129, 132, 136, 137, 146, 172, 197, 209, 337, 338, 339, 348, 391, 392, 394, 396, 397, 399, 400, 401, 403, 404, 406, 407, 413, 416, 417, 418, 425, 429, 435, 440, 443, 445, 451, 458, 459, 464, 468, 472, 479, 481, 482, 496, 497, 502, 507, 514, 521, 524, 530, 537, 539, 540, 601, 602, 603], "process_lots_of_data": 391, "processor": 411, "prod": 432, "prod3": 411, "prod3b": 512, "prod5": [481, 482, 512], "produc": [15, 103, 106, 110, 111, 115, 125, 289, 291, 391, 392, 397, 406, 407, 415, 416, 418, 420, 422, 437, 463, 464, 468, 470, 472, 478, 479, 480, 481, 486, 489, 491, 495, 499, 502, 507, 509, 512, 524, 540, 543, 545, 602, 603], "product": [109, 137, 146, 196, 197, 199, 202, 205, 208, 209, 280, 397, 406, 407, 417, 418, 428, 443, 457, 458, 463, 466, 472, 482, 491, 497, 499, 502, 507, 513, 515, 538, 545, 602], "prof_mak": 129, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 77, 102, 103, 106, 121, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 146, 157, 163, 165, 166, 167, 169, 193, 197, 205, 214, 241, 243, 293, 315, 331, 350, 351, 394, 403, 405, 409, 410, 417, 424, 426, 431, 433, 440, 443, 448, 450, 452, 453, 458, 459, 461, 468, 469, 479, 484, 485, 488, 489, 490, 498, 499, 509, 518, 528, 538, 540, 558, 602, 605], "profile_err": 130, "profile_high": 483, "profile_new": 483, "profuma": 528, "program": [391, 407], "programmat": 477, "progress": [15, 82, 120, 132, 136, 214, 339, 397, 400, 407, 408, 422, 443, 450, 451, 452, 458, 507, 540], "progress_download": 540, "proj": [103, 106, 110, 111, 176, 195, 196, 197, 207, 208, 209, 468, 502, 503, 513, 524, 549], "project": [103, 110, 129, 173, 179, 195, 196, 197, 199, 204, 205, 207, 208, 209, 226, 229, 230, 239, 242, 253, 255, 266, 267, 271, 277, 281, 325, 351, 391, 392, 393, 394, 396, 398, 405, 407, 408, 411, 417, 435, 443, 451, 457, 469, 472, 475, 479, 483, 491, 501, 503, 504, 505, 513, 521, 523, 524, 526, 528, 549, 552, 553, 563, 564, 601, 603, 608], "projected_distance_axi": 129, "prompt": 603, "pronounc": 540, "pronunci": 540, "prop_cycl": 388, "propag": [53, 130, 302, 402, 409, 437, 457, 499], "proper": [45, 100, 392, 406, 417, 456, 457, 470, 477, 540], "properli": [136, 189, 396, 406, 417, 455, 456, 468, 469, 498, 499, 523, 536, 604], "properti": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 96, 105, 125, 126, 173, 207, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 304, 388, 391, 392, 402, 404, 414, 415, 418, 419, 440, 443, 445, 450, 451, 453, 456, 457, 468, 470, 479, 481, 483, 496, 504, 506, 508, 526, 537, 553, 602], "propos": [391, 393, 395, 396, 397, 398, 400, 408, 416, 417, 419, 421, 433, 436, 437, 439, 440, 451, 457], "protect": 459, "proto": [16, 84, 90, 105, 126], "proton": [285, 545, 578], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 396, 402, 404, 407, 408, 409, 411, 448, 450, 451, 458, 529], "proven": 407, "provid": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 83, 84, 85, 87, 88, 90, 91, 102, 103, 105, 106, 110, 111, 115, 126, 132, 136, 137, 139, 146, 153, 154, 172, 186, 187, 192, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 221, 244, 277, 278, 281, 297, 315, 318, 384, 391, 392, 401, 402, 404, 406, 407, 408, 411, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 433, 436, 437, 438, 440, 443, 445, 454, 457, 459, 462, 468, 470, 471, 472, 482, 486, 494, 496, 497, 498, 499, 502, 503, 504, 506, 507, 508, 513, 514, 515, 516, 518, 524, 526, 528, 530, 535, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 550, 551, 552, 553, 554, 562, 565, 578, 587, 600, 601, 602, 603, 605, 608], "proxi": 401, "prune": [394, 421], "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudo": 295, "pseudonym": 394, "psf": [16, 82, 87, 88, 96, 103, 104, 106, 109, 110, 111, 113, 114, 115, 155, 157, 162, 163, 164, 165, 166, 167, 169, 176, 183, 192, 207, 229, 253, 269, 316, 317, 391, 397, 401, 402, 403, 404, 407, 431, 433, 437, 438, 439, 440, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 462, 464, 468, 469, 470, 472, 474, 475, 477, 479, 481, 482, 486, 488, 497, 502, 504, 508, 512, 514, 515, 523, 524, 536, 538, 540, 545, 548, 553, 602], "psf3d": [88, 157, 162, 165, 167, 192, 433, 451, 546], "psf68": 462, "psf_": 536, "psf_3gauss": [87, 157, 512, 546], "psf_assym": 501, "psf_file": 101, "psf_kernel": [166, 513], "psf_kernel_map": [164, 513], "psf_king": [87, 165, 546], "psf_map": [104, 109, 166, 169], "psf_map_reco": [169, 514], "psf_mean": 513, "psf_new": 501, "psf_out": [166, 169], "psf_r95": 504, "psf_tabl": [82, 87, 163, 501, 515], "psf_theta": 391, "psf_updat": [104, 109], "psf_valu": [157, 165, 167], "psfkernel": [106, 166, 169, 197, 209, 403, 412, 452, 546], "psfking": [162, 445, 546], "psfmap": [103, 104, 106, 109, 110, 111, 154, 155, 161, 162, 164, 169, 176, 183, 192, 403, 404, 412, 433, 436, 437, 439, 440, 452, 458, 459, 472, 497, 513, 540, 546], "psfnd": 501, "psr": [491, 496, 526], "pub": 394, "public": [6, 381, 382, 394, 396, 405, 410, 413, 416, 422, 447, 464, 478, 488, 489, 493, 601, 608], "publicli": [512, 514, 515], "publish": [11, 408, 422, 468, 513], "pull": [392, 395, 396, 399, 400, 401, 402, 403, 404, 405, 411, 416, 417, 421, 422, 430], "puls": [77, 243], "pulsar": [30, 31, 32, 35, 39, 40, 42, 50, 54, 60, 64, 77, 83, 401, 411, 433, 435, 454, 457, 459, 461, 475, 480, 487, 492, 506, 518, 530, 531, 540], "pulsar_analysi": [411, 461, 491, 492], "pulsat": 268, "pulse_profil": 77, "pulse_profile_best_fit": 77, "pulse_profile_radio": 77, "pulse_stat": 491, "punch": [456, 458], "pure": [391, 408, 410, 411, 549], "purpl": 553, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 342, 366, 395, 397, 403, 406, 410, 414, 416, 417, 451, 472, 497, 505, 506, 544], "push": [391, 394, 421, 454], "put": [201, 391, 392, 394, 396, 398, 399, 402, 411, 421, 422, 428, 434, 471, 481, 504, 513, 540, 603], "pwbpl": 414, "pwd": [394, 424, 426], "pwl": [19, 20, 26, 127, 218, 220, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 286, 402, 414, 419, 463, 466, 481, 498, 506, 509, 538, 557, 558, 559, 560, 562, 563, 564, 565, 568, 570], "pwl2": 506, "pwl_decai": 481, "pwl_norm": [414, 506, 582], "pwn": [43, 496, 526, 533], "pwne": 480, "py": [391, 392, 398, 405, 408, 410, 412, 421, 422, 428, 433, 435, 436, 444, 449, 453, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 520, 521, 523, 524, 526, 527, 540, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 603], "py310": 394, "py35": 450, "pycharm": 434, "pydant": [16, 84, 90, 105, 126, 390, 437, 456, 458, 477], "pydantic_cor": [16, 84, 90, 105, 126], "pydanticdeprecatedsince20": 477, "pydanticserializationerror": [16, 84, 90, 105, 126], "pydanticundefin": [16, 84, 90, 105, 126], "pydata": [445, 459], "pydocstyl": 392, "pyfact": [431, 449], "pyflak": 445, "pyirf": 458, "pyjok": 390, "pymc": 409, "pymotw": 603, "pypi": [408, 418, 421, 422, 424, 425], "pyplot": [19, 20, 26, 66, 67, 83, 131, 157, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 379, 384, 428, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 523, 524, 526, 532, 533, 534, 540, 542, 543, 544, 546, 549, 558, 560, 564, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 608], "pyproject": 440, "pyregion": 405, "pytest": [391, 392, 394, 422, 451], "python": [11, 16, 84, 90, 105, 126, 144, 318, 359, 390, 394, 395, 396, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 412, 417, 418, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 443, 445, 448, 449, 450, 451, 452, 453, 454, 457, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 519, 521, 523, 524, 526, 528, 539, 540, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 603], "python3": [355, 425, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 565, 591], "python_execut": [462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526], "python_vers": [462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526], "pytorch": 409, "pyx": [394, 422], "pyyaml": [390, 408, 432, 436], "q": [26, 83, 87, 91, 386, 495], "qol": 459, "qtabl": [87, 91, 406, 493], "qtt": 463, "quadrat": [503, 526, 606], "qualiti": [205, 411, 451, 452, 457, 507, 508, 524, 540, 601, 608], "quantifi": [458, 480, 493, 494, 509], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 103, 104, 106, 107, 109, 110, 111, 113, 114, 115, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 176, 180, 181, 182, 184, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 217, 219, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 288, 294, 297, 298, 301, 302, 303, 304, 306, 312, 317, 318, 320, 322, 324, 325, 330, 348, 350, 351, 362, 366, 391, 392, 397, 400, 402, 405, 406, 407, 409, 414, 415, 418, 419, 434, 436, 440, 443, 444, 452, 453, 454, 462, 470, 472, 481, 482, 483, 489, 493, 494, 496, 497, 501, 502, 503, 504, 506, 512, 514, 515, 526, 532, 533, 534, 536, 540, 545, 553, 581, 591, 593, 602, 605, 607], "quantity_support": [501, 558], "quasar": 140, "quentin": [409, 413, 414, 435, 436, 437, 438, 439, 440, 443, 445, 446, 454, 455, 456, 457, 458, 459], "queri": [407, 448, 496], "question": [358, 394, 396, 398, 399, 400, 402, 403, 404, 405, 408, 410, 415, 427, 432, 433, 451, 452, 453, 479, 507, 526, 540, 541, 603], "questionnair": [398, 451], "quetin": 437, "quick": [83, 88, 103, 106, 110, 111, 150, 151, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 391, 411, 422, 472, 474, 477, 479, 481, 490, 497, 501, 505, 512, 514, 515, 516, 518, 526, 528, 537], "quickest": 392, "quickli": [391, 392, 394, 396, 407, 408, 411, 417, 420, 422, 424, 450, 468, 477, 494, 514, 544, 603], "quicklook": 83, "quickplot": 197, "quicksort": [87, 91], "quickstart": 429, "quiescent": 568, "quit": [87, 91, 391, 419, 481], "quival": 402, "quot": [74, 286, 391, 392, 495], "qzykvbjl": 493, "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 158, 193, 206, 319, 391, 392, 416, 422, 469, 478, 482, 499, 502, 523, 530, 545, 549, 558, 559, 560, 564, 568], "r68": [83, 113, 114, 157, 166, 169], "r70": [67, 496], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 266, 267, 495, 560, 563, 564], "r_0": [30, 33, 38, 48, 230, 242, 266, 505, 558, 560, 564], "r_1": [39, 48], "r_eval": 242, "r_exp": [36, 48], "r_in": [44, 171, 181, 266, 475, 550], "r_m": 560, "r_out": 44, "r_out_max": 171, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 144, 179, 391, 392, 404, 407, 462, 468, 470, 472, 475, 479, 482, 488, 489, 491, 493, 496, 502, 504, 511, 512, 513, 514, 524, 526, 528, 540, 544, 607], "ra_pnt": 515, "ra_tru": [391, 404], "rad": [33, 83, 88, 103, 106, 110, 111, 113, 114, 115, 154, 155, 157, 161, 163, 165, 166, 167, 168, 169, 179, 192, 268, 407, 445, 457, 470, 497, 501, 502, 513, 545, 546, 549, 596], "rad_axi": [103, 106, 110, 111, 115, 166, 169, 497, 501, 502, 540], "rad_di": [45, 530], "rad_index": 163, "rad_max": [82, 83, 87, 88, 162, 168, 185, 445, 454, 456, 457, 470], "rad_max_2d": [87, 168, 178, 183, 185, 470], "radec": [83, 94, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 176, 391, 392, 501, 503, 526], "radecsi": 565, "radesysa": 565, "radi": [254, 578], "radial": [28, 30, 35, 36, 39, 40, 45, 131, 193, 197, 344, 391, 402, 410, 415, 433, 448, 450, 458, 481, 483, 502, 512, 528, 530, 546, 549], "radian": [17, 18, 21, 22, 24, 25, 27, 202, 225, 226, 230, 239, 242, 255, 257, 266, 267, 269, 271, 277, 281], "radiat": [231, 540, 563, 564, 578], "radiative_model": [254, 578], "radii": [27, 495, 513, 559], "radio": [30, 31, 32, 77, 140, 405, 503], "radio_profil": 77, "radiobutton": [477, 486, 503, 523, 524], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 103, 106, 110, 111, 124, 129, 130, 157, 163, 165, 166, 167, 169, 171, 179, 181, 197, 207, 209, 210, 229, 230, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 279, 281, 316, 317, 350, 392, 405, 407, 414, 415, 433, 442, 443, 447, 457, 462, 464, 468, 469, 471, 472, 474, 475, 477, 479, 481, 482, 488, 489, 491, 493, 495, 497, 501, 502, 504, 505, 506, 508, 512, 523, 524, 526, 533, 534, 547, 549, 550, 553, 558, 559, 560, 563, 564], "radius_inn": [52, 53], "radius_max": [350, 483], "radius_min": 350, "radius_reverse_shock": [50, 53, 533], "radmax": [445, 446, 457, 458], "radmax2d": [83, 88, 162, 185, 443, 459, 470], "rai": [11, 19, 20, 26, 36, 37, 52, 53, 57, 59, 63, 66, 83, 93, 124, 128, 129, 132, 135, 136, 140, 172, 231, 285, 286, 303, 304, 338, 339, 391, 397, 402, 403, 405, 409, 420, 422, 424, 428, 429, 434, 450, 452, 457, 458, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 496, 497, 499, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 523, 524, 526, 528, 530, 531, 535, 536, 537, 540, 543, 547, 549, 550, 568, 600, 601, 602, 603, 604, 605, 608], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 105, 126, 129, 198, 203, 229, 231, 253, 277, 278, 279, 281, 318, 369, 391, 405, 414, 415, 418, 419, 437, 454, 457, 458, 459, 482], "raise_error": [16, 84, 90, 105, 126], "raj2000": [496, 526], "ran": [421, 512], "random": [19, 20, 26, 33, 42, 45, 46, 47, 87, 91, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 341, 342, 343, 344, 345, 346, 347, 348, 394, 403, 404, 407, 420, 435, 447, 451, 481, 506, 540, 604, 605, 607], "random_se": 403, "random_st": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 341, 342, 345, 346, 347, 348, 391, 404, 471, 481, 482], "randomli": [46, 101, 118, 391], "randomnumb": 345, "randomst": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 342, 345, 346, 347, 348, 391], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 77, 80, 83, 87, 91, 92, 100, 101, 102, 103, 106, 110, 111, 128, 136, 153, 166, 168, 169, 182, 194, 195, 198, 200, 201, 204, 205, 207, 217, 219, 223, 224, 227, 228, 230, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 253, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 279, 280, 282, 283, 288, 331, 343, 345, 346, 347, 384, 391, 397, 403, 404, 406, 415, 434, 439, 440, 443, 451, 452, 454, 464, 468, 470, 471, 474, 477, 478, 480, 482, 489, 490, 491, 494, 496, 497, 498, 499, 501, 503, 504, 506, 507, 508, 509, 513, 514, 523, 524, 526, 536, 538, 540, 560, 571, 601, 605], "rangl": 19, "rapid": [140, 303, 397, 400, 415, 416], "rare": [390, 391, 410, 503], "raster": [95, 197], "rate": [44, 45, 83, 88, 150, 151, 182, 189, 297, 348, 404, 428, 452, 468, 470, 491, 502, 507, 512, 513, 515, 530, 543, 602], "rather": [120, 124, 128, 132, 136, 396, 409, 412, 451, 454, 456, 458, 459, 464, 499, 503, 526, 536, 559, 605], "ratio": [106, 111, 171, 195, 196, 197, 298, 315, 415, 462, 491, 512, 550, 602, 604, 605, 606, 608], "ravel": [195, 481], "raw": [125, 182, 526], "rc": [196, 197, 199, 205, 208, 209, 388, 503], "rc_context": [196, 197, 199, 205, 208, 209, 503], "rc_param": [196, 197, 199, 205, 208, 209, 503], "rcparam": 388, "rcsb2lga": 493, "rdbu": 523, "rdbu_r": [103, 106, 110, 111], "re": [87, 91, 96, 127, 128, 129, 133, 173, 196, 197, 199, 205, 208, 209, 214, 316, 317, 384, 391, 392, 394, 396, 398, 399, 405, 406, 407, 409, 412, 413, 414, 415, 427, 431, 443, 445, 452, 466, 468, 469, 475, 477, 478, 479, 490, 499, 501, 505, 508, 513, 523, 526, 538, 540, 562, 603], "reach": [53, 135, 210, 396, 401, 404, 420, 506, 507], "reactiv": 454, "reactivenestedsampl": 420, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 103, 106, 107, 110, 111, 116, 119, 120, 124, 125, 127, 129, 131, 133, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 178, 196, 197, 199, 203, 204, 205, 208, 209, 214, 229, 231, 244, 253, 280, 281, 282, 287, 289, 291, 292, 354, 357, 377, 379, 384, 386, 391, 392, 394, 396, 401, 402, 403, 404, 407, 411, 413, 415, 417, 418, 419, 424, 426, 437, 440, 443, 451, 452, 454, 457, 458, 459, 463, 468, 469, 470, 475, 477, 480, 481, 494, 497, 498, 499, 501, 506, 507, 509, 512, 513, 514, 518, 523, 526, 537, 538, 540, 542, 543, 544, 546, 565, 597, 598, 603, 606, 608], "read_arf": 107, "read_bkg": 107, "read_builtin": [231, 463, 568], "read_covari": [229, 253], "read_dataset": 15, "read_fil": 420, "read_lazi": 445, "read_model": 15, "read_pha": 107, "read_rmf": 107, "read_xspec_model": 282, "readabl": [372, 402, 445, 469, 523], "reader": [418, 462, 471, 474, 477, 479, 482, 486, 490, 512], "readi": [401, 418, 427, 602], "readili": [411, 420, 507], "readm": [394, 417], "readthedoc": [13, 128, 189, 204, 214, 282, 411, 434, 449, 499, 501, 512, 537, 551, 553], "real": [51, 391, 394, 422, 471, 472, 475, 482, 499, 504, 507, 536, 545], "realis": [396, 405, 417], "realist": 419, "realiti": 463, "realiz": [397, 602], "realli": [391, 398, 405, 408, 471, 486, 499], "rearrang": 411, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 391, 396, 397, 398, 399, 402, 403, 404, 406, 408, 410, 412, 417, 420, 451, 463, 481, 499, 507, 509, 514, 536, 603], "reassign": [19, 20, 26, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284], "rebas": [391, 405], "rebin": [127, 148, 406, 445, 458, 489, 494, 497], "rebuild": [16, 84, 90, 105, 126, 478], "recarrai": [87, 91, 157, 167], "receiv": [409, 411, 412, 414, 416, 507], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 401, 405, 406, 407, 408, 411, 420, 425, 432, 446, 452, 478, 507, 512, 514], "recip": [393, 407, 421, 429, 443, 491, 540, 541, 602, 605], "reco": [103, 106, 110, 111, 153, 186, 391, 397, 406, 415, 453, 454, 462, 497, 502, 514, 602], "reco_exposur": [124, 459], "reco_psf": [103, 106, 110, 111, 115, 502, 514], "recogn": [462, 471, 474, 477, 479, 486, 490, 512], "recognis": [402, 603], "recognit": 417, "recommend": [92, 100, 101, 102, 154, 155, 161, 166, 169, 183, 229, 253, 293, 330, 331, 390, 391, 392, 394, 398, 400, 408, 417, 422, 423, 425, 428, 435, 452, 468, 469, 470, 480, 497, 499, 502, 506, 507, 513, 523, 540, 547, 552, 553, 603, 604, 607], "recomput": [127, 415, 475], "recompute_ul": 127, "recon_vers": [513, 526], "reconstruct": [83, 103, 104, 106, 109, 110, 111, 113, 114, 115, 124, 135, 136, 143, 150, 151, 153, 154, 155, 158, 168, 169, 182, 189, 391, 397, 402, 404, 440, 455, 462, 464, 468, 471, 474, 475, 477, 481, 486, 490, 497, 502, 504, 509, 514, 536, 538, 544, 545, 546, 553, 602], "recopsfmap": [162, 454, 457], "record": [83, 88, 391, 396, 397, 417, 512], "recov": 407, "rectangl": [226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 351, 405, 483, 549], "rectangleskyregion": [207, 225, 226, 281, 350, 351, 405, 464, 495, 504, 549, 553], "rectangular": [483, 549, 553], "recurr": 406, "recurs": [358, 418], "red": [102, 229, 253, 297, 303, 381, 462, 463, 468, 471, 475, 477, 480, 495, 507, 508, 509, 558, 559], "redesign": 400, "redistribut": 544, "redo": 491, "redshift": [19, 20, 231, 414, 526, 568], "redshift_scan": 463, "reduc": [6, 11, 15, 100, 103, 106, 110, 111, 164, 166, 169, 174, 184, 196, 197, 199, 201, 205, 208, 209, 397, 398, 400, 402, 403, 407, 410, 412, 417, 418, 424, 431, 436, 443, 452, 458, 461, 463, 464, 466, 469, 470, 471, 477, 478, 481, 486, 488, 489, 490, 493, 500, 504, 508, 510, 514, 518, 536, 540, 550, 553, 559, 560, 601, 602, 603], "reduce_data": 407, "reduce_over_ax": [196, 197, 199, 205, 208, 209, 474, 502, 514], "reduct": [6, 11, 172, 397, 403, 404, 407, 411, 412, 413, 418, 424, 437, 439, 457, 461, 475, 479, 480, 483, 491, 497, 500, 501, 504, 505, 508, 510, 518, 519, 525, 537, 540, 545, 547, 549, 550, 601, 602], "ref": [83, 94, 103, 110, 124, 129, 136, 195, 204, 207, 229, 253, 392, 415, 472, 479, 483, 489, 496, 497, 498, 501, 503, 513, 526, 553, 591, 592, 593, 594, 595, 596, 603], "ref_templ": [16, 84, 90, 105, 126], "refactor": [391, 403, 405, 406, 407, 414, 433, 434, 435, 437, 438, 439, 440, 443, 445, 447, 449, 451], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 103, 105, 106, 107, 110, 111, 113, 114, 115, 120, 125, 126, 127, 128, 130, 134, 137, 139, 140, 146, 147, 158, 172, 173, 176, 179, 180, 183, 184, 185, 188, 189, 191, 206, 207, 208, 209, 214, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 286, 297, 299, 303, 304, 305, 306, 311, 312, 313, 315, 345, 346, 372, 373, 374, 375, 391, 392, 397, 399, 402, 403, 405, 407, 409, 414, 415, 416, 417, 418, 420, 422, 429, 443, 450, 451, 459, 463, 464, 466, 468, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 486, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 502, 503, 505, 506, 507, 509, 512, 513, 514, 523, 524, 526, 529, 536, 538, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 570, 572, 573, 574, 576, 577, 579, 580, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 607], "referenc": [391, 602], "reference_flux": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "reference_map": 503, "reference_model": [125, 127, 137, 146, 462, 463, 472, 478, 498], "reference_model_default": [125, 127], "reference_spectral_model": [125, 127], "reference_tim": [86, 88, 103, 106, 110, 111, 200, 206, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 456, 457, 482, 490, 494, 502, 503, 598], "refit": 498, "reflect": [174, 178, 179, 180, 184, 193, 400, 405, 407, 410, 412, 424, 436, 443, 445, 448, 449, 452, 463, 464, 468, 469, 470, 479, 489, 493, 504, 511, 545, 548, 602], "reflected_bkg_mak": 502, "reflectedbgestim": 407, "reflectedregion": 463, "reflectedregionsbackgroundmak": [174, 179, 437, 459, 464, 468, 470, 479, 489, 493, 502], "reflectedregionsfind": [178, 184, 435, 549], "refpix": [207, 208, 209], "refresh": [87, 91], "refus": 391, "reg": [103, 106, 110, 111, 504, 506], "reg_dataset": 497, "regard": [415, 418, 468, 545], "regardless": [87, 91], "regeard": [455, 456, 457, 458, 459], "regi": [397, 402, 403, 407], "region": [27, 83, 91, 100, 103, 106, 108, 110, 111, 116, 119, 124, 125, 127, 129, 131, 135, 140, 154, 155, 161, 166, 169, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 195, 196, 197, 199, 204, 205, 207, 208, 209, 211, 214, 225, 226, 229, 230, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 279, 281, 282, 285, 298, 315, 349, 350, 351, 352, 353, 384, 387, 388, 390, 392, 395, 397, 398, 406, 407, 408, 410, 413, 415, 420, 424, 435, 436, 437, 439, 443, 445, 446, 448, 449, 451, 452, 454, 456, 457, 459, 463, 469, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 503, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526, 535, 536, 537, 538, 540, 545, 547, 548, 550, 551, 552, 558, 559, 578, 601, 602, 604, 605, 606], "region_coord": 204, "region_ev": 491, "region_find": [178, 470], "region_io": 204, "region_map": [205, 209, 553], "region_map_1": 553, "region_map_2": 553, "region_mask": [83, 195, 207, 405, 468, 475, 479, 497, 502, 504, 524, 547, 549, 550], "region_nd_map": 205, "region_new": 352, "region_pix": 506, "region_weight": 207, "regionfind": [179, 180, 184], "regiongeom": [103, 106, 110, 111, 125, 129, 176, 183, 185, 186, 187, 189, 190, 205, 226, 230, 239, 242, 255, 266, 267, 269, 271, 277, 281, 405, 406, 413, 424, 439, 440, 443, 462, 464, 468, 470, 471, 479, 483, 489, 490, 491, 493, 496, 497, 498, 502, 513, 526, 536, 549, 552], "regionndmap": [26, 77, 107, 110, 111, 135, 177, 178, 183, 185, 196, 197, 199, 204, 208, 209, 226, 230, 239, 242, 244, 255, 266, 267, 271, 277, 278, 281, 388, 405, 424, 439, 440, 443, 446, 454, 457, 482, 498, 513, 536, 552, 598], "regions_ds9": 504, "regionsfind": [178, 179, 184, 445], "regist": 506, "registri": [55, 98, 121, 162, 174, 249, 251, 263, 264, 276, 412, 419, 436, 439, 440, 443, 452, 496, 506], "regress": 394, "regul": 417, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 195, 203, 207, 295, 400, 419, 420, 445, 457, 486, 503, 504, 514], "regulargridinterpol": [330, 391], "regularis": 419, "regularli": [419, 515], "reichardt": 447, "reimplement": 402, "rej_sampl": 404, "reject": [395, 396, 404], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 106, 107, 111, 134, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 206, 207, 208, 209, 266, 286, 302, 348, 406, 417, 443, 490, 494, 507, 514, 564, 605], "rel_reduction_of_f_": 499, "relat": [11, 13, 28, 67, 83, 85, 212, 303, 397, 399, 402, 404, 405, 408, 410, 411, 412, 417, 420, 422, 439, 440, 452, 458, 497, 506, 512, 530, 600, 605], "relative_variability_amplitud": 494, "relative_variability_error": 494, "relative_variability_signific": 494, "relativist": 578, "releas": [11, 51, 65, 95, 393, 395, 396, 398, 399, 405, 408, 409, 418, 423, 425, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 464, 468, 469, 478, 488, 489, 493, 512, 514, 515, 518, 523, 524, 528, 540, 542, 543, 544, 545, 546], "relev": [125, 294, 298, 374, 391, 397, 406, 411, 415, 420, 421, 468, 469, 472, 488, 489, 490, 493, 505, 507, 508, 512, 514, 515, 523, 524, 536, 537, 607], "reli": [125, 391, 396, 397, 401, 402, 406, 410, 415, 416, 435, 440, 443, 454, 466, 477, 504, 528, 605], "reliabl": [394, 425, 475, 499, 504, 604], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 396, 397, 398, 399, 404, 408, 417, 433, 452, 470, 505, 546], "remaind": [221, 514], "remark": 470, "rememb": [391, 405, 499, 518, 603], "remi": [413, 414, 435, 436, 437, 438, 439, 440, 443, 454, 455, 456, 457, 458, 459], "remind": [201, 417, 472, 479, 498], "remnant": [28, 52, 464, 480, 506, 531], "remot": [394, 421], "remov": [13, 87, 91, 92, 96, 100, 166, 169, 181, 194, 195, 200, 203, 204, 207, 209, 253, 317, 394, 398, 399, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 420, 423, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 468, 475, 477, 491, 497, 504, 508, 512, 529, 540, 549], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 127, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 401, 402, 410, 411, 414, 431, 434, 436, 437, 438, 439, 443, 453, 454, 457, 603], "rename_ax": [194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 454], "rename_column": [87, 91, 127], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 369, 391, 392, 399, 451], "renorm": [475, 547], "renormalis": 181, "reoptim": [128, 129, 132, 133, 214, 433, 463, 483, 488, 498, 499, 509, 523], "reorder": 459, "reorder_ax": [196, 197, 199, 205, 208, 209, 457], "reorgan": 443, "reorganis": 411, "repeat": [392, 477, 514], "repl": 391, "replac": [15, 87, 91, 100, 103, 106, 110, 111, 154, 155, 161, 166, 194, 195, 197, 200, 204, 205, 207, 209, 279, 292, 391, 401, 402, 405, 409, 412, 418, 420, 425, 434, 435, 437, 439, 440, 457, 458, 459, 491], "replace_axi": [194, 195, 204, 207], "replace_column": [87, 91], "repo": [392, 399, 421, 422, 431, 444], "report": [87, 394, 407, 421, 422, 429, 431, 445, 446, 451], "repositori": [87, 91, 391, 394, 396, 399, 401, 417, 421, 443, 452, 481, 515], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 84, 87, 90, 91, 103, 105, 106, 110, 111, 126, 195, 197, 199, 201, 202, 204, 206, 269, 318, 326, 336, 391, 402, 403, 404, 405, 409, 412, 413, 414, 415, 433, 457, 463, 482, 483, 496, 498, 499, 502, 503, 504, 506, 513, 526, 535, 536, 538, 542, 543, 544, 546, 552, 600, 601, 602, 607], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 105, 126, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 391, 405, 418, 433, 435, 457, 466, 496, 503, 506, 507, 552], "reprocess": 397, "reproduc": [94, 102, 127, 392, 407, 408, 409, 411, 417, 418, 423, 425, 452, 502], "reproject": [182, 196, 197, 199, 205, 208, 209, 387, 391, 397, 405, 408, 415, 437, 444, 452, 454, 458, 503, 504], "reproject_by_imag": [196, 197, 199, 205, 208, 209, 458], "reproject_to_geom": [196, 197, 199, 205, 208, 209, 454], "request": [85, 125, 127, 392, 395, 396, 398, 399, 400, 401, 402, 403, 405, 411, 415, 416, 417, 419, 422, 430, 481, 498, 504, 538], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 84, 85, 87, 88, 90, 91, 95, 103, 105, 106, 110, 111, 112, 117, 126, 127, 130, 134, 136, 150, 151, 153, 156, 157, 158, 163, 165, 168, 173, 196, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 318, 366, 370, 371, 389, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 413, 414, 415, 416, 417, 419, 420, 421, 423, 425, 431, 436, 437, 438, 439, 444, 445, 447, 448, 449, 450, 453, 454, 455, 459, 463, 464, 470, 475, 478, 489, 490, 491, 493, 494, 497, 501, 503, 504, 506, 507, 512, 524, 538, 540, 553], "require_ev": 82, "required_ax": [150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 501], "required_hdu": 446, "required_irf": [16, 82, 469, 470, 474, 475, 477, 523], "required_nam": [198, 200, 201, 206], "required_paramet": [157, 165, 167], "rerun": [406, 493], "resampl": [103, 106, 110, 111, 127, 148, 149, 154, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207, 208, 209, 386, 443, 445, 494, 540], "resample_axi": [127, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 386, 440, 489, 494], "resample_energy_axi": [103, 106, 110, 111, 154, 440, 445, 497], "resample_energy_edg": [468, 540], "resampled_energy_edg": 149, "resampled_map": [196, 197, 199, 205, 208, 209], "rescal": 502, "research": [407, 417], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 217, 219, 237, 279, 392, 440], "reset_autoscal": [217, 219], "reset_data_cach": [103, 106, 110, 111], "reset_to_default": 237, "reshap": [196, 197, 199, 205, 208, 209, 462, 482, 501, 503], "resid": [413, 506], "residu": [72, 102, 103, 106, 110, 111, 173, 402, 403, 407, 435, 440, 446, 453, 459, 475, 497, 499, 513, 536, 549, 602], "resolut": [52, 153, 154, 158, 195, 207, 400, 402, 404, 405, 451, 457, 459, 496, 513], "resolv": [16, 84, 90, 105, 126, 392, 394, 401, 405, 406, 413, 414, 427, 433, 452, 459, 461, 487, 489, 492, 518, 549], "resort": 474, "resourc": [451, 518], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 84, 87, 90, 91, 105, 107, 126, 127, 140, 195, 197, 207, 209, 293, 391, 401, 406, 417, 419, 440, 459, 472, 475, 490, 498, 503, 504, 507, 514, 538, 553, 606], "respond": 417, "respons": [6, 109, 153, 154, 155, 158, 160, 161, 179, 391, 397, 398, 400, 402, 403, 404, 406, 407, 415, 417, 424, 450, 451, 452, 453, 464, 468, 469, 470, 471, 486, 490, 501, 502, 505, 512, 514, 515, 516, 518, 523, 524, 536, 537, 542, 544, 546, 601, 602], "rest": [26, 394, 408, 410, 496, 535], "restart": 507, "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 505], "restore_statu": [218, 220, 229, 253, 509], "restore_valu": [218, 220, 229, 253], "restrict": [87, 91, 405, 477, 497, 504], "restructur": [392, 406, 407, 408, 410, 412, 418, 422, 437, 443, 444, 445, 446, 448, 457], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 102, 103, 105, 106, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 138, 139, 144, 146, 147, 158, 164, 166, 169, 182, 186, 187, 192, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 213, 214, 215, 216, 221, 229, 253, 281, 292, 297, 318, 384, 390, 391, 392, 394, 396, 398, 400, 401, 402, 403, 404, 407, 409, 410, 413, 417, 419, 420, 425, 428, 435, 443, 445, 446, 451, 453, 457, 458, 459, 463, 466, 468, 470, 471, 477, 479, 481, 482, 486, 489, 490, 491, 494, 496, 497, 499, 503, 504, 508, 509, 513, 514, 515, 523, 524, 535, 538, 540, 553, 591, 602, 604, 605], "result1": 463, "result2": 505, "result_0": 507, "result_1": 507, "result_2": 507, "result_ecpl": 466, "result_joint": [464, 468, 477, 507], "result_list": 384, "result_log_parabola": 466, "result_minuit": 499, "result_pwl": 466, "result_scipi": 499, "result_stack": 468, "results_joint": 478, "results_prior": 509, "results_simplex": 499, "results_t": 480, "resum": [221, 507], "retain": [496, 553], "retriev": [87, 91, 415, 417, 464, 466, 468, 503, 506, 508, 514, 524, 537, 552, 553], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 290, 292, 293, 294, 297, 298, 299, 301, 302, 303, 304, 305, 306, 311, 312, 313, 315, 316, 317, 318, 320, 322, 324, 325, 329, 331, 336, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 361, 362, 363, 372, 373, 374, 375, 376, 379, 381, 382, 384, 386, 387, 397, 401, 402, 403, 404, 405, 406, 414, 415, 418, 419, 420, 436, 437, 440, 443, 446, 452, 454, 459, 468, 470, 475, 479, 483, 489, 490, 493, 496, 497, 498, 499, 502, 503, 504, 506, 507, 509, 526, 530, 552, 553, 587, 605], "return_delta": 348, "return_diff": 348, "return_typ": 90, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [407, 440, 458], "reval": 560, "reveal": [420, 507], "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 200, 253, 503, 533], "reverse_lon_radec": 159, "revert": 459, "review": [394, 399, 400, 401, 404, 405, 407, 408, 410, 411, 412, 414, 415, 417, 419, 420, 453, 454, 507, 552], "revis": [411, 507], "revisit": [39, 40, 231], "rework": 438, "rewrit": [397, 400, 407, 438, 448, 449, 451, 452, 453, 603], "rewritten": [450, 453], "rf": 495, "rgb": [386, 388, 457, 462, 468], "rglob": [82, 481, 512], "rhe": 185, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rhul": [311, 313], "rich": [391, 407, 507], "rid": 397, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 110, 125, 127, 136, 156, 235, 240, 260, 273, 274, 299, 302, 305, 379, 391, 405, 414, 417, 472, 479, 481, 488, 490, 512, 558, 559, 560, 568, 569, 572, 573, 575, 576, 580, 583, 584, 585, 586, 591, 592, 593, 595, 603, 604, 605, 606], "rightarrow": [564, 606], "rigid": 396, "ring": [106, 124, 171, 174, 181, 195, 196, 197, 397, 400, 407, 410, 424, 433, 437, 439, 449, 450, 451, 452, 461, 473, 476, 480, 504, 518, 539, 545, 548, 551, 602], "ring2dkernel": [171, 181], "ring_background": [461, 475, 476], "ring_bkg_mak": 550, "ring_mak": 475, "ringbackgroundestim": [397, 451], "ringbackgroundmak": [171, 174, 437, 475, 502, 545, 550], "rint": 459, "rise": [140, 243, 494, 593], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 394, 417], "rm": [153, 154, 158, 275, 414, 470, 499, 542, 544, 545, 546, 560, 591, 592, 593, 594, 595, 596], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [107, 108, 111, 153, 154, 155, 449, 468], "rmf_ob": 107, "rmffile": 107, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 342, 345, 346, 347, 348, 391], "roadmap": [395, 398, 407, 416, 432, 453], "roberta": [451, 452], "robust": [391, 420, 452, 507], "roellinghoff": 459, "roi": [67, 407, 496, 515, 602], "roi_max": 407, "role": [451, 502], "rolf": 431, "rolk": 602, "rolke2005": 602, "roll": 513, "room": 401, "root": [19, 20, 26, 125, 126, 134, 136, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 307, 310, 391, 409, 443, 472, 528, 538, 603, 605], "rosillo": 454, "rotang": 482, "rotat": [22, 51, 54, 176, 179, 180, 184, 189, 230, 239, 242, 482, 549, 558, 559], "rough": [72, 407], "roughli": [120, 394, 399, 405, 407, 410, 411, 450, 475], "round": [87, 91, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 420, 468, 552], "round_to_edg": [194, 195, 204, 207], "round_trip": [16, 84, 90, 105, 126], "routin": 431, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 144, 153, 326, 362, 385, 406, 415, 418, 454, 457, 468, 471, 482, 483, 493, 496, 499, 503, 512, 514, 515, 526, 535], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 496], "row_label": 385, "row_specifi": [83, 87, 91], "royalblu": 491, "rpovid": 406, "rspec": [67, 496], "rst": [394, 396, 411, 417, 421, 422, 438, 443], "rtd": 452, "rtol": [134, 136, 366, 391], "rtol_ax": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 204, 205, 207, 208, 209], "rtol_wc": 207, "ruben": 451, "rub\u00e9n": 451, "ruiz": [399, 407, 411, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 445, 451, 452, 453], "rule": [87, 91, 269, 288, 329, 417, 503, 552], "run": [16, 82, 83, 84, 88, 90, 93, 102, 104, 105, 109, 120, 122, 123, 124, 126, 128, 129, 131, 132, 133, 134, 135, 136, 144, 145, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 204, 207, 214, 221, 222, 338, 339, 365, 384, 390, 391, 392, 398, 399, 401, 404, 406, 407, 408, 411, 413, 415, 419, 420, 421, 422, 423, 428, 434, 435, 438, 439, 450, 452, 453, 457, 459, 462, 463, 464, 466, 471, 472, 474, 475, 477, 478, 479, 481, 486, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 511, 512, 513, 514, 515, 518, 519, 521, 524, 526, 536, 537, 538, 540, 545, 547, 549, 550, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "run0": 507, "run1": 507, "run2": 507, "run_fit": [15, 469, 474, 523], "run_id": [83, 513, 526], "run_multiprocess": 540, "run_opt": 221, "runner": [16, 355, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 565, 568, 591, 597, 598], "runtim": [400, 418, 421], "runtimewarn": [470, 475, 481, 493, 515, 591], "rx": 464, "rxj": 464, "rxj1713_2016_250gev": 565, "r\u00e9gi": [397, 400, 401, 405, 406, 408, 410, 412, 413, 414, 415, 416, 418, 420, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "r\u00e9my": [409, 443, 445, 446, 454], "s0167947313003204": 138, "s0e2h": 493, "s10052": [311, 313], "s180": 303, "s2": 280, "s3": 280, "s_0": 540, "s_1": 540, "safari": [87, 91], "safe": [99, 102, 103, 106, 110, 111, 154, 155, 161, 166, 169, 174, 182, 391, 403, 405, 417, 437, 439, 440, 454, 455, 456, 457, 459, 464, 468, 497, 504, 524, 536, 601], "safe_mask": [16, 103, 110, 469, 474, 475, 477, 523], "safe_mask_mak": [172, 464, 468, 491, 502, 514, 547, 549, 550], "safe_mask_mask": [470, 479, 489, 493, 502], "safemaskconfig": 16, "safemaskmak": [172, 174, 412, 437, 438, 443, 445, 446, 458, 464, 468, 470, 479, 486, 489, 491, 493, 502, 504, 514, 523, 524, 547, 548, 549, 550], "safer": 420, "safeti": 417, "sagittariu": [33, 38], "saha": 451, "sai": [74, 396, 410, 603], "said": [391, 396, 398, 514, 515, 603], "sake": [481, 499], "saldana": [231, 232, 457, 463, 568], "saldana21": 568, "samantha": 459, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 95, 100, 103, 106, 107, 110, 111, 124, 136, 137, 138, 144, 145, 146, 147, 157, 158, 164, 165, 166, 167, 169, 170, 172, 193, 194, 195, 196, 197, 199, 200, 203, 204, 205, 207, 208, 209, 286, 297, 303, 311, 313, 384, 391, 394, 399, 401, 403, 405, 406, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 424, 425, 435, 436, 440, 443, 457, 466, 469, 470, 471, 477, 478, 481, 486, 488, 489, 491, 496, 497, 503, 504, 505, 506, 508, 509, 513, 514, 518, 523, 525, 536, 537, 538, 544, 552, 553, 603], "sampl": [19, 20, 26, 47, 93, 104, 109, 136, 139, 155, 157, 163, 165, 166, 167, 169, 196, 197, 199, 205, 207, 208, 209, 221, 222, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 293, 297, 306, 331, 340, 345, 346, 347, 348, 395, 403, 405, 406, 409, 411, 424, 431, 433, 435, 436, 439, 445, 452, 454, 457, 458, 459, 461, 470, 484, 485, 494, 497, 499, 500, 510, 518, 540], "sample_axi": 340, "sample_background": [104, 109, 437], "sample_coord": [155, 166, 169, 196, 197, 199, 205, 208, 209, 437, 439, 454], "sample_edisp": [104, 109], "sample_powerlaw": 410, "sample_psf": [104, 109], "sample_sourc": [104, 109], "sample_spher": [447, 607], "sample_tim": [228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 443, 454, 459], "sampler": [104, 222, 340, 400, 404, 420, 439, 443, 459, 481], "sampler_kwarg": 93, "sampler_opt": [221, 507], "sampler_result": [222, 507], "sampler_ultranest": 221, "samplerlikelihood": [221, 420], "samplerresult": [221, 507], "samreai": 507, "saniti": 451, "santiago": 459, "sanxv_lk": 493, "satisfi": [149, 173, 195, 196, 197, 318, 505, 507, 540], "save": [15, 19, 20, 26, 100, 136, 211, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 391, 399, 407, 415, 419, 420, 459, 463, 477, 478, 481, 499, 504, 505, 514, 537], "savefig": [369, 428], "savez": 211, "saw": 429, "sbpl": [270, 414, 506], "sc": [87, 91], "scalar": [87, 91, 164, 195, 196, 197, 199, 205, 208, 209, 318, 410, 445, 456, 458, 503, 552], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 105, 106, 111, 120, 126, 128, 129, 132, 157, 173, 201, 205, 206, 207, 209, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 272, 273, 274, 275, 278, 280, 281, 282, 290, 293, 317, 330, 331, 332, 348, 372, 373, 374, 384, 392, 400, 405, 406, 409, 414, 420, 438, 443, 444, 452, 455, 456, 457, 459, 469, 472, 482, 483, 488, 489, 490, 494, 495, 496, 498, 501, 502, 503, 506, 508, 509, 512, 523, 526, 528, 568, 590, 591, 592, 593, 594, 595, 596, 597, 598], "scale10": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 419, 578], "scale_method": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 419, 578], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 495], "scale_transform": [217, 219, 578], "scaled_featur": 317, "scaled_features_irf": [316, 317, 508], "scaledregulargridinterpol": [68, 231, 282, 438, 453], "scalespectralmodel": [128, 129, 132, 264, 414, 506], "scan": [19, 20, 95, 125, 127, 128, 129, 132, 133, 214, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 406, 415, 443, 483, 489, 498, 509, 538, 540], "scan_max": [19, 20, 128, 132, 136, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 463, 489, 498, 499], "scan_min": [19, 20, 128, 132, 136, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 463, 498, 499], "scan_n_sigma": [19, 20, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 499], "scan_n_valu": [19, 20, 128, 132, 133, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 463, 499, 509], "scan_prior": 509, "scan_valu": [19, 20, 214, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 483, 499], "scargl": [406, 451, 494], "scatter": [24, 229, 253, 412, 472, 479, 493, 558, 559], "sce": 545, "scenario": [87, 91, 396, 403, 413, 424, 498, 503, 506, 529, 604], "scengin": [87, 91], "schedul": 400, "schema": [15, 16, 84, 90, 105, 126, 407, 410], "schema_gener": [16, 84, 90, 105, 126], "schema_json": [16, 84, 90, 105, 126], "scheme": [16, 84, 90, 102, 105, 107, 108, 126, 195, 196, 197, 206, 221, 244, 391, 397, 401, 403, 406, 413, 414, 415, 416, 418, 421, 436, 443, 454, 458, 482, 501, 503, 506, 507, 540, 545, 551, 552, 554], "schiavo": 459, "school": [417, 420], "scienc": [138, 196, 197, 199, 208, 209, 398, 400, 404, 407, 408, 411, 417, 420, 429, 451, 452, 471, 478, 490, 503, 506, 508, 512, 513, 518, 528, 540, 576, 602, 603], "sciencedirect": 138, "scientif": [392, 398, 414, 417, 425], "scientist": 512, "scikit": [144, 391, 405, 408, 411, 452, 504], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 209, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 316, 330, 371, 384, 390, 391, 394, 400, 405, 408, 409, 411, 417, 429, 433, 434, 435, 436, 448, 449, 450, 453, 455, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 600, 605], "scipy_mvn": 212, "scipy_opt": 499, "scitool": 581, "scope": [404, 405, 406, 407, 410, 418, 529, 545], "scratch": [156, 391, 401, 405, 422, 477, 504], "screen": [87, 91, 503, 526], "script": [6, 87, 91, 127, 354, 355, 356, 357, 358, 359, 360, 392, 397, 398, 400, 402, 405, 407, 410, 411, 417, 421, 422, 432, 433, 434, 435, 443, 444, 448, 451, 452, 453, 454, 458, 461, 463, 466, 468, 469, 472, 475, 477, 478, 479, 480, 481, 483, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 502, 505, 507, 509, 513, 520, 523, 524, 539, 540, 603], "scriptabl": 418, "scutum": [33, 38], "sdc": 512, "sdist": 422, "seaborn": 540, "search": [87, 91, 294, 298, 355, 391, 392, 428, 451, 452, 469, 472, 479, 480, 495, 496, 508, 523, 524, 526, 528, 540, 545, 603], "season": 411, "sebastian": 443, "sec": [54, 83, 94, 100, 132, 348, 499], "second": [42, 58, 83, 86, 87, 88, 91, 139, 153, 280, 306, 348, 351, 368, 372, 375, 380, 392, 399, 401, 403, 405, 409, 415, 417, 422, 437, 456, 463, 466, 468, 469, 472, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 493, 495, 497, 498, 499, 502, 503, 505, 507, 509, 512, 518, 523, 524, 525, 535, 604, 607], "secpl": [273, 274, 275, 414, 506], "section": [19, 87, 91, 297, 299, 305, 391, 392, 394, 396, 405, 407, 408, 410, 414, 417, 420, 422, 440, 453, 471, 477, 481, 482, 486, 490, 496, 498, 499, 504, 505, 506, 526, 529, 540, 553, 601, 603, 607, 608], "secur": 504, "sed": [121, 124, 125, 126, 127, 129, 136, 205, 231, 390, 407, 409, 415, 424, 431, 450, 466, 472, 483, 489, 496, 497, 498, 523, 526, 602], "sed_fit": [461, 466, 467], "sed_fitting_gammacat_fermi": 411, "sed_typ": [19, 20, 26, 125, 126, 127, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 443, 462, 463, 466, 468, 469, 470, 478, 479, 483, 488, 489, 490, 496, 498, 524, 526, 538, 540, 578, 602], "sed_type_init": [71, 74, 75, 78, 125, 126, 127], "sed_type_plot_default": [125, 127], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 534], "sedov_taylor_end": [52, 53, 534], "seds_20230803": 64, "sedtypeenum": 126, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 103, 106, 110, 111, 120, 122, 124, 127, 128, 129, 132, 135, 136, 138, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 179, 181, 182, 189, 194, 195, 197, 199, 201, 202, 204, 207, 209, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 284, 287, 299, 305, 308, 309, 315, 318, 326, 342, 358, 381, 382, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412, 416, 417, 418, 419, 420, 422, 424, 425, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 448, 449, 450, 451, 452, 453, 454, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 483, 486, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 514, 518, 523, 524, 526, 528, 536, 537, 540, 545, 550, 551, 553, 581, 585, 586, 600, 602, 603, 604, 605, 607, 608], "seed": [19, 20, 26, 33, 42, 45, 46, 47, 103, 104, 106, 109, 110, 111, 155, 166, 169, 196, 197, 199, 205, 208, 209, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 297, 340, 341, 342, 345, 346, 347, 348, 391, 451, 481, 578], "seed_photon_field": [254, 578], "seem": [391, 398, 399, 402, 408, 412, 528], "seen": [391, 405, 412, 464, 472, 478, 489, 503, 506, 513, 602], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 103, 106, 110, 111, 124, 176, 183, 196, 197, 198, 199, 201, 206, 208, 209, 218, 220, 229, 253, 269, 279, 292, 387, 388, 394, 401, 403, 404, 405, 406, 407, 411, 413, 415, 418, 424, 426, 432, 435, 443, 447, 462, 468, 470, 471, 474, 475, 477, 478, 480, 481, 482, 486, 490, 491, 497, 498, 499, 502, 503, 504, 507, 508, 511, 512, 514, 515, 518, 525, 526, 538, 540, 544, 545, 549, 601, 603], "select_energi": [83, 537], "select_from_geom": [229, 253], "select_map_mask": 433, "select_mask": [83, 229, 253, 443, 505], "select_nested_model": [457, 459], "select_obs_id": [91, 479], "select_observ": [91, 96, 407, 489, 493, 508, 524, 540], "select_offset": [83, 481, 515, 537], "select_paramet": [83, 89, 491, 537], "select_phas": 401, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 229, 253, 405, 435, 443, 481, 482, 491, 505, 526, 537], "select_row_subset": 83, "select_sky_box": 405, "select_sky_circl": [91, 405], "select_tim": [83, 86, 88, 92, 100, 401, 415, 437, 482, 489, 493, 537], "select_time_rang": 91, "selected_energi": 537, "selected_ev": 83, "selected_id": 537, "selected_obs_t": [91, 508, 524], "selected_offset": 537, "selected_region": 537, "selected_tim": 537, "selection_al": [120, 136], "selection_mask": [229, 253, 505], "selection_opt": [16, 120, 122, 123, 124, 128, 129, 131, 132, 133, 135, 136, 443, 459, 463, 468, 469, 472, 474, 475, 477, 478, 479, 483, 488, 489, 490, 491, 498, 504, 514, 523], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [477, 486, 503, 523, 524], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 105, 125, 126, 127, 204, 205, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 269, 270, 272, 273, 274, 275, 278, 282, 391, 392, 402, 403, 405, 408, 414, 415, 418, 419, 420, 439, 475, 503, 506], "semant": [405, 416], "semi": 230, "semiaxi": [230, 239, 242, 558, 559, 560], "semilogi": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 462, 482], "semimajor": 496, "semiminor": 496, "semver": 416, "send": 421, "sens": [391, 398, 401, 405, 407, 410, 411, 412, 475], "sensibl": 508, "sensit": [121, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 286, 311, 313, 404, 411, 438, 440, 450, 451, 457, 458, 461, 465, 467, 486, 512, 518, 528, 545], "sensitivity_estim": 462, "sensitivity_t": 462, "sensitivityestim": [121, 432, 438, 462], "sent": 396, "sentenc": [396, 411, 417], "sep": [204, 400, 408, 414, 430, 506], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 195, 204, 207, 312, 380, 391, 392, 397, 398, 399, 400, 403, 404, 405, 406, 407, 410, 411, 412, 413, 420, 439, 443, 449, 451, 452, 456, 457, 471, 475, 477, 479, 486, 490, 496, 505, 506, 508, 529, 537, 545, 546, 558, 559, 563, 564, 578, 602], "septemb": [400, 408, 410, 411, 416], "sequenc": [87, 91, 92, 100, 103, 110, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 218, 229, 253, 318, 422], "sequenti": [397, 468, 524], "seri": [87, 91, 127, 297, 302, 348, 400, 405, 406, 443, 459, 494], "serial": [16, 84, 87, 90, 91, 99, 100, 102, 103, 105, 106, 110, 111, 126, 397, 402, 406, 407, 412, 415, 436, 439, 443, 445, 452, 454, 455, 456, 457, 458, 503, 506, 509, 528], "serialis": [20, 103, 106, 110, 111, 223, 224, 227, 229, 231, 233, 234, 235, 237, 238, 240, 244, 246, 247, 248, 250, 252, 253, 254, 256, 258, 259, 260, 262, 265, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 403, 405, 407, 410, 412, 413, 414, 435, 437, 439, 443, 448, 451, 453, 454, 456, 457, 458, 509, 523, 540, 553, 598], "serializ": [16, 84, 90, 105, 126], "serialize_as_ani": [16, 84, 90, 105, 126], "serialize_method": [87, 91], "serializiaton": 403, "serilis": [26, 225, 226, 228, 230, 236, 239, 241, 242, 243, 245, 255, 257, 261, 266, 267, 268, 269, 271, 278, 283], "sersic": 414, "sersic2d": 414, "sersicspatialmodel": 414, "serv": [87, 91, 391, 396, 403, 407, 415, 420, 422, 445, 495, 544], "server": [413, 424, 426, 518], "servic": 451, "session": [394, 407, 417, 539], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 115, 122, 124, 125, 126, 127, 128, 129, 131, 132, 136, 138, 147, 153, 155, 166, 169, 172, 173, 176, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 217, 218, 219, 220, 221, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 273, 274, 275, 277, 280, 281, 282, 292, 306, 338, 340, 391, 392, 397, 400, 401, 403, 404, 406, 407, 408, 409, 411, 415, 416, 417, 418, 419, 422, 424, 426, 439, 445, 447, 449, 451, 454, 457, 458, 459, 462, 463, 464, 465, 468, 470, 471, 472, 474, 477, 479, 480, 481, 482, 483, 488, 489, 491, 496, 497, 498, 499, 502, 504, 506, 507, 508, 509, 512, 514, 515, 518, 524, 528, 536, 537, 540, 549, 551, 552, 553, 578, 600, 603, 606, 607], "set_by_coord": [196, 197, 199, 205, 208, 209, 503, 552], "set_by_idx": [196, 197, 199, 205, 208, 209, 503, 552], "set_by_pix": [196, 197, 199, 205, 208, 209, 552], "set_label": 493, "set_lim": [217, 219], "set_log": 16, "set_model": [15, 413, 469, 474, 488, 523], "set_models_paramet": 413, "set_parameter_factor": [218, 220], "set_parameters_bound": [229, 253], "set_prior": [253, 419], "set_prop_cycl": 462, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 212, "set_titl": [463, 464, 468, 472, 475, 479, 491, 495, 499, 501, 502, 505, 549, 560, 564, 568], "set_unit": [466, 498, 540], "set_xlabel": [462, 463, 464, 468, 471, 491, 493, 499, 507, 508, 509], "set_xlim": [466, 468, 469, 478, 491, 542, 568], "set_xscal": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "set_xtick": [560, 564], "set_ylabel": [462, 463, 464, 468, 483, 491, 493, 495, 499, 508, 568], "set_ylim": [462, 466, 468, 469, 470, 488, 491, 542, 568], "set_yscal": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 483, 495, 542], "set_ytick": [560, 564], "setdefault": 203, "seterr": 391, "setlevel": 479, "setter": [392, 419, 437, 443, 497], "settl": 417, "setup": [13, 393, 394, 395, 398, 403, 404, 408, 411, 419, 449, 453, 518, 603], "setuptool": [444, 603], "sever": [87, 91, 178, 396, 397, 398, 405, 406, 407, 410, 415, 418, 420, 437, 438, 439, 443, 446, 455, 456, 457, 471, 478, 496, 507, 512, 513, 514, 540, 603, 605], "seyfert": 303, "sf": [312, 605], "sfjwoyll": 502, "sgr": 526, "shade": [197, 205, 209, 499, 507, 601], "shall": 394, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 103, 106, 110, 111, 112, 117, 124, 125, 129, 130, 136, 143, 144, 145, 151, 153, 156, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 212, 242, 293, 318, 331, 347, 402, 405, 409, 441, 456, 459, 466, 468, 470, 472, 474, 479, 482, 483, 489, 493, 494, 496, 497, 498, 501, 502, 503, 504, 506, 507, 512, 513, 526, 538, 552, 553, 554, 560, 564], "shape_ax": [195, 207], "share": [196, 197, 199, 203, 205, 208, 209, 391, 396, 403, 406, 410, 413, 425, 443, 445, 457, 477, 478, 504, 505, 540, 603], "sharp": [243, 381, 382, 558], "she": [401, 406], "shear": 405, "sheet": [427, 540, 608], "shell": [52, 53, 80, 266, 267, 402, 407, 414, 424, 426, 461, 506, 554, 556, 564, 566, 603], "shell2": [266, 461, 506, 554, 556, 566], "shell2d": 52, "shell2spatialmodel": [263, 267, 506, 564], "shellspatialmodel": [80, 263, 266, 414, 443, 506, 563], "sherpa": [108, 111, 153, 200, 201, 204, 205, 214, 299, 305, 390, 391, 400, 408, 409, 411, 412, 423, 424, 426, 433, 447, 448, 449, 450, 452, 459, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 553, 576, 604], "sherpa_opt": 499, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 281, 428, 459], "shim": 398, "shini": 376, "ship": [398, 399, 408, 432, 450, 471, 486, 491, 506, 540], "shock": [50, 52, 53, 533], "short": [391, 392, 395, 396, 400, 405, 408, 411, 414, 417, 440, 489, 494, 507, 513, 540, 541, 602, 605, 608], "short_observ": [489, 493], "shortcut": [82, 428, 445], "shorten": 443, "shorter": [303, 391, 392, 405, 411, 416, 440, 471, 489, 506, 603], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 101, 103, 105, 106, 109, 110, 111, 114, 116, 119, 125, 126, 127, 128, 132, 136, 139, 140, 141, 142, 148, 154, 155, 158, 164, 166, 169, 181, 186, 187, 192, 194, 195, 196, 197, 199, 201, 203, 204, 205, 207, 208, 209, 217, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 311, 313, 318, 366, 380, 381, 382, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 416, 417, 418, 420, 421, 422, 424, 426, 427, 428, 433, 435, 457, 470, 477, 480, 481, 482, 490, 491, 497, 499, 501, 502, 503, 504, 505, 506, 507, 509, 512, 514, 536, 538, 540, 545, 547, 552, 603, 604, 606, 607], "shoulder": 285, "shouldn": [83, 391], "show": [11, 82, 87, 91, 129, 130, 131, 157, 176, 244, 388, 391, 392, 394, 403, 405, 406, 410, 411, 419, 420, 422, 432, 433, 437, 445, 450, 451, 452, 457, 458, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 516, 518, 519, 523, 524, 525, 526, 532, 533, 534, 540, 542, 543, 544, 546, 547, 549, 551, 558, 568, 587, 601, 603, 605, 608], "show_contour_label": 507, "show_dtyp": [87, 91], "show_in_brows": [87, 91, 479], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 540, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 509, "shower": [447, 512, 545], "shown": [19, 20, 26, 83, 164, 204, 205, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 386, 391, 398, 408, 409, 410, 418, 419, 421, 422, 437, 439, 464, 468, 472, 477, 479, 480, 481, 482, 489, 490, 491, 494, 502, 505, 506, 508, 509, 512, 524, 537], "showwarn": 391, "shrink": 507, "si": [83, 195, 204, 207, 229, 253, 285, 553], "side": [16, 84, 90, 105, 126, 207, 209, 294, 298, 391, 405], "sider": [602, 607], "sidereal_tim": 392, "siejkowski": 452, "sig": [384, 604, 605, 606], "sight": 528, "sigma": [19, 20, 30, 32, 48, 49, 124, 125, 126, 127, 128, 132, 133, 136, 144, 145, 153, 154, 158, 164, 165, 166, 169, 212, 214, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 292, 294, 298, 304, 311, 313, 414, 419, 463, 472, 479, 480, 486, 488, 494, 498, 499, 504, 506, 509, 523, 538, 544, 559, 575, 592, 605], "sigma1": 31, "sigma2": 31, "sigma_": [212, 559], "sigma_1": [31, 49, 157, 501], "sigma_10tev": [414, 506], "sigma_1tev": [414, 506], "sigma_2": [31, 49, 157, 501], "sigma_3": [157, 501], "sigma_err": 480, "sigma_gauss": 242, "sigma_laplac": 242, "sigma_m": 559, "sigma_nod": 506, "sigma_to_t": 605, "sigmav": 528, "sign": [217, 219, 294, 298, 394, 417, 439, 454, 538, 605], "signal": [83, 103, 106, 109, 110, 111, 181, 209, 268, 294, 298, 315, 415, 462, 468, 469, 475, 478, 488, 504, 511, 523, 528, 543, 547, 549, 602, 604, 605, 606], "signif_avg": 526, "signific": [77, 120, 124, 125, 126, 127, 128, 134, 135, 136, 138, 147, 148, 292, 294, 298, 302, 311, 313, 381, 382, 389, 396, 397, 398, 399, 406, 407, 411, 412, 415, 417, 439, 440, 448, 451, 452, 457, 458, 459, 461, 462, 468, 469, 473, 476, 477, 478, 479, 480, 488, 491, 493, 494, 496, 498, 499, 514, 518, 523, 526, 538, 540, 601, 602, 603, 608], "significance_lima": 439, "significance_map": [475, 477], "significance_map_off": 475, "significance_mask": 504, "significance_mask_inv": 504, "significancemapestim": 439, "significantli": [443, 463, 481, 512, 602], "signoff": 394, "silent": [454, 459], "silvia": 435, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 382, 391, 394, 403, 404, 405, 406, 407, 410, 411, 412, 415, 443, 457, 470, 494, 498, 503, 507, 508, 509, 526, 536, 544, 603], "similarli": [397, 399, 415, 418, 420, 443, 496, 499, 501, 503, 504, 506, 553], "simlat": 297, "simon": [456, 457, 458], "simpifi": 400, "simpl": [50, 52, 120, 144, 221, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 285, 391, 392, 403, 404, 405, 406, 407, 410, 415, 418, 419, 433, 443, 447, 451, 452, 457, 462, 464, 466, 468, 469, 470, 471, 474, 477, 491, 493, 494, 498, 499, 503, 504, 507, 508, 515, 523, 524, 526, 530, 540, 601, 602, 603], "simple_norm": 209, "simple_rebin_lc": 406, "simplefilt": 540, "simpler": [184, 399, 404, 405, 413], "simplest": [462, 468, 494], "simplex": [214, 499], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 173, 214, 218, 220, 391, 405, 406, 415, 424, 425, 426, 454, 457, 462, 463, 464, 479, 497, 504, 505, 506, 526, 553, 603, 605], "simplic": [478, 481, 499, 506, 507, 509, 513], "simplif": [402, 414, 454], "simplifi": [136, 203, 398, 400, 402, 409, 415, 433, 436, 437, 438, 440, 443, 447, 454, 463, 466, 472, 545, 606], "simu": [486, 490, 509], "simul": [45, 83, 88, 93, 103, 106, 109, 110, 111, 114, 155, 166, 169, 297, 348, 401, 404, 407, 411, 418, 419, 424, 431, 435, 437, 439, 445, 448, 450, 451, 452, 457, 458, 459, 461, 465, 467, 474, 477, 479, 484, 485, 487, 491, 492, 505, 509, 512, 518, 530, 545, 601], "simulate_3d": [411, 452, 461, 485, 486], "simulate_dataset": [433, 437, 438], "simulate_observ": 93, "simulated_d": 470, "simulated_data": 93, "simulated_model": 470, "simultan": [419, 490, 497, 506, 509, 536], "sin": [558, 559, 560, 596], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 87, 91, 197, 207, 366, 391, 392, 397, 401, 405, 407, 408, 409, 410, 411, 415, 417, 418, 419, 422, 443, 453, 454, 455, 456, 457, 458, 459, 463, 470, 475, 477, 489, 490, 493, 497, 505, 506, 509, 512, 514, 604, 607], "sine": [268, 402, 461, 554, 589, 599], "sine_model": 596, "sinetemporalmodel": [276, 506, 596], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 124, 128, 129, 132, 136, 154, 155, 166, 168, 169, 172, 176, 178, 183, 186, 187, 192, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 229, 253, 391, 397, 398, 401, 403, 404, 405, 406, 407, 408, 412, 413, 418, 419, 420, 424, 431, 433, 438, 439, 451, 457, 458, 462, 468, 470, 472, 474, 475, 488, 490, 496, 497, 502, 503, 505, 507, 509, 514, 515, 523, 526, 536, 538, 550, 552, 553, 600, 602], "singleobscubemak": 397, "singleobsimagemak": 397, "singleton": 342, "sinha": [403, 406, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 451, 452, 453, 454, 455, 456, 457, 458, 459], "sink": 408, "sinu": [268, 506], "sinusoid": [268, 596], "sipocz": [408, 433, 435, 437, 439, 448, 449, 450, 451, 452, 453], "sip\u0151cz": [454, 459], "sit": 394, "site": [355, 422, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 565, 591, 603], "situat": [405, 406, 408, 545], "six": [410, 416], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 103, 104, 106, 109, 110, 111, 113, 114, 115, 116, 119, 130, 136, 139, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 171, 172, 178, 179, 180, 183, 184, 185, 193, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 212, 223, 224, 226, 227, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 306, 340, 341, 345, 346, 347, 348, 379, 391, 399, 402, 404, 405, 424, 426, 456, 458, 462, 470, 475, 477, 481, 489, 491, 496, 502, 503, 504, 506, 512, 513, 514, 515, 526, 536, 551, 558, 559, 607], "skeleton": 407, "sketch": 407, "skill": [394, 420, 428, 507], "skimag": 452, "skip": [16, 82, 84, 90, 105, 126, 164, 379, 392, 394, 403, 405, 411, 450, 493, 505], "skip_miss": [82, 451], "sklearn": 391, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 103, 106, 109, 110, 111, 120, 144, 154, 155, 166, 169, 189, 195, 196, 197, 199, 204, 205, 207, 208, 209, 229, 253, 269, 281, 285, 287, 320, 324, 325, 349, 351, 353, 378, 390, 391, 392, 404, 410, 424, 433, 435, 449, 450, 452, 463, 468, 469, 471, 472, 475, 486, 490, 491, 496, 503, 506, 512, 513, 518, 521, 523, 524, 525, 526, 528, 535, 536, 537, 540, 545, 546, 549, 551, 553, 558, 559, 563, 564, 565, 601, 602], "sky_circl": [91, 96, 489, 493, 508, 524], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 116, 119, 406, 463, 488, 489, 493, 496, 505, 506, 524, 570], "sky_model_pntpwl": 481, "sky_reg": 495, "sky_reg_rec": 495, "sky_region": 89, "skycood": 402, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 103, 106, 110, 111, 113, 114, 125, 127, 129, 131, 154, 155, 161, 166, 169, 179, 180, 182, 184, 186, 187, 189, 190, 192, 193, 195, 196, 197, 199, 202, 204, 205, 207, 208, 209, 210, 225, 226, 229, 230, 239, 242, 253, 255, 257, 266, 267, 269, 271, 277, 279, 281, 316, 317, 350, 351, 367, 387, 392, 402, 405, 415, 418, 462, 464, 468, 470, 471, 475, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 501, 502, 503, 504, 505, 506, 508, 511, 512, 513, 514, 524, 526, 540, 544, 549, 551, 553, 562, 608], "skycoord_from_t": 405, "skycoord_to_pixel_scale_angl": 405, "skycoordconfig": 16, "skycub": [397, 410, 449, 450, 451, 452], "skydiffusecub": [402, 414, 434, 439, 440, 452], "skydiffusemap": [402, 434], "skydir": [16, 83, 103, 106, 110, 111, 112, 117, 155, 166, 176, 194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 468, 469, 470, 474, 475, 477, 479, 480, 481, 482, 486, 488, 491, 495, 497, 501, 502, 503, 504, 506, 513, 514, 523, 524, 547, 549, 550, 551, 553, 559, 560, 561, 562, 608], "skydirfunct": 528, "skydisk": 434, "skydiskelong": 402, "skyellips": [433, 434, 435, 436], "skygaussian": 433, "skygaussianelong": 402, "skyimag": [397, 410, 449, 450, 451, 452], "skyimagelist": 449, "skymap": [196, 197, 199, 205, 208, 209, 405, 448, 449, 482], "skymap_band": [482, 598], "skymap_region": 482, "skymask": 450, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 103, 106, 110, 111, 116, 119, 125, 127, 133, 136, 137, 146, 173, 214, 229, 249, 253, 287, 292, 402, 403, 404, 406, 412, 414, 415, 433, 437, 438, 439, 443, 452, 458, 463, 464, 466, 468, 469, 470, 471, 472, 474, 477, 478, 479, 480, 481, 482, 486, 488, 489, 490, 491, 493, 496, 497, 498, 499, 505, 507, 509, 513, 523, 524, 535, 536, 538, 557, 558, 559, 560, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600], "skypointsourc": 436, "skyregion": [100, 103, 106, 110, 111, 129, 154, 155, 161, 166, 169, 179, 180, 184, 199, 204, 205, 209, 229, 253, 349, 352, 405, 464, 481, 483, 504, 506, 544, 549, 553], "skyspatialmodel": [402, 452], "slack": [393, 394, 398, 414, 421, 427, 429, 432, 433, 603], "slew": 95, "slice": [83, 87, 91, 100, 101, 103, 106, 110, 111, 122, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 279, 281, 307, 397, 440, 480, 483, 489, 497, 498, 512, 552], "slice_by_coord": [125, 127, 458], "slice_by_energi": [100, 103, 106, 110, 111, 125, 127, 279, 440, 497], "slice_by_idx": [103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 440, 452, 454, 483, 489, 498, 503, 513], "slice_by_tim": [125, 127], "sliced_ax": 200, "sliced_geom": [194, 195, 204, 207], "sliced_lc": 489, "slicesampl": 420, "slide": [400, 472, 496], "slider": 503, "sliderstyl": [477, 486, 503, 523, 524], "slightli": [120, 201, 468], "slope": [27, 434], "slow": [87, 91, 214, 398, 407, 469, 499, 523, 524], "slower": [87, 91, 197, 221, 391, 399, 409, 507], "slowest": 422, "small": [382, 391, 397, 399, 405, 407, 408, 411, 413, 418, 420, 422, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 488, 489, 503, 507, 509, 512, 513, 514, 515, 559, 563, 564, 602, 603], "smaller": [27, 155, 166, 169, 184, 195, 196, 197, 199, 205, 208, 209, 384, 394, 433, 452, 481, 489, 494, 499, 503, 509, 559], "smallest": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 265, 270, 272, 273, 274, 275, 278, 282, 472], "smooth": [103, 106, 110, 111, 120, 130, 131, 144, 196, 197, 199, 205, 208, 209, 229, 230, 253, 270, 383, 386, 443, 448, 449, 450, 452, 453, 461, 475, 477, 479, 483, 486, 491, 497, 502, 503, 505, 507, 513, 523, 524, 526, 554, 558, 567, 588, 608], "smooth_kernel": [103, 106], "smooth_radiu": [103, 106], "smoothbrokenpowerlawspectralmodel": [223, 264, 414, 438, 439, 506, 583], "sn": [45, 50, 52, 53], "sn_rate": [45, 530], "snippet": [392, 411, 540], "snr": [44, 50, 53, 67, 513, 533, 534], "snr_model": 534, "snrcat": [447, 496], "snrtruelovemcke": [50, 533, 534], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 102, 106, 111, 128, 130, 132, 133, 136, 137, 146, 149, 154, 155, 161, 166, 169, 193, 196, 197, 199, 201, 205, 208, 209, 214, 217, 219, 242, 281, 292, 366, 374, 381, 382, 391, 392, 394, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 418, 420, 421, 423, 424, 426, 428, 433, 435, 443, 453, 455, 456, 459, 464, 468, 470, 472, 474, 479, 480, 481, 486, 488, 495, 496, 498, 499, 503, 504, 506, 507, 509, 512, 513, 514, 518, 524, 540, 547, 549, 553, 560, 564, 603, 604, 605, 606], "social": 417, "soft": 303, "softwar": [196, 197, 199, 208, 209, 405, 406, 408, 417, 418, 422, 503], "solar": 52, "sole": [401, 417], "solid": [194, 195, 204, 207, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281, 285, 407, 431, 433, 434, 435, 452, 475, 502, 503, 512, 543, 549, 602], "solid_angl": [194, 195, 204, 207, 503, 553], "solut": [19, 20, 26, 52, 137, 146, 153, 223, 224, 227, 231, 233, 234, 235, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 280, 282, 392, 394, 396, 398, 399, 404, 405, 407, 408, 409, 411, 413, 415, 419, 420, 425, 498, 536, 538, 540, 606], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 399, 401, 402, 403, 404, 445, 540], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 105, 126, 182, 203, 318, 326, 394, 396, 397, 398, 399, 400, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 420, 422, 424, 425, 426, 427, 428, 429, 431, 433, 435, 443, 444, 446, 448, 450, 451, 452, 457, 462, 464, 466, 468, 470, 472, 474, 475, 478, 479, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 502, 503, 505, 506, 507, 509, 512, 513, 524, 526, 528, 529, 536, 537, 540, 545, 550, 552, 602, 603, 604, 605, 607], "some_class": 391, "some_map": 164, "some_map_convolv": 164, "somehow": [399, 405, 410], "someon": [394, 396, 411], "someth": [87, 91, 391, 392, 393, 394, 396, 399, 405, 408, 409, 411, 422, 424, 426, 471, 496, 553, 603], "sometim": [19, 20, 83, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 369, 391, 394, 398, 405, 411, 422, 424, 499, 540, 602, 607], "somewhat": [408, 512], "somewher": [408, 422], "soon": [394, 405, 422], "sort": [82, 83, 87, 91, 102, 144, 354, 359, 360, 391, 408, 434, 459, 526], "sort_kei": [354, 359, 360], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394, 396, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 422, 424, 429, 431, 433, 437, 438, 443, 444, 449, 450, 451, 452, 457, 458, 459, 461, 463, 465, 466, 467, 469, 470, 471, 473, 474, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 510, 511, 513, 514, 515, 518, 521, 523, 524, 525, 528, 529, 534, 536, 538, 540, 545, 548, 549, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605], "source1": 506, "source2": 506, "source_1": [402, 407], "source_2": 402, "source_42": 407, "source_fermi_3fgl": 466, "source_fermi_3fhl": 466, "source_gammacat": 466, "source_irf_model": 402, "source_librari": 512, "source_model": 581, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 496, 526], "source_name_alia": 56, "source_name_kei": 56, "source_po": [475, 479, 502], "source_population_model": [411, 437], "source_posit": [462, 480, 508], "sourcebackground": 402, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 405, 443, 496, 504, 526, 535], "sourcecatalog1lhaaso": [55, 70, 496], "sourcecatalog2fhl": [55, 71, 496, 535], "sourcecatalog2hwc": [55, 72, 496, 535], "sourcecatalog2pc": [55, 496], "sourcecatalog3fgl": [55, 74, 466, 496, 535], "sourcecatalog3fhl": [55, 75, 229, 253, 466, 496, 505, 526, 535], "sourcecatalog3hwc": [55, 76, 496, 535], "sourcecatalog3pc": [55, 496], "sourcecatalog4fgl": [55, 78, 445, 463, 496, 535], "sourcecataloggammacat": [55, 79, 466, 496, 535], "sourcecataloghgp": [55, 80, 81, 496, 535], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 496, 535], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 432, 496], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 402, "sources_flux_map": 472, "sourcetempl": 402, "south": [481, 482, 512], "south_z20_50h": [82, 151, 155, 156, 157, 166, 462, 471, 486, 490, 501, 512], "south_z40_50h": 512, "southaz": 512, "southern": 512, "space": [87, 91, 103, 106, 110, 111, 206, 209, 277, 278, 297, 311, 313, 329, 347, 390, 391, 401, 407, 413, 420, 491, 497, 499, 503, 507, 545, 552, 578, 587], "span": 508, "spars": [195, 196, 197, 199, 204, 207, 208, 209, 420, 434, 443, 451, 482, 503], "sparsif": 415, "sparsifi": [196, 197, 199, 208, 209], "spatail": 136, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 103, 106, 110, 111, 113, 114, 125, 127, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 173, 178, 194, 195, 196, 197, 199, 200, 202, 204, 205, 207, 208, 209, 218, 220, 225, 226, 229, 230, 237, 239, 242, 253, 255, 257, 263, 266, 267, 269, 271, 277, 279, 281, 292, 384, 386, 391, 397, 400, 403, 404, 405, 407, 409, 410, 415, 424, 432, 433, 435, 436, 437, 438, 440, 443, 451, 452, 454, 457, 458, 459, 461, 463, 466, 469, 471, 472, 474, 477, 478, 480, 481, 482, 483, 486, 489, 490, 491, 493, 496, 497, 498, 500, 502, 505, 507, 510, 513, 516, 518, 523, 528, 529, 536, 538, 540, 541, 551, 552, 566, 600, 601, 602], "spatial_bin_s": [113, 114], "spatial_bin_size_min": [113, 114], "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 116, 119, 136, 173, 230, 237, 269, 279, 292, 406, 437, 463, 472, 477, 479, 480, 481, 482, 486, 488, 489, 493, 496, 497, 505, 506, 513, 524, 557, 558, 559, 560, 561, 562, 563, 564, 565], "spatial_model_point": 481, "spatial_model_registri": 506, "spatial_par": 414, "spatial_typ": 414, "spatial_width": [113, 114], "spatial_width_max": [113, 114], "spatialbackground": 402, "spatialcircleconfig": 16, "spatialconst": 402, "spatialgaussian": 402, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 173, 225, 226, 230, 237, 239, 242, 255, 257, 266, 267, 269, 277, 279, 281, 402, 414, 437, 452, 456, 496, 506, 524, 528, 535, 554, 600], "spatialtempl": 402, "spatiamodel": 164, "speak": 499, "spec": [80, 111, 391, 405, 448, 477, 482, 496, 512, 524], "spec_model_tru": 491, "special": [87, 91, 242, 391, 401, 403, 405, 406, 414, 417, 418, 432, 459, 474, 496, 497, 498, 505, 506], "specialis": [405, 411], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 85, 86, 87, 91, 94, 103, 106, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 172, 186, 187, 192, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 214, 244, 279, 292, 380, 390, 391, 392, 394, 396, 401, 403, 405, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 420, 422, 424, 425, 437, 440, 443, 445, 454, 455, 457, 463, 464, 465, 468, 470, 471, 475, 477, 478, 483, 486, 490, 491, 497, 499, 500, 501, 503, 504, 507, 508, 509, 515, 518, 526, 536, 537, 538, 540, 542, 543, 544, 546, 551, 552, 553, 607], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 88, 90, 91, 92, 96, 102, 103, 105, 106, 110, 111, 120, 122, 125, 126, 127, 128, 130, 132, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 182, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 209, 229, 244, 253, 292, 318, 320, 324, 329, 378, 401, 408, 413, 416, 420, 425, 436, 439, 443, 459, 463, 470, 474, 475, 477, 480, 483, 486, 497, 498, 499, 501, 502, 503, 505, 506, 512, 524, 536, 538, 551], "spectra": [26, 110, 111, 128, 133, 149, 214, 264, 285, 292, 397, 400, 402, 404, 406, 410, 414, 420, 431, 435, 448, 452, 463, 464, 470, 471, 478, 482, 488, 490, 491, 497, 498, 499, 502, 506, 507, 509, 528, 536, 538, 540, 602], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 102, 103, 106, 110, 111, 120, 124, 125, 127, 128, 129, 132, 135, 136, 143, 164, 166, 169, 173, 218, 220, 223, 224, 227, 229, 231, 233, 234, 235, 237, 240, 244, 246, 247, 250, 251, 253, 254, 256, 258, 259, 260, 264, 265, 269, 270, 272, 273, 274, 275, 278, 279, 280, 282, 285, 286, 303, 345, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 415, 424, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 461, 467, 471, 472, 474, 477, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 496, 497, 498, 499, 500, 502, 504, 505, 509, 510, 511, 512, 513, 516, 523, 524, 525, 528, 529, 535, 536, 538, 539, 540, 541, 547, 548, 549, 557, 558, 559, 560, 561, 562, 563, 564, 565, 584, 585, 586, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604], "spectral_analysi": [461, 467, 468], "spectral_analysis_hli": [461, 467, 469], "spectral_analysis_rad_max": [461, 467, 470], "spectral_cub": 444, "spectral_index": [19, 20, 26, 52, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "spectral_index_error": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 457], "spectral_irf_model": 402, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 110, 111, 116, 119, 120, 124, 129, 133, 135, 136, 143, 164, 166, 169, 173, 214, 229, 237, 251, 253, 269, 279, 292, 406, 409, 413, 414, 415, 419, 440, 459, 462, 463, 464, 466, 468, 470, 471, 472, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 496, 497, 498, 499, 505, 506, 507, 509, 513, 524, 526, 538, 547, 557, 558, 559, 560, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "spectral_model1": 490, "spectral_model2": 490, "spectral_model_pwl": 481, "spectral_model_registri": 506, "spectral_par": 414, "spectral_point": 407, "spectral_typ": 414, "spectralbackground": 402, "spectralbackgroundmodel": 403, "spectralcompoundmodel": 402, "spectralconst": 402, "spectralevalu": 402, "spectralexponentialcutoffpowerlaw3fgl": 410, "spectralgaussian": [402, 435], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 102, 120, 124, 125, 127, 129, 135, 143, 164, 166, 169, 173, 223, 224, 227, 229, 231, 233, 234, 235, 237, 240, 246, 247, 250, 253, 254, 256, 258, 259, 260, 265, 269, 270, 273, 274, 275, 278, 279, 282, 285, 402, 403, 406, 409, 415, 440, 443, 450, 457, 459, 496, 506, 524, 526, 535, 554, 600], "spectralregion": 405, "spectraltempl": 402, "spectroscopi": [459, 461, 487, 489, 492, 518, 549], "spectrum": [19, 20, 26, 72, 76, 98, 100, 102, 103, 106, 107, 110, 111, 125, 127, 132, 135, 140, 166, 169, 174, 178, 182, 183, 196, 197, 199, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 285, 286, 297, 303, 388, 397, 402, 403, 406, 407, 410, 411, 412, 424, 434, 435, 436, 437, 439, 443, 445, 448, 449, 450, 451, 452, 454, 456, 459, 461, 464, 465, 466, 467, 469, 477, 478, 481, 482, 483, 490, 495, 496, 497, 504, 506, 512, 513, 518, 523, 526, 528, 536, 540, 545, 553, 569, 572, 573, 575, 576, 580, 581, 583, 584, 585, 586, 603], "spectrum_analysi": 468, "spectrum_dataset": [149, 403, 468, 491, 497], "spectrum_dataset_1": 403, "spectrum_dataset_2": 403, "spectrum_dataset_empti": [491, 502], "spectrum_dataset_mak": [491, 502], "spectrum_dataset_on_off": 491, "spectrum_fitting_with_sherpa": 411, "spectrum_mak": 462, "spectrum_simul": [411, 461, 467, 471], "spectrumanalysisiact": [407, 436, 450], "spectrumdataset": [98, 99, 100, 103, 106, 111, 132, 135, 149, 177, 178, 182, 183, 237, 412, 434, 435, 436, 437, 438, 439, 440, 443, 446, 462, 464, 468, 470, 471, 479, 489, 490, 491, 493, 499, 502, 509, 549, 604], "spectrumdatasetmak": [174, 437, 443, 462, 464, 468, 470, 471, 479, 489, 490, 491, 493, 502, 549], "spectrumdatasetonoff": [98, 106, 107, 108, 110, 133, 135, 149, 177, 178, 214, 292, 388, 406, 434, 435, 436, 438, 439, 455, 456, 457, 462, 463, 464, 468, 469, 471, 478, 479, 488, 491, 493, 497, 498, 499, 502, 507, 509, 536, 538, 604], "spectrumdatasetonoffstack": 436, "spectrumdatasetsonoff": 403, "spectrumenergygroup": 451, "spectrumevalu": 439, "spectrumextract": [406, 434, 437, 450], "spectrumfit": [434, 450, 451, 452], "spectrumobserv": [403, 434, 450], "spectrumobservationlist": [434, 449], "spectrumobservationstack": 449, "spectrumonoffdataset": 406, "spectrumresult": 434, "spectrumsimul": [435, 449, 452], "spectrumstack": 451, "spectrumstat": 435, "specutil": 405, "speed": [136, 318, 394, 420, 425, 435, 437, 445, 451, 452, 459, 499], "spell": [396, 540], "spend": [404, 411], "spent": [398, 502], "sphere": [47, 346, 431, 433, 552, 558, 559, 562], "spherepointpick": 346, "spheric": [47, 391, 433, 552, 601], "sphericalcircleskyregion": [410, 491, 526], "sphinx": [394, 398, 411, 422, 434, 438, 445, 451, 452, 454, 458, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 521, 523, 524, 526, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "sphinx_gallery_conf": 422, "sphinx_gallery_thumbnail_numb": 392, "sphinxext": 392, "spill": 502, "spin": [50, 51, 54, 435, 532], "spir": [433, 452], "spiral": [22, 33, 34, 38, 45, 447], "spiralarm": [33, 38, 45, 451, 530], "spiralarm_index": [33, 34, 38], "spirit": 417, "split": [19, 20, 87, 91, 92, 116, 119, 125, 127, 196, 197, 199, 205, 208, 209, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 397, 399, 401, 403, 405, 406, 410, 412, 414, 420, 424, 440, 458, 489, 506, 529, 608], "split_by_axi": [196, 197, 199, 205, 208, 209], "split_template_model": [116, 119], "sporad": 418, "spot": 391, "spread": [82, 88, 101, 157, 166, 169, 391, 413, 440, 462, 472, 501, 545, 602], "spring": [401, 453], "sprint": [399, 400, 404, 407, 408, 409, 410, 412], "spuriou": 144, "sqrt": [19, 20, 30, 31, 32, 67, 102, 103, 106, 110, 111, 120, 124, 125, 127, 130, 136, 196, 197, 199, 201, 205, 208, 209, 212, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 293, 304, 330, 331, 332, 403, 464, 468, 472, 475, 477, 483, 486, 491, 494, 496, 499, 502, 503, 505, 513, 523, 524, 526, 538, 559, 560, 563, 564, 575, 605], "sqrt_space": [410, 437], "sqrt_t": [120, 124, 125, 127, 136, 144, 149, 294, 298, 384, 415, 428, 440, 464, 468, 469, 472, 475, 477, 479, 491, 496, 497, 498, 504, 514, 523, 526, 538, 603, 605, 608], "sqrt_ts_min": [149, 468], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 124, 125, 126, 127, 129, 136, 472, 483, 488, 489, 496, 497, 498, 523, 526], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 103, 106, 125, 126, 153, 154, 155, 161, 166, 169, 172, 193, 207, 209, 279, 301, 406, 409, 440, 461, 500, 504, 509, 510, 515, 518, 528, 538, 552, 603, 604, 605, 606], "squash": [155, 194, 195, 198, 200, 201, 204, 206, 207, 457, 462, 475, 497, 503], "squeez": [462, 501], "sr": [150, 151, 152, 163, 194, 195, 204, 207, 226, 281, 285, 462, 471, 474, 477, 479, 486, 490, 496, 497, 501, 503, 506, 512, 513, 545, 557, 565], "src": [404, 463, 480, 536], "src_above_bkg": 480, "src_event": [481, 482], "src_posit": [481, 482], "srcmap": [195, 196, 197, 199, 208, 209, 503], "ssc": [58, 60, 61, 62, 64, 65, 101, 254, 411, 581], "ssc_model": 254, "ssh": 394, "st": [53, 499, 513], "stabil": [19, 20, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 416, 486], "stabl": [11, 87, 91, 204, 214, 318, 398, 399, 400, 407, 408, 411, 416, 421, 422, 423, 425, 437, 438, 439, 445, 450, 452, 454, 499, 537], "stack": [16, 83, 86, 92, 100, 102, 103, 105, 106, 110, 111, 124, 125, 127, 137, 146, 154, 155, 161, 166, 169, 172, 196, 197, 198, 199, 204, 205, 208, 209, 212, 218, 220, 279, 361, 391, 403, 406, 407, 413, 418, 433, 436, 437, 440, 443, 448, 449, 454, 455, 457, 459, 463, 464, 469, 474, 478, 479, 488, 491, 497, 499, 502, 508, 509, 523, 524, 537, 538, 547, 550, 602], "stack_dataset": [172, 491, 502], "stack_reduc": [100, 149, 214, 436, 464, 468, 470, 477, 478, 479, 491, 497, 499, 538], "stacked_dataset": [479, 480], "stacked_fit": 468, "stacked_on_off": 475, "stackedobscubemak": 397, "stackedobsimagemak": 397, "stackoverflow": 358, "stage": [394, 407, 475, 477, 490, 497, 536, 602], "stai": [403, 421, 507], "stand": 396, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 197, 209, 214, 238, 286, 297, 317, 373, 374, 391, 392, 394, 396, 400, 402, 403, 404, 407, 409, 415, 417, 418, 420, 428, 435, 436, 452, 458, 462, 463, 469, 471, 475, 478, 480, 482, 486, 489, 490, 493, 495, 499, 503, 506, 507, 508, 509, 512, 515, 518, 523, 525, 536, 539, 544, 545, 552, 601, 602, 603], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 316, 508], "standardis": [363, 364, 376, 451], "standardise_unit": [363, 377], "standpoint": 391, "stapel": [458, 459], "star": [36, 40, 231], "starmap": [334, 338, 339], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 132, 144, 189, 206, 228, 229, 236, 241, 243, 244, 245, 253, 261, 268, 280, 283, 391, 392, 394, 396, 398, 399, 400, 401, 404, 405, 407, 408, 416, 417, 419, 420, 421, 422, 426, 427, 428, 429, 431, 436, 445, 448, 449, 450, 451, 452, 457, 459, 461, 462, 463, 464, 466, 468, 469, 470, 472, 474, 475, 477, 479, 480, 481, 482, 483, 488, 489, 490, 491, 493, 494, 495, 496, 498, 503, 506, 507, 512, 513, 514, 518, 523, 526, 527, 540, 544, 601], "start_po": [129, 351, 483], "startswith": 391, "stat": [6, 100, 102, 125, 127, 128, 129, 132, 133, 136, 214, 215, 217, 219, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 384, 391, 403, 411, 419, 420, 422, 428, 435, 437, 438, 439, 440, 443, 449, 452, 453, 454, 458, 459, 464, 466, 468, 469, 470, 472, 475, 477, 478, 479, 480, 483, 489, 491, 493, 494, 498, 499, 509, 513, 523, 524, 538, 603, 604, 605], "stat_arrai": [99, 102, 103, 106, 110, 111, 419, 459], "stat_array_dataset": [295, 296], "stat_contour": 214, "stat_kwarg": 102, "stat_max": [294, 298], "stat_nul": [125, 127, 128, 129, 132, 133, 136, 294, 298, 458, 472, 483, 489, 498, 538], "stat_per_bin": 403, "stat_profil": [214, 463, 499, 509, 540], "stat_scan": [102, 125, 127, 128, 129, 132, 133, 136, 137, 146, 214, 293, 459, 463, 468, 489, 498, 499, 509, 538], "stat_sum": [99, 100, 102, 103, 106, 110, 111, 419, 420, 456, 457, 477, 490, 497, 505, 540], "stat_sum_dataset": [295, 296], "stat_sum_no_prior": 420, "stat_surfac": [214, 440, 540], "stat_typ": [99, 102, 103, 106, 110, 111, 438, 468, 477, 490, 497, 505], "state": [16, 45, 47, 206, 214, 391, 397, 401, 403, 407, 411, 413, 415, 420, 463, 469, 507, 523, 545, 568], "stateless": 418, "statement": [391, 394, 398, 456, 458, 529], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 107, 108, 109, 120, 124, 125, 127, 128, 129, 132, 133, 136, 157, 165, 176, 182, 183, 195, 196, 197, 199, 205, 206, 208, 209, 223, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 258, 259, 260, 261, 266, 267, 268, 270, 273, 274, 275, 280, 282, 283, 284, 388, 399, 402, 422, 434, 451], "staticmethod": [402, 414, 419, 420, 506, 509], "stationari": [420, 507], "statist": [6, 19, 20, 26, 79, 99, 100, 102, 103, 106, 110, 111, 124, 125, 127, 128, 129, 132, 133, 136, 145, 149, 176, 214, 216, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 265, 270, 272, 273, 274, 275, 278, 282, 292, 293, 294, 295, 296, 298, 299, 300, 305, 311, 313, 314, 315, 403, 406, 409, 410, 411, 413, 419, 434, 438, 439, 440, 443, 445, 457, 458, 462, 463, 469, 471, 472, 474, 475, 477, 479, 483, 486, 488, 490, 491, 494, 497, 499, 502, 509, 523, 524, 536, 538, 540, 545, 547, 550, 601, 602], "statu": [19, 20, 26, 125, 127, 213, 215, 216, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 391, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 453, 458, 505, 506, 507], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 297, 317, 471, 494, 513], "stddev": 68, "stderr": 391, "stdev": [420, 507], "stdout": [326, 391], "steadi": 463, "steep": 471, "stefan": [447, 458, 459], "step": [19, 20, 26, 124, 128, 132, 133, 136, 214, 215, 221, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 391, 394, 397, 398, 401, 402, 403, 405, 406, 407, 409, 412, 416, 419, 420, 421, 422, 428, 445, 452, 453, 457, 462, 468, 470, 474, 477, 479, 480, 481, 482, 489, 490, 497, 498, 499, 502, 506, 507, 509, 523, 524, 526, 540, 548, 553], "step_sampl": 221, "stepprior": 419, "stepsampl": 420, "stepsiz": 171, "steradian": 204, "stewart": [136, 307, 472, 602], "stewart2009": [602, 605], "stick": [414, 433, 452, 499, 602], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 398, 399, 401, 404, 405, 408, 410, 411, 412, 415, 416, 418, 420, 421, 422, 450, 451, 452, 506, 509, 526, 538, 563, 564, 603], "stipul": 417, "stone": [391, 411], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 132, 134, 136, 206, 228, 229, 236, 241, 243, 244, 245, 253, 261, 268, 280, 283, 401, 428, 457, 469, 474, 475, 477, 489, 491, 493, 499, 507, 513, 523], "storag": [82, 540], "store": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 77, 82, 83, 84, 85, 86, 87, 90, 91, 105, 125, 126, 127, 130, 132, 164, 177, 178, 196, 197, 199, 205, 208, 209, 214, 215, 217, 219, 221, 229, 253, 374, 391, 392, 394, 397, 399, 400, 401, 403, 404, 407, 409, 413, 415, 417, 418, 422, 440, 443, 444, 459, 464, 470, 471, 481, 482, 491, 493, 494, 497, 498, 499, 501, 502, 503, 504, 507, 508, 512, 513, 514, 515, 526, 536, 537, 540, 545, 546, 547, 552, 553, 578, 600, 601, 603, 607], "store_per_ob": 407, "store_trac": [214, 499], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 118, 122, 124, 125, 126, 127, 128, 130, 132, 133, 136, 137, 139, 140, 141, 142, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 173, 176, 177, 182, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 287, 318, 330, 339, 354, 355, 356, 360, 373, 374, 376, 380, 384, 385, 387, 405, 418, 468, 470, 493, 502, 506], "str3": [87, 91], "straight": 392, "straightforward": [422, 606], "strang": 391, "strategi": [292, 391, 398, 405, 457, 499, 507, 606], "stream": 391, "streil": [419, 456, 457, 458], "strength": [51, 54, 419, 507, 578], "stretch": [196, 197, 199, 205, 208, 209, 381, 382, 386, 472, 477, 483, 486, 502, 503, 505, 513, 523, 524, 526, 608], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 103, 105, 106, 126, 154, 155, 161, 166, 169, 172, 201, 207, 209, 279, 459], "strict_bound": 201, "strictli": [16, 84, 90, 105, 126, 201], "strike": 536, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 105, 125, 126, 127, 128, 129, 132, 136, 157, 163, 165, 167, 172, 195, 196, 197, 199, 201, 202, 204, 205, 207, 208, 209, 217, 219, 229, 253, 318, 336, 380, 391, 404, 405, 408, 410, 417, 418, 431, 435, 443, 445, 469, 496, 504, 506, 507, 523, 552, 553], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 404, 411, 468], "stronger": 509, "strongli": [303, 406, 408, 417, 443, 474, 499, 509, 518], "structur": [17, 87, 91, 207, 312, 395, 396, 397, 400, 402, 404, 407, 411, 414, 417, 418, 424, 426, 430, 436, 437, 439, 443, 446, 458, 459, 461, 483, 497, 498, 502, 503, 504, 506, 518, 525, 527, 528, 535, 537, 552, 553, 603], "stuck": 603, "student": 394, "studi": [46, 147, 285, 312, 404, 407, 415, 425, 452, 459, 464, 466, 478, 479, 480, 483, 486, 489, 490, 493, 499, 503, 506, 512, 530, 540, 545, 549, 604], "stuff": [392, 422, 540], "stuff1": 391, "stuff2": 391, "style": [87, 91, 102, 196, 197, 199, 205, 208, 209, 388, 394, 400, 417, 447, 449, 477, 486, 501, 503, 523, 524, 540, 553, 608], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 110, 111, 116, 119, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 189, 196, 197, 198, 199, 201, 205, 206, 208, 209, 212, 391, 394, 398, 400, 401, 405, 410, 411, 412, 413, 418, 422, 431, 433, 437, 439, 440, 448, 450, 451, 479, 481, 498, 502, 504, 506, 514, 515, 536, 539, 540, 548, 601, 603, 607], "subcategori": 420, "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 126, 318, 405, 449, 452, 506, 509], "subcompon": [67, 80], "subdirectori": 221, "subfold": [221, 399, 443], "subject": 545, "submit": [396, 417], "submodul": [399, 433, 434, 439, 503, 526, 538], "subok": 318, "subpackag": [412, 418, 436, 443, 447], "subplot": [66, 67, 196, 197, 199, 205, 208, 209, 462, 464, 466, 468, 469, 470, 471, 472, 475, 477, 478, 479, 483, 488, 490, 491, 493, 495, 498, 499, 501, 503, 504, 505, 507, 508, 509, 524, 540, 542, 549, 560, 564, 568], "subplot_kw": [472, 475, 479, 491, 504, 549], "subplots_adjust": [489, 494, 495, 496], "subsect": [411, 503], "subsequ": [302, 400], "subset": [82, 83, 87, 91, 128, 132, 136, 254, 418, 447, 448, 479, 491, 505, 512, 514, 539, 601], "subspac": 405, "substanti": [87, 91], "substitut": 604, "substr": [229, 253], "subtract": 470, "succe": 222, "succeed": 125, "success": [16, 84, 90, 102, 105, 125, 126, 127, 128, 129, 132, 133, 136, 213, 214, 215, 216, 222, 419, 420, 421, 443, 464, 466, 468, 469, 470, 472, 477, 478, 479, 483, 488, 489, 491, 493, 498, 499, 505, 507, 513, 523, 524, 565], "successfulli": [102, 421, 464, 466, 468, 469, 470, 477, 478, 479, 490, 491, 493, 498, 499, 513, 523, 524], "sudo": 425, "suffer": [408, 491], "suffic": 490, "suffici": [394, 397, 404, 417, 457, 540], "suffix": [102, 125, 392, 402, 414, 506, 552, 554], "suggest": [394, 396, 398, 401, 405, 411, 413, 415, 419, 472, 481, 482, 540, 603], "suit": [197, 391, 553], "suitabl": 197, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 103, 106, 110, 111, 127, 128, 129, 131, 132, 133, 136, 137, 138, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 205, 208, 209, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 285, 294, 295, 296, 298, 300, 387, 391, 401, 402, 404, 413, 415, 419, 434, 458, 472, 477, 481, 491, 495, 497, 509, 513, 523, 524, 526, 536, 546, 602, 604], "sum_": 536, "sum_band": [196, 197], "sum_i": 130, "sum_j": 536, "sum_k": 536, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [196, 197, 199, 205, 208, 209, 229, 253, 379, 452, 475, 477, 483, 491, 497, 502, 504, 505, 513, 524], "sum_over_energy_group": [124, 128, 136, 472, 479, 483], "summar": [400, 528], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 298, 326, 330, 340, 365, 378, 392, 411, 430, 464, 469, 489, 490, 497, 512, 523, 540], "summaris": [391, 396, 398, 411], "summat": [294, 298, 397], "summer": 399, "sun": 41, "sunpi": [408, 411, 412], "super": [195, 197, 273, 274, 275, 461, 470, 481, 515, 554, 567, 588, 591], "superexpcutoffpowerlaw3fglspectralmodel": [264, 414, 506, 584], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 264, 506, 585], "superexpcutoffpowerlaw4fglspectralmodel": [264, 414, 506, 586], "superflu": [401, 491], "supernova": [28, 52, 464, 480, 506, 530, 531], "superpixel": 195, "supersed": [195, 196, 197, 207, 208, 209], "supervisor": 407, "suppli": [19, 20, 26, 87, 91, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 463, 489, 490], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 101, 103, 106, 110, 111, 115, 127, 148, 159, 164, 195, 196, 197, 198, 199, 201, 206, 207, 208, 209, 214, 229, 253, 390, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 418, 420, 425, 429, 432, 433, 435, 436, 437, 438, 439, 440, 443, 445, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 469, 471, 474, 477, 479, 486, 490, 495, 496, 497, 503, 509, 512, 513, 514, 515, 523, 539, 545, 552, 553, 598, 600, 601, 603], "suppos": [244, 280, 396, 403, 602, 604], "suppress": [153, 154, 158, 540], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 221, 391, 394, 396, 407, 421, 468, 488, 503, 540, 603], "surfac": [28, 30, 35, 36, 39, 40, 45, 214, 269, 285, 344, 410, 440, 499, 506, 530], "surface_brightness_err": 496, "surprisingli": 405, "surround": [52, 336, 391], "survei": [35, 67, 128, 231, 398, 401, 411, 428, 461, 512, 518, 519, 520, 530, 535, 540, 602], "survey_map": [461, 520, 521], "suspect": 605, "suss": [400, 417], "svg": 391, "swap": 195, "swept": 52, "swgo": 602, "swh": 417, "swhid": 417, "switch": [104, 109, 292, 391, 394, 398, 401, 421, 445, 449], "switcher": 421, "sy": [391, 427], "syllabl": 540, "symbol": 504, "symmetr": [103, 106, 110, 111, 124, 133, 136, 184, 193, 197, 239, 296, 391, 402, 433, 445, 448, 466, 490, 502, 509, 512, 528, 538, 546, 558, 559, 605], "symmetri": [197, 433], "sync": 452, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 417, "synchrotron": [254, 439, 578], "syntact": [87, 91], "syntax": [16, 87, 91, 392, 407, 410, 437, 454, 603], "synthesi": [530, 531], "synthet": 431, "system": [11, 21, 83, 87, 91, 113, 114, 151, 159, 160, 195, 196, 197, 199, 202, 204, 207, 208, 209, 229, 253, 391, 397, 402, 404, 408, 411, 412, 416, 417, 419, 425, 433, 451, 457, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 501, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 551, 552, 601, 603, 607], "systemat": [402, 415, 417, 418, 440, 468, 488, 502, 538, 602, 604], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 105, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 137, 138, 146, 147, 148, 153, 193, 206, 229, 244, 248, 253, 292, 294, 297, 298, 311, 313, 316, 363, 367, 390, 391, 392, 394, 396, 398, 399, 401, 403, 405, 407, 408, 409, 410, 411, 414, 415, 416, 418, 420, 422, 423, 424, 426, 428, 440, 444, 447, 448, 449, 452, 457, 459, 462, 463, 464, 468, 474, 477, 479, 480, 483, 486, 488, 489, 491, 493, 494, 495, 496, 498, 499, 502, 503, 504, 506, 507, 508, 509, 512, 513, 528, 532, 533, 534, 536, 538, 540, 549, 590, 591, 592, 593, 594, 595, 596, 601, 602, 603, 606, 607], "t0": [236, 261, 481, 489, 490, 493, 591, 595], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 302, 545, 591, 592, 593, 594, 595, 596, 604], "t_0": 595, "t_b": 604, "t_decai": [243, 593], "t_delta": [104, 109, 206, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283], "t_i": 302, "t_j": 536, "t_live": [83, 88], "t_max": [228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 404, 415, 493], "t_min": [228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 404, 415, 493], "t_observ": [83, 88], "t_r": 244, "t_ref": [236, 241, 243, 244, 245, 261, 268, 280, 456, 457, 481, 482, 490, 506, 591, 592, 593, 594, 595, 596, 597, 598], "t_rise": [243, 593], "t_start": [86, 537], "t_stop": [52, 86, 537], "ta": 297, "ta2": 297, "ta3": 297, "tab": [153, 396, 477, 483, 488, 498, 509, 549], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 480, "table_class": [87, 91], "table_compon": [67, 496], "table_filenam": 26, "table_format": 127, "table_from_row_data": 457, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 496], "table_model": [282, 414], "table_oth": 361, "tableau": 540, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [402, 453], "tablepsf": [412, 431, 433], "tablepsfcheck": 449, "tabul": 528, "tabular": [506, 587], "tackl": 400, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 181, 182, 183, 196, 197, 199, 205, 208, 209, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 277, 278, 279, 280, 281, 282, 284, 416, 419, 421, 440, 454, 501, 506, 509, 560, 564], "tail": [507, 512, 603], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 103, 106, 110, 111, 124, 151, 171, 173, 205, 207, 212, 214, 219, 221, 229, 238, 248, 253, 269, 284, 366, 389, 391, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 415, 420, 422, 438, 439, 440, 443, 445, 453, 454, 456, 457, 458, 462, 464, 468, 470, 471, 481, 482, 483, 490, 491, 493, 498, 499, 502, 503, 504, 506, 508, 509, 512, 524, 526, 537, 540, 553, 571, 604, 605, 606], "taken": [15, 87, 91, 103, 106, 110, 111, 125, 127, 156, 164, 183, 189, 191, 205, 206, 209, 214, 305, 392, 396, 400, 404, 456, 463, 468, 477, 478, 491, 493, 498, 501, 504, 505, 511, 512, 526, 536, 538, 549, 550, 605], "talk": [394, 396, 398, 408, 417], "tan": [197, 204, 405, 435, 468, 503, 513, 549], "tandem": 528, "tangent": [179, 226, 230, 239, 242, 255, 266, 267, 271, 277, 281], "tangenti": [195, 553], "tao87ng6": 493, "tar": [422, 512], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 103, 106, 110, 111, 115, 120, 124, 126, 134, 136, 154, 155, 166, 169, 186, 187, 191, 192, 196, 197, 199, 201, 205, 208, 209, 221, 392, 397, 398, 404, 417, 420, 421, 449, 464, 470, 479, 489, 502, 504, 507, 524], "target_nam": 549, "target_posit": [179, 464, 468, 470, 479, 488, 489, 493, 524], "target_radec": 88, "targetmetadata": [90, 126], "task": [339, 411, 415, 417, 418, 421, 422, 453, 469, 472, 502, 503, 513, 518, 519, 523, 540, 548, 601, 603, 607], "task_nam": 339, "tast": 603, "tau": [26, 51, 54, 139, 306, 419, 495, 568], "tau_0": 51, "taul": [26, 495], "taur": [26, 495], "taylor": [52, 53], "tb00058": 138, "tbc": 420, "tbd": 248, "tbl": [87, 91], "tdelta_precis": 312, "team": [396, 400, 408, 411, 413, 417, 430, 451], "technic": [393, 394, 396, 404, 411, 413, 415, 417, 420, 422, 474], "techniqu": [397, 406, 407, 409, 420, 464, 468, 477, 480, 499, 502, 504, 507, 514, 547, 550, 601, 602], "tediou": 496, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 105, 156, 404, 405, 418, 424, 428, 429, 481, 488, 491, 508, 512, 513, 515], "tell": 470, "temp": [447, 482], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 105, 106, 111, 116, 119, 126, 173, 181, 195, 196, 197, 199, 200, 201, 207, 208, 209, 215, 229, 244, 253, 277, 278, 279, 280, 281, 282, 289, 291, 307, 310, 396, 402, 403, 407, 414, 440, 454, 457, 458, 461, 471, 472, 475, 482, 503, 504, 505, 506, 528, 549, 554, 556, 566, 567, 574, 577, 582, 588, 597], "template_diffus": [505, 513], "template_extrapol": 587, "template_model": 481, "template_noextrapol": 587, "templatelightcurvetemporalmodel": 454, "templatend": [277, 278, 506], "templatendspatialmodel": [263, 506], "templatendspectralmodel": [26, 264, 445, 456, 506], "templatenpredmodel": [249, 443], "templatephasecurvetemporalmodel": [276, 454, 459, 506, 597], "templatespatialmodel": [67, 263, 413, 414, 440, 454, 455, 457, 458, 459, 481, 505, 506, 513, 565], "templatespectralmodel": [229, 253, 264, 287, 414, 506, 513, 536, 574, 577, 582, 587], "templatetemporalmodel": 454, "tempo2": [491, 540], "tempor": [218, 220, 228, 229, 236, 241, 243, 244, 245, 253, 261, 268, 269, 276, 280, 283, 302, 402, 404, 414, 415, 436, 438, 439, 440, 445, 454, 456, 457, 458, 459, 461, 463, 466, 469, 471, 472, 477, 478, 479, 481, 484, 485, 486, 493, 494, 496, 497, 498, 505, 507, 513, 516, 518, 523, 540, 541, 599, 600, 602], "temporal_model": [269, 404, 481, 482, 490, 506, 590, 591, 592, 593, 594, 595, 596, 597, 598], "temporal_model1": 490, "temporal_model2": 490, "temporal_model_map": 482, "temporal_model_registri": 506, "temporal_typ": 414, "temporalbackground": 402, "temporalmodel": [228, 236, 241, 243, 244, 245, 261, 268, 269, 280, 402, 415, 439, 454, 456, 457, 459, 554], "temporari": 518, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 402], "ten": [397, 411], "tend": [391, 560], "tension": 494, "tensorflow": [409, 411], "tent": 421, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 245, 248, 308, 315, 394, 396, 398, 400, 401, 405, 408, 411, 416, 418, 420, 441, 445, 454, 463, 472, 499, 501, 603, 605, 606], "termin": [87, 91, 102, 394, 407, 423, 424, 425, 426, 427, 464, 466, 468, 469, 470, 477, 478, 479, 491, 493, 498, 499, 513, 523, 524, 603], "terrier": [397, 400, 401, 402, 403, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 418, 420, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "test": [16, 36, 37, 84, 90, 94, 101, 102, 105, 116, 119, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 145, 147, 164, 166, 169, 196, 197, 199, 205, 208, 209, 244, 292, 293, 294, 298, 301, 311, 313, 348, 365, 366, 367, 368, 369, 370, 371, 392, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 416, 419, 421, 422, 432, 434, 435, 437, 439, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 457, 459, 464, 471, 472, 482, 486, 488, 489, 490, 493, 497, 498, 501, 507, 538, 540, 544, 545, 550, 597, 598, 602, 605, 608], "test2": 490, "test_aeff3d": 501, "test_edisp": 501, "test_events_with_gti": 537, "test_gti": 537, "test_person_txt": 391, "test_plot": 391, "test_psf": 501, "test_someth": 391, "test_using_data_fil": 370, "test_using_scipi": 371, "testcod": 392, "testoutput": 392, "testpar": 419, "teststatisticnest": [457, 459], "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 102, 103, 106, 110, 111, 112, 117, 120, 125, 127, 128, 144, 145, 150, 151, 153, 155, 156, 157, 158, 163, 164, 165, 166, 167, 169, 176, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 269, 270, 272, 273, 274, 275, 278, 282, 285, 286, 316, 317, 338, 386, 392, 402, 414, 415, 418, 419, 428, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 506, 507, 508, 509, 511, 512, 513, 514, 515, 523, 524, 526, 534, 537, 538, 544, 545, 547, 549, 550, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601], "tevcat": [444, 496], "tevcat_nam": 71, "tevpi": 431, "tevtevtev1": 479, "tex": 392, "texliv": 392, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 106, 111, 125, 127, 136, 266, 267, 317, 354, 360, 380, 392, 399, 407, 417, 422, 469, 491, 501, 512, 523, 526, 558, 559, 560, 563, 564, 569, 585, 593, 603, 605], "textcolor": 380, "textkw": 380, "tgeeea": 493, "th": 201, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 135, 154, 155, 157, 158, 161, 165, 166, 167, 169, 173, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 292, 303, 369, 384, 391, 392, 394, 396, 397, 398, 401, 404, 405, 406, 409, 410, 415, 417, 418, 420, 422, 451, 454, 455, 456, 458, 462, 464, 477, 478, 481, 488, 489, 494, 499, 502, 504, 507, 508, 509, 536, 553, 559, 560, 603, 605], "thank": [415, 437, 438, 443, 445, 459, 502, 540], "thaw": 505, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 105, 109, 113, 114, 126, 132, 140, 170, 280, 302, 338, 391, 392, 394, 396, 397, 398, 399, 400, 402, 405, 407, 408, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 429, 440, 443, 445, 457, 458, 464, 466, 470, 495, 497, 499, 504, 505, 506, 507, 508, 509, 512, 515, 528, 537, 538, 540, 545, 552, 553, 601, 602, 603, 604, 605, 607], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 105, 126, 218, 220, 229, 253, 318, 391, 392, 394, 396, 398, 399, 405, 407, 410, 417, 418, 420, 421, 422, 428, 435, 451, 464, 466, 468, 471, 474, 477, 478, 480, 482, 488, 496, 497, 498, 499, 503, 504, 506, 507, 509, 512, 514, 518, 524, 537, 540, 549, 603, 605], "theme": [445, 452, 459], "themselv": [87, 91, 407, 502, 504, 547], "theorem": [292, 311, 313, 538, 605], "theoret": 509, "therefor": [106, 392, 397, 401, 404, 405, 406, 410, 412, 414, 420, 425, 443, 459, 464, 488, 491, 499, 503, 504, 507, 508, 509, 514, 526, 538, 605, 606], "thereof": 402, "thermal": [19, 578, 602], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 157, 163, 165, 167, 171, 179, 193, 202, 319, 322, 391, 440, 461, 470, 500, 510, 513, 515, 518, 526, 558, 559, 563, 564], "theta2": [183, 193, 389, 451], "theta2_axi": 511, "theta2_max": 389, "theta2_min": 389, "theta2_t": 511, "theta2_table_en": 511, "theta_0": [33, 38], "theta_square_plot": [461, 510, 511], "theta_squared_axi": [193, 511], "thew": 496, "thi": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 103, 104, 105, 106, 109, 110, 111, 115, 120, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 140, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 178, 179, 180, 182, 184, 186, 187, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 217, 221, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 285, 292, 294, 298, 304, 311, 313, 318, 326, 336, 339, 342, 347, 348, 366, 369, 376, 378, 380, 381, 382, 386, 388, 390, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 518, 521, 523, 524, 526, 528, 529, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607], "thick": 388, "thin": [56, 330], "thing": [391, 394, 396, 399, 405, 406, 407, 408, 411, 415, 422, 431, 450, 470, 474, 490, 491, 504, 513], "think": [396, 408, 409, 411], "third": [62, 63, 87, 91, 392, 443, 496, 499, 503, 518, 525, 526, 535], "thoma": [417, 451], "thorough": [503, 528], "those": [15, 83, 182, 196, 197, 199, 205, 208, 209, 214, 218, 220, 229, 253, 326, 380, 391, 394, 396, 398, 400, 405, 407, 410, 411, 412, 413, 414, 416, 422, 423, 424, 426, 427, 437, 440, 488, 493, 499, 503, 504, 505, 508, 518, 519, 526, 538, 540, 549, 607], "though": [15, 394, 399, 405, 406, 407, 409, 411, 469, 506, 523], "thought": [396, 405], "three": [87, 91, 164, 297, 391, 400, 403, 405, 417, 421, 459, 479, 481, 488, 494, 503, 507, 509, 518, 525, 545, 552, 602], "threshold": [67, 103, 110, 120, 125, 126, 127, 134, 136, 144, 145, 153, 154, 158, 171, 182, 206, 292, 380, 381, 382, 405, 433, 439, 440, 462, 468, 470, 472, 479, 483, 488, 496, 497, 499, 502, 504, 512, 523, 536, 538], "threshold_alpha": 171, "through": [41, 83, 87, 91, 317, 318, 388, 394, 396, 404, 405, 411, 415, 416, 420, 425, 429, 443, 454, 463, 468, 472, 482, 494, 499, 502, 503, 504, 505, 507, 513, 514, 540, 545, 552, 602, 605], "throughout": [13, 398, 400, 401, 405, 407, 450, 496, 507], "throught": 483, "thrown": 506, "thu": [391, 398, 405, 408, 409, 411, 447, 462, 463, 474, 475, 479, 481, 498, 600, 606], "thumbnail": 443, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 197, 400, 490], "tibaldo": 448, "tick": [456, 457], "tick_param": 462, "ticker": 380, "tight_layout": [489, 499, 509, 560, 564, 608], "tightli": 410, "tikonov": 419, "tild": [195, 207], "tile": [195, 197], "tilt": [259, 279, 402, 413, 414, 419, 432, 438, 474, 477, 478, 481, 482, 486, 497, 506, 513, 523, 524, 547, 553, 561, 582, 587], "tilt_prior": 419, "tim": 458, "time": [19, 20, 35, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 113, 125, 126, 127, 132, 136, 139, 140, 148, 172, 178, 189, 191, 196, 197, 198, 199, 200, 205, 206, 208, 209, 214, 217, 219, 221, 228, 231, 236, 241, 243, 244, 245, 261, 268, 269, 280, 283, 297, 302, 306, 312, 348, 368, 372, 373, 374, 375, 391, 392, 394, 396, 397, 398, 399, 401, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 420, 421, 422, 424, 428, 432, 433, 436, 437, 438, 440, 443, 447, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 463, 465, 466, 468, 469, 470, 471, 472, 475, 477, 478, 479, 480, 482, 483, 488, 491, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 523, 524, 526, 532, 533, 534, 536, 537, 538, 540, 545, 549, 553, 559, 560, 568, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 603, 604, 605, 606], "time1": 306, "time2": 306, "time_axi": [196, 197, 199, 200, 205, 208, 209, 297, 482, 493, 503, 553], "time_bin": 406, "time_bin_end": 406, "time_bin_s": 406, "time_bin_start": 406, "time_bound": 206, "time_box": 91, "time_column": 415, "time_delta": [86, 206, 372, 375], "time_edg": [206, 494, 503], "time_filt": 89, "time_format": [127, 206, 457, 490], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 132, 469, 474, 475, 477, 482, 488, 489, 493, 523], "time_map_axi": [206, 503], "time_map_axis_contigu": 503, "time_max": [100, 125, 127, 206, 405, 406, 407, 482, 488, 493, 496, 503], "time_mid": [206, 494], "time_min": [100, 125, 127, 206, 405, 406, 407, 482, 488, 493, 496, 503], "time_rang": [91, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 482, 590, 591, 592, 593, 594, 595, 596, 597, 598], "time_ref": [83, 85, 86, 91, 94, 200], "time_ref_default": 86, "time_ref_from_dict": 607, "time_relative_to_ref": 607, "time_resolved_spectroscopi": [461, 492, 493], "time_seri": 297, "time_start": [85, 86, 91, 189, 406], "time_step": 406, "time_stop": [85, 86, 91, 406], "time_sum": [86, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283], "timedelta": [87, 91, 94, 206, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 348, 372, 375, 607], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [396, 398, 451], "timemapaxi": [127, 148, 198, 200, 443, 458, 459, 489, 490, 493, 494], "timerangeconfig": 16, "timeref": 481, "timescal": [140, 236, 303, 416, 494], "timeseri": 406, "timesi": [94, 455, 457, 481], "timestamp": 391, "timeunit": 481, "timmer": [297, 459], "tini": [479, 512], "tip": 540, "titl": [392, 396, 483, 495, 608], "title2": 392, "title_fmt": 507, "tiziani": 449, "tke": 513, "tm": [87, 91], "tmax": 406, "tmid": [88, 457, 479, 502, 508, 524], "tmin": 406, "to_2d": [151, 515], "to_3d": [150, 456, 458], "to_bands_hdu": [194, 195, 204, 207], "to_binsz": [195, 204, 207, 443], "to_binsz_wc": 204, "to_contigu": [206, 503], "to_counts_hdulist": 108, "to_cub": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 440, 475, 553], "to_dict": [19, 20, 26, 99, 102, 103, 106, 110, 111, 213, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 418, 509], "to_edisp_kernel": [158, 459, 544], "to_edisp_kernel_map": [155, 443, 544], "to_energy_dependent_table_psf": 451, "to_even_npix": 207, "to_fits_head": 85, "to_fram": 202, "to_gti": [206, 458], "to_hdu": [196, 197, 208, 209], "to_hdulist": [103, 106, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 196, 197, 203, 204, 205, 208, 209, 503], "to_head": [84, 90, 105, 126, 195, 198, 200, 201, 206, 207, 418], "to_html": 391, "to_imag": [103, 106, 110, 111, 153, 154, 164, 166, 169, 194, 195, 204, 207, 413, 437, 438, 462, 475, 479, 497, 513, 550, 553], "to_json": [16, 84, 90, 105, 126], "to_map": [125, 127], "to_map_dataset": [106, 111], "to_mask": [103, 106, 110, 111, 495], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 229, 253, 443, 496], "to_node_typ": 201, "to_nsid": [195, 197], "to_odd_npix": 207, "to_panda": [87, 91], "to_parameters_t": [229, 253, 463, 464, 468, 469, 470, 474, 477, 489, 499, 509, 524], "to_pixel": [405, 468, 479, 495, 502, 506, 549, 558, 559, 560], "to_polygon": 405, "to_psf3d": [157, 165, 167], "to_python": [16, 84, 90, 105, 126], "to_region": [225, 226, 229, 230, 239, 242, 253, 257, 266, 267, 281, 405, 437, 506, 558, 559, 560], "to_region_map_dataset": [103, 106, 110, 111, 497], "to_region_nd_map": [154, 155, 161, 166, 169, 197, 205, 209, 440, 443, 513], "to_region_nd_map_histogram": [209, 457], "to_sed_typ": 415, "to_sherpa": [437, 451, 452], "to_spectrum": 443, "to_spectrum_dataset": [100, 103, 106, 110, 111, 413, 436, 438, 491, 497, 509], "to_st": 457, "to_str": [457, 462], "to_swap": [195, 196, 197], "to_tabl": [102, 127, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 200, 201, 205, 206, 218, 220, 244, 443, 459, 463, 466, 468, 469, 479, 483, 486, 488, 490, 496, 498, 506, 526, 538], "to_table_hdu": [83, 86, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 200, 201, 503], "to_table_psf": 449, "to_template_sky_model": [229, 253], "to_template_spectral_model": [229, 253, 414], "to_unit": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 196, 197, 199, 205, 208, 209], "to_wc": [196, 197], "to_wcs_geom": [195, 204, 553], "to_wcs_til": [195, 197], "to_yaml": [16, 84, 90, 105, 126, 229, 253, 402, 418, 506, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "tob": 469, "todai": 417, "todo": [13, 79, 99, 164, 282, 392, 415, 434, 512, 530, 531, 607], "tof": 163, "togeth": [100, 103, 106, 110, 111, 128, 132, 229, 253, 388, 391, 404, 408, 411, 423, 435, 463, 475, 477, 478, 483, 489, 497, 499, 502, 505, 506, 507, 508, 509, 515, 524, 536, 537, 603], "tol": [292, 499], "toler": [86, 100, 132, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 368, 499], "tolist": 499, "tomato": 463, "toml": 440, "ton": [303, 512], "too": [391, 396, 397, 420, 442, 443, 456, 457, 458, 499, 504, 507], "took": [416, 420], "tool": [6, 13, 196, 197, 199, 208, 209, 390, 391, 394, 398, 400, 402, 404, 407, 408, 411, 417, 429, 437, 448, 451, 452, 480, 483, 490, 497, 499, 503, 508, 512, 513, 515, 528, 540, 576, 601, 602], "toolbox": [407, 448], "top": [16, 84, 90, 105, 110, 111, 126, 378, 387, 391, 396, 407, 411, 413, 425, 451, 470, 472, 479, 483, 488, 490, 494, 496, 502, 526, 540, 553, 601, 603, 607], "top_five_ts_3fhl": 526, "tophat2dkernel": 124, "topic": [396, 400, 411, 419, 526], "total": [51, 67, 99, 102, 103, 106, 110, 111, 128, 129, 132, 133, 143, 176, 191, 195, 215, 228, 236, 241, 243, 244, 245, 261, 268, 280, 283, 315, 399, 415, 419, 424, 426, 458, 461, 463, 464, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 502, 503, 504, 505, 507, 509, 510, 513, 517, 520, 522, 523, 524, 526, 527, 530, 536, 540, 545, 555, 566, 578, 588, 599, 602], "total_jfact": 495, "total_jfact_decai": 495, "total_model": 402, "total_obstim": 502, "total_stat": [215, 216, 420, 463, 493, 499, 604], "touch": [86, 432, 518], "tour": 518, "toward": [336, 398, 405, 411, 453, 507], "tox": [355, 392, 394, 454, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 565, 591], "tqdm": 540, "trace": [214, 215, 216, 440, 499], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 391], "track": [85, 94, 391, 394, 400, 406, 417, 445, 505], "tracker": [394, 405, 421, 459], "traction": 507, "tradit": [420, 507], "tradition": [420, 506, 507, 604], "train": 416, "traitlet": [407, 418], "traittyp": 418, "transfer": 418, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 164, 198, 200, 201, 206, 207, 217, 219, 221, 229, 253, 320, 324, 347, 352, 391, 405, 407, 415, 419, 420, 431, 433, 449, 452, 472, 479, 502, 509, 552, 558, 559, 607], "transit": [27, 381, 382, 398, 432, 433, 451, 514, 602, 608], "transit_map": 514, "transit_numb": 514, "transitsmap_crab": 514, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 407, 538], "transpar": 406, "transport": 503, "transpos": 452, "trapezoid": [150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 288, 329], "trapz": 329, "trapz_loglog": 438, "trash": 434, "travi": [437, 439, 443], "treat": [83, 95, 424, 456, 457, 468, 481, 606], "treatment": [443, 468, 477, 602], "trend": 481, "tri": [77, 399, 405], "tributor": 417, "tricki": 405, "trigger": [369, 391, 421, 514], "trim": [103, 106, 154, 155, 161, 166, 169, 172, 207, 209, 279], "tripl": 157, "trivial": 398, "troubl": 603, "troubleshoot": [424, 425, 426], "trough": 494, "trucfvq0": 493, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 124, 125, 126, 127, 128, 132, 133, 136, 137, 143, 146, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 176, 182, 183, 186, 187, 189, 190, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 214, 215, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 311, 313, 315, 318, 326, 327, 330, 348, 360, 362, 379, 384, 388, 391, 397, 404, 405, 406, 407, 414, 415, 418, 420, 434, 438, 439, 450, 452, 453, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 513, 514, 521, 523, 524, 526, 530, 536, 538, 540, 545, 550, 552, 553, 557, 558, 559, 562, 563, 565, 587, 602, 605, 608], "truelov": 53, "truncat": [136, 336, 443], "truncation_valu": [299, 305], "trust": [16, 84, 90, 105, 126], "trustworthi": 419, "truth": [507, 509], "try": [16, 77, 84, 90, 105, 126, 196, 197, 199, 205, 208, 209, 391, 392, 401, 405, 411, 421, 422, 428, 433, 466, 468, 470, 481, 482, 488, 496, 499, 503, 526, 603], "ts2": 297, "ts3": 297, "ts_asimov": 313, "ts_image_estim": 479, "ts_scan": [125, 127], "ts_threshold": [148, 292], "ts_threshold_ul": [491, 538], "ts_to_sigma": [480, 605], "tsimageestim": 451, "tsmap": 459, "tsmap_est": 384, "tsmapestim": [121, 146, 147, 384, 412, 415, 438, 439, 441, 443, 457, 459, 472, 479, 540], "tstart": [88, 91, 404, 406, 471, 481, 486, 489, 490, 493, 512], "tstop": [88, 404, 406, 471, 481, 486, 489, 493, 512], "tt": [86, 94, 373, 374, 417, 482, 489, 493, 607], "tth_sec3": 201, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 102, 103, 105, 106, 110, 111, 126, 130, 136, 150, 151, 153, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 167, 169, 172, 177, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 279, 282, 294, 298, 301, 330, 340, 347, 391, 503, 552], "turn": [83, 88, 392, 394, 405, 512, 600], "tutori": [82, 99, 122, 132, 135, 160, 181, 219, 221, 222, 238, 248, 284, 391, 394, 395, 400, 403, 404, 405, 406, 407, 408, 409, 412, 420, 422, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474, 476, 477, 478, 479, 481, 482, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 517, 520, 522, 523, 524, 525, 526, 527, 540, 541, 543, 552, 600, 603], "tutorials_jupyt": [421, 518], "tutorials_python": 518, "tweak": [407, 443, 459, 503], "twice": [124, 552, 606], "twinx": 462, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 102, 103, 106, 110, 111, 120, 139, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 172, 177, 179, 195, 196, 197, 198, 199, 201, 204, 205, 207, 208, 209, 214, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 311, 313, 348, 358, 380, 385, 388, 390, 391, 392, 394, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 415, 416, 417, 419, 421, 422, 424, 445, 451, 453, 457, 459, 469, 470, 477, 478, 480, 483, 490, 496, 497, 498, 499, 501, 503, 504, 506, 508, 509, 512, 514, 523, 524, 530, 536, 537, 538, 540, 549, 552, 553, 570, 605, 606], "txt": [127, 416, 418, 421, 505, 513], "tyler": 445, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 102, 103, 105, 115, 124, 125, 126, 127, 129, 136, 170, 176, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 318, 348, 394, 397, 400, 401, 402, 403, 405, 406, 407, 410, 414, 415, 417, 419, 422, 423, 428, 436, 443, 449, 450, 451, 457, 459, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 493, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 523, 524, 526, 528, 540, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602, 603], "typeerror": [16, 84, 90, 105, 126, 318, 405, 415, 419], "typic": [125, 397, 400, 402, 409, 413, 414, 415, 416, 418, 421, 424, 425, 464, 470, 475, 483, 486, 488, 489, 496, 497, 498, 501, 504, 506, 508, 528, 535, 536, 537, 545, 549, 601, 602], "typo": [391, 429, 455, 456, 459], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 103, 106, 110, 111, 116, 119, 120, 125, 127, 129, 131, 136, 144, 145, 153, 155, 164, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 208, 209, 223, 224, 227, 231, 233, 234, 235, 240, 244, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 285, 286, 297, 316, 317, 318, 338, 386, 391, 394, 398, 399, 400, 406, 407, 408, 409, 414, 415, 418, 419, 432, 433, 434, 451, 452, 453, 462, 463, 464, 466, 468, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 523, 524, 526, 530, 537, 538, 540, 542, 547, 549, 550, 553, 558, 560, 561, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597], "u03c3": 480, "u18": [33, 38], "uc": [87, 91], "ufunc": [196, 197, 199, 205, 208, 209, 470, 493], "ui": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 156, 250, 285, 286], "uk": [311, 313], "ul": [67, 124, 125, 127, 128, 129, 132, 133, 136, 293, 478, 483, 490, 496], "ultim": 391, "ultranest": [221, 420, 507], "ultranest_result": 222, "un": [403, 417, 440, 505], "unambigu": 506, "unbehaun": 458, "unbin": [403, 404, 452], "unboundlocalerror": 391, "unbundl": 608, "unc_": 77, "uncertaint": 409, "uncertainti": [52, 77, 103, 106, 110, 111, 294, 298, 395, 408, 420, 450, 466, 468, 491, 499, 507, 509, 524, 601, 602, 604], "unchang": [103, 106, 110, 111, 116, 119, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 169, 194, 195, 196, 197, 199, 200, 204, 205, 207, 208, 209, 451], "unclear": [391, 401, 402, 408, 418], "uncom": [407, 507, 512], "undefin": 606, "under": [72, 91, 134, 137, 138, 146, 147, 311, 391, 394, 395, 400, 408, 417, 452, 453, 463, 469, 518, 523, 525, 536, 605, 606], "underestim": 538, "underflow": 206, "underli": [16, 84, 87, 90, 91, 105, 126, 204, 404, 466, 496, 503, 509, 526, 528, 537, 549, 552], "underscor": 391, "understand": [407, 424, 426, 429, 437, 438, 464, 468, 469, 470, 474, 481, 482, 489, 490, 494, 503, 504, 505, 512, 523, 524, 603], "undertak": 411, "underwai": 420, "unevenli": [139, 306], "unexpect": [16, 84, 90, 105, 126, 514], "unfold": 602, "unfreez": [19, 20, 26, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 578], "unfreeze_al": [218, 220, 505], "unfrozen": 547, "unheard": 603, "uni": [419, 421], "uni_prior_stat_sum": 509, "unicod": [87, 91], "unid": 67, "unidimension": 200, "unif": 437, "unifi": [87, 91, 395, 400, 405, 432, 435, 437, 438, 439, 440, 443, 452, 453, 602], "uniform": [164, 214, 219, 221, 238, 248, 284, 347, 391, 400, 402, 403, 413, 415, 419, 420, 434, 435, 439, 443, 459, 464, 503, 507, 509, 601], "uniform_filt": [130, 209], "uniformli": [404, 538], "uniformprior": [262, 419, 459, 507, 509], "uninstal": 390, "union": [84, 86, 89, 90, 103, 105, 106, 126, 204, 353, 405, 406, 417, 418, 435, 536], "uniqu": [87, 91, 100, 153, 195, 196, 197, 198, 199, 205, 207, 208, 209, 218, 220, 229, 237, 253, 269, 279, 384, 401, 402, 403, 404, 414, 417, 438, 459, 469, 497, 506, 514, 553, 600], "unique_id": 506, "unique_paramet": [218, 220], "uniquifi": [87, 91], "unit": [19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 102, 103, 106, 108, 110, 111, 112, 116, 117, 119, 120, 125, 127, 129, 131, 136, 144, 145, 150, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 173, 176, 179, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 219, 223, 224, 226, 227, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 254, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 284, 285, 286, 297, 306, 316, 317, 318, 348, 362, 363, 364, 366, 375, 376, 377, 380, 381, 382, 386, 392, 400, 402, 405, 407, 409, 414, 415, 419, 420, 432, 433, 435, 443, 445, 451, 452, 454, 455, 456, 457, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 511, 512, 513, 514, 515, 523, 524, 526, 530, 532, 533, 534, 537, 538, 540, 542, 544, 545, 547, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 602], "unit_string_format": [457, 462], "unitbas": 318, "uniti": [130, 198, 281, 420, 455, 560], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 237, 279], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [462, 471, 474, 477, 479, 486, 490, 512], "univers": [25, 196, 197, 199, 205, 208, 209, 602], "univsers": 20, "unknown": [16, 84, 90, 102, 105, 126, 298, 472, 499, 602, 604, 605], "unless": [90, 93, 95, 128, 129, 132, 136, 172, 318, 390, 397, 416, 418, 501], "unlik": [87, 91, 292, 398, 409, 507], "unmaintain": 433, "unmask": [87, 91], "unnam": [87, 91, 202], "unnecessari": [443, 454, 477], "unneed": 457, "unphys": 606, "unrealist": 391, "unrel": 607, "unreli": 512, "unsaf": 391, "unstabl": [391, 512], "unsu": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282], "unsupport": 408, "untar": 512, "until": [221, 391, 398, 405, 416, 450, 507], "unus": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 407, 435, 437], "unusu": 396, "unweight": [106, 111], "unzip": 512, "uoyeaimr": 493, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 102, 129, 131, 136, 157, 163, 165, 167, 204, 318, 391, 392, 395, 396, 398, 399, 400, 403, 405, 407, 408, 409, 411, 413, 417, 419, 420, 422, 423, 424, 426, 428, 431, 433, 434, 435, 436, 437, 438, 439, 440, 443, 447, 449, 450, 451, 452, 453, 459, 468, 469, 477, 480, 481, 509, 512, 513, 553, 603], "upcast": 318, "upcom": [399, 400], "updat": [15, 16, 84, 87, 90, 91, 104, 105, 109, 126, 203, 217, 219, 221, 222, 229, 253, 281, 292, 338, 358, 391, 394, 396, 397, 398, 399, 400, 403, 408, 413, 415, 417, 418, 420, 421, 422, 424, 425, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 449, 450, 451, 452, 454, 457, 458, 459, 503, 506, 507, 551, 552], "update_config": 15, "update_forward_ref": [16, 84, 90, 105, 126], "update_from_dict": [217, 219], "update_link_label": [229, 253], "update_parameters_from_t": [229, 253], "update_scal": [217, 219], "updated_model": 420, "upgrad": [195, 390, 416, 425], "upload": [408, 421], "upon": [103, 106, 110, 111, 400, 474, 505, 512, 536], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 102, 124, 125, 126, 127, 128, 129, 132, 133, 136, 137, 146, 153, 201, 206, 214, 223, 224, 227, 228, 231, 233, 234, 235, 236, 240, 241, 243, 244, 245, 246, 247, 250, 254, 256, 258, 259, 260, 261, 265, 268, 270, 272, 273, 274, 275, 278, 280, 282, 283, 293, 294, 295, 298, 418, 428, 439, 443, 450, 451, 452, 458, 468, 472, 483, 488, 497, 498, 502, 523, 536, 538, 540], "upper_error": 127, "upsampl": [166, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 434, 454], "upsample_geom": 166, "upstream": [391, 394, 421], "upward": [294, 298], "uqsinpav": 493, "url": 399, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 118, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 288, 293, 297, 299, 311, 312, 313, 316, 318, 326, 329, 330, 331, 338, 339, 342, 347, 348, 355, 358, 374, 375, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423, 424, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 466, 468, 470, 471, 472, 474, 475, 477, 478, 479, 482, 483, 486, 489, 490, 491, 493, 494, 495, 496, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 518, 519, 521, 525, 526, 529, 530, 540, 542, 543, 544, 546, 550, 551, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 587, 588, 590, 591, 592, 593, 594, 595, 596, 597, 598, 601, 602, 603, 604, 605, 607, 608], "usabl": 391, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 105, 122, 126, 132, 135, 160, 181, 194, 195, 204, 207, 219, 221, 238, 248, 284, 342, 392, 397, 401, 402, 404, 406, 410, 415, 436, 457, 458, 496, 502, 504, 505, 518, 603], "use_cach": 254, "use_center_as_plot_label": 201, "use_enum_valu": [16, 84, 90, 105, 126], "use_evaluation_region": [229, 253], "use_fft": 209, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [176, 183, 186, 187, 189, 190, 443, 464], "useless": 512, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 124, 129, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 391, 392, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 429, 436, 443, 444, 450, 451, 452, 454, 469, 472, 480, 481, 482, 497, 498, 501, 503, 504, 505, 506, 508, 518, 523, 537, 538, 539, 540, 545, 549, 552, 555, 562, 566, 588, 599, 600, 603], "userdataset": 403, "usernam": 394, "userwarn": [468, 470, 478, 479, 483, 513], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 603, "usual": [29, 82, 83, 125, 144, 150, 151, 152, 164, 205, 326, 391, 392, 394, 396, 397, 398, 399, 405, 406, 411, 417, 420, 422, 457, 462, 463, 464, 466, 468, 470, 471, 474, 475, 479, 481, 482, 486, 488, 489, 490, 493, 494, 495, 497, 504, 507, 508, 511, 514, 524, 528, 536, 540, 542, 543, 544, 546, 549, 553, 559, 600, 602, 603, 604], "ut1": 607, "utc": [86, 88, 105, 126, 372, 481, 488, 489, 493, 503, 506, 590, 591, 592, 593, 594, 595, 596, 597, 598, 607], "utf": [87, 91], "utf8": [16, 84, 90, 105, 126], "util": [6, 96, 105, 112, 116, 117, 118, 119, 126, 127, 129, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 185, 186, 187, 188, 189, 190, 191, 192, 193, 291, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 391, 400, 402, 403, 404, 405, 415, 431, 434, 435, 436, 437, 444, 445, 448, 449, 450, 451, 452, 453, 457, 458, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 511, 512, 513, 514, 515, 523, 524, 526, 528, 529, 540, 602], "utilis": [145, 292, 392, 424, 426, 462, 468, 472, 480, 494, 498, 503, 508, 514, 524, 537, 540, 547], "v": [26, 31, 32, 37, 87, 91, 157, 163, 165, 166, 167, 169, 178, 185, 203, 280, 292, 322, 394, 399, 406, 407, 418, 419, 420, 421, 422, 445, 462, 488, 493, 495, 507, 508, 523], "v0": [95, 398, 399, 402, 403, 405, 408, 410, 411, 416, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 452, 453, 454, 481, 482, 501, 505, 512], "v1": [13, 101, 391, 398, 400, 402, 407, 408, 409, 410, 416, 417, 421, 437, 438, 439, 445, 450, 454, 455, 456, 457, 458, 459], "v15": 459, "v2": [19, 20, 26, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 417, 418, 443, 451, 458, 477], "v3": [435, 477], "v_0": [37, 49], "v_glat": 325, "v_glon": 325, "va": 558, "vagu": 396, "vain": 394, "val": [87, 91, 196, 197, 199, 205, 208, 209, 218, 220, 503, 552], "valfmt": 380, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 107, 125, 126, 129, 138, 147, 168, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 311, 313, 318, 336, 390, 391, 400, 404, 407, 408, 417, 437, 445, 454, 464, 468, 493, 499, 502, 503, 506, 513, 538, 540, 545, 602], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "valid_interv": 493, "valid_tim": 493, "validate_al": 418, "validate_assign": [16, 84, 90, 105, 126, 418], "validate_default": [16, 84, 90, 105, 126], "validate_earth_loc": 90, "validate_loc": 418, "validate_scalar": 90, "validate_zenith_angl": 418, "validationerror": [16, 84, 90, 105, 126, 418], "valle": 38, "valleespir": 530, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 103, 105, 106, 110, 111, 113, 114, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 172, 176, 182, 183, 185, 186, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 214, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 293, 294, 296, 298, 299, 301, 302, 303, 306, 311, 313, 318, 322, 330, 331, 345, 348, 358, 362, 377, 380, 381, 382, 392, 394, 397, 402, 403, 405, 407, 409, 411, 414, 415, 418, 420, 434, 437, 443, 454, 457, 458, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 504, 505, 506, 507, 508, 512, 513, 514, 515, 518, 523, 524, 526, 528, 532, 533, 534, 538, 540, 544, 552, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 603, 604, 605, 606], "value_rang": 91, "value_scan": 293, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 229, 253, 391, 405, 418], "values_equ": [87, 91], "values_err": 491, "values_scal": [150, 151, 152, 205, 209, 244, 277, 281, 282, 330, 455, 457, 482, 501], "vanilla": [87, 91], "var": [304, 394, 424, 426], "vari": [68, 104, 109, 132, 164, 214, 330, 358, 403, 405, 406, 416, 437, 440, 461, 463, 474, 479, 480, 482, 487, 492, 493, 502, 506, 509, 513, 518], "variability_amplitud": 494, "variability_amplitude_100": 494, "variability_amplitude_error": 494, "variability_amplitude_signific": 494, "variability_estim": [461, 492, 494], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 105, 126, 139, 140, 209, 294, 298, 301, 302, 303, 304, 306, 312, 329, 356, 391, 392, 394, 404, 406, 407, 422, 424, 426, 432, 433, 449, 450, 451, 457, 458, 459, 461, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 482, 483, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 518, 523, 524, 526, 545, 603, 604, 605], "varianc": [96, 141, 142, 303, 304, 317, 406, 458, 508, 547], "variant": 422, "variat": [140, 245, 303, 397, 407, 462, 494, 501, 502, 545, 550, 605], "varieti": [402, 601], "variou": [122, 128, 129, 132, 133, 136, 145, 391, 397, 401, 403, 406, 415, 418, 422, 424, 443, 444, 458, 463, 466, 469, 472, 478, 480, 488, 498, 499, 523, 536, 540, 601, 607], "vasco": 459, "vast": [408, 445], "vaughan": [304, 494], "ve": [391, 392, 394, 507, 603], "vector": [194, 195, 196, 197, 199, 204, 205, 207, 208, 209, 503, 544, 552], "vega": 452, "vel": 491, "vel_di": [45, 530], "vela": [66, 431, 466, 491, 526], "veloc": [31, 32, 37, 45, 49, 322, 325], "ver": 503, "verbos": [11, 82, 392, 414, 603, 605], "veri": [63, 87, 91, 144, 214, 381, 390, 391, 392, 393, 396, 397, 402, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 418, 420, 422, 453, 462, 463, 471, 494, 496, 498, 499, 503, 507, 509, 513, 526, 536, 540, 553, 563, 564, 600, 602, 603, 604], "verif": [100, 229, 253, 354, 357, 468, 478, 513], "verifi": [218, 220, 242, 292, 391, 404, 496, 540], "verifywarn": 540, "verita": [97, 424, 429, 513], "versa": 195, "version": [11, 78, 85, 87, 91, 127, 184, 390, 392, 394, 395, 398, 399, 400, 401, 405, 408, 411, 417, 418, 419, 420, 422, 423, 424, 425, 427, 429, 431, 432, 433, 434, 436, 437, 442, 444, 445, 447, 450, 451, 452, 454, 455, 457, 458, 459, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 538, 603], "versu": [150, 156, 292, 294, 298, 512, 534], "vert": 260, "vertex": 405, "vhe": [464, 528], "vi": 35, "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 104, 109, 197, 202, 212, 390, 392, 394, 399, 403, 405, 406, 407, 408, 409, 410, 412, 414, 417, 418, 419, 420, 421, 422, 424, 425, 432, 440, 448, 450, 451, 452, 456, 457, 459, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 521, 523, 524, 526, 540, 544, 545, 549, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 603, 607], "viabil": 418, "vice": 195, "vicin": [420, 507], "victor": 447, "view": [83, 87, 91, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 165, 167, 168, 173, 196, 197, 199, 203, 205, 208, 209, 237, 320, 324, 378, 391, 405, 420, 433, 438, 443, 445, 452, 453, 468, 470, 475, 477, 481, 493, 497, 501, 502, 504, 507, 512, 513, 540, 542, 543, 544, 545, 546, 547, 549, 602], "vika": 443, "vila": 459, "vin\u00edciu": 450, "viridi": [470, 495], "virtual": [394, 422, 424, 425, 426, 603], "visibl": [87, 91, 381, 382, 399, 443, 462, 481, 514, 524, 526, 602], "vision": 396, "visit": [420, 482], "visual": [6, 197, 209, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 405, 420, 438, 439, 457, 458, 459, 468, 470, 475, 477, 479, 482, 499, 501, 508, 511, 524, 526, 540, 549, 554, 558, 601], "visualis": [388, 403, 405, 412, 439, 454, 470, 501, 506, 507, 509, 512, 540], "vline": [534, 558, 559], "vltvtext": 493, "vmax": [103, 106, 110, 111, 381, 382, 474, 477, 479, 486, 497, 503, 504, 513, 514, 523, 524, 549, 608], "vmin": [103, 106, 110, 111, 381, 382, 472, 477, 486, 497, 503, 504, 513, 514, 523, 524, 549, 608], "volum": [27, 200, 204, 207, 507], "vorokh": [448, 449], "voruganti": [450, 451], "vp": 493, "vstack": [83, 86, 404], "vtransit": 608, "vuillaum": [417, 451], "vx": [322, 325, 416], "vy": [322, 325], "vz": [322, 325], "w": [26, 31, 49, 86, 193, 206, 315, 392, 416, 472, 475, 483, 495, 502, 506, 509, 549, 604, 606], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 103, 105, 120, 126, 128, 129, 132, 136, 172, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 384, 391, 394, 396, 397, 398, 399, 400, 401, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 422, 432, 435, 436, 437, 438, 439, 440, 447, 451, 452, 453, 454, 455, 456, 457, 463, 466, 468, 475, 477, 479, 502, 509, 512, 513, 514, 515, 526, 603], "wagner": 494, "wai": [33, 38, 83, 87, 91, 201, 297, 342, 348, 390, 391, 392, 394, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 411, 412, 415, 417, 420, 424, 425, 426, 428, 431, 435, 451, 452, 466, 468, 470, 474, 477, 494, 496, 497, 498, 499, 502, 503, 504, 505, 507, 508, 512, 513, 514, 515, 518, 525, 530, 537, 539, 540, 544, 553, 601, 603, 605], "wait": [391, 421, 422], "wald": [311, 313], "wald1943": [311, 313], "walk": 420, "walker": [420, 507], "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 105, 108, 126, 153, 179, 204, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 391, 393, 394, 396, 397, 398, 401, 405, 406, 407, 409, 410, 411, 420, 422, 423, 424, 425, 426, 428, 429, 432, 452, 464, 468, 469, 470, 471, 474, 481, 482, 486, 488, 490, 491, 493, 495, 496, 497, 499, 502, 503, 504, 505, 506, 507, 509, 512, 513, 523, 524, 526, 544, 600, 603, 604, 605, 606, 607], "ward": 316, "warmup": 420, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 105, 126, 197, 217, 218, 219, 220, 277, 278, 279, 281, 377, 416, 422, 434, 451, 456, 457, 458, 459, 462, 468, 471, 472, 474, 477, 478, 479, 482, 486, 490, 491, 512, 513, 540, 565, 603], "warn_miss": 87, "warn_with_traceback": 391, "wasn": [398, 452], "watch": [513, 607], "water": [424, 514, 602], "watson": 433, "wavelength": 410, "wavelet": [431, 449], "wc": [13, 16, 83, 103, 106, 110, 129, 171, 179, 180, 184, 195, 196, 197, 199, 204, 205, 207, 208, 209, 226, 229, 230, 239, 242, 253, 255, 266, 267, 271, 277, 281, 351, 386, 391, 397, 405, 410, 433, 434, 435, 437, 443, 451, 452, 456, 458, 468, 469, 472, 474, 475, 477, 479, 483, 488, 491, 495, 497, 501, 502, 504, 505, 506, 513, 523, 524, 526, 549, 552, 558, 559, 560, 565, 608], "wcd": 602, "wcda": [57, 70], "wcs_geom": [204, 229, 253, 503, 553], "wcs_geom_3d": 503, "wcs_geom_cel": 503, "wcs_map": [208, 209, 384], "wcs_tile": [195, 197], "wcsax": [103, 106, 110, 111, 197, 204, 205, 209, 229, 253, 386, 388, 477, 503, 526, 557, 561, 562, 563], "wcsconfig": 16, "wcsgeom": [23, 83, 103, 106, 110, 111, 112, 115, 117, 118, 124, 125, 136, 155, 164, 166, 176, 189, 190, 194, 195, 204, 208, 209, 225, 226, 230, 239, 242, 255, 257, 266, 267, 271, 277, 281, 392, 397, 405, 433, 436, 437, 438, 443, 456, 458, 459, 468, 472, 474, 479, 481, 482, 483, 486, 491, 495, 497, 498, 501, 502, 503, 504, 506, 513, 514, 524, 526, 536, 538, 547, 549, 550, 553, 557, 559, 560, 561, 562], "wcslib": 391, "wcsmap": [196, 197, 199, 209, 454], "wcsndmap": [103, 106, 112, 117, 120, 136, 144, 164, 166, 169, 171, 173, 178, 179, 180, 181, 184, 189, 190, 195, 196, 197, 199, 205, 207, 208, 210, 211, 229, 253, 269, 277, 378, 384, 386, 397, 436, 437, 438, 440, 443, 445, 452, 454, 457, 458, 472, 474, 483, 495, 497, 502, 503, 513, 526, 536, 538, 546, 549], "wcsprm": 565, "wcsshape": 503, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 102, 136, 178, 204, 207, 217, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 286, 366, 391, 392, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 439, 443, 445, 450, 451, 452, 453, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 518, 521, 523, 524, 526, 537, 544, 545, 547, 549, 552, 564, 568, 578, 600, 603, 604, 605, 606, 607], "weak": [410, 420, 498, 507, 509], "weaker": 292, "weakli": 504, "web": [87, 91, 399, 417, 422, 428, 429, 443, 451, 459, 496], "webpag": [393, 399, 411, 417, 421, 451, 454], "websit": 459, "wedg": 405, "week": [394, 399, 409, 411, 416, 421], "weekli": [397, 400, 404, 405, 488], "wegen": [451, 452], "weigh": [166, 169, 509], "weight": [67, 77, 106, 111, 147, 154, 155, 161, 164, 166, 169, 195, 196, 197, 199, 204, 205, 207, 208, 209, 222, 238, 248, 262, 279, 284, 314, 419, 420, 453, 457, 480, 509, 536, 552], "weighted_chi2_paramet": 480, "weighted_kernel": 164, "weighted_sampl": [420, 507], "welcom": [396, 405, 513], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 106, 111, 116, 119, 124, 125, 133, 195, 199, 201, 205, 207, 217, 223, 226, 227, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 381, 382, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 428, 429, 432, 434, 435, 436, 437, 438, 439, 440, 443, 445, 446, 451, 452, 453, 457, 458, 463, 464, 465, 471, 475, 480, 482, 488, 490, 493, 497, 498, 499, 501, 502, 503, 504, 506, 507, 511, 512, 513, 516, 518, 523, 524, 526, 536, 537, 538, 549, 552, 553, 600, 601, 603, 605], "went": 432, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 126, 140, 302, 391, 396, 397, 398, 399, 404, 406, 407, 408, 409, 410, 411, 412, 414, 416, 419, 422, 432, 435, 436, 437, 438, 439, 440, 443, 446, 451, 452, 455, 478, 491, 493, 504, 507, 509, 512, 606], "wg": 421, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 286, 348, 392, 397, 405, 408, 410, 411, 418, 420, 422, 430, 483, 495, 496, 498, 499, 507, 512, 513, 518, 524, 525, 528, 536, 553, 587, 603, 604, 607], "whatev": [405, 407, 408, 603], "wheel": [408, 459], "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 124, 125, 126, 127, 143, 154, 155, 161, 166, 168, 169, 176, 179, 182, 196, 197, 199, 201, 203, 205, 208, 209, 214, 215, 217, 219, 221, 223, 224, 227, 229, 231, 233, 234, 235, 238, 240, 244, 246, 247, 248, 250, 253, 254, 256, 258, 259, 260, 262, 265, 270, 272, 273, 274, 275, 278, 281, 282, 284, 330, 390, 391, 392, 394, 396, 397, 398, 401, 403, 405, 406, 408, 411, 416, 417, 418, 419, 421, 424, 425, 426, 437, 445, 446, 451, 453, 456, 457, 458, 463, 470, 475, 479, 482, 483, 488, 489, 491, 496, 499, 502, 503, 506, 508, 512, 513, 536, 538, 540, 545, 547, 551, 552, 602, 604, 605, 606, 607], "when_us": 90, "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 105, 125, 126, 127, 130, 136, 153, 154, 155, 161, 166, 169, 171, 182, 193, 194, 195, 196, 197, 199, 201, 204, 205, 207, 208, 209, 210, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 299, 302, 305, 307, 311, 318, 355, 392, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 418, 419, 422, 424, 426, 428, 434, 446, 452, 462, 468, 474, 481, 482, 496, 502, 503, 504, 506, 507, 509, 512, 513, 514, 526, 528, 536, 537, 540, 545, 552, 558, 559, 560, 563, 564, 568, 602, 603, 604, 605, 606, 607], "wherea": [397, 405, 408, 420, 507, 603], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 103, 105, 106, 108, 110, 111, 125, 126, 127, 128, 136, 150, 151, 152, 153, 156, 157, 158, 160, 163, 165, 167, 168, 182, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 214, 223, 224, 227, 229, 231, 233, 234, 235, 240, 244, 246, 247, 250, 253, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 279, 281, 282, 297, 318, 327, 354, 357, 359, 360, 388, 396, 398, 405, 408, 410, 411, 418, 420, 457, 471, 486, 498, 502, 503, 526, 552, 604, 605], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 102, 103, 105, 106, 108, 110, 111, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 140, 144, 145, 146, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 167, 168, 169, 171, 172, 176, 177, 182, 183, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 207, 208, 209, 212, 214, 217, 219, 223, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 239, 240, 242, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 286, 292, 294, 297, 298, 302, 303, 304, 306, 311, 312, 313, 316, 330, 340, 350, 351, 369, 378, 380, 385, 387, 390, 392, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 429, 433, 434, 435, 437, 438, 439, 440, 443, 446, 452, 454, 457, 459, 462, 463, 464, 468, 471, 472, 474, 475, 477, 480, 481, 482, 483, 488, 490, 491, 493, 494, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 523, 524, 526, 530, 531, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 549, 551, 552, 553, 554, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 600, 601, 602, 603, 604, 605, 606], "whichev": [195, 196, 197], "while": [87, 91, 106, 196, 197, 199, 201, 205, 208, 209, 391, 394, 396, 397, 398, 400, 403, 404, 406, 410, 412, 413, 415, 416, 417, 420, 421, 422, 424, 462, 468, 470, 474, 482, 490, 491, 497, 498, 501, 502, 503, 505, 506, 507, 536, 538, 540, 551, 553, 603], "whilst": [392, 508, 518, 525], "whippl": 97, "whirlwind": 518, "white": [303, 380, 381, 479, 491, 499, 505, 528, 553], "whitespac": 336, "who": [417, 495, 528], "whole": [95, 120, 173, 176, 183, 186, 187, 189, 190, 195, 196, 197, 199, 208, 209, 254, 285, 294, 298, 391, 397, 403, 406, 417, 464, 468, 477, 482, 488, 491, 497, 506, 513, 515, 545, 600], "whose": [417, 422, 482, 546, 559], "why": [391, 392, 396, 398, 405, 499, 553], "wich": 420, "wide": [398, 417, 418, 433, 452, 466, 478, 602], "wider": [489, 504, 547], "widget": [196, 197, 199, 205, 208, 209, 477, 486, 503, 523, 524], "width": [16, 27, 68, 83, 87, 91, 103, 106, 110, 111, 112, 113, 114, 116, 117, 119, 120, 130, 136, 153, 154, 155, 158, 161, 164, 166, 169, 171, 176, 181, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 226, 229, 230, 239, 241, 242, 253, 255, 266, 267, 269, 271, 277, 279, 281, 381, 382, 407, 414, 453, 469, 470, 472, 474, 475, 477, 479, 480, 481, 482, 483, 486, 488, 491, 495, 496, 497, 501, 502, 503, 504, 506, 513, 514, 523, 524, 526, 547, 549, 550, 551, 552, 553, 558, 559, 560, 562, 563, 564, 608], "width_err": 496, "width_error": 68, "width_min": 204, "width_pix": [195, 196, 197], "widthconfig": 16, "wiki": [34, 83, 88, 311, 313, 443, 515], "wikipedia": [34, 83, 88, 311, 313, 347, 405, 409], "wilei": 138, "wilk": [292, 311, 313, 538, 605], "willing": 394, "wind": [50, 475, 480, 506, 531], "window": [113, 114, 390, 391, 398, 408, 422, 423, 424, 426, 432, 448, 452, 472, 496, 602, 603, 605], "wise": [19, 20, 26, 87, 91, 144, 145, 197, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 419, 445, 459, 475, 477, 536], "wish": [204, 394, 409, 480, 499], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [401, 402, 403, 406, 413, 415], "withdrawn": [395, 396, 401, 402, 403, 406, 413, 415], "within": [128, 131, 144, 195, 209, 228, 229, 230, 236, 241, 242, 243, 244, 245, 253, 261, 266, 268, 269, 280, 283, 390, 391, 392, 396, 400, 405, 407, 408, 409, 410, 411, 414, 416, 417, 419, 420, 421, 422, 423, 424, 426, 446, 449, 451, 455, 457, 459, 469, 470, 477, 480, 488, 489, 490, 493, 496, 498, 501, 502, 503, 506, 507, 508, 513, 518, 519, 526, 536, 539, 540, 602, 605], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 132, 156, 194, 195, 200, 204, 207, 248, 388, 391, 394, 396, 399, 401, 405, 406, 407, 408, 410, 415, 420, 422, 433, 434, 438, 459, 469, 472, 477, 478, 493, 495, 502, 503, 504, 507, 523, 540, 551, 552, 553, 598, 603, 605], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 495], "wo": 491, "wobbl": [95, 490, 512], "wobbleregionfind": 445, "wobbleregionsfind": 470, "wolfram": [345, 346], "women": 448, "won": [120, 124, 128, 132, 136, 363, 416, 477, 503, 512, 606], "wong": [435, 459], "wood": [398, 449, 451, 452], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 540], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 127, 206, 221, 355, 390, 391, 392, 394, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 416, 417, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 444, 447, 448, 449, 450, 451, 452, 453, 454, 459, 462, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 495, 496, 497, 499, 501, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526, 536, 540, 550, 552, 565, 568, 591, 597, 598, 603], "workaround": [408, 459], "workflow": [399, 400, 407, 412, 416, 422, 424, 426, 437, 459, 469, 475, 518, 523, 524, 525], "workshop": 400, "world": [83, 207, 229, 253, 391, 397, 479, 526, 552], "worst": 394, "worth": [391, 528], "would": [16, 84, 87, 90, 91, 95, 105, 126, 196, 197, 199, 205, 208, 209, 248, 391, 394, 397, 398, 399, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 415, 417, 418, 420, 434, 443, 466, 468, 471, 472, 486, 499, 503, 504, 506, 509, 513, 553], "wouldn": 405, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 201, 265, 326, 405, 436, 459], "wrap_at": 402, "wrap_coord": 201, "wrapper": [56, 254, 265, 330, 405, 406, 420, 434, 437, 507, 528, 540], "write": [11, 15, 16, 26, 82, 86, 87, 88, 91, 100, 102, 103, 106, 108, 110, 111, 125, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 196, 197, 199, 203, 205, 208, 209, 215, 229, 244, 253, 277, 278, 279, 280, 281, 360, 369, 392, 394, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 422, 428, 431, 437, 440, 445, 447, 450, 451, 452, 453, 458, 459, 462, 468, 477, 478, 481, 483, 501, 505, 506, 512, 513, 521, 523, 524, 540, 545, 604, 606], "write_arf": 108, "write_bkg": 108, "write_covari": [15, 100, 215, 229, 253], "write_dataset": 15, "write_ds9": 506, "write_model": 15, "write_pha": 108, "write_rmf": 108, "writeabl": 419, "writer": [87, 91, 411, 418], "writeto": [86, 150, 151, 152, 156, 157, 158, 160, 163, 165, 167, 168, 481], "written": [88, 100, 102, 103, 106, 108, 110, 111, 125, 127, 154, 155, 161, 166, 169, 196, 197, 199, 203, 205, 208, 209, 211, 391, 392, 394, 396, 400, 401, 411, 417, 419, 455, 462, 482, 505, 507, 509, 528, 536, 537, 540, 553, 602], "wrong": [391, 441, 455, 456, 457], "wrote": 417, "wrt": [83, 166, 169, 391, 409, 490, 598], "wstat": [106, 111, 308, 309, 403, 431, 449, 450, 463, 468, 469, 471, 475, 479, 491, 497, 509, 511, 536, 602], "wstatcountsstatist": [491, 605], "wt": [26, 495], "wun": 435, "www": [67, 87, 91, 138, 311, 313, 411, 512], "wx42qufd": 506, "wyatt": [431, 602], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 103, 110, 130, 138, 144, 151, 201, 205, 206, 214, 217, 219, 223, 226, 227, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 257, 258, 259, 260, 261, 265, 266, 267, 268, 270, 273, 274, 275, 280, 281, 297, 303, 304, 307, 321, 322, 323, 325, 329, 331, 336, 345, 380, 383, 384, 391, 392, 396, 398, 399, 400, 405, 416, 420, 421, 424, 426, 466, 471, 472, 479, 482, 491, 493, 494, 496, 499, 501, 503, 507, 509, 513, 526, 534, 540, 558, 559, 603, 605], "x27": [498, 501], "x86_64": [462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526], "x_": 130, "x_0": [196, 197, 199, 205, 208, 209], "x_1": 330, "x_2": 330, "x_3": 330, "x_bkg": 491, "x_edg": 131, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [196, 197, 199, 205, 208, 209], "x_j": 130, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [130, 343, 345, 483], "x_min": [130, 343, 345, 483], "x_n": [196, 197, 199, 205, 208, 209], "x_r_0": 242, "x_ref": [130, 483], "x_sigma": 239, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [214, 499], "xarg": 391, "xaxi": [498, 540], "xerr": [462, 493, 509], "xf": 512, "xfail": 391, "xlabel": [392, 457, 475, 490, 493, 509, 513, 532, 533, 534, 558, 597], "xlim": [378, 477, 509, 513, 534, 608], "xmax": [17, 18, 21, 22, 24, 25, 27, 205, 419], "xmin": [17, 18, 21, 22, 24, 25, 27, 205, 419], "xml": [400, 401, 402, 436, 450, 452, 512, 528], "xmltodict": [444, 512], "xqaffb7c": 493, "xref": 130, "xspec": [231, 282, 315, 450, 463, 604], "xunit": [470, 568], "xviii": 411, "xx": [402, 417], "xxx": [87, 91, 396, 417], "xxx_by_coord": 503, "xxxx": 540, "xy": [468, 479, 483, 558], "xy_posit": [33, 34, 38], "xymxzdvr": 502, "xytext": 558, "xyz": 421, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 144, 151, 201, 214, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 321, 322, 323, 325, 329, 331, 383, 391, 405, 416, 424, 426, 457, 462, 472, 479, 482, 493, 499, 507, 509, 534, 540], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [214, 499], "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 102, 103, 105, 106, 110, 111, 125, 126, 146, 147, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 292, 354, 357, 359, 360, 390, 399, 400, 402, 403, 404, 407, 408, 413, 418, 419, 421, 422, 423, 435, 436, 437, 440, 445, 454, 458, 459, 462, 464, 468, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 524, 526, 539, 600, 601, 602, 603], "yaml_str": [229, 253, 469], "yaxi": [466, 498, 540], "ye": 422, "year": [45, 61, 65, 78, 391, 396, 398, 399, 401, 408, 411, 412, 416, 418, 422, 449, 451, 452, 478, 480, 496, 512, 532, 533, 534, 535], "yearli": [425, 450], "yellow": 381, "yerr": [491, 493], "yet": [89, 390, 391, 396, 398, 405, 408, 411, 412, 459, 460, 466, 469, 523, 607], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 196, 197, 199, 205, 208, 209, 355, 398, 404, 405, 410, 412, 414, 419, 504, 604, 605, 606], "yil4mlaz": 498, "yk04": [45, 48], "yk04b": 48, "ylabel": [392, 490, 493, 509, 513, 532, 533, 534, 558, 597], "ylim": [378, 463, 475, 509, 513, 532, 534, 575, 584, 585, 586, 608], "ymax": [558, 559], "ymin": [558, 559], "yml": [394, 408, 421, 422, 423, 424, 426, 451, 459], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 102, 105, 108, 126, 127, 144, 151, 153, 156, 179, 196, 197, 199, 205, 208, 209, 214, 221, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 285, 292, 390, 391, 392, 393, 394, 396, 398, 401, 405, 408, 409, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 443, 451, 452, 453, 459, 463, 464, 466, 468, 469, 470, 471, 474, 475, 477, 479, 481, 482, 486, 489, 490, 491, 493, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 509, 512, 513, 514, 515, 516, 518, 519, 523, 524, 526, 536, 537, 540, 543, 547, 551, 576, 600, 603, 604, 605, 606, 607], "your": [16, 19, 20, 26, 84, 90, 99, 105, 126, 223, 224, 227, 231, 233, 234, 235, 240, 246, 247, 250, 254, 256, 258, 259, 260, 265, 270, 272, 273, 274, 275, 278, 282, 390, 391, 392, 394, 396, 398, 421, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 437, 438, 443, 452, 453, 462, 463, 464, 466, 468, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 521, 523, 524, 526, 535, 540, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 602, 605], "yourself": [603, 604], "yr": [45, 52, 53, 530, 532, 533, 534], "yscale": [475, 595], "yt": 391, "ytcbcbrc": 493, "yu": [435, 459], "yunit": [468, 470, 495, 496, 513, 579], "yusifov": [39, 40], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 451, "yy": 417, "yywxutw": 502, "yyyi": 417, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 147, 321, 322, 325, 416, 417, 420, 424, 426, 495, 507, 530, 568], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 447, "zanin": [451, 452], "zd": 83, "zen": 508, "zen_pnt": 508, "zenith": [83, 462, 478, 508, 512, 513, 514, 545], "zenith_angl": [83, 418, 513, 526], "zenodo": [417, 445, 512], "zero": [52, 53, 67, 87, 91, 100, 103, 106, 110, 111, 136, 144, 153, 154, 155, 158, 161, 166, 182, 196, 197, 199, 205, 208, 209, 257, 279, 281, 330, 336, 348, 391, 436, 439, 454, 459, 496, 502, 503, 507, 509, 606], "zhao": [27, 458], "zhen": 138, "zip": [406, 419, 421, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 518, 521, 523, 524, 526, 534, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "zl": [26, 495], "zone": 491, "zsh": 392, "zt": [26, 495], "zye2uqin": 493, "z\u00e9": 450, "\u00e0": 449, "\u0261\u00e6m\u0259pa\u026a": 540, "\u03b3": [140, 528, 602], "\u03c3": [28, 480]}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FermipyDatasetsReader", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_empty_map_dataset_from_irfs", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "create_map_dataset_from_dl4", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "ParameterSensitivityEstimator", "SensitivityEstimator", "TSMapEstimator", "combine_flux_maps", "combine_significance_maps", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_flux_maps", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "Sampler", "SamplerResult", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianPrior", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "LogUniformPrior", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "UniformPrior", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "Chi2AsymmetricErrorFitStatistic", "Chi2FitStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "sigma_to_ts", "structure_function", "ts_to_sigma", "weighted_cash_sum_cython", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "PIG 27 - Bayesian Inference using Nested Sampling", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (November 26th, 2024)", "2.0 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Data analysis", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D Image", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "3D Cube", "Computation times", "3D map simulation", "Time", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Package / API", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Bayesian analysis with nested sampling", "Observational clustering", "Priors", "Computation times", "Make a theta-square plot", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Model Gallery", "Computation times", "Tutorials", "Scripts", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Introduction", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Spatial models", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "Spectral models", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Temporal models", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Fundamental Concepts: Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistics in Gammapy", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 469, 482, 515, 523], "0": [400, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460], "1": [396, 400, 419, 420, 430, 431, 438, 439, 441, 446, 454, 455, 456, 457, 458, 459, 507, 509], "10": [405, 430, 432], "10th": 454, "11": [406, 430, 433], "12": [407, 430, 434], "12th": 445, "13": [408, 430, 435, 444, 447], "13th": 457, "14": [409, 430, 436], "14th": 455, "15": [430, 437], "16": [410, 430, 438], "16th": 446, "17": [430, 439], "18": [411, 430, 440, 441, 442], "19": [412, 430, 443], "19th": 442, "1d": [465, 469, 471, 478, 488, 489, 518], "1dc": 512, "2": [397, 398, 419, 420, 430, 442, 444, 456, 458, 460, 507, 509, 581], "20": [413, 430, 445, 446, 448], "2014": 431, "2015": [444, 447], "2016": [448, 449], "2017": 450, "2018": [451, 452, 453], "2019": [432, 433, 434, 435, 436, 437], "2020": [438, 439, 440, 441, 442], "2021": 443, "2022": [445, 446, 454], "2023": [455, 456, 457], "2024": [458, 459], "21": 414, "2155": 498, "22": [415, 449], "22nd": 443, "23": [416, 452], "24": 417, "25": [418, 431], "26": [419, 435], "26th": 459, "27": 420, "28": [432, 450, 451], "29": [433, 453], "29th": 458, "2d": [473, 474, 518], "3": [398, 419, 420, 430, 437, 447, 459, 507], "30": [434, 436], "304": 498, "32": 391, "3955": 419, "3d": [477, 478, 484, 486, 488, 518], "3fgl": [573, 584], "3fhl": 478, "4": [399, 420, 430, 448], "4122": 419, "4fgl": [585, 586], "4th": 440, "5": [400, 430, 449], "6": [401, 430, 450], "64": 391, "6th": [441, 456], "7": [398, 402, 430, 451], "8": [403, 430, 452], "9": [404, 430, 453], "A": [468, 498], "As": [542, 543, 544, 546], "In": 392, "ON": [464, 470, 478], "On": 471, "The": [397, 422, 478, 480, 498, 499, 509, 537, 549], "To": [391, 392, 411, 540], "about": 509, "abov": 480, "absolute_tim": 372, "absorpt": [414, 463, 568], "abstract": [396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "accept": 394, "access": [472, 497, 498, 503, 514, 537], "accessor": 552, "account": 463, "action": [391, 411], "ad": 503, "adapt": 472, "adaptiveringbackgroundmak": 171, "add": [402, 505], "add_colorbar": 379, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [414, 419, 546, 601], "aeff_2d": 542, "against": 470, "aim": 505, "aka": 420, "algorithm": 493, "alia": 414, "all": [489, 507], "along": 418, "altern": [399, 402, 404, 405, 406, 407, 408, 409, 411, 412, 415, 418], "amplitud": [419, 509], "an": [391, 462, 481, 482, 497, 504], "anaconda": 425, "analysi": [0, 11, 15, 397, 400, 462, 464, 465, 468, 469, 470, 471, 477, 478, 479, 488, 491, 507, 518, 523, 536, 539, 601], "analysisconfig": 16, "angl": [542, 543, 544, 546], "angular": 553, "annihil": 495, "annotate_heatmap": 380, "api": [6, 391, 392, 413, 415, 418, 419, 420, 454, 457, 458, 459, 498, 500, 518, 524], "apply_edisp": [112, 117], "approach": [406, 420, 464, 466, 469, 471, 472, 474, 475, 478, 481, 482, 483, 486, 488, 489, 490, 493, 494, 499, 504, 505, 507, 508, 523, 524], "apr": [439, 444, 448, 450], "arbitrari": 418, "area": [501, 512, 542], "argument": [391, 405], "arm": 530, "asmoothmapestim": 120, "assert": 391, "assert_quantity_allclos": 366, "assert_skycoord_allclos": 367, "assert_time_allclos": 368, "assess": [477, 499], "assign": [489, 505], "astro": [1, 528, 531], "astronomi": 406, "astrophys": [1, 529, 530, 531], "astropi": [391, 416], "asymmetr": 501, "attribut": [391, 392, 402], "aug": [431, 447], "author": 417, "authorship": 417, "avail": 496, "ax": [503, 553], "axi": [391, 545], "backend_default": 333, "background": [402, 406, 410, 413, 419, 475, 480, 481, 502, 505, 512, 513, 523, 543, 545, 547, 548, 549, 550, 604], "background2d": 150, "background3d": 151, "backgroundirf": 152, "backgroundirfmodel": 402, "backgroundmodel": 402, "backport": 391, "base": [415, 418, 551], "basic": [479, 503], "bayesian": [420, 494, 507], "between": 413, "bin": [406, 462, 480, 553], "binder": 422, "bit": 391, "bkg_2d": 543, "bkg_3d": 543, "block": 494, "boundari": 504, "branch": 421, "break": 391, "broken": [392, 569, 583], "brokenpowerlawspectralmodel": 223, "bsd": 391, "bug": [445, 454, 457, 458, 459], "bugfix": 421, "build": [392, 394, 422, 488, 489], "built": 600, "bullet": 392, "bundl": 391, "burkertprofil": 17, "butterfli": 524, "call": 402, "candid": [421, 472], "caplog": 391, "carlo": 507, "cartesian": 319, "case": [397, 401, 419, 420, 606], "casebattacharya1998": 28, "cash": [299, 604, 605], "cash_sum_cython": 300, "cashcountsstatist": 294, "catalog": [2, 496, 504, 505, 526, 535], "catalog_registri": 55, "caveat": 604, "cell": 391, "certif": 394, "cff": 417, "chain": [468, 470, 507], "chang": [391, 412, 454, 457, 458, 459], "changelog": 411, "character": 494, "check": [11, 391, 392, 427, 462, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 495, 496, 497, 499, 502, 503, 504, 505, 506, 509, 511, 512, 513, 514, 515, 523, 524, 526], "checker": 365, "chi": 480, "chi2asymmetricerrorfitstatist": 295, "chi2fitstatist": 296, "choos": 392, "citat": 417, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 391, 392, 401, 402, 415, 418, 524, 546, 605], "clean": 410, "cli": 603, "clobber": 391, "clumpi": 528, "cluster": [13, 508], "code": [391, 392, 397, 400, 422], "codemeta": 417, "collect": 417, "colormap": 608, "colormap_hess": 381, "colormap_milagro": 382, "combin": [505, 537], "combine_flux_map": 137, "combine_significance_map": 138, "command": [11, 603], "common": 498, "compar": [470, 488, 507], "comparison": [420, 507], "compound": [506, 570], "compound_region_to_region": 349, "compoundspectralmodel": 224, "comput": [461, 462, 467, 468, 469, 475, 476, 479, 485, 492, 499, 510, 517, 520, 522, 524, 527, 555, 566, 588, 599], "compute_chisq": 301, "compute_flux_doubl": 302, "compute_fpp": 303, "compute_fvar": 304, "compute_lightcurve_discrete_correl": 139, "compute_lightcurve_doublingtim": 140, "compute_lightcurve_fpp": 141, "compute_lightcurve_fvar": 142, "concept": 601, "conda": 423, "confer": 417, "confid": 499, "config": [11, 474, 475, 603], "configur": [469, 477, 483, 488, 498, 523, 601], "constant": [557, 571, 590], "constantfluxspatialmodel": 225, "constantspatialmodel": 226, "constantspectralmodel": 227, "constanttemporalmodel": 228, "contain": 418, "containment_radiu": 210, "containment_region": 211, "content": [497, 553], "context": [464, 466, 468, 469, 470, 471, 472, 474, 475, 478, 480, 481, 483, 486, 488, 489, 490, 493, 494, 504, 507, 508, 509, 523, 524], "contigu": 503, "continu": 422, "contour": 499, "contribut": [394, 417, 505], "contributor": [417, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "conveni": 403, "convent": 391, "converg": 420, "convers": [391, 498], "convert": 391, "coordin": [13, 391, 402, 543, 553], "corner": 507, "correct": 392, "correl": 475, "count": [498, 505, 513, 536, 605], "covari": [212, 499], "covarianceresult": 213, "creat": [464, 468, 474, 475, 482, 497, 498, 501, 503, 504, 524, 553], "create_cosmic_ray_spectral_model": 285, "create_crab_spectral_model": 286, "create_empty_map_dataset_from_irf": 113, "create_fermi_isotropic_diffuse_model": 287, "create_map_dataset_from_dl4": 118, "create_map_dataset_from_observ": 114, "create_map_dataset_geom": 115, "creation": [464, 469, 489, 511], "cstat": 305, "cta": [401, 512], "ctao": 512, "cube": [397, 484, 503, 518], "cumul": 464, "current": 416, "curv": [406, 488, 489, 490, 498, 597, 598], "custom": [506, 509, 600], "cut": [466, 470], "cutoff": [572, 573, 574, 584, 585, 586], "cutout": 503, "cycl": 416, "cython": [416, 422], "d_sun_to_galactic_cent": 318, "dark": [495, 528], "darkmatt": [1, 528], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 391, 397, 399, 400, 406, 418, 422, 463, 464, 465, 468, 469, 470, 477, 478, 480, 483, 488, 489, 491, 493, 497, 502, 503, 511, 514, 516, 518, 523, 524, 526, 537, 548, 603, 604], "dataflow": 418, "dataset": [4, 11, 99, 100, 391, 400, 403, 412, 413, 418, 462, 464, 469, 470, 474, 475, 477, 478, 482, 488, 489, 490, 497, 498, 499, 502, 504, 505, 507, 509, 514, 523, 524, 536], "dataset_registri": 98, "datasetmodel": 229, "datasetsmak": 172, "datastor": [82, 512, 524], "dco": [394, 417], "deal": 392, "dec": 437, "decai": 495, "decemb": 456, "decis": [396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "default": 402, "defin": [462, 464, 468, 470, 479, 481, 482, 488, 489, 504, 507, 511, 524, 553], "definit": [417, 488, 507, 548], "depend": [390, 408, 414, 445, 470, 480, 482, 506], "deprec": [391, 416], "deriv": 606, "detail": [398, 477], "detect": [412, 472, 479, 511, 545], "detector": 543, "develop": [391, 393, 394, 398], "diagram": 401, "differ": [478, 503, 607], "diffus": 513, "dilat": 504, "direct": 470, "discrete_correl": 306, "discuss": 406, "disk": [469, 482, 523, 524, 558], "diskspatialmodel": 230, "dispers": [501, 512, 513, 544], "dissolv": 410, "distribut": [408, 420, 507, 530], "dl3": [3, 478, 515, 537, 545, 548], "dl4": [501, 536, 538, 548, 552, 600], "dl5": [538, 600], "dl6": 538, "dmprofil": 18, "do": 391, "doc": 422, "docstr": 392, "document": [392, 394, 400, 411, 458, 459], "doubl": 494, "download": [11, 422], "downsampl": 553, "dr1": [515, 586], "dr2": 586, "dr3": 585, "draw": 341, "driven": 603, "drop": 398, "due": 463, "durat": 502, "e": 515, "each": 480, "earli": 394, "earth_location_from_dict": 328, "ebl": [463, 568], "ebl_data_builtin": 232, "eblabsorptionnormspectralmodel": 231, "edg": 538, "edisp": 501, "edisp_2d": 544, "edispkernel": 153, "edispkernelmap": [154, 501], "edispmap": 155, "effect": [501, 502, 512, 542], "effectiveareatable2d": 156, "einastoprofil": 21, "elaps": 607, "empti": 497, "encourag": 509, "end": 391, "energi": [414, 462, 470, 480, 482, 501, 504, 506, 511, 512, 513, 538, 542, 543, 544, 546], "energydependentmorphologyestim": 122, "energydependentmultigausspsf": 157, "energydispersion2d": 158, "environ": 423, "eros": 504, "error": [499, 605], "estim": [5, 123, 409, 412, 415, 418, 420, 469, 472, 480, 483, 488, 493, 494, 498, 502, 538, 548, 549, 605], "estimate_exposure_reco_energi": 143, "estimator_registri": 121, "evalu": [402, 403, 404], "event": [400, 404, 481, 482, 491, 503, 512, 513, 526, 537, 545], "eventlist": 83, "eventlistmetadata": 84, "evid": 420, "evolut": 482, "exampl": [422, 509, 535, 536, 538, 539, 547, 548, 549, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 604], "excess": [415, 464, 475, 494, 605], "excessmapestim": 124, "exclus": [468, 469, 475, 504, 523], "execut": 603, "exemplari": 419, "exercis": [462, 466, 468, 471, 477, 479, 481, 482, 490, 493, 512, 513, 514, 515, 526], "exist": 397, "expcutoffpowerlaw3fglspectralmodel": 233, "expcutoffpowerlawnormspectralmodel": 234, "expcutoffpowerlawspectralmodel": 235, "expdecai": 591, "expdecaytemporalmodel": 236, "expect": 545, "explor": [464, 469, 479, 516, 518], "exponenti": [29, 466, 572, 573, 574, 584, 585, 586], "expos": 402, "exposur": [501, 513], "extend": [464, 481], "extens": [392, 463], "extern": 391, "extra": 422, "extract": [475, 488, 489, 490], "extrapol": [391, 587], "f_cash_root_cython": 307, "factor": 495, "factori": 503, "factoris": 545, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 419, "featur": [14, 416, 421, 454, 457, 458, 459, 498], "feb": [438, 451], "februari": 458, "fermi": [478, 513], "fermipydatasetsread": 101, "fermist": 528, "file": [392, 417, 469, 474, 475, 478, 512, 523, 537, 553], "fill": [503, 553], "filter": 489, "final": [396, 421, 469, 606], "find_peak": 144, "find_peaks_in_flux_map": 145, "finder": 549, "first": [421, 469], "fit": [10, 13, 214, 400, 406, 420, 463, 464, 466, 468, 469, 470, 474, 477, 478, 479, 486, 490, 499, 504, 509, 513, 523, 524, 553, 600, 604, 605, 606], "fitresult": 215, "fix": [391, 445, 454, 457, 458, 459], "fixedpointinginfo": 85, "fixtur": 391, "flare": 489, "float": 391, "flux": [415, 419, 462, 463, 466, 468, 469, 478, 483, 495, 496, 498, 523, 524, 526, 538], "fluxestim": 415, "fluxmap": [125, 415, 498], "fluxmetadata": 126, "fluxpoint": [127, 498], "fluxpointscollect": 415, "fluxpointsdataset": [102, 403, 497], "fluxpointsestim": [128, 538], "fluxprofileestim": 129, "fold": 402, "folder": 422, "follow": 412, "format": [391, 392, 607], "formula": 606, "forward": 402, "found": 603, "four": 545, "fov": [502, 547], "fov_to_ski": 320, "fovalign": 159, "fovbackgroundmak": [173, 547], "fovbackgroundmodel": 237, "fraction": 494, "free": 420, "freez": [416, 421, 505], "from": [391, 420, 489, 503, 504, 505, 553], "from_yaml": 354, "fulli": 498, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 391, 392, 512, 542, 543, 544, 545, 546, 605, 607], "fundament": 601, "further": [406, 463, 604], "galact": [321, 513], "galactocentr": 530, "galleri": [391, 392, 516, 518, 554], "gamlik": 528, "gamma": [406, 495, 545], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 391, 394, 397, 400, 408, 410, 411, 412, 416, 417, 418, 421, 422, 428, 429, 501, 512, 513, 514, 515, 528, 531, 535, 536, 537, 538, 539, 545, 547, 548, 549, 552, 600, 601, 605, 607], "gaussian": [559, 560, 575, 592, 593], "gaussianprior": 238, "gaussianspatialmodel": 239, "gaussianspectralmodel": 240, "gaussiantemporalmodel": 241, "gener": [391, 397, 401, 406, 417, 418, 538, 560, 593], "generalist": 415, "generalizedgaussianspatialmodel": 242, "generalizedgaussiantemporalmodel": 243, "geom": 194, "geometri": [464, 479, 488, 489, 503, 504, 523, 524, 551, 553], "get": [394, 411, 424, 463, 474, 475, 503, 511, 529, 530, 531, 537, 552], "get_combined_flux_map": 146, "get_combined_significance_map": 147, "get_images_path": 355, "get_irfs_featur": 96, "get_random_st": 342, "get_rebinned_axi": 148, "get_wstat_gof_term": 308, "get_wstat_mu_bkg": 309, "github": 391, "given": [505, 511], "global": 413, "glossari": 602, "good": 606, "gpl": 391, "group": 508, "gti": [86, 537], "guid": [393, 541], "guidelin": [392, 396, 397, 411], "h": 515, "halv": 494, "handl": [391, 400, 401, 402, 413, 417, 502, 607], "have": [399, 401, 406, 407, 415], "hawc": [478, 514], "hduindext": 87, "hduloc": 326, "healpix": 551, "help": 427, "helper": 403, "hess": 478, "hgp": 496, "hierarch": 508, "hierarchi": 418, "hierarchical_clust": 316, "high": [0, 5, 400, 407, 523, 539], "hli": 469, "how": [391, 392, 394, 411, 421, 503, 540], "hpxgeom": 195, "hpxmap": 196, "hpxndmap": 197, "hstack_column": 361, "i": [391, 394, 396, 483], "idea": 401, "imag": [392, 397, 405, 410, 472, 473, 479, 503, 518], "imageprofil": 130, "imageprofileestim": 131, "impact": 420, "implement": [401, 402, 411, 417, 419, 420, 506, 509], "import": [391, 486], "improv": [402, 414, 445, 454, 457, 458, 459], "inbuilt": 501, "includ": [392, 509], "index": [503, 509, 537], "individu": [507, 545], "infer": 420, "info": [11, 391], "inform": [417, 496, 509, 544], "infrastructur": 459, "input": [391, 418, 472], "inspect": 524, "instal": [411, 424, 425, 427], "instrument": [7, 478, 545], "integr": [13, 422, 462], "integrate_spectrum": 288, "interact": 413, "interest": 480, "interfac": [0, 400, 402, 407, 523, 539, 552], "intern": 498, "interpol": [13, 391, 503], "interpolate_profil": 331, "interpolation_scal": 332, "interv": 489, "intrins": 463, "introduc": [402, 410, 412, 414, 415, 483], "introduct": [402, 405, 406, 408, 409, 411, 415, 417, 418, 462, 468, 470, 479, 491, 495, 496, 497, 502, 503, 512, 513, 514, 515, 518, 525, 526, 528, 530, 531, 604], "inversecdfsampl": 340, "ipython": 428, "irf": [7, 160, 400, 418, 462, 497, 501, 512, 545], "irf_registri": 162, "irfmap": 161, "isothermalprofil": 22, "isotrop": 513, "issu": [420, 427, 459], "iter": 503, "j": 495, "jan": 432, "jfactori": 23, "joint": [477, 478, 536], "json": 417, "jul": 435, "june": [446, 457], "jupyt": [391, 424, 426, 428], "kei": 498, "kernel": 501, "known": 459, "labelmapaxi": [198, 503], "lat": [478, 513], "latest": 512, "law": [466, 569, 572, 573, 574, 580, 581, 582, 583, 584, 585, 586], "lazi": 403, "lazyfitsdata": 327, "lc": 488, "let": 482, "level": [0, 5, 397, 400, 407, 523, 524, 539], "li": 491, "licens": 391, "light": [406, 488, 489, 490, 498, 598], "lightcurv": [406, 481, 490, 494, 496], "lightcurveestim": [132, 538], "lightcurvetemplatetemporalmodel": 244, "like": [481, 498], "likelihood": 606, "limit": [401, 507], "line": [11, 391, 603], "linear": 594, "lineartemporalmodel": 245, "link": 392, "list": [392, 402, 403, 404, 405, 406, 407, 408, 420, 481, 489, 496, 503, 504, 505, 506, 526, 537], "literatur": 470, "livetim": 502, "load": [403, 462, 463, 466, 468, 470, 496, 498, 505, 507, 514], "load_irf_dict_from_fil": 170, "locat": 391, "log": [11, 391, 466, 576, 577], "logparabolanormspectralmodel": 246, "logparabolaspectralmodel": 247, "logspir": 34, "loguniformprior": 248, "long": 417, "loop": [464, 502, 524], "lorimer2006": 35, "low": [397, 524], "lt": 416, "ma": 491, "mai": [434, 445], "maintain": [398, 417], "mainten": 400, "major": 421, "make": [391, 394, 421, 479, 482, 491, 511, 524], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 350, "make_counts_rad_max": 185, "make_edisp_kernel_map": 186, "make_edisp_map": 187, "make_effective_livetime_map": 188, "make_map_background_irf": 189, "make_map_exposure_true_energi": 190, "make_observation_time_map": 191, "make_orthogonal_rectangle_sky_region": 351, "make_path": 356, "make_psf_map": 192, "make_theta_squared_t": 193, "maker": [8, 175, 412, 418, 464, 489, 502, 523, 524, 547, 548, 549], "maker_registri": 174, "mamba": 425, "manag": [400, 425], "manual": [504, 508], "map": [9, 199, 203, 397, 400, 401, 472, 474, 475, 478, 479, 486, 491, 495, 501, 503, 504, 505, 521, 526, 538, 551, 552, 553], "mapax": 200, "mapaxi": 201, "mapcoord": [202, 552], "mapdataset": [103, 403, 477, 481, 497, 514, 536], "mapdataseteventsampl": [104, 404], "mapdatasetmak": [176, 548], "mapdatasetmetadata": 105, "mapdatasetonoff": [106, 403], "mappanelplott": 378, "mar": 433, "march": 455, "margin": 420, "markov": 507, "mask": [405, 468, 469, 475, 497, 504, 523], "materi": 417, "matter": [495, 528], "measur": 604, "meet": 400, "messag": 391, "met": 607, "metadata": [417, 418], "method": [392, 403, 404, 419, 494, 503, 538, 552], "method_default": 334, "method_kwargs_default": 335, "meyercrabspectralmodel": 250, "miniconda": 425, "minor": 412, "minuit": 420, "mission": 607, "model": [10, 251, 253, 400, 402, 410, 413, 414, 418, 419, 420, 463, 464, 468, 469, 470, 474, 477, 478, 479, 481, 482, 488, 489, 490, 493, 495, 496, 497, 499, 505, 506, 507, 509, 512, 516, 518, 523, 524, 526, 530, 531, 532, 533, 534, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 604], "model_registri": 249, "modelbas": 252, "modif": 504, "modifi": [391, 503, 506], "modul": [4, 5, 8, 10, 13], "mont": 507, "mooreprofil": 24, "morpholog": 480, "morphologi": 506, "motion_since_birth": 322, "motiv": [419, 420], "mpl_plot_check": 369, "multi": 478, "multipl": [481, 505, 509, 536], "multiprocessing_manag": 338, "n_jobs_default": 336, "naima": 578, "naimaspectralmodel": 254, "name": [391, 402, 545], "nebula": 533, "need": 545, "nest": [420, 507], "new": [391, 402, 406, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 489], "next": [466, 468, 469, 472, 479, 488, 512, 514, 515, 523, 526], "nfwprofil": 25, "night": 488, "non": [391, 503, 553], "norm": [414, 506, 561, 574, 577, 579, 582], "norm_bounds_cython": 310, "normal": [343, 523], "notat": 605, "note": [391, 430, 468, 498, 499, 604], "notebook": [11, 391, 399, 428], "nov": [440, 441, 442, 443, 449, 453], "novemb": [454, 459], "now": 406, "nuisanc": 419, "number": [391, 416, 545], "numpi": 416, "o": 483, "object": [391, 392, 401, 413, 474, 475, 481, 482, 496, 498, 508], "observ": [3, 88, 92, 400, 401, 463, 468, 469, 479, 481, 482, 488, 489, 502, 508, 523, 524], "observationeventsampl": 109, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [462, 480, 490, 508], "off": [466, 468, 471, 478], "offset": [542, 543, 544, 546], "ogipdatasetread": 107, "ogipdatasetwrit": 108, "old": 422, "one": 498, "onto": 503, "open": 491, "oper": [503, 504], "optimizeresult": 216, "option": [390, 408, 499, 507], "org": 422, "organ": [397, 406], "origin": [391, 394], "other": [391, 392, 401, 422, 425, 528, 552], "outlin": 419, "outlook": [403, 404, 405, 407, 408, 410, 411, 412, 415], "output": [391, 420, 507], "over": 491, "overview": [411, 424, 480, 512, 514, 547, 549, 550], "overwrit": 391, "own": 603, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 410, 412, 422, 425, 445, 500, 518, 528, 529, 601], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 608, "paper": 400, "parabola": [466, 576, 577], "parallel": [13, 403, 420], "paramet": [217, 218, 402, 414, 419, 420, 469, 480, 499, 505, 506, 523], "parameterestim": 133, "parametersensitivityestim": 134, "parametr": 402, "parametricpsf": 167, "pdf": 344, "perform": [404, 464, 512, 524], "person": 417, "perspect": 398, "phase": [491, 597], "phasebackgroundmak": 177, "phasogram": 491, "piecewis": [561, 579], "piecewisenormspatialmodel": 255, "piecewisenormspectralmodel": 256, "pig": [395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "pip": 425, "pixel": [391, 405, 504], "pk": 498, "plan": 398, "plot": [14, 391, 463, 468, 469, 479, 480, 483, 503, 505, 507, 511, 524, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 608], "plot_contour_lin": 383, "plot_distribut": 384, "plot_heatmap": 385, "plot_map_rgb": 386, "plot_npred_sign": 387, "plot_spectrum_datasets_off_region": 388, "plot_theta_squared_t": 389, "png": 392, "point": [392, 419, 462, 463, 466, 468, 469, 478, 479, 481, 494, 496, 498, 512, 523, 524, 526, 538, 546, 562], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 257, "poisson": 604, "polar": 323, "polici": 417, "pool_kwargs_default": 337, "popul": [1, 530], "posit": [419, 509, 511, 544], "possibl": 417, "post": 421, "posterior": [420, 507], "power": [466, 569, 572, 573, 574, 580, 581, 582, 583, 584, 585, 586], "powerlaw": [466, 595], "powerlaw2spectralmodel": 258, "powerlawnormspectralmodel": 259, "powerlawspectralmodel": 260, "powerlawtemporalmodel": 261, "precis": 404, "predict": 536, "prepar": [406, 416, 462, 464, 482, 524], "prerequisit": [464, 466, 468, 469, 470, 471, 474, 478, 480, 481, 482, 483, 486, 488, 489, 490, 494, 499, 504, 505, 509, 523, 524], "pretti": 496, "primaryflux": 26, "print": 496, "prior": [262, 419, 509], "priorparamet": [219, 220], "produc": 514, "product": [495, 501], "profil": [463, 483, 495, 606], "project": [400, 422], "propag": 418, "propos": [399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 418, 420, 464, 466, 469, 471, 472, 474, 475, 478, 481, 482, 483, 486, 488, 489, 490, 493, 494, 499, 504, 505, 507, 508, 523, 524], "psf": [501, 513, 546], "psf3d": 163, "psf_tabl": 546, "psfkernel": 164, "psfking": 165, "psfmap": [166, 501], "public": 417, "pull": [391, 394, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "pulsar": [51, 491, 532, 533], "purpos": 396, "pwn": 50, "pydant": 418, "python": [391, 392, 398, 416, 428], "qualiti": [400, 422, 468, 470, 477, 499], "quantiti": [498, 508, 538], "radial": 543, "radial_distribut": 48, "radmax2d": 168, "rai": [406, 495, 545], "random": [13, 391], "rang": [502, 511, 548], "rate": 545, "read": [472, 478, 482, 483, 503, 504, 505, 553], "read_hermes_cub": [289, 291], "read_yaml": 357, "recommend": [424, 426], "reconstruct": 543, "recopsfmap": 169, "recursive_merge_dict": 358, "redshift": 463, "reduc": [4, 474, 475, 497, 523, 524], "reduct": [8, 400, 406, 464, 468, 469, 470, 477, 488, 489, 493, 502, 514, 523, 524, 548, 603], "refer": [6, 411, 602, 603, 604, 605], "reflect": [502, 549], "reflectedregionsbackgroundmak": [178, 549], "reflectedregionsfind": 179, "region": [13, 402, 405, 462, 464, 468, 470, 502, 504, 505, 549, 553], "region_to_fram": 352, "regiongeom": [204, 553], "regionndmap": [205, 553], "regions_to_compound_region": 353, "regionsfind": 180, "relat": 553, "releas": [391, 400, 416, 417, 421, 422, 430], "remark": 396, "remnant": 534, "remov": [391, 505], "renam": 391, "repositori": 422, "repr": 391, "represent": [414, 498, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "request": [391, 394, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "requir": [390, 391, 408, 418], "requires_data": 370, "requires_depend": 371, "resampl": 497, "resample_energy_edg": 149, "residu": [468, 470, 477, 524, 545], "resolv": [412, 491, 493], "respons": [7, 545], "restructur": 411, "result": [406, 415, 462, 464, 469, 472, 480, 483, 488, 493, 498, 507, 606], "return": [391, 392], "review": 396, "ring": [475, 502, 550], "ringbackgroundmak": 181, "rmf": 544, "road": 401, "roadmap": 400, "rotat": 405, "rst": 392, "run": [11, 394, 468, 469, 470, 480, 482, 483, 488, 507, 523, 603], "run_multiprocess": 339, "safe": [502, 548], "safemaskmak": 182, "sampl": [404, 420, 481, 482, 507], "sample_powerlaw": 345, "sample_spher": 346, "sample_sphere_dist": 347, "sample_tim": 348, "sampler": [221, 482, 507], "samplerresult": 222, "save": [469, 523, 524], "scale": 607, "scale_plot_flux": 290, "scaledregulargridinterpol": 330, "scalespectralmodel": 265, "scenario": 401, "schedul": 416, "scheme": [402, 417], "script": [11, 13, 391, 428, 518, 519, 521], "section": 411, "sed": 538, "select": [464, 469, 479, 488, 489, 493, 496, 505, 523, 524, 537], "select_nested_model": 292, "sensit": 462, "sensitivityestim": 135, "sep": [436, 452], "serial": [403, 418, 478], "serialis": [419, 420, 469, 483, 501, 505, 506, 513, 536], "seril": 402, "set": [394, 469, 503, 523], "setup": [399, 422, 424, 426, 427, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 482, 483, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 523, 524, 526], "sever": 391, "share": 506, "shell": 563, "shell2": 564, "shell2spatialmodel": 266, "shellspatialmodel": 267, "shorter": 414, "should": 391, "show": [479, 480, 508], "sigma_to_t": 311, "signal": 480, "signific": [464, 472, 475, 504, 511, 605], "simplepulsar": 54, "simplifi": 414, "simul": [400, 403, 470, 471, 481, 482, 486, 490], "sine": 596, "sinetemporalmodel": 268, "singl": [392, 471], "size": 553, "skip": 391, "sky": [9, 402, 405, 479, 481, 504, 544, 552], "sky_to_fov": 324, "skycoord": 552, "skymodel": [269, 506], "slice": 503, "small": 394, "smooth": [472, 583], "smoothbrokenpowerlawspectralmodel": 270, "snr": 52, "snrtruelovemcke": 53, "solut": 418, "some": [391, 401, 504, 511], "sourc": [1, 2, 462, 464, 468, 472, 479, 480, 481, 482, 490, 496, 504, 509, 512, 526, 530, 531, 532, 533, 535], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 402, "sourcemodel": 402, "spatial": [402, 414, 479, 495, 503, 506, 530, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565], "spatial_model_registri": 263, "spatialirfmodel": 402, "spatialmodel": 271, "special": 606, "specif": [402, 411, 496, 498], "spectra": 495, "spectral": [414, 419, 463, 464, 465, 466, 468, 469, 470, 478, 479, 495, 506, 507, 518, 526, 554, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 587], "spectral_model_registri": 264, "spectralirfmodel": 402, "spectralmodel": 272, "spectroscopi": 493, "spectrum": [463, 468, 470, 471, 479, 491, 502, 524], "spectrumdataset": [110, 403, 497, 536], "spectrumdatasetmak": [183, 548], "spectrumdatasetonoff": [111, 403], "sphinx": [391, 392], "spiral": 530, "split_dataset": [116, 119], "spread": [512, 546], "squar": [480, 511], "stack": [468, 475, 477, 536], "standard_scal": 317, "standardise_unit": 376, "start": [411, 424, 529, 530, 531, 537, 552], "stat": [12, 463], "stat_contour": 499, "stat_profile_ul_scipi": 293, "stat_surfac": 499, "statist": [12, 468, 504, 511, 604, 605], "statu": [396, 401, 410, 416], "step": [469, 512, 514, 515, 601], "store": [406, 469, 544], "str": 391, "structur": [410, 412, 445, 526, 601], "structure_funct": 312, "studi": 406, "style": 397, "sub": [503, 529], "subclass": 419, "subpackag": 397, "subset": 496, "suggest": 417, "summari": [431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 477, 513], "super": [584, 585, 586], "superexpcutoffpowerlaw3fglspectralmodel": 273, "superexpcutoffpowerlaw4fgldr3spectralmodel": 274, "superexpcutoffpowerlaw4fglspectralmodel": 275, "supernova": 534, "support": [391, 398, 416, 417, 419, 501, 536], "survei": [521, 608], "symmetr": 543, "systemat": 419, "t": [472, 605], "tabl": [13, 480, 496, 498, 514, 537], "table_row_to_dict": 362, "table_standardise_units_copi": 363, "table_standardise_units_inplac": 364, "tag": 414, "target": 468, "task": [402, 403, 404, 405, 406, 407, 408, 420], "templat": [481, 565, 587], "templatendspatialmodel": 277, "templatendspectralmodel": 278, "templatenpredmodel": 279, "templatephasecurvetemporalmodel": 280, "templatespatialmodel": 281, "templatespectralmodel": 282, "tempor": [482, 490, 506, 554, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "temporal_model_registri": 276, "temporalmodel": 283, "term": 417, "terminologi": 401, "test": [13, 391, 394, 420, 480, 491, 511], "text": 391, "theta": 511, "theta2": 511, "thi": 394, "through": 498, "thumbnail": 392, "time": [13, 400, 406, 461, 467, 476, 481, 485, 487, 489, 490, 492, 493, 494, 510, 517, 518, 520, 522, 527, 555, 566, 588, 599, 607], "time_ref_from_dict": 373, "time_ref_to_dict": 374, "time_relative_to_ref": 375, "timemapaxi": [206, 503], "timmerkonig_lightcurve_simul": 297, "to_yaml": 359, "tool": [11, 603], "tooltip": 392, "touch": 394, "trapz_loglog": 329, "troubleshoot": [427, 603], "true": [542, 544, 546], "ts_to_sigma": 313, "tsmapestim": 136, "tune": 420, "tutori": [392, 399, 411, 424, 480, 512, 514, 518], "two": 505, "type": [391, 418, 536, 538, 552], "uncertainti": 409, "underli": [489, 553], "understand": 507, "unfold": 419, "unfreez": 505, "unif": 415, "unifi": [402, 415], "uniformprior": 284, "unit": [13, 391], "unit_from_fits_image_hdu": 377, "unix": 391, "unreleas": 460, "up": [394, 410, 412], "upsampl": 553, "us": [391, 401, 419, 420, 425, 428, 469, 480, 481, 488, 497, 499, 501, 503, 523, 524, 528, 531, 535, 536, 537, 538, 539, 545, 547, 548, 549, 552, 573, 584, 585, 586, 600], "user": [398, 420, 541], "util": [4, 5, 8, 10, 13, 410, 601, 605, 607], "valid": 418, "valleespir": 38, "valu": [391, 419, 480, 503, 509], "vari": 490, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 481, 494], "varianc": 494, "variou": 508, "veloc": 530, "velocity_distribut": 49, "velocity_glon_glat": 325, "venv": 423, "version": [391, 416, 421, 430, 486], "virtual": 423, "visual": [14, 412, 503, 553, 608], "visualis": [472, 493, 498], "volum": 553, "warn": 391, "wc": [503, 553], "wcsgeom": 207, "wcsmap": 208, "wcsndmap": 209, "we": [399, 406, 407, 415, 514], "webpag": 422, "weighted_cash_sum_cython": 314, "what": [391, 394, 396, 399, 401, 406, 407, 415, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 466, 468, 469, 472, 479, 488, 523, 526], "where": 391, "which": 391, "wind": 533, "wise": 488, "without": 509, "wobbleregionsfind": 184, "work": 537, "workflow": [11, 601], "write": [391, 396, 469, 482, 503, 504, 537, 553, 603], "write_yaml": 360, "wstat": [315, 604, 605, 606], "wstatcountsstatist": 298, "yaml": [414, 469, 523, 557, 558, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 596, 597, 598], "your": [427, 469, 603], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})