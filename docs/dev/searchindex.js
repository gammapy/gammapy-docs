Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[420, null]], "0.10 (Jan 28, 2019)": [[421, null]], "0.11 (Mar 29, 2019)": [[422, null]], "0.12 (May 30, 2019)": [[423, null]], "0.13 (Jul 26, 2019)": [[424, null]], "0.14 (Sep 30, 2019)": [[425, null]], "0.15 (Dec 3, 2019)": [[426, null]], "0.16 (Feb 1, 2020)": [[427, null]], "0.17 (Apr 1, 2020)": [[428, null]], "0.18 (Nov 4th, 2020)": [[429, null]], "0.18.1 (Nov 6th, 2020)": [[430, null]], "0.18.2 (Nov 19th, 2020)": [[431, null]], "0.19 (Nov 22nd, 2021)": [[432, null]], "0.2 (Apr 13, 2015)": [[433, null]], "0.20 (May 12th, 2022)": [[434, null]], "0.20.1 (June 16th, 2022)": [[435, null]], "0.3 (Aug 13, 2015)": [[436, null]], "0.4 (Apr 20, 2016)": [[437, null]], "0.5 (Nov 22, 2016)": [[438, null]], "0.6 (Apr 28, 2017)": [[439, null]], "0.7 (Feb 28, 2018)": [[440, null]], "0.8 (Sep 23, 2018)": [[441, null]], "0.9 (Nov 29, 2018)": [[442, null]], "1.0 (November 10th, 2022)": [[443, null]], "1.0.1 (March 14th, 2023)": [[444, null]], "1.0.2 (December 6th, 2023)": [[445, null]], "1.1 (June 13th 2023)": [[446, null]], "1.2 (February 29th 2024)": [[447, null]], "1.3 (November 26th, 2024)": [[448, null]], "1D Spectral": [[499, "d-spectral"]], "1D spectrum simulation": [[459, null]], "2.0 (unreleased)": [[449, null]], "2D Image": [[499, "d-image"]], "2D map fitting": [[461, null]], "3D Cube": [[499, "d-cube"]], "3D detailed analysis": [[464, null]], "3D map simulation": [[472, null]], "A fully configured Flux Points Estimation": [[483, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[456, "a-note-on-statistics"]], "A note on the internal representation": [[483, "a-note-on-the-internal-representation"]], "API Links": [[382, "api-links"]], "API changes": [[443, "api-changes"], [446, "api-changes"], [447, "api-changes"], [448, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[118, null]], "Abstract": [[386, "abstract"], [387, "abstract"], [388, "abstract"], [389, "abstract"], [390, "abstract"], [391, "abstract"], [393, "abstract"], [394, "abstract"], [395, "abstract"], [396, "abstract"], [397, "abstract"], [398, "abstract"], [399, "abstract"], [400, "abstract"], [401, "abstract"], [402, "abstract"], [403, "abstract"], [404, "abstract"], [405, "abstract"], [406, "abstract"], [407, "abstract"], [408, "abstract"], [409, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[384, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[487, "accessing-data"]], "Accessing and visualising results": [[460, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[483, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[482, "accessing-contents-of-a-dataset"]], "Accessor methods": [[531, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[452, null]], "Adaptive smoothing": [[460, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[168, null]], "Add a model on multiple datasets": [[489, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[392, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[487, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[487, "adding-non-contiguous-axes"]], "Additional Models": [[404, "additional-models"]], "Additional PSF classes": [[525, "additional-psf-classes"]], "Additional utilities": [[577, "additional-utilities"]], "Aim": [[489, "aim"]], "Alternative": [[405, "alternative"]], "Alternatives": [[389, "alternatives"], [392, "alternatives"], [395, "alternatives"], [397, "alternatives"], [398, "alternatives"], [399, "alternatives"], [401, "alternatives"], [402, "alternatives"], [408, "alternatives"]], "Alternatives / Outlook": [[394, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[457, "analysis-configuration"], [464, "analysis-configuration"], [473, "analysis-configuration"], [503, "analysis-configuration"]], "Analysis steps": [[577, "analysis-steps"]], "Analysis workflow": [[577, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (PSF_TABLE)": [[525, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[381, "assert-convention"]], "Assign to model to all datasets": [[474, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[489, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[510, null]], "Astrophysical source population models": [[509, null]], "Astrophysics": [[508, null]], "Authorship policy": [[407, "authorship-policy"]], "BACKEND_DEFAULT": [[323, null]], "BSD or GPL license?": [[381, "bsd-or-gpl-license"]], "Background": [[494, "background"], [522, null]], "Background / What we have now": [[396, "background-what-we-have-now"]], "Background Model Handling": [[403, "background-model-handling"]], "Background estimation": [[486, "background-estimation"], [527, "background-estimation"]], "Background2D": [[147, null]], "Background3D": [[148, null]], "BackgroundIRF": [[149, null]], "BackgroundIRFModel": [[392, "backgroundirfmodel"]], "BackgroundModel": [[392, "backgroundmodel"]], "Basic image exploration and fitting": [[466, null]], "Basic operators": [[487, "basic-operators"]], "Bayesian blocks": [[479, "bayesian-blocks"]], "Bin volume and angular size": [[532, "bin-volume-and-angular-size"]], "Boundary mask": [[488, "boundary-mask"]], "Broken power law spectral model": [[546, null]], "BrokenPowerLawSpectralModel": [[218, null]], "Bug fixes and improvements": [[434, "bug-fixes-and-improvements"], [443, "bug-fixes-and-improvements"], [446, "bug-fixes-and-improvements"], [447, "bug-fixes-and-improvements"], [448, "bug-fixes-and-improvements"]], "Build": [[411, "build"]], "Building 1D datasets from the new observations": [[474, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[473, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[473, "building-the-3d-analysis-configuration"]], "Built-in models": [[576, "built-in-models"]], "Bundled gammapy.extern code": [[381, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[407, "citation-cff"]], "CLUMPY": [[507, "clumpy"]], "CTA 1DC": [[494, "cta-1dc"]], "CTAO with Gammapy": [[494, null]], "Caplog fixture": [[381, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[409, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 2: Favoring positive values for flux amplitudes": [[409, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[409, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[580, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[581, "cash-counts-statistic"]], "CashCountsStatistic": [[289, null]], "Catalog table": [[481, "catalog-table"]], "Caveat": [[580, "caveat"]], "Changelog": [[401, "changelog"]], "Check Python code": [[382, "check-python-code"]], "Check broken links": [[382, "check-broken-links"]], "Check setup": [[451, "check-setup"], [453, "check-setup"], [456, "check-setup"], [457, "check-setup"], [458, "check-setup"], [459, "check-setup"], [460, "check-setup"], [461, "check-setup"], [462, "check-setup"], [464, "check-setup"], [465, "check-setup"], [466, "check-setup"], [467, "check-setup"], [468, "check-setup"], [469, "check-setup"], [470, "check-setup"], [473, "check-setup"], [474, "check-setup"], [475, "check-setup"], [476, "check-setup"], [480, "check-setup"], [481, "check-setup"], [482, "check-setup"], [484, "check-setup"], [486, "check-setup"], [487, "check-setup"], [488, "check-setup"], [489, "check-setup"], [490, "check-setup"], [492, "check-setup"], [494, "check-setup"], [495, "check-setup"], [496, "check-setup"], [497, "check-setup"], [503, "check-setup"], [504, "check-setup"], [505, "check-setup"]], "Check the dataset we produced": [[496, "check-the-dataset-we-produced"]], "Check your setup": [[416, "check-your-setup"]], "Checker": [[355, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[382, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[407, "citation-scheme"]], "Class attributes": [[382, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[400, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[381, "clobber-or-overwrite"]], "Code in RST files": [[382, "code-in-rst-files"]], "Code in docstrings in Python files": [[382, "code-in-docstrings-in-python-files"]], "Code quality": [[411, "code-quality"]], "Collection of the personal information of authors": [[407, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[584, "colormaps"]], "Combining event lists and GTIs": [[516, "combining-event-lists-and-gtis"]], "Combining two Models": [[489, "combining-two-models"]], "Command line tools": [[579, null]], "Command line tools using click": [[381, "command-line-tools-using-click"]], "Command not found": [[579, "command-not-found"]], "Common API": [[483, "common-api"]], "Compare against the literature": [[458, "compare-against-the-literature"]], "Compare results": [[473, "compare-results"]], "Compound Spectral Model": [[490, "compound-spectral-model"]], "Compound spectral model": [[547, null]], "CompoundSpectralModel": [[219, null]], "Computation times": [[450, null], [455, null], [463, null], [471, null], [477, null], [493, null], [498, null], [500, null], [502, null], [506, null], [534, null], [544, null], [565, null], [575, null]], "Compute Flux Points": [[456, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[462, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[466, "compute-images"]], "Compute sensitivity": [[451, "compute-sensitivity"]], "Computing contours using stat_contour": [[484, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[484, "computing-contours-using-stat-surface"]], "Computing flux points": [[504, "computing-flux-points"]], "Conda Environments": [[412, "conda-environments"]], "Confidence contours": [[484, "confidence-contours"]], "Configurable analysis": [[577, "configurable-analysis"]], "Configuration": [[470, "configuration"]], "Configuration for stacked and joint analysis": [[464, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[457, "configuration-of-the-analysis"]], "Constant spatial model": [[535, null]], "Constant spectral model": [[548, null]], "Constant temporal model": [[566, null]], "ConstantFluxSpatialModel": [[220, null]], "ConstantSpatialModel": [[221, null]], "ConstantSpectralModel": [[222, null]], "ConstantTemporalModel": [[223, null]], "Context": [[453, "context"], [454, "context"], [456, "context"], [457, "context"], [458, "context"], [459, "context"], [460, "context"], [461, "context"], [462, "context"], [465, "context"], [467, "context"], [468, "context"], [470, "context"], [472, "context"], [473, "context"], [474, "context"], [475, "context"], [478, "context"], [479, "context"], [488, "context"], [491, "context"], [492, "context"], [503, "context"], [504, "context"]], "Continuous integration": [[411, "continuous-integration"]], "Contribution in conferences": [[407, "contribution-in-conferences"]], "Contributors": [[420, "contributors"], [421, "contributors"], [422, "contributors"], [423, "contributors"], [424, "contributors"], [425, "contributors"], [426, "contributors"], [427, "contributors"], [428, "contributors"], [429, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"], [435, "contributors"], [436, "contributors"], [437, "contributors"], [438, "contributors"], [439, "contributors"], [440, "contributors"], [441, "contributors"], [442, "contributors"], [443, "contributors"], [444, "contributors"], [445, "contributors"], [446, "contributors"], [447, "contributors"], [448, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[381, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[381, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[532, "coordinates-defined-by-the-regiongeom"]], "Correct format for bullet point list": [[382, "correct-format-for-bullet-point-list"]], "Counts": [[495, "counts"]], "Counts and fit statistics": [[581, "counts-and-fit-statistics"]], "Counts statistics classes": [[581, "counts-statistics-classes"]], "Covariance": [[209, null]], "Covariance and parameters errors": [[484, "covariance-and-parameters-errors"]], "CovarianceResult": [[210, null]], "Create DL4 product - PSFMap": [[485, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[483, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[488, "create-a-mask-in-energy"]], "Create a stacked dataset": [[462, "create-a-stacked-dataset"]], "Create edisp kernel map": [[485, "create-edisp-kernel-map"]], "Create exclusion mask": [[456, "create-exclusion-mask"], [462, "create-exclusion-mask"]], "Create exposure map": [[485, "create-exposure-map"]], "Create the energy-dependent temporal model": [[469, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[504, "create-the-maker-classes-to-be-used"]], "Create the makers": [[453, "create-the-makers"]], "Create the mask from a catalog of sources": [[488, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[488, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[488, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[488, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[469, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[487, "creating-wcs-maps"]], "Creating a RegionGeom": [[532, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[532, "creating-a-regionndmap"]], "Creating a mask for fitting": [[488, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[488, "creating-a-mask-manually"]], "Creating an empty dataset": [[482, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[488, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[487, "creating-from-a-map-geometry"]], "Creating the config file": [[461, "creating-the-config-file"], [462, "creating-the-config-file"]], "Creation of the Flux points": [[457, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[474, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[474, "creation-of-the-datasets"]], "Creation of the model": [[457, "creation-of-the-model"]], "Cube plotting": [[487, "cube-plotting"]], "Cumulative excess and significance": [[453, "cumulative-excess-and-significance"]], "Current status": [[406, "current-status"]], "Custom models": [[576, "custom-models"]], "Cutouts": [[487, "cutouts"]], "Cython": [[411, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[407, "dco-implementation"]], "DL3 DR1": [[497, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[308, null]], "Dark matter": [[507, null]], "Dark matter spatial and spectral models": [[480, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[396, "data-fitting"]], "Data access and selection (DL3)": [[516, null]], "Data analysis": [[499, "data-analysis"]], "Data analysis subpackages in gammapy": [[387, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[390, "data-and-observation-handling"]], "Data and models files": [[465, "data-and-models-files"]], "Data exploration": [[499, "data-exploration"]], "Data reduction": [[396, "data-reduction"], [464, "data-reduction"], [464, "id1"], [478, "data-reduction"], [503, "data-reduction"], [504, "data-reduction"]], "Data reduction (DL3 to DL4)": [[527, null]], "Data reduction into a MapDataset": [[496, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[486, "data-reduction-loop"]], "Data selection": [[478, "data-selection"]], "Data structures": [[505, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [393, "dataset"], [486, "dataset"]], "Dataset helper / convenience methods": [[393, "dataset-helper-convenience-methods"]], "Dataset serialization": [[393, "dataset-serialization"]], "Dataset simulations": [[458, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[483, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[224, null]], "Datasets": [[100, null], [390, "datasets"], [393, "datasets"], [408, "datasets"], [482, "datasets"]], "Datasets (DL4)": [[515, null]], "Datasets - Reduced data, IRFs, models": [[482, null]], "Datasets serialization": [[465, "datasets-serialization"]], "DatasetsMaker": [[169, null]], "Datastore": [[494, "datastore"]], "Dealing with links": [[382, "dealing-with-links"]], "Decision": [[386, "decision"], [387, "decision"], [388, "decision"], [389, "decision"], [390, "decision"], [391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"], [397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"], [401, "decision"], [402, "decision"], [403, "decision"], [404, "decision"], [405, "decision"], [406, "decision"], [407, "decision"], [408, "decision"], [409, "decision"]], "Define Target Region": [[456, "define-target-region"]], "Define an Observation": [[468, "define-an-observation"]], "Define an observation and make a dataset": [[469, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[451, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[466, "define-map-geometry"]], "Define the MapDataset": [[468, "define-the-mapdataset"]], "Define the ON region": [[458, "define-the-on-region"]], "Define the Sky model: a point-like source": [[468, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[453, "define-the-geometries"]], "Define the geometry": [[488, "define-the-geometry"]], "Define the model": [[504, "define-the-model"]], "Define the model to be used": [[473, "define-the-model-to-be-used"], [473, "id3"]], "Define the simulation source model": [[469, "define-the-simulation-source-model"]], "Define time intervals": [[474, "define-time-intervals"]], "Define underlying model": [[474, "define-underlying-model"]], "Defining the datastore and selecting observations": [[504, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[474, "defining-the-geometry"]], "Definition of a Contributor": [[407, "definition-of-a-contributor"]], "Definition of the Maintainer": [[407, "definition-of-the-maintainer"]], "Definition of the data selection": [[473, "definition-of-the-data-selection"], [473, "id1"]], "Definition of the dataset geometry": [[473, "definition-of-the-dataset-geometry"], [473, "id2"]], "Dependencies": [[380, null], [398, "dependencies"]], "Deprecating a function or a class": [[381, "deprecating-a-function-or-a-class"]], "Deprecation": [[406, "deprecation"]], "Derivation of the WStat formula": [[582, null]], "Detailed plan": [[388, "detailed-plan"]], "Developer How To": [[381, null]], "Developer guide": [[383, null]], "Discussion / Alternatives": [[396, "discussion-alternatives"]], "Disk spatial model": [[536, null]], "DiskSpatialModel": [[225, null]], "Dissolve gammapy.background": [[400, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[400, "dissolve-gammapy-image"]], "Distributions": [[398, "distributions"], [398, "id1"]], "Documentation": [[390, "documentation"], [447, "documentation"]], "Documentation How To": [[382, null]], "Documentation building": [[382, "documentation-building"]], "Documentation guidelines": [[382, "documentation-guidelines"]], "Documentation improvements": [[448, "documentation-improvements"]], "Download": [[411, "download"]], "EBL absorption spectral model": [[545, null]], "EBLAbsorptionNormSpectralModel": [[226, null]], "EBL_DATA_BUILTIN": [[227, null]], "EDispKernel": [[150, null]], "EDispKernelMap": [[151, null]], "EDispMap": [[152, null]], "ESTIMATOR_REGISTRY": [[119, null]], "Effective Area": [[485, "effective-area"]], "Effective area": [[494, "effective-area"], [521, null]], "EffectiveAreaTable2D": [[153, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[404, "energy-dependent-spatial-models"]], "Energy Dispersion": [[485, "energy-dispersion"], [495, "energy-dispersion"], [523, null]], "Energy dispersion": [[494, "energy-dispersion"]], "Energy edges": [[517, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[120, null]], "EnergyDependentMultiGaussPSF": [[154, null]], "EnergyDispersion2D": [[155, null]], "Estimating TS": [[581, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[479, null]], "Estimator": [[121, null]], "Estimators": [[408, "estimators"], [483, null]], "Estimators (DL4 to DL5, and DL6)": [[517, null]], "Event Simulation": [[390, "event-simulation"]], "Event lists": [[505, "event-lists"]], "Event sampling": [[468, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[494, "events"], [495, "events"]], "Example": [[580, "example"], [580, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[492, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[492, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[564, "example-of-extrapolation"]], "Example plot": [[535, "example-plot"], [536, "example-plot"], [537, "example-plot"], [538, "example-plot"], [539, "example-plot"], [540, "example-plot"], [541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"], [549, "example-plot"], [550, "example-plot"], [551, "example-plot"], [552, "example-plot"], [553, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"], [557, "example-plot"], [558, "example-plot"], [559, "example-plot"], [560, "example-plot"], [561, "example-plot"], [562, "example-plot"], [563, "example-plot"], [564, "example-plot"], [566, "example-plot"], [567, "example-plot"], [568, "example-plot"], [569, "example-plot"], [570, "example-plot"], [571, "example-plot"], [572, "example-plot"]], "Examples using FluxPointsEstimator": [[517, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[517, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[515, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[527, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[515, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[527, "examples-using-spectrumdatasetmaker"]], "Examples using gammapy.analysis.Analysis": [[518, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[526, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[528, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[581, "excess-and-significance"], [581, "id2"]], "Excess errors": [[581, "excess-errors"], [581, "id4"]], "Excess estimators": [[405, "excess-estimators"]], "ExcessMapEstimator": [[122, null]], "Exclusion masks": [[488, "exclusion-masks"]], "Execution": [[579, "execution"]], "Exemplary additional prior subclasses:": [[409, "exemplary-additional-prior-subclasses"]], "Exercises": [[451, "exercises"], [454, "exercises"], [456, "exercises"], [459, "exercises"], [464, "exercises"], [466, "exercises"], [468, "exercises"], [469, "exercises"], [475, "exercises"], [478, "exercises"], [494, "exercises"], [495, "exercises"], [496, "exercises"], [497, "exercises"], [505, "exercises"], [505, "id1"], [505, "id2"], [505, "id3"]], "Existing code": [[387, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[228, null]], "ExpCutoffPowerLawNormSpectralModel": [[229, null]], "ExpCutoffPowerLawSpectralModel": [[230, null]], "ExpDecay temporal model": [[567, null]], "ExpDecayTemporalModel": [[231, null]], "Expected number of detected events": [[524, "expected-number-of-detected-events"]], "Exploration of the fit results": [[457, "exploration-of-the-fit-results"]], "Explore the fit results": [[453, "explore-the-fit-results"]], "Explore the results": [[453, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[454, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[551, null]], "Exponential cutoff power law spectral model": [[549, null]], "Exponential cutoff power law spectral model used for 3FGL": [[550, null]], "Expose model parameters as attributes": [[392, "expose-model-parameters-as-attributes"]], "Exposure": [[495, "exposure"]], "Extended source using a template": [[468, "extended-source-using-a-template"]], "Extract the light curve": [[474, "extract-the-light-curve"]], "Extract the lightcurve": [[475, "extract-the-lightcurve"]], "Extracting the light curve": [[473, "extracting-the-light-curve"]], "Extracting the ring background": [[462, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[524, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[410, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[465, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[495, null]], "FermiST": [[507, "fermist"]], "Files": [[494, "files"]], "Filling a RegionNDMap": [[532, "filling-a-regionndmap"]], "Filling maps from event lists": [[487, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[487, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[474, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[386, "final-remarks"]], "Final result": [[582, "final-result"]], "Fit": [[211, null], [472, "fit"], [495, "fit"]], "Fit quality and model residuals": [[456, "fit-quality-and-model-residuals"], [458, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[484, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[464, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[464, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[456, "fit-spectrum"], [458, "fit-spectrum"]], "Fit statistics": [[580, null]], "Fit the datasets": [[475, "fit-the-datasets"]], "Fit the model": [[504, "fit-the-model"]], "FitResult": [[212, null]], "Fitting": [[390, "fitting"], [484, null]], "Fitting Multiple Datasets with and without the Prior": [[492, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[492, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[484, "fitting-options"]], "Fitting temporal models": [[475, "fitting-temporal-models"]], "Fitting the obtained light curve": [[475, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[381, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[381, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[483, "flux-points-estimation"]], "Flux Profile Estimation": [[470, null]], "Flux maps": [[517, "flux-maps"]], "Flux maps for annihilation": [[480, "flux-maps-for-annihilation"]], "Flux maps for decay": [[480, "flux-maps-for-decay"]], "Flux point fitting": [[454, null]], "Flux points": [[481, "flux-points"], [503, "flux-points"], [517, "flux-points"]], "Flux quantities": [[517, "flux-quantities"]], "FluxMaps": [[123, null]], "FluxMetaData": [[124, null]], "FluxPoints": [[125, null]], "FluxPointsDataset": [[101, null], [393, "fluxpointsdataset"], [482, "fluxpointsdataset"]], "FluxPointsEstimator": [[126, null]], "FluxProfileEstimator": [[127, null]], "FoV background": [[486, "fov-background"], [526, null]], "FoVAlignment": [[156, null]], "FoVBackgroundMaker": [[170, null]], "FoVBackgroundModel": [[232, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[479, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[489, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[382, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[381, "functions-returning-several-values"]], "Further extensions": [[452, "further-extensions"]], "Further references": [[580, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[495, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[509, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[480, "gamma-ray-spectra-at-production"]], "Gammapy": [[418, null]], "Gammapy Binder": [[411, "id1"]], "Gammapy analysis workflow and package structure": [[577, null]], "Gammapy overview": [[401, "gammapy-overview"]], "Gammapy repository": [[411, "gammapy-repository"]], "Gammapy webpages": [[411, "gammapy-webpages"]], "Gaussian spatial model": [[537, null]], "Gaussian spectral model": [[552, null]], "Gaussian temporal model": [[568, null]], "GaussianPrior": [[233, null]], "GaussianSpatialModel": [[234, null]], "GaussianSpectralModel": [[235, null]], "GaussianTemporalModel": [[236, null]], "General Gammapy publications": [[407, "general-gammapy-publications"]], "General code style guidelines": [[387, "general-code-style-guidelines"]], "General conventions": [[381, "general-conventions"]], "General idea and class diagram": [[391, "general-idea-and-class-diagram"]], "General method": [[517, "general-method"]], "General organization of the new approach": [[396, "general-organization-of-the-new-approach"]], "Generalist estimators": [[405, "generalist-estimators"]], "Generalized Gaussian temporal model": [[569, null]], "Generalized gaussian spatial model": [[538, null]], "GeneralizedGaussianSpatialModel": [[237, null]], "GeneralizedGaussianTemporalModel": [[238, null]], "Generating log messages": [[381, "generating-log-messages"]], "Geom": [[191, null]], "Get a fit stat profile for the redshift": [[452, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[384, "get-in-touch-early"]], "Get set up": [[384, "get-set-up"]], "Get the flux points": [[452, "get-the-flux-points"]], "Getting started": [[401, "getting-started"], [413, null], [508, "getting-started"], [509, "getting-started"], [510, "getting-started"]], "Getting started section restructuring": [[401, "getting-started-section-restructuring"]], "Getting started with data": [[516, "getting-started-with-data"]], "Getting started with maps": [[531, "getting-started-with-maps"]], "Getting the reduced dataset": [[461, "getting-the-reduced-dataset"], [462, "getting-the-reduced-dataset"]], "Global Model Handling": [[403, "global-model-handling"]], "Glossary": [[578, "glossary"]], "Glossary and references": [[578, null]], "Goodness of fit": [[582, "goodness-of-fit"]], "Guidelines and specific actions": [[401, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[497, null]], "HAWC data access and reduction": [[496, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[496, null]], "HAWC: 1D dataset for flux point fitting": [[465, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[316, null]], "HEALPix geometry": [[530, "healpix-geometry"]], "HEALPix-based maps": [[530, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[465, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[407, "handling-of-conference-material"]], "Help!?": [[416, "help"]], "Hierarchical clustering of observations": [[491, "hierarchical-clustering-of-observations"]], "Hierarchy": [[408, "hierarchy"]], "High Level Analysis Interface": [[518, null]], "High level interface": [[390, "high-level-interface"], [503, null]], "How To": [[401, "how-to"], [519, null]], "How to contribute to Gammapy": [[384, null]], "How to get data values": [[487, "how-to-get-data-values"]], "How to handle API breaking changes?": [[381, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[410, null]], "How to make a pull request": [[381, "how-to-make-a-pull-request"]], "How to set data values": [[487, "how-to-set-data-values"]], "How to use logging": [[381, "how-to-use-logging"]], "How to use random numbers": [[381, "how-to-use-random-numbers"]], "How to write code": [[381, "how-to-write-code"]], "How to write tests": [[381, "how-to-write-tests"]], "HpxGeom": [[192, null]], "HpxMap": [[193, null]], "HpxNDMap": [[194, null]], "IPython": [[417, "id3"]], "IRF": [[157, null], [408, "irf"]], "IRF axis naming": [[524, "irf-axis-naming"]], "IRFMap": [[158, null]], "IRF_REGISTRY": [[159, null]], "IRFs": [[390, "irfs"], [494, "irfs"]], "Image Plotting": [[487, "image-plotting"]], "ImageProfile": [[128, null]], "ImageProfileEstimator": [[129, null]], "Images and masks": [[395, "images-and-masks"]], "Implement default parameters": [[392, "implement-default-parameters"]], "Implement evaluation region specifications": [[392, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[392, "implement-sky-coordinate-handling"]], "Implementation": [[401, "implementation"], [409, "implementation"]], "Implementation Outline": [[409, "implementation-outline"]], "Implementation road map": [[391, "implementation-road-map"]], "Implementing a custom model": [[490, "implementing-a-custom-model"]], "Implementing a custom prior": [[492, "implementing-a-custom-prior"]], "Imports and versions": [[472, "imports-and-versions"]], "Improve SourceModels class": [[392, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[392, "improve-and-implement-model-serilization"]], "Improve spatial models": [[392, "improve-spatial-models"]], "In the RST files": [[382, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[485, "inbuilt-gammapy-irfs"]], "Include png files as images": [[382, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[487, "indexing-and-slicing-sub-maps"]], "Infrastructure": [[448, "infrastructure"]], "Inspect the reduced dataset": [[504, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[504, "inspecting-residuals"]], "Install issues": [[416, "install-issues"]], "Installation": [[401, "installation"], [413, "installation"], [414, null]], "Instrument Response Functions (DL3)": [[524, null]], "Interaction Between Models and Dataset Objects": [[403, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[531, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[487, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[381, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[404, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[405, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[405, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[405, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[402, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[402, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[402, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[400, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[402, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[392, "introduce-naming-scheme-for-models"]], "Introduction": [[392, "introduction"], [395, "introduction"], [396, "introduction"], [398, "introduction"], [399, "introduction"], [401, "introduction"], [405, "introduction"], [407, "introduction"], [408, "introduction"], [451, "introduction"], [456, "introduction"], [458, "introduction"], [466, "introduction"], [476, "introduction"], [480, "introduction"], [481, "introduction"], [482, "introduction"], [486, "introduction"], [487, "introduction"], [494, "introduction"], [495, "introduction"], [496, "introduction"], [497, "introduction"], [499, "introduction"], [505, "introduction"], [507, "introduction"], [509, "introduction"], [510, "introduction"], [580, "introduction"]], "Introduction of background models": [[392, "introduction-of-background-models"]], "Introduction of model name attributes": [[392, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[392, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[330, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[495, "isotropic-diffuse-background"]], "Iterating by image": [[487, "iterating-by-image"]], "J Factors": [[480, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[515, "joint-analysis"]], "Joint analysis": [[464, "joint-analysis"], [465, "joint-analysis"]], "Jupyter": [[413, "id2"], [415, "jupyter"]], "Jupyter notebooks": [[417, "jupyter-notebooks"]], "Key Features": [[483, "key-features"]], "Known issues": [[448, "known-issues"]], "LabelMapAxis": [[195, null], [487, "labelmapaxis"]], "Latest CTAO performance files": [[494, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[393, "lazy-loading-of-datasets"]], "LazyFitsData": [[317, null]], "Let\u2019s simulate the model": [[469, "let-s-simulate-the-model"]], "Light Curve Fitting": [[396, "light-curve-fitting"]], "Light Curve estimation by observation": [[473, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[574, null]], "Light curves": [[473, null]], "Light curves for flares": [[474, null]], "LightCurveEstimator": [[130, null]], "LightCurveTemplateTemporalModel": [[239, null]], "Lightcurve": [[396, "lightcurve"]], "Lightcurves": [[481, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[396, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[391, "limitations"]], "Linear temporal model": [[570, null]], "LinearTemporalModel": [[240, null]], "Links to documentation": [[382, "links-to-documentation"]], "Links to other tutorials": [[382, "links-to-other-tutorials"]], "List available catalogs": [[481, "list-available-catalogs"]], "Load Data": [[456, "load-data"]], "Load IRFs and prepare dataset": [[451, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[481, "load-catalogs"]], "Load data": [[458, "load-data"]], "Load spectral points": [[454, "load-spectral-points"]], "Load the data": [[452, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[483, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[496, "load-the-tables"]], "Loading models from a catalog": [[489, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[381, "locate-origin-of-warnings"]], "Log parabola spectral model": [[553, null]], "Log parabola spectral norm model": [[554, null]], "Log-Parabola Fit": [[454, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[241, null]], "LogParabolaSpectralModel": [[242, null]], "LogSpiral": [[34, null]], "LogUniformPrior": [[243, null]], "Long Term Support releases": [[407, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[504, null]], "Low level map and cube analysis": [[387, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[171, null]], "METHOD_DEFAULT": [[324, null]], "METHOD_KWARGS_DEFAULT": [[325, null]], "MODEL_REGISTRY": [[244, null]], "Maintainer and developer perspective": [[388, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[390, "maintenance-and-code-quality"]], "Make a Bugfix release": [[410, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[476, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[466, "make-sky-images"]], "Make small pull requests": [[384, "make-small-pull-requests"]], "Maker": [[172, null]], "Makers": [[408, "makers"]], "Makers - Data reduction": [[486, null]], "Making a butterfly plot": [[504, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[381, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[381, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[381, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[491, "manual-grouping-of-observations"]], "Map": [[196, null]], "Map Analysis / Data Reduction": [[390, "map-analysis-data-reduction"]], "MapAxes": [[197, null]], "MapAxis": [[198, null]], "MapCoord": [[199, null], [531, "mapcoord"]], "MapDataset": [[102, null], [393, "mapdataset"], [482, "mapdataset"]], "MapDatasetEventSampler": [[103, null], [394, "mapdataseteventsampler"]], "MapDatasetMaker": [[173, null]], "MapDatasetMetaData": [[104, null]], "MapDatasetOnOff": [[105, null], [393, "mapdatasetonoff"]], "MapPanelPlotter": [[368, null]], "Maps": [[200, null], [390, "maps"], [487, null], [505, "maps"]], "Maps operations": [[487, "maps-operations"]], "Mask dilation and erosion": [[488, "mask-dilation-and-erosion"]], "Mask maps": [[488, null]], "Mask modifications": [[488, "mask-modifications"]], "Mask some sky regions": [[488, "mask-some-sky-regions"]], "Masks for fitting": [[488, "masks-for-fitting"]], "Masks operations": [[488, "masks-operations"]], "Meetings": [[390, "meetings"]], "Metadata API": [[408, "metadata-api"]], "Metadata files": [[407, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[408, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[479, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[245, null]], "Minor changes": [[402, "minor-changes"]], "Mission elapsed times (MET)": [[583, "mission-elapsed-times-met"]], "Model": [[246, null]], "Model and dataset": [[484, "model-and-dataset"], [492, "model-and-dataset"]], "Model fit": [[466, "model-fit"]], "Model fitting": [[457, "model-fitting"], [503, "model-fitting"]], "Model gallery": [[533, null]], "Model lists and serialisation": [[490, "model-lists-and-serialisation"]], "Model the observed spectrum": [[452, "model-the-observed-spectrum"]], "ModelBase": [[247, null]], "Modeling": [[390, "modeling"], [408, "modeling"], [478, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[576, null]], "Modeling and fitting": [[464, "modeling-and-fitting"]], "Modelling": [[461, "modelling"], [489, null]], "Models": [[248, null], [490, null]], "Models with energy dependent morphology": [[490, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[490, "models-with-shared-parameter"]], "Modifying Data": [[487, "modifying-data"]], "Modifying model parameters": [[490, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[467, null]], "Motivation": [[409, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[465, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[326, null]], "Naima spectral model": [[555, null]], "NaimaSpectralModel": [[249, null]], "New features": [[443, "new-features"], [446, "new-features"], [447, "new-features"], [448, "new-features"]], "Next steps": [[494, "next-steps"], [496, "next-steps"], [497, "next-steps"]], "Night-wise LC estimation": [[473, "night-wise-lc-estimation"]], "Norm Spectral Models": [[490, "norm-spectral-models"]], "Notations": [[581, "notations"]], "Notes": [[580, "notes"]], "OGIPDatasetReader": [[106, null]], "OGIPDatasetWriter": [[107, null]], "Object text repr, str and info": [[381, "object-text-repr-str-and-info"]], "Objective": [[461, "objective"], [462, "objective"], [468, "objective"], [469, "objective"], [491, "objective"]], "Objectives": [[391, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[486, "observation-duration-and-effective-livetime"]], "Observation selection": [[457, "observation-selection"], [503, "observation-selection"]], "ObservationEventSampler": [[108, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[491, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[467, "obtain-the-data-to-use"]], "Obtain the observations": [[491, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[451, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[411, "old-example-data"]], "On-Off analysis": [[459, "on-off-analysis"]], "Opening the data": [[476, "opening-the-data"]], "OptimizeResult": [[213, null]], "Optional dependencies": [[380, "optional-dependencies"], [398, "optional-dependencies"]], "Other folders": [[411, "other-folders"]], "Other packages": [[507, "other-packages"]], "Other repositories": [[411, "other-repositories"]], "Others": [[381, "others"], [411, "others"]], "Outlook": [[393, "outlook"], [395, "outlook"], [397, "outlook"], [398, "outlook"], [400, "outlook"], [401, "outlook"], [402, "outlook"], [405, "outlook"]], "Output in Jupyter notebook cells": [[381, "output-in-jupyter-notebook-cells"]], "Overview": [[526, "overview"], [528, "overview"], [529, "overview"]], "PIG 1 - PIG purpose and guidelines": [[386, null]], "PIG 10 - Regions": [[395, null]], "PIG 11 - Light curves": [[396, null]], "PIG 12 - High level interface": [[397, null]], "PIG 13 - Gammapy dependencies and distribution": [[398, null]], "PIG 14 - Uncertainty estimation": [[399, null]], "PIG 16 - Gammapy package structure": [[400, null]], "PIG 18 - Documentation": [[401, null]], "PIG 19 - Gammapy package structure follow up": [[402, null]], "PIG 2 - Organization of low level analysis code": [[387, null]], "PIG 20 - Global Model API": [[403, null]], "PIG 21 - Models improvements": [[404, null]], "PIG 22 - Unified flux estimators API": [[405, null]], "PIG 23 - Gammapy release cycle and version numbering": [[406, null]], "PIG 24 - Authorship policy": [[407, null]], "PIG 25 - Metadata container for Gammapy": [[408, null]], "PIG 26 - Model Priors API": [[409, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[388, null]], "PIG 4 - Setup for tutorial notebooks and data": [[389, null]], "PIG 5 - Gammapy 1.0 roadmap": [[390, null]], "PIG 6 - CTA observation handling": [[391, null]], "PIG 7 - Models": [[392, null]], "PIG 8 - Datasets": [[393, null]], "PIG 9 - Event sampling": [[394, null]], "PIG review": [[386, "pig-review"]], "PIG status": [[386, "pig-status"]], "PIGs": [[385, null]], "POOL_KWARGS_DEFAULT": [[327, null]], "PSF": [[485, "psf"], [495, "psf"]], "PSF3D": [[160, null]], "PSFKernel": [[161, null]], "PSFKing": [[162, null]], "PSFMap": [[163, null]], "PWN": [[50, null]], "Package / API": [[499, "package-api"]], "Package and docs": [[411, "package-and-docs"]], "Package structure and dependencies": [[434, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[390, "papers"]], "Parallel evaluation of datasets": [[393, "parallel-evaluation-of-datasets"]], "Parameter": [[214, null]], "ParameterEstimator": [[131, null]], "Parameters": [[215, null]], "ParametricPSF": [[164, null]], "Perform spectral model fitting": [[453, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[504, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[453, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[394, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[573, null]], "Phase-resolved map": [[476, "phase-resolved-map"]], "Phase-resolved spectrum": [[476, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[174, null]], "Phasogram": [[476, "phasogram"]], "Piecewise  norm spectral model": [[556, null]], "Piecewise norm spatial model": [[539, null]], "PiecewiseNormSpatialModel": [[250, null]], "PiecewiseNormSpectralModel": [[251, null]], "Pixel coordinate convention": [[381, "pixel-coordinate-convention"]], "Plot": [[466, "plot"]], "Plot off regions": [[456, "plot-off-regions"]], "Plot the fitted spectrum": [[504, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[452, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[470, "plotting-results"]], "Plotting a RegionGeom": [[532, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[489, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[457, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[532, "plotting-the-map-content"]], "Plotting the results": [[467, "plotting-the-results"]], "Plotting the underlying region": [[532, "plotting-the-underlying-region"]], "Point Spread Function": [[525, null]], "Point source sensitivity": [[451, null]], "Point spatial model": [[540, null]], "Point spread function": [[494, "point-spread-function"]], "PointSpatialModel": [[252, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[407, "possible-implementations"]], "Post release": [[410, "post-release"]], "Power Law Fit": [[454, "power-law-fit"]], "Power law 2 spectral model": [[558, null]], "Power law norm spectral model": [[559, null]], "Power law spectral model": [[557, null]], "PowerLaw temporal model": [[571, null]], "PowerLaw2SpectralModel": [[253, null]], "PowerLawNormSpectralModel": [[254, null]], "PowerLawSpectralModel": [[255, null]], "PowerLawTemporalModel": [[256, null]], "Predicted counts": [[515, "predicted-counts"]], "Prepare and run the event sampler": [[469, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[453, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[504, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[453, "prerequisites"], [454, "prerequisites"], [456, "prerequisites"], [457, "prerequisites"], [458, "prerequisites"], [459, "prerequisites"], [461, "prerequisites"], [465, "prerequisites"], [467, "prerequisites"], [468, "prerequisites"], [469, "prerequisites"], [470, "prerequisites"], [472, "prerequisites"], [473, "prerequisites"], [474, "prerequisites"], [475, "prerequisites"], [479, "prerequisites"], [484, "prerequisites"], [488, "prerequisites"], [489, "prerequisites"], [492, "prerequisites"], [503, "prerequisites"], [504, "prerequisites"]], "Pretty-print source information": [[481, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[257, null]], "PriorParameter": [[216, null]], "PriorParameters": [[217, null]], "Priors": [[492, null]], "Profile Estimation": [[470, "profile-estimation"]], "Profile Likelihood": [[582, "profile-likelihood"]], "Profiles": [[480, "profiles"]], "Project Management": [[390, "project-management"]], "Project setup": [[411, null]], "Projects": [[390, "projects"]], "Proposal": [[389, "proposal"], [391, "proposal"], [392, "proposal"], [393, "proposal"], [394, "proposal"], [395, "proposal"], [396, "proposal"], [397, "proposal"], [399, "proposal"], [400, "proposal"], [401, "proposal"], [402, "proposal"], [403, "proposal"], [404, "proposal"]], "Proposal of API for flux estimate results": [[405, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[470, "proposed-approach"]], "Proposed approach": [[453, "proposed-approach"], [454, "proposed-approach"], [457, "proposed-approach"], [459, "proposed-approach"], [460, "proposed-approach"], [461, "proposed-approach"], [462, "proposed-approach"], [465, "proposed-approach"], [468, "proposed-approach"], [469, "proposed-approach"], [472, "proposed-approach"], [473, "proposed-approach"], [474, "proposed-approach"], [475, "proposed-approach"], [478, "proposed-approach"], [479, "proposed-approach"], [484, "proposed-approach"], [488, "proposed-approach"], [489, "proposed-approach"], [491, "proposed-approach"], [503, "proposed-approach"], [504, "proposed-approach"]], "Proposed class diagram": [[391, "proposed-class-diagram"]], "Proposed metadata classes": [[408, "proposed-metadata-classes"]], "Proposed solution": [[408, "proposed-solution"]], "Pull Requests": [[434, "pull-requests"], [435, "pull-requests"], [443, "pull-requests"], [444, "pull-requests"], [445, "pull-requests"], [446, "pull-requests"], [447, "pull-requests"], [448, "pull-requests"]], "Pull requests": [[420, "pull-requests"], [421, "pull-requests"], [422, "pull-requests"], [423, "pull-requests"], [424, "pull-requests"], [425, "pull-requests"], [426, "pull-requests"], [427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"], [431, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"], [436, "pull-requests"], [437, "pull-requests"], [438, "pull-requests"], [439, "pull-requests"], [440, "pull-requests"], [441, "pull-requests"], [442, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[511, null]], "Pulsar Wind Nebula Source Models": [[512, null]], "Pulsar analysis": [[476, null]], "Python": [[417, "id2"]], "Python scripts": [[417, "python-scripts"]], "Python version support": [[381, "python-version-support"]], "RadMax2D": [[165, null]], "Read and Introduce Data": [[470, "read-and-introduce-data"]], "Read in input images": [[460, "read-in-input-images"]], "Read the datasets": [[489, "read-the-datasets"]], "Read the energy-dependent model": [[469, "read-the-energy-dependent-model"]], "Reading Maps": [[487, "reading-maps"]], "Reading and Writing": [[487, "reading-and-writing"]], "Reading and writing masks": [[488, "reading-and-writing-masks"]], "Reading different datasets": [[465, "reading-different-datasets"]], "RecoPSFMap": [[166, null]], "Recommended Setup": [[413, "recommended-setup"], [415, null]], "Reference": [[401, "reference"], [579, "reference"]], "References": [[578, "publications"]], "Reflected regions background": [[486, "reflected-regions-background"], [528, null]], "ReflectedRegionsBackgroundMaker": [[175, null]], "ReflectedRegionsFinder": [[176, null]], "Region arguments": [[395, "region-arguments"]], "RegionGeom": [[201, null], [532, "regiongeom"]], "RegionGeom and RegionNDMap": [[532, null]], "RegionGeom and coordinates": [[532, "regiongeom-and-coordinates"]], "RegionNDMap": [[202, null], [532, "regionndmap"]], "RegionsFinder": [[177, null]], "Relation to WCS geometries": [[532, "relation-to-wcs-geometries"]], "Release notes": [[381, "release-notes"], [419, null]], "Release preparation, feature freeze": [[406, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[406, "release-scheduling-and-lts"]], "Releases": [[390, "releases"], [407, "releases"], [411, "releases"]], "Releasing the final version of the major release": [[410, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[410, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[489, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[381, "removing-an-attribute"]], "Renaming an argument": [[381, "renaming-an-argument"]], "Required dependencies": [[380, "required-dependencies"], [398, "required-dependencies"]], "Requirements": [[408, "requirements"]], "Resampling datasets": [[482, "resampling-datasets"]], "Resolve gammapy.detect": [[402, "resolve-gammapy-detect"]], "Results": [[451, "results"]], "Results exploration": [[457, "results-exploration"]], "Ring background": [[486, "ring-background"], [529, null]], "Ring background map": [[462, null]], "RingBackgroundMaker": [[178, null]], "Rotated regions": [[395, "rotated-regions"]], "Run Estimation": [[470, "run-estimation"]], "Run Estimator": [[467, "run-estimator"]], "Run data reduction chain": [[456, "run-data-reduction-chain"], [458, "run-data-reduction-chain"]], "Run the 1D data reduction": [[473, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[473, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[579, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[384, "running-tests-building-documentation"]], "Running the Data Reduction": [[457, "running-the-data-reduction"]], "Running the analysis": [[503, "running-the-analysis"]], "Running the estimation": [[457, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[457, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[457, "running-the-fit"]], "Running the light curve extraction in 1D": [[473, "running-the-light-curve-extraction-in-1d"]], "SED types": [[517, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[258, null]], "SPECTRAL_MODEL_REGISTRY": [[259, null]], "Safe data range definition": [[527, "safe-data-range-definition"]], "Safe data range handling": [[486, "safe-data-range-handling"]], "SafeMaskMaker": [[179, null]], "Sample a source with energy-dependent temporal evolution": [[469, null]], "Sampling methods": [[394, "sampling-methods"]], "Sampling the source and background events": [[468, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[457, "save-dataset-to-disk"], [503, "save-dataset-to-disk"], [504, "save-dataset-to-disk"]], "ScaleSpectralModel": [[260, null]], "ScaledRegularGridInterpolator": [[320, null]], "Scripts": [[499, "scripts"]], "Select a catalog subset": [[481, "select-a-catalog-subset"]], "Select a source": [[481, "select-a-source"]], "Select observations": [[466, "select-observations"]], "Select the ON region": [[453, "select-the-on-region"]], "Select the data": [[453, "select-the-data"], [474, "select-the-data"]], "Selecting models contributing to a given region": [[489, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[489, "selecting-models-from-a-list"]], "SensitivityEstimator": [[132, null]], "Serialisation": [[409, "serialisation"], [485, "serialisation"], [485, "id1"], [485, "id2"], [495, "serialisation"]], "Serialisation and I/O": [[470, "serialisation-and-i-o"]], "Serialisation of datasets": [[515, "serialisation-of-datasets"]], "Serialisation of the fit result": [[457, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[457, "serialisation-of-the-results"]], "Serialising models": [[489, "serialising-models"]], "Serialization": [[408, "serialization"]], "Setting fitting parameters": [[457, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[503, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[503, "setting-the-background-normalization-maker"]], "Setting the data to use": [[503, "setting-the-data-to-use"]], "Setting the exclusion mask": [[457, "setting-the-exclusion-mask"], [503, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[503, "setting-the-reduced-datasets-geometry"]], "Setup": [[451, "setup"], [452, "setup"], [453, "setup"], [454, "setup"], [456, "setup"], [457, "setup"], [458, "setup"], [459, "setup"], [460, "setup"], [461, "setup"], [462, "setup"], [466, "setup"], [467, "setup"], [468, "setup"], [469, "setup"], [470, "setup"], [473, "setup"], [474, "setup"], [475, "setup"], [478, "setup"], [479, "setup"], [480, "setup"], [482, "setup"], [486, "setup"], [487, "setup"], [488, "setup"], [489, "setup"], [490, "setup"], [494, "setup"], [495, "setup"], [503, "setup"], [504, "setup"], [505, "setup"]], "Shell spatial model": [[541, null]], "Shell2 spatial model": [[542, null]], "Shell2SpatialModel": [[261, null]], "ShellSpatialModel": [[262, null]], "Show images": [[466, "show-images"]], "Show the results tables": [[467, "show-the-results-tables"]], "Show various observation quantities": [[491, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[404, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[404, "simplify-yaml-representation"]], "Simulate multiple event lists": [[468, "simulate-multiple-event-lists"]], "Simulating a light curve": [[475, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[475, null]], "Simulation": [[472, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[393, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[459, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[572, null]], "SineTemporalModel": [[263, null]], "Skip unit tests for some Astropy versions": [[381, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[395, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[531, null]], "SkyModel": [[264, null], [490, "skymodel"]], "Smooth broken power law spectral model": [[560, null]], "SmoothBrokenPowerLawSpectralModel": [[265, null]], "Some terminology": [[391, "some-terminology"]], "Source Detection": [[466, "source-detection"]], "Source candidates": [[460, "source-candidates"]], "Source catalogs": [[481, null], [505, "source-catalogs"], [514, null]], "Source detection and significance maps": [[460, null]], "Source information": [[481, "source-information"]], "Source models": [[481, "source-models"], [494, "source-models"]], "Source object": [[481, "source-object"]], "Source statistic": [[456, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[392, "sourceirfmodel"]], "Spatial analysis": [[466, "spatial-analysis"]], "Spatial models": [[490, "spatial-models"], [533, "spatial-models"]], "SpatialIRFModel": [[392, "spatialirfmodel"]], "SpatialModel": [[266, null]], "Special cases": [[582, "special-cases"]], "Specificities of the HGPS catalog": [[481, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[404, "spectral-absorption-model"]], "Spectral Norm Models": [[404, "spectral-norm-models"]], "Spectral analysis": [[456, null]], "Spectral analysis of extended sources": [[453, null]], "Spectral analysis with energy-dependent directional cuts": [[458, null]], "Spectral analysis with the HLI": [[457, null]], "Spectral models": [[490, "spectral-models"], [533, "spectral-models"]], "Spectral models and flux points": [[505, "spectral-models-and-flux-points"]], "Spectral points": [[466, "spectral-points"]], "SpectralIRFModel": [[392, "spectralirfmodel"]], "SpectralModel": [[267, null]], "Spectrum": [[466, "spectrum"]], "Spectrum dataset": [[486, "spectrum-dataset"]], "SpectrumDataset": [[109, null], [393, "spectrumdataset"], [482, "spectrumdataset"]], "SpectrumDatasetMaker": [[180, null]], "SpectrumDatasetOnOff": [[110, null], [393, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[382, "sphinx-gallery-extension"]], "Spiral arm models": [[509, "spiral-arm-models"]], "Stack observations": [[456, "stack-observations"]], "Stacked analysis": [[464, "stacked-analysis"]], "Stacking Multiple Datasets": [[515, "stacking-multiple-datasets"]], "Statistical utility functions": [[581, null]], "Status": [[391, "status"], [400, "status"]], "Storing the energy dispersion information as a function of sky position": [[523, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[396, "storing-the-results-and-further-studies"]], "Sub-packages": [[508, "sub-packages"]], "Suggestions": [[407, "suggestions"]], "Summary": [[420, "summary"], [421, "summary"], [422, "summary"], [423, "summary"], [424, "summary"], [425, "summary"], [426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [441, "summary"], [442, "summary"], [443, "summary"], [444, "summary"], [445, "summary"], [446, "summary"], [447, "summary"], [448, "summary"], [464, "summary"], [495, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[563, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[562, null]], "Super exponential cutoff power law model used for 3FGL": [[561, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[268, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[269, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[270, null]], "Supernova Remnant Models": [[513, null]], "Support for Asymmetric IRFs": [[485, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[406, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[501, null]], "Survey panel plots": [[584, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[271, null]], "TS map estimation": [[460, "ts-map-estimation"]], "TSMapEstimator": [[133, null]], "Table conversion": [[483, "table-conversion"]], "Task List": [[393, "task-list"]], "Task list": [[392, "task-list"], [394, "task-list"], [395, "task-list"], [396, "task-list"], [397, "task-list"], [398, "task-list"]], "Template spatial model": [[543, null]], "Template spectral model": [[564, null]], "TemplateNDSpatialModel": [[272, null]], "TemplateNDSpectralModel": [[273, null]], "TemplateNPredModel": [[274, null]], "TemplatePhaseCurveTemporalModel": [[275, null]], "TemplateSpatialModel": [[276, null]], "TemplateSpectralModel": [[277, null]], "Temporal models": [[490, "temporal-models"], [533, "temporal-models"]], "TemporalModel": [[278, null]], "Testing of plotting functions": [[381, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[387, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[467, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[411, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[411, "the-gammapy-extra-repository"]], "The index tables": [[516, "the-index-tables"]], "The reflected region finder": [[528, "the-reflected-region-finder"]], "The results for testing energy dependence": [[467, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[467, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[465, "the-setup"], [483, "the-setup"], [484, "the-setup"], [492, "the-setup"]], "Theta squared event distribution": [[497, "theta-squared-event-distribution"]], "Time": [[499, "time"]], "Time bin preparation": [[396, "time-bin-preparation"]], "Time bins": [[396, "time-bins"]], "Time differences": [[583, "time-differences"]], "Time format and scale": [[583, "time-format-and-scale"]], "Time handling in Gammapy": [[583, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[478, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[478, null]], "Time variable source using a lightcurve": [[468, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[203, null], [487, "timemapaxis"]], "Timing Analysis": [[390, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[290, null]], "Troubleshooting": [[416, null], [579, "troubleshooting"]], "Tutorial overview": [[467, "tutorial-overview"], [494, "tutorial-overview"], [496, "tutorial-overview"]], "Tutorials": [[401, "tutorials"], [499, null]], "Tutorials Overview": [[413, "tutorials-overview"]], "Type validation": [[408, "type-validation"]], "Types of supported datasets": [[515, "types-of-supported-datasets"]], "Unification of flux estimators?": [[405, "unification-of-flux-estimators"]], "UniformPrior": [[279, null]], "Unify calling interface for models": [[392, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[532, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[409, "use-cases"]], "Use cases / scenarios": [[391, "use-cases-scenarios"]], "User guide": [[520, null]], "User perspective": [[388, "user-perspective"]], "Using Anaconda / Miniconda": [[414, "using-anaconda-miniconda"]], "Using Factory Methods": [[487, "using-factory-methods"]], "Using Gammapy": [[417, null]], "Using Gammapy IRFs": [[485, null]], "Using Mamba": [[414, "using-mamba"]], "Using YAML configuration files": [[503, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[457, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[457, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[518, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[507, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[510, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[514, "using-gammapy-catalog"]], "Using gammapy.data": [[516, "using-gammapy-data"]], "Using gammapy.datasets": [[515, "using-gammapy-datasets"]], "Using gammapy.estimators": [[517, "using-gammapy-estimators"]], "Using gammapy.irf": [[524, "using-gammapy-irf"]], "Using gammapy.makers": [[527, "using-gammapy-makers"]], "Using gammapy.maps": [[531, "using-gammapy-maps"]], "Using gammapy.modeling": [[576, "using-gammapy-modeling"]], "Using masks": [[482, "using-masks"]], "Using other package managers": [[414, "using-other-package-managers"]], "Using pip": [[414, "using-pip"]], "Using regions": [[528, "using-regions"]], "Using the reflected background estimator": [[528, "using-the-reflected-background-estimator"]], "Utility functions": [[583, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[509, "velocity-distributions"]], "Venv Environments": [[412, "venv-environments"]], "Version 0.1": [[419, "version-0-1"]], "Version 0.10": [[419, "version-0-10"]], "Version 0.11": [[419, "version-0-11"]], "Version 0.12": [[419, "version-0-12"]], "Version 0.13": [[419, "version-0-13"]], "Version 0.14": [[419, "version-0-14"]], "Version 0.15": [[419, "version-0-15"]], "Version 0.16": [[419, "version-0-16"]], "Version 0.17": [[419, "version-0-17"]], "Version 0.18": [[419, "version-0-18"]], "Version 0.19": [[419, "version-0-19"]], "Version 0.2": [[419, "version-0-2"]], "Version 0.20": [[419, "version-0-20"]], "Version 0.20.1": [[419, "version-0-20-1"]], "Version 0.3": [[419, "version-0-3"]], "Version 0.4": [[419, "version-0-4"]], "Version 0.5": [[419, "version-0-5"]], "Version 0.6": [[419, "version-0-6"]], "Version 0.7": [[419, "version-0-7"]], "Version 0.8": [[419, "version-0-8"]], "Version 0.9": [[419, "version-0-9"]], "Version 1.0": [[419, "version-1-0"]], "Version 1.0.1": [[419, "version-1-0-1"]], "Version 1.0.2": [[419, "version-1-0-2"]], "Version 1.1": [[419, "version-1-1"]], "Version 1.2": [[419, "version-1-2"]], "Version 1.3": [[419, "version-1-3"]], "Version numbering": [[406, "version-numbering"]], "Virtual Environments": [[412, null]], "Visualing a RegionNDMap": [[532, "visualing-a-regionndmap"]], "Visualising the results": [[478, "visualising-the-results"]], "Visualization": [[584, null]], "Visualizing and Plotting": [[487, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[580, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[581, "wstat-counts-statistic"]], "WStatCountsStatistic": [[291, null]], "WcsGeom": [[204, null]], "WcsMap": [[205, null]], "WcsNDMap": [[206, null]], "What checks and conversions should I do for inputs?": [[381, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[386, "what-is-a-pig"]], "What is this?": [[384, "what-is-this"]], "What next?": [[454, "what-next"], [456, "what-next"], [460, "what-next"], [466, "what-next"], [473, "what-next"], [505, "what-next"]], "What others have": [[391, "what-others-have"]], "What we have": [[389, "what-we-have"], [397, "what-we-have"], [405, "what-we-have"]], "What\u2019s new?": [[421, "what-s-new"], [422, "what-s-new"], [423, "what-s-new"], [424, "what-s-new"], [425, "what-s-new"], [426, "what-s-new"], [427, "what-s-new"], [428, "what-s-new"], [429, "what-s-new"], [430, "what-s-new"], [431, "what-s-new"], [432, "what-s-new"], [434, "what-s-new"], [435, "what-s-new"], [437, "what-s-new"], [438, "what-s-new"], [439, "what-s-new"], [440, "what-s-new"], [441, "what-s-new"], [442, "what-s-new"]], "What\u2019s next": [[503, "whats-next"]], "What\u2019s next?": [[457, "whats-next"]], "Where should I import from?": [[381, "where-should-i-import-from"]], "WobbleRegionsFinder": [[181, null]], "Working with event lists": [[516, "working-with-event-lists"]], "Write your own CLI": [[579, "write-your-own-cli"]], "Writing Maps": [[487, "writing-maps"]], "Writing a PIG": [[386, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[532, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[516, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[535, "yaml-representation"], [536, "yaml-representation"], [537, "yaml-representation"], [538, "yaml-representation"], [539, "yaml-representation"], [540, "yaml-representation"], [541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [550, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [557, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [560, "yaml-representation"], [561, "yaml-representation"], [562, "yaml-representation"], [563, "yaml-representation"], [564, "yaml-representation"], [566, "yaml-representation"], [567, "yaml-representation"], [568, "yaml-representation"], [569, "yaml-representation"], [570, "yaml-representation"], [571, "yaml-representation"], [572, "yaml-representation"], [573, "yaml-representation"], [574, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[362, null]], "add_colorbar": [[369, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[370, null]], "apply_edisp": [[111, null], [116, null]], "arbitrary type input and validation": [[408, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[523, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[522, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[522, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[523, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[521, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[356, null]], "assert_skycoord_allclose": [[357, null]], "assert_time_allclose": [[358, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[309, null]], "cash": [[292, null]], "cash_sum_cython": [[293, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[407, "codemeta-json"]], "colormap_hess": [[371, null]], "colormap_milagro": [[372, null]], "combine_flux_maps": [[134, null]], "combine_significance_maps": [[135, null]], "compound_region_to_regions": [[339, null]], "compute_chisq": [[294, null]], "compute_flux_doubling": [[295, null]], "compute_fpp": [[296, null]], "compute_fvar": [[297, null]], "compute_lightcurve_discrete_correlation": [[136, null]], "compute_lightcurve_doublingtime": [[137, null]], "compute_lightcurve_fpp": [[138, null]], "compute_lightcurve_fvar": [[139, null]], "config": [[11, "gammapy-analysis-config"], [11, "gammapy-workflow-config"]], "containment_radius": [[207, null]], "containment_region": [[208, null]], "create_cosmic_ray_spectral_model": [[280, null]], "create_crab_spectral_model": [[281, null]], "create_empty_map_dataset_from_irfs": [[112, null]], "create_fermi_isotropic_diffuse_model": [[282, null]], "create_map_dataset_from_observation": [[113, null]], "create_map_dataset_geoms": [[114, null]], "cstat": [[298, null]], "data": [[408, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[299, null]], "docs.gammapy.org": [[411, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[331, null]], "earth_location_from_dict": [[318, null]], "estimate_exposure_reco_energy": [[140, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[300, null]], "find_peaks": [[141, null]], "find_peaks_in_flux_map": [[142, null]], "fov_to_sky": [[310, null]], "from_yaml": [[344, null]], "galactic": [[311, null]], "gamLike": [[507, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[411, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_flux_maps": [[143, null]], "get_combined_significance_maps": [[144, null]], "get_images_paths": [[345, null]], "get_irfs_features": [[96, null]], "get_random_state": [[332, null]], "get_rebinned_axis": [[145, null]], "get_wstat_gof_terms": [[301, null]], "get_wstat_mu_bkg": [[302, null]], "hierarchical_clustering": [[306, null]], "hstack_columns": [[351, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[283, null]], "interpolate_profile": [[321, null]], "interpolation_scale": [[322, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[167, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[340, null]], "make_counts_rad_max": [[182, null]], "make_edisp_kernel_map": [[183, null]], "make_edisp_map": [[184, null]], "make_effective_livetime_map": [[185, null]], "make_map_background_irf": [[186, null]], "make_map_exposure_true_energy": [[187, null]], "make_observation_time_map": [[188, null]], "make_orthogonal_rectangle_sky_regions": [[341, null]], "make_path": [[346, null]], "make_psf_map": [[189, null]], "make_theta_squared_table": [[190, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[312, null]], "mpl_plot_check": [[359, null]], "multiprocessing_manager": [[328, null]], "norm_bounds_cython": [[303, null]], "normalize": [[333, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[334, null]], "plot_contour_line": [[373, null]], "plot_distribution": [[374, null]], "plot_heatmap": [[375, null]], "plot_map_rgb": [[376, null]], "plot_npred_signal": [[377, null]], "plot_spectrum_datasets_off_regions": [[378, null]], "plot_theta_squared_table": [[379, null]], "polar": [[313, null]], "pydantic": [[408, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[284, null], [286, null]], "read_yaml": [[347, null]], "recursive_merge_dicts": [[348, null]], "region_to_frame": [[342, null]], "regions_to_compound_region": [[343, null]], "requires_data": [[360, null]], "requires_dependency": [[361, null]], "resample_energy_edges": [[146, null]], "run": [[11, "gammapy-analysis-run"], [11, "gammapy-workflow-run"]], "run_multiprocessing": [[329, null]], "sample_powerlaw": [[335, null]], "sample_sphere": [[336, null]], "sample_sphere_distance": [[337, null]], "sample_times": [[338, null]], "scale_plot_flux": [[285, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[287, null]], "sky_to_fov": [[314, null]], "split_dataset": [[115, null], [117, null]], "standard_scaler": [[307, null]], "standardise_unit": [[366, null]], "stat_profile_ul_scipy": [[288, null]], "stats - Statistics": [[12, null]], "structure_function": [[304, null]], "table_row_to_dict": [[352, null]], "table_standardise_units_copy": [[353, null]], "table_standardise_units_inplace": [[354, null]], "the base class": [[408, "the-base-class"]], "time_ref_from_dict": [[363, null]], "time_ref_to_dict": [[364, null]], "time_relative_to_ref": [[365, null]], "to_yaml": [[349, null]], "trapz_loglog": [[319, null]], "unit_from_fits_image_hdu": [[367, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[315, null]], "visualization - Plotting features": [[14, null]], "workflow": [[11, "gammapy-workflow"]], "write_yaml": [[350, null]], "wstat": [[305, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_empty_map_dataset_from_irfs", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.combine_flux_maps", "api/gammapy.estimators.utils.combine_significance_maps", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_flux_maps", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianPrior", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.LogUniformPrior", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.UniformPrior", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "release-notes/v2.0", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_empty_map_dataset_from_irfs.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.combine_flux_maps.rst", "api/gammapy.estimators.utils.combine_significance_maps.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_flux_maps.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianPrior.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.LogUniformPrior.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.UniformPrior.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "release-notes/v2.0.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[578, "term-1D-Analysis", true]], "3d analysis": [[578, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianprior method)": [[233, "gammapy.modeling.models.GaussianPrior.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[240, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.loguniformprior method)": [[243, "gammapy.modeling.models.LogUniformPrior.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[257, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[263, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[264, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[278, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.uniformprior method)": [[279, "gammapy.modeling.models.UniformPrior.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[320, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[362, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[168, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[369, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[578, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[123, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[125, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[156, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[370, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[111, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[116, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[199, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[118, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[356, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[357, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[358, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[170, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[179, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[173, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[180, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[210, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[323, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[147, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[148, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[149, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[578, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[169, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[309, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[578, "term-Cash", true]], "cash() (in module gammapy.stats)": [[292, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[293, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[289, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[355, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[371, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[372, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "combine_flux_maps() (in module gammapy.estimators.utils)": [[134, "gammapy.estimators.utils.combine_flux_maps", false]], "combine_significance_maps() (in module gammapy.estimators.utils)": [[135, "gammapy.estimators.utils.combine_significance_maps", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[339, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[219, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[294, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[289, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[291, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[289, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[291, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[295, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[296, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[297, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[136, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[137, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[289, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[291, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[118, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[121, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[122, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[126, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[129, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[130, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[131, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[132, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[221, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[207, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[208, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[264, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[118, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[121, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[122, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[129, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[132, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[199, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianprior method)": [[233, "gammapy.modeling.models.GaussianPrior.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[240, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.loguniformprior method)": [[243, "gammapy.modeling.models.LogUniformPrior.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[247, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[257, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[263, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[264, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[274, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[278, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.models.uniformprior method)": [[279, "gammapy.modeling.models.UniformPrior.copy", false]], "copy() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[209, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[122, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[209, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianprior attribute)": [[233, "gammapy.modeling.models.GaussianPrior.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.loguniformprior attribute)": [[243, "gammapy.modeling.models.LogUniformPrior.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[247, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[248, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[257, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[260, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[267, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[278, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance (gammapy.modeling.models.uniformprior attribute)": [[279, "gammapy.modeling.models.UniformPrior.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[210, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[192, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[193, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[194, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[196, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[199, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[201, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[202, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[204, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[205, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[206, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[246, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[264, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[280, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[281, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_empty_map_dataset_from_irfs() (in module gammapy.datasets)": [[112, "gammapy.datasets.create_empty_map_dataset_from_irfs", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[282, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[113, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[114, "gammapy.datasets.create_map_dataset_geoms", false]], "create_mask() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.create_mask", false]], "create_mask() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.create_mask", false]], "create_mask() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.create_mask", false]], "create_mask() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.create_mask", false]], "crop() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[298, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[274, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[308, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[161, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[209, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[578, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[169, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianprior attribute)": [[233, "gammapy.modeling.models.GaussianPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.loguniformprior attribute)": [[243, "gammapy.modeling.models.LogUniformPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[257, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[260, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[267, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[278, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.uniformprior attribute)": [[279, "gammapy.modeling.models.UniformPrior.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.dict", false]], "discrete_correlation() (in module gammapy.stats)": [[299, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[578, "term-DL3", true]], "dl4": [[578, "term-DL4", true]], "dl5": [[578, "term-DL5", true]], "dl6": [[578, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[331, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[318, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[227, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[578, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[151, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[152, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[150, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[151, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[152, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[153, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[155, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[289, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[291, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[169, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[122, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[122, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[122, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[118, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[122, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[132, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[132, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[578, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[121, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[119, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[225, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianprior static method)": [[233, "gammapy.modeling.models.GaussianPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[240, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.loguniformprior static method)": [[243, "gammapy.modeling.models.LogUniformPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[262, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[263, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[264, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[274, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.uniformprior static method)": [[279, "gammapy.modeling.models.UniformPrior.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[162, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[162, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[264, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[103, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[108, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[103, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[108, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[122, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[130, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[300, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[211, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[212, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[123, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[124, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[125, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[101, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[127, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[578, "term-FoV", true]], "fov background": [[578, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[310, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[156, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[170, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianprior method)": [[233, "gammapy.modeling.models.GaussianPrior.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[240, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.loguniformprior method)": [[243, "gammapy.modeling.models.LogUniformPrior.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[247, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[257, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[263, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[264, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[274, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[278, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.uniformprior method)": [[279, "gammapy.modeling.models.UniformPrior.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[204, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[197, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[150, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[152, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[101, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[224, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[225, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianprior class method)": [[233, "gammapy.modeling.models.GaussianPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[240, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.loguniformprior class method)": [[243, "gammapy.modeling.models.LogUniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[246, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[247, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[248, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[252, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[257, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[262, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[263, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[264, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[266, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[267, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[274, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[278, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.uniformprior class method)": [[279, "gammapy.modeling.models.UniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[215, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[217, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[209, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[150, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[155, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[161, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[163, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[166, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[152, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[163, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[166, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[193, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[194, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[196, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[200, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[202, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[205, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[206, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[203, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[203, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[192, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[194, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[206, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[123, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[125, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[147, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[148, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[149, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[150, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[152, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[153, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[155, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[157, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[158, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[164, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[160, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[162, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[163, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[165, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[166, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[191, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[192, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[193, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[194, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[196, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[200, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[201, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[202, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[204, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[205, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[206, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[192, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[204, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[165, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[123, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[125, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[225, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianprior class method)": [[233, "gammapy.modeling.models.GaussianPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[240, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.loguniformprior class method)": [[243, "gammapy.modeling.models.LogUniformPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[247, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[252, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[257, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[262, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[263, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[264, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[266, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[267, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[274, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[278, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.uniformprior class method)": [[279, "gammapy.modeling.models.UniformPrior.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[153, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[225, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[252, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[262, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[266, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[225, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[201, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[161, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[123, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[125, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[193, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[194, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[195, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[196, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[202, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[205, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[206, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[209, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[215, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[217, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[125, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[147, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[148, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[149, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[150, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[153, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[155, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[157, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[164, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[160, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[162, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[165, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[195, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[197, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[202, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[203, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[197, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[198, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[203, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[203, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[194, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[224, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[248, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[344, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianprior attribute)": [[233, "gammapy.modeling.models.GaussianPrior.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.loguniformprior attribute)": [[243, "gammapy.modeling.models.LogUniformPrior.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[247, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[248, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[257, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[260, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[267, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[278, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.models.uniformprior attribute)": [[279, "gammapy.modeling.models.UniformPrior.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[578, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[311, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy-workflow-config command line option": [[11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "gammapy-workflow-run command line option": [[11, "cmdoption-gammapy-workflow-run-filename", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianprior (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.GaussianPrior", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[191, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[200, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_flux_maps() (in module gammapy.estimators.utils)": [[143, "gammapy.estimators.utils.get_combined_flux_maps", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[144, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[107, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[316, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[345, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[192, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[118, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[332, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[145, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[118, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[209, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[301, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[302, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[578, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[151, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[152, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[158, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[316, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[306, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[578, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[192, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[193, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[194, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[351, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[128, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[316, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[289, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[291, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[240, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[263, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[278, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[264, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[283, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[321, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[322, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[330, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[578, "term-IRF", true]], "irf (class in gammapy.irf)": [[157, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[159, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[158, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[278, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[191, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[260, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[267, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[578, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[178, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[168, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[195, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[317, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[130, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[316, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[167, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "loguniformprior (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.LogUniformPrior", false]], "lon (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[173, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[170, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[170, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[340, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[173, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[174, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[174, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[175, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[182, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[168, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[169, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[170, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[173, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[173, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[183, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[184, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[185, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[170, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[173, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[173, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[187, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[178, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[179, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[173, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[188, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[341, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[346, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[173, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[189, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[190, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[578, "term-Maker", true]], "maker (class in gammapy.makers)": [[172, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[171, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[196, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[197, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[198, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[199, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[173, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetOnOff", false]], "mappanelplotter (class in gammapy.visualization)": [[368, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[200, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[151, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[152, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[158, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[210, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.models.loguniformprior attribute)": [[243, "gammapy.modeling.models.LogUniformPrior.max", false]], "max (gammapy.modeling.models.uniformprior attribute)": [[279, "gammapy.modeling.models.UniformPrior.max", false]], "max (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[578, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[210, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.message", false]], "met": [[578, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[170, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[210, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[324, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[325, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.models.loguniformprior attribute)": [[243, "gammapy.modeling.models.LogUniformPrior.min", false]], "min (gammapy.modeling.models.uniformprior attribute)": [[279, "gammapy.modeling.models.UniformPrior.min", false]], "min (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[244, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[248, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[312, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[359, "gammapy.utils.testing.mpl_plot_check", false]], "mu (gammapy.modeling.models.gaussianprior attribute)": [[233, "gammapy.modeling.models.GaussianPrior.mu", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[328, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[289, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[291, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[126, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[130, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[169, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[326, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[289, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[291, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[289, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[291, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[248, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[260, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[303, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[128, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[333, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[108, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[169, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[106, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[107, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[213, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[289, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[291, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[126, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[130, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[169, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[214, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameterestimator (class in gammapy.estimators)": [[131, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[215, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianprior attribute)": [[233, "gammapy.modeling.models.GaussianPrior.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.loguniformprior attribute)": [[243, "gammapy.modeling.models.LogUniformPrior.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[247, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[248, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[257, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[260, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[267, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[278, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.models.uniformprior attribute)": [[279, "gammapy.modeling.models.UniformPrior.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianprior attribute)": [[233, "gammapy.modeling.models.GaussianPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.loguniformprior attribute)": [[243, "gammapy.modeling.models.LogUniformPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[247, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[248, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[257, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[260, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[267, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[278, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.uniformprior attribute)": [[279, "gammapy.modeling.models.UniformPrior.parameters_unique_names", false]], "parametricpsf (class in gammapy.irf)": [[164, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[316, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[334, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[128, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[174, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[260, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[267, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[203, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[128, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[240, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[263, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[278, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[368, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[373, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[209, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[374, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[128, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[375, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[376, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[377, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[368, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[378, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[379, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[313, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[327, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[248, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[216, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[217, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[128, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[128, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.projection", false]], "psf": [[578, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[160, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[161, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[161, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[162, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[163, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[156, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[165, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[101, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[102, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[105, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[106, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[109, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[123, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[125, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[147, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[148, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[149, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[150, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[151, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[152, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[153, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[155, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[157, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[158, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[164, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[160, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[161, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[162, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[163, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[165, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[166, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[193, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[194, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[196, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[200, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[202, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[205, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[206, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[224, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[248, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[284, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[286, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[106, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[347, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianprior method)": [[233, "gammapy.modeling.models.GaussianPrior.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[240, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.loguniformprior method)": [[243, "gammapy.modeling.models.LogUniformPrior.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[247, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[257, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[263, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[264, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[274, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[278, "gammapy.modeling.models.TemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.uniformprior method)": [[279, "gammapy.modeling.models.UniformPrior.reassign", false]], "reco energy": [[578, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[166, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[348, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[278, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[578, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[175, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[176, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[342, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[201, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[202, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[343, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[177, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[151, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[152, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[158, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[360, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[361, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[146, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.reverse", false]], "reverse_lon_radec (gammapy.irf.fovalignment attribute)": [[156, "gammapy.irf.FoVAlignment.REVERSE_LON_RADEC", false]], "ring background": [[578, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[178, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[578, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[118, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[121, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[122, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[126, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[127, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[129, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[130, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[131, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[132, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[133, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[168, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[169, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[170, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[172, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[173, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[174, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[175, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[176, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[177, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[178, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[179, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[180, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[181, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[355, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[329, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[169, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[179, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[330, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[330, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[335, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[103, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[108, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[336, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[337, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[240, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[263, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[278, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[338, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[285, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[320, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[209, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[578, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[287, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[118, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[118, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[121, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[122, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[126, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[129, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[130, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[131, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[132, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[209, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[197, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[209, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[262, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianprior attribute)": [[233, "gammapy.modeling.models.GaussianPrior.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[263, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[314, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[274, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[128, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[258, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[259, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[109, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[180, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[110, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[115, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[117, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[289, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[291, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[274, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[307, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[366, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[289, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[291, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[289, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[291, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[288, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[211, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[304, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[210, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[289, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[291, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[352, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[353, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[354, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[101, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[102, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[104, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[105, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[106, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[107, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[109, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[118, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[120, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[121, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[122, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[124, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[126, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[127, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[129, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[130, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[131, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[132, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[133, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[151, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[152, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[158, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[163, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[166, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[168, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[169, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[170, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[172, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[173, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[174, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[175, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[178, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[179, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[180, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianprior attribute)": [[233, "gammapy.modeling.models.GaussianPrior.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.loguniformprior attribute)": [[243, "gammapy.modeling.models.LogUniformPrior.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[260, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "tag (gammapy.modeling.models.uniformprior attribute)": [[279, "gammapy.modeling.models.UniformPrior.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[274, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[276, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[277, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[271, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[278, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[199, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[363, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[364, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[365, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[240, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[263, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[278, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[203, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[290, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[210, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianprior method)": [[233, "gammapy.modeling.models.GaussianPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[240, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.loguniformprior method)": [[243, "gammapy.modeling.models.LogUniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[247, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[257, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[263, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[264, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[274, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[278, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.uniformprior method)": [[279, "gammapy.modeling.models.UniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[213, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[199, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[104, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[124, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[349, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[212, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[213, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[319, "gammapy.utils.integrate.trapz_loglog", false]], "ts (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[289, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[291, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[123, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[125, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[133, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[219, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[222, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[223, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[225, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[232, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianprior attribute)": [[233, "gammapy.modeling.models.GaussianPrior.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[234, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[235, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[236, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[240, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.loguniformprior attribute)": [[243, "gammapy.modeling.models.LogUniformPrior.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[247, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[249, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[252, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[257, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[260, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[261, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[263, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[264, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[266, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[267, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[274, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[278, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.models.uniformprior attribute)": [[279, "gammapy.modeling.models.UniformPrior.type", false]], "type (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[218, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[219, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[220, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[221, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[222, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[223, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[225, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[226, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[228, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[229, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[230, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[231, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[232, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianprior method)": [[233, "gammapy.modeling.models.GaussianPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[234, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[235, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[236, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[237, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[238, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[240, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[241, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[242, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.loguniformprior method)": [[243, "gammapy.modeling.models.LogUniformPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[245, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[247, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[249, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[250, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[251, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[252, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[253, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[254, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[255, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[256, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[257, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[260, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[261, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[262, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[263, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[264, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[265, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[266, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[267, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[268, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[269, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[270, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[274, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[277, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[278, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.uniformprior method)": [[279, "gammapy.modeling.models.UniformPrior.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[215, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[217, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "uniformprior (class in gammapy.modeling.models)": [[279, "gammapy.modeling.models.UniformPrior", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[147, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[148, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[149, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[150, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[153, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[155, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[157, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[164, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[160, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[162, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[165, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[193, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[194, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[195, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[196, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[202, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[203, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[205, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[206, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[367, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[214, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[216, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[191, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[192, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[195, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[197, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[201, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[203, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[204, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[198, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[104, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[124, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[221, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[214, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[215, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[216, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[217, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[315, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[224, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[248, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[204, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[205, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[206, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.gaussianprior attribute)": [[233, "gammapy.modeling.models.GaussianPrior.weight", false]], "weight (gammapy.modeling.models.loguniformprior attribute)": [[243, "gammapy.modeling.models.LogUniformPrior.weight", false]], "weight (gammapy.modeling.models.prior attribute)": [[257, "gammapy.modeling.models.Prior.weight", false]], "weight (gammapy.modeling.models.uniformprior attribute)": [[279, "gammapy.modeling.models.UniformPrior.weight", false]], "width (gammapy.maps.hpxgeom attribute)": [[192, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[201, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[204, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[262, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[181, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[198, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[101, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[102, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[105, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[109, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[110, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[123, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[125, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[147, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[148, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[149, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[150, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[151, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[152, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[153, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[154, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[155, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[157, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[158, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[164, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[160, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[161, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[162, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[163, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[165, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[166, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[193, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[194, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[196, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[200, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[202, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[205, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[206, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[212, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[239, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[272, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[273, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[274, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[275, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[276, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[224, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[248, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[107, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[350, "gammapy.utils.scripts.write_yaml", false]], "wstat() (in module gammapy.stats)": [[305, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[291, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[128, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[128, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[128, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy-workflow-config": [[11, 6, 1, "cmdoption-gammapy-workflow-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-workflow-config-overwrite", "--overwrite"]], "gammapy-workflow-run": [[11, 6, 1, "cmdoption-gammapy-workflow-run-filename", "--filename"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FluxPointsDataset"], [102, 1, 1, "", "MapDataset"], [103, 1, 1, "", "MapDatasetEventSampler"], [104, 1, 1, "", "MapDatasetMetaData"], [105, 1, 1, "", "MapDatasetOnOff"], [106, 1, 1, "", "OGIPDatasetReader"], [107, 1, 1, "", "OGIPDatasetWriter"], [108, 1, 1, "", "ObservationEventSampler"], [109, 1, 1, "", "SpectrumDataset"], [110, 1, 1, "", "SpectrumDatasetOnOff"], [111, 4, 1, "", "apply_edisp"], [112, 4, 1, "", "create_empty_map_dataset_from_irfs"], [113, 4, 1, "", "create_map_dataset_from_observation"], [114, 4, 1, "", "create_map_dataset_geoms"], [115, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FluxPointsDataset": [[101, 2, 1, "", "available_stat_type"], [101, 3, 1, "", "copy"], [101, 3, 1, "", "data_shape"], [101, 3, 1, "", "flux_pred"], [101, 3, 1, "", "from_dict"], [101, 2, 1, "", "gti"], [101, 2, 1, "", "mask"], [101, 2, 1, "", "mask_safe"], [101, 2, 1, "", "mask_valid"], [101, 2, 1, "", "models"], [101, 2, 1, "", "name"], [101, 3, 1, "", "plot_fit"], [101, 3, 1, "", "plot_residuals"], [101, 3, 1, "", "plot_spectrum"], [101, 3, 1, "", "read"], [101, 3, 1, "", "residuals"], [101, 3, 1, "", "stat_array"], [101, 3, 1, "", "stat_sum"], [101, 2, 1, "", "stat_type"], [101, 2, 1, "", "tag"], [101, 3, 1, "", "to_dict"], [101, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[102, 2, 1, "", "background"], [102, 2, 1, "", "background_model"], [102, 3, 1, "", "copy"], [102, 2, 1, "", "counts"], [102, 3, 1, "", "create"], [102, 3, 1, "", "cutout"], [102, 2, 1, "", "data_shape"], [102, 3, 1, "", "downsample"], [102, 2, 1, "", "edisp"], [102, 2, 1, "", "energy_range"], [102, 2, 1, "", "energy_range_fit"], [102, 2, 1, "", "energy_range_safe"], [102, 2, 1, "", "energy_range_total"], [102, 2, 1, "", "evaluators"], [102, 2, 1, "", "excess"], [102, 2, 1, "", "exposure"], [102, 3, 1, "", "fake"], [102, 3, 1, "", "from_dict"], [102, 3, 1, "", "from_geoms"], [102, 3, 1, "", "from_hdulist"], [102, 2, 1, "", "geoms"], [102, 2, 1, "", "gti"], [102, 3, 1, "", "info_dict"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_fit"], [102, 2, 1, "", "mask_fit_image"], [102, 2, 1, "", "mask_image"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_safe_edisp"], [102, 2, 1, "", "mask_safe_image"], [102, 2, 1, "", "mask_safe_psf"], [102, 2, 1, "", "meta"], [102, 2, 1, "", "meta_table"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "npred"], [102, 3, 1, "", "npred_background"], [102, 3, 1, "", "npred_signal"], [102, 3, 1, "", "pad"], [102, 3, 1, "", "peek"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_residuals_spatial"], [102, 3, 1, "", "plot_residuals_spectral"], [102, 2, 1, "", "psf"], [102, 3, 1, "", "read"], [102, 3, 1, "", "resample_energy_axis"], [102, 3, 1, "", "reset_data_cache"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "slice_by_energy"], [102, 3, 1, "", "slice_by_idx"], [102, 3, 1, "", "stack"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "to_hdulist"], [102, 3, 1, "", "to_image"], [102, 3, 1, "", "to_masked"], [102, 3, 1, "", "to_region_map_dataset"], [102, 3, 1, "", "to_spectrum_dataset"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[103, 3, 1, "", "event_det_coords"], [103, 3, 1, "", "event_list_meta"], [103, 3, 1, "", "run"], [103, 3, 1, "", "sample_background"], [103, 3, 1, "", "sample_edisp"], [103, 3, 1, "", "sample_psf"], [103, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[104, 3, 1, "", "construct"], [104, 3, 1, "", "copy"], [104, 3, 1, "", "dict"], [104, 3, 1, "", "from_header"], [104, 3, 1, "", "from_orm"], [104, 3, 1, "", "json"], [104, 2, 1, "", "model_computed_fields"], [104, 2, 1, "", "model_config"], [104, 3, 1, "", "model_construct"], [104, 3, 1, "", "model_copy"], [104, 3, 1, "", "model_dump"], [104, 3, 1, "", "model_dump_json"], [104, 2, 1, "", "model_extra"], [104, 2, 1, "", "model_fields"], [104, 2, 1, "", "model_fields_set"], [104, 3, 1, "", "model_json_schema"], [104, 3, 1, "", "model_parametrized_name"], [104, 3, 1, "", "model_post_init"], [104, 3, 1, "", "model_rebuild"], [104, 3, 1, "", "model_validate"], [104, 3, 1, "", "model_validate_json"], [104, 3, 1, "", "model_validate_strings"], [104, 3, 1, "", "parse_file"], [104, 3, 1, "", "parse_obj"], [104, 3, 1, "", "parse_raw"], [104, 3, 1, "", "schema"], [104, 3, 1, "", "schema_json"], [104, 3, 1, "", "stack"], [104, 2, 1, "", "tag"], [104, 3, 1, "", "to_header"], [104, 3, 1, "", "to_yaml"], [104, 3, 1, "", "update_forward_refs"], [104, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[105, 2, 1, "", "alpha"], [105, 2, 1, "", "background"], [105, 2, 1, "", "background_model"], [105, 3, 1, "", "copy"], [105, 2, 1, "", "counts"], [105, 3, 1, "", "create"], [105, 3, 1, "", "cutout"], [105, 2, 1, "", "data_shape"], [105, 3, 1, "", "downsample"], [105, 2, 1, "", "edisp"], [105, 2, 1, "", "energy_range"], [105, 2, 1, "", "energy_range_fit"], [105, 2, 1, "", "energy_range_safe"], [105, 2, 1, "", "energy_range_total"], [105, 2, 1, "", "evaluators"], [105, 2, 1, "", "excess"], [105, 2, 1, "", "exposure"], [105, 3, 1, "", "fake"], [105, 3, 1, "", "from_dict"], [105, 3, 1, "", "from_geoms"], [105, 3, 1, "", "from_hdulist"], [105, 3, 1, "", "from_map_dataset"], [105, 2, 1, "", "geoms"], [105, 2, 1, "", "gti"], [105, 3, 1, "", "info_dict"], [105, 2, 1, "", "mask"], [105, 2, 1, "", "mask_fit"], [105, 2, 1, "", "mask_fit_image"], [105, 2, 1, "", "mask_image"], [105, 2, 1, "", "mask_safe"], [105, 2, 1, "", "mask_safe_edisp"], [105, 2, 1, "", "mask_safe_image"], [105, 2, 1, "", "mask_safe_psf"], [105, 2, 1, "", "meta"], [105, 2, 1, "", "meta_table"], [105, 2, 1, "", "models"], [105, 2, 1, "", "name"], [105, 3, 1, "", "npred"], [105, 3, 1, "", "npred_background"], [105, 3, 1, "", "npred_off"], [105, 3, 1, "", "npred_signal"], [105, 3, 1, "", "pad"], [105, 3, 1, "", "peek"], [105, 3, 1, "", "plot_residuals"], [105, 3, 1, "", "plot_residuals_spatial"], [105, 3, 1, "", "plot_residuals_spectral"], [105, 2, 1, "", "psf"], [105, 3, 1, "", "read"], [105, 3, 1, "", "resample_energy_axis"], [105, 3, 1, "", "reset_data_cache"], [105, 3, 1, "", "residuals"], [105, 3, 1, "", "slice_by_energy"], [105, 3, 1, "", "slice_by_idx"], [105, 3, 1, "", "stack"], [105, 3, 1, "", "stat_array"], [105, 3, 1, "", "stat_sum"], [105, 2, 1, "", "stat_type"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_dict"], [105, 3, 1, "", "to_hdulist"], [105, 3, 1, "", "to_image"], [105, 3, 1, "", "to_map_dataset"], [105, 3, 1, "", "to_masked"], [105, 3, 1, "", "to_region_map_dataset"], [105, 3, 1, "", "to_spectrum_dataset"], [105, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[106, 3, 1, "", "get_filenames"], [106, 3, 1, "", "get_valid_path"], [106, 3, 1, "", "read"], [106, 3, 1, "", "read_arf"], [106, 3, 1, "", "read_bkg"], [106, 3, 1, "", "read_pha"], [106, 3, 1, "", "read_rmf"], [106, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[107, 3, 1, "", "get_filenames"], [107, 3, 1, "", "get_ogip_meta"], [107, 2, 1, "", "tag"], [107, 3, 1, "", "to_counts_hdulist"], [107, 3, 1, "", "write"], [107, 3, 1, "", "write_arf"], [107, 3, 1, "", "write_bkg"], [107, 3, 1, "", "write_pha"], [107, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[108, 3, 1, "", "event_det_coords"], [108, 3, 1, "", "event_list_meta"], [108, 3, 1, "", "run"], [108, 3, 1, "", "sample_background"], [108, 3, 1, "", "sample_edisp"], [108, 3, 1, "", "sample_psf"], [108, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[109, 2, 1, "", "background"], [109, 2, 1, "", "background_model"], [109, 3, 1, "", "copy"], [109, 2, 1, "", "counts"], [109, 3, 1, "", "create"], [109, 3, 1, "", "cutout"], [109, 2, 1, "", "data_shape"], [109, 3, 1, "", "downsample"], [109, 2, 1, "", "edisp"], [109, 2, 1, "", "energy_range"], [109, 2, 1, "", "energy_range_fit"], [109, 2, 1, "", "energy_range_safe"], [109, 2, 1, "", "energy_range_total"], [109, 2, 1, "", "evaluators"], [109, 2, 1, "", "excess"], [109, 2, 1, "", "exposure"], [109, 3, 1, "", "fake"], [109, 3, 1, "", "from_dict"], [109, 3, 1, "", "from_geoms"], [109, 3, 1, "", "from_hdulist"], [109, 2, 1, "", "geoms"], [109, 2, 1, "", "gti"], [109, 3, 1, "", "info_dict"], [109, 2, 1, "", "mask"], [109, 2, 1, "", "mask_fit"], [109, 2, 1, "", "mask_fit_image"], [109, 2, 1, "", "mask_image"], [109, 2, 1, "", "mask_safe"], [109, 2, 1, "", "mask_safe_edisp"], [109, 2, 1, "", "mask_safe_image"], [109, 2, 1, "", "mask_safe_psf"], [109, 2, 1, "", "meta"], [109, 2, 1, "", "meta_table"], [109, 2, 1, "", "models"], [109, 2, 1, "", "name"], [109, 3, 1, "", "npred"], [109, 3, 1, "", "npred_background"], [109, 3, 1, "", "npred_signal"], [109, 3, 1, "", "pad"], [109, 3, 1, "", "peek"], [109, 3, 1, "", "plot_counts"], [109, 3, 1, "", "plot_excess"], [109, 3, 1, "", "plot_fit"], [109, 3, 1, "", "plot_masks"], [109, 3, 1, "", "plot_residuals"], [109, 3, 1, "", "plot_residuals_spatial"], [109, 3, 1, "", "plot_residuals_spectral"], [109, 2, 1, "", "psf"], [109, 3, 1, "", "read"], [109, 3, 1, "", "resample_energy_axis"], [109, 3, 1, "", "reset_data_cache"], [109, 3, 1, "", "residuals"], [109, 3, 1, "", "slice_by_energy"], [109, 3, 1, "", "slice_by_idx"], [109, 3, 1, "", "stack"], [109, 3, 1, "", "stat_array"], [109, 3, 1, "", "stat_sum"], [109, 2, 1, "", "stat_type"], [109, 2, 1, "", "tag"], [109, 3, 1, "", "to_dict"], [109, 3, 1, "", "to_hdulist"], [109, 3, 1, "", "to_image"], [109, 3, 1, "", "to_masked"], [109, 3, 1, "", "to_region_map_dataset"], [109, 3, 1, "", "to_spectrum_dataset"], [109, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[110, 2, 1, "", "alpha"], [110, 2, 1, "", "background"], [110, 2, 1, "", "background_model"], [110, 3, 1, "", "copy"], [110, 2, 1, "", "counts"], [110, 3, 1, "", "create"], [110, 3, 1, "", "cutout"], [110, 2, 1, "", "data_shape"], [110, 3, 1, "", "downsample"], [110, 2, 1, "", "edisp"], [110, 2, 1, "", "energy_range"], [110, 2, 1, "", "energy_range_fit"], [110, 2, 1, "", "energy_range_safe"], [110, 2, 1, "", "energy_range_total"], [110, 2, 1, "", "evaluators"], [110, 2, 1, "", "excess"], [110, 2, 1, "", "exposure"], [110, 3, 1, "", "fake"], [110, 3, 1, "", "from_dict"], [110, 3, 1, "", "from_geoms"], [110, 3, 1, "", "from_hdulist"], [110, 3, 1, "", "from_map_dataset"], [110, 3, 1, "", "from_spectrum_dataset"], [110, 2, 1, "", "geoms"], [110, 2, 1, "", "gti"], [110, 3, 1, "", "info_dict"], [110, 2, 1, "", "mask"], [110, 2, 1, "", "mask_fit"], [110, 2, 1, "", "mask_fit_image"], [110, 2, 1, "", "mask_image"], [110, 2, 1, "", "mask_safe"], [110, 2, 1, "", "mask_safe_edisp"], [110, 2, 1, "", "mask_safe_image"], [110, 2, 1, "", "mask_safe_psf"], [110, 2, 1, "", "meta"], [110, 2, 1, "", "meta_table"], [110, 2, 1, "", "models"], [110, 2, 1, "", "name"], [110, 3, 1, "", "npred"], [110, 3, 1, "", "npred_background"], [110, 3, 1, "", "npred_off"], [110, 3, 1, "", "npred_signal"], [110, 3, 1, "", "pad"], [110, 3, 1, "", "peek"], [110, 3, 1, "", "plot_counts"], [110, 3, 1, "", "plot_excess"], [110, 3, 1, "", "plot_fit"], [110, 3, 1, "", "plot_masks"], [110, 3, 1, "", "plot_residuals"], [110, 3, 1, "", "plot_residuals_spatial"], [110, 3, 1, "", "plot_residuals_spectral"], [110, 2, 1, "", "psf"], [110, 3, 1, "", "read"], [110, 3, 1, "", "resample_energy_axis"], [110, 3, 1, "", "reset_data_cache"], [110, 3, 1, "", "residuals"], [110, 3, 1, "", "slice_by_energy"], [110, 3, 1, "", "slice_by_idx"], [110, 3, 1, "", "stack"], [110, 3, 1, "", "stat_array"], [110, 3, 1, "", "stat_sum"], [110, 2, 1, "", "stat_type"], [110, 2, 1, "", "tag"], [110, 3, 1, "", "to_dict"], [110, 3, 1, "", "to_hdulist"], [110, 3, 1, "", "to_image"], [110, 3, 1, "", "to_map_dataset"], [110, 3, 1, "", "to_masked"], [110, 3, 1, "", "to_region_map_dataset"], [110, 3, 1, "", "to_spectrum_dataset"], [110, 3, 1, "", "write"]], "gammapy.datasets.utils": [[116, 4, 1, "", "apply_edisp"], [117, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[118, 1, 1, "", "ASmoothMapEstimator"], [119, 5, 1, "", "ESTIMATOR_REGISTRY"], [120, 1, 1, "", "EnergyDependentMorphologyEstimator"], [121, 1, 1, "", "Estimator"], [122, 1, 1, "", "ExcessMapEstimator"], [123, 1, 1, "", "FluxMaps"], [124, 1, 1, "", "FluxMetaData"], [125, 1, 1, "", "FluxPoints"], [126, 1, 1, "", "FluxPointsEstimator"], [127, 1, 1, "", "FluxProfileEstimator"], [128, 1, 1, "", "ImageProfile"], [129, 1, 1, "", "ImageProfileEstimator"], [130, 1, 1, "", "LightCurveEstimator"], [131, 1, 1, "", "ParameterEstimator"], [132, 1, 1, "", "SensitivityEstimator"], [133, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[118, 2, 1, "", "config_parameters"], [118, 3, 1, "", "copy"], [118, 3, 1, "", "estimate_maps"], [118, 3, 1, "", "get_kernels"], [118, 3, 1, "", "get_scales"], [118, 3, 1, "", "run"], [118, 3, 1, "", "selection_all"], [118, 2, 1, "", "selection_optional"], [118, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[120, 2, 1, "", "config_parameters"], [120, 3, 1, "", "copy"], [120, 3, 1, "", "estimate_energy_dependence"], [120, 3, 1, "", "run"], [120, 2, 1, "", "selection_optional"], [120, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 3, 1, "", "run"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[122, 2, 1, "", "config_parameters"], [122, 3, 1, "", "copy"], [122, 2, 1, "", "correlation_radius"], [122, 3, 1, "", "estimate_excess_map"], [122, 3, 1, "", "estimate_exposure_reco_energy"], [122, 3, 1, "", "estimate_kernel"], [122, 3, 1, "", "estimate_mask_default"], [122, 3, 1, "", "run"], [122, 2, 1, "", "selection_optional"], [122, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[123, 2, 1, "", "acceptance_off"], [123, 2, 1, "", "acceptance_on"], [123, 3, 1, "", "all_quantities"], [123, 2, 1, "", "alpha"], [123, 2, 1, "", "available_quantities"], [123, 3, 1, "", "copy"], [123, 2, 1, "", "counts"], [123, 2, 1, "", "dnde"], [123, 2, 1, "", "dnde_err"], [123, 2, 1, "", "dnde_errn"], [123, 2, 1, "", "dnde_errp"], [123, 2, 1, "", "dnde_ref"], [123, 2, 1, "", "dnde_scan_values"], [123, 2, 1, "", "dnde_ul"], [123, 2, 1, "", "e2dnde"], [123, 2, 1, "", "e2dnde_err"], [123, 2, 1, "", "e2dnde_errn"], [123, 2, 1, "", "e2dnde_errp"], [123, 2, 1, "", "e2dnde_ref"], [123, 2, 1, "", "e2dnde_ul"], [123, 2, 1, "", "eflux"], [123, 2, 1, "", "eflux_err"], [123, 2, 1, "", "eflux_errn"], [123, 2, 1, "", "eflux_errp"], [123, 2, 1, "", "eflux_ref"], [123, 2, 1, "", "eflux_ul"], [123, 2, 1, "", "energy_axis"], [123, 2, 1, "", "energy_max"], [123, 2, 1, "", "energy_min"], [123, 2, 1, "", "energy_ref"], [123, 2, 1, "", "filter_success_nan"], [123, 2, 1, "", "flux"], [123, 2, 1, "", "flux_err"], [123, 2, 1, "", "flux_errn"], [123, 2, 1, "", "flux_errp"], [123, 2, 1, "", "flux_ref"], [123, 2, 1, "", "flux_sensitivity"], [123, 2, 1, "", "flux_ul"], [123, 3, 1, "", "from_hdulist"], [123, 3, 1, "", "from_maps"], [123, 3, 1, "", "from_stack"], [123, 2, 1, "", "geom"], [123, 3, 1, "", "get_flux_points"], [123, 2, 1, "", "has_any_ts"], [123, 2, 1, "", "has_stat_profiles"], [123, 2, 1, "", "has_success"], [123, 2, 1, "", "has_ul"], [123, 2, 1, "", "is_convertible_to_flux_sed_type"], [123, 2, 1, "", "is_ul"], [123, 3, 1, "", "iter_by_axis"], [123, 2, 1, "", "n_dof"], [123, 2, 1, "", "n_sigma"], [123, 2, 1, "", "n_sigma_ul"], [123, 2, 1, "", "niter"], [123, 2, 1, "", "norm"], [123, 2, 1, "", "norm_err"], [123, 2, 1, "", "norm_errn"], [123, 2, 1, "", "norm_errp"], [123, 2, 1, "", "norm_sensitivity"], [123, 2, 1, "", "norm_ul"], [123, 2, 1, "", "npred"], [123, 2, 1, "", "npred_background"], [123, 2, 1, "", "npred_excess"], [123, 2, 1, "", "npred_excess_err"], [123, 2, 1, "", "npred_excess_errn"], [123, 2, 1, "", "npred_excess_errp"], [123, 2, 1, "", "npred_excess_ref"], [123, 2, 1, "", "npred_excess_ul"], [123, 3, 1, "", "read"], [123, 2, 1, "", "reference_model"], [123, 2, 1, "", "reference_model_default"], [123, 2, 1, "", "reference_spectral_model"], [123, 2, 1, "", "sed_type_init"], [123, 2, 1, "", "sed_type_plot_default"], [123, 3, 1, "", "slice_by_coord"], [123, 3, 1, "", "slice_by_energy"], [123, 3, 1, "", "slice_by_idx"], [123, 3, 1, "", "slice_by_time"], [123, 2, 1, "", "sqrt_ts"], [123, 2, 1, "", "sqrt_ts_threshold_ul"], [123, 2, 1, "", "stat"], [123, 2, 1, "", "stat_null"], [123, 2, 1, "", "stat_scan"], [123, 2, 1, "", "success"], [123, 3, 1, "", "to_hdulist"], [123, 3, 1, "", "to_maps"], [123, 2, 1, "", "ts"], [123, 2, 1, "", "ts_scan"], [123, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[124, 3, 1, "", "construct"], [124, 3, 1, "", "copy"], [124, 3, 1, "", "dict"], [124, 3, 1, "", "from_header"], [124, 3, 1, "", "from_orm"], [124, 3, 1, "", "json"], [124, 2, 1, "", "model_computed_fields"], [124, 2, 1, "", "model_config"], [124, 3, 1, "", "model_construct"], [124, 3, 1, "", "model_copy"], [124, 3, 1, "", "model_dump"], [124, 3, 1, "", "model_dump_json"], [124, 2, 1, "", "model_extra"], [124, 2, 1, "", "model_fields"], [124, 2, 1, "", "model_fields_set"], [124, 3, 1, "", "model_json_schema"], [124, 3, 1, "", "model_parametrized_name"], [124, 3, 1, "", "model_post_init"], [124, 3, 1, "", "model_rebuild"], [124, 3, 1, "", "model_validate"], [124, 3, 1, "", "model_validate_json"], [124, 3, 1, "", "model_validate_strings"], [124, 3, 1, "", "parse_file"], [124, 3, 1, "", "parse_obj"], [124, 3, 1, "", "parse_raw"], [124, 3, 1, "", "schema"], [124, 3, 1, "", "schema_json"], [124, 2, 1, "", "tag"], [124, 3, 1, "", "to_header"], [124, 3, 1, "", "to_yaml"], [124, 3, 1, "", "update_forward_refs"], [124, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[125, 2, 1, "", "acceptance_off"], [125, 2, 1, "", "acceptance_on"], [125, 3, 1, "", "all_quantities"], [125, 2, 1, "", "alpha"], [125, 2, 1, "", "available_quantities"], [125, 3, 1, "", "copy"], [125, 2, 1, "", "counts"], [125, 2, 1, "", "dnde"], [125, 2, 1, "", "dnde_err"], [125, 2, 1, "", "dnde_errn"], [125, 2, 1, "", "dnde_errp"], [125, 2, 1, "", "dnde_ref"], [125, 2, 1, "", "dnde_scan_values"], [125, 2, 1, "", "dnde_ul"], [125, 2, 1, "", "e2dnde"], [125, 2, 1, "", "e2dnde_err"], [125, 2, 1, "", "e2dnde_errn"], [125, 2, 1, "", "e2dnde_errp"], [125, 2, 1, "", "e2dnde_ref"], [125, 2, 1, "", "e2dnde_ul"], [125, 2, 1, "", "eflux"], [125, 2, 1, "", "eflux_err"], [125, 2, 1, "", "eflux_errn"], [125, 2, 1, "", "eflux_errp"], [125, 2, 1, "", "eflux_ref"], [125, 2, 1, "", "eflux_ul"], [125, 2, 1, "", "energy_axis"], [125, 2, 1, "", "energy_max"], [125, 2, 1, "", "energy_min"], [125, 2, 1, "", "energy_ref"], [125, 2, 1, "", "filter_success_nan"], [125, 2, 1, "", "flux"], [125, 2, 1, "", "flux_err"], [125, 2, 1, "", "flux_errn"], [125, 2, 1, "", "flux_errp"], [125, 2, 1, "", "flux_ref"], [125, 2, 1, "", "flux_sensitivity"], [125, 2, 1, "", "flux_ul"], [125, 3, 1, "", "from_hdulist"], [125, 3, 1, "", "from_maps"], [125, 3, 1, "", "from_stack"], [125, 3, 1, "", "from_table"], [125, 2, 1, "", "geom"], [125, 3, 1, "", "get_flux_points"], [125, 2, 1, "", "has_any_ts"], [125, 2, 1, "", "has_stat_profiles"], [125, 2, 1, "", "has_success"], [125, 2, 1, "", "has_ul"], [125, 2, 1, "", "is_convertible_to_flux_sed_type"], [125, 2, 1, "", "is_ul"], [125, 3, 1, "", "iter_by_axis"], [125, 2, 1, "", "n_dof"], [125, 2, 1, "", "n_sigma"], [125, 2, 1, "", "n_sigma_ul"], [125, 2, 1, "", "niter"], [125, 2, 1, "", "norm"], [125, 2, 1, "", "norm_err"], [125, 2, 1, "", "norm_errn"], [125, 2, 1, "", "norm_errp"], [125, 2, 1, "", "norm_sensitivity"], [125, 2, 1, "", "norm_ul"], [125, 2, 1, "", "npred"], [125, 2, 1, "", "npred_background"], [125, 2, 1, "", "npred_excess"], [125, 2, 1, "", "npred_excess_err"], [125, 2, 1, "", "npred_excess_errn"], [125, 2, 1, "", "npred_excess_errp"], [125, 2, 1, "", "npred_excess_ref"], [125, 2, 1, "", "npred_excess_ul"], [125, 3, 1, "", "plot"], [125, 3, 1, "", "plot_ts_profiles"], [125, 3, 1, "", "read"], [125, 3, 1, "", "recompute_ul"], [125, 2, 1, "", "reference_model"], [125, 2, 1, "", "reference_model_default"], [125, 2, 1, "", "reference_spectral_model"], [125, 3, 1, "", "resample_axis"], [125, 2, 1, "", "sed_type_init"], [125, 2, 1, "", "sed_type_plot_default"], [125, 3, 1, "", "slice_by_coord"], [125, 3, 1, "", "slice_by_energy"], [125, 3, 1, "", "slice_by_idx"], [125, 3, 1, "", "slice_by_time"], [125, 2, 1, "", "sqrt_ts"], [125, 2, 1, "", "sqrt_ts_threshold_ul"], [125, 2, 1, "", "stat"], [125, 2, 1, "", "stat_null"], [125, 2, 1, "", "stat_scan"], [125, 2, 1, "", "success"], [125, 3, 1, "", "to_hdulist"], [125, 3, 1, "", "to_maps"], [125, 3, 1, "", "to_table"], [125, 2, 1, "", "ts"], [125, 2, 1, "", "ts_scan"], [125, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[126, 2, 1, "", "config_parameters"], [126, 3, 1, "", "copy"], [126, 3, 1, "", "estimate_best_fit"], [126, 3, 1, "", "estimate_counts"], [126, 3, 1, "", "estimate_errn_errp"], [126, 3, 1, "", "estimate_flux_point"], [126, 3, 1, "", "estimate_npred"], [126, 3, 1, "", "estimate_npred_excess"], [126, 3, 1, "", "estimate_scan"], [126, 3, 1, "", "estimate_ts"], [126, 3, 1, "", "estimate_ul"], [126, 3, 1, "", "get_scale_model"], [126, 2, 1, "", "n_jobs"], [126, 2, 1, "", "parallel_backend"], [126, 3, 1, "", "run"], [126, 2, 1, "", "selection_optional"], [126, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[127, 2, 1, "", "config_parameters"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "estimate_best_fit"], [127, 3, 1, "", "estimate_counts"], [127, 3, 1, "", "estimate_errn_errp"], [127, 3, 1, "", "estimate_flux_point"], [127, 3, 1, "", "estimate_npred"], [127, 3, 1, "", "estimate_npred_excess"], [127, 3, 1, "", "estimate_scan"], [127, 3, 1, "", "estimate_ts"], [127, 3, 1, "", "estimate_ul"], [127, 3, 1, "", "get_scale_model"], [127, 2, 1, "", "n_jobs"], [127, 2, 1, "", "parallel_backend"], [127, 2, 1, "", "projected_distance_axis"], [127, 3, 1, "", "run"], [127, 2, 1, "", "selection_optional"], [127, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[128, 3, 1, "", "normalize"], [128, 3, 1, "", "peek"], [128, 3, 1, "", "plot"], [128, 3, 1, "", "plot_err"], [128, 2, 1, "", "profile"], [128, 2, 1, "", "profile_err"], [128, 3, 1, "", "smooth"], [128, 2, 1, "", "x_max"], [128, 2, 1, "", "x_min"], [128, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[130, 2, 1, "", "config_parameters"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "estimate_best_fit"], [130, 3, 1, "", "estimate_counts"], [130, 3, 1, "", "estimate_errn_errp"], [130, 3, 1, "", "estimate_flux_point"], [130, 3, 1, "", "estimate_npred"], [130, 3, 1, "", "estimate_npred_excess"], [130, 3, 1, "", "estimate_scan"], [130, 3, 1, "", "estimate_time_bin_flux"], [130, 3, 1, "", "estimate_ts"], [130, 3, 1, "", "estimate_ul"], [130, 3, 1, "", "expand_map"], [130, 3, 1, "", "get_scale_model"], [130, 2, 1, "", "n_jobs"], [130, 2, 1, "", "parallel_backend"], [130, 3, 1, "", "run"], [130, 2, 1, "", "selection_optional"], [130, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[131, 2, 1, "", "config_parameters"], [131, 3, 1, "", "copy"], [131, 3, 1, "", "estimate_best_fit"], [131, 3, 1, "", "estimate_counts"], [131, 3, 1, "", "estimate_errn_errp"], [131, 3, 1, "", "estimate_npred"], [131, 3, 1, "", "estimate_scan"], [131, 3, 1, "", "estimate_ts"], [131, 3, 1, "", "estimate_ul"], [131, 3, 1, "", "run"], [131, 2, 1, "", "selection_optional"], [131, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "estimate_min_e2dnde"], [132, 3, 1, "", "estimate_min_excess"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[133, 2, 1, "", "config_parameters"], [133, 3, 1, "", "copy"], [133, 3, 1, "", "estimate_fit_input_maps"], [133, 3, 1, "", "estimate_flux_default"], [133, 3, 1, "", "estimate_flux_map"], [133, 3, 1, "", "estimate_kernel"], [133, 3, 1, "", "estimate_mask_default"], [133, 3, 1, "", "estimate_pad_width"], [133, 2, 1, "", "n_jobs"], [133, 2, 1, "", "parallel_backend"], [133, 3, 1, "", "run"], [133, 2, 1, "", "selection_all"], [133, 2, 1, "", "selection_optional"], [133, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[134, 4, 1, "", "combine_flux_maps"], [135, 4, 1, "", "combine_significance_maps"], [136, 4, 1, "", "compute_lightcurve_discrete_correlation"], [137, 4, 1, "", "compute_lightcurve_doublingtime"], [138, 4, 1, "", "compute_lightcurve_fpp"], [139, 4, 1, "", "compute_lightcurve_fvar"], [140, 4, 1, "", "estimate_exposure_reco_energy"], [141, 4, 1, "", "find_peaks"], [142, 4, 1, "", "find_peaks_in_flux_map"], [143, 4, 1, "", "get_combined_flux_maps"], [144, 4, 1, "", "get_combined_significance_maps"], [145, 4, 1, "", "get_rebinned_axis"], [146, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[147, 1, 1, "", "Background2D"], [148, 1, 1, "", "Background3D"], [149, 1, 1, "", "BackgroundIRF"], [150, 1, 1, "", "EDispKernel"], [151, 1, 1, "", "EDispKernelMap"], [152, 1, 1, "", "EDispMap"], [153, 1, 1, "", "EffectiveAreaTable2D"], [154, 1, 1, "", "EnergyDependentMultiGaussPSF"], [155, 1, 1, "", "EnergyDispersion2D"], [156, 1, 1, "", "FoVAlignment"], [157, 1, 1, "", "IRF"], [158, 1, 1, "", "IRFMap"], [159, 5, 1, "", "IRF_REGISTRY"], [160, 1, 1, "", "PSF3D"], [161, 1, 1, "", "PSFKernel"], [162, 1, 1, "", "PSFKing"], [163, 1, 1, "", "PSFMap"], [164, 1, 1, "", "ParametricPSF"], [165, 1, 1, "", "RadMax2D"], [166, 1, 1, "", "RecoPSFMap"], [167, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[147, 2, 1, "", "axes"], [147, 3, 1, "", "cumsum"], [147, 2, 1, "", "data"], [147, 2, 1, "", "default_interp_kwargs"], [147, 2, 1, "", "default_unit"], [147, 3, 1, "", "evaluate"], [147, 2, 1, "", "fov_alignment"], [147, 3, 1, "", "from_hdulist"], [147, 3, 1, "", "from_table"], [147, 2, 1, "", "has_offset_axis"], [147, 3, 1, "", "integral"], [147, 3, 1, "", "integrate_log_log"], [147, 3, 1, "", "interp_missing_data"], [147, 3, 1, "", "is_allclose"], [147, 2, 1, "", "is_pointlike"], [147, 3, 1, "", "normalize"], [147, 3, 1, "", "pad"], [147, 3, 1, "", "peek"], [147, 3, 1, "", "plot"], [147, 3, 1, "", "plot_at_energy"], [147, 3, 1, "", "plot_energy_dependence"], [147, 3, 1, "", "plot_offset_dependence"], [147, 3, 1, "", "plot_spectrum"], [147, 2, 1, "", "quantity"], [147, 3, 1, "", "read"], [147, 2, 1, "", "required_axes"], [147, 3, 1, "", "slice_by_idx"], [147, 2, 1, "", "tag"], [147, 3, 1, "", "to_3d"], [147, 3, 1, "", "to_hdulist"], [147, 3, 1, "", "to_table"], [147, 3, 1, "", "to_table_hdu"], [147, 3, 1, "", "to_unit"], [147, 2, 1, "", "unit"], [147, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[148, 2, 1, "", "axes"], [148, 3, 1, "", "cumsum"], [148, 2, 1, "", "data"], [148, 2, 1, "", "default_interp_kwargs"], [148, 2, 1, "", "default_unit"], [148, 3, 1, "", "evaluate"], [148, 2, 1, "", "fov_alignment"], [148, 3, 1, "", "from_hdulist"], [148, 3, 1, "", "from_table"], [148, 2, 1, "", "has_offset_axis"], [148, 3, 1, "", "integral"], [148, 3, 1, "", "integrate_log_log"], [148, 3, 1, "", "interp_missing_data"], [148, 3, 1, "", "is_allclose"], [148, 2, 1, "", "is_pointlike"], [148, 3, 1, "", "normalize"], [148, 3, 1, "", "pad"], [148, 3, 1, "", "peek"], [148, 3, 1, "", "plot_at_energy"], [148, 2, 1, "", "quantity"], [148, 3, 1, "", "read"], [148, 2, 1, "", "required_axes"], [148, 3, 1, "", "slice_by_idx"], [148, 2, 1, "", "tag"], [148, 3, 1, "", "to_2d"], [148, 3, 1, "", "to_hdulist"], [148, 3, 1, "", "to_table"], [148, 3, 1, "", "to_table_hdu"], [148, 3, 1, "", "to_unit"], [148, 2, 1, "", "unit"], [148, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[149, 2, 1, "", "axes"], [149, 3, 1, "", "cumsum"], [149, 2, 1, "", "data"], [149, 2, 1, "", "default_interp_kwargs"], [149, 3, 1, "", "evaluate"], [149, 2, 1, "", "fov_alignment"], [149, 3, 1, "", "from_hdulist"], [149, 3, 1, "", "from_table"], [149, 2, 1, "", "has_offset_axis"], [149, 3, 1, "", "integral"], [149, 3, 1, "", "integrate_log_log"], [149, 3, 1, "", "interp_missing_data"], [149, 3, 1, "", "is_allclose"], [149, 2, 1, "", "is_pointlike"], [149, 3, 1, "", "normalize"], [149, 3, 1, "", "pad"], [149, 2, 1, "", "quantity"], [149, 3, 1, "", "read"], [149, 2, 1, "", "required_axes"], [149, 3, 1, "", "slice_by_idx"], [149, 2, 1, "", "tag"], [149, 3, 1, "", "to_hdulist"], [149, 3, 1, "", "to_table"], [149, 3, 1, "", "to_table_hdu"], [149, 3, 1, "", "to_unit"], [149, 2, 1, "", "unit"], [149, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[150, 2, 1, "", "axes"], [150, 3, 1, "", "cumsum"], [150, 2, 1, "", "data"], [150, 2, 1, "", "default_interp_kwargs"], [150, 3, 1, "", "evaluate"], [150, 2, 1, "", "fov_alignment"], [150, 3, 1, "", "from_diagonal_response"], [150, 3, 1, "", "from_gauss"], [150, 3, 1, "", "from_hdulist"], [150, 3, 1, "", "from_table"], [150, 3, 1, "", "get_bias"], [150, 3, 1, "", "get_bias_energy"], [150, 3, 1, "", "get_mean"], [150, 3, 1, "", "get_resolution"], [150, 2, 1, "", "has_offset_axis"], [150, 3, 1, "", "integral"], [150, 3, 1, "", "integrate_log_log"], [150, 3, 1, "", "interp_missing_data"], [150, 3, 1, "", "is_allclose"], [150, 2, 1, "", "is_pointlike"], [150, 3, 1, "", "normalize"], [150, 3, 1, "", "pad"], [150, 3, 1, "", "pdf_in_safe_range"], [150, 2, 1, "", "pdf_matrix"], [150, 3, 1, "", "peek"], [150, 3, 1, "", "plot_bias"], [150, 3, 1, "", "plot_matrix"], [150, 2, 1, "", "quantity"], [150, 3, 1, "", "read"], [150, 2, 1, "", "required_axes"], [150, 3, 1, "", "slice_by_idx"], [150, 2, 1, "", "tag"], [150, 3, 1, "", "to_hdulist"], [150, 3, 1, "", "to_image"], [150, 3, 1, "", "to_table"], [150, 3, 1, "", "to_table_hdu"], [150, 3, 1, "", "to_unit"], [150, 2, 1, "", "unit"], [150, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[151, 3, 1, "", "copy"], [151, 3, 1, "", "cutout"], [151, 3, 1, "", "downsample"], [151, 2, 1, "", "edisp_map"], [151, 3, 1, "", "from_diagonal_response"], [151, 3, 1, "", "from_edisp_kernel"], [151, 3, 1, "", "from_gauss"], [151, 3, 1, "", "from_geom"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "get_edisp_kernel"], [151, 2, 1, "", "has_single_spatial_bin"], [151, 2, 1, "", "mask_safe_image"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "resample_energy_axis"], [151, 3, 1, "", "slice_by_idx"], [151, 3, 1, "", "stack"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_image"], [151, 3, 1, "", "to_region_nd_map"], [151, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[152, 3, 1, "", "copy"], [152, 3, 1, "", "cutout"], [152, 3, 1, "", "downsample"], [152, 2, 1, "", "edisp_map"], [152, 3, 1, "", "from_diagonal_response"], [152, 3, 1, "", "from_geom"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "get_edisp_kernel"], [152, 2, 1, "", "has_single_spatial_bin"], [152, 2, 1, "", "mask_safe_image"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "peek"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "sample_coord"], [152, 3, 1, "", "slice_by_idx"], [152, 3, 1, "", "stack"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_edisp_kernel_map"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_region_nd_map"], [152, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[153, 2, 1, "", "axes"], [153, 3, 1, "", "cumsum"], [153, 2, 1, "", "data"], [153, 2, 1, "", "default_interp_kwargs"], [153, 2, 1, "", "default_unit"], [153, 3, 1, "", "evaluate"], [153, 2, 1, "", "fov_alignment"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "from_parametrization"], [153, 3, 1, "", "from_table"], [153, 2, 1, "", "has_offset_axis"], [153, 3, 1, "", "integral"], [153, 3, 1, "", "integrate_log_log"], [153, 3, 1, "", "interp_missing_data"], [153, 3, 1, "", "is_allclose"], [153, 2, 1, "", "is_pointlike"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "pad"], [153, 3, 1, "", "peek"], [153, 3, 1, "", "plot"], [153, 3, 1, "", "plot_energy_dependence"], [153, 3, 1, "", "plot_offset_dependence"], [153, 2, 1, "", "quantity"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "slice_by_idx"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_table"], [153, 3, 1, "", "to_table_hdu"], [153, 3, 1, "", "to_unit"], [153, 2, 1, "", "unit"], [153, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "containment"], [154, 3, 1, "", "containment_radius"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 3, 1, "", "evaluate"], [154, 3, 1, "", "evaluate_containment"], [154, 3, 1, "", "evaluate_direct"], [154, 3, 1, "", "evaluate_parameters"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "info"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_containment_radius"], [154, 3, 1, "", "plot_containment_radius_vs_energy"], [154, 3, 1, "", "plot_psf_vs_rad"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 2, 1, "", "required_parameters"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_psf3d"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[155, 2, 1, "", "axes"], [155, 3, 1, "", "cumsum"], [155, 2, 1, "", "data"], [155, 2, 1, "", "default_interp_kwargs"], [155, 2, 1, "", "default_unit"], [155, 3, 1, "", "evaluate"], [155, 2, 1, "", "fov_alignment"], [155, 3, 1, "", "from_gauss"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "from_table"], [155, 2, 1, "", "has_offset_axis"], [155, 3, 1, "", "integral"], [155, 3, 1, "", "integrate_log_log"], [155, 3, 1, "", "interp_missing_data"], [155, 3, 1, "", "is_allclose"], [155, 2, 1, "", "is_pointlike"], [155, 3, 1, "", "normalize"], [155, 3, 1, "", "pad"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "plot_bias"], [155, 3, 1, "", "plot_migration"], [155, 2, 1, "", "quantity"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "slice_by_idx"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_edisp_kernel"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_table"], [155, 3, 1, "", "to_table_hdu"], [155, 3, 1, "", "to_unit"], [155, 2, 1, "", "unit"], [155, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[156, 2, 1, "", "ALTAZ"], [156, 2, 1, "", "RADEC"], [156, 2, 1, "", "REVERSE_LON_RADEC"]], "gammapy.irf.IRF": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 3, 1, "", "evaluate"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[158, 3, 1, "", "copy"], [158, 3, 1, "", "cutout"], [158, 3, 1, "", "downsample"], [158, 3, 1, "", "from_hdulist"], [158, 2, 1, "", "has_single_spatial_bin"], [158, 2, 1, "", "mask_safe_image"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 3, 1, "", "slice_by_idx"], [158, 3, 1, "", "stack"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_region_nd_map"], [158, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[160, 2, 1, "", "axes"], [160, 3, 1, "", "containment"], [160, 3, 1, "", "containment_radius"], [160, 3, 1, "", "cumsum"], [160, 2, 1, "", "data"], [160, 2, 1, "", "default_interp_kwargs"], [160, 2, 1, "", "default_unit"], [160, 3, 1, "", "evaluate"], [160, 2, 1, "", "fov_alignment"], [160, 3, 1, "", "from_hdulist"], [160, 3, 1, "", "from_table"], [160, 2, 1, "", "has_offset_axis"], [160, 3, 1, "", "info"], [160, 3, 1, "", "integral"], [160, 3, 1, "", "integrate_log_log"], [160, 3, 1, "", "interp_missing_data"], [160, 3, 1, "", "is_allclose"], [160, 2, 1, "", "is_pointlike"], [160, 3, 1, "", "normalize"], [160, 3, 1, "", "pad"], [160, 3, 1, "", "peek"], [160, 3, 1, "", "plot_containment_radius"], [160, 3, 1, "", "plot_containment_radius_vs_energy"], [160, 3, 1, "", "plot_psf_vs_rad"], [160, 2, 1, "", "quantity"], [160, 3, 1, "", "read"], [160, 2, 1, "", "required_axes"], [160, 3, 1, "", "slice_by_idx"], [160, 2, 1, "", "tag"], [160, 3, 1, "", "to_hdulist"], [160, 3, 1, "", "to_table"], [160, 3, 1, "", "to_table_hdu"], [160, 3, 1, "", "to_unit"], [160, 2, 1, "", "unit"], [160, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[161, 2, 1, "", "data"], [161, 3, 1, "", "from_gauss"], [161, 3, 1, "", "from_spatial_model"], [161, 3, 1, "", "normalize"], [161, 3, 1, "", "peek"], [161, 3, 1, "", "plot_kernel"], [161, 2, 1, "", "psf_kernel_map"], [161, 3, 1, "", "read"], [161, 3, 1, "", "slice_by_idx"], [161, 3, 1, "", "to_image"], [161, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[162, 2, 1, "", "axes"], [162, 3, 1, "", "containment"], [162, 3, 1, "", "containment_radius"], [162, 3, 1, "", "cumsum"], [162, 2, 1, "", "data"], [162, 2, 1, "", "default_interp_kwargs"], [162, 3, 1, "", "evaluate"], [162, 3, 1, "", "evaluate_containment"], [162, 3, 1, "", "evaluate_direct"], [162, 3, 1, "", "evaluate_parameters"], [162, 2, 1, "", "fov_alignment"], [162, 3, 1, "", "from_hdulist"], [162, 3, 1, "", "from_table"], [162, 2, 1, "", "has_offset_axis"], [162, 3, 1, "", "info"], [162, 3, 1, "", "integral"], [162, 3, 1, "", "integrate_log_log"], [162, 3, 1, "", "interp_missing_data"], [162, 3, 1, "", "is_allclose"], [162, 2, 1, "", "is_pointlike"], [162, 3, 1, "", "normalize"], [162, 3, 1, "", "pad"], [162, 3, 1, "", "peek"], [162, 3, 1, "", "plot_containment_radius"], [162, 3, 1, "", "plot_containment_radius_vs_energy"], [162, 3, 1, "", "plot_psf_vs_rad"], [162, 2, 1, "", "quantity"], [162, 3, 1, "", "read"], [162, 2, 1, "", "required_axes"], [162, 2, 1, "", "required_parameters"], [162, 3, 1, "", "slice_by_idx"], [162, 2, 1, "", "tag"], [162, 3, 1, "", "to_hdulist"], [162, 3, 1, "", "to_psf3d"], [162, 3, 1, "", "to_table"], [162, 3, 1, "", "to_table_hdu"], [162, 3, 1, "", "to_unit"], [162, 2, 1, "", "unit"], [162, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[163, 3, 1, "", "containment"], [163, 3, 1, "", "containment_radius"], [163, 3, 1, "", "containment_radius_map"], [163, 3, 1, "", "copy"], [163, 3, 1, "", "cutout"], [163, 3, 1, "", "downsample"], [163, 2, 1, "", "energy_name"], [163, 3, 1, "", "from_gauss"], [163, 3, 1, "", "from_geom"], [163, 3, 1, "", "from_hdulist"], [163, 3, 1, "", "get_psf_kernel"], [163, 2, 1, "", "has_single_spatial_bin"], [163, 2, 1, "", "mask_safe_image"], [163, 3, 1, "", "normalize"], [163, 3, 1, "", "peek"], [163, 3, 1, "", "plot_containment_radius_vs_energy"], [163, 3, 1, "", "plot_psf_vs_rad"], [163, 2, 1, "", "psf_map"], [163, 3, 1, "", "read"], [163, 2, 1, "", "required_axes"], [163, 3, 1, "", "sample_coord"], [163, 3, 1, "", "slice_by_idx"], [163, 3, 1, "", "stack"], [163, 2, 1, "", "tag"], [163, 3, 1, "", "to_hdulist"], [163, 3, 1, "", "to_image"], [163, 3, 1, "", "to_region_nd_map"], [163, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[164, 2, 1, "", "axes"], [164, 3, 1, "", "containment"], [164, 3, 1, "", "containment_radius"], [164, 3, 1, "", "cumsum"], [164, 2, 1, "", "data"], [164, 2, 1, "", "default_interp_kwargs"], [164, 3, 1, "", "evaluate"], [164, 3, 1, "", "evaluate_containment"], [164, 3, 1, "", "evaluate_direct"], [164, 3, 1, "", "evaluate_parameters"], [164, 2, 1, "", "fov_alignment"], [164, 3, 1, "", "from_hdulist"], [164, 3, 1, "", "from_table"], [164, 2, 1, "", "has_offset_axis"], [164, 3, 1, "", "info"], [164, 3, 1, "", "integral"], [164, 3, 1, "", "integrate_log_log"], [164, 3, 1, "", "interp_missing_data"], [164, 3, 1, "", "is_allclose"], [164, 2, 1, "", "is_pointlike"], [164, 3, 1, "", "normalize"], [164, 3, 1, "", "pad"], [164, 3, 1, "", "peek"], [164, 3, 1, "", "plot_containment_radius"], [164, 3, 1, "", "plot_containment_radius_vs_energy"], [164, 3, 1, "", "plot_psf_vs_rad"], [164, 2, 1, "", "quantity"], [164, 3, 1, "", "read"], [164, 2, 1, "", "required_axes"], [164, 2, 1, "", "required_parameters"], [164, 3, 1, "", "slice_by_idx"], [164, 2, 1, "", "tag"], [164, 3, 1, "", "to_hdulist"], [164, 3, 1, "", "to_psf3d"], [164, 3, 1, "", "to_table"], [164, 3, 1, "", "to_table_hdu"], [164, 3, 1, "", "to_unit"], [164, 2, 1, "", "unit"], [164, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[165, 2, 1, "", "axes"], [165, 3, 1, "", "cumsum"], [165, 2, 1, "", "data"], [165, 2, 1, "", "default_interp_kwargs"], [165, 2, 1, "", "default_unit"], [165, 3, 1, "", "evaluate"], [165, 2, 1, "", "fov_alignment"], [165, 3, 1, "", "from_hdulist"], [165, 3, 1, "", "from_irf"], [165, 3, 1, "", "from_table"], [165, 2, 1, "", "has_offset_axis"], [165, 3, 1, "", "integral"], [165, 3, 1, "", "integrate_log_log"], [165, 3, 1, "", "interp_missing_data"], [165, 3, 1, "", "is_allclose"], [165, 2, 1, "", "is_fixed_rad_max"], [165, 2, 1, "", "is_pointlike"], [165, 3, 1, "", "normalize"], [165, 3, 1, "", "pad"], [165, 3, 1, "", "plot_rad_max_vs_energy"], [165, 2, 1, "", "quantity"], [165, 3, 1, "", "read"], [165, 2, 1, "", "required_axes"], [165, 3, 1, "", "slice_by_idx"], [165, 2, 1, "", "tag"], [165, 3, 1, "", "to_hdulist"], [165, 3, 1, "", "to_table"], [165, 3, 1, "", "to_table_hdu"], [165, 3, 1, "", "to_unit"], [165, 2, 1, "", "unit"], [165, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[166, 3, 1, "", "containment"], [166, 3, 1, "", "containment_radius"], [166, 3, 1, "", "containment_radius_map"], [166, 3, 1, "", "copy"], [166, 3, 1, "", "cutout"], [166, 3, 1, "", "downsample"], [166, 2, 1, "", "energy_name"], [166, 3, 1, "", "from_gauss"], [166, 3, 1, "", "from_geom"], [166, 3, 1, "", "from_hdulist"], [166, 3, 1, "", "get_psf_kernel"], [166, 2, 1, "", "has_single_spatial_bin"], [166, 2, 1, "", "mask_safe_image"], [166, 3, 1, "", "normalize"], [166, 3, 1, "", "peek"], [166, 3, 1, "", "plot_containment_radius_vs_energy"], [166, 3, 1, "", "plot_psf_vs_rad"], [166, 2, 1, "", "psf_map"], [166, 3, 1, "", "read"], [166, 2, 1, "", "required_axes"], [166, 3, 1, "", "sample_coord"], [166, 3, 1, "", "slice_by_idx"], [166, 3, 1, "", "stack"], [166, 2, 1, "", "tag"], [166, 3, 1, "", "to_hdulist"], [166, 3, 1, "", "to_image"], [166, 3, 1, "", "to_region_nd_map"], [166, 3, 1, "", "write"]], "gammapy.makers": [[168, 1, 1, "", "AdaptiveRingBackgroundMaker"], [169, 1, 1, "", "DatasetsMaker"], [170, 1, 1, "", "FoVBackgroundMaker"], [171, 5, 1, "", "MAKER_REGISTRY"], [172, 1, 1, "", "Maker"], [173, 1, 1, "", "MapDatasetMaker"], [174, 1, 1, "", "PhaseBackgroundMaker"], [175, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [176, 1, 1, "", "ReflectedRegionsFinder"], [177, 1, 1, "", "RegionsFinder"], [178, 1, 1, "", "RingBackgroundMaker"], [179, 1, 1, "", "SafeMaskMaker"], [180, 1, 1, "", "SpectrumDatasetMaker"], [181, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[168, 3, 1, "", "kernels"], [168, 3, 1, "", "make_cubes"], [168, 3, 1, "", "run"], [168, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[169, 3, 1, "", "callback"], [169, 3, 1, "", "error_callback"], [169, 3, 1, "", "make_dataset"], [169, 2, 1, "", "n_jobs"], [169, 2, 1, "", "offset_max"], [169, 2, 1, "", "parallel_backend"], [169, 3, 1, "", "run"], [169, 2, 1, "", "safe_mask_maker"], [169, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[170, 2, 1, "", "available_methods"], [170, 3, 1, "", "make_background_fit"], [170, 3, 1, "", "make_background_scale"], [170, 3, 1, "", "make_default_fov_background_model"], [170, 3, 1, "", "make_exclusion_mask"], [170, 2, 1, "", "method"], [170, 3, 1, "", "run"], [170, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[172, 3, 1, "", "run"], [172, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[173, 2, 1, "", "available_selection"], [173, 3, 1, "", "make_background"], [173, 3, 1, "", "make_counts"], [173, 3, 1, "", "make_edisp"], [173, 3, 1, "", "make_edisp_kernel"], [173, 3, 1, "", "make_exposure"], [173, 3, 1, "", "make_exposure_irf"], [173, 3, 1, "", "make_meta_table"], [173, 3, 1, "", "make_psf"], [173, 3, 1, "", "run"], [173, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[174, 3, 1, "", "make_counts"], [174, 3, 1, "", "make_counts_off"], [174, 3, 1, "", "run"], [174, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[175, 3, 1, "", "make_counts_off"], [175, 3, 1, "", "run"], [175, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[176, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[177, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[178, 3, 1, "", "kernel"], [178, 3, 1, "", "make_maps_off"], [178, 3, 1, "", "run"], [178, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[179, 2, 1, "", "available_methods"], [179, 3, 1, "", "make_mask_bkg_invalid"], [179, 3, 1, "", "make_mask_energy_aeff_default"], [179, 3, 1, "", "make_mask_energy_aeff_max"], [179, 3, 1, "", "make_mask_energy_bkg_peak"], [179, 3, 1, "", "make_mask_energy_edisp_bias"], [179, 3, 1, "", "make_mask_offset_max"], [179, 3, 1, "", "run"], [179, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[180, 2, 1, "", "available_selection"], [180, 3, 1, "", "make_background"], [180, 3, 1, "", "make_counts"], [180, 3, 1, "", "make_edisp"], [180, 3, 1, "", "make_edisp_kernel"], [180, 3, 1, "", "make_exposure"], [180, 3, 1, "", "make_exposure_irf"], [180, 3, 1, "", "make_meta_table"], [180, 3, 1, "", "make_psf"], [180, 3, 1, "", "run"], [180, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[181, 3, 1, "", "run"]], "gammapy.makers.utils": [[182, 4, 1, "", "make_counts_rad_max"], [183, 4, 1, "", "make_edisp_kernel_map"], [184, 4, 1, "", "make_edisp_map"], [185, 4, 1, "", "make_effective_livetime_map"], [186, 4, 1, "", "make_map_background_irf"], [187, 4, 1, "", "make_map_exposure_true_energy"], [188, 4, 1, "", "make_observation_time_map"], [189, 4, 1, "", "make_psf_map"], [190, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[191, 1, 1, "", "Geom"], [192, 1, 1, "", "HpxGeom"], [193, 1, 1, "", "HpxMap"], [194, 1, 1, "", "HpxNDMap"], [195, 1, 1, "", "LabelMapAxis"], [196, 1, 1, "", "Map"], [197, 1, 1, "", "MapAxes"], [198, 1, 1, "", "MapAxis"], [199, 1, 1, "", "MapCoord"], [200, 1, 1, "", "Maps"], [201, 1, 1, "", "RegionGeom"], [202, 1, 1, "", "RegionNDMap"], [203, 1, 1, "", "TimeMapAxis"], [204, 1, 1, "", "WcsGeom"], [205, 1, 1, "", "WcsMap"], [206, 1, 1, "", "WcsNDMap"], [207, 4, 1, "", "containment_radius"], [208, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[191, 2, 1, "", "as_energy_true"], [191, 2, 1, "", "center_coord"], [191, 2, 1, "", "center_pix"], [191, 2, 1, "", "center_skydir"], [191, 3, 1, "", "contains"], [191, 3, 1, "", "contains_pix"], [191, 3, 1, "", "coord_to_idx"], [191, 3, 1, "", "coord_to_pix"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "create_mask"], [191, 3, 1, "", "crop"], [191, 3, 1, "", "data_nbytes"], [191, 2, 1, "", "data_shape"], [191, 3, 1, "", "downsample"], [191, 3, 1, "", "drop"], [191, 3, 1, "", "energy_mask"], [191, 3, 1, "", "from_hdulist"], [191, 3, 1, "", "get_coord"], [191, 3, 1, "", "get_idx"], [191, 2, 1, "", "has_energy_axis"], [191, 2, 1, "", "is_allsky"], [191, 2, 1, "", "is_flat"], [191, 2, 1, "", "is_image"], [191, 3, 1, "", "pad"], [191, 3, 1, "", "pix_to_coord"], [191, 3, 1, "", "pix_to_idx"], [191, 3, 1, "", "rename_axes"], [191, 3, 1, "", "replace_axis"], [191, 3, 1, "", "resample_axis"], [191, 3, 1, "", "slice_by_idx"], [191, 3, 1, "", "solid_angle"], [191, 3, 1, "", "squash"], [191, 3, 1, "", "to_bands_hdu"], [191, 3, 1, "", "to_cube"], [191, 3, 1, "", "to_image"], [191, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[192, 2, 1, "", "as_energy_true"], [192, 2, 1, "", "axes"], [192, 2, 1, "", "axes_names"], [192, 2, 1, "", "center_coord"], [192, 2, 1, "", "center_pix"], [192, 2, 1, "", "center_skydir"], [192, 3, 1, "", "contains"], [192, 3, 1, "", "contains_pix"], [192, 3, 1, "", "coord_to_idx"], [192, 3, 1, "", "coord_to_pix"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "create"], [192, 3, 1, "", "create_mask"], [192, 3, 1, "", "crop"], [192, 3, 1, "", "cutout"], [192, 3, 1, "", "data_nbytes"], [192, 2, 1, "", "data_shape"], [192, 2, 1, "", "data_shape_axes"], [192, 3, 1, "", "downsample"], [192, 3, 1, "", "drop"], [192, 3, 1, "", "energy_mask"], [192, 2, 1, "", "frame"], [192, 3, 1, "", "from_hdu"], [192, 3, 1, "", "from_hdulist"], [192, 3, 1, "", "from_header"], [192, 3, 1, "", "get_coord"], [192, 3, 1, "", "get_idx"], [192, 3, 1, "", "get_index_list"], [192, 3, 1, "", "global_to_local"], [192, 2, 1, "", "has_energy_axis"], [192, 3, 1, "", "interp_weights"], [192, 2, 1, "", "ipix"], [192, 3, 1, "", "is_aligned"], [192, 3, 1, "", "is_allclose"], [192, 2, 1, "", "is_allsky"], [192, 2, 1, "", "is_flat"], [192, 2, 1, "", "is_hpx"], [192, 2, 1, "", "is_image"], [192, 2, 1, "", "is_region"], [192, 2, 1, "", "is_regular"], [192, 3, 1, "", "local_to_global"], [192, 2, 1, "", "ndim"], [192, 2, 1, "", "nest"], [192, 2, 1, "", "npix"], [192, 2, 1, "", "npix_max"], [192, 2, 1, "", "nside"], [192, 2, 1, "", "order"], [192, 2, 1, "", "ordering"], [192, 3, 1, "", "pad"], [192, 3, 1, "", "pix_to_coord"], [192, 3, 1, "", "pix_to_idx"], [192, 2, 1, "", "pixel_scales"], [192, 2, 1, "", "projection"], [192, 2, 1, "", "region"], [192, 3, 1, "", "region_mask"], [192, 3, 1, "", "rename_axes"], [192, 3, 1, "", "replace_axis"], [192, 3, 1, "", "resample_axis"], [192, 3, 1, "", "separation"], [192, 2, 1, "", "shape_axes"], [192, 3, 1, "", "slice_by_idx"], [192, 3, 1, "", "solid_angle"], [192, 3, 1, "", "squash"], [192, 3, 1, "", "to_bands_hdu"], [192, 3, 1, "", "to_binsz"], [192, 3, 1, "", "to_cube"], [192, 3, 1, "", "to_header"], [192, 3, 1, "", "to_image"], [192, 3, 1, "", "to_nside"], [192, 3, 1, "", "to_swapped"], [192, 3, 1, "", "to_wcs_geom"], [192, 3, 1, "", "to_wcs_tiles"], [192, 3, 1, "", "upsample"], [192, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[193, 3, 1, "", "coadd"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "create"], [193, 3, 1, "", "crop"], [193, 3, 1, "", "cumsum"], [193, 2, 1, "", "data"], [193, 3, 1, "", "dot"], [193, 3, 1, "", "downsample"], [193, 3, 1, "", "fill_by_coord"], [193, 3, 1, "", "fill_by_idx"], [193, 3, 1, "", "fill_by_pix"], [193, 3, 1, "", "fill_events"], [193, 3, 1, "", "from_geom"], [193, 3, 1, "", "from_hdulist"], [193, 3, 1, "", "from_stack"], [193, 2, 1, "", "geom"], [193, 3, 1, "", "get_by_coord"], [193, 3, 1, "", "get_by_idx"], [193, 3, 1, "", "get_by_pix"], [193, 3, 1, "", "get_image_by_coord"], [193, 3, 1, "", "get_image_by_idx"], [193, 3, 1, "", "get_image_by_pix"], [193, 3, 1, "", "get_spectrum"], [193, 3, 1, "", "integral"], [193, 3, 1, "", "interp_by_coord"], [193, 3, 1, "", "interp_by_pix"], [193, 3, 1, "", "interp_to_geom"], [193, 3, 1, "", "is_allclose"], [193, 2, 1, "", "is_mask"], [193, 3, 1, "", "iter_by_axis"], [193, 3, 1, "", "iter_by_image"], [193, 3, 1, "", "iter_by_image_data"], [193, 3, 1, "", "iter_by_image_index"], [193, 3, 1, "", "mask_nearest_position"], [193, 2, 1, "", "meta"], [193, 3, 1, "", "normalize"], [193, 3, 1, "", "pad"], [193, 3, 1, "", "plot_grid"], [193, 3, 1, "", "plot_interactive"], [193, 2, 1, "", "quantity"], [193, 3, 1, "", "read"], [193, 3, 1, "", "reduce"], [193, 3, 1, "", "reduce_over_axes"], [193, 3, 1, "", "rename_axes"], [193, 3, 1, "", "reorder_axes"], [193, 3, 1, "", "reproject_by_image"], [193, 3, 1, "", "reproject_to_geom"], [193, 3, 1, "", "resample"], [193, 3, 1, "", "resample_axis"], [193, 3, 1, "", "sample_coord"], [193, 3, 1, "", "set_by_coord"], [193, 3, 1, "", "set_by_idx"], [193, 3, 1, "", "set_by_pix"], [193, 3, 1, "", "slice_by_idx"], [193, 3, 1, "", "split_by_axis"], [193, 3, 1, "", "sum_over_axes"], [193, 2, 1, "", "tag"], [193, 3, 1, "", "to_cube"], [193, 3, 1, "", "to_hdu"], [193, 3, 1, "", "to_hdulist"], [193, 3, 1, "", "to_swapped"], [193, 3, 1, "", "to_unit"], [193, 3, 1, "", "to_wcs"], [193, 2, 1, "", "unit"], [193, 3, 1, "", "upsample"], [193, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[194, 3, 1, "", "coadd"], [194, 3, 1, "", "convolve"], [194, 3, 1, "", "convolve_full"], [194, 3, 1, "", "convolve_wcs"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "create"], [194, 3, 1, "", "crop"], [194, 3, 1, "", "cumsum"], [194, 3, 1, "", "cutout"], [194, 2, 1, "", "data"], [194, 3, 1, "", "dot"], [194, 3, 1, "", "downsample"], [194, 3, 1, "", "fill_by_coord"], [194, 3, 1, "", "fill_by_idx"], [194, 3, 1, "", "fill_by_pix"], [194, 3, 1, "", "fill_events"], [194, 3, 1, "", "from_geom"], [194, 3, 1, "", "from_hdu"], [194, 3, 1, "", "from_hdulist"], [194, 3, 1, "", "from_stack"], [194, 3, 1, "", "from_wcs_tiles"], [194, 2, 1, "", "geom"], [194, 3, 1, "", "get_by_coord"], [194, 3, 1, "", "get_by_idx"], [194, 3, 1, "", "get_by_pix"], [194, 3, 1, "", "get_image_by_coord"], [194, 3, 1, "", "get_image_by_idx"], [194, 3, 1, "", "get_image_by_pix"], [194, 3, 1, "", "get_spectrum"], [194, 3, 1, "", "integral"], [194, 3, 1, "", "interp_by_coord"], [194, 3, 1, "", "interp_by_pix"], [194, 3, 1, "", "interp_to_geom"], [194, 3, 1, "", "is_allclose"], [194, 2, 1, "", "is_mask"], [194, 3, 1, "", "iter_by_axis"], [194, 3, 1, "", "iter_by_image"], [194, 3, 1, "", "iter_by_image_data"], [194, 3, 1, "", "iter_by_image_index"], [194, 3, 1, "", "mask_nearest_position"], [194, 2, 1, "", "meta"], [194, 3, 1, "", "normalize"], [194, 3, 1, "", "pad"], [194, 3, 1, "", "plot"], [194, 3, 1, "", "plot_grid"], [194, 3, 1, "", "plot_interactive"], [194, 3, 1, "", "plot_mask"], [194, 2, 1, "", "quantity"], [194, 3, 1, "", "read"], [194, 3, 1, "", "reduce"], [194, 3, 1, "", "reduce_over_axes"], [194, 3, 1, "", "rename_axes"], [194, 3, 1, "", "reorder_axes"], [194, 3, 1, "", "reproject_by_image"], [194, 3, 1, "", "reproject_to_geom"], [194, 3, 1, "", "resample"], [194, 3, 1, "", "resample_axis"], [194, 3, 1, "", "sample_coord"], [194, 3, 1, "", "set_by_coord"], [194, 3, 1, "", "set_by_idx"], [194, 3, 1, "", "set_by_pix"], [194, 3, 1, "", "slice_by_idx"], [194, 3, 1, "", "smooth"], [194, 3, 1, "", "split_by_axis"], [194, 3, 1, "", "stack"], [194, 3, 1, "", "sum_over_axes"], [194, 2, 1, "", "tag"], [194, 3, 1, "", "to_cube"], [194, 3, 1, "", "to_hdu"], [194, 3, 1, "", "to_hdulist"], [194, 3, 1, "", "to_nside"], [194, 3, 1, "", "to_region_nd_map"], [194, 3, 1, "", "to_swapped"], [194, 3, 1, "", "to_unit"], [194, 3, 1, "", "to_wcs"], [194, 3, 1, "", "to_wcs_tiles"], [194, 2, 1, "", "unit"], [194, 3, 1, "", "upsample"], [194, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[195, 2, 1, "", "as_plot_center"], [195, 2, 1, "", "as_plot_edges"], [195, 2, 1, "", "as_plot_labels"], [195, 2, 1, "", "as_plot_xerr"], [195, 3, 1, "", "assert_name"], [195, 2, 1, "", "bin_width"], [195, 2, 1, "", "center"], [195, 3, 1, "", "concatenate"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "downsample"], [195, 2, 1, "", "edges"], [195, 2, 1, "", "edges_max"], [195, 2, 1, "", "edges_min"], [195, 3, 1, "", "format_plot_xaxis"], [195, 3, 1, "", "from_stack"], [195, 3, 1, "", "from_table"], [195, 3, 1, "", "is_allclose"], [195, 2, 1, "", "name"], [195, 2, 1, "", "nbin"], [195, 2, 1, "", "node_type"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 3, 1, "", "resample"], [195, 3, 1, "", "slice"], [195, 3, 1, "", "squash"], [195, 3, 1, "", "to_header"], [195, 2, 1, "", "unit"], [195, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[196, 3, 1, "", "coadd"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cumsum"], [196, 2, 1, "", "data"], [196, 3, 1, "", "dot"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "fill_by_coord"], [196, 3, 1, "", "fill_by_idx"], [196, 3, 1, "", "fill_by_pix"], [196, 3, 1, "", "fill_events"], [196, 3, 1, "", "from_geom"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_stack"], [196, 2, 1, "", "geom"], [196, 3, 1, "", "get_by_coord"], [196, 3, 1, "", "get_by_idx"], [196, 3, 1, "", "get_by_pix"], [196, 3, 1, "", "get_image_by_coord"], [196, 3, 1, "", "get_image_by_idx"], [196, 3, 1, "", "get_image_by_pix"], [196, 3, 1, "", "get_spectrum"], [196, 3, 1, "", "integral"], [196, 3, 1, "", "interp_by_coord"], [196, 3, 1, "", "interp_by_pix"], [196, 3, 1, "", "interp_to_geom"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_mask"], [196, 3, 1, "", "iter_by_axis"], [196, 3, 1, "", "iter_by_image"], [196, 3, 1, "", "iter_by_image_data"], [196, 3, 1, "", "iter_by_image_index"], [196, 3, 1, "", "mask_nearest_position"], [196, 2, 1, "", "meta"], [196, 3, 1, "", "normalize"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "plot_grid"], [196, 3, 1, "", "plot_interactive"], [196, 2, 1, "", "quantity"], [196, 3, 1, "", "read"], [196, 3, 1, "", "reduce"], [196, 3, 1, "", "reduce_over_axes"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "reorder_axes"], [196, 3, 1, "", "reproject_by_image"], [196, 3, 1, "", "reproject_to_geom"], [196, 3, 1, "", "resample"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "sample_coord"], [196, 3, 1, "", "set_by_coord"], [196, 3, 1, "", "set_by_idx"], [196, 3, 1, "", "set_by_pix"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "split_by_axis"], [196, 3, 1, "", "sum_over_axes"], [196, 2, 1, "", "tag"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_unit"], [196, 2, 1, "", "unit"], [196, 3, 1, "", "upsample"], [196, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[197, 3, 1, "", "assert_names"], [197, 3, 1, "", "bin_volume"], [197, 2, 1, "", "center_coord"], [197, 3, 1, "", "coord_to_idx"], [197, 3, 1, "", "coord_to_pix"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "count"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "drop"], [197, 3, 1, "", "from_default"], [197, 3, 1, "", "from_table"], [197, 3, 1, "", "from_table_hdu"], [197, 3, 1, "", "get_coord"], [197, 3, 1, "", "index"], [197, 3, 1, "", "index_data"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_flat"], [197, 2, 1, "", "is_unidimensional"], [197, 2, 1, "", "iter_with_reshape"], [197, 2, 1, "", "names"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "pix_to_coord"], [197, 3, 1, "", "pix_to_idx"], [197, 2, 1, "", "primary_axis"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "replace"], [197, 3, 1, "", "resample"], [197, 2, 1, "", "reverse"], [197, 2, 1, "", "shape"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "squash"], [197, 3, 1, "", "to_header"], [197, 3, 1, "", "to_table"], [197, 3, 1, "", "to_table_hdu"], [197, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[198, 2, 1, "", "as_plot_center"], [198, 2, 1, "", "as_plot_edges"], [198, 2, 1, "", "as_plot_labels"], [198, 2, 1, "", "as_plot_scale"], [198, 2, 1, "", "as_plot_xerr"], [198, 3, 1, "", "assert_name"], [198, 2, 1, "", "bin_width"], [198, 2, 1, "", "bounds"], [198, 2, 1, "", "center"], [198, 3, 1, "", "concatenate"], [198, 3, 1, "", "coord_to_idx"], [198, 3, 1, "", "coord_to_pix"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "downsample"], [198, 2, 1, "", "edges"], [198, 2, 1, "", "edges_max"], [198, 2, 1, "", "edges_min"], [198, 3, 1, "", "format_plot_xaxis"], [198, 3, 1, "", "format_plot_yaxis"], [198, 3, 1, "", "from_bounds"], [198, 3, 1, "", "from_edges"], [198, 3, 1, "", "from_energy_bounds"], [198, 3, 1, "", "from_energy_edges"], [198, 3, 1, "", "from_nodes"], [198, 3, 1, "", "from_stack"], [198, 3, 1, "", "from_table"], [198, 3, 1, "", "from_table_hdu"], [198, 3, 1, "", "group_table"], [198, 2, 1, "", "interp"], [198, 3, 1, "", "is_aligned"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "is_energy_axis"], [198, 2, 1, "", "iter_by_edges"], [198, 2, 1, "", "name"], [198, 2, 1, "", "nbin"], [198, 2, 1, "", "nbin_per_decade"], [198, 2, 1, "", "node_type"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "pix_to_coord"], [198, 3, 1, "", "pix_to_idx"], [198, 3, 1, "", "rename"], [198, 3, 1, "", "round"], [198, 3, 1, "", "slice"], [198, 3, 1, "", "squash"], [198, 3, 1, "", "to_header"], [198, 3, 1, "", "to_node_type"], [198, 3, 1, "", "to_table"], [198, 3, 1, "", "to_table_hdu"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"], [198, 2, 1, "", "use_center_as_plot_labels"], [198, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[199, 3, 1, "", "apply_mask"], [199, 2, 1, "", "axis_names"], [199, 2, 1, "", "broadcasted"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "create"], [199, 2, 1, "", "flat"], [199, 2, 1, "", "frame"], [199, 2, 1, "", "lat"], [199, 2, 1, "", "lon"], [199, 2, 1, "", "match_by_name"], [199, 2, 1, "", "ndim"], [199, 2, 1, "", "phi"], [199, 2, 1, "", "shape"], [199, 2, 1, "", "size"], [199, 2, 1, "", "skycoord"], [199, 2, 1, "", "theta"], [199, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[200, 3, 1, "", "clear"], [200, 3, 1, "", "from_geom"], [200, 3, 1, "", "from_hdulist"], [200, 2, 1, "", "geom"], [200, 3, 1, "", "get"], [200, 3, 1, "", "items"], [200, 3, 1, "", "keys"], [200, 3, 1, "", "pop"], [200, 3, 1, "", "popitem"], [200, 3, 1, "", "read"], [200, 3, 1, "", "setdefault"], [200, 3, 1, "", "to_hdulist"], [200, 3, 1, "", "update"], [200, 3, 1, "", "values"], [200, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[201, 2, 1, "", "as_energy_true"], [201, 2, 1, "", "axes"], [201, 2, 1, "", "axes_names"], [201, 3, 1, "", "bin_volume"], [201, 2, 1, "", "binsz_wcs"], [201, 2, 1, "", "center_coord"], [201, 2, 1, "", "center_pix"], [201, 2, 1, "", "center_skydir"], [201, 3, 1, "", "contains"], [201, 3, 1, "", "contains_pix"], [201, 3, 1, "", "contains_wcs_pix"], [201, 3, 1, "", "coord_to_idx"], [201, 3, 1, "", "coord_to_pix"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "create"], [201, 3, 1, "", "create_mask"], [201, 3, 1, "", "crop"], [201, 3, 1, "", "data_nbytes"], [201, 2, 1, "", "data_shape"], [201, 2, 1, "", "data_shape_axes"], [201, 3, 1, "", "downsample"], [201, 3, 1, "", "drop"], [201, 3, 1, "", "energy_mask"], [201, 2, 1, "", "frame"], [201, 3, 1, "", "from_hdulist"], [201, 3, 1, "", "from_regions"], [201, 3, 1, "", "get_coord"], [201, 3, 1, "", "get_idx"], [201, 3, 1, "", "get_wcs_coord_and_weights"], [201, 2, 1, "", "has_energy_axis"], [201, 2, 1, "", "is_all_point_sky_regions"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_allsky"], [201, 2, 1, "", "is_flat"], [201, 2, 1, "", "is_hpx"], [201, 2, 1, "", "is_image"], [201, 2, 1, "", "is_region"], [201, 2, 1, "", "is_regular"], [201, 2, 1, "", "npix"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "pix_to_coord"], [201, 3, 1, "", "pix_to_idx"], [201, 3, 1, "", "plot_region"], [201, 2, 1, "", "projection"], [201, 2, 1, "", "region"], [201, 3, 1, "", "rename_axes"], [201, 3, 1, "", "replace_axis"], [201, 3, 1, "", "resample_axis"], [201, 3, 1, "", "separation"], [201, 3, 1, "", "slice_by_idx"], [201, 3, 1, "", "solid_angle"], [201, 3, 1, "", "squash"], [201, 3, 1, "", "to_bands_hdu"], [201, 3, 1, "", "to_binsz"], [201, 3, 1, "", "to_binsz_wcs"], [201, 3, 1, "", "to_cube"], [201, 3, 1, "", "to_hdulist"], [201, 3, 1, "", "to_image"], [201, 3, 1, "", "to_wcs_geom"], [201, 3, 1, "", "union"], [201, 3, 1, "", "upsample"], [201, 2, 1, "", "wcs"], [201, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[202, 3, 1, "", "coadd"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "create"], [202, 3, 1, "", "crop"], [202, 3, 1, "", "cumsum"], [202, 3, 1, "", "cutout"], [202, 2, 1, "", "data"], [202, 3, 1, "", "dot"], [202, 3, 1, "", "downsample"], [202, 3, 1, "", "fill_by_coord"], [202, 3, 1, "", "fill_by_idx"], [202, 3, 1, "", "fill_by_pix"], [202, 3, 1, "", "fill_events"], [202, 3, 1, "", "from_geom"], [202, 3, 1, "", "from_hdulist"], [202, 3, 1, "", "from_stack"], [202, 3, 1, "", "from_table"], [202, 2, 1, "", "geom"], [202, 3, 1, "", "get_by_coord"], [202, 3, 1, "", "get_by_idx"], [202, 3, 1, "", "get_by_pix"], [202, 3, 1, "", "get_image_by_coord"], [202, 3, 1, "", "get_image_by_idx"], [202, 3, 1, "", "get_image_by_pix"], [202, 3, 1, "", "get_spectrum"], [202, 3, 1, "", "integral"], [202, 3, 1, "", "interp_by_coord"], [202, 3, 1, "", "interp_by_pix"], [202, 3, 1, "", "interp_to_geom"], [202, 3, 1, "", "is_allclose"], [202, 2, 1, "", "is_mask"], [202, 3, 1, "", "iter_by_axis"], [202, 3, 1, "", "iter_by_axis_data"], [202, 3, 1, "", "iter_by_image"], [202, 3, 1, "", "iter_by_image_data"], [202, 3, 1, "", "iter_by_image_index"], [202, 3, 1, "", "mask_nearest_position"], [202, 2, 1, "", "meta"], [202, 3, 1, "", "normalize"], [202, 3, 1, "", "pad"], [202, 3, 1, "", "plot"], [202, 3, 1, "", "plot_grid"], [202, 3, 1, "", "plot_hist"], [202, 3, 1, "", "plot_interactive"], [202, 3, 1, "", "plot_mask"], [202, 3, 1, "", "plot_region"], [202, 2, 1, "", "quantity"], [202, 3, 1, "", "read"], [202, 3, 1, "", "reduce"], [202, 3, 1, "", "reduce_over_axes"], [202, 3, 1, "", "rename_axes"], [202, 3, 1, "", "reorder_axes"], [202, 3, 1, "", "reproject_by_image"], [202, 3, 1, "", "reproject_to_geom"], [202, 3, 1, "", "resample"], [202, 3, 1, "", "resample_axis"], [202, 3, 1, "", "sample_coord"], [202, 3, 1, "", "set_by_coord"], [202, 3, 1, "", "set_by_idx"], [202, 3, 1, "", "set_by_pix"], [202, 3, 1, "", "slice_by_idx"], [202, 3, 1, "", "split_by_axis"], [202, 3, 1, "", "stack"], [202, 3, 1, "", "sum_over_axes"], [202, 2, 1, "", "tag"], [202, 3, 1, "", "to_cube"], [202, 3, 1, "", "to_hdulist"], [202, 3, 1, "", "to_region_nd_map"], [202, 3, 1, "", "to_table"], [202, 3, 1, "", "to_unit"], [202, 2, 1, "", "unit"], [202, 3, 1, "", "upsample"], [202, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[203, 2, 1, "", "as_plot_center"], [203, 2, 1, "", "as_plot_edges"], [203, 2, 1, "", "as_plot_labels"], [203, 2, 1, "", "as_plot_xerr"], [203, 3, 1, "", "assert_name"], [203, 2, 1, "", "bin_width"], [203, 2, 1, "", "bounds"], [203, 2, 1, "", "center"], [203, 3, 1, "", "coord_to_idx"], [203, 3, 1, "", "coord_to_pix"], [203, 3, 1, "", "copy"], [203, 3, 1, "", "downsample"], [203, 2, 1, "", "edges"], [203, 2, 1, "", "edges_max"], [203, 2, 1, "", "edges_min"], [203, 3, 1, "", "format_plot_xaxis"], [203, 3, 1, "", "from_gti"], [203, 3, 1, "", "from_gti_bounds"], [203, 3, 1, "", "from_table"], [203, 3, 1, "", "from_time_bounds"], [203, 3, 1, "", "from_time_edges"], [203, 3, 1, "", "group_table"], [203, 2, 1, "", "interp"], [203, 3, 1, "", "is_aligned"], [203, 3, 1, "", "is_allclose"], [203, 2, 1, "", "is_contiguous"], [203, 2, 1, "", "iter_by_edges"], [203, 2, 1, "", "name"], [203, 2, 1, "", "nbin"], [203, 2, 1, "", "node_type"], [203, 3, 1, "", "pix_to_coord"], [203, 3, 1, "", "pix_to_idx"], [203, 2, 1, "", "reference_time"], [203, 3, 1, "", "slice"], [203, 3, 1, "", "squash"], [203, 2, 1, "", "time_bounds"], [203, 2, 1, "", "time_delta"], [203, 2, 1, "", "time_edges"], [203, 2, 1, "", "time_format"], [203, 2, 1, "", "time_max"], [203, 2, 1, "", "time_mid"], [203, 2, 1, "", "time_min"], [203, 3, 1, "", "to_contiguous"], [203, 3, 1, "", "to_gti"], [203, 3, 1, "", "to_header"], [203, 3, 1, "", "to_table"], [203, 2, 1, "", "unit"], [203, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[204, 2, 1, "", "as_energy_true"], [204, 2, 1, "", "axes"], [204, 2, 1, "", "axes_names"], [204, 3, 1, "", "bin_volume"], [204, 3, 1, "", "binary_structure"], [204, 3, 1, "", "boundary_mask"], [204, 2, 1, "", "center_coord"], [204, 2, 1, "", "center_pix"], [204, 2, 1, "", "center_skydir"], [204, 3, 1, "", "contains"], [204, 3, 1, "", "contains_pix"], [204, 3, 1, "", "coord_to_idx"], [204, 3, 1, "", "coord_to_pix"], [204, 3, 1, "", "copy"], [204, 3, 1, "", "create"], [204, 3, 1, "", "create_mask"], [204, 3, 1, "", "crop"], [204, 3, 1, "", "cutout"], [204, 3, 1, "", "cutout_slices"], [204, 3, 1, "", "data_nbytes"], [204, 2, 1, "", "data_shape"], [204, 2, 1, "", "data_shape_axes"], [204, 2, 1, "", "data_shape_image"], [204, 3, 1, "", "downsample"], [204, 3, 1, "", "drop"], [204, 3, 1, "", "energy_mask"], [204, 2, 1, "", "footprint"], [204, 2, 1, "", "footprint_rectangle_sky_region"], [204, 2, 1, "", "frame"], [204, 3, 1, "", "from_aligned"], [204, 3, 1, "", "from_hdulist"], [204, 3, 1, "", "from_header"], [204, 3, 1, "", "get_coord"], [204, 3, 1, "", "get_idx"], [204, 3, 1, "", "get_pix"], [204, 2, 1, "", "has_energy_axis"], [204, 3, 1, "", "is_aligned"], [204, 3, 1, "", "is_allclose"], [204, 2, 1, "", "is_allsky"], [204, 2, 1, "", "is_flat"], [204, 2, 1, "", "is_hpx"], [204, 2, 1, "", "is_image"], [204, 2, 1, "", "is_region"], [204, 2, 1, "", "is_regular"], [204, 2, 1, "", "ndim"], [204, 2, 1, "", "npix"], [204, 3, 1, "", "pad"], [204, 3, 1, "", "pix_to_coord"], [204, 3, 1, "", "pix_to_idx"], [204, 2, 1, "", "pixel_area"], [204, 2, 1, "", "pixel_scales"], [204, 2, 1, "", "projection"], [204, 3, 1, "", "region_mask"], [204, 3, 1, "", "region_weights"], [204, 3, 1, "", "rename_axes"], [204, 3, 1, "", "replace_axis"], [204, 3, 1, "", "resample_axis"], [204, 3, 1, "", "separation"], [204, 2, 1, "", "shape_axes"], [204, 3, 1, "", "slice_by_idx"], [204, 3, 1, "", "solid_angle"], [204, 3, 1, "", "squash"], [204, 3, 1, "", "to_bands_hdu"], [204, 3, 1, "", "to_binsz"], [204, 3, 1, "", "to_cube"], [204, 3, 1, "", "to_even_npix"], [204, 3, 1, "", "to_header"], [204, 3, 1, "", "to_image"], [204, 3, 1, "", "to_odd_npix"], [204, 3, 1, "", "upsample"], [204, 2, 1, "", "wcs"], [204, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[205, 3, 1, "", "coadd"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "create"], [205, 3, 1, "", "crop"], [205, 3, 1, "", "cumsum"], [205, 2, 1, "", "data"], [205, 3, 1, "", "dot"], [205, 3, 1, "", "downsample"], [205, 3, 1, "", "fill_by_coord"], [205, 3, 1, "", "fill_by_idx"], [205, 3, 1, "", "fill_by_pix"], [205, 3, 1, "", "fill_events"], [205, 3, 1, "", "from_geom"], [205, 3, 1, "", "from_hdulist"], [205, 3, 1, "", "from_stack"], [205, 2, 1, "", "geom"], [205, 3, 1, "", "get_by_coord"], [205, 3, 1, "", "get_by_idx"], [205, 3, 1, "", "get_by_pix"], [205, 3, 1, "", "get_image_by_coord"], [205, 3, 1, "", "get_image_by_idx"], [205, 3, 1, "", "get_image_by_pix"], [205, 3, 1, "", "get_spectrum"], [205, 3, 1, "", "integral"], [205, 3, 1, "", "interp_by_coord"], [205, 3, 1, "", "interp_by_pix"], [205, 3, 1, "", "interp_to_geom"], [205, 3, 1, "", "is_allclose"], [205, 2, 1, "", "is_mask"], [205, 3, 1, "", "iter_by_axis"], [205, 3, 1, "", "iter_by_image"], [205, 3, 1, "", "iter_by_image_data"], [205, 3, 1, "", "iter_by_image_index"], [205, 3, 1, "", "mask_nearest_position"], [205, 2, 1, "", "meta"], [205, 3, 1, "", "normalize"], [205, 3, 1, "", "pad"], [205, 3, 1, "", "plot_grid"], [205, 3, 1, "", "plot_interactive"], [205, 2, 1, "", "quantity"], [205, 3, 1, "", "read"], [205, 3, 1, "", "reduce"], [205, 3, 1, "", "reduce_over_axes"], [205, 3, 1, "", "rename_axes"], [205, 3, 1, "", "reorder_axes"], [205, 3, 1, "", "reproject_by_image"], [205, 3, 1, "", "reproject_to_geom"], [205, 3, 1, "", "resample"], [205, 3, 1, "", "resample_axis"], [205, 3, 1, "", "sample_coord"], [205, 3, 1, "", "set_by_coord"], [205, 3, 1, "", "set_by_idx"], [205, 3, 1, "", "set_by_pix"], [205, 3, 1, "", "slice_by_idx"], [205, 3, 1, "", "split_by_axis"], [205, 3, 1, "", "sum_over_axes"], [205, 2, 1, "", "tag"], [205, 3, 1, "", "to_cube"], [205, 3, 1, "", "to_hdu"], [205, 3, 1, "", "to_hdulist"], [205, 3, 1, "", "to_unit"], [205, 2, 1, "", "unit"], [205, 3, 1, "", "upsample"], [205, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[206, 3, 1, "", "binary_dilate"], [206, 3, 1, "", "binary_erode"], [206, 3, 1, "", "coadd"], [206, 3, 1, "", "convolve"], [206, 3, 1, "", "copy"], [206, 3, 1, "", "create"], [206, 3, 1, "", "crop"], [206, 3, 1, "", "cumsum"], [206, 3, 1, "", "cutout"], [206, 3, 1, "", "cutout_and_mask_region"], [206, 2, 1, "", "data"], [206, 3, 1, "", "dot"], [206, 3, 1, "", "downsample"], [206, 3, 1, "", "fill_by_coord"], [206, 3, 1, "", "fill_by_idx"], [206, 3, 1, "", "fill_by_pix"], [206, 3, 1, "", "fill_events"], [206, 3, 1, "", "from_geom"], [206, 3, 1, "", "from_hdu"], [206, 3, 1, "", "from_hdulist"], [206, 3, 1, "", "from_stack"], [206, 2, 1, "", "geom"], [206, 3, 1, "", "get_by_coord"], [206, 3, 1, "", "get_by_idx"], [206, 3, 1, "", "get_by_pix"], [206, 3, 1, "", "get_image_by_coord"], [206, 3, 1, "", "get_image_by_idx"], [206, 3, 1, "", "get_image_by_pix"], [206, 3, 1, "", "get_spectrum"], [206, 3, 1, "", "integral"], [206, 3, 1, "", "interp_by_coord"], [206, 3, 1, "", "interp_by_pix"], [206, 3, 1, "", "interp_to_geom"], [206, 3, 1, "", "is_allclose"], [206, 2, 1, "", "is_mask"], [206, 3, 1, "", "iter_by_axis"], [206, 3, 1, "", "iter_by_image"], [206, 3, 1, "", "iter_by_image_data"], [206, 3, 1, "", "iter_by_image_index"], [206, 3, 1, "", "mask_contains_region"], [206, 3, 1, "", "mask_nearest_position"], [206, 2, 1, "", "meta"], [206, 3, 1, "", "normalize"], [206, 3, 1, "", "pad"], [206, 3, 1, "", "plot"], [206, 3, 1, "", "plot_grid"], [206, 3, 1, "", "plot_interactive"], [206, 3, 1, "", "plot_mask"], [206, 2, 1, "", "quantity"], [206, 3, 1, "", "read"], [206, 3, 1, "", "reduce"], [206, 3, 1, "", "reduce_over_axes"], [206, 3, 1, "", "rename_axes"], [206, 3, 1, "", "reorder_axes"], [206, 3, 1, "", "reproject_by_image"], [206, 3, 1, "", "reproject_to_geom"], [206, 3, 1, "", "resample"], [206, 3, 1, "", "resample_axis"], [206, 3, 1, "", "sample_coord"], [206, 3, 1, "", "set_by_coord"], [206, 3, 1, "", "set_by_idx"], [206, 3, 1, "", "set_by_pix"], [206, 3, 1, "", "slice_by_idx"], [206, 3, 1, "", "smooth"], [206, 3, 1, "", "split_by_axis"], [206, 3, 1, "", "stack"], [206, 3, 1, "", "sum_over_axes"], [206, 2, 1, "", "tag"], [206, 3, 1, "", "to_cube"], [206, 3, 1, "", "to_hdu"], [206, 3, 1, "", "to_hdulist"], [206, 3, 1, "", "to_region_nd_map"], [206, 3, 1, "", "to_region_nd_map_histogram"], [206, 3, 1, "", "to_unit"], [206, 2, 1, "", "unit"], [206, 3, 1, "", "upsample"], [206, 3, 1, "", "write"]], "gammapy.modeling": [[209, 1, 1, "", "Covariance"], [210, 1, 1, "", "CovarianceResult"], [211, 1, 1, "", "Fit"], [212, 1, 1, "", "FitResult"], [213, 1, 1, "", "OptimizeResult"], [214, 1, 1, "", "Parameter"], [215, 1, 1, "", "Parameters"], [216, 1, 1, "", "PriorParameter"], [217, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [287, 4, 1, "", "select_nested_models"], [288, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[209, 2, 1, "", "correlation"], [209, 2, 1, "", "data"], [209, 3, 1, "", "from_factor_matrix"], [209, 3, 1, "", "from_stack"], [209, 3, 1, "", "get_subcovariance"], [209, 3, 1, "", "plot_correlation"], [209, 2, 1, "", "scipy_mvn"], [209, 3, 1, "", "set_subcovariance"], [209, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[210, 2, 1, "", "backend"], [210, 2, 1, "", "matrix"], [210, 2, 1, "", "message"], [210, 2, 1, "", "method"], [210, 2, 1, "", "success"], [210, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[211, 3, 1, "", "confidence"], [211, 3, 1, "", "covariance"], [211, 3, 1, "", "optimize"], [211, 3, 1, "", "run"], [211, 3, 1, "", "stat_contour"], [211, 3, 1, "", "stat_profile"], [211, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[212, 2, 1, "", "backend"], [212, 2, 1, "", "covariance_result"], [212, 2, 1, "", "message"], [212, 2, 1, "", "method"], [212, 2, 1, "", "minuit"], [212, 2, 1, "", "models"], [212, 2, 1, "", "nfev"], [212, 2, 1, "", "optimize_result"], [212, 2, 1, "", "parameters"], [212, 2, 1, "", "success"], [212, 2, 1, "", "total_stat"], [212, 2, 1, "", "trace"], [212, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[213, 2, 1, "", "backend"], [213, 2, 1, "", "message"], [213, 2, 1, "", "method"], [213, 2, 1, "", "minuit"], [213, 2, 1, "", "models"], [213, 2, 1, "", "nfev"], [213, 2, 1, "", "parameters"], [213, 2, 1, "", "success"], [213, 3, 1, "", "to_dict"], [213, 2, 1, "", "total_stat"], [213, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[214, 3, 1, "", "autoscale"], [214, 3, 1, "", "check_limits"], [214, 2, 1, "", "conf_max"], [214, 2, 1, "", "conf_min"], [214, 3, 1, "", "copy"], [214, 2, 1, "", "error"], [214, 2, 1, "", "factor"], [214, 2, 1, "", "factor_max"], [214, 2, 1, "", "factor_min"], [214, 2, 1, "", "frozen"], [214, 2, 1, "", "max"], [214, 2, 1, "", "min"], [214, 2, 1, "", "name"], [214, 2, 1, "", "prior"], [214, 3, 1, "", "prior_stat_sum"], [214, 2, 1, "", "quantity"], [214, 2, 1, "", "scale"], [214, 2, 1, "", "scale_method"], [214, 2, 1, "", "scan_max"], [214, 2, 1, "", "scan_min"], [214, 2, 1, "", "scan_n_sigma"], [214, 2, 1, "", "scan_values"], [214, 3, 1, "", "to_dict"], [214, 2, 1, "", "type"], [214, 2, 1, "", "unit"], [214, 3, 1, "", "update_from_dict"], [214, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[215, 3, 1, "", "autoscale"], [215, 3, 1, "", "check_limits"], [215, 3, 1, "", "copy"], [215, 3, 1, "", "count"], [215, 2, 1, "", "free_parameters"], [215, 3, 1, "", "freeze_all"], [215, 3, 1, "", "from_dict"], [215, 3, 1, "", "from_stack"], [215, 3, 1, "", "index"], [215, 2, 1, "", "max"], [215, 2, 1, "", "min"], [215, 2, 1, "", "names"], [215, 2, 1, "", "prior"], [215, 3, 1, "", "prior_stat_sum"], [215, 3, 1, "", "restore_status"], [215, 3, 1, "", "select"], [215, 3, 1, "", "set_parameter_factors"], [215, 3, 1, "", "to_dict"], [215, 3, 1, "", "to_table"], [215, 2, 1, "", "types"], [215, 3, 1, "", "unfreeze_all"], [215, 2, 1, "", "unique_parameters"], [215, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[216, 3, 1, "", "autoscale"], [216, 3, 1, "", "check_limits"], [216, 2, 1, "", "conf_max"], [216, 2, 1, "", "conf_min"], [216, 3, 1, "", "copy"], [216, 2, 1, "", "error"], [216, 2, 1, "", "factor"], [216, 2, 1, "", "factor_max"], [216, 2, 1, "", "factor_min"], [216, 2, 1, "", "frozen"], [216, 2, 1, "", "max"], [216, 2, 1, "", "min"], [216, 2, 1, "", "name"], [216, 2, 1, "", "prior"], [216, 3, 1, "", "prior_stat_sum"], [216, 2, 1, "", "quantity"], [216, 2, 1, "", "scale"], [216, 2, 1, "", "scale_method"], [216, 2, 1, "", "scan_max"], [216, 2, 1, "", "scan_min"], [216, 2, 1, "", "scan_n_sigma"], [216, 2, 1, "", "scan_values"], [216, 3, 1, "", "to_dict"], [216, 2, 1, "", "type"], [216, 2, 1, "", "unit"], [216, 3, 1, "", "update_from_dict"], [216, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[217, 3, 1, "", "autoscale"], [217, 3, 1, "", "check_limits"], [217, 3, 1, "", "copy"], [217, 3, 1, "", "count"], [217, 2, 1, "", "free_parameters"], [217, 3, 1, "", "freeze_all"], [217, 3, 1, "", "from_dict"], [217, 3, 1, "", "from_stack"], [217, 3, 1, "", "index"], [217, 2, 1, "", "max"], [217, 2, 1, "", "min"], [217, 2, 1, "", "names"], [217, 2, 1, "", "prior"], [217, 3, 1, "", "prior_stat_sum"], [217, 3, 1, "", "restore_status"], [217, 3, 1, "", "select"], [217, 3, 1, "", "set_parameter_factors"], [217, 3, 1, "", "to_dict"], [217, 3, 1, "", "to_table"], [217, 2, 1, "", "types"], [217, 3, 1, "", "unfreeze_all"], [217, 2, 1, "", "unique_parameters"], [217, 2, 1, "", "value"]], "gammapy.modeling.models": [[218, 1, 1, "", "BrokenPowerLawSpectralModel"], [219, 1, 1, "", "CompoundSpectralModel"], [220, 1, 1, "", "ConstantFluxSpatialModel"], [221, 1, 1, "", "ConstantSpatialModel"], [222, 1, 1, "", "ConstantSpectralModel"], [223, 1, 1, "", "ConstantTemporalModel"], [224, 1, 1, "", "DatasetModels"], [225, 1, 1, "", "DiskSpatialModel"], [226, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [227, 5, 1, "", "EBL_DATA_BUILTIN"], [228, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [229, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [230, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [231, 1, 1, "", "ExpDecayTemporalModel"], [232, 1, 1, "", "FoVBackgroundModel"], [233, 1, 1, "", "GaussianPrior"], [234, 1, 1, "", "GaussianSpatialModel"], [235, 1, 1, "", "GaussianSpectralModel"], [236, 1, 1, "", "GaussianTemporalModel"], [237, 1, 1, "", "GeneralizedGaussianSpatialModel"], [238, 1, 1, "", "GeneralizedGaussianTemporalModel"], [239, 1, 1, "", "LightCurveTemplateTemporalModel"], [240, 1, 1, "", "LinearTemporalModel"], [241, 1, 1, "", "LogParabolaNormSpectralModel"], [242, 1, 1, "", "LogParabolaSpectralModel"], [243, 1, 1, "", "LogUniformPrior"], [244, 5, 1, "", "MODEL_REGISTRY"], [245, 1, 1, "", "MeyerCrabSpectralModel"], [246, 1, 1, "", "Model"], [247, 1, 1, "", "ModelBase"], [248, 1, 1, "", "Models"], [249, 1, 1, "", "NaimaSpectralModel"], [250, 1, 1, "", "PiecewiseNormSpatialModel"], [251, 1, 1, "", "PiecewiseNormSpectralModel"], [252, 1, 1, "", "PointSpatialModel"], [253, 1, 1, "", "PowerLaw2SpectralModel"], [254, 1, 1, "", "PowerLawNormSpectralModel"], [255, 1, 1, "", "PowerLawSpectralModel"], [256, 1, 1, "", "PowerLawTemporalModel"], [257, 1, 1, "", "Prior"], [258, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [259, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [260, 1, 1, "", "ScaleSpectralModel"], [261, 1, 1, "", "Shell2SpatialModel"], [262, 1, 1, "", "ShellSpatialModel"], [263, 1, 1, "", "SineTemporalModel"], [264, 1, 1, "", "SkyModel"], [265, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [266, 1, 1, "", "SpatialModel"], [267, 1, 1, "", "SpectralModel"], [268, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [269, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [270, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [271, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [272, 1, 1, "", "TemplateNDSpatialModel"], [273, 1, 1, "", "TemplateNDSpectralModel"], [274, 1, 1, "", "TemplateNPredModel"], [275, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [276, 1, 1, "", "TemplateSpatialModel"], [277, 1, 1, "", "TemplateSpectralModel"], [278, 1, 1, "", "TemporalModel"], [279, 1, 1, "", "UniformPrior"], [280, 4, 1, "", "create_cosmic_ray_spectral_model"], [281, 4, 1, "", "create_crab_spectral_model"], [282, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [283, 4, 1, "", "integrate_spectrum"], [284, 4, 1, "", "read_hermes_cube"], [285, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[218, 3, 1, "", "__call__"], [218, 2, 1, "", "amplitude"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "covariance"], [218, 2, 1, "", "default_parameters"], [218, 2, 1, "", "ebreak"], [218, 3, 1, "", "energy_flux"], [218, 3, 1, "", "energy_flux_error"], [218, 3, 1, "", "evaluate"], [218, 3, 1, "", "evaluate_error"], [218, 3, 1, "", "freeze"], [218, 3, 1, "", "from_dict"], [218, 3, 1, "", "from_parameters"], [218, 2, 1, "", "frozen"], [218, 2, 1, "", "index1"], [218, 2, 1, "", "index2"], [218, 3, 1, "", "integral"], [218, 3, 1, "", "integral_error"], [218, 3, 1, "", "inverse"], [218, 3, 1, "", "inverse_all"], [218, 2, 1, "", "is_norm_spectral_model"], [218, 2, 1, "", "parameters"], [218, 2, 1, "", "parameters_unique_names"], [218, 2, 1, "", "pivot_energy"], [218, 3, 1, "", "plot"], [218, 3, 1, "", "plot_error"], [218, 3, 1, "", "reassign"], [218, 3, 1, "", "reference_fluxes"], [218, 3, 1, "", "spectral_index"], [218, 3, 1, "", "spectral_index_error"], [218, 2, 1, "", "tag"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[219, 3, 1, "", "__call__"], [219, 3, 1, "", "copy"], [219, 2, 1, "", "covariance"], [219, 2, 1, "", "default_parameters"], [219, 3, 1, "", "energy_flux"], [219, 3, 1, "", "energy_flux_error"], [219, 3, 1, "", "evaluate"], [219, 3, 1, "", "evaluate_error"], [219, 3, 1, "", "freeze"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_parameters"], [219, 2, 1, "", "frozen"], [219, 3, 1, "", "integral"], [219, 3, 1, "", "integral_error"], [219, 3, 1, "", "inverse"], [219, 3, 1, "", "inverse_all"], [219, 2, 1, "", "is_norm_spectral_model"], [219, 2, 1, "", "parameters"], [219, 2, 1, "", "parameters_unique_names"], [219, 2, 1, "", "pivot_energy"], [219, 3, 1, "", "plot"], [219, 3, 1, "", "plot_error"], [219, 3, 1, "", "reassign"], [219, 3, 1, "", "reference_fluxes"], [219, 3, 1, "", "spectral_index"], [219, 3, 1, "", "spectral_index_error"], [219, 2, 1, "", "tag"], [219, 3, 1, "", "to_dict"], [219, 2, 1, "", "type"], [219, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[220, 3, 1, "", "__call__"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "covariance"], [220, 2, 1, "", "default_parameters"], [220, 3, 1, "", "evaluate"], [220, 3, 1, "", "evaluate_geom"], [220, 2, 1, "", "evaluation_bin_size_min"], [220, 2, 1, "", "evaluation_radius"], [220, 2, 1, "", "evaluation_region"], [220, 2, 1, "", "frame"], [220, 3, 1, "", "freeze"], [220, 3, 1, "", "from_dict"], [220, 3, 1, "", "from_parameters"], [220, 3, 1, "", "from_position"], [220, 2, 1, "", "frozen"], [220, 3, 1, "", "integrate_geom"], [220, 2, 1, "", "is_energy_dependent"], [220, 2, 1, "", "parameters"], [220, 2, 1, "", "parameters_unique_names"], [220, 2, 1, "", "phi_0"], [220, 3, 1, "", "plot"], [220, 3, 1, "", "plot_error"], [220, 3, 1, "", "plot_grid"], [220, 3, 1, "", "plot_interactive"], [220, 3, 1, "", "plot_position_error"], [220, 2, 1, "", "position"], [220, 2, 1, "", "position_error"], [220, 2, 1, "", "position_lonlat"], [220, 3, 1, "", "reassign"], [220, 2, 1, "", "tag"], [220, 3, 1, "", "to_dict"], [220, 3, 1, "", "to_region"], [220, 2, 1, "", "type"], [220, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[221, 3, 1, "", "__call__"], [221, 3, 1, "", "copy"], [221, 2, 1, "", "covariance"], [221, 2, 1, "", "default_parameters"], [221, 3, 1, "", "evaluate"], [221, 3, 1, "", "evaluate_geom"], [221, 2, 1, "", "evaluation_bin_size_min"], [221, 2, 1, "", "evaluation_radius"], [221, 2, 1, "", "evaluation_region"], [221, 2, 1, "", "frame"], [221, 3, 1, "", "freeze"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_parameters"], [221, 3, 1, "", "from_position"], [221, 2, 1, "", "frozen"], [221, 3, 1, "", "integrate_geom"], [221, 2, 1, "", "is_energy_dependent"], [221, 2, 1, "", "parameters"], [221, 2, 1, "", "parameters_unique_names"], [221, 2, 1, "", "phi_0"], [221, 3, 1, "", "plot"], [221, 3, 1, "", "plot_error"], [221, 3, 1, "", "plot_grid"], [221, 3, 1, "", "plot_interactive"], [221, 3, 1, "", "plot_position_error"], [221, 2, 1, "", "position"], [221, 2, 1, "", "position_error"], [221, 2, 1, "", "position_lonlat"], [221, 3, 1, "", "reassign"], [221, 2, 1, "", "tag"], [221, 3, 1, "", "to_dict"], [221, 3, 1, "", "to_region"], [221, 2, 1, "", "type"], [221, 3, 1, "", "unfreeze"], [221, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[222, 3, 1, "", "__call__"], [222, 2, 1, "", "const"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 3, 1, "", "energy_flux"], [222, 3, 1, "", "energy_flux_error"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_error"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 3, 1, "", "integral"], [222, 3, 1, "", "integral_error"], [222, 3, 1, "", "inverse"], [222, 3, 1, "", "inverse_all"], [222, 2, 1, "", "is_norm_spectral_model"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "parameters_unique_names"], [222, 2, 1, "", "pivot_energy"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "plot_error"], [222, 3, 1, "", "reassign"], [222, 3, 1, "", "reference_fluxes"], [222, 3, 1, "", "spectral_index"], [222, 3, 1, "", "spectral_index_error"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[223, 3, 1, "", "__call__"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "integral"], [223, 2, 1, "", "is_energy_dependent"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "reassign"], [223, 2, 1, "", "reference_time"], [223, 3, 1, "", "sample_time"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "time_sum"], [223, 3, 1, "", "to_dict"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[224, 3, 1, "", "copy"], [224, 3, 1, "", "count"], [224, 2, 1, "", "covariance"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_yaml"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "index"], [224, 2, 1, "", "names"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 3, 1, "", "plot_positions"], [224, 3, 1, "", "plot_regions"], [224, 2, 1, "", "positions"], [224, 3, 1, "", "read"], [224, 3, 1, "", "read_covariance"], [224, 3, 1, "", "reassign"], [224, 3, 1, "", "restore_status"], [224, 3, 1, "", "select"], [224, 3, 1, "", "select_from_geom"], [224, 3, 1, "", "select_mask"], [224, 3, 1, "", "select_region"], [224, 3, 1, "", "selection_mask"], [224, 3, 1, "", "set_parameters_bounds"], [224, 3, 1, "", "to_dict"], [224, 3, 1, "", "to_parameters_table"], [224, 3, 1, "", "to_regions"], [224, 3, 1, "", "to_template_sky_model"], [224, 3, 1, "", "to_template_spectral_model"], [224, 3, 1, "", "to_yaml"], [224, 3, 1, "", "unfreeze"], [224, 3, 1, "", "update_link_label"], [224, 3, 1, "", "update_parameters_from_table"], [224, 2, 1, "", "wcs_geom"], [224, 3, 1, "", "write"], [224, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 2, 1, "", "e"], [225, 2, 1, "", "edge_width"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_geom"], [225, 2, 1, "", "evaluation_bin_size_min"], [225, 2, 1, "", "evaluation_radius"], [225, 2, 1, "", "evaluation_region"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 3, 1, "", "from_position"], [225, 3, 1, "", "from_region"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integrate_geom"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "lat_0"], [225, 2, 1, "", "lon_0"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "phi"], [225, 2, 1, "", "phi_0"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "plot_grid"], [225, 3, 1, "", "plot_interactive"], [225, 3, 1, "", "plot_position_error"], [225, 2, 1, "", "position"], [225, 2, 1, "", "position_error"], [225, 2, 1, "", "position_lonlat"], [225, 2, 1, "", "r_0"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 3, 1, "", "to_region"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[226, 3, 1, "", "__call__"], [226, 2, 1, "", "alpha_norm"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "energy_flux"], [226, 3, 1, "", "energy_flux_error"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_error"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integral"], [226, 3, 1, "", "integral_error"], [226, 3, 1, "", "inverse"], [226, 3, 1, "", "inverse_all"], [226, 2, 1, "", "is_norm_spectral_model"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 2, 1, "", "pivot_energy"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "plot_error"], [226, 3, 1, "", "read"], [226, 3, 1, "", "read_builtin"], [226, 3, 1, "", "reassign"], [226, 2, 1, "", "redshift"], [226, 3, 1, "", "reference_fluxes"], [226, 3, 1, "", "spectral_index"], [226, 3, 1, "", "spectral_index_error"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[228, 3, 1, "", "__call__"], [228, 2, 1, "", "amplitude"], [228, 3, 1, "", "copy"], [228, 2, 1, "", "covariance"], [228, 2, 1, "", "default_parameters"], [228, 2, 1, "", "ecut"], [228, 3, 1, "", "energy_flux"], [228, 3, 1, "", "energy_flux_error"], [228, 3, 1, "", "evaluate"], [228, 3, 1, "", "evaluate_error"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_parameters"], [228, 2, 1, "", "frozen"], [228, 2, 1, "", "index"], [228, 3, 1, "", "integral"], [228, 3, 1, "", "integral_error"], [228, 3, 1, "", "inverse"], [228, 3, 1, "", "inverse_all"], [228, 2, 1, "", "is_norm_spectral_model"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 2, 1, "", "pivot_energy"], [228, 3, 1, "", "plot"], [228, 3, 1, "", "plot_error"], [228, 3, 1, "", "reassign"], [228, 2, 1, "", "reference"], [228, 3, 1, "", "reference_fluxes"], [228, 3, 1, "", "spectral_index"], [228, 3, 1, "", "spectral_index_error"], [228, 2, 1, "", "tag"], [228, 3, 1, "", "to_dict"], [228, 2, 1, "", "type"], [228, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[229, 3, 1, "", "__call__"], [229, 2, 1, "", "alpha"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 3, 1, "", "energy_flux"], [229, 3, 1, "", "energy_flux_error"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "evaluate_error"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 2, 1, "", "frozen"], [229, 2, 1, "", "index"], [229, 3, 1, "", "integral"], [229, 3, 1, "", "integral_error"], [229, 3, 1, "", "inverse"], [229, 3, 1, "", "inverse_all"], [229, 2, 1, "", "is_norm_spectral_model"], [229, 2, 1, "", "lambda_"], [229, 2, 1, "", "norm"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 2, 1, "", "pivot_energy"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "plot_error"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "reference"], [229, 3, 1, "", "reference_fluxes"], [229, 3, 1, "", "spectral_index"], [229, 3, 1, "", "spectral_index_error"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "to_dict"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[230, 3, 1, "", "__call__"], [230, 2, 1, "", "alpha"], [230, 2, 1, "", "amplitude"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 2, 1, "", "e_peak"], [230, 3, 1, "", "energy_flux"], [230, 3, 1, "", "energy_flux_error"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_error"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 2, 1, "", "frozen"], [230, 2, 1, "", "index"], [230, 3, 1, "", "integral"], [230, 3, 1, "", "integral_error"], [230, 3, 1, "", "inverse"], [230, 3, 1, "", "inverse_all"], [230, 2, 1, "", "is_norm_spectral_model"], [230, 2, 1, "", "lambda_"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 2, 1, "", "pivot_energy"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "reference"], [230, 3, 1, "", "reference_fluxes"], [230, 3, 1, "", "spectral_index"], [230, 3, 1, "", "spectral_index_error"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "to_dict"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[231, 3, 1, "", "__call__"], [231, 3, 1, "", "copy"], [231, 2, 1, "", "covariance"], [231, 2, 1, "", "default_parameters"], [231, 3, 1, "", "evaluate"], [231, 3, 1, "", "freeze"], [231, 3, 1, "", "from_dict"], [231, 3, 1, "", "from_parameters"], [231, 2, 1, "", "frozen"], [231, 3, 1, "", "integral"], [231, 2, 1, "", "is_energy_dependent"], [231, 2, 1, "", "parameters"], [231, 2, 1, "", "parameters_unique_names"], [231, 3, 1, "", "plot"], [231, 3, 1, "", "reassign"], [231, 2, 1, "", "reference_time"], [231, 3, 1, "", "sample_time"], [231, 2, 1, "", "t0"], [231, 2, 1, "", "t_ref"], [231, 2, 1, "", "tag"], [231, 3, 1, "", "time_sum"], [231, 3, 1, "", "to_dict"], [231, 2, 1, "", "type"], [231, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[232, 3, 1, "", "contributes"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "evaluate_geom"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 2, 1, "", "name"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 3, 1, "", "reassign"], [232, 3, 1, "", "reset_to_default"], [232, 2, 1, "", "spatial_model"], [232, 2, 1, "", "spectral_model"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianPrior": [[233, 3, 1, "", "__call__"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 2, 1, "", "mu"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "sigma"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"], [233, 2, 1, "", "weight"]], "gammapy.modeling.models.GaussianSpatialModel": [[234, 3, 1, "", "__call__"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 2, 1, "", "e"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_geom"], [234, 2, 1, "", "evaluation_bin_size_min"], [234, 2, 1, "", "evaluation_radius"], [234, 2, 1, "", "evaluation_region"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 3, 1, "", "from_position"], [234, 2, 1, "", "frozen"], [234, 3, 1, "", "integrate_geom"], [234, 2, 1, "", "is_energy_dependent"], [234, 2, 1, "", "lat_0"], [234, 2, 1, "", "lon_0"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 2, 1, "", "phi"], [234, 2, 1, "", "phi_0"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "plot_error"], [234, 3, 1, "", "plot_grid"], [234, 3, 1, "", "plot_interactive"], [234, 3, 1, "", "plot_position_error"], [234, 2, 1, "", "position"], [234, 2, 1, "", "position_error"], [234, 2, 1, "", "position_lonlat"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "sigma"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 3, 1, "", "to_region"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[235, 3, 1, "", "__call__"], [235, 2, 1, "", "amplitude"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "energy_flux"], [235, 3, 1, "", "energy_flux_error"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "evaluate_error"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integral"], [235, 3, 1, "", "integral_error"], [235, 3, 1, "", "inverse"], [235, 3, 1, "", "inverse_all"], [235, 2, 1, "", "is_norm_spectral_model"], [235, 2, 1, "", "mean"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 2, 1, "", "pivot_energy"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "plot_error"], [235, 3, 1, "", "reassign"], [235, 3, 1, "", "reference_fluxes"], [235, 2, 1, "", "sigma"], [235, 3, 1, "", "spectral_index"], [235, 3, 1, "", "spectral_index_error"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[236, 3, 1, "", "__call__"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 3, 1, "", "integral"], [236, 2, 1, "", "is_energy_dependent"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 3, 1, "", "plot"], [236, 3, 1, "", "reassign"], [236, 2, 1, "", "reference_time"], [236, 3, 1, "", "sample_time"], [236, 2, 1, "", "sigma"], [236, 2, 1, "", "t_ref"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "time_sum"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[237, 3, 1, "", "__call__"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 2, 1, "", "e"], [237, 2, 1, "", "eta"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "evaluate_geom"], [237, 2, 1, "", "evaluation_bin_size_min"], [237, 2, 1, "", "evaluation_radius"], [237, 2, 1, "", "evaluation_region"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 3, 1, "", "from_position"], [237, 2, 1, "", "frozen"], [237, 3, 1, "", "integrate_geom"], [237, 2, 1, "", "is_energy_dependent"], [237, 2, 1, "", "lat_0"], [237, 2, 1, "", "lon_0"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 2, 1, "", "phi"], [237, 2, 1, "", "phi_0"], [237, 3, 1, "", "plot"], [237, 3, 1, "", "plot_error"], [237, 3, 1, "", "plot_grid"], [237, 3, 1, "", "plot_interactive"], [237, 3, 1, "", "plot_position_error"], [237, 2, 1, "", "position"], [237, 2, 1, "", "position_error"], [237, 2, 1, "", "position_lonlat"], [237, 2, 1, "", "r_0"], [237, 3, 1, "", "reassign"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 3, 1, "", "to_region"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[238, 3, 1, "", "__call__"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 2, 1, "", "eta"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 2, 1, "", "frozen"], [238, 3, 1, "", "integral"], [238, 2, 1, "", "is_energy_dependent"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "reassign"], [238, 2, 1, "", "reference_time"], [238, 3, 1, "", "sample_time"], [238, 2, 1, "", "t_decay"], [238, 2, 1, "", "t_ref"], [238, 2, 1, "", "t_rise"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "time_sum"], [238, 3, 1, "", "to_dict"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[239, 3, 1, "", "__call__"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 3, 1, "", "from_table"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integral"], [239, 2, 1, "", "is_energy_dependent"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "read"], [239, 3, 1, "", "reassign"], [239, 2, 1, "", "reference_time"], [239, 3, 1, "", "sample_time"], [239, 2, 1, "", "t_ref"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "time_sum"], [239, 3, 1, "", "to_dict"], [239, 3, 1, "", "to_table"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"], [239, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[240, 3, 1, "", "__call__"], [240, 2, 1, "", "alpha"], [240, 2, 1, "", "beta"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integral"], [240, 2, 1, "", "is_energy_dependent"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "reference_time"], [240, 3, 1, "", "sample_time"], [240, 2, 1, "", "t_ref"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "time_sum"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[241, 3, 1, "", "__call__"], [241, 2, 1, "", "alpha"], [241, 2, 1, "", "beta"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 3, 1, "", "energy_flux"], [241, 3, 1, "", "energy_flux_error"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "evaluate_error"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_log10"], [241, 3, 1, "", "from_parameters"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integral"], [241, 3, 1, "", "integral_error"], [241, 3, 1, "", "inverse"], [241, 3, 1, "", "inverse_all"], [241, 2, 1, "", "is_norm_spectral_model"], [241, 2, 1, "", "norm"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 2, 1, "", "pivot_energy"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "plot_error"], [241, 3, 1, "", "reassign"], [241, 2, 1, "", "reference"], [241, 3, 1, "", "reference_fluxes"], [241, 3, 1, "", "spectral_index"], [241, 3, 1, "", "spectral_index_error"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "to_dict"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[242, 3, 1, "", "__call__"], [242, 2, 1, "", "alpha"], [242, 2, 1, "", "amplitude"], [242, 2, 1, "", "beta"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 2, 1, "", "e_peak"], [242, 3, 1, "", "energy_flux"], [242, 3, 1, "", "energy_flux_error"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "evaluate_error"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_log10"], [242, 3, 1, "", "from_parameters"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integral"], [242, 3, 1, "", "integral_error"], [242, 3, 1, "", "inverse"], [242, 3, 1, "", "inverse_all"], [242, 2, 1, "", "is_norm_spectral_model"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 2, 1, "", "pivot_energy"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "plot_error"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "reference"], [242, 3, 1, "", "reference_fluxes"], [242, 3, 1, "", "spectral_index"], [242, 3, 1, "", "spectral_index_error"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "to_dict"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogUniformPrior": [[243, 3, 1, "", "__call__"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 2, 1, "", "frozen"], [243, 2, 1, "", "max"], [243, 2, 1, "", "min"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 3, 1, "", "reassign"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "to_dict"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"], [243, 2, 1, "", "weight"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[245, 3, 1, "", "__call__"], [245, 2, 1, "", "coefficients"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 3, 1, "", "energy_flux"], [245, 3, 1, "", "energy_flux_error"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "evaluate_error"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integral"], [245, 3, 1, "", "integral_error"], [245, 3, 1, "", "inverse"], [245, 3, 1, "", "inverse_all"], [245, 2, 1, "", "is_norm_spectral_model"], [245, 2, 1, "", "norm"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 2, 1, "", "pivot_energy"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "reassign"], [245, 3, 1, "", "reference_fluxes"], [245, 3, 1, "", "spectral_index"], [245, 3, 1, "", "spectral_index_error"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[246, 3, 1, "", "create"], [246, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 3, 1, "", "reassign"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[248, 3, 1, "", "append"], [248, 3, 1, "", "clear"], [248, 3, 1, "", "copy"], [248, 3, 1, "", "count"], [248, 2, 1, "", "covariance"], [248, 3, 1, "", "extend"], [248, 3, 1, "", "freeze"], [248, 3, 1, "", "from_dict"], [248, 3, 1, "", "from_yaml"], [248, 2, 1, "", "frozen"], [248, 3, 1, "", "index"], [248, 3, 1, "", "insert"], [248, 2, 1, "", "names"], [248, 2, 1, "", "parameters"], [248, 2, 1, "", "parameters_unique_names"], [248, 3, 1, "", "plot_positions"], [248, 3, 1, "", "plot_regions"], [248, 3, 1, "", "pop"], [248, 2, 1, "", "positions"], [248, 3, 1, "", "read"], [248, 3, 1, "", "read_covariance"], [248, 3, 1, "", "reassign"], [248, 3, 1, "", "remove"], [248, 3, 1, "", "restore_status"], [248, 3, 1, "", "reverse"], [248, 3, 1, "", "select"], [248, 3, 1, "", "select_from_geom"], [248, 3, 1, "", "select_mask"], [248, 3, 1, "", "select_region"], [248, 3, 1, "", "selection_mask"], [248, 3, 1, "", "set_parameters_bounds"], [248, 3, 1, "", "set_prior"], [248, 3, 1, "", "to_dict"], [248, 3, 1, "", "to_parameters_table"], [248, 3, 1, "", "to_regions"], [248, 3, 1, "", "to_template_sky_model"], [248, 3, 1, "", "to_template_spectral_model"], [248, 3, 1, "", "to_yaml"], [248, 3, 1, "", "unfreeze"], [248, 3, 1, "", "update_link_label"], [248, 3, 1, "", "update_parameters_from_table"], [248, 2, 1, "", "wcs_geom"], [248, 3, 1, "", "write"], [248, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[249, 3, 1, "", "__call__"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 3, 1, "", "energy_flux"], [249, 3, 1, "", "energy_flux_error"], [249, 3, 1, "", "evaluate"], [249, 3, 1, "", "evaluate_error"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 2, 1, "", "frozen"], [249, 2, 1, "", "include_ssc"], [249, 3, 1, "", "integral"], [249, 3, 1, "", "integral_error"], [249, 3, 1, "", "inverse"], [249, 3, 1, "", "inverse_all"], [249, 2, 1, "", "is_norm_spectral_model"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "parameters_unique_names"], [249, 2, 1, "", "particle_distribution"], [249, 2, 1, "", "pivot_energy"], [249, 3, 1, "", "plot"], [249, 3, 1, "", "plot_error"], [249, 3, 1, "", "reassign"], [249, 3, 1, "", "reference_fluxes"], [249, 3, 1, "", "spectral_index"], [249, 3, 1, "", "spectral_index_error"], [249, 2, 1, "", "ssc_model"], [249, 2, 1, "", "tag"], [249, 3, 1, "", "to_dict"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[250, 3, 1, "", "__call__"], [250, 2, 1, "", "coords"], [250, 3, 1, "", "copy"], [250, 2, 1, "", "covariance"], [250, 2, 1, "", "default_parameters"], [250, 3, 1, "", "evaluate"], [250, 3, 1, "", "evaluate_geom"], [250, 2, 1, "", "evaluation_bin_size_min"], [250, 2, 1, "", "evaluation_radius"], [250, 2, 1, "", "evaluation_region"], [250, 3, 1, "", "freeze"], [250, 3, 1, "", "from_dict"], [250, 3, 1, "", "from_parameters"], [250, 3, 1, "", "from_position"], [250, 2, 1, "", "frozen"], [250, 3, 1, "", "integrate_geom"], [250, 2, 1, "", "is_energy_dependent"], [250, 2, 1, "", "norms"], [250, 2, 1, "", "parameters"], [250, 2, 1, "", "parameters_unique_names"], [250, 2, 1, "", "phi_0"], [250, 3, 1, "", "plot"], [250, 3, 1, "", "plot_error"], [250, 3, 1, "", "plot_grid"], [250, 3, 1, "", "plot_interactive"], [250, 3, 1, "", "plot_position_error"], [250, 2, 1, "", "position"], [250, 2, 1, "", "position_error"], [250, 2, 1, "", "position_lonlat"], [250, 3, 1, "", "reassign"], [250, 2, 1, "", "tag"], [250, 3, 1, "", "to_dict"], [250, 2, 1, "", "type"], [250, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[251, 3, 1, "", "__call__"], [251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 2, 1, "", "default_parameters"], [251, 2, 1, "", "energy"], [251, 3, 1, "", "energy_flux"], [251, 3, 1, "", "energy_flux_error"], [251, 3, 1, "", "evaluate"], [251, 3, 1, "", "evaluate_error"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 3, 1, "", "integral"], [251, 3, 1, "", "integral_error"], [251, 3, 1, "", "inverse"], [251, 3, 1, "", "inverse_all"], [251, 2, 1, "", "is_norm_spectral_model"], [251, 2, 1, "", "norms"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 2, 1, "", "pivot_energy"], [251, 3, 1, "", "plot"], [251, 3, 1, "", "plot_error"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "reference_fluxes"], [251, 3, 1, "", "spectral_index"], [251, 3, 1, "", "spectral_index_error"], [251, 2, 1, "", "tag"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[252, 3, 1, "", "__call__"], [252, 3, 1, "", "copy"], [252, 2, 1, "", "covariance"], [252, 2, 1, "", "default_parameters"], [252, 3, 1, "", "evaluate_geom"], [252, 2, 1, "", "evaluation_bin_size_min"], [252, 2, 1, "", "evaluation_radius"], [252, 2, 1, "", "evaluation_region"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_parameters"], [252, 3, 1, "", "from_position"], [252, 2, 1, "", "frozen"], [252, 3, 1, "", "integrate_geom"], [252, 2, 1, "", "is_energy_dependent"], [252, 2, 1, "", "lat_0"], [252, 2, 1, "", "lon_0"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 2, 1, "", "phi_0"], [252, 3, 1, "", "plot"], [252, 3, 1, "", "plot_error"], [252, 3, 1, "", "plot_grid"], [252, 3, 1, "", "plot_interactive"], [252, 3, 1, "", "plot_position_error"], [252, 2, 1, "", "position"], [252, 2, 1, "", "position_error"], [252, 2, 1, "", "position_lonlat"], [252, 3, 1, "", "reassign"], [252, 2, 1, "", "tag"], [252, 3, 1, "", "to_dict"], [252, 3, 1, "", "to_region"], [252, 2, 1, "", "type"], [252, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[253, 3, 1, "", "__call__"], [253, 2, 1, "", "amplitude"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 2, 1, "", "emax"], [253, 2, 1, "", "emin"], [253, 3, 1, "", "energy_flux"], [253, 3, 1, "", "energy_flux_error"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_error"], [253, 3, 1, "", "evaluate_integral"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 2, 1, "", "frozen"], [253, 2, 1, "", "index"], [253, 3, 1, "", "integral"], [253, 3, 1, "", "integral_error"], [253, 3, 1, "", "inverse"], [253, 3, 1, "", "inverse_all"], [253, 2, 1, "", "is_norm_spectral_model"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 2, 1, "", "pivot_energy"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "reassign"], [253, 3, 1, "", "reference_fluxes"], [253, 3, 1, "", "spectral_index"], [253, 3, 1, "", "spectral_index_error"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[254, 3, 1, "", "__call__"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "energy_flux"], [254, 3, 1, "", "energy_flux_error"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_energy_flux"], [254, 3, 1, "", "evaluate_error"], [254, 3, 1, "", "evaluate_integral"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integral"], [254, 3, 1, "", "integral_error"], [254, 3, 1, "", "inverse"], [254, 3, 1, "", "inverse_all"], [254, 2, 1, "", "is_norm_spectral_model"], [254, 2, 1, "", "norm"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 2, 1, "", "pivot_energy"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "reassign"], [254, 2, 1, "", "reference"], [254, 3, 1, "", "reference_fluxes"], [254, 3, 1, "", "spectral_index"], [254, 3, 1, "", "spectral_index_error"], [254, 2, 1, "", "tag"], [254, 2, 1, "", "tilt"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[255, 3, 1, "", "__call__"], [255, 2, 1, "", "amplitude"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 3, 1, "", "energy_flux"], [255, 3, 1, "", "energy_flux_error"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_energy_flux"], [255, 3, 1, "", "evaluate_error"], [255, 3, 1, "", "evaluate_integral"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 2, 1, "", "frozen"], [255, 2, 1, "", "index"], [255, 3, 1, "", "integral"], [255, 3, 1, "", "integral_error"], [255, 3, 1, "", "inverse"], [255, 3, 1, "", "inverse_all"], [255, 2, 1, "", "is_norm_spectral_model"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "pivot_energy"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "reassign"], [255, 2, 1, "", "reference"], [255, 3, 1, "", "reference_fluxes"], [255, 3, 1, "", "spectral_index"], [255, 3, 1, "", "spectral_index_error"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[256, 3, 1, "", "__call__"], [256, 2, 1, "", "alpha"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 3, 1, "", "evaluate"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integral"], [256, 2, 1, "", "is_energy_dependent"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "reference_time"], [256, 3, 1, "", "sample_time"], [256, 2, 1, "", "t0"], [256, 2, 1, "", "t_ref"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "time_sum"], [256, 3, 1, "", "to_dict"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[257, 3, 1, "", "__call__"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 3, 1, "", "reassign"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"], [257, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[260, 3, 1, "", "__call__"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "energy_flux"], [260, 3, 1, "", "energy_flux_error"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "evaluate_error"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 3, 1, "", "integral"], [260, 3, 1, "", "integral_error"], [260, 3, 1, "", "inverse"], [260, 3, 1, "", "inverse_all"], [260, 2, 1, "", "is_norm_spectral_model"], [260, 2, 1, "", "norm"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 2, 1, "", "pivot_energy"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "plot_error"], [260, 3, 1, "", "reassign"], [260, 3, 1, "", "reference_fluxes"], [260, 3, 1, "", "spectral_index"], [260, 3, 1, "", "spectral_index_error"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[261, 3, 1, "", "__call__"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 2, 1, "", "eta"], [261, 3, 1, "", "evaluate"], [261, 3, 1, "", "evaluate_geom"], [261, 2, 1, "", "evaluation_bin_size_min"], [261, 2, 1, "", "evaluation_radius"], [261, 2, 1, "", "evaluation_region"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 3, 1, "", "from_position"], [261, 2, 1, "", "frozen"], [261, 3, 1, "", "integrate_geom"], [261, 2, 1, "", "is_energy_dependent"], [261, 2, 1, "", "lat_0"], [261, 2, 1, "", "lon_0"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 2, 1, "", "phi_0"], [261, 3, 1, "", "plot"], [261, 3, 1, "", "plot_error"], [261, 3, 1, "", "plot_grid"], [261, 3, 1, "", "plot_interactive"], [261, 3, 1, "", "plot_position_error"], [261, 2, 1, "", "position"], [261, 2, 1, "", "position_error"], [261, 2, 1, "", "position_lonlat"], [261, 2, 1, "", "r_0"], [261, 2, 1, "", "r_in"], [261, 3, 1, "", "reassign"], [261, 2, 1, "", "tag"], [261, 3, 1, "", "to_dict"], [261, 3, 1, "", "to_region"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[262, 3, 1, "", "__call__"], [262, 3, 1, "", "copy"], [262, 2, 1, "", "covariance"], [262, 2, 1, "", "default_parameters"], [262, 3, 1, "", "evaluate"], [262, 3, 1, "", "evaluate_geom"], [262, 2, 1, "", "evaluation_bin_size_min"], [262, 2, 1, "", "evaluation_radius"], [262, 2, 1, "", "evaluation_region"], [262, 3, 1, "", "freeze"], [262, 3, 1, "", "from_dict"], [262, 3, 1, "", "from_parameters"], [262, 3, 1, "", "from_position"], [262, 2, 1, "", "frozen"], [262, 3, 1, "", "integrate_geom"], [262, 2, 1, "", "is_energy_dependent"], [262, 2, 1, "", "lat_0"], [262, 2, 1, "", "lon_0"], [262, 2, 1, "", "parameters"], [262, 2, 1, "", "parameters_unique_names"], [262, 2, 1, "", "phi_0"], [262, 3, 1, "", "plot"], [262, 3, 1, "", "plot_error"], [262, 3, 1, "", "plot_grid"], [262, 3, 1, "", "plot_interactive"], [262, 3, 1, "", "plot_position_error"], [262, 2, 1, "", "position"], [262, 2, 1, "", "position_error"], [262, 2, 1, "", "position_lonlat"], [262, 2, 1, "", "radius"], [262, 3, 1, "", "reassign"], [262, 2, 1, "", "tag"], [262, 3, 1, "", "to_dict"], [262, 3, 1, "", "to_region"], [262, 2, 1, "", "type"], [262, 3, 1, "", "unfreeze"], [262, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[263, 3, 1, "", "__call__"], [263, 2, 1, "", "amp"], [263, 3, 1, "", "copy"], [263, 2, 1, "", "covariance"], [263, 2, 1, "", "default_parameters"], [263, 3, 1, "", "evaluate"], [263, 3, 1, "", "freeze"], [263, 3, 1, "", "from_dict"], [263, 3, 1, "", "from_parameters"], [263, 2, 1, "", "frozen"], [263, 3, 1, "", "integral"], [263, 2, 1, "", "is_energy_dependent"], [263, 2, 1, "", "omega"], [263, 2, 1, "", "parameters"], [263, 2, 1, "", "parameters_unique_names"], [263, 3, 1, "", "plot"], [263, 3, 1, "", "reassign"], [263, 2, 1, "", "reference_time"], [263, 3, 1, "", "sample_time"], [263, 2, 1, "", "t_ref"], [263, 2, 1, "", "tag"], [263, 3, 1, "", "time_sum"], [263, 3, 1, "", "to_dict"], [263, 2, 1, "", "type"], [263, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "contributes"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 3, 1, "", "create"], [264, 2, 1, "", "default_parameters"], [264, 3, 1, "", "evaluate"], [264, 3, 1, "", "evaluate_geom"], [264, 2, 1, "", "evaluation_bin_size_min"], [264, 2, 1, "", "evaluation_radius"], [264, 2, 1, "", "evaluation_region"], [264, 2, 1, "", "frame"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integrate_geom"], [264, 2, 1, "", "name"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "parameters_unique_names"], [264, 2, 1, "", "position"], [264, 2, 1, "", "position_lonlat"], [264, 3, 1, "", "reassign"], [264, 2, 1, "", "spatial_model"], [264, 2, 1, "", "spectral_model"], [264, 2, 1, "", "tag"], [264, 2, 1, "", "temporal_model"], [264, 3, 1, "", "to_dict"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[265, 3, 1, "", "__call__"], [265, 2, 1, "", "amplitude"], [265, 2, 1, "", "beta"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 2, 1, "", "ebreak"], [265, 3, 1, "", "energy_flux"], [265, 3, 1, "", "energy_flux_error"], [265, 3, 1, "", "evaluate"], [265, 3, 1, "", "evaluate_error"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 2, 1, "", "frozen"], [265, 2, 1, "", "index1"], [265, 2, 1, "", "index2"], [265, 3, 1, "", "integral"], [265, 3, 1, "", "integral_error"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "inverse_all"], [265, 2, 1, "", "is_norm_spectral_model"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "pivot_energy"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "plot_error"], [265, 3, 1, "", "reassign"], [265, 2, 1, "", "reference"], [265, 3, 1, "", "reference_fluxes"], [265, 3, 1, "", "spectral_index"], [265, 3, 1, "", "spectral_index_error"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "evaluate_geom"], [266, 2, 1, "", "evaluation_bin_size_min"], [266, 2, 1, "", "evaluation_radius"], [266, 2, 1, "", "evaluation_region"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 3, 1, "", "from_position"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integrate_geom"], [266, 2, 1, "", "is_energy_dependent"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "phi_0"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_error"], [266, 3, 1, "", "plot_grid"], [266, 3, 1, "", "plot_interactive"], [266, 3, 1, "", "plot_position_error"], [266, 2, 1, "", "position"], [266, 2, 1, "", "position_error"], [266, 2, 1, "", "position_lonlat"], [266, 3, 1, "", "reassign"], [266, 3, 1, "", "to_dict"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[267, 3, 1, "", "__call__"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "energy_flux"], [267, 3, 1, "", "energy_flux_error"], [267, 3, 1, "", "evaluate_error"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integral"], [267, 3, 1, "", "integral_error"], [267, 3, 1, "", "inverse"], [267, 3, 1, "", "inverse_all"], [267, 2, 1, "", "is_norm_spectral_model"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 2, 1, "", "pivot_energy"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "plot_error"], [267, 3, 1, "", "reassign"], [267, 3, 1, "", "reference_fluxes"], [267, 3, 1, "", "spectral_index"], [267, 3, 1, "", "spectral_index_error"], [267, 3, 1, "", "to_dict"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[268, 3, 1, "", "__call__"], [268, 2, 1, "", "amplitude"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 2, 1, "", "default_parameters"], [268, 2, 1, "", "ecut"], [268, 3, 1, "", "energy_flux"], [268, 3, 1, "", "energy_flux_error"], [268, 3, 1, "", "evaluate"], [268, 3, 1, "", "evaluate_error"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 2, 1, "", "frozen"], [268, 2, 1, "", "index_1"], [268, 2, 1, "", "index_2"], [268, 3, 1, "", "integral"], [268, 3, 1, "", "integral_error"], [268, 3, 1, "", "inverse"], [268, 3, 1, "", "inverse_all"], [268, 2, 1, "", "is_norm_spectral_model"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "pivot_energy"], [268, 3, 1, "", "plot"], [268, 3, 1, "", "plot_error"], [268, 3, 1, "", "reassign"], [268, 2, 1, "", "reference"], [268, 3, 1, "", "reference_fluxes"], [268, 3, 1, "", "spectral_index"], [268, 3, 1, "", "spectral_index_error"], [268, 2, 1, "", "tag"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[269, 3, 1, "", "__call__"], [269, 2, 1, "", "amplitude"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 3, 1, "", "energy_flux"], [269, 3, 1, "", "energy_flux_error"], [269, 3, 1, "", "evaluate"], [269, 3, 1, "", "evaluate_error"], [269, 2, 1, "", "expfactor"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 2, 1, "", "frozen"], [269, 2, 1, "", "index_1"], [269, 2, 1, "", "index_2"], [269, 3, 1, "", "integral"], [269, 3, 1, "", "integral_error"], [269, 3, 1, "", "inverse"], [269, 3, 1, "", "inverse_all"], [269, 2, 1, "", "is_norm_spectral_model"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 2, 1, "", "pivot_energy"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "plot_error"], [269, 3, 1, "", "reassign"], [269, 2, 1, "", "reference"], [269, 3, 1, "", "reference_fluxes"], [269, 3, 1, "", "spectral_index"], [269, 3, 1, "", "spectral_index_error"], [269, 2, 1, "", "tag"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[270, 3, 1, "", "__call__"], [270, 2, 1, "", "amplitude"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 3, 1, "", "energy_flux"], [270, 3, 1, "", "energy_flux_error"], [270, 3, 1, "", "evaluate"], [270, 3, 1, "", "evaluate_error"], [270, 2, 1, "", "expfactor"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 2, 1, "", "frozen"], [270, 2, 1, "", "index_1"], [270, 2, 1, "", "index_2"], [270, 3, 1, "", "integral"], [270, 3, 1, "", "integral_error"], [270, 3, 1, "", "inverse"], [270, 3, 1, "", "inverse_all"], [270, 2, 1, "", "is_norm_spectral_model"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "pivot_energy"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "reassign"], [270, 2, 1, "", "reference"], [270, 3, 1, "", "reference_fluxes"], [270, 3, 1, "", "spectral_index"], [270, 3, 1, "", "spectral_index_error"], [270, 2, 1, "", "tag"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[272, 3, 1, "", "__call__"], [272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 2, 1, "", "default_parameters"], [272, 3, 1, "", "evaluate"], [272, 3, 1, "", "evaluate_geom"], [272, 2, 1, "", "evaluation_bin_size_min"], [272, 2, 1, "", "evaluation_radius"], [272, 2, 1, "", "evaluation_region"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 3, 1, "", "from_position"], [272, 2, 1, "", "frozen"], [272, 3, 1, "", "integrate_geom"], [272, 2, 1, "", "is_energy_dependent"], [272, 2, 1, "", "map"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 2, 1, "", "phi_0"], [272, 3, 1, "", "plot"], [272, 3, 1, "", "plot_error"], [272, 3, 1, "", "plot_grid"], [272, 3, 1, "", "plot_interactive"], [272, 3, 1, "", "plot_position_error"], [272, 2, 1, "", "position"], [272, 2, 1, "", "position_error"], [272, 2, 1, "", "position_lonlat"], [272, 3, 1, "", "reassign"], [272, 2, 1, "", "tag"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"], [272, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[273, 3, 1, "", "__call__"], [273, 3, 1, "", "copy"], [273, 2, 1, "", "covariance"], [273, 2, 1, "", "default_parameters"], [273, 3, 1, "", "energy_flux"], [273, 3, 1, "", "energy_flux_error"], [273, 3, 1, "", "evaluate"], [273, 3, 1, "", "evaluate_error"], [273, 3, 1, "", "freeze"], [273, 3, 1, "", "from_dict"], [273, 3, 1, "", "from_parameters"], [273, 2, 1, "", "frozen"], [273, 3, 1, "", "integral"], [273, 3, 1, "", "integral_error"], [273, 3, 1, "", "inverse"], [273, 3, 1, "", "inverse_all"], [273, 2, 1, "", "is_norm_spectral_model"], [273, 2, 1, "", "map"], [273, 2, 1, "", "parameters"], [273, 2, 1, "", "parameters_unique_names"], [273, 2, 1, "", "pivot_energy"], [273, 3, 1, "", "plot"], [273, 3, 1, "", "plot_error"], [273, 3, 1, "", "reassign"], [273, 3, 1, "", "reference_fluxes"], [273, 3, 1, "", "spectral_index"], [273, 3, 1, "", "spectral_index_error"], [273, 2, 1, "", "tag"], [273, 3, 1, "", "to_dict"], [273, 2, 1, "", "type"], [273, 3, 1, "", "unfreeze"], [273, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[274, 3, 1, "", "copy"], [274, 2, 1, "", "covariance"], [274, 3, 1, "", "cutout"], [274, 2, 1, "", "default_parameters"], [274, 2, 1, "", "energy_center"], [274, 3, 1, "", "evaluate"], [274, 2, 1, "", "evaluation_radius"], [274, 3, 1, "", "freeze"], [274, 3, 1, "", "from_dict"], [274, 3, 1, "", "from_parameters"], [274, 2, 1, "", "frozen"], [274, 2, 1, "", "map"], [274, 2, 1, "", "name"], [274, 2, 1, "", "parameters"], [274, 2, 1, "", "parameters_unique_names"], [274, 2, 1, "", "position"], [274, 3, 1, "", "reassign"], [274, 3, 1, "", "slice_by_energy"], [274, 2, 1, "", "spectral_model"], [274, 3, 1, "", "stack"], [274, 2, 1, "", "tag"], [274, 3, 1, "", "to_dict"], [274, 2, 1, "", "type"], [274, 3, 1, "", "unfreeze"], [274, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[275, 3, 1, "", "__call__"], [275, 3, 1, "", "copy"], [275, 2, 1, "", "covariance"], [275, 2, 1, "", "default_parameters"], [275, 3, 1, "", "evaluate"], [275, 2, 1, "", "f0"], [275, 2, 1, "", "f1"], [275, 2, 1, "", "f2"], [275, 3, 1, "", "freeze"], [275, 3, 1, "", "from_dict"], [275, 3, 1, "", "from_parameters"], [275, 2, 1, "", "frozen"], [275, 3, 1, "", "integral"], [275, 2, 1, "", "is_energy_dependent"], [275, 2, 1, "", "parameters"], [275, 2, 1, "", "parameters_unique_names"], [275, 2, 1, "", "phi_ref"], [275, 3, 1, "", "plot"], [275, 3, 1, "", "plot_phasogram"], [275, 3, 1, "", "read"], [275, 3, 1, "", "reassign"], [275, 2, 1, "", "reference_time"], [275, 3, 1, "", "sample_time"], [275, 2, 1, "", "t_ref"], [275, 2, 1, "", "tag"], [275, 3, 1, "", "time_sum"], [275, 3, 1, "", "to_dict"], [275, 2, 1, "", "type"], [275, 3, 1, "", "unfreeze"], [275, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[276, 3, 1, "", "__call__"], [276, 3, 1, "", "copy"], [276, 2, 1, "", "covariance"], [276, 2, 1, "", "default_parameters"], [276, 3, 1, "", "evaluate"], [276, 3, 1, "", "evaluate_geom"], [276, 2, 1, "", "evaluation_bin_size_min"], [276, 2, 1, "", "evaluation_radius"], [276, 2, 1, "", "evaluation_region"], [276, 3, 1, "", "freeze"], [276, 3, 1, "", "from_dict"], [276, 3, 1, "", "from_parameters"], [276, 3, 1, "", "from_position"], [276, 2, 1, "", "frozen"], [276, 3, 1, "", "integrate_geom"], [276, 2, 1, "", "is_energy_dependent"], [276, 2, 1, "", "lat_0"], [276, 2, 1, "", "lon_0"], [276, 2, 1, "", "map"], [276, 2, 1, "", "map_center"], [276, 2, 1, "", "parameters"], [276, 2, 1, "", "parameters_unique_names"], [276, 2, 1, "", "phi_0"], [276, 3, 1, "", "plot"], [276, 3, 1, "", "plot_error"], [276, 3, 1, "", "plot_grid"], [276, 3, 1, "", "plot_interactive"], [276, 3, 1, "", "plot_position_error"], [276, 2, 1, "", "position"], [276, 2, 1, "", "position_error"], [276, 2, 1, "", "position_lonlat"], [276, 3, 1, "", "read"], [276, 3, 1, "", "reassign"], [276, 2, 1, "", "tag"], [276, 3, 1, "", "to_dict"], [276, 3, 1, "", "to_region"], [276, 2, 1, "", "type"], [276, 3, 1, "", "unfreeze"], [276, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[277, 3, 1, "", "__call__"], [277, 3, 1, "", "copy"], [277, 2, 1, "", "covariance"], [277, 2, 1, "", "default_parameters"], [277, 3, 1, "", "energy_flux"], [277, 3, 1, "", "energy_flux_error"], [277, 3, 1, "", "evaluate"], [277, 3, 1, "", "evaluate_error"], [277, 3, 1, "", "freeze"], [277, 3, 1, "", "from_dict"], [277, 3, 1, "", "from_parameters"], [277, 3, 1, "", "from_region_map"], [277, 2, 1, "", "frozen"], [277, 3, 1, "", "integral"], [277, 3, 1, "", "integral_error"], [277, 3, 1, "", "inverse"], [277, 3, 1, "", "inverse_all"], [277, 2, 1, "", "is_norm_spectral_model"], [277, 2, 1, "", "parameters"], [277, 2, 1, "", "parameters_unique_names"], [277, 2, 1, "", "pivot_energy"], [277, 3, 1, "", "plot"], [277, 3, 1, "", "plot_error"], [277, 3, 1, "", "read_xspec_model"], [277, 3, 1, "", "reassign"], [277, 3, 1, "", "reference_fluxes"], [277, 3, 1, "", "spectral_index"], [277, 3, 1, "", "spectral_index_error"], [277, 2, 1, "", "tag"], [277, 3, 1, "", "to_dict"], [277, 2, 1, "", "type"], [277, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[278, 3, 1, "", "__call__"], [278, 3, 1, "", "copy"], [278, 2, 1, "", "covariance"], [278, 2, 1, "", "default_parameters"], [278, 3, 1, "", "freeze"], [278, 3, 1, "", "from_dict"], [278, 3, 1, "", "from_parameters"], [278, 2, 1, "", "frozen"], [278, 3, 1, "", "integral"], [278, 2, 1, "", "is_energy_dependent"], [278, 2, 1, "", "parameters"], [278, 2, 1, "", "parameters_unique_names"], [278, 3, 1, "", "plot"], [278, 3, 1, "", "reassign"], [278, 2, 1, "", "reference_time"], [278, 3, 1, "", "sample_time"], [278, 3, 1, "", "time_sum"], [278, 3, 1, "", "to_dict"], [278, 2, 1, "", "type"], [278, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.UniformPrior": [[279, 3, 1, "", "__call__"], [279, 3, 1, "", "copy"], [279, 2, 1, "", "covariance"], [279, 2, 1, "", "default_parameters"], [279, 3, 1, "", "evaluate"], [279, 3, 1, "", "freeze"], [279, 3, 1, "", "from_dict"], [279, 3, 1, "", "from_parameters"], [279, 2, 1, "", "frozen"], [279, 2, 1, "", "max"], [279, 2, 1, "", "min"], [279, 2, 1, "", "parameters"], [279, 2, 1, "", "parameters_unique_names"], [279, 3, 1, "", "reassign"], [279, 2, 1, "", "tag"], [279, 3, 1, "", "to_dict"], [279, 2, 1, "", "type"], [279, 3, 1, "", "unfreeze"], [279, 2, 1, "", "weight"]], "gammapy.modeling.models.utils": [[286, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[289, 1, 1, "", "CashCountsStatistic"], [290, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [291, 1, 1, "", "WStatCountsStatistic"], [292, 4, 1, "", "cash"], [293, 4, 1, "", "cash_sum_cython"], [294, 4, 1, "", "compute_chisq"], [295, 4, 1, "", "compute_flux_doubling"], [296, 4, 1, "", "compute_fpp"], [297, 4, 1, "", "compute_fvar"], [298, 4, 1, "", "cstat"], [299, 4, 1, "", "discrete_correlation"], [300, 4, 1, "", "f_cash_root_cython"], [301, 4, 1, "", "get_wstat_gof_terms"], [302, 4, 1, "", "get_wstat_mu_bkg"], [303, 4, 1, "", "norm_bounds_cython"], [304, 4, 1, "", "structure_function"], [305, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[289, 3, 1, "", "compute_errn"], [289, 3, 1, "", "compute_errp"], [289, 3, 1, "", "compute_upper_limit"], [289, 2, 1, "", "error"], [289, 3, 1, "", "info_dict"], [289, 2, 1, "", "n_bkg"], [289, 2, 1, "", "n_sig"], [289, 3, 1, "", "n_sig_matching_significance"], [289, 2, 1, "", "p_value"], [289, 2, 1, "", "sqrt_ts"], [289, 2, 1, "", "stat_max"], [289, 2, 1, "", "stat_null"], [289, 3, 1, "", "sum"], [289, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[291, 3, 1, "", "compute_errn"], [291, 3, 1, "", "compute_errp"], [291, 3, 1, "", "compute_upper_limit"], [291, 2, 1, "", "error"], [291, 3, 1, "", "info_dict"], [291, 2, 1, "", "n_bkg"], [291, 2, 1, "", "n_sig"], [291, 3, 1, "", "n_sig_matching_significance"], [291, 2, 1, "", "p_value"], [291, 2, 1, "", "sqrt_ts"], [291, 2, 1, "", "stat_max"], [291, 2, 1, "", "stat_null"], [291, 3, 1, "", "sum"], [291, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[306, 4, 1, "", "hierarchical_clustering"], [307, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[308, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [309, 4, 1, "", "cartesian"], [310, 4, 1, "", "fov_to_sky"], [311, 4, 1, "", "galactic"], [312, 4, 1, "", "motion_since_birth"], [313, 4, 1, "", "polar"], [314, 4, 1, "", "sky_to_fov"], [315, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[316, 1, 1, "", "HDULocation"], [317, 1, 1, "", "LazyFitsData"], [318, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[316, 3, 1, "", "get_hdu"], [316, 3, 1, "", "info"], [316, 3, 1, "", "load"], [316, 3, 1, "", "path"]], "gammapy.utils.integrate": [[319, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[320, 1, 1, "", "ScaledRegularGridInterpolator"], [321, 4, 1, "", "interpolate_profile"], [322, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[320, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[323, 5, 1, "", "BACKEND_DEFAULT"], [324, 5, 1, "", "METHOD_DEFAULT"], [325, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [326, 5, 1, "", "N_JOBS_DEFAULT"], [327, 5, 1, "", "POOL_KWARGS_DEFAULT"], [328, 1, 1, "", "multiprocessing_manager"], [329, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[330, 1, 1, "", "InverseCDFSampler"], [331, 4, 1, "", "draw"], [332, 4, 1, "", "get_random_state"], [333, 4, 1, "", "normalize"], [334, 4, 1, "", "pdf"], [335, 4, 1, "", "sample_powerlaw"], [336, 4, 1, "", "sample_sphere"], [337, 4, 1, "", "sample_sphere_distance"], [338, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[330, 3, 1, "", "sample"], [330, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[339, 4, 1, "", "compound_region_to_regions"], [340, 4, 1, "", "make_concentric_annulus_sky_regions"], [341, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [342, 4, 1, "", "region_to_frame"], [343, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[344, 4, 1, "", "from_yaml"], [345, 4, 1, "", "get_images_paths"], [346, 4, 1, "", "make_path"], [347, 4, 1, "", "read_yaml"], [348, 4, 1, "", "recursive_merge_dicts"], [349, 4, 1, "", "to_yaml"], [350, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[351, 4, 1, "", "hstack_columns"], [352, 4, 1, "", "table_row_to_dict"], [353, 4, 1, "", "table_standardise_units_copy"], [354, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[355, 1, 1, "", "Checker"], [356, 4, 1, "", "assert_quantity_allclose"], [357, 4, 1, "", "assert_skycoord_allclose"], [358, 4, 1, "", "assert_time_allclose"], [359, 4, 1, "", "mpl_plot_check"], [360, 4, 1, "", "requires_data"], [361, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[355, 3, 1, "", "run"]], "gammapy.utils.time": [[362, 4, 1, "", "absolute_time"], [363, 4, 1, "", "time_ref_from_dict"], [364, 4, 1, "", "time_ref_to_dict"], [365, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[366, 4, 1, "", "standardise_unit"], [367, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[368, 1, 1, "", "MapPanelPlotter"], [369, 4, 1, "", "add_colorbar"], [370, 4, 1, "", "annotate_heatmap"], [371, 4, 1, "", "colormap_hess"], [372, 4, 1, "", "colormap_milagro"], [373, 4, 1, "", "plot_contour_line"], [374, 4, 1, "", "plot_distribution"], [375, 4, 1, "", "plot_heatmap"], [376, 4, 1, "", "plot_map_rgb"], [377, 4, 1, "", "plot_npred_signal"], [378, 4, 1, "", "plot_spectrum_datasets_off_regions"], [379, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[368, 3, 1, "", "plot"], [368, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 101, 102, 103, 104, 105, 108, 109, 110, 124, 125, 126, 130, 133, 141, 142, 147, 148, 149, 153, 173, 179, 200, 206, 218, 222, 223, 228, 230, 231, 235, 236, 238, 239, 240, 242, 246, 248, 249, 253, 255, 256, 263, 264, 265, 268, 269, 270, 275, 278, 280, 281, 287, 297, 316, 366, 370, 371, 378, 381, 382, 384, 386, 391, 392, 393, 395, 397, 398, 399, 400, 401, 404, 407, 410, 411, 413, 414, 416, 417, 418, 419, 447, 448, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 504, 505, 511, 512, 513, 514, 517, 519, 524, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 578, 579, 580, 581, 583], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 83, 85, 87, 88, 89, 90, 91, 94, 96, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 141, 142, 147, 148, 149, 150, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 168, 170, 173, 176, 177, 181, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 216, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 285, 287, 289, 290, 291, 292, 295, 296, 297, 298, 299, 306, 307, 326, 330, 337, 338, 358, 369, 371, 372, 376, 378, 381, 382, 384, 385, 388, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 414, 417, 418, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 503, 504, 505, 506, 507, 511, 513, 517, 521, 523, 526, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 579, 580, 581, 582], "00": [67, 87, 88, 89, 91, 101, 197, 382, 396, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 468, 469, 471, 472, 474, 475, 477, 478, 481, 482, 483, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 496, 498, 500, 502, 503, 504, 505, 506, 534, 544, 564, 565, 575, 583], "000": [67, 87, 88, 91, 125, 396, 452, 454, 456, 457, 459, 460, 464, 465, 466, 468, 469, 472, 474, 475, 478, 481, 482, 483, 487, 489, 490, 495, 502, 503, 505, 534], "0000": 407, "00000": 142, "000000": 481, "000000000000002": 487, "00000000000001": 459, "00000000000003": 476, "00000000000004": 481, "0000000000016": 86, "0000000000018": 94, "000000000002": 468, "0000000000064": 468, "000000000007": 481, "00000000001": 481, "00000000e": [484, 485], "00000001": 86, "0000000e": 485, "00000143": [382, 583], "0000e": [101, 452, 453, 456, 457, 458, 459, 461, 464, 472, 474, 475, 484, 490, 492, 504, 564], "0001": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 372, 466], "00010298": 482, "00015": 483, "000150": 454, "0002": [454, 505], "00020": 454, "0002000": 454, "0003": 466, "00050": 454, "000500": 454, "0006": 454, "00074287037": [94, 469], "000742870370370241": 94, "0008": 481, "0009": 454, "000e": [452, 456, 459, 461, 464, 465, 472, 475, 481, 484, 490, 492, 504, 505, 564], "000true": 454, "001": [50, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206, 358, 468, 484, 542], "0016288e": 485, "001e": 67, "002018": 495, "0025508e": 485, "0028272e": 485, "0029": 406, "0029202684427718766": 503, "002e": [67, 457], "003": [476, 489, 495], "003026327991562108": 465, "0031052863692021915": 503, "003248": 561, "0033": 581, "00336861061002e": 478, "0036925550381217": 459, "00375698": 239, "004": 67, "00422666667": 479, "00449161": 245, "00490": 466, "00490483": 466, "0049409": 494, "005": 481, "00521472221220211": 465, "005909017160171437": 467, "006": [450, 493], "0064830e": 485, "006845": 573, "00688029": 239, "007": 481, "0076540e": 485, "008": [481, 580], "008166963876141447": 467, "008891944789387447": 467, "00894": 505, "009": [478, 481], "00931e": 451, "009433226692021113": 467, "00e": [83, 451, 457, 460, 468, 472, 475, 476, 478, 482, 485, 486, 495, 503], "01": [39, 52, 75, 83, 87, 88, 91, 94, 102, 104, 105, 109, 110, 112, 113, 124, 127, 133, 176, 177, 181, 191, 192, 197, 201, 204, 225, 231, 236, 238, 240, 256, 263, 382, 417, 450, 451, 452, 455, 456, 457, 458, 460, 461, 462, 464, 465, 468, 472, 475, 476, 477, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 495, 496, 497, 503, 504, 505, 506, 511, 516, 526, 528, 529, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 580, 583], "010": 489, "010e": 67, "011": 489, "01183": 142, "011872336272724": 503, "012": 489, "0122385e": 485, "01235137e": 485, "012733796525585": 491, "012747": 124, "0139252e": 485, "014": [85, 102, 105, 109, 110, 173, 450, 455, 457, 464, 481, 486, 503, 504, 528], "0143724": 239, "0143764": 494, "01449": 83, "0145": 488, "01450": [473, 504], "0149044e": 485, "015": 481, "015270": 564, "01551196351647377": 239, "0163": 466, "01648855015875024": 579, "01700709977114979": 479, "017442925431194484": 479, "018": 67, "018182745349064267": 465, "0183519e": 485, "019": 544, "01960784313726": 470, "019672": 483, "019899368286133": 465, "01e": [173, 417, 451, 481], "01t00": [87, 91, 94, 197, 382, 460, 468, 583], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 102, 105, 109, 110, 111, 116, 161, 168, 173, 191, 192, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 417, 450, 451, 452, 454, 456, 457, 461, 462, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 481, 484, 485, 486, 487, 488, 489, 490, 493, 495, 500, 503, 504, 505, 526, 528, 529, 536, 537, 538, 544], "020": [465, 481, 483], "020420144596410953": 491, "020939": 574, "021": [67, 481], "0225e": 481, "02288737": 239, "023": 481, "023472814714293713": 503, "024": 481, "02432": 481, "024715584699834": 503, "024e": 505, "025": [481, 495], "0251191207999763": 466, "025e": 142, "026": [53, 67, 481], "02653": [460, 466], "026891": 481, "026914": 481, "027": 67, "028": [450, 462, 463], "028854": 488, "029e": [452, 481], "02e": [83, 478], "02t23": 86, "03": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 87, 89, 91, 203, 394, 409, 450, 451, 452, 454, 461, 465, 466, 468, 475, 481, 485, 487, 489, 491, 492, 493, 497, 498, 504, 539], "03034567e": 483, "032": 481, "0322": 67, "0322775e": 485, "033": [67, 481], "033176650892097": 96, "03383": 494, "034": 580, "0344": 67, "03447394e": 483, "03493": 483, "034e": 454, "035": 483, "0354700e": 485, "0356": 451, "0356551": 451, "036": 67, "036e": 481, "037": 489, "03745318352059925": 573, "0375512e": 485, "0376213e": 485, "03893": 483, "039": [464, 465, 483], "039215686274545": 470, "03921700077803329": 465, "0395135e": 485, "03978226e": 490, "04": [30, 67, 94, 450, 455, 457, 459, 460, 462, 465, 468, 475, 476, 481, 485, 487, 490, 495], "040": 456, "040e": 460, "041": 495, "0414": 460, "0415": 505, "041882": 481, "042": 481, "0423761": 451, "042e": 481, "043": 67, "04357249662280083": 456, "04454": 495, "0454683": 494, "046": 67, "0462798e": 485, "047": 67, "0473174": 245, "0474750e": 485, "048": [464, 495], "0482342e": 485, "04897634344908595": 96, "048e": 67, "049": [454, 464], "04939e": 451, "049676": 481, "04d": 468, "04e": 486, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 87, 91, 122, 123, 125, 132, 204, 211, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 340, 409, 450, 451, 452, 453, 454, 455, 456, 460, 463, 464, 465, 466, 469, 472, 474, 480, 481, 482, 484, 485, 486, 489, 492, 494, 496, 498, 503, 504, 531, 536], "050": 489, "05019": 142, "0503641": 451, "0505949e": 485, "05075": 485, "0508075688763": 481, "05088486522436142": 456, "050e": 460, "051": [19, 20, 26, 489], "051c": [17, 21, 22, 24, 25, 27], "052": 481, "0520119e": 485, "0521419985089": 467, "05227": 481, "053": 464, "053212009682775": 491, "054833602905273e": 465, "0548e": 465, "054e": 67, "055": 481, "055e": 454, "0560": 505, "056130": 481, "05628243": 505, "05637e": 451, "05673": 505, "057": 481, "05762513693893088": 465, "058": 67, "058201": 481, "05853": 460, "058823529411775": 470, "059": 67, "05901956e": 485, "059785": 490, "0598579": 451, "05deg": 204, "06": [147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206, 450, 464, 465, 466, 471, 477, 481, 482, 484, 485, 486, 487, 493, 495, 498, 565], "061": [450, 471, 472, 505], "062": [468, 489, 490, 495], "0625": 490, "0628": 505, "063": 67, "0631757e": 485, "06334488877417636": 491, "064108e": 481, "06430": 466, "0643032": 466, "06450": 142, "065071": 481, "065119": 505, "06549": 142, "066": 456, "066442": 481, "067": 460, "068245": 481, "0689": 484, "068e": 454, "069": 67, "07": [102, 173, 356, 396, 417, 450, 454, 455, 457, 464, 466, 474, 476, 477, 478, 481, 482, 485, 487, 489, 495, 506], "07022": 142, "070483": 481, "0711412": 451, "072": 67, "073": 67, "0739282e": 485, "074": [481, 495], "07454639": 466, "07455": 466, "0746": 505, "0748": [481, 505], "075": 67, "07512322002655547": 465, "0756e": 451, "076": 505, "077": 451, "078": 454, "07843137254903": 470, "07871368968": 482, "07943648658692837": 491, "07944657408": 481, "079464e": 505, "0799109224230051": 491, "07e": 476, "08": [86, 376, 417, 450, 455, 458, 459, 461, 462, 464, 465, 472, 481, 482, 484, 486, 495, 503, 504, 545], "0800792e": 485, "08075": 485, "08081469527619482": 459, "08088": 179, "080e": 460, "0811551760882139": 491, "08142": 480, "08191603310406206": 491, "08192": 466, "08192101": 466, "082": 481, "082691868487906": 479, "08269984": 505, "0829e": 492, "082e": 125, "083": [67, 481], "08328557573258877": 491, "0833333358168602": 456, "0833333432674408": 456, "08342": 142, "08388624433428049": 491, "084": 67, "08447355125099419": 491, "0845515": 451, "085": 481, "08529426": 97, "0855013383552432": 491, "0859117235629056e": 478, "08675": 482, "086e": 481, "087": 505, "08795162606984375": 491, "087e": 481, "088": [450, 468, 471], "088742": 481, "08880368117243051": 491, "08894569035619496": 491, "089": 137, "0894640e": 485, "0897868126630783": 491, "089881": 481, "08e": [472, 489], "09": [33, 125, 173, 450, 452, 457, 460, 462, 464, 481, 482, 485, 486, 503, 504, 505, 581], "0902437e": 485, "0907128e": 485, "091": [450, 466, 471, 575], "0910": [254, 255], "0914": [52, 53], "0920e": 472, "093": [450, 455, 575], "093477": 466, "09348": 466, "09375": 478, "094": [450, 575], "09426693227142095": 491, "094834": 481, "095": [450, 575], "095232": 481, "09562941": 505, "095707": 505, "096": [450, 457, 575], "0960": 505, "09607": 505, "09610314778983592": 491, "09623312838375568": 491, "097": [450, 575], "09740295372903346": 491, "097e": 67, "09805": 142, "098903": 481, "09907043184188653": 491, "09e": 486, "0b100": 326, "0d": [127, 470, 482, 540], "0e": [404, 457, 459, 460, 461, 465, 468, 472, 475, 478, 482, 483, 485, 487, 489, 490, 495, 503, 535, 536, 537, 538, 540, 541, 542, 543, 546, 547, 549, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "0f": [484, 495, 505], "0rc": 410, "0rc1": 410, "0true": 466, "0x105fd0cf8": 381, "0x105fe3b70": 381, "0x129602550": 381, "0x7fda91bd31c0": 492, "0x7fda95e52370": 479, "0x7fda963c8700": 490, "0x7fda967aa160": 470, "0x7fda967aa5e0": 470, "0x7fda96be4760": 491, "0x7fda96be49a0": 491, "0x7fda97d7c6a0": 494, "0x7fda97d7cca0": 482, "0x7fda98e54940": 494, "0x7fda98eae0d0": 482, "0x7fda98eaebb0": 482, "0x7fdaa607ccd0": 494, "0x7fdaa6161ee0": 494, "0x7fdaa640bf40": 482, "0x7fdaa64ca5e0": 491, "0x7fdaa64cafd0": 491, "0x7fdaa8b21040": 564, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 105, 109, 110, 111, 115, 116, 117, 118, 122, 125, 126, 127, 128, 130, 131, 133, 137, 141, 142, 147, 148, 149, 150, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 168, 173, 176, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 214, 216, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 249, 251, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 275, 276, 277, 278, 279, 280, 281, 287, 289, 290, 291, 295, 296, 306, 307, 319, 320, 326, 327, 328, 337, 338, 340, 341, 366, 368, 371, 372, 376, 378, 381, 382, 384, 385, 388, 389, 391, 392, 393, 395, 396, 398, 401, 403, 404, 405, 406, 407, 408, 410, 411, 414, 417, 421, 422, 424, 425, 429, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 500, 503, 504, 505, 507, 511, 512, 513, 516, 517, 519, 521, 522, 523, 524, 525, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577, 578, 580, 581, 582], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 84, 86, 87, 88, 89, 90, 91, 102, 103, 104, 105, 108, 109, 110, 111, 116, 118, 122, 123, 124, 125, 126, 127, 131, 132, 133, 135, 141, 142, 144, 147, 148, 150, 152, 154, 155, 160, 161, 162, 163, 164, 166, 173, 179, 192, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 211, 214, 216, 225, 228, 241, 242, 245, 246, 268, 281, 290, 296, 326, 328, 338, 369, 374, 376, 378, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 403, 404, 405, 409, 411, 417, 422, 424, 435, 437, 440, 444, 446, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 503, 504, 505, 507, 513, 517, 523, 526, 528, 529, 530, 531, 541, 542, 545, 547, 550, 551, 553, 554, 555, 556, 558, 559, 561, 562, 563, 564, 567, 568, 569, 579, 580, 583], "100": [19, 20, 26, 46, 47, 74, 94, 125, 133, 152, 153, 163, 204, 206, 218, 219, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 245, 249, 251, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 273, 275, 277, 278, 281, 283, 338, 381, 382, 384, 389, 400, 420, 451, 453, 456, 459, 464, 465, 466, 468, 469, 470, 472, 476, 479, 480, 481, 482, 483, 485, 486, 487, 490, 492, 494, 495, 496, 505, 509, 511, 512, 513, 517, 528, 531, 532, 535, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 580], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 199, 381, 384, 454, 481, 482, 485, 492, 495, 505, 531], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 103, 108, 152, 163, 166, 176, 481, 495], "100000": [74, 481, 503], "1000000": [51, 52, 54, 481, 564], "10000000": 564, "100000000000": 483, "1000e": 492, "1001": [439, 468, 469], "1002": 439, "10041": 141, "10045": [65, 270, 563], "10049": 451, "1006": 439, "100e": 475, "101": [425, 464, 476, 481], "1012": 480, "1013": 440, "1014": 440, "101430": 476, "10172": 490, "102": [173, 457, 460, 580, 581], "1021": 440, "1025": 440, "1026": 440, "10262943822890519": [96, 491], "1027": 440, "102877228833871": 491, "1029": 440, "10295505": 505, "102e": 481, "103": [141, 420, 443], "103000133": 496, "1031": 440, "1032": 440, "1032531953505502": 503, "1034": 505, "1035": 440, "1035002116788955": 457, "1036": 460, "1038": 440, "104": [464, 466], "1040": 440, "10409": 466, "10409446": 466, "10416667": 478, "1043": 440, "104317": [102, 482, 489], "1044": 460, "1045": 440, "1046": 399, "10470702368766069": 491, "10477": 505, "105": [82, 497], "1051": 440, "1052": 481, "1053": 440, "1054": 440, "1054498": 137, "1057": 440, "10592": 583, "105953": 505, "105e": 460, "1061971e": 485, "106217": 83, "1062535e": 485, "1064": 481, "1065": 440, "1067": 440, "1069": 440, "106975": 503, "107": [450, 451, 487, 575], "1070": [440, 505], "1072542e": 485, "1073": 440, "10752883769757363": 491, "1076": 440, "1078": 440, "107e": [460, 481], "108": 437, "108034597491956e": 490, "108043": 464, "1082": 440, "1083": 440, "1084": 440, "1085": 440, "1085000": 464, "1086": 296, "1087": 440, "1088": 440, "1089": 440, "109": [420, 452, 472, 487], "1090": 440, "1092": [440, 460], "1093": [440, 460], "1098": 440, "1099306e": 485, "109e": 466, "10d": 470, "10e": [173, 481, 485], "10k": 194, "10th": [408, 419], "11": [67, 87, 91, 94, 125, 126, 130, 131, 214, 340, 385, 388, 390, 398, 405, 409, 420, 421, 442, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 466, 468, 469, 470, 472, 473, 474, 475, 476, 478, 481, 482, 483, 484, 486, 488, 489, 492, 493, 495, 503, 504, 505, 528, 530, 581], "110": [459, 481, 495], "1100": [440, 456], "110000": [482, 486], "1102": 440, "1102e": 453, "1103": 440, "110380": [83, 397, 461, 464, 466, 494], "1104": 440, "1105": 440, "1107": 440, "1108": 440, "111": [369, 388, 440, 450, 464, 481, 575], "1110": 440, "1111": [135, 144, 481, 505], "111140": [397, 461, 464, 466], "111159": [397, 461, 464, 466, 494], "11132": 64, "1115": 440, "111507416": 476, "111630": [89, 476, 494], "111797": 481, "11184": [65, 269, 562], "112": [451, 456], "112021": 537, "11208": 65, "11220184543": 483, "1127": 440, "112813": 560, "11291820875721864": 491, "113": 505, "1131": [389, 462], "1133": 440, "1134": 440, "1136": 440, "114416978060042": 475, "1148": 475, "115": 67, "1150": 440, "11517": 505, "11553325504064559": [96, 491], "11587179071752986": 96, "116": [420, 452, 453], "1160": 481, "11610": 505, "1162": 440, "1162290917256776e": 473, "1166": 440, "1167": [388, 395], "1169": 440, "116e": 67, "117": [420, 545], "1170": 440, "1172": 395, "1173775": 481, "1176": 440, "117877e": 481, "1179": 440, "118": [141, 464], "1183": 440, "118355": 481, "11839": 142, "119": [452, 460, 464], "1190": 440, "119432": 451, "1195": 440, "119e": 456, "11af4c": 420, "11e": 481, "12": [17, 38, 42, 67, 86, 87, 91, 102, 105, 112, 113, 125, 142, 163, 166, 192, 193, 194, 196, 202, 205, 206, 218, 222, 228, 230, 235, 242, 253, 255, 265, 268, 269, 270, 281, 385, 387, 388, 389, 390, 392, 393, 398, 401, 404, 420, 424, 425, 426, 438, 443, 450, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 472, 473, 474, 475, 478, 479, 481, 482, 483, 484, 487, 489, 490, 492, 493, 495, 503, 505, 517, 528, 531, 532, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 549, 552, 553, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574], "120": [53, 396, 458, 495, 539], "120000": 461, "120154": 481, "1204": 440, "1207": 440, "120e": [67, 505], "121": [67, 466, 489], "1210": 440, "1211": [440, 481], "121241": 464, "12148": 460, "1215": 440, "1216": 453, "12186": 505, "1219": 481, "122": [67, 141, 420, 454, 489], "1220": 440, "1226": 440, "1227": 440, "12276676166802643": 491, "122e": 465, "123": [87, 91, 393, 460], "1231": 441, "1234": 88, "123456789": [197, 382, 583], "1235": 440, "1237": 389, "1238": 440, "123890826": 86, "123892513": 86, "1239": 386, "123944": 83, "123e": 460, "124": [141, 393, 460, 481, 489], "1240": 440, "12423250e": 485, "1243": 505, "1244969200533408": 307, "1246": 440, "12493874": 485, "124e": 67, "125": [67, 125, 141, 456, 466, 487, 495, 505, 580], "12518": 465, "12525306": 479, "12546": 65, "1258925411": 483, "126": [67, 454, 481, 484], "12611": 142, "1264500e": 485, "126585": 451, "1266": 440, "1268": 440, "12688": 83, "1269263e": 485, "12697": 465, "127": 460, "12704": [141, 142], "1271v": 297, "12751": 451, "1277": 387, "1278": 388, "12794487": 490, "128": [420, 476, 507], "12809": [102, 482, 489], "1281": 440, "12816": 505, "12856": 495, "1287": 440, "1289": 440, "128e": 454, "129": [446, 504], "1290": 440, "1291": 440, "1294": 440, "1299": 481, "12nan5": 454, "12r_": 53, "12th": [406, 419], "13": [67, 101, 125, 142, 203, 306, 385, 386, 390, 395, 400, 409, 425, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 503, 504, 505, 513, 581], "130": 528, "1300": 440, "1301v": 38, "13030": 505, "1305": 440, "13061": 490, "131": 454, "1310": 505, "1312": 440, "13133": 505, "13152": 466, "1316": 440, "1317": 441, "1318": 440, "1319": [94, 440], "13197": 464, "132": 460, "13226": 505, "1323e": 465, "132472": 466, "132e": 456, "133": 142, "1331": 441, "1334": 441, "1337": 441, "1339": 441, "133e": 454, "134": [142, 457, 460, 466], "1341": 441, "1342a": 153, "1343": 441, "1344": 481, "1345": 441, "1346": 441, "1347": 441, "13499879586502125": 467, "135": [38, 101, 142, 454, 470, 481, 484], "13500212963": 481, "1351e": 481, "1354": 441, "135498046875": 456, "1357": 441, "1359316": 505, "135e": 125, "136": 481, "1360": 441, "1361": 481, "1362": 441, "1367": 441, "1369": [389, 441], "137": [142, 460, 467], "1372": 441, "137254901960785": 470, "1373": 441, "1374": 441, "137521287529426e": 503, "1376": 441, "1376407570489014e": 473, "1377": 441, "1378": 441, "1379190199428797": 307, "137990": 481, "138": [420, 454, 468, 505], "1381": 441, "1386": 441, "1387": 441, "138e": 466, "139": [456, 460, 495], "13911": 505, "1393881668086242e": 478, "1394": 551, "13944023e": 483, "1395": 441, "1396": [381, 457], "13960": 505, "1397": 441, "1397412321592923": 491, "13e": 482, "13nan6": 454, "13th": 419, "14": [28, 65, 67, 86, 270, 382, 385, 390, 393, 398, 400, 401, 439, 450, 451, 454, 456, 457, 460, 464, 476, 478, 481, 482, 483, 484, 486, 488, 489, 490, 493, 503, 504, 505, 506, 563, 580], "140": [450, 496, 544], "1401": 441, "1406": 441, "14079": 141, "1408": [441, 505], "141": [305, 466, 481], "1411180": 464, "1412": 441, "14121": 466, "1412536400000000": 505, "14149953611195087": [96, 491], "14150": 466, "1419": [389, 442], "141945": 451, "142": [67, 420, 454, 481, 505], "14201": 141, "1421": 441, "14210": 454, "1426": 441, "142e": 481, "1432": 441, "1433": 441, "1435": 441, "1438": 176, "1438465e": 485, "1439110308062257": 491, "144": [454, 489, 505], "14419991": 97, "1442739329466746e": 490, "1443": 441, "1444": 441, "1445": 395, "14457": 505, "1446": 441, "1447": 441, "145": 481, "1451": 396, "14531053887243": 466, "1456": 441, "1456479e": 485, "146": 505, "14610": 583, "146472": 481, "1467": [135, 144], "147": [439, 481, 487], "1470": [441, 505], "1473": 475, "1474": 441, "1475": 441, "1476": 441, "14773": 495, "147e": 481, "148": 460, "1482": 481, "1485314": 97, "1486415e": 485, "1489": [441, 466], "149": [456, 486, 489], "1492": 441, "1494": 466, "149445429667434": 467, "1495": 441, "1499472780781963": 307, "149e": 481, "14e": [461, 480], "14msts37sst": [468, 469, 494], "14nan3": 454, "14nan5": 454, "14th": [405, 408, 419], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 150, 151, 152, 153, 154, 155, 160, 161, 162, 164, 203, 371, 372, 376, 390, 398, 420, 424, 429, 434, 437, 438, 439, 441, 451, 456, 459, 460, 462, 464, 465, 466, 468, 469, 470, 472, 476, 478, 479, 481, 482, 483, 484, 486, 487, 489, 490, 495, 505, 528, 536], "150": [131, 141, 142, 420, 454, 456, 468, 469, 487, 505], "1505": 441, "15076259": 97, "151": [420, 489], "1510": 137, "1510240e": 485, "15140": 460, "1515": 441, "15154854": 97, "1517": 441, "152": [460, 466], "1521": 466, "1523": 468, "15246": 468, "152477": 495, "1527": 441, "153": 481, "1530": 482, "15319": 468, "153600": 482, "154": [420, 451, 481], "1543": 441, "154e": 466, "155": 420, "15518": 505, "1552": 462, "1553": [481, 505], "1554": 441, "1554106e": 485, "1556": [441, 481, 505], "1556008e": 485, "1558": 441, "156": [420, 456, 457, 460, 466, 483, 489], "1562": 441, "15621": 505, "1564": 441, "156525": 481, "1567629e": 485, "1568": 441, "15686274509804": 470, "157": [420, 505], "1573": 441, "1576": 441, "158": [142, 451, 457, 464], "1582": 441, "15848931924": 483, "1586": 94, "15899": 460, "1594": 441, "1597317": 97, "15990": 142, "159t": 52, "15e": 462, "15h14m00": 481, "15nan8": 454, "16": [16, 24, 53, 67, 94, 104, 109, 110, 192, 385, 389, 398, 401, 402, 425, 440, 445, 447, 448, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 503, 504, 505, 530, 572, 580, 581], "160": [31, 125, 420, 429, 470, 489], "1600": 469, "1600e": 452, "1605": 441, "16056": 460, "1606": 441, "1607": 480, "160e": 67, "161": [141, 389, 456, 466, 481], "1610e": [452, 481], "161250": 472, "1613279491744304": 491, "1616": 441, "1616e": 475, "1618850e": 485, "1619e": 101, "162": 67, "16227766": 487, "1622776601683795": [486, 487, 503], "16240": 504, "1626e": 461, "16287": 505, "1629219e": 485, "163": [470, 580], "1630": [441, 505], "16303": 466, "16303044": 466, "1634": 441, "164": 481, "1642": 451, "165": 489, "1650": 505, "16506": 451, "16511": 466, "16511148": 466, "1658": 441, "165e": [460, 475], "166": [420, 466, 481], "1660": 441, "166015625": 453, "166080": 538, "1661916367760008e": 478, "1665478": 97, "166871893629602e": 478, "167": [420, 466, 472], "167219": 481, "1675": 441, "168": [475, 481, 482, 505], "1681": 441, "1685": 441, "1686": 481, "1687": 86, "168702": 451, "169": 466, "1691": 451, "1695": 441, "1696": 441, "1697": 441, "1698": 456, "169871": 472, "169913": 472, "16th": 419, "17": [20, 21, 40, 67, 86, 104, 124, 392, 395, 398, 429, 446, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 536, 581], "170": 453, "17016482e": 484, "1702": 441, "17020": 460, "1710": 442, "1711": 441, "1713": 453, "1715": 395, "1717": 505, "171749": 505, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 280, "172": 470, "17229679": 97, "173": 481, "1731": [441, 489], "1732": 481, "17320": 481, "1736": 460, "1737799900000000": 505, "174": 456, "1742": 67, "17445": 505, "1746": [441, 505], "1748": [441, 489], "175": [450, 544], "1750": 441, "1751": 441, "17511": 142, "1753": 505, "1755": 441, "1756": 457, "1759": 441, "175e": 481, "176": [142, 420, 476, 481], "1760": 441, "1761": 441, "1762": 507, "1763": [442, 481], "1764": [441, 466], "176470588235294": 470, "1766": 442, "1768896e": 485, "177": [420, 495, 496], "17776": 451, "1778279410": 483, "177e": [475, 481], "178": [440, 450, 544, 575], "178442": 67, "1785": [441, 451, 475], "1791": 441, "179475": 245, "1799": 441, "17a": [60, 481], "17e": 489, "17g": 50, "17th": 435, "18": [11, 87, 91, 141, 203, 385, 400, 406, 426, 432, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 535, 539, 542], "180": [395, 413, 415, 420, 481, 487], "1800": [441, 469, 487, 494], "180000": [468, 469, 494], "1804": 481, "180458": 464, "18046952655570045": 307, "1805": 395, "1807": 442, "1808": [441, 481, 505], "181": [450, 455, 456, 460], "1811": 459, "1812": 441, "1813": 481, "1818": 441, "1821": 441, "1822": 441, "1825": 481, "18257": 460, "182592": 503, "183": 456, "1830e": 456, "183139597": 86, "1834": 453, "1835": 94, "1836": 442, "1836544903987521": 491, "1837": 442, "18385658": 466, "18386": 466, "18392464": 519, "184": [86, 94, 434, 438, 460, 464, 468, 474, 478, 488, 489], "18400002": 474, "1841": 390, "1845": 442, "1846": 442, "18465": 505, "1849": 442, "184989894219835": 479, "185": 488, "1854": [442, 481], "1855": 442, "1857": 442, "1859": 442, "186": [433, 466, 481], "1861": 442, "1862": 442, "186484131475074": 338, "1866": 486, "186643": 505, "187": [426, 433, 466, 475], "1871": 442, "1877": 391, "188": [433, 450, 451, 481, 482, 493], "1883": 442, "1884": 442, "18842984749525210": 466, "1888": 442, "1888e": 475, "188e": 454, "189": [456, 485], "1890": 442, "1891": 442, "18921591": 485, "1893": 442, "1893e": [452, 481], "1894": 442, "1895": 442, "1896e": 452, "1898": 442, "18988": 505, "1899070e": 485, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 203, 385, 397, 399, 401, 420, 428, 429, 431, 443, 450, 457, 460, 467, 470, 471, 475, 476, 477, 478, 479, 481, 482, 487, 489, 538, 540, 543], "190": [450, 481, 565], "1902": [65, 270, 475, 563], "1903": 442, "1904": 442, "1905": 465, "1908": [442, 475], "1909": 442, "190e": 456, "191": [141, 433], "1910": 179, "1912": 442, "1917": 505, "1918": 442, "1919": 442, "192": 142, "1920": 505, "1921": 442, "19214093": 97, "1922": 442, "1926": 442, "1926520e": 485, "1927": 442, "1928": 481, "1929": 442, "193": 460, "1930": 442, "1933": 442, "1934": 442, "19354": 466, "1936925": 97, "1937": [442, 481], "193e": 457, "194": [433, 460], "1943186": 97, "1947565": 97, "1949": 442, "195": [142, 239, 450, 456, 544], "1950rspsa": 52, "1951": 421, "1953830": 97, "1955810e": 485, "1958e": 484, "196": [67, 451, 472, 489], "1960784313725492": 470, "1961": [135, 144], "1962": 421, "1963": 481, "19644": 495, "1965tralm": 21, "1966": 421, "1969": 421, "196991563774588": 281, "197": [67, 466, 495], "1971": 392, "19736017641361556": 467, "1975": 421, "1976572e": 485, "1978": 481, "1979": [292, 298, 421, 578], "1979892": 466, "1980": 481, "1982": 37, "1983": 578, "1986": 393, "1986027": 505, "1987": 466, "19879005": 176, "1988": [136, 299, 421], "1988apj": [136, 299], "1989": 421, "199": [466, 489], "1990": [37, 421], "1990apj": [36, 37], "1991": 421, "1991mnra": 22, "19932878": 485, "1994": [421, 578], "1994a": [52, 53], "1995": [420, 421], "1995a": 290, "1995apj": 17, "1996": [27, 460, 479, 578], "1996mnra": 27, "1997": 503, "1997apj": 25, "1998": [87, 91, 421, 578], "1998apj": 28, "1999": [53, 197, 382, 583], "19991": 503, "199999809265137": 481, "19999999999999998": 459, "1999apj": 53, "19e": 486, "19th": 419, "1_jie5ec": 478, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 109, 110, 127, 151, 152, 161, 175, 192, 194, 333, 374, 387, 391, 392, 394, 395, 396, 397, 400, 401, 402, 413, 423, 425, 426, 427, 428, 432, 434, 437, 441, 443, 444, 447, 450, 451, 453, 454, 455, 456, 458, 460, 464, 471, 475, 478, 482, 484, 486, 488, 490, 491, 492, 494, 495, 503, 515, 517, 519, 532, 578], "1dc": [82, 83, 89, 102, 105, 109, 110, 115, 117, 118, 122, 141, 142, 148, 152, 153, 154, 163, 369, 374, 376, 389, 391, 397, 401, 422, 451, 459, 461, 464, 466, 472, 475, 476, 482, 483, 485, 489, 517], "1deg": 204, "1e": [19, 20, 26, 86, 100, 130, 131, 133, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 246, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 281, 292, 298, 340, 356, 358, 381, 392, 452, 454, 456, 458, 460, 462, 464, 466, 468, 469, 472, 473, 474, 475, 476, 481, 484, 490, 492, 495, 496, 513, 517, 521, 545, 546, 547, 549, 552, 553, 557, 558, 560, 561, 562, 563], "1e0": 511, "1e10": [51, 153], "1e12": [511, 521], "1e2": [454, 511, 513], "1e3": [495, 521], "1e30": 555, "1e4": [484, 495, 496], "1e40": 512, "1e5": [458, 495, 513, 531, 532], "1e51": 52, "1e6": [45, 495, 509, 564], "1e7": [127, 564], "1f": 457, "1fhl": [426, 439], "1fhl_name": 71, "1h": 163, "1k": [102, 109], "1kpc": 513, "1lhaaso": [57, 70, 447, 481], "1lhaaso_catalog": 57, "1rc1": 410, "1tev": [52, 53, 131, 469], "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 101, 102, 104, 105, 109, 110, 114, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 140, 142, 145, 146, 150, 151, 152, 153, 155, 161, 163, 166, 173, 176, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 206, 211, 214, 215, 217, 218, 222, 226, 228, 230, 235, 237, 238, 242, 243, 246, 253, 254, 255, 261, 262, 264, 265, 268, 269, 270, 275, 280, 281, 287, 289, 290, 291, 292, 297, 298, 304, 306, 326, 328, 366, 369, 374, 376, 378, 381, 382, 385, 386, 390, 392, 393, 395, 396, 397, 398, 401, 404, 405, 406, 407, 408, 410, 417, 418, 420, 421, 422, 423, 424, 425, 432, 437, 438, 439, 440, 441, 442, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 503, 504, 505, 513, 516, 517, 519, 524, 525, 526, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 578, 579, 580, 581, 582], "20": [16, 38, 83, 87, 89, 91, 102, 105, 109, 110, 154, 155, 160, 162, 164, 173, 193, 194, 196, 202, 205, 206, 211, 290, 306, 382, 385, 386, 387, 389, 394, 396, 399, 401, 406, 443, 450, 451, 452, 456, 457, 458, 460, 461, 462, 463, 464, 466, 467, 468, 471, 473, 474, 475, 476, 478, 479, 480, 481, 484, 486, 487, 489, 490, 492, 494, 497, 503, 504, 505, 507, 526, 528, 529, 530, 536, 537, 538, 541, 542, 551, 554, 559, 564, 565, 580], "200": [52, 87, 91, 133, 204, 405, 433, 450, 456, 457, 460, 466, 470, 472, 481, 487, 490, 505, 544, 580], "2000": [88, 102, 105, 109, 110, 127, 231, 236, 238, 240, 256, 263, 421, 468, 469, 470, 486, 495, 505, 578], "2000000": 464, "20000000000000004": 459, "20009124": 485, "2000apj": 281, "2000e": 490, "2001": [94, 421, 460, 578], "20016447648031e": 478, "2002": [87, 91, 296, 479], "2003": [297, 479], "2003mnra": 297, "2004": [86, 94, 479, 497], "2004a": [39, 40], "2004aph": [83, 88], "2004mnra": 24, "2005": [65, 578], "200503": 451, "2005a": 481, "2006": [31, 33, 396, 460, 467, 474, 478], "200638": 505, "2006a": 281, "2006apj": [30, 31, 32, 33], "2006ara": 50, "2006mnra": [35, 118], "2007": [399, 578], "20072608": 485, "2008": [38, 86, 226, 277, 452, 495, 507, 545], "2008aj": 38, "2009": [133, 300, 422, 460, 578], "20097159": 485, "2009851": 485, "20099855": 485, "201": [52, 475, 487], "2010": [127, 153, 226, 245, 304, 382, 448, 545, 578, 583], "2010a": [245, 281], "2010mnra": 153, "2011": [226, 452, 507, 545], "2011jcap": [17, 19, 20, 21, 22, 24, 25, 26, 27], "2012": [91, 422, 578], "2013": [101, 137, 401, 407, 411, 420, 479], "20136": [82, 307, 497], "20137": [307, 497], "2013aph": 280, "2013apj": 60, "2014": [135, 144, 419, 507], "2015": [52, 86, 395, 398, 419, 495], "20151": 307, "2015apj": 61, "2015jheap": 281, "2016": [26, 395, 398, 419, 422, 479, 486, 494], "2016apj": 58, "2017": [226, 386, 388, 398, 401, 417, 419, 422, 466, 494, 545], "2017apj": [59, 62], "2017icrc": 494, "2018": [52, 386, 387, 388, 389, 390, 391, 392, 396, 398, 400, 401, 419, 446, 494, 497, 578], "2019": [388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 419, 441, 442, 467, 578], "202": 466, "2020": [203, 390, 401, 402, 403, 404, 405, 419, 467, 468, 475, 487, 567, 568, 569], "2021": [89, 226, 403, 405, 419, 446, 490, 494, 545], "2021345e": 485, "2022": [406, 407, 419, 422, 496], "2023": [393, 408, 409, 419, 422], "2023arxiv230517030c": 57, "2024": [419, 494], "2024e": 504, "2025": [104, 124, 418, 457, 461, 462, 464, 490, 503, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "2026": [393, 422], "2028": 422, "2030": [393, 422], "2031": 422, "20326": [306, 453], "20327": [306, 453], "2033": 422, "20339": 306, "2034": 422, "20343": 306, "20344": 306, "20345": 306, "20346": 306, "20349": 453, "2035": [123, 125, 422], "20350": 453, "2036": [123, 125], "2037": 422, "20372": 494, "2038": 422, "2039": 422, "20396": 453, "20397": 453, "204": [141, 450, 470, 471], "2040469e": 485, "2041222e": 485, "20421": 453, "20422": 453, "2045": 393, "2046": 422, "2049": [422, 481, 505], "205": [433, 466, 487], "2050": 422, "20508075688775": 481, "2051": 422, "20517": 453, "20518": 453, "20519": 453, "205192": 481, "20521": 453, "2053315944536949e": 494, "205357": 481, "2054": 422, "20559": 505, "2058705e": 485, "206": [450, 481, 565], "2061": 481, "2062580e": 485, "2064": 422, "2064335": 97, "2065": 422, "2066": 422, "2068682e": 485, "2069": 422, "207": [450, 462, 466, 470, 489, 493, 565], "2071": [393, 422], "2075": 409, "207520865": 474, "207521165": 478, "207521465": 474, "207521627": 478, "2076": 422, "2077": 422, "2079930e": 485, "207e": 460, "208": [60, 462], "2085": 422, "2089": [395, 424], "20898": 453, "20899": 453, "209": [450, 466, 565], "20900": 453, "2093": 422, "2095": 466, "2097": 422, "2097e": 456, "2098": 422, "209882": 503, "20deg": [468, 469], "20e": 485, "20th": 407, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 127, 148, 384, 385, 429, 435, 444, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 532, 547, 564, 580], "210": [433, 481], "2103": 481, "2104": 423, "2104353e": 485, "2106": 423, "2108": 423, "211": [481, 482], "2111": 423, "2112": [423, 504], "21134890398": 483, "2114": 423, "2115": 423, "211770556360534": 476, "2118": 423, "2119": 423, "211e": 481, "212": [67, 433, 448, 456, 481], "2121": 423, "2121164e": 485, "2123": 423, "21236e": 451, "2124": 423, "2126": [423, 451, 459, 461, 464, 466, 472, 475, 494], "2128": 423, "212858": 567, "2129": [395, 424], "213": 458, "2130": 423, "2131": [423, 481], "2132": 423, "21325": 495, "2133": 423, "2136": [394, 425], "2139": 423, "214": [454, 460], "2140": 423, "2141": 423, "2142": 423, "2145": 423, "2146": 423, "21464892": 505, "214e": 456, "215": [67, 433, 447, 481], "21500000000003": 539, "2151": 423, "2152": 423, "21525804550772332": 467, "2153": [423, 481], "2154": [423, 481], "2155": [427, 452, 474, 475, 478, 479, 481, 491, 505, 545], "215686274509824": 470, "2157": 423, "2159e": 101, "215e": [475, 481], "216": [239, 450, 456, 475, 487, 489, 544, 574], "2160": 423, "2162670e": 485, "2163": 423, "2164425e": 485, "2166": 423, "2169": 423, "217": [456, 481], "2170e": 492, "2171": 423, "21731921e": 487, "21733761e": 487, "21735587e": 487, "218": 61, "218501": 542, "219": [450, 565], "2190": 399, "2192": 424, "2197": 466, "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 102, 105, 109, 110, 133, 168, 173, 176, 191, 192, 201, 204, 385, 419, 432, 456, 457, 458, 459, 460, 465, 473, 475, 478, 481, 482, 486, 487, 488, 496, 497, 498, 503, 504, 505, 516, 523, 526, 528, 529, 532, 551, 560, 562], "220": [450, 481, 489, 565, 580, 581], "2200": 424, "2201": [65, 269, 481, 505, 562], "2202e": 505, "2204": 424, "2206": 424, "220e": 481, "221": [395, 433], "22149": 460, "2217": 424, "2217412e": 485, "2218": [398, 425], "2219": [397, 425], "222": [58, 450, 481, 489, 544], "2221": 481, "22245374e": 125, "2227134679628": 475, "22271346796282": 475, "222713467962826": 475, "2229": [394, 424], "223": 489, "2230": 424, "2231": 481, "223199": 462, "2235": 424, "2237": [424, 505], "2238": 424, "2239": 424, "2240": 424, "2243": 424, "2244": 424, "224436": 505, "225": [96, 306, 307, 405, 433, 481], "2250": 424, "22500": 462, "2254": 424, "2255": [399, 491], "225575051666": 481, "2255890": [474, 478, 491], "2257": 424, "2259": 424, "226": [450, 466, 495, 565], "22608": 482, "2262": 424, "22635140877790516": 484, "2264": [393, 424], "22646133647326874": 484, "2264827111476982": 484, "22648881839710966": 484, "2265163003209506": 484, "22662622801631419": 484, "2270": 398, "2272": 424, "2274": [400, 425, 451], "2276": 424, "2277": 424, "2278": 424, "2278975306934438": 484, "2279": [398, 425], "227e": 481, "228": [292, 298, 389, 395, 457, 462, 481, 486, 497], "2287": 424, "2289": 424, "229": [67, 450, 481, 565], "2290": 400, "2292": 425, "2294": 424, "2296": 424, "2297": 424, "22974080e": 495, "2298": 424, "22e": 486, "22nd": 419, "23": [77, 94, 176, 381, 385, 407, 419, 443, 450, 453, 456, 458, 460, 465, 475, 478, 481, 484, 487, 489, 491, 492, 493, 505, 528, 553, 557, 563], "230": [433, 460], "2300": 424, "2304": 399, "2305": 424, "230542e": 481, "2307": [64, 65], "2308": 425, "231": 433, "2310": 424, "2313": 425, "2314": 425, "232": 62, "2320": [425, 481, 482], "2321": 425, "2323": 425, "2326": 425, "2327": [481, 489], "23273": 495, "233": 457, "2330": 425, "23306": 460, "2332": 489, "2334": 425, "2335": 425, "2338": 425, "2339": [453, 481, 505], "234": [433, 476], "234132519034915": 487, "23413252": 487, "2342": 425, "2343": 425, "234359264373779": 486, "2343e": 489, "2344": 425, "2345": 425, "2346": 425, "2347": 425, "235": 433, "2350": 426, "2351": 425, "23523": [146, 173, 211, 417, 456, 457, 465, 473, 482, 484, 486, 497, 503, 504, 516, 519, 579], "23526": [146, 211, 456, 457, 465, 473, 482, 484, 486, 497, 503, 504, 579], "235294117647083": 470, "2354": 425, "23559": [456, 457, 473, 482, 486, 503, 504, 526, 528, 529, 579], "2356": 425, "2357": 489, "2358": 425, "2359": 425, "23592": [456, 457, 473, 482, 486, 503, 504, 526, 528, 529, 579], "236": [433, 481], "2360": 425, "2362506e": 485, "23628": 495, "2365": 425, "2366": 425, "2367": 425, "2368": 425, "237": 451, "23734": 505, "2375": 425, "2377": 425, "2378": 425, "2379": 425, "238": 464, "2381": 425, "238298": 451, "2384": 451, "2385": 425, "239": [67, 450, 466, 565], "23905561": 485, "239439": 505, "239557417": 86, "2399": 481, "239e": 481, "23a": 61, "24": [25, 27, 52, 53, 86, 87, 91, 94, 104, 124, 384, 385, 398, 402, 436, 441, 451, 457, 460, 475, 478, 481, 482, 487, 489, 494, 495, 503, 506, 528, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "240": [102, 105, 109, 110, 122, 481, 482, 483, 517], "2400": 425, "2401": 425, "2404": 425, "2405": 426, "240e": 456, "241": 481, "2412": 425, "2414": 481, "2419": 451, "2428255": 483, "242835": 67, "243": [456, 483], "2431": 481, "2432": 460, "2433": 426, "2435": 426, "243742672227972e": 478, "244": [67, 433, 456], "2440": 481, "2441": 426, "244140625": 489, "2443672e": 485, "2444": 426, "2446": [426, 489], "2448": 426, "2449": 426, "245": 433, "2450": [426, 489], "245152": 466, "2454": 426, "2455": 426, "24579": 483, "2459": 426, "246": [433, 483], "2461": 426, "24611324074": 481, "2463": [401, 426], "2464": 426, "2465055e": 485, "2468": 426, "24685677e": 485, "246945": 490, "247": [67, 433], "2470": 426, "2471938975366008": 306, "2472": 426, "2475": 426, "2476": 426, "2477": 426, "2478": 426, "2479": [426, 504], "248": 433, "2481": 426, "248122": 481, "2483": 426, "2485": 503, "2486": 426, "249": [22, 433, 450, 565], "2490": 426, "2491": 426, "2492": 426, "2493": 426, "2496": 426, "24968": 451, "2497": 426, "2498": 426, "2499": 426, "249965667724609": 486, "249e": 142, "24e": [481, 489], "25": [33, 52, 87, 91, 101, 141, 142, 152, 163, 176, 292, 298, 385, 398, 405, 419, 440, 447, 448, 451, 452, 456, 457, 460, 466, 475, 476, 478, 481, 485, 487, 489, 505, 537, 542, 548, 555, 556], "250": [487, 578], "2501": 426, "250185": 486, "2502": [426, 466], "2505": 426, "2505121": 97, "2505703": 476, "2509": 481, "251": [460, 464], "2510": 426, "251185": 505, "2511884200000000": 505, "2511886431": 483, "25162e": 451, "2518": 481, "251932": 481, "252": [433, 466, 481], "2520": 426, "2521": 426, "2523": 426, "2525": 426, "2528": 426, "253": [459, 489], "2535": 426, "2536": [426, 489], "2537": 489, "2538": 426, "254": 433, "2540": 426, "2546": 426, "254901960784338": 470, "25496": 505, "2551": 426, "2552": [426, 481], "2553": 426, "2555": 402, "2557": 426, "255750516626": 481, "2558": 426, "2559": 426, "256": [67, 436], "2560538e": 485, "2561": 426, "2562": 426, "2563": 426, "2564": 426, "2567": 426, "2568710719919036": 467, "257": [141, 459], "257270029841": 475, "2574": 426, "25743553e": 484, "25763": 460, "257642": 481, "2579999": 494, "258": [459, 543], "2580": 426, "25823909e": 483, "2585": 426, "2587": 426, "2589254117941673": 503, "259": [459, 505], "2591e": [452, 481], "2594": 426, "2595": 426, "2595e": 464, "259e": [142, 460], "25b": 17, "25e": 489, "25t_": 53, "25th": 407, "26": [19, 87, 91, 142, 385, 419, 447, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 507, 555, 559, 573], "260": [436, 505], "2604": 426, "2609": 489, "261": [436, 505], "2616": 426, "26173": 460, "2619": 426, "262": [436, 460, 489, 505], "2620": 426, "262554796103245": 503, "2625818241224747": 484, "2627": 426, "262728": 494, "26272868097919794": 491, "2628525e": 485, "263": [141, 142, 460, 489], "2633e": 465, "2635": 426, "2635108e": 485, "2637": 426, "2639554729438709": 491, "264": [141, 436, 466], "2645": 426, "26475": 462, "2648150": 97, "2649e": 484, "265": [32, 142, 395, 451, 460, 466, 489, 505], "2651": 426, "2654": 426, "266": [141, 142, 395, 459, 460, 466, 468, 472, 487, 489, 505], "2660": 426, "266192": 451, "26665050077722524": 491, "2667": 427, "267": [67, 142, 459, 460, 466, 489, 494], "2672": 427, "2673": 427, "26739753": 97, "2674": 427, "268": [407, 460, 466, 481, 489, 503, 505], "2681": 427, "2684": 427, "2685": 427, "268663733018811": 491, "2687": 427, "26883694": 505, "26887783978974283": 491, "268880": 545, "2689": 466, "269": [470, 505], "2692": 427, "269385": 481, "269627": 494, "2697": 427, "2699878e": 485, "26a": [39, 40, 50, 52, 53, 245, 281, 290, 481], "26e": [481, 489], "26th": [403, 419], "27": [142, 387, 447, 456, 460, 461, 464, 466, 478, 482, 505, 545, 549, 550, 580], "270": [450, 453, 460, 481, 489, 505, 544], "2703": 427, "2705": 427, "27057337686547633": 491, "2707": 427, "2708": 245, "2709": 427, "27093776e": 485, "271": [456, 459, 460, 464, 505], "2711": 427, "2712": 427, "2713": 427, "2715": 427, "271777777777796": 453, "27177778": 94, "2718": 427, "2719": 427, "272": [459, 460, 481, 489], "2720": [402, 428], "27209": 505, "2723": 427, "2725": 427, "2726": 427, "2726e": 505, "2727": 427, "2727693": 494, "2727e": 456, "2728": 427, "2729": 427, "273": [83, 436, 454, 460, 505], "2730": 427, "2731": 427, "2733": 427, "2734": 125, "2735": 427, "2737": 427, "2738": 427, "2739": 427, "274": [450, 487, 565], "27409496735322464": 491, "2741": 427, "2742": 427, "2743": 427, "274509803921596": 470, "2746": 427, "2747": 427, "27473": 466, "275": [459, 481, 573], "2750": 427, "2751": 427, "2752": 427, "2753": 427, "2755": 427, "2756": 427, "2759": 428, "276": 436, "2761": 428, "2762": 428, "2764": 428, "2765": 428, "2767": 428, "276773": 554, "2768": 428, "277": 459, "2771": 428, "2772": 428, "27727": 489, "2775": 428, "277522283785622": 467, "2776": 428, "2777": 428, "2777074437073429": 491, "2778": 428, "2779": 428, "278": [27, 436, 459, 472, 481, 489], "2781": 428, "2782": 428, "2783": 428, "2784": 428, "2785": 428, "2785e": 456, "2787": 428, "2788": 428, "2789": 428, "278e": 460, "279": 436, "2790": 428, "2791": 428, "2792": 428, "2793": 428, "2794": 428, "2796": 428, "2797": 428, "279786": 462, "2798": 428, "2799": 428, "27e": 481, "27t20": 89, "28": [21, 24, 67, 94, 104, 124, 141, 142, 390, 418, 419, 450, 454, 456, 458, 459, 460, 466, 468, 472, 478, 480, 481, 483, 486, 487, 489, 493, 494, 505, 554, 558], "280": [67, 436, 456, 459, 475, 487], "2800": [468, 489, 505], "2801": 428, "2802": 428, "2803": 428, "2804": 428, "2805": 428, "2808": 428, "2809": 428, "281": [459, 481], "2810": 428, "2811": 428, "28118133544922": 481, "2812": 428, "28120079": 481, "2815": 428, "2816": [428, 489], "2817": 428, "2818": 428, "2818047723094509": 491, "28183829312": 483, "282": [141, 142], "2820": 428, "2822": [428, 489], "2823": 428, "2825456e": 485, "2827": 428, "28275990e": 483, "2827988e": 485, "2828": 428, "2829": 428, "282951078740491e": 478, "282e": 481, "283": [436, 459], "2832": 428, "283218": 451, "283487": 481, "2837": 428, "28382603": 485, "2838398": 494, "28385358839966657": 491, "2839": 428, "284": [459, 481, 583], "2841": 428, "2842": 428, "28429": 466, "2845": 428, "2846": [428, 466], "285": [436, 459], "2852": 489, "28551": 142, "2859229": 483, "285f": [83, 88], "286": [436, 459, 483], "2861432787940619": 491, "286e": [460, 481], "287": [52, 53], "2872": 429, "28720322": 97, "2874": [429, 505], "28755283551095173": 491, "2878662980210884": 307, "288": 125, "2880470e": 485, "2885": 429, "288e": 454, "289": [436, 459], "28905": 495, "2891": 429, "28958": 460, "2896": 429, "2897": 429, "28e": [102, 454, 464, 466, 482, 495], "28t17": [457, 461, 462, 464, 490, 503, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "29": [67, 142, 275, 396, 406, 419, 447, 451, 454, 457, 459, 460, 466, 472, 474, 478, 481, 487, 489, 490, 494, 505, 561, 568, 570, 571], "290": [437, 459, 467, 475, 483], "2900": 489, "290098": 483, "2903": [429, 489], "2903e": 458, "2907": 429, "291": 436, "2912": 429, "29158": 142, "29170324": 482, "291e": 505, "2922477": 97, "2923272203680937e": 478, "2924": 429, "2927": 429, "2929": 429, "293": 459, "2930": 481, "2931": 429, "2932": 429, "29355238360800506": 491, "2938": 429, "2939": 429, "2942": 403, "2943": 429, "2944": [404, 429], "2945": 429, "2947": 429, "2948": 429, "295": 436, "2950": 429, "2951": 429, "2953": 466, "2956": 429, "29585273e": 495, "2959": 489, "295e": 481, "296": [436, 450, 565], "296356": 555, "2965": 429, "2966": 429, "2967": 429, "297": 451, "2971e": 481, "2974": 429, "2976": 429, "2978e": 452, "298": [459, 466, 481], "2981": 429, "2984": 429, "29882214027996945": 491, "299": [436, 459, 472, 475, 481], "2990": 429, "2991": 429, "2992": 429, "2993": 429, "2995484265169": 479, "2996": 505, "2998": 429, "2999": [429, 481], "299940468335294": 466, "299995937905366": 466, "299e": 481, "299t": 53, "29t20": [474, 478], "29t21": 478, "29t22": 478, "29t23": 478, "29th": 419, "2_": 19, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 141, 142, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 173, 183, 184, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 211, 234, 387, 392, 397, 400, 401, 402, 413, 421, 427, 440, 441, 442, 450, 460, 462, 463, 466, 487, 488, 505, 515, 518, 529, 530, 531, 543], "2degx2deg": 468, "2e": [198, 451, 453, 454, 468, 469, 472, 478, 481, 484, 489], "2e3": [198, 487], "2e6": 495, "2f": [370, 451, 457, 491, 504, 581], "2fhl": [58, 71, 426, 438, 439, 481, 505, 514], "2hwc": [59, 72, 426, 432, 440, 481, 514], "2k": [102, 109], "2katxwrb": 464, "2m": [245, 281], "2nd": [60, 406], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 448, 481], "2pc_catalog_ve": 452, "3001": 429, "30015e": 451, "3002": 429, "3003": 489, "3004625872247901": 465, "3005": 429, "3006": 505, "3006942": 97, "3007": 429, "301": [436, 459], "3011061699260256": 491, "3012": 429, "3013": 481, "301668796295": 481, "302": [459, 506], "3020791585772495": 306, "30287": 460, "3028e": 489, "302e": 481, "303": [456, 459, 481], "3030": 429, "3032": 429, "3034": 481, "3035": 429, "3037": 429, "3037632e": 485, "3038": [429, 505], "3039": 429, "304": [452, 474, 475, 478, 479, 481, 491, 505, 545], "3041": 429, "3042": 429, "3043": 489, "3045": 429, "3046875": [482, 489], "3049664466089965": 307, "304_steadi": 452, "305": [67, 459, 475], "3051": 429, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 429, "3053": 429, "30535345877453707": 491, "3054": 429, "3054538213469855": 467, "30561": 142, "3058": 429, "3058422e": 485, "305e": 481, "306": [436, 580], "3060": 429, "306196370000000": 505, "3063": 429, "3069": 429, "306e": 481, "307": 459, "3070": 429, "3071": 481, "3072": 429, "3074": 429, "3075": 405, "3076": 429, "307e": 481, "308": [459, 466, 539], "3080": 429, "3081": 429, "3083": 429, "3085": 429, "3086": 429, "3088": 429, "3089": 429, "3091": 429, "3092": 429, "30997": 505, "30a": 281, "30d00m00": 408, "30e": [452, 485, 489], "30t00": 478, "30t01": 478, "30t02": 478, "30th": 393, "31": [141, 142, 390, 391, 404, 405, 417, 444, 450, 452, 454, 455, 456, 457, 459, 460, 464, 467, 470, 474, 475, 478, 481, 482, 483, 486, 487, 489, 490, 492, 496, 503, 505, 574], "310": [450, 489, 493], "3100": 429, "3106": 429, "31067517": 481, "3107": [481, 505], "311": [539, 581], "3110": 430, "3111": 430, "3112": 430, "3113": 430, "31139074e": 484, "3114": 430, "311489174710791e": 505, "3116": 430, "311747": 457, "3117988e": 485, "31186857659616535": 491, "3119611261122878": 491, "312": [436, 459, 565], "3122": 431, "3123": 431, "3124": 431, "3125": 431, "3126": 431, "3127": 431, "3129": 431, "313": [459, 465], "3130": 431, "3131": [432, 489], "3135914081482271": 491, "3136": 432, "313714614138": 482, "3138": 432, "314": [441, 475], "3140": 432, "3141": 432, "3145": 432, "3148": 432, "315": [475, 481], "3152": 432, "3153": 432, "3155": 432, "315767542862533": 503, "3158": 432, "316": [459, 495, 496], "3162": 432, "316227": 481, "316227766016838": 486, "3165": 432, "3168": 432, "3169": 432, "317": [436, 459], "3173": 432, "3178": 432, "317a": 281, "317e": [452, 481], "318": 436, "3180": 432, "3182": 432, "31834": 142, "3185": 432, "3189697265625": 456, "31898": 142, "319": [437, 495], "3191": 432, "3195": 505, "3197": 432, "319725": 494, "3199": 432, "32": [83, 141, 192, 450, 456, 460, 462, 464, 471, 477, 478, 486, 487, 505], "320": [102, 105, 109, 110, 122, 481, 482, 483, 489, 517], "3202": 432, "320241": 464, "3207": 432, "3208": 432, "32095": 505, "321": 470, "3211": 432, "3216": 432, "3217": 432, "3219": 432, "322": 459, "3222": 432, "3228": 432, "3229": 466, "323": 459, "3230": 432, "3232943": 348, "3233356": 348, "32377509405904137": 96, "323779": 296, "3237948931463171": 491, "3238": 432, "324": [450, 565], "3241": 432, "3243": 432, "3246": 432, "32465247": 490, "325": [450, 565], "3254": 432, "3257": 432, "3258": 432, "325e": 457, "326": [436, 450, 565], "3262": 432, "32684": 505, "32684833": 494, "327": [466, 471], "3272": 432, "3276": 432, "3277": 432, "3278": 432, "3279": 432, "3279955e": 485, "328": 466, "3281": 432, "3283": 432, "328366": 464, "3284": 432, "32843": 505, "32847": 451, "3285": 432, "329": [96, 306, 307, 474, 478, 481, 491, 519], "3293": 432, "3299": 481, "329e": [456, 481], "33": [475, 478, 479, 480, 484, 487, 503, 505, 519], "330": [437, 459, 489], "3301": 432, "33013e": 451, "3302": 432, "3302565e": 485, "3303": 432, "330376": 67, "3304": 432, "3305": 432, "330505": 494, "33055e": 451, "3306": 432, "3307": 432, "3308": 432, "3309": 432, "3310": 432, "3314": 432, "33164865722698683": 491, "331723": 557, "3319": 432, "3319831545301117": 306, "332": [67, 437, 495], "3320": 432, "3323": [432, 482], "332525": 481, "3328": 432, "332e": [460, 466], "332f": [30, 31, 32, 33], "333": [136, 299], "3330487": 97, "3331": 505, "3331761": 97, "3333": 432, "33333333": 381, "3333333333333344": 470, "3335": 432, "33368e": 451, "3337": 432, "3338": 432, "334": [125, 459, 495], "3342": 432, "3343": 432, "3346": 432, "3347": 432, "33484": 451, "3349": 432, "3349654391": 483, "334e": 481, "335": 437, "3353": 432, "3357": 432, "3358": 432, "335e": 454, "336": [470, 481], "3363": 432, "3364130e": 485, "336444e": 481, "336606": 451, "336756": 457, "3368855e": 485, "3369": 432, "337": [437, 459], "3374": 432, "3377": 432, "33787": [96, 491], "33788": [96, 142, 491], "33789": [96, 491], "3379": 432, "33790": 491, "33791": 491, "33792": 491, "33793": 491, "33794": 491, "33795": 491, "33796": 491, "33797": 491, "33798": 491, "33799": 491, "338": [437, 481], "33800": 491, "33800122": 97, "33801": 491, "3380311e": 485, "3381": 432, "339": [437, 456, 470], "3390": 432, "3392": 432, "3393": 432, "3395": 432, "3397": 432, "339835555384604": 491, "3398360": 485, "33983991887701287": 96, "3399": 432, "33e": [462, 476], "34": [52, 53, 67, 420, 451, 466, 474, 478, 482, 487, 489, 505], "34005": 451, "3402": 432, "3403": 432, "340391": 505, "3404": 432, "34047": 451, "3406": 432, "3409": [94, 432], "341": [450, 451, 565], "3413": 432, "3416": 432, "3418": 432, "342": 437, "3420": 432, "3423": 432, "3426": 432, "3428": 432, "3434": 432, "3438": 432, "3439": 432, "343e": 454, "344": 481, "344238": 505, "3443842": 494, "3445": 432, "3446": 432, "3447": 432, "3449": 432, "344e": 67, "345": [297, 451, 489], "3453": 432, "3454": 432, "345692": 505, "3458": 432, "346": 489, "34613054105945": 467, "346488e": 481, "3466": 432, "3468": 432, "347": [437, 453], "3471": 432, "3474": 432, "348": [36, 37, 437, 456], "3480": 432, "3481e": 464, "3488": 432, "348e": [67, 481], "3491": [432, 460], "3493": 141, "34932": 142, "349530550405035": 484, "349530725254468": 484, "34953073943366": 484, "34953075819191": 484, "34953077463306": 484, "34953079334042": 484, "349530807529028": 484, "349535814693404": 484, "349536723056637": 484, "349537158300407": 484, "349537804239922": 484, "34953807814367": 484, "34953910575007": 484, "34953932636892": 484, "349542158419318": 484, "349559366703698": 484, "349655": 483, "34971209244579": 484, "349724940685938": 484, "3499075e": 485, "349e": 460, "34e": [481, 489], "35": [67, 398, 405, 417, 450, 456, 472, 474, 477, 478, 481, 484, 492, 494], "350": [470, 476, 483], "350105": 466, "3502": 481, "35030398537787": 484, "3503706026275275": 491, "3504": 505, "35052105086856": 484, "350556388466543": 484, "350d": 470, "351": [437, 450, 455, 481, 505], "3514e": 504, "3515": 432, "352": [437, 450, 477, 481], "3521": 453, "3523": 432, "3529": 432, "3529411764705888": 470, "353": [24, 437, 505], "3535": 434, "353592500058824e": 503, "3536": 451, "353e": 466, "354": 470, "3544": 432, "35569283": 485, "355804": 505, "3559": 432, "356": 505, "3561": 432, "3568": 432, "357": [481, 505], "35722435185": 481, "3576e": 453, "358": [466, 481, 505], "3583": 466, "3584": 432, "359": [437, 466, 481, 505], "3590188e": 485, "3592": 432, "3599": 468, "359e": 505, "36": [67, 86, 148, 326, 453, 466, 468, 481, 482, 485, 505], "360": [395, 487, 507], "3600": [459, 468, 469, 487], "36014": 464, "36073833513766157": 491, "361": [67, 437], "3619e": 504, "36228879": 505, "36273": 505, "363426": 571, "363472509034498": 491, "3639946": 476, "364": 437, "3659253e": 485, "366": [483, 504], "366486": 483, "36669663417038234": 491, "3669": 434, "367": [437, 470, 489], "3674884": 481, "367e": 475, "368": 118, "36834038301420274": 491, "368346217294295": 96, "3684": 434, "3689322e": 485, "369": 437, "3690": 505, "3699": 434, "36e": [480, 481], "37": [451, 452, 457, 459, 462, 475, 483, 484, 495, 581], "370": [470, 481, 489], "37058": 142, "371": 437, "3710784e": 485, "3712": 434, "3713": 434, "3715810e": 485, "3718745": 97, "372": [35, 125, 505], "3720": 434, "3722": 434, "3725490196078436": 470, "3728": 434, "373": 466, "3733": 434, "373892759762174e": 478, "3739292e": 485, "374": 470, "3740": 434, "37455141": 505, "3748": 434, "375": [437, 477, 487], "3750": 466, "37506": 505, "37517": 460, "3752": 434, "3759377929871826": 491, "376": 67, "3760": 434, "3761": 434, "376123860208395": 475, "3765": 451, "3777": 434, "37773": 460, "3779": 505, "3783": 434, "3784": 141, "379": [437, 450, 455, 456], "3792": 489, "3796": 434, "3797": 434, "38": [22, 67, 451, 453, 463, 481, 487, 489, 505, 564], "380053": 559, "3802": 434, "3804": 434, "3806": 434, "381": [450, 455, 489], "3810": 434, "3812": [481, 505], "3812120e": 485, "3812160e": 485, "38143003": 97, "3817": 434, "38175264e": 483, "3829": 505, "382e": 456, "383": [67, 437, 481, 487], "3833": 434, "3837": 434, "383e": 67, "384": 483, "3841385": 483, "3842": 434, "3846": 434, "3848912826152664e": 505, "3856": 434, "385e": 142, "3860": 434, "3862": 443, "387": [437, 505], "3872": 481, "3873": 434, "3874": 434, "3876": 434, "387834": 505, "388": 543, "388405": 505, "3885947175689592": 491, "3886270e": 485, "3887": 434, "389": 386, "3892": 434, "3895": 434, "3898": 434, "389e": 505, "39": [17, 18, 21, 22, 24, 25, 27, 59, 142, 480, 481, 487, 495, 543, 564], "390": 432, "3904": 434, "39042": 86, "3905": 434, "3906": 434, "391": 481, "3915": 434, "3918": 434, "392": [437, 457], "39200283e": 478, "392156862745098": 470, "39224": 460, "3925": 443, "393": [207, 208], "3933": 434, "3935": 453, "3936": 434, "394": 437, "3941": 434, "3945": [453, 481], "3947637541758": 475, "394765638937866": 503, "3948": 435, "395": 437, "3950": [406, 443], "395004": 505, "3956": 443, "3959": 435, "396": 437, "3962942e": 485, "3966": 435, "397": 456, "3970": 407, "397035933646679e": 478, "39728": 505, "3975": 435, "3979": [435, 579], "397918129147546": [417, 579], "39791813": [417, 579], "398": [437, 462, 464], "3981": 505, "39810717055": 483, "3981075200000000": 505, "3983": 435, "3986": 435, "3987": 435, "3988": 435, "398e": 481, "3990": 435, "39e": 481, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 148, 154, 161, 162, 164, 173, 284, 286, 387, 390, 391, 392, 396, 397, 400, 401, 402, 413, 421, 422, 423, 425, 426, 427, 428, 439, 440, 441, 448, 450, 451, 452, 454, 456, 457, 460, 461, 462, 466, 467, 468, 469, 470, 471, 474, 475, 478, 482, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 503, 504, 515, 517, 518, 519, 526, 531, 576, 578], "3d33m15": 67, "3dataset": 465, "3e": [20, 125, 131, 466, 469, 473, 476, 478, 481, 489], "3e4": 495, "3e5": 495, "3e6": 564, "3e7": 564, "3f": [125, 467, 580, 581], "3fgl": [61, 67, 74, 228, 268, 404, 433, 436, 438, 439, 440, 450, 454, 481, 490, 505, 514, 533, 565], "3fgl_name": 71, "3fhl": [62, 75, 86, 127, 129, 133, 287, 401, 439, 440, 454, 460, 468, 470, 481, 487, 488, 489, 490, 495, 505, 514, 516], "3fhl_data_fermi": 465, "3fhl_dataset": [287, 465, 488], "3fhl_model": [287, 465, 489], "3g": [480, 481], "3hwc": [63, 76, 432, 443, 481, 514], "3ml": [399, 495], "3pc": [64, 69, 77, 448, 481], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 101, 102, 105, 109, 110, 115, 117, 128, 133, 142, 145, 150, 153, 161, 173, 176, 192, 193, 194, 195, 196, 197, 202, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 239, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 280, 287, 288, 326, 368, 381, 382, 384, 385, 393, 395, 398, 401, 405, 406, 417, 420, 429, 431, 432, 433, 436, 438, 439, 442, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 498, 503, 504, 505, 507, 512, 513, 514, 528, 531, 532, 536, 537, 540, 545, 550, 563, 564, 572, 578, 579, 580, 581, 582], "40": [59, 109, 110, 388, 433, 453, 454, 456, 457, 464, 466, 474, 475, 478, 487, 490, 494, 505, 528, 551, 554, 559, 564, 580], "400": [133, 460, 461, 466, 470, 481, 487, 505, 573], "4000": 443, "40000": [173, 504], "400056": 451, "40050506591797": 481, "40051035": 481, "40071076": 97, "400x200": 470, "401": 457, "40112": 505, "4013": 443, "4014": 443, "4015": 443, "4017": 443, "4018": 443, "401e": 460, "402": 153, "4022": 443, "40235": 464, "4024": 443, "4025": 443, "4026": 443, "402712": 481, "403": [437, 466, 489], "4035": 505, "4037": 443, "403790": 546, "404": 304, "4043": 443, "4044": 443, "40481": 464, "405": 389, "4051": 443, "40525": 464, "4054": 443, "4058": 443, "406": 505, "40611": 505, "4067": 443, "40671": 462, "40672": 462, "406760": 541, "407": 481, "4071": 443, "4073": 443, "4073799600000000": 505, "4075": 443, "4076": 443, "4079": 443, "408": [456, 487], "4080": 443, "4080942e": 485, "40822469e": 490, "4083": 443, "4084": 443, "4088": 443, "4089": 443, "40919": 460, "4093": 443, "409416": 505, "4095": 443, "4098": 443, "40a": 59, "40deg": 494, "41": [67, 86, 94, 395, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "410": 470, "41009347393684": 482, "4103": 443, "4105": 443, "4106": 443, "4107": 443, "410779": 566, "4108": 443, "411": 505, "4110e": 481, "4112": [125, 443], "4113": 443, "4115": 443, "41176470588239": 470, "4119": 443, "411e": 454, "4120719e": 485, "412165": 466, "412779907405": 481, "413": 466, "414": 437, "4140541880588": 467, "41415047": 97, "4142135623730951": 118, "41449": 460, "414e": 460, "415": [437, 555], "4151e": 464, "4155": [481, 505], "41584196": 479, "416": [67, 464, 481, 486], "4161e": 464, "417": 481, "418007850646973": 417, "41803": 462, "41866": 495, "419": 489, "4191": 446, "41924": 141, "4198250e": 485, "41995": 460, "419e": 481, "41e19": [19, 20], "42": [25, 27, 94, 153, 348, 395, 459, 466, 481, 485, 486, 487, 491, 494, 503, 532, 535], "420": 463, "42050348": 482, "4208": 446, "4209": [446, 460], "421": [437, 470, 505, 578], "4210": 446, "4212": 446, "4212028e": 485, "4213": 446, "4215": 446, "4216": 446, "4217": 447, "4219": 446, "422": [39, 40, 450, 544], "4220": 464, "4221": 444, "4225498e": 485, "4225631e": 485, "42267": 466, "4226731": 466, "423": [450, 455, 456], "4231": [444, 446], "42361": 460, "42399798": 466, "423e": 125, "424": [450, 484, 493], "42400": 466, "4242": 446, "4243": 446, "4245": 446, "42463": 495, "424650": 482, "42474": 505, "425": 505, "4252": 446, "426": [450, 481, 493], "4264": 446, "4268": 444, "427": 457, "4275": [444, 446], "4277": 446, "4280": 446, "4281": 481, "4282": 446, "4288": 446, "429": 456, "4294": 446, "42e": [484, 489], "43": [280, 348, 395, 457, 466, 475, 482, 487, 505, 532], "430": 481, "43000": [52, 53], "4301": [444, 446], "4303606e": 485, "4305": 446, "431": [137, 389, 470, 482], "431023787974766e": 503, "43113": 451, "43137254901962": 470, "4313847458879893": 491, "4319": 505, "43197": 460, "4324": [444, 446], "4326": 446, "432878": 481, "432e": 481, "433": 460, "4336": [444, 446], "43366": 573, "4338e": 452, "434": 481, "43416595": 476, "4344": 444, "4346": 446, "435": 437, "4350": 446, "4351637481047363": 491, "4352": 446, "4359": [444, 446], "435e": 456, "435l": 481, "436": 437, "4360750e": 485, "4369": 446, "436929": 461, "437": [481, 489], "4370": 446, "4373240195300975": 491, "438": 489, "4380": [445, 446], "4381": [409, 447], "4382": 445, "439": 456, "4393": [445, 446], "4394": 445, "4395": 446, "4397": [445, 446], "439e": 481, "43e": 489, "44": [21, 50, 86, 348, 452, 459, 474, 476, 487], "4402": 446, "44055555555555603": 94, "4406": 446, "4408": 447, "4409": 446, "4412": [445, 446], "4417": 446, "4418": 446, "4420073e": 485, "4420222e": 485, "4428": 446, "4428634e": 485, "443": 456, "4430": 446, "44319": 482, "4432": 447, "4433": 448, "4435": [445, 446], "4444": 446, "444e": 465, "445": 460, "4450": 505, "44528685": 505, "4453": [445, 446], "44573": 94, "4458": 446, "4459": 446, "446": [489, 581], "4466": [446, 464], "4466832000000000": 505, "4466835921": 483, "447": 437, "44742": 505, "44749e": 451, "44755": 462, "447552": 451, "447e": [466, 481], "447l": 17, "448": 470, "4480056e": 485, "44802852": 505, "4481": 481, "4485": 447, "4486": [445, 446], "448e": 142, "4491": [408, 447], "4495": 446, "4497": 482, "4498": 141, "44e": 417, "45": [51, 54, 459, 465, 475, 476, 478, 482, 487, 488, 490, 507, 532, 537, 538], "450": 489, "4500": [445, 446], "4501": 447, "4504": 446, "4506": 446, "450685": 562, "4508": 446, "4509803921569": 470, "4510": [446, 464, 505], "4515": 480, "4517490659800822": 473, "452": [450, 565], "4520": 445, "4521": 446, "4524": 445, "453": [452, 489], "454": 456, "4540": 447, "4545": 446, "4546": 447, "455": [437, 454], "45515263080596924": 453, "45517415e": 483, "455870": 466, "455e": 67, "456": 437, "4561": 447, "45646095": 476, "4567": 447, "457": [281, 437, 489], "457251": 505, "4574": [445, 447], "4575": 94, "4578": 445, "4579e": 451, "458": [470, 481], "4584": 447, "45856": 505, "4586649826004114": 306, "459": [437, 482, 489], "4593": 445, "45935": 505, "4595": 447, "4599": 447, "45\u00ba": 496, "46": [53, 67, 109, 110, 395, 475, 481, 487], "460249999": 86, "4608": 447, "461": [437, 478], "4615": 447, "46186956763267517": 453, "4619": 445, "462": [437, 450, 456, 565], "4620": [409, 447], "4620e": 481, "46225": 460, "4628": 447, "463": 505, "4631": 445, "4635": 447, "4638": 447, "4638e": 461, "464": 472, "4642048e": 485, "4647544e": 485, "465": [456, 481, 489], "4653": 445, "4657": [445, 447], "465784": 505, "465904": 539, "4660": 447, "4664": 447, "4668": 447, "4669": 447, "4671": 447, "46711": 460, "4675e": 474, "4677": [445, 447], "468": [476, 481], "4681": 445, "4684": 453, "468805426856864e": 52, "468e": 67, "4697": 447, "46e": [83, 461, 466], "47": [67, 475, 478, 481, 487, 505], "4703": 447, "470588235294144": 470, "47072192780708": 475, "4711": 505, "4712": 460, "4714": 447, "4721": 445, "4726": 447, "4728": 445, "4729": 447, "473": [437, 456], "4738": 447, "474": 437, "4740": 447, "4741": 447, "474e": 481, "475": [437, 489], "4750": 447, "4753": [445, 447], "475468": 451, "4755": 445, "4759": 447, "4770": 447, "4772": 445, "47797": 460, "477e": 481, "478": 437, "47802": 491, "47803": 491, "47804": 491, "47827": 491, "47828": 491, "47829": [82, 491, 497], "4783": 447, "4785": 447, "47e": 481, "48": [33, 173, 420, 464, 465, 487, 489, 495], "480": [453, 481, 489], "4802": 447, "4805": 447, "480554966154": 464, "4805903936342": 475, "48068": 460, "4808": 447, "480e": 481, "481": [386, 437], "4810": 447, "4814": [447, 505], "4817": 447, "48180882997916e": 503, "4819444e": 485, "482": 451, "48215685": 97, "4822": 447, "48248": 481, "4825": [481, 505], "4828": 447, "4829": 447, "4834": 447, "4834488e": 485, "4835": 447, "4837": 447, "484": 437, "48442": 275, "4845": 447, "4847": 447, "4848653": 481, "4849": [447, 481, 505], "484e": 142, "485": 437, "4850": 447, "4851": 447, "4854": 447, "485p": [36, 37], "487": [437, 503], "4875723e": 485, "4876": 445, "4879": 447, "4881": [254, 255], "4886": 447, "48871": 451, "488z": 27, "489e": 481, "48e": [481, 489, 504], "49": [53, 460, 464, 481, 489, 495, 503, 531], "490": 25, "4902": 447, "4904": 447, "4904078e": 485, "49078e": 451, "4913": 445, "49152": 495, "4917": 447, "492018": 543, "493": 25, "493043594026": 464, "4933657e": 485, "4936": [445, 447], "4937": [445, 447], "4940": 447, "49417615": 86, "4942": 447, "494e": 456, "4958277": 97, "496021": 494, "4963": 505, "4966": 505, "4968236e": 485, "4970": 447, "4971": 447, "49716789e": 483, "4971704e": 485, "4973": 447, "4975": 447, "4978": 447, "498": 505, "4983": 448, "498784": 481, "4987e": 458, "4989": 447, "498e": [481, 505], "499": [67, 481], "49919925926": [239, 574], "4992": 447, "4994": 447, "4996": 448, "49972277488662115": 491, "4999833830074": 466, "4d": 400, "4e": [476, 481, 489, 564], "4f": [579, 580, 581], "4fgl": [65, 78, 269, 270, 404, 424, 426, 432, 434, 447, 450, 452, 465, 481, 488, 490, 514, 533, 565], "4hbdnpu_": 478, "4th": [393, 419], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 102, 103, 105, 108, 109, 110, 118, 122, 125, 126, 128, 130, 132, 141, 142, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 173, 176, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 218, 219, 222, 225, 226, 228, 229, 230, 234, 235, 237, 239, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 275, 277, 281, 304, 308, 340, 371, 372, 376, 378, 381, 382, 385, 386, 388, 392, 393, 395, 396, 397, 398, 400, 404, 405, 406, 412, 417, 420, 422, 424, 425, 432, 434, 436, 437, 439, 440, 441, 445, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 507, 512, 513, 516, 523, 526, 528, 529, 530, 531, 532, 536, 537, 538, 539, 541, 545, 546, 551, 553, 554, 555, 559, 560, 564, 567, 568, 569, 570, 572, 578, 580, 581], "50": [87, 91, 94, 111, 116, 348, 388, 408, 451, 457, 458, 462, 464, 472, 474, 475, 476, 481, 482, 485, 487, 489, 490, 491, 494, 495, 497, 503, 504, 505, 528, 531, 539, 581], "500": [193, 194, 196, 202, 205, 206, 460, 466, 468, 469, 487, 494, 495, 505, 531, 536], "5000": [19, 20, 87, 91, 507, 531], "5000056568267741": 466, "5000e": 459, "50022222": 94, "500249": 481, "5004": 466, "5015": 447, "502": [437, 450, 480, 493], "5029747": 458, "503": 437, "5030": 505, "504": 28, "5040": 447, "5044": 447, "5049": 505, "505": [67, 481, 482], "505523195905": 464, "5057": 448, "5058": 448, "506": 437, "5066": 481, "507": 437, "5074834": 97, "5078068": 97, "50807568877": 481, "509": [450, 500], "509587": 483, "509632": 483, "509e": 481, "50e": [459, 489], "51": [52, 53, 67, 142, 462, 464, 470, 503], "510": [437, 483], "5106": 505, "51095676": 476, "511": [67, 437], "5115": 448, "51179": [382, 583], "5118": 448, "512": 456, "5125": 448, "5126": 67, "5129": 448, "513": [417, 487], "51312": 466, "5135": 448, "5144": [94, 451], "5145": 448, "514854": 494, "51544": [459, 468, 469, 472], "5156": 448, "5160": 448, "5161": 448, "5162628e": 485, "5163273": 494, "5169": 448, "5176": 448, "518": [437, 489], "5180": 448, "5184": 448, "5186": 448, "5188": 448, "5188338e": 485, "51910": 94, "5192420e": 485, "5194769e": 485, "51948705e": 490, "51958055e": 483, "52": [53, 125, 173, 451, 453, 457, 460, 462, 464, 475, 481, 494, 497, 505], "5200": 448, "5205": [448, 495], "5206": 448, "5207": 448, "52074074074": 83, "521": 438, "5222": 448, "523": [438, 487], "5230376e": 485, "52318414": 97, "523681640625": 456, "5237647004325865": 491, "52389101852": 481, "523a": [245, 281], "523b": 22, "523e": 457, "524": [438, 481, 489], "5248": 505, "524807800000000": 505, "5254": 448, "5255": 448, "5258": 448, "52587": 460, "526": 438, "52607": 505, "5269": 448, "527": [438, 495], "5270": 448, "5271": 448, "5275": 448, "5279": 448, "527e": 457, "528": [456, 489], "5280": 448, "52826166": 481, "5283": [481, 505], "52839183495354": 475, "5285": 448, "5289": 448, "529": [438, 450, 492, 493], "5292": 482, "529411764705883": 470, "5297": 448, "5297030e": 485, "5298": 448, "52e": [476, 503], "53": [28, 466, 475, 478, 492, 536, 545], "530": 438, "5300": 448, "53025": 94, "5303": 448, "5304": 448, "531": [438, 470], "5312": 448, "5314": 448, "5316": 448, "5320": 448, "53213": 466, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": 481, "53343": [417, 473], "53344": 473, "53345": 473, "53346": 473, "53347": 473, "53348": 473, "5342": 448, "5345275e": 485, "5346": 448, "53482e": 451, "535": [438, 481], "5350": 448, "535058216604496": 281, "5353": 448, "5356": 448, "53566": 451, "53616": 245, "5366": 448, "5370": 448, "5378": 448, "5380": 448, "5381": 448, "5382": 448, "53849342472254e": 478, "5385": 448, "5389": 448, "539": [281, 489, 543], "5390": 448, "5390438": 97, "5392e": 474, "539397": 481, "53945": 474, "53946": [478, 479], "539e": 481, "53e": [417, 459], "54": [67, 453, 456, 481, 485], "5400": 482, "5405": 448, "5407": 448, "5407363826067": 516, "5407363826070": 516, "5408": 448, "5409": 448, "541": 438, "5411": 451, "5423": 448, "5427": 448, "5427520e": 485, "54282": 460, "5433": 448, "5437": 448, "5438": 448, "5438860e": 485, "544": [438, 481, 495], "5445": 448, "5448": 448, "5449": 448, "545": 438, "5453": 448, "54566271": 580, "545y": [39, 40], "546": 438, "5461745": 97, "5462": 448, "5466": 448, "54676837e": 484, "54682": [460, 481, 495, 505], "547": [438, 450, 451, 481, 565], "5472": 448, "54721e": 451, "5477": 481, "54772": 481, "54892": 460, "548e": 481, "549": 438, "549007644529844e": 503, "549019607843138": 470, "5499840": 494, "54e": 489, "55": [39, 42, 87, 91, 211, 457, 475, 476, 484, 488, 492], "550": 456, "55027": 142, "55045": 481, "551": 481, "55197": [382, 583], "552": 481, "5525": 448, "55275": 495, "553": [452, 481], "5531e": 452, "553337": 505, "5538": 505, "5538942e": 485, "553e": 460, "554": 67, "55410": 481, "5545": 448, "5545130e": 485, "55461982e": 483, "554e": 454, "556": [438, 456, 581], "5561760e": 485, "557": [438, 489], "55775": 481, "558": 438, "558338072878877": 503, "559": 438, "5594": 83, "56": [451, 457, 476, 487, 496], "560": [37, 481], "5606985": 476, "5607778e": 485, "56093766": 97, "56141": 481, "562": 481, "5622482": 97, "56234132519": 483, "562443": 472, "56353481": 580, "563e": [456, 466], "564": [296, 438, 456, 489], "564139576925786": 467, "5644": 482, "565": 438, "56506": 481, "565095": 451, "566e": 456, "56711": 505, "5686274509803928": 470, "56871": 481, "569": 438, "56922612": 580, "5692809e": 485, "56973": 505, "57": [33, 460, 466, 476, 487], "57011": 466, "571": 481, "57185": 516, "5719922e": 485, "571e": 481, "572": 457, "57233": 505, "57236": [460, 481, 495, 505], "572e": [454, 460], "573": [67, 456, 505], "57300957": 176, "575201": 570, "5754970e": 485, "576": 489, "5760": 505, "57602": 481, "5763635e": 485, "5768262e": 485, "576e": 460, "577398": 495, "5779092e": 485, "578": [481, 483, 580], "5782814": 483, "579": 481, "579178801616083e": 478, "57944657408": 481, "57967": 481, "57e": 481, "58": [417, 420, 459, 464, 467, 481, 486, 487, 489, 497, 503], "580": 581, "581": [450, 457, 467, 471], "5819e": 458, "582": 438, "58332": 481, "5833e": 481, "5835918e": 485, "583e": 460, "5842497e": 485, "585": 481, "58540702": 97, "5867488e": 485, "58693695": 476, "58698": 481, "5882352941176467": 470, "588e": 481, "58909": 475, "58926": 460, "5892966e": 485, "5895": 453, "58999": 239, "58e": [472, 481, 483], "59": [83, 462, 472, 473, 481, 486, 497, 505], "590": 456, "59000": [239, 574], "59001": 239, "59063": 481, "5908": 481, "590835686434463": 491, "591": [438, 481], "59100": [573, 574], "59123": [567, 568, 569], "5915030546513255": 479, "5915e": 481, "59200": 573, "59233": 490, "59235": [83, 494], "59240": 490, "5924e": 504, "59250": 490, "59254e": 451, "59265": 451, "593": 438, "59300": 476, "59344": 505, "59348": 505, "59365": 574, "594": [438, 450], "59400008": 97, "59428": 481, "59451": 460, "59497703e": 478, "5951631e": 485, "5956621435": 483, "596": 489, "59696": 460, "596e": 481, "597194451442478e": 478, "597774": 485, "59793": 481, "598": 505, "5985": 505, "598622": 549, "5987726": 97, "599": [438, 470, 474, 489], "599625": 494, "59976": 481, "599999904632568": 481, "59d09m41": 481, "59e": [481, 489, 495], "5a": 58, "5e": [459, 469, 481, 483, 489], "5sobtqfu": 452, "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 102, 109, 111, 116, 125, 130, 142, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 162, 164, 165, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 239, 281, 369, 372, 385, 388, 393, 397, 398, 401, 406, 414, 417, 430, 432, 434, 440, 441, 445, 447, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 511, 528, 532, 538, 542, 562, 578, 580], "60": [67, 91, 155, 445, 457, 460, 481, 484, 495], "600": [457, 460, 465], "6000": 531, "6000000000000001": 490, "600661": 485, "60075": 485, "60090769e": 490, "600e": 456, "6018166e": 485, "601e": 481, "6024e": 504, "603": [489, 505], "6033": 451, "60350": 454, "603625": 485, "604": 456, "6046689e": 485, "605913": 572, "60603928": 490, "60703": [570, 571, 572], "607843137254942": 470, "60e": 481, "61": [67, 142, 427, 464, 481, 489, 495, 581], "610": 489, "61051": 495, "6105760e": 485, "611": [460, 483, 580], "611168": 483, "6116853": 481, "611e": 481, "6125": 497, "612e": 460, "613114": 479, "61422433": 97, "61453755944866": 467, "61489": 485, "61526": 142, "615316": 505, "617835": 485, "6181862e": 485, "61862": 239, "619": 481, "6194453e": 485, "61975454954816": 503, "62": [481, 496, 504], "620": 481, "620398": 485, "6205": 505, "62111": 460, "621499": 505, "6218742e": 485, "6219": 454, "622": [438, 454], "62258": 481, "6227766": 487, "62277660168379": 487, "6228e": 454, "623": [481, 505], "62320": 454, "623397": 485, "62341325": 487, "623413251903492": 487, "624": 489, "624122": 466, "624d": 24, "624e": 456, "62503": 481, "62514628": 485, "62533781426": 571, "625341244166": 570, "62535317158": 572, "6253652e": 485, "6259962e": 485, "626": [450, 493], "6266": 505, "6267247": 505, "627450980392158": 470, "628": 438, "62842028": 482, "63": [191, 192, 201, 204, 451, 456, 458, 482, 486, 496, 497, 503, 504, 526, 528, 529, 532], "630": [82, 489, 497, 503], "6309576500000000": 505, "630e": 67, "631": [438, 464], "631155605": 468, "631159205": 468, "631170005": 468, "631173605": 468, "631177205": 468, "631180805": 468, "6318811e": 485, "632627": 505, "633": [85, 102, 105, 109, 110, 173, 457, 465, 486, 503, 504, 528], "63307": 83, "63308": [473, 504], "633083": 488, "63310241699219": 465, "63326": 460, "6333": 94, "63342": 505, "633600": 489, "635": [438, 450, 498], "63500212963": 481, "6354": 505, "63541": 494, "63668832485633": 475, "638": 489, "639": 481, "6390": 451, "63902": 451, "6395e": 461, "6397": 505, "63e": 482, "64": [39, 67, 83, 125, 192, 420, 472, 481, 495], "640": 438, "6402822e": 485, "641": [438, 450, 477, 505], "64103": 494, "6413": 466, "6417": 466, "6417229153935": 475, "6419578e": 485, "642": 505, "6423836025257211": 467, "6429005895278312": 491, "642e": 456, "643": [30, 31, 32, 33], "64323": 460, "64438": 495, "6444": 451, "644527": 483, "645": [482, 483], "6451": 466, "6464": 451, "646e": [136, 299], "647": 438, "647058823529452": 470, "6471115e": 485, "647939": 556, "64794383e": 490, "648": 438, "648e": 67, "649": 438, "64987376": 97, "64e": 457, "65": [63, 142, 405, 420, 422, 482], "650": 482, "650742": 553, "6509": 451, "651": [450, 481, 498], "651058": 505, "6514": 505, "652": 465, "6521": 475, "6522806": 505, "652368617859867": 465, "653": [438, 453], "65357608e": 485, "654": [451, 481], "65412": 466, "654e": 481, "655": 460, "655283": 460, "6554088e": 485, "6556248e": 485, "6557": 460, "655e": [67, 457], "656": 580, "65603222222": 495, "65603794185": 481, "6561e": 464, "6577182894355391": 491, "658": 489, "658909145253801e": 505, "6589622747787678": 491, "659": [456, 460], "65e": 118, "66": [52, 53, 420, 423, 459, 465, 482, 484, 489, 492, 495, 503], "660": 438, "6604475": 466, "660e": 505, "660fals": 454, "661": 438, "66104": 451, "662": 481, "663": [456, 580], "663742400000000": 505, "664502403": 494, "664502405": 494, "664502408": 494, "664502409": 494, "664502414": 494, "664e": 460, "6652219e": 485, "6656409356335768": 467, "66650390625": 453, "6666666666583865": 474, "6666666666666666": 569, "666666666666696": 470, "6678": 460, "668": [450, 477], "66813": 466, "668252": 547, "669": [450, 455, 464, 471], "6693e": 475, "66984341": 485, "669e": [142, 460], "66e": [464, 482], "67": [17, 420, 459, 481, 505], "670": 481, "6705024680435898": 306, "671": [458, 468, 497, 567], "671616": 451, "6728": [481, 505], "67304": 97, "67375": 451, "67457342435522e": 505, "675": 456, "6755e": 472, "6768369882260035": 457, "6768e": 457, "677": 438, "6772235e": 485, "67759236e": 485, "678": [86, 467], "67824": 482, "6784": 580, "67861": 485, "678683717532289e": 457, "679": 438, "679478008080033e": 457, "6795e": 457, "67992517": 97, "67e21": 480, "68": [67, 83, 96, 154, 160, 162, 163, 164, 166, 234, 420, 451, 481, 484, 485, 487, 494, 505, 581], "680": 489, "6803": 505, "681": [450, 463], "6812310184489": 475, "68125": 485, "6823": 451, "683535101178161e": 478, "684": 173, "68542112": 97, "68588096384626e": 478, "68628538586": 482, "6864e": 458, "687": 489, "687214": 486, "687500": 486, "687685": 481, "68e": [452, 464, 472, 481], "69": [102, 447, 460, 472, 481, 482], "690": 67, "690557685186": 481, "6909290e": 485, "691": 481, "691299354164691": 467, "69138": 460, "691680": [102, 482, 489], "692": 460, "692e": 457, "69314486": 488, "693806": 558, "693940": 464, "6953125": 482, "69543812": 97, "6959369197218669": 491, "695e": 460, "697317": 495, "69735": 485, "697e": 454, "697fals": 454, "698": [450, 506], "6985": 453, "6992": 466, "6e": [454, 481, 489], "6h": 496, "6mgofwv8": 490, "6q93vsyn": 486, "6th": 419, "7": [30, 31, 38, 52, 53, 67, 87, 91, 125, 131, 141, 173, 176, 203, 209, 211, 237, 371, 372, 381, 385, 386, 393, 397, 398, 401, 417, 421, 422, 424, 425, 431, 432, 437, 438, 439, 441, 442, 451, 456, 457, 459, 460, 465, 467, 468, 473, 474, 475, 476, 478, 479, 481, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 503, 505, 532, 536, 537, 573, 580, 581], "70": [67, 91, 102, 457, 466, 481, 482, 580], "700": [389, 469, 483, 488], "70000000e": 490, "7000e": 490, "70016": 466, "7007": 466, "701": 528, "70181": 142, "702": [473, 481, 495, 504], "702e": 460, "703": 417, "70358483e": 490, "704": 489, "70428": 505, "70437": 485, "705": 505, "70546": 460, "70634e": 451, "706e": [465, 481], "707945784": 483, "707t": 290, "708": [456, 457], "709": 438, "7097381e": 485, "70e": 490, "71": [33, 457, 459, 475, 489, 581], "710": 438, "71067811865478": 481, "711": [450, 460, 463], "7115414505410296e": 478, "7116851": 490, "711e": 460, "712": 467, "71220672": 482, "7123895e": 485, "712e": [473, 504], "713": [438, 481], "7132e": 505, "71340589e": 483, "714": 481, "715": 505, "716": [96, 306, 307, 487], "716062": 494, "71693826": [474, 478, 491, 519], "717": 481, "7172085596258": 475, "71795506": 505, "7184": 505, "719": [438, 489], "7190994e": 485, "71944e": 451, "7195": 481, "719e": 481, "72": [424, 453, 481, 486, 505], "720": [469, 481], "7200": 472, "722": 489, "72217": 505, "722557505166": 481, "723": 460, "723e": 481, "7240965e": 485, "72411791e": 483, "725": 481, "725490196078432": 470, "726e": 456, "727": 489, "72775": 505, "7284447e": 485, "729e": 460, "73": [451, 505], "7303": 505, "731": [438, 450, 498], "731589446928548e": 503, "731984": 552, "732e": [67, 481], "733": [67, 438], "734": [450, 498, 505], "7350250533013533": 491, "7350380e": 485, "7351418e": 485, "735e": 481, "736": [450, 456, 471, 580, 581], "737": 456, "738": [438, 481], "7385727e": 485, "739": 438, "7395744e": 485, "739e": 67, "73e": [481, 503], "74": [451, 505], "740": 438, "742": 489, "743e": [452, 481], "74427": 466, "74465974e": 485, "74479": 460, "745098039215687": 470, "74542e": 451, "746": 438, "7471700e": 485, "7479085e": 485, "748": 481, "748259": 464, "74989420933": 483, "75": [67, 374, 448, 452, 456, 505], "750": 581, "751": 498, "751643891117176": 503, "75267735": 505, "753": [438, 457], "7537086e": 485, "754": [438, 495], "75408483": 505, "7555": 486, "7559": 505, "756": 481, "7567": 451, "7580410e": 485, "759": 438, "7596682e": 485, "75e": [481, 504], "76": [467, 478, 487], "7613": 417, "761c": 28, "762": 438, "762199399999986": 543, "763": 438, "7637308880733709": 491, "7638": 460, "763e": 460, "764": [450, 503, 506], "76419591747674": 475, "7647": 505, "764705882352942": 470, "76473": 460, "7652512e": 485, "766": [438, 460], "7660168382": 481, "766d": 494, "767": 438, "76739": 481, "768000": [102, 482], "768048": 97, "7681656e": 485, "76837444": 476, "7684028": 505, "7692170e": 485, "76e": 489, "770": [67, 450, 565], "771667": 497, "77174": 460, "7718272408581743": 306, "771e": 481, "772": [438, 451], "77206": 505, "77218": 460, "773": 481, "7733e": [452, 481], "77351": 460, "774": [438, 472], "7742327640292": 475, "7743835449219": 456, "774e": 481, "775": [67, 489], "7752246942468283": 466, "7755386e": 485, "7760": 505, "7763307219821931": 306, "7765957e": 485, "77678": 451, "7769775": 494, "777": 438, "7771617763704126": 306, "77751797": 97, "777e": [67, 454], "777l": 35, "778": [438, 456, 481], "77827941": 487, "778279410038923": 487, "779": [457, 481], "7796942": 505, "779e": 456, "77e": [459, 481], "78": [487, 488, 496, 504], "780": [31, 125], "7800e": 456, "7804888e": 485, "78083": [141, 142], "780e": 125, "78181": 142, "78188": 460, "78188096": 97, "782": 495, "7827941": 487, "78279410038923": 487, "783": [438, 481, 505], "78332719": 466, "78333": 466, "783587001383003": 494, "783e": 466, "784": [439, 457], "784024": 568, "7843137254901955": 470, "78499999999997": 539, "785": 539, "7853981633974483": 572, "787": [67, 173], "787169465401243e": 473, "7875405607868806": 491, "7876233e": 485, "788": 481, "7887840e": 485, "788e": 481, "789": 438, "78910994": 97, "7894": 466, "78952750835169": 475, "78e": 489, "79": [453, 481], "790": 438, "791": 439, "7913e": 456, "7922": 451, "793": [439, 460], "794": 483, "7941697": 483, "79432823": 490, "7943282347": 483, "79469899": 466, "79470": 466, "794e": 460, "795": 475, "796": [439, 489], "797": 439, "7972": 486, "798": 439, "798218": 451, "799": 456, "7990194e": 485, "7997221e": 485, "799999952316284": 481, "7c": 487, "7d": 481, "7e": [481, 489, 490], "7e955f": 420, "7z_haji": 478, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 102, 105, 109, 110, 111, 116, 128, 142, 147, 148, 197, 204, 237, 239, 308, 381, 385, 388, 389, 398, 421, 422, 425, 427, 428, 432, 433, 434, 437, 438, 439, 442, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 512, 514, 523, 528, 532, 536, 545, 556, 564, 580], "80": [176, 458, 460, 482, 487, 495, 528, 555, 564], "800932": 481, "801": [505, 528], "801668796295": 481, "802": [489, 505], "803": 456, "8031431e": 485, "803373": 569, "8037638e": 485, "803921568627494": 470, "804": 489, "804492": 472, "80492": 142, "80571": 141, "8062607e": 485, "80683246": 485, "806e": 475, "807": [460, 543], "8071": 460, "807201": 505, "807439": 540, "8075": [481, 505], "8075185": 481, "8084e": 464, "808687936570502e": 484, "80871364": 97, "8090746": 494, "809505": 481, "80982039": 485, "80e": 452, "81": [428, 452, 459, 473, 545], "810": [439, 481], "810000": 472, "8100e": 452, "810e": 481, "811": 439, "8115337251905373e": 484, "812": 439, "812075194992371e": 484, "8122169596532167e": 484, "8122425483643125e": 484, "8122e": 484, "812358724314062e": 484, "8129257829574434e": 484, "812951371538087e": 484, "813": 439, "814": 439, "8150": 505, "8157971601581226e": 484, "8159e": 475, "816": [439, 475], "8160964882165554": 306, "81699e": 451, "816e": 481, "818388e": 505, "81847286": 476, "818e": 454, "819": 481, "81e": 545, "82": [67, 420, 464, 481, 504, 532], "820": 439, "8205513": 494, "820562952023891": 306, "820734654694367e": 478, "8222980e": 485, "823": [450, 456, 493], "823293014457": 475, "82352941176471": 470, "824": [137, 439, 489], "8241471833009617": 491, "825": [439, 451, 467, 481], "8256": 505, "826": 439, "826414166666": 94, "827": 439, "8272": 507, "82739": 460, "827e": 142, "8290458e": 485, "8293": 505, "82946153": 505, "82e": 465, "83": [30, 67, 83, 85, 94, 102, 105, 109, 110, 173, 176, 191, 192, 201, 204, 456, 457, 458, 460, 465, 473, 482, 486, 487, 488, 496, 497, 503, 504, 523, 526, 528, 529, 532], "830": 439, "8300": 505, "831": 439, "832": 439, "83242471": 485, "833": [439, 457, 460], "833333333336": 476, "834": 439, "8341884287660133": 491, "8349780e": 485, "835": 439, "835e": [457, 466], "835fals": 454, "836": [439, 476, 481], "836731": 481, "8369650e": 485, "837": [439, 489], "8377268e": 485, "838": 460, "8383396349722769": 306, "84": [24, 142, 420, 450, 456, 458, 466, 481, 489, 532], "840": [439, 450, 460, 506], "841": 481, "84196311": 97, "842": [439, 481], "84233": 460, "842x": [135, 144], "843": [59, 451, 476], "843137254902004": 470, "843863242310971e": 503, "843e": 67, "8441040e": 485, "844770648146": 94, "8449575657133206": 306, "845": 440, "84529": 481, "8455480e": 485, "845693": 451, "846": [460, 481, 580], "847": 439, "8475576e": 485, "8475650e": 485, "848": [450, 455], "848652": 535, "84e": 464, "85": [87, 91, 446, 466, 475, 536, 537], "851": 439, "85157506": 505, "8515948e": 485, "85188496e": 485, "85202": 505, "85287": 495, "852e": 481, "854": 439, "854166666664": 476, "85416667": 474, "85469291": 97, "855": 439, "85527": 466, "85527359": 466, "8555500e": 485, "85624": 461, "85625": 461, "8568": 505, "856e": 481, "857": [450, 477, 478], "8570719e": 485, "85722435185": 481, "858": 439, "858e": 481, "859": [439, 456], "85900": 466, "85900392": 466, "85925": 505, "8593054": 481, "859e": 460, "85e": 481, "86": [454, 456, 457, 460, 487, 505, 516], "860": 481, "861": 505, "86111111": 474, "861150": 454, "8613613e": 485, "86178": 141, "8620": 472, "8623": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "862745098039234": 470, "864": [439, 505], "865": [439, 460], "8662": 472, "86676": 495, "8669": 451, "8672": 466, "8676e": 458, "86793518066406": 453, "868": [439, 481], "86831929": 97, "8699": 451, "8699165e": 485, "87": [67, 466, 487], "870": [67, 439], "8704": 460, "871": 439, "871730083414263e": 478, "872": [439, 460], "873": 457, "8733348": 494, "87358893e": 483, "8736082200157": 467, "873659477745188": 491, "874": 453, "875": 439, "876": 489, "87621184": 462, "8769240e": 485, "876e": 460, "87710186": 97, "877563": 481, "878": [481, 489], "87897": 466, "87897418": 466, "879412": 457, "8799800e": 485, "87e": 21, "88": [420, 442, 458, 466, 467, 478, 481, 487, 505], "880e": 460, "881": [439, 451, 460], "8815212313941426": 491, "882": 67, "882352941176466": 470, "883": 439, "8834862e": 485, "883e": 67, "884": 439, "88470839": 490, "885": 439, "886": 481, "8865": 505, "88781": 460, "888": 439, "8885138e": 485, "889": 481, "8893600e": 485, "88e": [454, 481], "89": [33, 487], "8908866e": 485, "8909e": 475, "890e": 67, "892": 489, "89243456": 505, "8926": 505, "89287": 451, "893": 439, "893751": 551, "894": 454, "8943121e": 485, "89492144e": 484, "895": 476, "8954039e": 485, "89595846": 490, "89709472": 505, "898": [439, 450, 471], "8986348363207728": 491, "89873": 466, "8989213": 466, "898e": [460, 481], "899": 67, "8999": 466, "899a": 281, "89e": 482, "8_jqmho": 478, "8e": [454, 464, 467, 469, 489, 495, 564], "8rbuj87u": 478, "9": [31, 33, 35, 67, 83, 87, 91, 141, 197, 209, 237, 239, 338, 345, 378, 385, 386, 390, 398, 417, 423, 425, 436, 439, 441, 444, 446, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 531, 538, 542, 543, 544, 551, 567, 575, 580], "90": [57, 67, 404, 459, 462, 465, 466, 481, 487, 490, 507], "900": 481, "9002269877996247": 476, "900269": 485, "9023670e": 485, "90242058e": 482, "9032163": 86, "904": 505, "905": 481, "9053655e": 485, "9053906e": 485, "906": [439, 481], "90605275e": 495, "90677811e": 483, "90685": 460, "907": 481, "9074812e": 485, "9077294": 494, "9086061854096": 475, "90e": [102, 457, 464, 482], "91": [459, 475, 487, 492, 532], "911": 439, "911486": 550, "911552434768802e": 473, "912": 481, "912525e": 505, "912779907405": 481, "913196574074": 473, "913e": 460, "914": [67, 450, 474, 477], "915": 481, "91507": [102, 482], "91612243652344": 453, "9163195e": 485, "91719": 482, "918": 67, "918365": 481, "919": 439, "919e": 481, "91e": 489, "92": [142, 459, 460, 487, 494], "920": 456, "92052435e": 483, "9205875e": 485, "921": 457, "9215375e": 485, "92234009259": [417, 473], "924": 457, "9240e": 490, "92490": 460, "925106": 466, "9269494e": 485, "9277492e": 485, "928": 481, "9280475e": 485, "928709": 536, "929": [451, 457], "92960065298276": 503, "93": [67, 123, 125, 459, 460, 487, 494], "93026": 481, "9303": [481, 505], "931": 304, "93128e": 451, "932": 439, "93271046296": 473, "933": 439, "9332549000000": 505, "9343": 451, "935826709880043": 479, "93702": 495, "9382336444241555": 491, "938e": [466, 481], "939": [292, 298], "9391360e": 485, "93988308": 97, "93e": 481, "94": [459, 481, 487, 494, 503, 505], "940e": 481, "940fals": 454, "94111838": 97, "941176470588236": 470, "94186555556": [417, 473], "942": 475, "943": [450, 475, 477], "943282347242818": 503, "944": 493, "944060876": 483, "9441e": 461, "9453950989269149": 491, "9462": 466, "946923": 275, "94722599": 466, "94723": 466, "947e": 460, "948683": 451, "9489822e": 485, "949": 489, "94919430998777": 475, "9499210e": 485, "94e": [466, 481], "95": [33, 67, 154, 160, 162, 163, 164, 166, 220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276, 459, 460, 466, 472, 481, 482, 484, 487, 488, 494, 536, 581], "950": [439, 450, 493], "9500979841335693": 306, "95024543e": 484, "950e": 456, "952": 67, "9529719e": 485, "953": 489, "95421509259": 473, "95451985e": 125, "9546285068162436": 491, "95615": 451, "957": 67, "9580e": 458, "95883": 505, "959198": 481, "959d": [52, 53], "96": [420, 452, 459, 482, 487, 545], "9606540e": 485, "960784313725491": 470, "9607e": 472, "9608912e": 485, "9619812963": 473, "963": 575, "96374320": 462, "965761": 104, "966": 439, "96602": 461, "967546": 460, "9677107409819438": 306, "968": [456, 466], "96814": 505, "96833546296": [481, 495], "968488": 304, "969": 481, "9692e": 452, "96e": 454, "96r": 487, "97": [459, 481, 485, 491, 504], "97003": 505, "97054": 460, "970e": 481, "97116": 466, "971969": 563, "9721952295357764e": 478, "973": 481, "9730e": 465, "97369425926": 473, "974e": 481, "975": 439, "97529": 141, "97596": 460, "976": [439, 450, 486, 493], "97749": 466, "97749371": 466, "9775e": 475, "9776920e": 485, "978": [450, 493], "979": [67, 439, 487], "97934": 460, "97978": 83, "97e": 481, "98": [83, 348, 453, 458, 459, 460, 464, 473, 475, 485, 503], "980": 67, "9803921568627443": 470, "98049": 460, "98149518519": 473, "9816452e": 485, "9818e": 475, "982075849517389e": 490, "98258": 460, "9833462074166": 481, "9834338e": 485, "98359211196148547": 466, "98429": 460, "9845": 451, "9847406e": 485, "984e": 460, "985": [439, 454], "9853e": 472, "985502122122975": 491, "9868440049211211": 503, "9876": 451, "98772": 141, "988": [439, 481, 489], "988409870698051e": 52, "9890": 505, "98e": 481, "99": [348, 459, 460, 461, 472, 483, 504, 505], "99004": 142, "991": 481, "9910796e": 485, "9912648e": 485, "9912712e": 485, "993": 453, "9931": 505, "994": 439, "99467": 142, "994e": 481, "995": 489, "9952623149688797": 503, "996154": 548, "9969731e": 485, "997": 439, "9977859e": 485, "9978": 505, "998": 467, "99848e": 495, "99878762e": 483, "999": [50, 163, 166, 481], "99919925926": 239, "9995e": 472, "99993896484375": 456, "9999912037958": 466, "999999": 481, "99999994": 86, "9999999995": 481, "9999999997835": 453, "99999999999545": 478, "999999999997": 468, "9999999999977": 481, "9999999999978": 474, "9999999999998": 481, "99999999999994": 481, "99999999999999": [459, 481], "99e": 481, "9e": [452, 454, 481, 564], "A": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 104, 105, 108, 109, 110, 123, 124, 125, 133, 136, 141, 142, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 214, 215, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 272, 273, 274, 275, 276, 277, 289, 291, 299, 300, 308, 317, 370, 371, 372, 374, 375, 382, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 419, 421, 425, 426, 427, 428, 429, 432, 434, 435, 438, 439, 440, 441, 443, 445, 446, 447, 448, 451, 453, 458, 460, 464, 466, 467, 470, 473, 474, 475, 476, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 502, 504, 505, 507, 515, 516, 517, 519, 520, 528, 529, 531, 532, 534, 536, 573, 574, 577, 578, 581], "AND": [488, 489], "AS": 410, "And": [281, 381, 384, 399, 401, 407, 412, 453, 454, 456, 457, 464, 468, 470, 475, 482, 484, 487, 488, 490, 494, 503, 504, 505], "As": [83, 308, 338, 381, 382, 384, 389, 393, 394, 395, 397, 399, 407, 408, 410, 417, 422, 441, 451, 452, 453, 456, 457, 458, 460, 461, 462, 466, 468, 469, 473, 474, 475, 478, 479, 480, 481, 482, 484, 486, 487, 490, 492, 495, 497, 503, 505, 519, 528, 581], "At": [264, 395, 398, 407, 408, 411, 425, 468, 487, 494, 524, 577], "But": [381, 386, 389, 395, 400, 408, 411, 417, 441, 456, 457, 484, 492, 494, 503, 579], "By": [19, 20, 26, 50, 65, 87, 91, 101, 102, 105, 109, 110, 122, 126, 130, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 170, 173, 180, 190, 192, 193, 194, 196, 202, 205, 206, 218, 219, 221, 222, 225, 226, 228, 229, 230, 234, 235, 237, 241, 242, 245, 249, 250, 251, 253, 254, 255, 260, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 378, 381, 407, 408, 409, 426, 427, 429, 468, 469, 474, 479, 484, 487, 492, 504, 526, 530, 536, 537, 538, 582], "FOR": [136, 299], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 105, 109, 110, 118, 120, 122, 123, 125, 126, 127, 130, 131, 132, 133, 150, 151, 152, 158, 163, 166, 173, 178, 179, 180, 183, 184, 186, 187, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 234, 235, 236, 237, 238, 239, 240, 242, 248, 249, 250, 251, 252, 253, 255, 256, 261, 262, 263, 265, 266, 268, 269, 270, 272, 276, 277, 290, 292, 296, 298, 305, 311, 326, 380, 381, 382, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 406, 407, 408, 409, 411, 412, 416, 417, 419, 422, 423, 424, 426, 427, 428, 429, 432, 439, 443, 446, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 470, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 499, 503, 504, 505, 507, 514, 515, 517, 519, 529, 531, 532, 537, 542, 574, 578, 579, 581, 582, 583], "IN": [92, 100, 248], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 120, 122, 123, 124, 125, 126, 128, 130, 133, 136, 140, 141, 143, 145, 150, 151, 152, 158, 161, 163, 166, 167, 169, 170, 173, 175, 176, 179, 180, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 288, 305, 308, 320, 321, 326, 367, 370, 374, 375, 376, 377, 381, 382, 383, 384, 386, 388, 389, 394, 395, 397, 398, 399, 402, 403, 404, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 440, 441, 442, 451, 453, 454, 456, 458, 459, 461, 464, 466, 469, 472, 473, 474, 475, 476, 478, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 505, 517, 519, 530, 532, 538, 540, 553, 579, 580, 581, 582], "In": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 84, 87, 88, 90, 91, 94, 101, 103, 104, 108, 124, 125, 150, 169, 192, 194, 197, 200, 206, 214, 216, 276, 288, 321, 381, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 417, 422, 423, 424, 425, 426, 427, 428, 429, 432, 443, 446, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 495, 496, 503, 504, 505, 515, 517, 519, 524, 527, 528, 529, 531, 532, 533, 536, 537, 542, 555, 574, 577, 578, 579, 580, 581, 582, 583], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 102, 105, 109, 110, 111, 114, 116, 123, 141, 150, 154, 161, 162, 163, 164, 166, 176, 179, 183, 184, 189, 193, 194, 196, 198, 201, 202, 205, 206, 208, 218, 219, 222, 225, 226, 228, 229, 230, 235, 239, 241, 242, 245, 249, 251, 253, 260, 264, 265, 267, 268, 269, 270, 273, 277, 290, 294, 296, 297, 316, 330, 335, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 416, 418, 422, 423, 424, 425, 429, 432, 434, 435, 436, 441, 443, 445, 446, 447, 448, 451, 457, 462, 465, 467, 469, 472, 476, 479, 481, 482, 483, 484, 486, 487, 488, 490, 492, 494, 495, 496, 497, 503, 504, 505, 507, 508, 515, 516, 518, 519, 523, 524, 526, 528, 532, 546, 549, 550, 552, 553, 557, 558, 560, 561, 562, 563, 576, 577, 578, 579, 580, 581, 583], "Its": [393, 407, 408, 432, 434, 470, 474, 492, 504, 521, 522, 523, 525], "NOT": 488, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 392, 402, 405, 406, 440, 442, 449, 470, 478, 481, 484, 486, 487, 505], "Not": [105, 109, 110, 195, 201, 203, 389, 564], "ON": [102, 105, 132, 180, 181, 182, 190, 379, 387, 434, 448, 451, 452, 456, 459, 462, 466, 473, 474, 476, 484, 486, 492, 519, 528, 580, 582], "OR": [102, 109, 482, 488, 489], "Of": [381, 384, 417, 464, 482, 487, 495, 579, 582], "On": [59, 168, 174, 175, 178, 290, 297, 304, 381, 382, 387, 389, 396, 397, 410, 412, 413, 414, 415, 436, 464, 465, 484, 499, 581], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 101, 102, 105, 109, 110, 224, 233, 248, 334, 381, 382, 387, 389, 390, 391, 392, 395, 397, 398, 399, 407, 446, 453, 457, 462, 473, 486, 487, 488, 503, 505, 528, 532, 555, 579, 581], "Ones": 308, "Or": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 382, 400, 401, 457, 464, 478, 482, 483, 487, 494, 495, 517], "Such": [393, 485, 523], "THE": [136, 299], "That": [16, 19, 20, 84, 90, 104, 124, 211, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 381, 382, 386, 395, 398, 401, 484, 505, 579], "The": [11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 170, 174, 175, 179, 180, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 215, 217, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 280, 281, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 304, 308, 320, 326, 328, 329, 332, 348, 364, 365, 367, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 418, 421, 422, 424, 425, 426, 427, 428, 429, 432, 434, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 466, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 499, 503, 504, 505, 507, 508, 509, 510, 514, 515, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 536, 538, 540, 541, 542, 545, 551, 553, 555, 564, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584], "Their": 488, "Then": [67, 102, 107, 109, 384, 386, 391, 394, 396, 397, 398, 399, 405, 414, 453, 456, 464, 465, 468, 472, 473, 484, 488, 490, 492, 504], "There": [87, 91, 141, 381, 382, 386, 387, 388, 390, 395, 396, 397, 398, 399, 400, 401, 402, 405, 408, 411, 413, 414, 440, 448, 466, 470, 479, 480, 481, 482, 484, 485, 486, 488, 489, 496, 507, 515, 516, 519, 532], "These": [77, 95, 198, 280, 381, 382, 386, 387, 392, 394, 395, 396, 397, 401, 402, 407, 424, 426, 427, 428, 432, 440, 446, 451, 465, 467, 468, 475, 479, 480, 482, 485, 487, 490, 491, 496, 499, 507, 524, 529, 531, 532, 580, 581, 582], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 100, 104, 108, 122, 124, 126, 130, 192, 204, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 275, 277, 280, 290, 371, 372, 383, 384, 388, 389, 392, 393, 394, 396, 397, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 427, 428, 432, 434, 440, 441, 443, 446, 451, 452, 453, 454, 456, 457, 458, 459, 461, 462, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 499, 503, 505, 515, 516, 517, 520, 524, 526, 528, 529, 536, 577, 579, 580, 581], "With": [83, 243, 381, 390, 391, 407, 428, 441, 492, 515, 581], "_": [102, 109, 128, 235, 255, 381, 395, 405, 407, 456, 459, 462, 480, 481, 484, 489, 492, 515, 528], "_0": [50, 51], "_1": [105, 110, 516], "_2": [105, 110], "__all__": 381, "__array__": 308, "__array_ufunc__": [458, 468, 497, 567], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 320, 387, 392, 409, 428], "__class__": [381, 405, 480, 513], "__dict__": [16, 84, 90, 104, 124, 381], "__enter__": 359, "__eq__": 434, "__exit__": 359, "__fields__": 408, "__getitem__": [391, 392, 393, 448], "__init__": [16, 84, 90, 104, 124, 201, 276, 381, 387, 393, 405, 443], "__int__": 326, "__len__": 391, "__main__": [259, 381, 492, 501, 579], "__name__": [381, 462, 473, 474, 475, 478, 480, 501, 513, 579], "__neq__": 434, "__pydantic_extra__": [16, 84, 90, 104, 124], "__pydantic_fields_set__": [16, 84, 90, 104, 124], "__repr__": [381, 427, 441], "__str__": [381, 393, 408, 424], "__subclasses__": 480, "__version__": 416, "_basemodel__context": [16, 84, 90, 104, 124], "_build": [382, 411, 519], "_check_interv": 446, "_compute_flux_spati": 432, "_covari": [224, 248], "_data": 405, "_dataset": 382, "_dom_class": [464, 472, 487, 503, 504], "_energy_t": 405, "_err": 478, "_errn": [126, 127, 130, 131], "_errp": [126, 127, 130, 131], "_evaluate_timevar_sourc": 446, "_f_cash_root_cython": 303, "_factr": 484, "_fields_set": [16, 84, 90, 104, 124], "_i": 128, "_k": [102, 109, 515], "_l": 515, "_lat": 381, "_lon": 381, "_map": 374, "_model": 123, "_new_attribut": 381, "_old_attribut": 381, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 104, 124], "_phi": 381, "_prior": 409, "_propagate_error": 431, "_reco": 381, "_repr_html_": 381, "_row_index": 69, "_sample_coord_time_energi": 446, "_scan": 484, "_time_group": 405, "_time_t": 405, "_true": 381, "_type": [409, 492], "_types_namespac": [16, 84, 90, 104, 124], "_was_": [16, 84, 90, 104, 124], "_wc": 543, "_weight": 409, "a_": [105, 110, 153, 521, 524, 581], "a_off": 581, "a_on": 581, "a_scan": 492, "aa": [87, 91, 308, 407], "aaguasca": 443, "ab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 64, 65, 83, 88, 118, 135, 136, 144, 153, 206, 214, 216, 245, 280, 281, 290, 297, 299, 480, 481], "abc": [18, 56, 99, 121, 172, 191, 196, 486], "abcmeta": 486, "abdalla2018": [528, 529, 578], "abeysekara": 59, "abil": [405, 492], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 391, 396, 399, 453, 472, 473, 474, 492, 499, 579], "about": [11, 13, 16, 84, 90, 104, 124, 148, 153, 234, 239, 338, 381, 384, 386, 390, 397, 398, 400, 401, 402, 406, 407, 409, 410, 411, 416, 417, 436, 437, 441, 442, 443, 452, 454, 460, 461, 462, 464, 465, 466, 468, 481, 485, 487, 490, 495, 504, 505, 515, 516, 579, 582], "abov": [29, 44, 52, 53, 83, 122, 124, 125, 128, 132, 133, 141, 142, 168, 203, 370, 372, 381, 382, 387, 390, 391, 393, 395, 397, 398, 399, 400, 401, 405, 413, 414, 417, 451, 460, 466, 468, 469, 470, 473, 476, 478, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 496, 503, 513, 515, 516, 523, 526, 532, 578, 579, 580, 581, 582], "abramowski": 153, "abruptli": [381, 406], "abs_path": 316, "absenc": [396, 462, 486, 488, 528, 580], "absolut": [82, 91, 106, 147, 148, 149, 150, 153, 155, 157, 160, 165, 193, 194, 196, 198, 202, 205, 206, 312, 338, 358, 362, 517], "absolute_tim": 583, "absopt": 399, "absorb": [277, 391, 404, 439, 545], "absorbedspectralmodel": [426, 439], "absorbt": 404, "absorpt": [226, 399, 429, 439, 448, 450, 455, 499, 533, 565], "abstract": [56, 57, 59, 99, 121, 136, 164, 172, 177, 191, 193, 196, 205, 290, 299, 392, 428, 531], "abstractsetintstr": [16, 84, 90, 104, 124], "acada": 407, "academ": [137, 304], "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 105, 106, 110, 122, 123, 125, 168, 185, 190, 192, 193, 194, 196, 204, 205, 206, 224, 248, 291, 379, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 433, 437, 446, 448, 451, 452, 457, 458, 459, 462, 466, 469, 482, 486, 487, 495, 515, 531, 537, 555, 580, 581], "acceptance_off": [105, 106, 110, 122, 123, 125, 168, 178, 393, 451, 453, 456, 459, 462, 515, 581], "acceptance_on": [122, 123, 125], "acceptang": 122, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 87, 91, 102, 161, 191, 192, 201, 204, 297, 316, 381, 389, 390, 391, 392, 394, 397, 405, 411, 413, 416, 421, 422, 429, 436, 437, 439, 440, 446, 447, 454, 456, 457, 458, 464, 478, 481, 484, 485, 489, 490, 494, 497, 503, 504, 505, 514, 519, 530, 531, 532, 577], "accessor": 487, "accident": [495, 579], "accomplish": 483, "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 87, 91, 102, 105, 109, 110, 118, 123, 145, 151, 161, 168, 192, 198, 214, 216, 305, 370, 391, 392, 395, 396, 399, 405, 407, 426, 435, 447, 462, 473, 482, 486, 490, 491, 499, 515, 516, 519], "accordingli": [393, 407, 423, 429, 488], "account": [102, 105, 109, 110, 122, 123, 136, 170, 186, 224, 248, 264, 289, 291, 297, 356, 389, 394, 397, 405, 407, 428, 445, 447, 450, 451, 453, 455, 456, 458, 462, 464, 470, 475, 476, 483, 484, 486, 488, 499, 504, 515, 517, 580, 581], "accur": [134, 143, 399, 442, 464, 484, 526], "accuraci": [395, 484, 519], "aceptance_off": 393, "acero": [399, 422, 424, 426, 429, 432, 434, 439, 441, 447, 448], "achiev": [16, 84, 90, 104, 118, 124, 168, 371, 372, 381, 390, 391, 392, 393, 394, 395, 397, 404, 407, 429, 487, 490, 491, 529], "ackgkqpl": 478, "acknowledg": [384, 407, 418], "acquir": 417, "acquisit": 578, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 118, 381, 390, 393, 411, 467, 475, 489, 495, 515, 531, 540, 578], "act": [91, 397, 489, 542], "action": [168, 386, 391, 397, 407, 410, 411, 432, 475], "activ": [91, 297, 384, 398, 412, 413, 415, 416, 417, 426, 443, 479, 519], "actual": [181, 356, 357, 358, 380, 381, 382, 386, 390, 392, 394, 396, 397, 405, 406, 408, 410, 459, 469, 472, 474, 482, 483, 484, 486, 487, 488, 492, 495, 496, 504, 505, 526, 528, 578, 579, 581], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 59, 82, 83, 84, 87, 90, 91, 102, 104, 105, 109, 110, 114, 115, 117, 124, 125, 193, 194, 196, 201, 202, 205, 206, 381, 382, 384, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 405, 407, 421, 422, 423, 425, 426, 427, 429, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 458, 462, 464, 465, 485, 486, 489, 490, 491, 492, 496, 515, 532, 582], "adapt": [118, 168, 211, 390, 391, 394, 395, 400, 401, 403, 404, 407, 410, 417, 422, 423, 425, 426, 427, 429, 430, 432, 435, 438, 439, 441, 443, 445, 446, 447, 448, 482, 485, 487, 488, 526, 529], "adaptiveringbackgroundestim": [178, 387], "adaptiveringbackgroundmak": [171, 426, 529], "adass": 401, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 90, 91, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 123, 124, 125, 147, 148, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 166, 170, 193, 194, 196, 200, 202, 205, 206, 212, 224, 248, 264, 305, 350, 369, 378, 380, 381, 382, 384, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 407, 409, 410, 413, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 459, 464, 465, 468, 472, 473, 476, 482, 485, 486, 487, 488, 490, 492, 494, 505, 509, 510, 519, 532, 547, 579, 582], "add_artist": [490, 536, 537], "add_cbar": [102, 105, 109, 110, 125, 147, 148, 150, 153, 154, 155, 160, 161, 162, 164, 193, 194, 196, 202, 205, 206, 369, 460, 461, 462, 464, 466, 472, 476, 480, 482, 485, 486, 487, 489, 490, 495, 496, 503, 504, 532, 535, 536, 537, 540, 541, 543], "add_column": [87, 91], "add_enabled_unit": [451, 459, 461, 464, 466, 472, 475, 494], "add_index": [87, 91], "add_loc": 381, "add_row": [87, 91], "add_subplot": 369, "addit": [16, 19, 20, 26, 43, 84, 87, 90, 91, 102, 104, 105, 109, 110, 114, 122, 124, 126, 131, 165, 193, 194, 196, 199, 202, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 381, 384, 385, 386, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 405, 406, 407, 408, 411, 412, 413, 414, 423, 424, 426, 428, 429, 432, 433, 440, 441, 443, 446, 447, 448, 454, 458, 470, 476, 481, 482, 483, 484, 487, 489, 490, 492, 494, 495, 504, 505, 515, 517, 519, 526, 531, 532, 576, 582], "addition": [131, 393, 482, 484, 487, 489, 490], "address": [390, 393, 394, 395, 397, 407, 492, 518], "adequ": 201, "adher": 384, "adjac": [145, 198, 432, 474, 487, 528], "adjust": [16, 67, 193, 194, 196, 202, 205, 206, 390, 392, 404, 448, 457, 479, 482, 483, 490, 491, 503, 519, 526, 578], "admit": 401, "adonath": 387, "adopt": [37, 394, 397, 402, 458, 468, 469, 480], "adsab": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 118, 136, 153, 245, 280, 281, 290, 297, 299], "adult": 381, "advanc": [393, 397, 398, 401, 409, 413, 485, 487, 519, 578, 579], "advantag": [389, 395, 398, 405, 432, 487, 492, 555, 579], "advanteg": 393, "advertis": 410, "advic": [381, 407], "advis": [382, 407, 484, 492, 499], "advoc": 381, "aeff": [16, 82, 87, 88, 105, 110, 153, 179, 187, 391, 393, 394, 428, 429, 453, 456, 457, 458, 461, 462, 464, 466, 474, 478, 485, 486, 494, 496, 497, 503, 504, 521, 526, 528, 529, 578], "aeff2d": 152, "aeff_2d": [82, 87, 153, 494, 497], "aeff_3d": 485, "aeff_ev": 485, "aeff_new": 485, "aeff_perc": [179, 453, 456, 457, 466, 474, 478, 486, 496, 528], "aegi": 226, "af": 377, "affect": [136, 381, 389, 393, 395, 406, 423, 424, 435, 444, 452, 492], "affili": [395, 407, 443], "afmhot": [489, 505], "aforement": 407, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 102, 104, 105, 109, 124, 163, 166, 297, 320, 338, 362, 365, 381, 384, 386, 389, 390, 392, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 417, 421, 428, 430, 431, 432, 434, 440, 442, 443, 444, 454, 462, 464, 474, 478, 479, 484, 487, 489, 494, 496, 497, 519, 579, 583], "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 312, 381, 509], "again": [102, 105, 109, 110, 163, 384, 391, 393, 395, 397, 402, 408, 412, 427, 428, 431, 438, 443, 454, 456, 457, 464, 469, 470, 487, 490, 492, 495, 503, 505, 532, 579], "against": [16, 84, 90, 104, 124, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206, 382, 384, 398, 404, 411, 481, 483, 495, 503, 514, 517], "agent": 397, "agglom": 13, "aggreg": 408, "agil": 394, "agn": [137, 295, 395, 456, 473, 475, 479, 494], "agnost": 484, "ago": 388, "agre": [195, 198, 384, 386, 395, 407], "agreement": [381, 384, 402, 476], "aguasca": [434, 443, 444, 445, 446, 448], "aharonian": 467, "ahead": [395, 421], "ahelp": 211, "aim": [381, 390, 391, 407, 464, 468, 480, 491, 507, 578], "air": 494, "ait": [192, 193, 194, 501], "aitoff": 395, "aka": 505, "al": [26, 33, 59, 101, 136, 137, 153, 226, 296, 297, 299, 304, 391, 448, 460, 467, 479, 507, 578], "albert": 578, "albert2007": 578, "alexi": [429, 432], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 118, 133, 168, 211, 290, 381, 387, 393, 394, 395, 400, 408, 424, 429, 437, 438, 439, 448, 460, 479, 483, 484, 496, 517, 531, 577, 581], "alia": [16, 56, 84, 90, 104, 124, 384, 505], "alias": [16, 56, 84, 90, 104, 124], "align": [87, 91, 100, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 192, 193, 194, 196, 198, 202, 204, 205, 206, 381, 448, 485, 488, 490], "alisha": 434, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 102, 103, 104, 105, 107, 108, 109, 110, 122, 123, 124, 125, 126, 130, 131, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 167, 173, 180, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 353, 354, 355, 356, 357, 358, 368, 377, 380, 381, 382, 384, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 456, 457, 458, 461, 462, 464, 466, 467, 468, 472, 473, 475, 476, 478, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 509, 515, 517, 519, 528, 530, 531, 532, 533, 555, 576, 579, 580, 581], "all_quant": [123, 125], "allclos": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 195, 196, 198, 202, 203, 205, 206, 356], "alloc": [194, 202, 206], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 104, 118, 123, 124, 125, 132, 133, 163, 166, 192, 197, 199, 331, 381, 382, 384, 386, 387, 388, 391, 392, 393, 394, 395, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 423, 425, 426, 427, 428, 429, 432, 434, 441, 442, 443, 446, 448, 451, 456, 467, 475, 482, 483, 484, 485, 486, 487, 488, 504, 515, 517, 519, 526, 531, 532, 576, 577, 579, 584], "allow_extra": 197, "allow_pickl": [16, 84, 90, 104, 124], "allowed_channel": [26, 480], "allski": [83, 487], "alma": 400, "almeida": 429, "almost": [380, 382, 384, 395, 495, 505], "alon": 386, "along": [68, 101, 123, 125, 129, 145, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 164, 165, 193, 194, 196, 202, 204, 205, 206, 295, 296, 297, 299, 319, 320, 330, 340, 341, 390, 391, 405, 443, 446, 448, 461, 470, 481, 482, 485, 486, 489, 490, 516, 531, 532, 548, 578], "alpha": [21, 27, 28, 48, 102, 105, 109, 110, 122, 123, 125, 168, 190, 211, 229, 230, 240, 241, 242, 256, 291, 302, 305, 378, 379, 393, 404, 406, 432, 439, 448, 451, 452, 453, 454, 456, 458, 459, 462, 464, 465, 469, 476, 481, 484, 492, 494, 536, 545, 547, 549, 551, 553, 554, 555, 564, 570, 571, 580, 581, 582], "alpha_": [105, 110], "alpha_1": [105, 110], "alpha_2": [105, 110], "alpha_norm": [226, 404, 452, 545], "alphabet": [398, 407, 422, 423, 424, 425, 426, 427, 428, 429, 432], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 124, 211, 272, 273, 274, 276, 381, 387, 388, 389, 392, 393, 394, 395, 396, 398, 401, 402, 403, 405, 408, 410, 411, 441, 452, 454, 458, 460, 462, 469, 476, 480, 481, 482, 487, 488, 489, 490, 494, 495, 496, 505, 507, 532, 543], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 118, 122, 123, 125, 126, 134, 135, 141, 143, 144, 165, 170, 176, 191, 198, 200, 201, 211, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 275, 277, 288, 308, 316, 321, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 425, 426, 427, 428, 429, 432, 440, 441, 442, 446, 451, 452, 453, 456, 457, 458, 459, 460, 462, 464, 466, 467, 468, 469, 470, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 503, 504, 507, 515, 516, 517, 518, 519, 526, 528, 531, 532, 555, 558, 576, 578, 579, 580, 581, 583], "alt": [83, 85, 88, 94, 95, 381, 583], "alt_pnt": 91, "altaz": [83, 85, 94, 156, 381, 485, 583], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 87, 91, 287, 380, 381, 384, 386, 390, 414, 432, 452, 456, 458, 460, 467, 481, 484, 485, 487, 489, 494, 515, 516, 579], "although": [381, 394, 395, 396, 398, 401, 405, 484, 494, 541, 542, 576, 583], "altitud": 453, "alwai": [77, 83, 87, 91, 150, 198, 201, 208, 214, 216, 232, 381, 382, 384, 387, 388, 389, 391, 392, 393, 395, 398, 406, 407, 414, 421, 428, 443, 444, 446, 459, 460, 464, 472, 480, 484, 486, 487, 489, 491, 492, 499, 517, 531, 532], "am": 390, "ambigu": [395, 440], "amend": 384, "among": [82, 87, 91, 102, 105, 109, 110, 134, 143, 397, 401, 402, 404, 409, 429, 484, 578], "amount": [388, 395, 409, 519], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 263, 572], "ampl_2": [154, 485], "ampl_3": [154, 485], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 101, 126, 131, 133, 193, 194, 196, 205, 206, 211, 218, 225, 228, 230, 235, 242, 246, 253, 254, 255, 263, 265, 268, 269, 270, 281, 287, 300, 392, 393, 396, 404, 452, 453, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 478, 479, 481, 482, 483, 484, 489, 490, 494, 495, 503, 504, 505, 517, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 549, 550, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574, 581], "amplitude_err": 478, "amplitude_maximum_signific": 479, "amplitude_maximum_vari": 479, "amplitude_ref": 476, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 102, 103, 104, 105, 108, 109, 110, 111, 114, 116, 123, 124, 125, 126, 127, 128, 130, 131, 133, 140, 141, 142, 148, 150, 151, 152, 153, 155, 158, 161, 163, 165, 166, 169, 173, 176, 178, 181, 183, 184, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 214, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 283, 290, 295, 297, 306, 308, 312, 326, 337, 341, 359, 365, 371, 372, 374, 377, 380, 382, 384, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 417, 418, 421, 422, 425, 426, 427, 428, 429, 432, 434, 435, 436, 439, 440, 441, 443, 444, 446, 447, 448, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 470, 472, 473, 474, 475, 476, 478, 479, 481, 483, 484, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 507, 509, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 578, 579, 580, 581, 582], "anaconda": [398, 412, 413], "analog": [87, 91, 193, 194, 196, 202, 205, 206, 532], "analogi": 402, "analys": [82, 380, 381, 390, 391, 392, 393, 395, 399, 401, 403, 404, 409, 417, 418, 424, 425, 426, 428, 429, 439, 441, 444, 456, 457, 464, 474, 475, 480, 481, 488, 490, 494, 495, 496, 503, 504, 507, 515, 579], "analysi": [6, 16, 57, 67, 70, 72, 74, 83, 102, 104, 105, 109, 110, 115, 117, 151, 152, 158, 163, 166, 175, 179, 380, 381, 382, 385, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 408, 411, 412, 413, 414, 417, 418, 421, 422, 423, 425, 426, 427, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 450, 452, 454, 455, 460, 461, 462, 463, 467, 468, 470, 471, 472, 474, 475, 477, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 504, 505, 507, 517, 519, 520, 524, 526, 527, 528, 529, 532, 558, 576, 578, 579, 581], "analysis3d": 442, "analysis_1": [450, 503, 506], "analysis_1d": 473, "analysis_2": [382, 450, 504, 506], "analysis_3d": [441, 450, 464, 471, 473], "analysis_joint": 464, "analysis_mwl": [450, 465, 471], "analysis_stack": 464, "analysisconfig": [15, 382, 457, 461, 462, 464, 473, 503], "analyt": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 153, 154, 162, 164, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 394, 399, 447, 448, 483, 485, 490, 517, 538, 582], "analyz": [136, 299, 391, 578], "andrea": 394, "andrew": 441, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 102, 105, 115, 117, 118, 122, 129, 133, 147, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 166, 169, 176, 177, 179, 181, 191, 192, 194, 199, 201, 204, 206, 207, 221, 225, 234, 237, 250, 252, 261, 262, 264, 266, 272, 274, 276, 280, 336, 368, 381, 387, 395, 397, 404, 408, 420, 422, 423, 424, 441, 448, 451, 453, 456, 459, 465, 468, 469, 474, 478, 481, 487, 488, 490, 491, 494, 495, 519, 524, 528, 531, 532, 536, 537, 538, 541, 542, 578], "angle_incr": 176, "angular": [23, 102, 105, 115, 117, 128, 151, 152, 158, 163, 166, 169, 194, 201, 204, 206, 225, 234, 237, 274, 312, 315, 381, 397, 445, 458, 469, 476, 524, 525, 578], "angular_extens": 41, "angular_s": 532, "angular_separ": [404, 445, 447, 490], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 104, 120, 124, 130, 152, 175, 193, 194, 196, 201, 202, 204, 205, 206, 308, 331, 366, 380, 381, 382, 384, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 407, 408, 410, 413, 414, 415, 416, 417, 421, 422, 440, 441, 442, 447, 457, 466, 467, 470, 473, 474, 476, 478, 482, 486, 487, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 507, 516, 517, 529, 531, 532, 547, 579, 583], "ann": [23, 440], "anna": 381, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 443, 507], "annoi": [381, 579], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 370, 408, 536], "announc": [381, 386, 388, 395, 397, 400, 402, 404, 406, 407, 410, 411], "annuli": [470, 532], "annulu": [127, 340, 532], "anonym": 384, "anoth": [19, 20, 26, 83, 86, 87, 91, 102, 105, 109, 110, 151, 152, 153, 158, 163, 165, 166, 195, 198, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 381, 395, 396, 397, 399, 401, 402, 405, 408, 412, 413, 415, 417, 426, 441, 476, 482, 487, 488, 490, 532, 579], "another_posit": 528, "answer": [484, 519], "anti": [487, 488], "anticip": 390, "anymor": 443, "anyon": [386, 388, 494], "anyth": [150, 397, 579], "anytim": [384, 423], "anywai": [384, 395], "anywher": [395, 398, 400, 515], "ap": [386, 398, 406], "apart": 396, "apertur": 578, "api": [232, 385, 387, 390, 391, 392, 393, 394, 395, 397, 400, 401, 402, 406, 407, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 432, 436, 440, 441, 450, 453, 456, 457, 460, 466, 468, 474, 482, 487, 488, 489, 490, 493, 494, 495, 503, 505, 506, 517, 518, 526, 576, 577, 578, 579], "apj": [292, 298], "aplpi": 441, "apologis": [421, 422, 441], "app": [87, 91, 411, 417, 440], "appear": [87, 91, 381, 382, 389, 395, 408, 435, 446, 448, 481], "append": [87, 91, 92, 100, 146, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 211, 248, 393, 394, 396, 427, 446, 453, 456, 458, 459, 464, 465, 466, 468, 474, 475, 476, 478, 482, 483, 484, 486, 489, 490, 491, 492, 528], "append_ax": [147, 148, 150, 153, 154, 155, 160, 162, 164, 206, 369], "appendix": [30, 133, 153, 245, 281, 300, 460], "appl": 417, "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 105, 109, 110, 111, 115, 116, 117, 118, 122, 125, 126, 130, 133, 150, 151, 152, 158, 163, 165, 166, 170, 176, 179, 180, 193, 194, 196, 197, 201, 202, 204, 205, 206, 214, 216, 224, 232, 248, 264, 277, 288, 289, 290, 291, 320, 321, 366, 370, 378, 381, 387, 388, 391, 392, 394, 396, 399, 405, 406, 407, 429, 434, 439, 440, 441, 442, 446, 448, 451, 456, 458, 468, 474, 475, 476, 478, 482, 483, 486, 487, 488, 489, 490, 492, 494, 497, 504, 505, 517, 519, 526, 564, 577, 580], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 381, 392, 407, 409, 428, 479, 484, 531, 578], "apply_async": [328, 329], "apply_edisp": 447, "apply_hysteresis_threshold": 488, "apply_irf": [264, 428], "apply_mask": 199, "apply_psf": [392, 425], "apply_standard_scal": 96, "apply_threshold_sensit": 122, "apply_union": 208, "approach": [87, 91, 133, 381, 387, 389, 393, 397, 402, 405, 406, 408, 446, 451, 456, 486, 499, 578, 581], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 192, 193, 194, 196, 205, 206, 308, 316, 382, 458, 462, 464, 478, 487, 579], "approv": [387, 388, 389], "approx": [52, 53], "approxim": [101, 133, 134, 143, 179, 180, 192, 193, 194, 221, 225, 234, 237, 250, 261, 262, 266, 272, 276, 289, 291, 319, 392, 395, 423, 448, 451, 456, 484, 494, 517, 528, 537, 538, 541, 542], "appveyor": 437, "apr": [403, 419], "april": [401, 408, 428], "apt": 414, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 104, 105, 108, 109, 110, 112, 113, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 137, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 173, 174, 179, 180, 181, 186, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 287, 290, 295, 299, 304, 308, 320, 326, 328, 340, 341, 356, 370, 372, 377, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 503, 504, 505, 507, 508, 509, 510, 514, 515, 516, 517, 519, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 536, 537, 545, 555, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584], "arakelian": 296, "arang": [118, 396, 460, 474, 478, 531], "arb": 492, "arbitrari": [199, 201, 202, 392, 404, 427, 440, 468, 482, 487, 492, 531, 532], "arbitrary_types_allow": [16, 84, 90, 104, 124, 408], "arbitrarytypemetadata": 408, "archiv": [407, 497, 504], "arcsec": 176, "arctan": 395, "area": [82, 88, 105, 107, 152, 153, 168, 179, 180, 187, 194, 202, 204, 206, 381, 382, 392, 436, 438, 451, 456, 468, 476, 486, 496, 497, 524, 531, 532, 578], "areasc": [439, 441], "aren": [357, 381, 395, 400, 401, 412, 413, 415], "arf": [106, 107, 110, 197, 198, 201, 202, 456, 532], "arf_ob": 106, "arffil": 106, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 104, 109, 110, 124, 147, 148, 149, 153, 154, 155, 157, 160, 161, 162, 164, 165, 194, 195, 202, 219, 232, 246, 253, 254, 255, 331, 579], "arg_in_kwarg": 381, "argmax": 479, "argmin": 479, "argpars": [386, 579], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 101, 102, 104, 105, 108, 109, 110, 124, 125, 126, 128, 130, 133, 146, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 169, 179, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 209, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 282, 288, 306, 308, 320, 326, 328, 329, 368, 369, 370, 374, 375, 376, 377, 378, 384, 387, 393, 396, 428, 429, 432, 434, 440, 446, 447, 448, 460, 464, 469, 470, 484, 486, 487, 490, 491, 495, 504, 517, 519, 530, 531, 532, 555, 579], "aris": [386, 397, 519], "arithmet": [219, 392, 442, 487, 488, 490, 547], "arjun": [439, 440], "arm": [33, 34, 38, 45, 436], "armstrong": 440, "arnau": [434, 443, 444, 445, 446, 448], "around": [56, 141, 169, 192, 194, 204, 206, 320, 395, 396, 458, 476, 480, 484, 488, 496, 505, 519, 528, 531, 532], "arpit": 439, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 101, 102, 109, 110, 118, 123, 125, 126, 127, 130, 131, 133, 136, 141, 142, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 214, 218, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 268, 269, 270, 274, 275, 276, 277, 278, 288, 289, 291, 293, 299, 304, 308, 319, 320, 321, 335, 336, 337, 341, 374, 375, 380, 381, 394, 395, 399, 405, 408, 417, 427, 440, 443, 445, 447, 458, 459, 468, 469, 476, 478, 481, 482, 484, 485, 487, 489, 490, 492, 494, 496, 497, 505, 531, 532, 539, 564, 567, 580, 581], "array_lik": [102, 109, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 292, 298, 305], "array_shap": [445, 447], "arriba": [433, 436, 437], "arriv": [223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 386, 394, 426, 427, 428, 468, 578, 582], "arrow": 577, "arrowprop": 536, "arrowstyl": 536, "artefact": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "arthmet": 392, "articl": [135, 137, 144, 296, 304, 386, 453, 474], "artifact": [122, 194], "artifici": 468, "artist": [201, 224, 248, 536, 537], "arxiv": [64, 65, 179, 254, 255, 269, 270, 465, 480, 481, 562, 563], "as_arrai": [87, 91], "as_artist": [201, 202, 490, 532, 536, 537], "as_energy_tru": [191, 192, 201, 204], "as_plot_cent": [195, 198, 203, 478], "as_plot_edg": [195, 198, 203], "as_plot_label": [195, 198, 203], "as_plot_scal": 198, "as_plot_xerr": [195, 198, 203], "asanyarrai": 381, "ascii": [87, 91, 125, 381], "asid": 483, "asimov": 492, "asinh": 460, "asinha": 82, "ask": [382, 384, 386, 388, 395, 397, 398, 401, 407, 416, 473, 505, 519, 520, 579], "asmooth": [118, 119, 400, 427, 438, 441], "asmoothestim": 402, "asmoothmapestim": [119, 402, 427, 429, 432, 460, 519], "aspect": [384, 407, 520, 579, 584], "assert": [195, 197, 198, 203, 356, 357, 358, 384, 392, 404, 487], "assert_allclos": 381, "assert_equ": 381, "assert_nam": [195, 197, 198, 203], "assert_quantity_allclos": [381, 436], "assess": [456, 458, 479], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 103, 108, 109, 192, 264, 274, 377, 381, 390, 393, 396, 408, 410, 453, 472, 473, 482, 487, 490, 492, 504, 505, 531], "assist": 397, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 481, 505], "assoc2": [74, 75, 78, 505], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 481, "assoc_prob_lr": 481, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 87, 91, 100, 102, 105, 123, 132, 136, 137, 138, 139, 151, 152, 163, 166, 183, 184, 189, 202, 275, 299, 308, 381, 387, 397, 405, 406, 407, 408, 409, 446, 447, 452, 453, 454, 456, 460, 465, 481, 482, 483, 486, 487, 489, 490, 492, 496, 505, 516, 517, 519, 532, 581], "association_catalog": [67, 481], "association_nam": [67, 481], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 101, 122, 123, 125, 133, 134, 135, 140, 143, 144, 153, 165, 176, 190, 192, 193, 194, 196, 199, 203, 205, 206, 211, 270, 276, 280, 287, 335, 338, 381, 384, 393, 394, 396, 404, 405, 409, 417, 418, 451, 452, 453, 456, 458, 459, 462, 468, 469, 470, 472, 480, 485, 487, 490, 492, 495, 509, 515, 517, 524, 576, 581], "assumpt": [72, 95, 102, 105, 109, 110, 118, 132, 135, 144, 395, 405, 452, 524, 528, 580], "astri": 97, "astrisim": 394, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 126, 186, 193, 194, 196, 205, 206, 259, 277, 381, 382, 393, 400, 401, 405, 424, 433, 437, 441, 443, 447, 458, 480, 485, 487, 494, 508, 509, 511, 512, 513, 516, 578], "astro_dark_matt": [401, 450, 480, 493], "astromodel": 507, "astronom": [13, 395, 402, 440, 578], "astronomi": [11, 281, 380, 391, 395, 399, 411, 418, 439, 453, 456, 462, 466, 486, 494, 519, 528, 529, 576, 577, 578, 579, 580, 581, 583, 584], "astrophys": [6, 23, 312, 396, 519, 577, 578], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 91, 92, 94, 96, 102, 105, 109, 110, 115, 117, 118, 123, 125, 127, 129, 130, 133, 141, 142, 150, 152, 161, 163, 176, 190, 191, 192, 193, 194, 196, 197, 199, 201, 202, 203, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 238, 239, 241, 242, 245, 249, 251, 253, 254, 255, 256, 260, 263, 264, 265, 267, 268, 269, 270, 273, 275, 277, 278, 281, 290, 299, 306, 307, 308, 338, 357, 358, 367, 371, 372, 376, 380, 382, 383, 384, 386, 387, 388, 392, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 417, 418, 420, 424, 425, 426, 427, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 503, 504, 505, 509, 511, 512, 513, 515, 516, 517, 519, 521, 523, 526, 528, 529, 530, 531, 532, 536, 537, 538, 539, 540, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 580, 583], "astropy_healpix": 390, "astropy_help": [381, 422, 423, 424], "astropy_introduct": 423, "astropy_timeseri": 396, "astropy_vers": 381, "astyp": [87, 91], "asymetr": [101, 456], "asymmetr": [122, 126, 127, 130, 131, 133, 134, 143, 399, 422, 428, 447, 456, 492, 503, 517, 537], "asymmetri": 485, "asymptot": [581, 582], "atmospher": [396, 413, 418, 494], "atnf": 440, "atol": [86, 100, 130, 198, 203, 356, 358, 381], "atol_ax": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206], "atom": 397, "atproduction_gamma": 26, "atreye": [393, 396, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 440, 441, 442, 443, 444, 445, 446, 447, 448], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 224, 232, 248, 264, 274, 392, 402, 445, 475, 484, 489, 490, 579], "attempt": [16, 84, 90, 104, 124, 384, 395, 398], "attenu": 452, "attr": 381, "attract": 401, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 178, 179, 180, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 289, 291, 308, 391, 393, 403, 408, 409, 422, 423, 426, 427, 428, 429, 432, 434, 436, 438, 440, 445, 446, 447, 454, 458, 484, 486, 487, 488, 490, 505, 515, 531, 532, 581], "attributeerror": 381, "attrribut": 487, "aug": [394, 397, 398, 400, 419], "august": [388, 394, 397, 400, 466], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410], "authoris": 407, "authorship": 385, "auto": [77, 193, 194, 196, 205, 206, 382, 384, 392, 401, 427, 441, 484, 579], "autocorrel": 136, "autodiff": 399, "autogener": 401, "autograd": [392, 399], "autom": [11, 389, 397, 407, 410, 411, 434, 484, 579], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 104, 112, 113, 124, 126, 130, 133, 221, 225, 234, 237, 250, 261, 262, 266, 272, 276, 380, 381, 382, 384, 388, 389, 391, 392, 398, 401, 403, 407, 410, 421, 422, 428, 458, 466, 484, 487, 579, 583], "automatis": 518, "autopep8": 381, "autoscal": [214, 215, 216, 217], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 101, 102, 105, 109, 110, 122, 123, 125, 126, 130, 131, 133, 134, 143, 146, 167, 173, 179, 180, 198, 211, 214, 216, 220, 221, 225, 226, 234, 237, 250, 252, 261, 262, 266, 272, 274, 276, 281, 332, 369, 381, 384, 387, 388, 389, 390, 392, 393, 394, 395, 398, 399, 401, 408, 411, 412, 413, 414, 415, 416, 422, 426, 427, 428, 432, 435, 439, 441, 443, 446, 448, 452, 456, 457, 460, 478, 483, 484, 486, 488, 490, 494, 495, 499, 503, 505, 507, 509, 510, 516, 518, 519, 521, 522, 523, 525, 533, 545, 577, 579, 581], "available_hdu": 88, "available_irf": 88, "available_method": [170, 179], "available_quant": [123, 125, 460, 483], "available_select": [173, 180], "available_stat_typ": 101, "averag": [19, 102, 105, 109, 110, 173, 180, 183, 184, 186, 187, 432, 452, 453, 456, 515], "averageaz": [468, 469], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 122, 173, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 290, 381, 382, 387, 388, 389, 391, 395, 399, 400, 403, 404, 406, 407, 409, 413, 415, 432, 434, 443, 445, 446, 448, 456, 462, 488, 492, 516, 519, 528, 579], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 289, 291], "awar": [381, 386, 393, 401, 407], "ax": [16, 19, 20, 26, 66, 67, 83, 101, 102, 105, 109, 110, 111, 112, 113, 114, 116, 122, 123, 125, 127, 128, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 173, 180, 183, 184, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 289, 291, 368, 369, 373, 374, 375, 376, 377, 378, 381, 390, 400, 423, 427, 432, 438, 439, 440, 443, 446, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 494, 495, 496, 503, 504, 505, 515, 517, 519, 521, 526, 528, 529, 530, 531, 536, 537, 538, 542, 545, 573, 574, 578], "ax1": [451, 460, 462, 466, 476, 488, 489], "ax2": [451, 460, 462, 466, 476, 488, 489], "ax3": [460, 466], "ax_crab_3fhl": 505, "ax_ebl": 545, "ax_excess": [453, 456], "ax_model": 545, "ax_residu": [101, 109, 110, 453, 456, 457, 458, 476, 503], "ax_s": [457, 503], "ax_spati": [102, 105, 109, 110], "ax_spectr": [102, 105, 109, 110], "ax_spectrum": [101, 109, 110, 453, 456, 457, 458, 476], "ax_sqrt_t": [453, 456], "axcols1": 487, "axcols2": 487, "axel": [390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "axes0": [193, 194, 196, 202, 205, 206], "axes_loc": [147, 148, 150, 153, 154, 155, 160, 162, 164, 206, 369], "axes_nam": [192, 193, 194, 196, 201, 202, 204, 205, 206], "axesimag": [369, 370], "axesn": [193, 194, 196, 202, 205, 206], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 101, 102, 105, 109, 110, 111, 112, 113, 114, 116, 118, 122, 123, 125, 126, 127, 129, 130, 133, 134, 137, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 218, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 245, 248, 249, 251, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 273, 274, 275, 277, 278, 285, 289, 290, 291, 295, 296, 297, 299, 319, 320, 330, 369, 374, 375, 376, 377, 387, 390, 403, 405, 424, 427, 428, 429, 432, 434, 439, 441, 442, 443, 446, 451, 453, 456, 457, 458, 459, 461, 462, 464, 466, 468, 469, 470, 472, 474, 475, 478, 479, 481, 482, 485, 486, 487, 494, 495, 496, 503, 504, 505, 515, 517, 519, 523, 528, 531, 532, 574, 578], "axis0": 531, "axis1": 487, "axis2": 487, "axis_edg": 374, "axis_nam": [101, 102, 105, 109, 110, 123, 125, 137, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 470, 473, 474, 475, 482, 483], "axis_new": [125, 145, 474, 479], "axis_origin": 479, "axis_rgb": 376, "axis_tru": 466, "axisymmetr": 447, "axvlin": [459, 480, 491, 492], "axvspan": [202, 476], "az": [83, 85, 88, 94, 95, 381, 583], "azimuth": 495, "azur": 428, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 104, 124, 153, 211, 348, 381, 382, 395, 404, 407, 410, 456, 467, 480, 481, 484, 487, 488, 490, 495, 505, 511, 515, 532], "b1509": 481, "b_0": [536, 537], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 194, 320, 384, 391, 392, 395, 401, 410, 456, 457, 459, 487, 490, 503, 579], "backend": [93, 101, 120, 126, 127, 130, 131, 133, 169, 210, 211, 212, 213, 287, 323, 328, 329, 380, 390, 392, 422, 441, 442, 446, 453, 454, 456, 457, 458, 464, 465, 466, 476, 478, 483, 484, 495, 503, 504, 519, 576, 577], "backend_default": [127, 130, 133], "background": [16, 67, 82, 83, 88, 93, 102, 103, 105, 106, 108, 109, 110, 113, 114, 118, 122, 123, 125, 132, 147, 148, 149, 159, 168, 170, 171, 173, 174, 175, 176, 178, 179, 180, 186, 226, 232, 274, 282, 289, 291, 300, 301, 302, 303, 305, 377, 381, 387, 390, 393, 394, 395, 397, 401, 402, 405, 413, 418, 421, 422, 423, 425, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 463, 464, 466, 469, 470, 472, 473, 474, 475, 476, 478, 481, 482, 484, 485, 487, 488, 492, 496, 497, 499, 504, 515, 517, 518, 577, 578, 579, 581, 582], "background2d": [148, 149, 159, 428, 435, 443, 445, 447, 522], "background3d": [88, 147, 159, 186, 387, 428, 432, 440, 441, 442, 448, 485, 494, 522], "background_estim": 400, "background_interp_missing_data": 173, "background_map": [274, 392], "background_min": 146, "background_model": [102, 105, 109, 110, 133, 393, 394, 401, 403, 428, 461, 504, 522], "background_oversampl": [173, 180, 486], "background_pad_offset": 173, "background_r": [400, 482], "backgroundconfig": 16, "backgroundestim": [396, 426], "backgroundevalu": 392, "backgroundirf": [147, 148], "backgroundirfmodel": 403, "backgroundmodel": [393, 403, 404, 425, 427, 428, 429, 432], "backgroundtempl": 392, "backport": [388, 406, 410], "backround": 390, "backscal": 202, "backward": [386, 395, 404, 405, 406, 424, 483, 517], "bad": [86, 381, 395], "badli": 411, "balanc": 515, "band": [19, 20, 26, 68, 83, 89, 120, 123, 125, 128, 151, 152, 155, 158, 163, 166, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 387, 399, 400, 404, 405, 413, 421, 454, 456, 457, 465, 466, 467, 476, 480, 481, 490, 495, 497, 514, 515, 517, 577], "bandshdu": 487, "banner": 411, "bar": [15, 82, 87, 91, 102, 105, 109, 110, 118, 130, 133, 147, 148, 206, 211, 235, 297, 329, 375, 398, 432, 435, 436, 442, 447, 476, 492, 519, 552], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 289, 291, 307, 316, 317, 320, 326, 328, 330, 355, 368, 376, 381, 382, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 404, 409, 411, 413, 414, 421, 423, 424, 426, 428, 429, 432, 434, 437, 438, 439, 440, 441, 447, 448, 452, 456, 458, 459, 461, 464, 465, 466, 467, 468, 470, 476, 479, 481, 483, 485, 487, 488, 490, 491, 492, 494, 495, 504, 505, 507, 516, 517, 519, 529, 531, 543, 553, 577, 578, 580, 581], "base_dir": [82, 87, 316, 494, 496, 497, 507], "baselin": [82, 83, 240, 494], "basement": 423, "basemodel": [16, 84, 90, 104, 124, 408, 464], "baseradi": 249, "bash": [413, 415, 579], "basi": [386, 387, 397, 400, 410, 434, 436, 476, 480], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 105, 110, 125, 239, 384, 387, 391, 392, 393, 394, 395, 397, 401, 405, 408, 417, 429, 439, 441, 450, 453, 456, 458, 471, 473, 479, 480, 481, 488, 499, 505, 507, 509, 510, 517, 528, 531, 578, 579], "basicconfig": [16, 466, 501], "bayesian": 399, "bayesian_block": 479, "bayesian_edg": 479, "baysian": 390, "bb": [87, 91, 407], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [148, 152, 153, 154, 163, 451, 459, 472, 475, 485, 494], "becam": 388, "becaus": [16, 84, 90, 104, 124, 193, 194, 196, 200, 202, 205, 206, 381, 382, 384, 386, 388, 392, 393, 395, 396, 400, 404, 405, 408, 411, 432, 434, 448, 453, 454, 457, 470, 474, 476, 486, 487, 488, 489, 494, 495, 496, 503, 504, 505, 515, 519, 579, 582], "becom": [381, 389, 391, 392, 395, 400, 408, 468, 474, 490, 519, 579, 582], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 104, 122, 123, 124, 125, 165, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 308, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 409, 412, 414, 428, 429, 432, 434, 435, 441, 442, 443, 444, 445, 446, 447, 448, 452, 457, 467, 474, 475, 476, 478, 483, 487, 490, 491, 494, 496, 503, 516, 531, 564], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 104, 123, 124, 193, 194, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 320, 376, 381, 382, 384, 386, 388, 389, 390, 391, 395, 396, 397, 399, 400, 406, 410, 411, 417, 435, 441, 452, 457, 459, 473, 474, 483, 484, 487, 490, 496, 499, 503, 555, 579], "begin": [52, 87, 91, 102, 109, 123, 125, 133, 401, 404, 407, 456, 458, 487, 490, 536, 541, 542, 546, 562, 581], "behav": [381, 391, 446, 461, 582], "behavior": [16, 84, 87, 90, 91, 95, 104, 124, 405, 431, 435, 446, 448], "behaviour": [356, 381, 403, 404, 429, 434, 440, 447, 474, 488, 495, 496, 515, 580], "behind": 478, "being": [122, 132, 194, 381, 386, 389, 395, 402, 405, 411, 458, 467, 479, 488, 508, 519, 532, 579], "belief": 492, "believ": [416, 492], "belong": [86, 405, 428], "below": [52, 53, 87, 91, 192, 196, 203, 204, 370, 371, 372, 376, 378, 382, 384, 385, 390, 391, 395, 397, 398, 401, 404, 405, 407, 408, 409, 411, 412, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 456, 460, 476, 481, 484, 486, 488, 490, 491, 492, 494, 495, 516, 519, 537, 581], "benchmark": [397, 407, 411], "benefit": 398, "benn": 397, "berg": 578, "berge2007": [395, 528, 529, 578], "bernet": 447, "besancon": 509, "besid": [122, 133, 395, 396, 405, 457, 458, 487, 495, 503, 504, 532], "best": [67, 71, 74, 75, 78, 80, 101, 123, 125, 126, 127, 130, 131, 141, 212, 213, 287, 289, 291, 374, 381, 384, 391, 394, 399, 407, 413, 415, 452, 454, 456, 457, 458, 461, 464, 467, 476, 481, 483, 484, 492, 503, 517, 519, 521, 545, 551, 554, 555, 559, 581, 582, 583], "best_fit_model": 458, "beta": [27, 28, 48, 211, 240, 241, 242, 265, 404, 406, 428, 452, 454, 458, 465, 481, 484, 547, 553, 554, 555, 560, 570], "better": [381, 384, 386, 387, 388, 389, 390, 394, 395, 400, 401, 402, 405, 422, 439, 440, 464, 465, 468, 476, 478, 484, 487, 488, 495, 515], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 105, 110, 120, 122, 123, 125, 127, 128, 130, 141, 142, 154, 160, 162, 163, 164, 166, 176, 190, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 218, 219, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 245, 249, 251, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 273, 275, 277, 278, 281, 287, 305, 338, 371, 372, 379, 381, 382, 389, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 405, 406, 408, 409, 410, 419, 429, 432, 435, 446, 451, 458, 460, 465, 467, 470, 475, 476, 479, 483, 484, 486, 487, 488, 489, 492, 495, 496, 505, 515, 517, 524, 525, 528, 537, 538, 578, 581, 583], "bewar": [275, 453, 474], "bexcub": 197, "bexpcub": [192, 193, 194, 196, 205, 206, 487], "beyond": [197, 395, 405, 408, 428, 486, 507], "bfg": 484, "bgstat": 438, "bi": [439, 442], "bia": [96, 150, 151, 155, 179, 440, 446, 486, 492, 523], "bias": [458, 580], "bias_energi": 150, "bias_perc": 179, "bibliographi": 578, "biederbeck": [409, 447], "big": [388, 391, 398, 410, 442, 495, 580, 582], "bigger": 194, "biggest": 400, "billion": 381, "bimod": 31, "bin": [19, 20, 26, 83, 86, 88, 102, 105, 108, 109, 110, 112, 113, 118, 120, 122, 123, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 153, 155, 158, 161, 163, 165, 166, 173, 175, 176, 177, 179, 181, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 283, 292, 298, 299, 305, 374, 376, 379, 387, 392, 393, 394, 395, 397, 400, 401, 405, 412, 413, 423, 424, 426, 427, 429, 431, 432, 434, 437, 438, 439, 440, 441, 446, 447, 448, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 515, 517, 519, 523, 526, 527, 577, 578, 579, 580, 582], "bin_cent": 476, "bin_edg": 476, "bin_volum": [197, 201, 204, 532], "bin_width": [195, 198, 203, 476], "binari": [204, 206, 389, 395, 398, 407, 411, 432], "binary_dil": [206, 488], "binary_erod": [206, 488], "binary_eros": [206, 432], "binary_structur": 204, "bincent": 299, "bind": 384, "binder": [389, 410, 440, 443, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "binlik": 125, "binned_likelihood": 126, "binneddataaxi": [423, 439], "binnedtimeseri": [125, 396], "bins_axi": 206, "binsiz": [16, 457, 461, 462, 464, 473, 503, 504], "binsize_irf": [16, 457, 461, 462, 464, 473, 503], "binsz": [102, 105, 109, 110, 111, 116, 152, 161, 163, 173, 176, 177, 181, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 397, 456, 466, 467, 468, 469, 472, 476, 480, 482, 485, 486, 487, 488, 490, 495, 496, 504, 526, 528, 529, 531, 532, 535, 537, 538, 539, 540], "binsz_irf": [102, 105, 109, 110, 114, 482, 486, 519], "binsz_irf_default": [102, 105, 109, 110, 486], "binsz_wc": [201, 202], "bintabl": [192, 193, 194, 196, 205, 206], "bintablehdu": [83, 86, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 197, 198, 204, 205, 206, 468, 487, 515], "birth": [29, 30, 36, 50, 51, 52, 53], "bit": [83, 141, 382, 384, 388, 389, 395, 399, 400, 408, 448, 476, 487, 532], "bitbucket": 497, "bitpix": 487, "bkg": [16, 82, 87, 88, 102, 106, 107, 109, 110, 147, 148, 149, 179, 186, 232, 403, 427, 429, 434, 448, 451, 456, 457, 461, 462, 464, 465, 468, 469, 472, 476, 482, 485, 486, 489, 494, 496, 497, 503, 504, 515, 522, 578, 580, 581, 582], "bkg_": [102, 109], "bkg_2d": [87, 147], "bkg_3d": [82, 87, 148, 494, 497], "bkg_err": 476, "bkg_maker": [403, 453, 456, 458, 466, 474, 478, 528], "bkg_model": [393, 403, 409, 464, 468, 469, 472, 489, 504, 539], "bkg_ob": 106, "bkg_sy": 132, "bkg_syst_fract": [132, 451], "bkg_syst_fraction_sensit": 122, "bkgfile": 106, "black": [109, 110, 370, 371, 378, 399, 441, 443, 451, 476, 480, 486, 491, 528, 564], "blackground": 451, "blanch": [440, 441], "blanklin": [239, 417, 517, 532], "blazar": [304, 452, 478], "blind": [443, 519], "bll": 505, "blob": 420, "block": [382, 384, 387, 394, 401, 411, 420, 440], "block_reduc": 441, "blue": [101, 102, 105, 109, 110, 371, 452, 456, 462, 464, 467, 491, 528, 564], "blur": 33, "board": [390, 401], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 381, "boller": 479, "boni": [432, 435], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 122, 123, 124, 125, 126, 130, 131, 133, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 173, 180, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 275, 276, 290, 305, 308, 317, 320, 321, 338, 344, 347, 349, 350, 352, 378, 381, 395, 466, 481, 486, 487], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 123, 126, 127, 130, 131, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 211, 224, 248, 264, 397, 429, 464, 481, 487, 488, 489], "boost": 468, "bootstrap": [87, 91], "border": 91, "bose": 423, "bot": 387, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 150, 151, 152, 158, 163, 166, 190, 193, 194, 196, 198, 200, 201, 202, 204, 205, 206, 214, 216, 381, 386, 387, 392, 393, 394, 395, 396, 401, 406, 410, 422, 426, 428, 429, 432, 435, 457, 458, 468, 472, 482, 483, 487, 488, 489, 491, 492, 516, 517, 519, 531, 532, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 581], "bother": 461, "bottom": [401, 403, 452, 468, 473, 474, 475, 479, 481], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 105, 109, 110, 123, 125, 126, 127, 130, 191, 192, 198, 201, 203, 204, 211, 218, 219, 222, 223, 224, 226, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 245, 248, 249, 251, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 273, 274, 275, 277, 278, 303, 390, 487, 492], "boundari": [198, 204, 276, 409, 437, 448, 484, 490, 531], "boundary_mask": [204, 488], "boundary_typ": 198, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 381, 485], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 102, 105, 127, 128, 201, 204, 206, 340, 341, 390, 395, 399, 405, 439, 488, 490, 532], "bpl": [218, 404, 490], "bpwl_norm": 404, "bracket": [150, 211, 444, 446], "brake": 51, "branch": [381, 384, 388, 395, 406, 411, 420], "branchnam": 381, "bratio": 507, "break": [218, 265, 387, 395, 397, 406, 426, 427, 428, 448, 546, 560], "brent": 460, "brentq": [19, 20, 26, 125, 211, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 288], "breviti": [464, 519], "brief": 583, "briefli": [496, 497], "bright": [68, 127, 264, 280, 462, 473, 474, 488, 490, 513, 528], "brighter": 468, "brightest": 481, "brigitta": [398, 422, 424, 426, 428, 437, 438, 439, 440, 441, 442, 443, 448], "bring": 386, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 193, 194, 196, 199, 202, 205, 206, 264, 320, 448, 469, 485, 487, 531], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [218, 265, 407, 410, 450, 478, 533, 565], "brokenpowerlaw": 404, "brokenpowerlawspectralmodel": [259, 265, 404, 429, 490, 546], "brought": 448, "brown": [137, 479], "brown2013": 137, "brows": [87, 91, 382, 417, 505], "browser": [87, 91, 384, 411, 417, 437, 440, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 501, 503, 504, 505, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "bruno": [407, 424, 426, 429, 432, 435, 439, 440, 441, 443, 444, 445, 446, 447, 448], "br\u00fcgge": [440, 441], "bsd": 407, "bst": [87, 91], "buchner": 432, "budget": 519, "buffer": 359, "bug": [381, 384, 387, 388, 406, 407, 410, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 444, 445], "bugfix": [388, 390, 406, 439, 440], "build": [16, 84, 90, 104, 124, 192, 226, 381, 387, 388, 389, 394, 395, 397, 401, 405, 406, 407, 408, 410, 428, 434, 443, 448, 460, 464, 476, 486, 488, 516, 519, 579], "build_doc": [345, 382, 384, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 543, 551, 567], "built": [10, 180, 226, 348, 365, 380, 381, 382, 392, 393, 395, 397, 398, 400, 408, 411, 418, 441, 446, 481, 489, 495, 499, 515], "builtin": 505, "bullet": 386, "bump": [395, 439], "bunch": [103, 108, 382, 579], "bundl": [101, 102, 105, 109, 110, 390, 393, 411, 433, 441, 466, 482, 486, 515, 532, 577, 578], "bunit": [367, 441, 487], "bureaucrat": 386, "burkert": [17, 507], "burst": 479, "butterfli": [440, 484, 505], "button": [443, 487], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 90, 104, 124], "byte": [16, 84, 87, 90, 91, 104, 124, 326, 359, 381], "bytearrai": [16, 84, 90, 104, 124, 326], "bytestr": [87, 91], "b\u00fchler": 420, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 199, 209, 228, 268, 292, 298, 308, 348, 380, 381, 398, 413, 414, 416, 433, 440, 456, 462, 476, 478, 480, 484, 492, 494, 495, 507, 531, 550, 561, 579, 580, 582], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 101, "c_": 209, "c_0": [191, 192, 201, 204], "c_i": [191, 192, 201, 204], "c_n": [191, 192, 201, 204], "cabot": 448, "cach": [87, 88, 91, 100, 102, 105, 109, 110, 274, 316, 317, 390, 391, 393, 400, 403, 411, 425, 429, 432, 447], "cahil": 434, "cal_gen_92_002": [150, 198], "cal_gen_92_002_summari": 150, "calcul": [13, 15, 19, 20, 26, 96, 105, 110, 136, 137, 138, 139, 179, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 260, 265, 267, 268, 269, 270, 273, 276, 277, 294, 296, 297, 305, 307, 330, 363, 371, 372, 391, 394, 422, 428, 432, 433, 434, 440, 445, 447, 451, 476, 479, 480, 483, 492, 503, 504, 507, 519, 578, 582], "caldb": [82, 148, 150, 152, 153, 154, 163, 198, 434, 451, 459, 468, 469, 472, 475, 485, 494], "calendar": [406, 410], "calib_vers": [495, 505], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 101, 102, 104, 105, 109, 110, 124, 136, 137, 138, 139, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 175, 191, 192, 201, 204, 211, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 233, 234, 235, 237, 241, 242, 243, 245, 249, 250, 251, 252, 253, 254, 255, 257, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 279, 320, 332, 353, 359, 367, 370, 378, 381, 382, 384, 386, 387, 390, 393, 394, 395, 396, 397, 399, 401, 403, 405, 407, 409, 411, 413, 417, 428, 432, 446, 456, 457, 466, 481, 482, 483, 484, 486, 487, 490, 495, 497, 503, 504, 505, 515, 519, 528, 529, 530, 531, 532, 579, 580, 581, 582], "callabl": [16, 45, 84, 90, 104, 124, 283], "callback": [169, 579], "caller": [381, 392], "camera": [475, 485, 486], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 102, 104, 105, 108, 109, 110, 114, 118, 122, 123, 124, 125, 130, 131, 133, 134, 141, 143, 148, 153, 161, 163, 166, 170, 176, 179, 191, 192, 193, 194, 196, 198, 199, 201, 202, 203, 204, 205, 206, 208, 211, 215, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 234, 235, 237, 239, 241, 242, 245, 248, 249, 250, 251, 253, 254, 255, 260, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 288, 290, 295, 308, 320, 321, 326, 329, 338, 357, 359, 374, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 424, 426, 428, 429, 432, 434, 435, 439, 440, 441, 442, 443, 446, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 503, 504, 505, 507, 509, 510, 515, 516, 517, 519, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 553, 555, 564, 574, 576, 577, 578, 579, 580, 581, 582], "candel": 226, "candid": [406, 434, 481], "candl": [281, 578], "cannot": [16, 67, 84, 87, 90, 91, 95, 104, 112, 113, 123, 124, 125, 208, 298, 348, 378, 384, 394, 395, 446, 485, 489, 490, 517, 532], "cap": [51, 54], "capabl": [391, 495, 507], "capsiz": 492, "captur": [381, 397], "car": [102, 105, 109, 110, 173, 204, 205, 206, 224, 248, 395, 424, 466, 485, 486, 487, 504, 505], "card": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 150, 151, 152, 158, 163, 166, 193, 194, 196, 200, 202, 205, 206, 487], "care": [123, 125, 308, 381, 390, 397, 406, 453, 458, 464, 487, 579], "carefulli": [407, 468, 469, 492], "carina": [33, 38], "carlo": [399, 524, 578], "carri": [396, 404, 406, 408, 432, 454, 504], "carr\u00e9": 204, "cartesian": [41, 46, 194, 205, 206, 311, 313, 445, 505, 531], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 150, 169, 181, 192, 194, 200, 201, 204, 206, 211, 214, 216, 237, 249, 272, 274, 276, 288, 298, 321, 338, 376, 381, 382, 384, 386, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 413, 421, 422, 425, 428, 434, 435, 440, 446, 447, 451, 453, 456, 457, 458, 459, 461, 462, 464, 468, 469, 472, 473, 475, 476, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 497, 499, 503, 505, 514, 517, 518, 519, 529, 532, 536, 537, 538, 541, 542, 546, 555, 562, 577, 579, 581], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [102, 105, 109, 110, 173, 293, 298, 381, 393, 432, 459, 461, 464, 472, 475, 482, 486, 489, 492, 503, 504, 515, 578], "cash1979": [578, 581], "cashcountsstatist": [417, 447, 579, 581], "cast": 91, "cat": [66, 67, 79, 389, 411, 439, 440, 454, 481, 490, 514, 578, 579], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 122, 126, 395, 401, 420, 424, 426, 428, 432, 433, 434, 437, 438, 439, 440, 441, 443, 447, 448, 450, 452, 454, 460, 465, 482, 490, 493, 495, 499, 509, 543, 577, 578], "catalog_3fgl": 454, "catalog_3fhl": [454, 481], "catalog_3fhl_bright": 481, "catalog_4fgl": 481, "catalog_4fgl_roi": 481, "catalog_gammacat": [454, 481], "catalog_hgp": 481, "catalog_registri": [454, 481, 488], "catalogimageestim": 441, "catalogu": [78, 432, 439], "catch_warn": 519, "categori": [381, 392, 405, 432, 448, 488, 490, 533], "caus": [388, 395, 441, 444, 519], "cautious": 467, "caveat": [211, 304, 447, 537], "cax": 485, "cb98": 48, "cbar": 369, "cbar_kw": 375, "cbarlabel": 375, "cc": [390, 395, 397, 400, 402, 404, 407, 409], "ccube": [192, 193, 194, 196, 197, 198, 204, 205, 206, 487], "cd": [381, 382, 384, 397, 413, 414, 415], "cdelt": [204, 206], "cdelt1": 487, "cdelt2": 487, "cdf": [330, 394, 468, 484], "cdot": [51, 52, 53, 54, 102, 109, 253, 268, 404, 490, 515, 536, 541, 542, 546, 549, 550, 557, 558, 560, 561, 562, 563, 568, 569, 570, 572, 580], "celesti": [487, 531, 536, 540, 583], "celfix": 543, "cell": [389, 417, 443, 465, 476, 487, 494, 495, 505], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 102, 105, 109, 110, 112, 113, 123, 125, 127, 128, 129, 133, 150, 151, 152, 153, 154, 155, 158, 162, 163, 164, 166, 173, 176, 177, 179, 180, 181, 183, 184, 186, 187, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 220, 221, 224, 225, 234, 237, 248, 250, 252, 261, 262, 264, 266, 272, 274, 276, 310, 314, 340, 381, 382, 395, 397, 404, 405, 422, 423, 432, 434, 447, 451, 453, 456, 458, 459, 460, 461, 462, 464, 466, 468, 469, 470, 474, 475, 476, 478, 480, 485, 486, 487, 488, 489, 490, 494, 495, 504, 505, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 536, 537, 540], "center_coord": [191, 192, 197, 201, 204], "center_pix": [191, 192, 201, 204], "center_ski": 532, "center_skydir": [191, 192, 201, 204, 486, 487, 495, 496, 526, 528, 529], "centr": [480, 488, 507], "central": [393, 402, 454, 505], "cern": 507, "certain": [50, 83, 87, 91, 211, 295, 380, 395, 397, 399, 405, 451, 480, 486, 487, 495, 514, 532], "certainli": 384, "certif": 407, "certifi": 407, "cfa": [211, 484], "cff": 410, "cg": 511, "ch": 53, "chain": [169, 394, 397, 426, 486, 519, 529, 578], "chainer": 399, "chakraborti": [438, 439], "challeng": [388, 390, 394, 439, 462, 464, 466, 494], "chanc": 386, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 104, 123, 124, 125, 192, 201, 204, 218, 219, 222, 226, 228, 229, 230, 235, 239, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 356, 366, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 403, 405, 406, 407, 410, 411, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 438, 439, 440, 441, 442, 444, 449, 458, 459, 460, 466, 468, 469, 473, 478, 479, 482, 483, 484, 488, 490, 492, 494, 503, 515, 519, 526, 528, 532, 543, 551, 579], "changelog": [381, 410, 433, 441], "channel": [19, 20, 26, 380, 383, 384, 398, 440, 469, 480, 487, 497, 507], "channel0": 507, "channel1": 507, "channel_registri": [19, 20, 26], "chapter": 480, "charact": [87, 91, 381, 489], "character": [297, 405, 468], "characterist": [21, 25, 27, 51, 52, 53, 54, 137, 295, 392, 446, 479, 578], "charg": [407, 410, 555], "chatti": [381, 466], "cheat": 416, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 102, 105, 106, 109, 110, 123, 125, 150, 151, 152, 158, 163, 166, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 215, 217, 224, 248, 264, 304, 355, 357, 384, 397, 403, 407, 410, 411, 413, 414, 415, 418, 427, 432, 440, 448, 454, 472, 478, 485, 499, 507, 519, 523, 532, 576, 579, 580], "check_limit": [214, 215, 216, 217], "check_random_st": 381, "check_tutorials_setup": [451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "checker": [438, 441], "checklist": 411, "checkout": [381, 384, 410, 423, 464, 468, 490], "checksum": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 150, 151, 152, 158, 163, 166, 193, 194, 196, 200, 202, 205, 206, 212, 224, 248, 344, 347, 350, 447, 465, 495], "chen": 441, "cherenkov": [153, 394, 413, 418, 453, 456, 462, 473, 486, 494, 496, 528, 529, 578], "cherri": [381, 388, 395, 406], "chi": [294, 396, 580, 581, 582], "chi2": [101, 135, 144, 393, 423, 456, 467, 475, 484, 515, 581], "chi2assym": 426, "child": 391, "children": [464, 472, 487, 503, 504], "chime": 384, "chisq": 294, "chisquar": 294, "chmod": 579, "choic": [136, 394, 398, 400, 407, 456, 457, 459, 461, 484, 496, 503, 520, 576, 579], "choos": [45, 77, 191, 192, 195, 197, 198, 201, 204, 277, 322, 393, 395, 397, 401, 413, 415, 432, 454, 456, 460, 464, 466, 475, 482, 484, 486, 487, 489, 490, 491, 495, 504, 519, 579], "chose": [468, 495, 496, 581, 583], "chosen": [26, 150, 163, 166, 192, 193, 194, 202, 205, 206, 224, 234, 248, 381, 384, 396, 397, 400, 457, 474, 486, 487, 491, 492, 496, 503, 517, 527, 528, 532], "christoph": [386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 420, 421, 422, 423, 424, 425, 426, 427, 433, 436, 437, 438, 439, 440, 441, 442], "chrome": [87, 91], "chromei": 434, "chunk": [152, 163, 166], "chunk_siz": [152, 163, 166], "ci": [381, 384, 388, 407, 411, 426, 432, 434, 437, 443], "circl": [83, 181, 378, 382, 395, 434, 456, 466, 475, 480, 486, 488, 491, 494, 504, 505, 516, 526, 528, 529, 532], "circle_area": 382, "circleannulusskyregion": [261, 262, 528], "circledast": 515, "circlepixelregion": 395, "circleskyregion": [102, 105, 109, 110, 175, 176, 180, 204, 225, 382, 395, 451, 453, 456, 458, 459, 462, 464, 466, 468, 469, 474, 478, 480, 482, 486, 488, 489, 504, 526, 528, 529, 532], "circular": [91, 102, 105, 180, 192, 194, 204, 392, 400, 402, 453, 458, 482, 491, 528, 532], "circumv": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "cirelli": [26, 507], "citat": 410, "cite": [384, 407], "cl": [16, 84, 90, 102, 104, 109, 124, 408], "clabel": 484, "clang": 417, "clarif": 386, "clarifi": [405, 446], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 289, 291, 316, 317, 320, 328, 330, 355, 368, 384, 387, 390, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 409, 413, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 451, 454, 456, 457, 458, 459, 460, 461, 462, 466, 468, 469, 472, 473, 476, 481, 482, 483, 484, 485, 486, 487, 490, 492, 494, 495, 496, 503, 505, 510, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 527, 529, 530, 531, 532, 533, 555, 564, 576, 577, 578, 579, 584], "class1": 481, "class2": 481, "classic": [390, 399, 413, 422, 453, 456, 462, 466, 482, 486, 517, 519, 528, 529, 578, 581], "classifi": 496, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 101, 102, 104, 105, 109, 110, 123, 124, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 408], "classproperti": 432, "classvar": [16, 84, 90, 104, 124], "claudio": [445, 447, 448], "claus": [381, 407], "clean": [381, 382, 384, 389, 390, 395, 397, 399, 420, 422, 423, 424, 425, 426, 427, 428, 429, 432, 439, 440, 441, 442], "cleaner": 443, "cleanup": [388, 400, 411, 420, 425, 426, 431, 432, 433, 437, 438, 440, 448], "clear": [92, 100, 200, 248, 381, 386, 388, 392, 395, 396, 400, 401, 402, 440, 467, 583], "clearer": 425, "clearli": [137, 381, 386, 387, 395, 398, 406], "cli": [11, 397, 442, 577], "click": [380, 397, 398, 417, 425, 440, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 579], "clip": [19, 20, 26, 191, 192, 195, 197, 198, 201, 203, 204, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 276, 277, 320, 425, 426, 460], "clockwis": [225, 234, 237, 536], "clone": [384, 414, 441], "close": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 276, 356, 357, 358, 390, 395, 410, 435, 446, 447, 448, 484, 564], "closer": 505, "closest": [118, 122, 126, 130, 133, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 483, 488, 517], "cloud": [411, 499], "cluster": [6, 96, 306, 307, 394, 446, 447, 450, 493, 499, 516, 519], "clutter": [464, 519], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 101, 125, 131, 133, 218, 222, 228, 230, 235, 242, 246, 253, 255, 264, 265, 268, 269, 270, 280, 366, 392, 404, 452, 453, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 472, 474, 475, 476, 480, 481, 483, 484, 490, 492, 494, 495, 503, 505, 512, 513, 517, 519, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 578], "cm2": [51, 54, 67, 107, 125, 142, 153, 206, 281, 366, 451, 452, 454, 456, 457, 459, 460, 464, 465, 466, 468, 469, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 487, 489, 490, 492, 495, 503, 504, 505, 517, 532, 548, 551, 554, 559, 564], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 480], "cm5": 480, "cmap": [102, 105, 109, 110, 371, 372, 458, 464, 480, 487, 489, 495, 496, 503, 504, 528], "cmb": 555, "co": [53, 199, 406, 407, 451, 536, 537, 538], "coadd": [193, 194, 196, 202, 205, 206], "coars": 482, "coarser": [198, 203, 482], "codaci": 411, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 150, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 376, 384, 385, 386, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 414, 417, 420, 423, 424, 426, 427, 428, 429, 432, 434, 437, 438, 439, 440, 441, 443, 446, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 507, 519, 526, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 579], "codebas": [382, 398, 420, 439, 441], "codemeta": 434, "codespel": 432, "codestyl": 384, "coeffici": [128, 240, 245, 545], "coerce_numbers_to_str": 104, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coher": 448, "coincid": 479, "col": [87, 91, 432], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 375, "collabor": [77, 371, 372, 386, 388, 390, 394, 434, 467, 495, 578], "colleagu": [384, 579], "collect": [200, 248, 381, 383, 408, 411, 439, 440, 457, 482, 489, 507, 516, 520, 524, 578, 583], "collis": 50, "colnam": [87, 91, 193, 194, 196, 202, 205, 206, 495, 505], "color": [101, 109, 110, 147, 148, 206, 370, 371, 372, 375, 378, 382, 451, 452, 454, 456, 457, 458, 459, 460, 462, 464, 466, 467, 470, 473, 476, 480, 483, 484, 486, 489, 491, 492, 519, 528, 532, 536, 537, 555, 564], "colorbar": [125, 147, 148, 150, 153, 154, 155, 160, 161, 162, 164, 206, 369, 375, 478, 484, 487], "colorblind": 519, "colorblind10": 519, "colormap": [370, 371, 372, 420, 433, 505], "colormap_hess": [402, 584], "colormap_milagro": 584, "colour": 443, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 103, 108, 123, 125, 128, 141, 147, 148, 150, 174, 193, 194, 195, 196, 197, 198, 202, 203, 205, 206, 275, 297, 306, 351, 352, 353, 354, 374, 375, 378, 379, 381, 394, 396, 405, 443, 446, 447, 451, 469, 476, 481, 487, 490, 494, 516, 519], "column_nam": 485, "column_prefix": 198, "columnclass": [87, 91], "columnspac": 378, "com": [135, 137, 144, 304, 335, 336, 348, 384, 401, 410, 411, 414], "combin": [99, 101, 102, 105, 109, 110, 134, 143, 145, 179, 187, 193, 194, 196, 201, 202, 205, 206, 219, 264, 381, 387, 391, 392, 393, 394, 395, 396, 401, 404, 413, 425, 440, 446, 448, 454, 459, 464, 465, 472, 475, 482, 484, 485, 486, 487, 488, 490, 496, 504, 505, 507, 509, 519, 526, 531, 547, 577, 578], "combine_flux_map": [143, 448], "combine_significance_map": 144, "combined_ev": 516, "combining_and_defin": [451, 459, 461, 464, 466, 472, 475, 494], "come": [69, 384, 387, 388, 389, 390, 391, 395, 396, 397, 398, 400, 401, 406, 408, 410, 411, 428, 429, 432, 441, 442, 446, 456, 464, 472, 490, 494, 503, 579], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 481], "command": [6, 13, 94, 101, 125, 154, 160, 162, 164, 380, 382, 384, 389, 390, 392, 397, 398, 411, 412, 413, 414, 415, 416, 422, 426, 437, 440, 441, 443, 468, 518, 577], "commensur": 206, "comment": [125, 381, 382, 386, 390, 394, 395, 397, 398, 400, 402, 404, 406, 407], "commit": [381, 384, 389, 395, 406, 407, 410, 419, 420, 443], "committe": [386, 388, 406, 407], "commod": 407, "common": [95, 380, 381, 382, 384, 386, 387, 395, 397, 401, 402, 404, 405, 407, 414, 416, 417, 432, 434, 457, 458, 470, 481, 485, 488, 490, 503, 504, 507, 514, 517, 518, 532, 537, 579], "common_irf_head": 485, "commonli": [29, 83, 395, 399, 441, 470, 507, 576, 577, 579, 581, 584], "commun": [381, 397, 403, 407, 410, 412, 418, 497], "comp": 481, "compact": [16, 84, 87, 90, 91, 104, 124], "compar": [87, 91, 126, 127, 130, 131, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206, 211, 287, 381, 395, 398, 401, 429, 445, 446, 451, 452, 453, 456, 460, 464, 467, 470, 472, 474, 478, 481, 484, 486, 492, 495, 503, 514, 578, 580], "comparison": [86, 87, 91, 100, 130, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 338, 437, 509], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 193, 194, 196, 205, 206, 232, 386, 388, 392, 395, 404, 406, 408, 409, 417, 420, 422, 424, 441, 447, 448, 487, 531], "compil": [384, 433], "complain": 384, "complaint": 399, "complement": 401, "complementari": [101, 134, 143, 456], "complet": [13, 16, 84, 90, 104, 124, 338, 381, 387, 391, 392, 393, 394, 395, 398, 399, 401, 405, 406, 407, 410, 414, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 437, 438, 439, 440, 441, 442, 464, 469, 484, 491, 499, 519, 524], "complex": [381, 382, 387, 391, 395, 396, 397, 403, 405, 417, 448, 453, 456, 466, 469, 475, 479, 482, 487, 488, 490, 491, 495, 528], "complianc": [407, 443], "compliant": [193, 194, 196, 205, 206, 447, 578], "complic": [395, 532], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 102, 103, 105, 108, 109, 110, 130, 137, 165, 167, 201, 224, 248, 249, 264, 280, 392, 393, 394, 397, 403, 404, 422, 426, 428, 432, 440, 441, 452, 457, 458, 459, 461, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 478, 481, 482, 483, 489, 490, 494, 495, 503, 504, 507, 515, 517, 519, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 578], "component_1": 392, "component_2": 392, "component_class": 481, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387, 407], "composit": [57, 70, 80, 319, 407, 439], "compound": [201, 208, 219, 339, 343, 395, 404, 450, 452, 470, 533, 565], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 434], "compoundpixelregion": 343, "compoundskymodel": 392, "compoundskyregion": [208, 339, 343], "compoundsourcemodel": 392, "compoundspectralmodel": [259, 404, 446, 452, 490, 495, 545, 547, 551, 554, 556, 559, 564], "compress": 389, "compris": 496, "compromis": [381, 386, 394, 492], "compton": [249, 428, 555], "compulsori": 490, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 101, 102, 104, 105, 109, 110, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 179, 180, 182, 185, 186, 187, 188, 190, 192, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 207, 211, 218, 219, 222, 224, 226, 228, 229, 230, 235, 239, 241, 242, 245, 248, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 275, 277, 280, 281, 287, 288, 289, 291, 294, 295, 296, 297, 299, 303, 304, 307, 311, 312, 315, 381, 390, 391, 392, 393, 394, 395, 396, 399, 401, 402, 403, 404, 405, 409, 411, 413, 414, 418, 420, 422, 423, 424, 425, 428, 429, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 453, 458, 460, 464, 465, 469, 470, 473, 474, 476, 479, 480, 482, 483, 486, 489, 490, 491, 492, 495, 496, 497, 503, 505, 507, 515, 517, 519, 524, 528, 555, 577, 578, 579, 580, 581, 582, 583], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 211, 394, 395, 515], "compute_chisq": 439, "compute_differential_jfactor": 23, "compute_errn": [289, 291, 443, 581], "compute_errp": [289, 291, 581], "compute_flux_doubl": 137, "compute_fpp": 138, "compute_fvar": [139, 296], "compute_jfactor": [23, 480], "compute_lightcurve_doublingtim": 479, "compute_lightcurve_fpp": 479, "compute_lightcurve_fvar": 479, "compute_lima_map": 428, "compute_npr": 394, "compute_upper_limit": [289, 291], "computedfieldinfo": [16, 84, 90, 104, 124], "con": [381, 397], "concaten": [83, 86, 92, 195, 198, 393, 397, 403, 446, 487], "concentr": 340, "concept": [16, 84, 90, 104, 124, 401, 402, 408, 418, 480, 487, 520], "conception": [394, 403], "concern": [384, 386, 395, 397, 398, 400, 402, 404, 407, 432, 442, 496, 581], "conclud": 390, "concret": [16, 84, 90, 104, 124, 398, 401], "conda": [380, 384, 388, 389, 398, 401, 406, 410, 411, 413, 414, 415, 416, 417, 422, 424, 440, 441, 579], "condit": [52, 53, 146, 198, 215, 217, 224, 248, 405, 409, 429, 448, 451, 456, 459, 469, 481, 488, 489, 491, 496, 515, 524], "conduct": [443, 475], "cone": [91, 395, 457, 491, 503, 504, 519], "conesearch": 397, "conf": [87, 91, 381, 382, 411, 423, 438], "conf_1d": 473, "conf_3d": 473, "conf_max": [214, 216], "conf_min": [214, 216], "confid": [122, 211, 214, 216, 289, 291, 392, 399, 423, 428, 442, 578, 581], "confidence_opt": [211, 483], "config": [15, 16, 84, 90, 104, 124, 380, 382, 387, 389, 390, 397, 398, 401, 408, 413, 415, 425, 426, 427, 432, 440, 457, 464, 503, 576], "config_dict": 503, "config_joint": 464, "config_paramet": [118, 120, 121, 122, 126, 127, 129, 130, 131, 132, 133], "config_stack": 464, "config_str": 16, "configdict": [16, 84, 90, 104, 124], "configpars": 438, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 104, 109, 110, 118, 120, 121, 122, 124, 126, 127, 129, 130, 131, 132, 133, 328, 381, 382, 384, 390, 392, 396, 397, 401, 402, 408, 410, 411, 417, 425, 427, 428, 432, 434, 443, 446, 447, 456, 458, 460, 466, 468, 469, 478, 494, 499, 518, 519, 524, 578, 579], "confirm": [384, 410], "conflict": [87, 91, 381, 384, 407], "confluenc": 497, "conform": [16, 84, 90, 104, 124, 487], "confus": [381, 382, 387, 400], "connect": [391, 456, 470, 472, 488, 504, 576], "consant": [193, 194, 196, 202, 205, 206], "consciou": 386, "consecut": [176, 338, 381, 406], "consensu": [386, 407], "consent": 381, "consequ": [407, 469, 532], "conserv": [515, 540], "consid": [19, 20, 59, 96, 173, 180, 183, 184, 186, 187, 194, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 287, 377, 386, 387, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 407, 409, 453, 456, 458, 464, 468, 469, 479, 485, 488, 516, 519, 524, 582], "consider": [397, 422, 432, 440, 464], "consist": [74, 91, 95, 123, 125, 151, 152, 163, 166, 191, 192, 193, 194, 196, 201, 204, 205, 206, 234, 237, 381, 391, 392, 394, 395, 396, 401, 408, 425, 426, 427, 428, 429, 436, 440, 441, 443, 445, 446, 447, 457, 458, 459, 460, 467, 472, 475, 484, 486, 487, 490, 492, 503, 553, 555, 580], "consol": [381, 579], "consortium": [408, 494], "const": [220, 221, 222, 223, 404, 469, 490, 548, 566], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 404, "constant": [50, 51, 52, 53, 102, 109, 118, 153, 193, 194, 196, 202, 204, 205, 206, 220, 221, 222, 223, 225, 238, 240, 337, 394, 395, 400, 440, 450, 473, 495, 512, 515, 533, 544, 565, 575, 578, 582], "constant_model": 566, "constantmodel": 442, "constantnormspectralmodel": 404, "constantspatialmodel": [258, 404, 490, 495, 535], "constantspectralmodel": [259, 404, 469, 490, 548], "constanttemporalmodel": [271, 404, 425, 490, 566], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 482, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 407, 452, 461, 465, 486, 492, 526], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 519], "construct": [16, 84, 90, 104, 124, 198, 241, 242, 346, 532, 578], "constructor": [191, 192, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 446, 504, 530], "consult": 416, "consum": [484, 519], "contact": [383, 388, 390, 407, 416, 418, 421, 422, 423, 437, 440], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 108, 109, 110, 112, 113, 123, 124, 125, 133, 134, 135, 136, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 175, 178, 180, 185, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 295, 306, 307, 374, 376, 378, 379, 381, 384, 385, 387, 389, 390, 391, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 410, 411, 418, 422, 426, 427, 428, 429, 431, 432, 434, 435, 438, 439, 440, 441, 442, 446, 447, 448, 451, 454, 456, 457, 458, 461, 464, 465, 468, 469, 472, 473, 474, 476, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 507, 508, 510, 515, 516, 517, 519, 523, 527, 528, 531, 532, 533, 576, 578, 580, 581, 582], "containment_correct": [16, 102, 105, 180, 451, 456, 457, 458, 461, 462, 464, 466, 473, 474, 476, 478, 482, 486, 503], "containment_fract": 96, "containment_radiu": [154, 160, 162, 163, 164, 166, 451, 482, 485, 488], "containment_radius_map": [163, 166], "contains_pix": [191, 192, 201, 204], "contains_wcs_pix": 201, "contamin": [67, 462, 481, 488, 528], "content": [84, 90, 104, 124, 125, 193, 194, 196, 202, 205, 206, 344, 347, 381, 384, 386, 390, 396, 401, 408, 411, 426, 435, 440, 453, 487, 488, 494, 496, 516, 519, 530, 531], "content_typ": [16, 84, 90, 104, 124], "context": [16, 84, 87, 90, 91, 104, 124, 215, 217, 224, 248, 328, 359, 381, 396, 407, 411, 447, 487, 509], "contigu": [198, 203, 432], "continu": [198, 388, 390, 391, 394, 395, 397, 398, 400, 401, 406, 417, 420, 421, 424, 432, 437, 438, 439, 441, 456, 469, 478, 488, 531, 578], "continuous_upd": [464, 472, 487, 503, 504], "contour": [208, 211, 373, 390, 442], "contour_": 484, "contourf": 206, "contract": 407, "contrari": [382, 389], "contrast": [401, 578], "contrera": 442, "contribut": [100, 115, 117, 224, 232, 248, 264, 377, 381, 383, 390, 395, 403, 405, 411, 418, 421, 432, 434, 436, 486, 520, 555, 576, 579, 580], "contributes_to_stat": 100, "contributor": [381, 384, 401, 411, 419, 430, 431], "control": [83, 87, 91, 102, 105, 109, 110, 381, 394, 412, 414, 451, 480, 487, 492, 519, 581], "controversi": [381, 386, 387, 401], "conveni": [13, 123, 380, 381, 384, 391, 395, 403, 405, 412, 422, 424, 429, 432, 434, 439, 466, 478, 480, 481, 482, 487, 488, 489, 490, 494, 496, 505, 514, 518, 577], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 150, 192, 193, 194, 196, 204, 205, 206, 403, 405, 424, 425, 428, 429, 443, 448, 482, 486, 487, 490, 515, 517, 524, 531, 581], "converg": [409, 423, 444, 456, 458, 464, 478, 484, 515, 519, 526, 536], "convers": [84, 87, 90, 91, 104, 123, 124, 125, 134, 143, 386, 405, 408, 413, 415, 432, 445, 446, 447, 451, 532], "conversion_typ": [495, 505], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 101, 102, 105, 107, 109, 110, 123, 125, 128, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 176, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 213, 214, 215, 216, 217, 224, 239, 248, 287, 305, 308, 309, 313, 326, 342, 362, 364, 365, 382, 387, 395, 396, 405, 408, 411, 433, 445, 446, 447, 448, 451, 460, 467, 474, 475, 478, 482, 483, 484, 488, 489, 494, 505, 517, 523, 528, 531, 581, 583], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 505, "convolut": [118, 122, 128, 133, 161, 194, 206, 380, 393, 399, 420, 427, 429, 438, 440, 441, 447, 448, 462, 487, 515, 532], "convolution_method": 194, "convolv": [105, 111, 116, 133, 161, 194, 206, 392, 420, 429, 432, 441, 459, 460, 462, 487, 525, 555], "convolve_ful": 194, "convolve_wc": 194, "cookiecutt": 397, "coolwarm": [464, 495, 496, 504], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 250, 295, 392, 425, 469, 487, 488, 528, 531, 532, 539], "coord_to_idx": [191, 192, 195, 197, 198, 201, 203, 204, 487], "coord_to_pix": [191, 192, 195, 197, 198, 201, 203, 204, 487], "coordiant": 485, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 91, 94, 95, 96, 102, 103, 105, 108, 109, 110, 112, 113, 123, 125, 127, 128, 129, 137, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 176, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 224, 225, 234, 237, 239, 248, 250, 252, 261, 262, 264, 276, 295, 299, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 330, 336, 340, 341, 357, 382, 386, 387, 388, 390, 394, 395, 400, 401, 404, 406, 407, 420, 422, 425, 427, 438, 440, 441, 443, 451, 453, 456, 458, 459, 462, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 482, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 504, 505, 515, 523, 528, 530, 531, 536, 537, 540, 577, 578, 583], "coordsi": 427, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 101, 102, 104, 105, 108, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 151, 152, 155, 158, 163, 166, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 308, 353, 381, 386, 389, 391, 395, 397, 403, 410, 411, 417, 432, 434, 441, 442, 443, 446, 448, 452, 453, 456, 458, 459, 464, 466, 472, 474, 475, 478, 481, 484, 486, 490, 492, 495, 519, 528, 532, 543, 579], "copy_data": [87, 91, 224, 232, 248, 264, 272, 274, 276], "copy_indic": [87, 91], "copy_ob": [82, 519], "copy_on_getitem": [87, 91], "copyright": 417, "core": [16, 53, 84, 90, 104, 124, 159, 380, 381, 388, 394, 395, 402, 406, 407, 410, 418, 421, 438, 442, 446, 451, 458, 459, 461, 464, 466, 468, 470, 472, 475, 478, 489, 494, 507, 517, 579], "corner": [395, 398, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "corr_coord": [163, 166], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 102, 103, 105, 152, 163, 166, 180, 185, 186, 199, 232, 250, 251, 276, 381, 393, 394, 406, 407, 408, 410, 424, 427, 429, 430, 431, 432, 435, 438, 439, 441, 443, 444, 445, 446, 447, 448, 451, 452, 456, 457, 458, 459, 468, 472, 473, 481, 482, 484, 486, 488, 489, 490, 492, 496, 503, 505, 516, 517, 526, 539, 551, 554, 556, 559, 564], "correctli": [19, 20, 26, 77, 151, 152, 158, 163, 166, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 382, 384, 407, 408, 422, 424, 429, 434, 435, 444, 485, 486, 487, 488, 489, 492, 531, 537], "correl": [19, 20, 26, 122, 128, 136, 209, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 260, 265, 267, 268, 269, 270, 273, 277, 299, 399, 404, 405, 432, 442, 448, 467, 470, 484, 488, 490, 492, 503, 517, 576], "correlate_off": [122, 462], "correlation_radiu": [16, 122, 141, 142, 457, 461, 462, 464, 476, 483, 496, 503, 517], "correspond": [19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 87, 89, 91, 100, 102, 105, 109, 110, 123, 125, 126, 127, 128, 130, 131, 133, 134, 143, 150, 151, 152, 158, 161, 163, 165, 166, 167, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 218, 219, 222, 226, 228, 229, 230, 234, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 275, 277, 306, 374, 391, 392, 393, 394, 401, 402, 405, 407, 409, 426, 429, 453, 454, 456, 457, 458, 464, 468, 469, 473, 481, 484, 486, 487, 490, 491, 492, 494, 495, 496, 503, 505, 515, 516, 517, 519, 531, 532, 542, 545, 577, 578, 583], "cosimo": [429, 432, 434, 440, 441, 443, 446], "cosmic": [52, 226, 280, 399, 494], "coto": 440, "could": [16, 84, 90, 104, 124, 382, 384, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 408, 411, 453, 456, 464, 466, 481, 483, 492, 494, 495, 503, 518], "count": [16, 83, 92, 100, 102, 105, 106, 107, 108, 109, 110, 114, 118, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 140, 142, 168, 170, 173, 174, 175, 180, 182, 186, 190, 193, 194, 196, 197, 198, 202, 205, 206, 215, 217, 224, 248, 289, 291, 292, 293, 298, 300, 303, 305, 330, 366, 368, 377, 379, 387, 389, 392, 393, 394, 396, 397, 401, 405, 423, 424, 427, 429, 432, 434, 435, 441, 442, 446, 447, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 466, 468, 470, 472, 473, 474, 475, 476, 478, 482, 484, 486, 487, 488, 492, 496, 501, 503, 504, 505, 517, 519, 523, 526, 527, 528, 529, 532, 578, 579, 580, 582], "count_bkg": 476, "count_statist": 581, "counter": [225, 234, 237, 536], "counts_3d": 487, "counts_imag": [470, 482], "counts_min": 146, "counts_off": [102, 105, 106, 109, 110, 168, 174, 175, 178, 379, 393, 434, 445, 446, 452, 457, 458, 459, 462, 466, 476, 482, 515, 581], "counts_on": 423, "counts_rat": 482, "counts_statist": 462, "countspredictor": 392, "countsspectrum": [393, 396, 423, 424, 426, 428, 437], "countsstatist": [289, 291, 405, 428, 429, 432, 443], "coupl": [389, 395, 400, 411, 429, 441, 487], "cours": [381, 384, 388, 391, 398, 417, 457, 464, 482, 487, 495, 503, 579, 582], "cousin": [423, 429, 437, 439, 578], "cousins2007": [578, 581], "coutinho": [429, 432], "cov": [254, 255, 411], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [209, 374, 442], "covar_list": 209, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 126, 127, 130, 131, 210, 211, 212, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 289, 291, 374, 399, 409, 428, 434, 442, 443, 446, 448, 457, 503, 581], "covariance_data": [224, 232, 248, 264, 274], "covariance_opt": 211, "covariance_result": 212, "covariance_typ": 409, "covariancegaussianprior": 409, "covariancemixin": [219, 224, 264, 448], "covarianceresult": [101, 211, 212, 453, 454, 456, 457, 458, 464, 465, 466, 476, 478, 484, 495, 503, 504], "cover": [275, 381, 383, 395, 396, 397, 405, 453, 473, 474, 482, 487, 499, 505, 520], "coverag": [390, 396, 411, 420, 424, 432, 438, 441, 474, 484], "coveral": [411, 420], "cpu": [126, 127, 130, 133, 328, 329, 394], "cpython": 386, "crab": [67, 83, 109, 110, 131, 146, 211, 245, 281, 287, 389, 393, 401, 420, 426, 438, 440, 456, 457, 458, 465, 466, 473, 481, 482, 483, 484, 488, 492, 495, 496, 497, 503, 504, 505, 517, 528, 532, 578], "crab_10gev_100tev_dataset": 465, "crab_3fhl": 505, "crab_3fhl_spec": 505, "crab_events_pass4": 496, "crab_fp": 457, "crab_fp_tabl": 457, "crab_hess_ecpl": 281, "crab_hess_fp": [123, 125, 145], "crab_magic_lp": 458, "crab_model": 484, "crab_posit": 528, "crab_spec": 465, "crab_spectrum": 484, "crabnebula": 473, "crabspectrum": 424, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 104, 105, 109, 110, 111, 112, 113, 114, 116, 118, 123, 124, 125, 126, 127, 130, 133, 134, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 173, 175, 176, 177, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 308, 318, 339, 343, 359, 368, 370, 375, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 424, 425, 426, 429, 432, 434, 440, 441, 443, 444, 445, 446, 447, 448, 451, 452, 454, 457, 458, 459, 464, 466, 467, 468, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 484, 486, 489, 490, 491, 492, 494, 495, 496, 497, 501, 503, 505, 507, 514, 515, 516, 519, 523, 526, 528, 529, 530, 531, 535, 537, 538, 539, 540, 545, 555, 564, 576, 577, 579, 584], "create_crab_spectral_model": [456, 458, 465], "create_fermi_isotropic_diffuse_model": [489, 495], "create_map_dataset_from_observ": [93, 108], "create_mask": [191, 192, 201, 204], "create_t": 478, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 127, 204, 390, 391, 395, 404, 407, 426, 432, 448, 479, 490, 497], "creator": [104, 124, 384, 408, 457, 461, 462, 464, 490, 503, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "creatormedadata": 408, "creatormetadata": [84, 90, 104, 124, 408], "credit": 417, "crimson": 458, "criteria": [15, 91, 434, 486, 491, 499], "criterion": [91, 133, 306, 451, 519], "critic": 492, "criticis": 372, "crop": [86, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206], "crop_width": [191, 192, 193, 194, 196, 201, 202, 204, 205, 206], "cross": [19, 387, 401, 448, 507], "crowd": 481, "crpix": 204, "crpix1": 487, "crpix2": 487, "crucial": [408, 468, 469, 482], "cruft": 411, "crux": [33, 38, 478], "crval1": 487, "crval2": 487, "cryptic": 392, "csh": 579, "csobsselect": 391, "css": [87, 91, 411, 448], "cstat": [393, 426], "csv": 125, "ct": [366, 441], "cta": [82, 83, 89, 102, 105, 109, 110, 115, 117, 118, 122, 141, 142, 148, 152, 153, 154, 163, 226, 369, 374, 376, 385, 388, 389, 390, 394, 397, 400, 401, 410, 421, 422, 432, 438, 439, 440, 441, 448, 450, 451, 459, 461, 464, 466, 468, 469, 472, 475, 476, 482, 483, 485, 489, 498, 499, 503, 517, 521, 578], "cta_data_analysi": [401, 450, 466, 471], "cta_dataset": 489, "cta_north": 97, "cta_sensist": 401, "cta_sensit": [450, 451, 455], "cta_simul": 421, "cta_south": [97, 451, 459, 468, 469, 472, 475], "cta_util": 441, "ctadata": 494, "ctao": [82, 152, 153, 173, 280, 381, 401, 407, 410, 413, 418, 448, 450, 451, 457, 459, 461, 466, 468, 469, 476, 491, 496, 497, 498, 499, 507, 519, 577], "ctapip": [384, 388, 390, 397, 398, 400, 401, 402], "ctaspectrumobserv": 441, "ctobssim": 394, "ctool": [391, 394, 397, 401, 553], "cts_sigma": 484, "ctselect": 391, "ctype1": 487, "ctype2": 487, "cube": [46, 102, 105, 133, 168, 186, 193, 194, 196, 202, 205, 206, 244, 264, 381, 392, 393, 394, 400, 401, 402, 404, 413, 420, 424, 425, 428, 433, 436, 437, 438, 439, 440, 441, 460, 461, 466, 470, 495, 505, 515, 524, 526, 531, 532, 578], "cubic": 487, "cumbersom": [391, 399], "cumsum": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206], "cumul": [100, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206, 330, 394, 456, 468, 489, 519], "cunit1": 487, "cunit2": 487, "curat": [411, 421], "curl": [67, 398, 412, 413, 415, 494], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 101, 102, 105, 109, 110, 125, 126, 130, 156, 179, 191, 192, 193, 194, 196, 202, 203, 204, 205, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 359, 375, 381, 382, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 424, 442, 457, 480, 483, 485, 486, 487, 489, 494, 496, 497, 503, 504, 508, 515, 516, 517, 532, 576, 578, 579], "curv": [15, 19, 20, 26, 73, 77, 83, 130, 137, 218, 219, 222, 226, 228, 229, 230, 235, 239, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 275, 277, 297, 373, 385, 392, 394, 397, 401, 405, 413, 422, 426, 428, 429, 433, 436, 437, 439, 441, 443, 446, 447, 450, 451, 477, 478, 479, 499, 517, 518, 528, 533, 575, 577], "curve_fit": 374, "cuspi": 507, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 104, 124, 129, 390, 391, 392, 397, 399, 404, 408, 412, 426, 427, 429, 441, 451, 459, 461, 464, 466, 472, 475, 482, 485, 487, 494, 519, 564], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 490, "customis": [401, 485], "customprior": 492, "cut": [91, 122, 165, 179, 180, 391, 440, 446, 450, 451, 455, 459, 476, 482, 486, 487, 491, 494, 499, 504, 505, 527, 528], "cutoff": [228, 229, 230, 268, 269, 270, 287, 426, 446, 450, 459, 464, 533, 565], "cutout": [102, 105, 109, 110, 115, 117, 151, 152, 158, 163, 166, 169, 192, 194, 202, 204, 206, 274, 387, 393, 422, 427, 432, 438, 441, 448, 461, 462, 464, 466, 470, 482, 486, 495, 504, 505, 515], "cutout2d": [102, 105, 151, 152, 158, 163, 166, 169, 204, 206, 274, 387], "cutout_and_mask_region": [206, 446], "cutout_info": 426, "cutout_mod": 169, "cutout_slic": 204, "cutout_template_model": 448, "cutout_width": 169, "cval": [193, 194, 196, 202, 205, 206], "cwd": 389, "cwt": [401, 426, 438, 441], "cxc": [211, 401, 484], "cyan": 378, "cycl": [378, 384, 385, 386, 398, 400, 414, 439, 443], "cycler": [378, 451], "cython": [384, 423, 433], "d": [19, 20, 23, 87, 89, 91, 197, 200, 203, 239, 245, 256, 275, 281, 348, 384, 399, 401, 434, 443, 454, 462, 468, 469, 475, 487, 490, 491, 524, 531, 536, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579, 582], "dai": [87, 91, 123, 125, 203, 231, 236, 238, 256, 263, 384, 395, 401, 410, 411, 487, 572, 579], "daniel": [442, 445, 447, 448], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 401, 409, 441, 446, 447, 450, 493, 499, 508, 577], "dark_matter_spectra": 26, "darkbit": 507, "darkblu": 492, "darkgreen": 492, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 259, 382, 401, 441, 480, 508], "darkmatterannihilationspectralmodel": [20, 259, 443, 480], "darkmatterdecayspectralmodel": [259, 447, 480], "darkorang": [456, 457], "darksusi": 507, "darwin": 417, "dash": [476, 480, 492], "dashboard": 411, "dat": [26, 87, 91, 224, 248, 457, 503, 507], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 123, 124, 125, 126, 127, 128, 129, 136, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 173, 174, 175, 179, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 292, 297, 298, 299, 301, 302, 305, 306, 307, 316, 317, 320, 338, 344, 347, 351, 352, 360, 369, 370, 371, 372, 374, 375, 380, 382, 385, 388, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 407, 409, 410, 413, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 429, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 450, 451, 454, 459, 460, 461, 462, 466, 468, 469, 472, 475, 480, 481, 483, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 501, 506, 507, 515, 517, 519, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 538, 539, 551, 554, 556, 558, 559, 564, 576, 577, 578, 581, 582, 583], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [191, 192, 201, 204], "data_path": 496, "data_reduct": 397, "data_shap": [101, 102, 105, 109, 110, 191, 192, 201, 204, 482, 532], "data_shape_ax": [192, 201, 204], "data_shape_imag": 204, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 173, 306, 307, 397, 417, 458, 466, 468, 474, 476, 478, 486, 491, 494, 496, 497, 501, 504, 516, 526, 528, 529], "data_storag": 516, "data_summari": 438, "dataaxi": 423, "databas": [387, 519], "dataclass": 381, "datafram": [87, 91], "dataset": [6, 15, 16, 19, 20, 26, 63, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 130, 131, 132, 133, 135, 140, 141, 142, 143, 144, 146, 151, 152, 158, 163, 166, 168, 169, 170, 173, 174, 175, 178, 179, 180, 195, 200, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 328, 374, 377, 378, 382, 384, 385, 387, 389, 394, 396, 397, 398, 400, 401, 405, 409, 410, 411, 413, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 452, 454, 456, 459, 460, 466, 467, 468, 470, 472, 476, 478, 480, 481, 487, 490, 491, 493, 494, 495, 497, 499, 501, 505, 516, 517, 519, 524, 526, 527, 528, 529, 539, 543, 545, 573, 574, 576, 577, 578, 579, 580, 581], "dataset1": [492, 515], "dataset1_prior": 492, "dataset2": [492, 515], "dataset2_prior": 492, "dataset_1": 517, "dataset_2": 517, "dataset_3fgl": 454, "dataset_3fhl": 454, "dataset_cta": 482, "dataset_empti": [453, 456, 458, 459, 466, 474, 478, 482, 486, 496, 528], "dataset_energy_depend": 467, "dataset_fak": 459, "dataset_fp": 475, "dataset_gammacat": 454, "dataset_hawc": 465, "dataset_hess": [465, 484], "dataset_imag": [466, 482], "dataset_kwarg": [93, 108], "dataset_lc": 475, "dataset_mak": [456, 458, 466, 474, 478, 486, 528], "dataset_nam": [108, 112, 113, 130, 224, 232, 248, 403, 409, 448, 464, 468, 469, 472, 482, 489, 504, 539], "dataset_on_off": [168, 174, 175, 178, 451, 456, 458, 459, 462, 466, 474, 478, 486, 528, 529], "dataset_on_off1": 451, "dataset_onoff": 393, "dataset_simul": 458, "dataset_stack": [456, 464], "datasetmodel": [213, 248, 264, 403, 429, 468, 469, 472, 478], "datasetread": 106, "datasets1": 378, "datasets2": 378, "datasets3": 378, "datasets_fil": [16, 457, 461, 462, 464, 503], "datasets_hess": 465, "datasets_in_phase_bin_3": 405, "datasets_mak": 486, "datasets_nam": [19, 20, 26, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 282, 428, 465, 489, 503, 539], "datasets_read": [489, 495], "datasets_sl": 482, "datasets_to_fit": 478, "datasetsconfig": 16, "datasetsmak": [171, 434, 446, 486, 491, 519], "datasetsmetadata": 408, "datasetwrit": 107, "datastor": [16, 89, 96, 173, 306, 307, 387, 391, 396, 413, 417, 423, 434, 435, 437, 438, 440, 446, 447, 453, 456, 457, 458, 461, 462, 464, 466, 468, 472, 474, 476, 478, 486, 491, 496, 497, 501, 503, 516, 519, 526, 528, 529, 579], "datastorecheck": 441, "datastoreindex": 391, "datastoreinmemori": 391, "datastoremak": [423, 434], "datastoremetadata": 408, "datastoreobserv": [174, 387, 391, 427, 440], "datastorexml": 391, "datasum": [83, 86, 88, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 150, 151, 152, 158, 163, 166, 193, 194, 196, 200, 202, 205, 206], "datat": [87, 91], "date": [87, 91, 104, 124, 362, 398, 406, 407, 408, 410, 418, 440, 457, 460, 461, 462, 464, 490, 497, 503, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 583], "datefmt": [16, 457, 461, 462, 464, 503, 579], "dateref": 460, "datetim": [104, 124, 408], "datetime64": [87, 91], "datfix": 460, "daughter": 408, "david": [391, 396, 421, 441, 442], "dc": 464, "dc1": [390, 401, 442, 468, 476, 485, 489, 494], "dc2": 390, "ddof": 479, "de": [19, 20, 26, 67, 100, 218, 219, 222, 226, 228, 229, 230, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 305, 407, 410, 429, 432, 435, 480, 578], "deabsorb": 452, "deactiv": 412, "dead": [83, 86, 88, 338, 391], "dead_tim": [83, 88, 338], "deadc": 391, "deadlin": [390, 394], "deadtim": [88, 90, 186, 459, 468, 472, 494], "deadtime_fract": [88, 90], "deal": [86, 381, 387, 396, 397, 459, 468, 474, 499, 519], "debanjan": 423, "debian": [398, 414, 436], "debug": [11, 381, 387, 392, 397, 443, 456, 483, 487, 519, 579], "dec": [67, 83, 85, 87, 88, 91, 94, 141, 142, 176, 381, 382, 386, 390, 392, 394, 397, 398, 401, 419, 445, 451, 456, 458, 460, 462, 466, 469, 473, 474, 476, 478, 481, 486, 488, 494, 495, 496, 497, 504, 505, 507, 519, 523, 528, 583], "dec_pnt": 497, "dec_tru": 394, "decad": [17, 18, 21, 22, 24, 25, 27, 112, 113, 198, 283, 447, 468], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 231, 238, 256, 404, 468, 475, 479, 490, 507, 569], "decemb": 419, "decid": [381, 387, 390, 391, 392, 393, 395, 396, 400, 403, 404, 405, 410, 457, 491, 503], "decim": [87, 91, 304], "decis": [381, 382], "declar": [15, 87, 91, 264, 360, 361, 384, 388, 389, 392, 397, 398, 404, 411, 428, 518], "decor": [360, 361, 381, 408, 579], "decorrel": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "decoupl": 69, "dedic": [384, 395, 396, 405, 407, 408, 411, 427, 428, 429, 447, 456, 457, 458, 464, 476, 484, 503, 504, 516], "deduc": [405, 447], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 101, 102, 104, 105, 109, 110, 123, 124, 125, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 277, 278, 279, 464], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 272, 274, 276], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 290, 360, 361, 381, 382, 392, 393, 394, 395, 404, 405, 408, 409, 456, 464, 478, 484, 490, 492, 501, 528, 579, 581], "def_unit": [451, 459, 461, 464, 466, 472, 475, 494], "defalut": [113, 150], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 296, 297, 298, 299, 304, 305, 306, 308, 319, 320, 321, 326, 328, 329, 335, 336, 337, 338, 340, 341, 344, 347, 349, 350, 352, 358, 363, 364, 368, 370, 371, 372, 374, 375, 377, 378, 381, 387, 393, 397, 398, 404, 407, 411, 417, 423, 425, 426, 427, 429, 432, 434, 440, 441, 443, 444, 445, 446, 447, 456, 457, 458, 460, 462, 464, 468, 469, 474, 475, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 495, 503, 504, 505, 515, 517, 519, 526, 529, 530, 531, 532, 536, 537, 538, 545, 551, 555, 579, 583], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 364, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 439], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 409], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [147, 148, 153, 155, 160, 165, 485], "defer": [105, 110], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 101, 102, 103, 104, 105, 108, 109, 110, 115, 117, 122, 123, 124, 125, 126, 127, 129, 130, 133, 150, 151, 152, 154, 158, 161, 162, 163, 164, 166, 169, 170, 174, 179, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 290, 292, 298, 300, 320, 330, 335, 336, 337, 338, 341, 371, 372, 381, 382, 384, 386, 387, 390, 392, 393, 394, 395, 396, 397, 398, 402, 403, 405, 406, 407, 408, 409, 412, 413, 414, 415, 422, 423, 426, 429, 432, 435, 439, 440, 445, 446, 447, 452, 457, 459, 460, 461, 462, 464, 465, 467, 470, 472, 475, 476, 478, 479, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 503, 505, 515, 516, 517, 519, 521, 524, 528, 529, 531, 536, 538, 540, 541, 542, 545, 546, 549, 550, 552, 553, 555, 557, 558, 560, 561, 562, 563, 564, 574, 576, 577, 578, 579, 580, 581, 582], "definit": [83, 84, 86, 88, 90, 100, 102, 104, 105, 109, 110, 124, 170, 201, 290, 305, 319, 381, 390, 391, 395, 402, 403, 404, 405, 408, 424, 428, 429, 445, 447, 448, 456, 458, 461, 470, 474, 485, 486, 503, 515, 517, 524, 525, 530, 532, 536, 537, 581], "deform": 532, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 102, 105, 109, 110, 112, 113, 114, 115, 117, 118, 122, 127, 128, 133, 141, 142, 152, 154, 155, 160, 161, 162, 163, 164, 165, 166, 168, 176, 177, 179, 181, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 224, 225, 234, 237, 248, 252, 261, 262, 264, 306, 307, 340, 376, 381, 382, 392, 395, 397, 404, 405, 408, 417, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 503, 504, 505, 516, 517, 519, 521, 523, 526, 528, 529, 530, 531, 532, 536, 537, 538, 539, 540, 541, 542, 543], "deg2": 497, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 112, 113, 114, 120, 123, 125, 135, 144, 192, 193, 194, 196, 199, 204, 205, 206, 224, 248, 252, 264, 275, 447, 451, 453, 457, 462, 467, 474, 478, 481, 486, 487, 488, 494, 503, 517, 531, 532, 581, 582], "deil": [386, 387, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 420, 421, 422, 423, 424, 425, 426, 427, 433, 436, 437, 438, 439, 440, 441, 442], "deiml": 440, "dej2000": [481, 505], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 392], "delai": [402, 406], "deleg": 397, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 381, 392, 411, 412, 413, 415, 447, 489], "delete_interv": 86, "delimit": 125, "deliv": 397, "delta": [19, 20, 23, 87, 91, 122, 123, 128, 131, 133, 155, 203, 254, 255, 288, 304, 446, 452, 460, 484, 492, 517, 524, 525, 537, 538, 540, 581], "delta_t": [120, 288, 467], "demonstr": [397, 422, 425, 426, 427, 428, 429, 434, 446, 447, 473, 479, 487, 489, 499, 531], "denot": [102, 109, 405, 515], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 101, 125, 155, 206, 334, 337, 374, 394, 462, 464, 480, 481, 492, 507, 509, 513, 523, 524, 525, 578], "dep": 446, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 102, 103, 108, 109, 120, 123, 125, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 180, 191, 192, 201, 204, 206, 224, 239, 248, 264, 308, 361, 381, 383, 384, 385, 387, 392, 393, 394, 395, 396, 399, 400, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 419, 421, 425, 426, 429, 436, 438, 441, 442, 444, 446, 447, 448, 450, 451, 455, 459, 461, 462, 471, 474, 481, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 499, 515, 519, 523, 527, 528, 531, 545], "deploy": 407, "deposit": 407, "deprec": [16, 84, 85, 90, 104, 124, 423, 432, 445, 446, 447, 448, 464, 470, 495, 543], "deprecated_argument_funct": 381, "deprecated_argument_function_kwarg": 381, "deprecated_attribut": 381, "deprecated_funct": 381, "deprecated_renamed_argu": 381, "deprecatedparseprotocol": [16, 84, 90, 104, 124], "deprecation_polici": 406, "depriv": 526, "depth": [16, 84, 90, 104, 124, 348, 413, 418, 452, 479, 545], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 122, 126, 130, 133, 134, 143, 275, 381, 393, 394, 399, 402, 405, 460, 483, 494, 496, 517, 531, 580, 581], "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 125, 126, 128, 133, 162, 202, 211, 277, 300, 382, 384, 386, 387, 390, 391, 393, 394, 395, 397, 398, 400, 401, 404, 405, 406, 407, 418, 424, 432, 440, 441, 457, 460, 468, 469, 479, 483, 484, 490, 492, 494, 496, 497, 503, 515, 519, 523, 532, 533, 578, 579, 580, 581], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 127, 211, 382, 386, 387, 395, 401, 406, 407, 418, 443, 447, 464, 472, 481, 484, 487, 494, 496, 503, 504, 519], "description1": 382, "description2": 382, "description3": 382, "description_width": [464, 472, 487, 503, 504], "descriptionstyl": [464, 472, 487, 503, 504], "descriptor": [87, 88, 91, 102, 105, 109, 110, 274, 317, 382, 428], "design": [386, 387, 390, 391, 394, 395, 397, 401, 403, 405, 406, 420, 440, 447], "desir": [16, 84, 87, 90, 91, 104, 124, 161, 191, 192, 201, 204, 290, 356, 357, 358, 487, 505, 532], "desktop": 418, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 102, 105, 109, 110, 125, 126, 151, 152, 158, 163, 166, 169, 192, 204, 206, 211, 214, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 274, 275, 276, 381, 382, 384, 386, 389, 390, 391, 394, 395, 396, 400, 401, 402, 406, 407, 412, 416, 418, 419, 426, 430, 431, 450, 451, 452, 456, 458, 459, 460, 461, 466, 467, 468, 471, 472, 475, 478, 482, 483, 484, 486, 487, 488, 489, 490, 492, 494, 496, 497, 499, 504, 505, 515, 516, 518, 524, 528, 529, 531, 576, 577, 579, 583], "detect": [59, 141, 142, 287, 371, 372, 382, 397, 400, 401, 403, 420, 426, 427, 428, 438, 440, 441, 447, 450, 463, 481, 494, 496, 499, 578, 581], "detect_t": 401, "detector": [83, 88, 103, 108, 155, 488, 496, 524, 578], "determin": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 112, 113, 132, 154, 160, 162, 164, 176, 177, 179, 181, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 275, 277, 308, 330, 392, 396, 399, 407, 434, 446, 447, 451, 458, 461, 462, 467, 473, 486, 488, 509, 577], "determinist": 381, "deti": [83, 103, 108, 394, 494], "detx": [83, 103, 108, 394, 494], "dev": [11, 16, 82, 84, 90, 104, 124, 381, 383, 384, 397, 407, 410, 411, 448, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 543, 545, 573, 574], "dev317": [104, 124, 418, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "develop": [382, 386, 387, 389, 390, 391, 392, 394, 395, 397, 398, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 414, 418, 420, 433, 440, 441, 442, 494], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 126, 194, 206, 211, 233, 290, 294, 484, 492], "devoid": [456, 522], "devop": 407, "devot": 499, "dex": 308, "df": [87, 91, 120, 135, 144, 467, 484, 581], "dfxypmh6": 478, "diagnosi": 390, "diagnost": 397, "diagon": [150, 151, 152, 399, 409, 495], "diagram": 583, "dialog": [413, 415], "diamet": [192, 193, 194, 453], "diamond": 491, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 118, 120, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 178, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 282, 287, 288, 289, 290, 291, 295, 306, 320, 328, 329, 344, 347, 348, 349, 352, 362, 363, 364, 365, 368, 369, 370, 374, 375, 376, 377, 378, 381, 396, 398, 402, 405, 408, 425, 429, 432, 440, 457, 464, 473, 474, 478, 481, 484, 487, 491, 503, 504, 531, 536, 545], "dict_kei": [452, 545], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 120, 123, 124, 125, 126, 127, 130, 131, 133, 135, 136, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 178, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 206, 210, 211, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 289, 290, 291, 295, 318, 344, 347, 348, 349, 352, 362, 365, 375, 382, 398, 400, 405, 408, 409, 456, 458, 464, 484, 485, 491, 492, 574], "dictionnari": 374, "did": [77, 388, 395, 400, 401, 402, 404, 407, 423, 451, 459, 461, 464, 466, 472, 475, 484, 492, 494], "didn": [83, 88, 388, 391, 395, 398, 507], "diff": [101, 102, 105, 109, 110, 381, 384, 389, 393, 464, 472, 504], "diff_flux": 480, "diff_flux_point": [101, 482], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 80, 86, 87, 91, 94, 100, 101, 120, 122, 123, 125, 126, 127, 130, 131, 133, 141, 147, 148, 149, 150, 153, 155, 157, 160, 165, 175, 193, 194, 196, 199, 200, 201, 202, 204, 205, 206, 243, 287, 288, 289, 291, 338, 342, 356, 357, 372, 381, 382, 384, 386, 387, 389, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 407, 409, 411, 413, 415, 424, 427, 429, 439, 442, 443, 444, 446, 448, 451, 456, 457, 458, 460, 461, 464, 467, 468, 469, 470, 473, 475, 478, 479, 481, 482, 483, 484, 486, 488, 489, 490, 491, 492, 494, 495, 496, 499, 503, 505, 507, 515, 517, 519, 524, 531, 532, 537, 538, 577, 579, 580, 581], "different": 389, "differenti": [23, 79, 123, 125, 132, 193, 194, 196, 198, 202, 205, 206, 249, 264, 280, 281, 335, 387, 392, 399, 405, 439, 487, 490, 495, 505, 517, 578], "differential_flux": 125, "difficult": [392, 395, 411], "diffus": [68, 193, 194, 196, 202, 205, 206, 282, 381, 397, 400, 441, 442, 464, 468, 481, 487, 489, 490, 494, 576], "diffuse_cub": 490, "diffuse_galactic_fermi": 489, "diffuse_iem": [489, 495], "diffuse_iso": [489, 495], "diffuse_model": 282, "difrsp0": [495, 505], "difrsp1": [495, 505], "difrsp2": [495, 505], "difrsp3": [495, 505], "difrsp4": [495, 505], "digit": 381, "dilat": [206, 432], "dim": [160, 337, 437, 438, 466, 578], "dimens": [46, 53, 102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 175, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 272, 273, 276, 308, 320, 374, 397, 429, 440, 442, 446, 448, 484, 485, 487, 490, 499, 515, 531, 532, 537], "dimension": [31, 32, 37, 68, 87, 91, 191, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 233, 234, 237, 283, 321, 334, 387, 395, 409, 413, 438, 460, 483, 484, 485, 487, 490, 505, 523, 525, 531, 532, 577, 578], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 155, 269, 270, 307, 470, 490], "dimitri": [432, 434], "dipol": [51, 54], "dirac": 19, "direct": [91, 104, 165, 183, 184, 187, 189, 198, 225, 234, 237, 312, 315, 382, 387, 393, 395, 400, 402, 405, 408, 432, 450, 455, 459, 486, 499, 516, 524, 525, 527, 528, 536, 577, 578], "directional_offset_bi": [451, 459], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 90, 91, 104, 124, 134, 140, 143, 144, 165, 180, 193, 194, 196, 202, 205, 206, 272, 274, 276, 381, 383, 384, 386, 388, 389, 392, 393, 394, 395, 399, 401, 408, 413, 415, 416, 420, 422, 423, 424, 426, 440, 447, 454, 456, 457, 459, 464, 465, 466, 469, 470, 472, 474, 475, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 494, 495, 503, 504, 505, 507, 515, 519, 524, 528, 531, 555, 581], "directori": [11, 82, 87, 381, 397, 457, 467, 497, 503, 505, 516, 519, 579], "dirk": [423, 437, 439], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381, 432], "disable_unicode_literals_warn": 381, "disadvantag": 579, "disagr": 386, "disambigu": 386, "disc": [461, 462, 464, 469], "discard": [408, 478, 481], "discard_on_copi": [87, 91], "discarded_ind": 481, "discarded_spati": 481, "discarded_t": 481, "disccus": 390, "discourag": 381, "discov": 579, "discrep": 456, "discret": [91, 136, 299, 304, 394, 448, 484, 531], "discrete_correl": 136, "discrete_correlation_dict": 136, "discrete_correlation_err": [136, 299], "discuss": [13, 59, 277, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 418, 440, 492, 497, 508, 583], "disjoint": 395, "disk": [82, 110, 152, 155, 194, 204, 206, 225, 237, 239, 359, 380, 381, 391, 392, 393, 397, 404, 405, 448, 450, 451, 456, 464, 465, 487, 488, 489, 490, 530, 533, 538, 542, 544], "disk_inc": 395, "diskspatialmodel": [72, 258, 404, 425, 446, 489, 490, 536], "dismiss": 100, "disp": [523, 524], "dispatch": 392, "dispers": [82, 88, 102, 103, 105, 107, 108, 109, 110, 111, 114, 116, 150, 151, 152, 155, 173, 179, 180, 183, 184, 187, 381, 387, 392, 393, 394, 426, 428, 438, 439, 440, 442, 451, 453, 456, 457, 464, 468, 486, 496, 497, 503, 504, 515, 524, 527, 578], "displac": 312, "displai": [11, 15, 82, 87, 91, 118, 130, 133, 211, 295, 329, 374, 378, 381, 382, 411, 413, 415, 432, 435, 446, 447, 451, 453, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 470, 472, 473, 475, 476, 481, 482, 483, 484, 487, 489, 490, 494, 495, 497, 519, 579], "display_length": [87, 91], "disrupt": [421, 422], "dissolv": 425, "dist": [331, 411], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 127, 141, 142, 201, 249, 276, 304, 311, 337, 395, 438, 445, 458, 460, 470, 480, 481, 484, 513, 528, 555], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 480], "distance_max": [46, 47, 337, 481], "distance_min": [47, 337, 481], "distance_refer": 481, "distibut": [134, 143], "distinct": [396, 397, 402, 496, 582], "distinguish": [289, 291, 405, 408, 451, 487], "distort": [395, 424], "distrib": [101, 134, 143, 456], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 101, 108, 134, 135, 143, 144, 155, 190, 230, 233, 242, 249, 289, 291, 330, 331, 335, 374, 377, 379, 380, 381, 385, 386, 389, 394, 399, 400, 403, 406, 407, 410, 411, 414, 425, 434, 440, 446, 447, 451, 456, 458, 459, 462, 464, 468, 470, 472, 473, 484, 489, 492, 494, 505, 507, 519, 523, 524, 526, 532, 540, 555, 578, 580, 581], "divers": 405, "divid": [192, 198, 203, 402, 405, 458, 468, 491, 496, 497], "divis": 198, "djangoproject": 401, "djuvsland": 447, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 179, 197, 198, 306, 307, 382, 387, 389, 390, 392, 401, 408, 413, 417, 423, 426, 428, 434, 443, 447, 453, 456, 457, 458, 461, 462, 464, 473, 474, 478, 486, 488, 491, 501, 503, 504, 515, 519, 521, 522, 523, 525, 526, 528, 529, 577, 578], "dl4": [99, 101, 102, 105, 109, 110, 118, 122, 126, 130, 133, 158, 179, 382, 387, 408, 413, 428, 475, 482, 483, 484, 519, 577, 578], "dl5": [118, 122, 126, 130, 133, 408, 447, 475, 483, 484, 577, 578], "dl6": [118, 122, 126, 130, 133, 483, 577, 578], "dll4mpqj": 478, "dm": [19, 20, 26, 428, 443, 480], "dm_exampl": 507, "dmfitfunct": 507, "dmpipe": 507, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 480, 507], "dmsky": 507, "dn": [230, 242, 480, 578], "dnde": [19, 20, 26, 67, 123, 124, 125, 132, 134, 136, 137, 138, 139, 143, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 280, 405, 432, 454, 456, 457, 466, 470, 481, 482, 483, 490, 495, 503, 505, 517], "dnde_cu": 281, "dnde_err": [123, 125, 134, 143, 517], "dnde_errn": [67, 123, 125, 134, 143, 481], "dnde_error": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "dnde_errp": [67, 123, 125, 134, 143, 481], "dnde_ref": [123, 125, 405], "dnde_scan_axi": [134, 143], "dnde_scan_valu": [123, 125], "dnde_ul": [67, 123, 125, 134, 143, 481, 505], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 104, 124, 150, 161, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 332, 374, 382, 384, 386, 387, 388, 391, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 410, 411, 413, 415, 426, 452, 454, 456, 457, 459, 460, 461, 462, 464, 466, 467, 468, 472, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 494, 495, 503, 504, 505, 515, 519, 526, 531, 576, 579, 582, 583], "do_someth": 381, "doc": [11, 13, 16, 83, 84, 87, 90, 91, 104, 124, 150, 192, 198, 201, 204, 211, 224, 248, 308, 345, 381, 382, 384, 386, 389, 395, 397, 398, 400, 401, 410, 417, 418, 420, 426, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 532, 543, 545, 551, 567, 573, 574, 578, 579, 583], "docker": [398, 411], "dockerfil": [389, 410, 411], "docstr": [381, 401, 407, 432, 433, 434, 436, 439, 445, 446, 447, 448, 464, 490], "doctest": [161, 369, 382], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 289, 291, 316, 320, 330, 355, 368, 381, 383, 385, 386, 388, 389, 391, 395, 397, 398, 400, 402, 404, 406, 407, 411, 412, 417, 418, 419, 426, 428, 429, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 487, 489, 494, 496, 497, 519, 530, 531, 532, 579], "doe": [16, 84, 87, 90, 91, 104, 124, 126, 130, 136, 153, 163, 166, 200, 239, 275, 287, 381, 382, 388, 389, 391, 393, 395, 396, 398, 400, 401, 404, 405, 407, 408, 423, 432, 443, 451, 452, 456, 459, 461, 464, 466, 467, 481, 484, 485, 486, 487, 488, 496, 507, 519, 528, 579], "doesn": [69, 381, 382, 386, 388, 389, 395, 398, 399, 401, 448, 494, 495, 579], "dof": 581, "doi": [135, 144, 407], "domain": [193, 194, 196, 202, 205, 206, 381, 395, 479], "domenico": 438, "dominguez": [226, 227, 404, 452, 545], "dominquez": 226, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 150, 380, 381, 384, 386, 388, 389, 398, 408, 411, 453, 456, 461, 466, 473, 488, 490, 577, 579, 582, 583], "donath": [390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 123, 126, 151, 152, 158, 163, 166, 374, 381, 382, 384, 386, 387, 388, 392, 394, 395, 396, 397, 399, 400, 401, 404, 405, 407, 410, 413, 417, 441, 446, 453, 459, 464, 465, 469, 470, 472, 475, 476, 482, 483, 486, 487, 490, 491, 515, 519, 527, 528, 532, 564, 581, 583], "dos2unix": 381, "dot": [50, 51, 54, 109, 110, 193, 194, 196, 202, 205, 206, 446], "doubl": [27, 122, 136, 137, 295, 407, 439, 447], "doubling_dict": 295, "down": [50, 51, 54, 133, 386, 388, 391, 395, 400, 410, 424, 482, 495, 582], "downgrad": [192, 380], "download": [67, 94, 101, 125, 384, 389, 397, 398, 401, 408, 410, 412, 413, 415, 417, 421, 422, 424, 425, 432, 441, 442, 443, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579], "downsampl": [102, 105, 109, 110, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 423, 429, 438, 448, 482, 483], "downsampled_energi": 482, "downsampling_factor": [133, 466], "downward": [289, 291], "dozen": 381, "dpp": 407, "dr": [17, 18, 21, 22, 24, 25, 27, 538], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 155, 173, 270, 306, 307, 382, 389, 401, 417, 450, 453, 456, 457, 462, 464, 474, 478, 486, 491, 501, 503, 504, 516, 519, 521, 522, 523, 525, 526, 528, 529, 533, 565], "dr2": [65, 270, 432, 450, 533, 565], "dr3": [65, 269, 450, 490, 533, 565], "dr4": [65, 447], "draft": [381, 385, 386, 409, 441], "drag": 384, "draw": [33, 194, 330, 394, 492], "drawback": [396, 400], "drawn": [330, 394], "drift": [85, 94, 95, 443], "drive": 397, "driven": [11, 15, 387, 397, 399, 401, 440, 499, 518], "drop": [52, 53, 102, 105, 109, 110, 123, 125, 130, 151, 152, 158, 163, 166, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 225, 232, 274, 366, 385, 386, 397, 398, 403, 422, 425, 426, 429, 432, 439, 442, 487, 515], "ds9": [83, 192, 201, 204, 208, 224, 248, 381, 382, 395, 424, 488, 490, 532], "ds9parser": 395, "dss": 391, "dt": [87, 91], "dtime_t": 479, "dtype": [33, 38, 87, 91, 111, 116, 148, 150, 153, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 224, 248, 308, 381, 409, 458, 461, 470, 478, 481, 482, 483, 485, 486, 487, 494, 495, 505, 517], "duck": [16, 84, 90, 104, 124], "due": [59, 87, 91, 381, 409, 435, 450, 455, 456, 487, 492, 494, 499, 555, 579], "dummi": [109, 110, 395, 461, 519], "dump": [16, 84, 90, 104, 124, 397], "dumps_kwarg": [16, 84, 90, 104, 124], "duplic": [87, 91, 100, 151, 381, 382, 384, 387, 401, 402, 405, 429, 432, 448], "durat": [83, 86, 88, 94, 459, 468, 472, 474, 478, 494, 516, 519], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 102, 104, 105, 109, 110, 124, 170, 287, 382, 389, 393, 397, 400, 401, 403, 406, 407, 408, 409, 410, 411, 426, 429, 446, 447, 457, 458, 468, 473, 474, 478, 482, 486, 488, 492, 504, 515, 516, 578, 582], "dust": 226, "duti": 407, "dwarf": 507, "dx": [33, 312], "dy": [33, 312], "dynam": [378, 516], "dz": 312, "dzeat61w": 478, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 104, 114, 124, 125, 126, 141, 150, 151, 152, 153, 155, 179, 186, 192, 193, 194, 196, 198, 200, 202, 204, 205, 206, 211, 214, 216, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 267, 268, 269, 270, 273, 275, 276, 277, 289, 291, 295, 308, 310, 314, 340, 348, 359, 370, 371, 376, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 420, 421, 422, 426, 432, 433, 434, 438, 440, 441, 442, 446, 448, 450, 452, 453, 454, 456, 457, 458, 459, 462, 465, 466, 467, 468, 469, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 498, 499, 501, 503, 504, 505, 507, 514, 515, 516, 517, 519, 523, 524, 529, 530, 531, 536, 537, 538, 545, 546, 548, 549, 550, 552, 553, 557, 558, 560, 561, 562, 563, 573, 576, 578, 579, 580, 581, 582, 583, 584], "e2dnd": [19, 20, 26, 123, 124, 125, 132, 136, 137, 138, 139, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 405, 432, 439, 451, 452, 454, 456, 457, 458, 465, 481, 483, 504, 505, 517, 519, 555], "e2dnde_err": [123, 125], "e2dnde_errn": [123, 125, 481], "e2dnde_errp": [123, 125, 481], "e2dnde_ref": [123, 125], "e2dnde_ul": [123, 125, 481], "e501": [19, 20, 150, 186, 197, 198, 204, 226, 378], "e_": [19, 20, 26, 50, 52, 53, 150, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 515, 521, 523, 524, 525, 546, 550, 558, 560, 561], "e_0": [228, 229, 230, 241, 242, 254, 255, 265, 268, 269, 270, 549, 550, 553, 555, 557, 560, 561, 562, 563], "e_b": 404, "e_cut": [67, 481], "e_cutoff": 555, "e_d": [254, 255], "e_edg": 429, "e_max": [67, 125, 405, 451, 456, 457, 458, 469, 473, 481, 482, 483, 484, 487, 492, 505, 517], "e_min": [67, 125, 405, 451, 456, 457, 458, 469, 473, 481, 482, 483, 484, 487, 492, 495, 505, 517], "e_peak": [230, 242], "e_reco": [111, 116, 150, 155, 476, 578], "e_ref": [67, 125, 405, 451, 456, 457, 473, 481, 483, 503, 505, 517], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 454, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 466, "e_sn": [43, 44, 52], "e_tru": [111, 116, 155, 476, 495], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 86, 87, 91, 92, 100, 102, 105, 108, 109, 110, 115, 117, 118, 120, 122, 123, 125, 126, 130, 132, 133, 135, 137, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 174, 175, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 234, 235, 237, 241, 242, 245, 248, 249, 250, 251, 253, 254, 255, 260, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 299, 306, 345, 370, 379, 381, 384, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 401, 402, 405, 407, 411, 412, 419, 426, 429, 440, 443, 446, 448, 453, 459, 460, 462, 464, 465, 466, 468, 469, 473, 474, 475, 476, 478, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 496, 497, 504, 508, 514, 515, 516, 519, 523, 524, 525, 531, 532, 539, 555, 556, 578, 579, 582, 583], "eager": 397, "earli": [395, 400, 401, 494], "earlier": [388, 407], "earth": [41, 88, 280, 495], "earth_azimuth_angl": [495, 505], "earthloc": [83, 85, 88, 90, 94, 97, 318, 408], "easi": [381, 382, 387, 392, 395, 396, 397, 400, 401, 405, 408, 426, 432, 440, 487, 488, 495, 516, 576, 577, 579, 583], "easier": [381, 387, 392, 400, 405, 440, 443, 494], "easiest": 414, "easili": [87, 91, 125, 387, 392, 393, 397, 408, 413, 414, 473, 474, 484, 485, 487, 495, 505, 579], "ebel": 460, "ebl": [226, 227, 277, 399, 404, 426, 429, 439, 446, 448, 450, 455, 490, 499, 533, 565], "ebl_data_builtin": [452, 545], "ebl_dominguez11": [227, 545], "ebl_franceschini": [227, 277], "ebl_franceschini_2017": 227, "ebl_saldana": 227, "eblabsorbtionnormspectralmodel": 404, "eblabsorptionnormspectralmodel": [259, 404, 429, 452, 490, 545], "ebltabl": 452, "ebound": [150, 198, 532], "ebreak": [218, 265, 546, 560], "ec": [476, 490, 532], "eccentr": [225, 234, 237, 536, 537, 538], "echo": 579, "eco": 407, "ecosystem": 408, "ecpl": [67, 80, 228, 229, 230, 287, 404, 438, 454, 481, 490], "ecpl_norm": 551, "ecsv": [59, 63, 125, 393], "ecut": [228, 268, 550, 561], "edelson": [136, 296, 299, 479], "edelson1988": [136, 299], "edelson2002": 296, "edg": [102, 105, 109, 110, 118, 120, 122, 126, 129, 130, 133, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 162, 164, 165, 173, 174, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 225, 374, 395, 405, 423, 429, 432, 451, 452, 456, 465, 466, 467, 468, 469, 479, 483, 485, 486, 487, 488, 495, 496, 503, 526, 536], "edge_max": [191, 192, 201, 204, 536], "edge_min": [191, 192, 201, 204, 536], "edge_width": [225, 489, 536], "edgecolor": [378, 456, 458, 460, 466, 467, 470, 476, 480, 528, 536, 537, 538], "edges_max": [195, 197, 198, 203, 487], "edges_min": [195, 197, 198, 203, 487], "edisp": [16, 82, 87, 88, 96, 102, 105, 106, 109, 110, 111, 116, 150, 151, 152, 155, 159, 173, 179, 180, 183, 184, 264, 306, 307, 382, 391, 392, 393, 394, 397, 427, 429, 432, 438, 439, 440, 448, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 466, 468, 469, 472, 474, 475, 478, 482, 486, 491, 494, 495, 496, 497, 503, 515, 523, 524, 578], "edisp2d": [152, 155, 382], "edisp2d_ax": 155, "edisp3d": 485, "edisp_": 515, "edisp_2d": [82, 87, 155, 494, 497], "edisp_3d": 485, "edisp_ev": 485, "edisp_kernel": [150, 482, 523], "edisp_kernel_map": [151, 496], "edisp_map": [103, 108, 151, 152, 485, 523], "edisp_new": 485, "edispkernel": [105, 111, 116, 151, 155, 183, 427, 523], "edispkernelmap": [102, 105, 106, 109, 110, 114, 152, 158, 159, 163, 166, 173, 180, 183, 428, 429, 460, 486, 495, 519, 523], "edispmap": [102, 103, 105, 108, 109, 110, 158, 159, 163, 166, 173, 180, 183, 184, 393, 394, 402, 422, 425, 426, 427, 429, 432, 485, 515, 523], "edit": [382, 384, 386, 388, 389, 390, 397, 401, 410, 411, 414, 503, 579], "editor": [382, 407, 457, 503, 579], "editori": 407, "edm": 484, "edu": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 118, 136, 153, 192, 201, 204, 211, 224, 245, 248, 280, 281, 290, 297, 299, 401, 484, 532], "eeddiri": 478, "eemin": 555, "eff": [153, 521, 524, 537, 538], "eff_area": 485, "effarea": 485, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 87, 88, 91, 105, 107, 152, 153, 179, 180, 185, 187, 188, 201, 224, 248, 371, 372, 381, 386, 391, 392, 394, 395, 405, 436, 438, 456, 468, 470, 473, 479, 492, 496, 497, 499, 503, 524, 532, 537, 538, 578], "effective_area": [159, 394, 494], "effective_livetim": 486, "effective_times_src": 486, "effectivearea3d": 485, "effectiveareat": [393, 420, 432, 436], "effectiveareatable2d": [88, 152, 159, 165, 187, 387, 436, 485, 494, 521], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 105, 110, 386, 392, 393, 394, 395, 396, 403, 454, 491, 524, 529, 581], "effort": [388, 390, 397, 398, 400, 401, 404, 423, 515], "eflux": [19, 20, 26, 123, 124, 125, 136, 137, 138, 139, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 405, 432, 470, 490, 517], "eflux_err": [123, 125, 405], "eflux_errn": [123, 125], "eflux_errp": [123, 125], "eflux_ref": [123, 125], "eflux_ul": [123, 125], "eg": [381, 448, 452, 464, 472, 475, 478, 482, 485, 489, 490, 492], "egal": 494, "egg": 414, "einasto": [21, 507], "either": [67, 82, 87, 88, 91, 95, 110, 123, 125, 155, 170, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 204, 205, 206, 239, 290, 308, 338, 370, 382, 384, 386, 388, 395, 397, 400, 403, 407, 413, 432, 446, 457, 464, 470, 475, 482, 484, 490, 492, 503, 515, 517, 519, 530, 532, 576, 579], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 480], "elabor": [407, 460], "elaps": [83, 390, 578], "electron": [50, 280, 494, 555], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 374, 399, 446, 448, 481, 487, 531], "elementtre": 494, "elev": 396, "elif": [381, 395, 408], "elli": [420, 433], "ellips": [225, 395, 532, 536], "ellipseannulusskyregion": [528, 532], "ellipseskyregion": [220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276, 453, 490, 528], "ellipsoid": 484, "ellipt": [532, 538], "elong": [422, 425, 426, 536, 537], "elpas": 446, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 123, 125, 133, 200, 381, 384, 395, 398, 405, 408, 409, 411, 413, 415, 491, 579, 581], "elsewher": [115, 117], "email": [382, 384, 407, 411], "emax": [130, 253, 281, 461, 467, 558], "emax_fit": 476, "embryon": 397, "emce": [390, 398, 422, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "emerg": 391, "emeri": 441, "emin": [130, 253, 281, 461, 467, 558], "emin_fit": 476, "emiss": [52, 68, 137, 387, 392, 396, 456, 462, 464, 465, 468, 489, 494, 495, 515, 529, 555, 576], "emit": [82, 214, 215, 216, 217, 367, 381, 422, 440, 452, 524], "emitt": 456, "emmanoulopoulo": [304, 448], "emmanoulopoulos2010": 304, "emphas": 483, "emphasi": 484, "empir": 40, "emploi": 458, "empti": [92, 100, 102, 105, 109, 110, 141, 173, 193, 194, 196, 200, 202, 205, 206, 211, 248, 367, 389, 391, 423, 435, 464, 468, 469, 472, 475, 486, 487, 496, 508, 515, 528, 529, 532], "empty_dataset": 451, "empty_i": 475, "empty_map": [102, 105, 109, 110, 467, 486, 528], "emsembl": 93, "en": [34, 83, 87, 88, 91, 126, 186, 201, 211, 277, 308, 384, 401, 451, 459, 461, 464, 466, 472, 475, 484, 485, 488, 494, 516, 519, 530, 532], "enabl": [390, 393, 414, 423, 432, 441, 451, 459, 461, 464, 466, 472, 475, 494, 526], "encapsul": [204, 405, 530], "enclos": [206, 382, 453, 458, 484, 488], "enclosur": [82, 157, 448, 458, 485], "encod": [16, 84, 87, 90, 91, 104, 124], "encompass": [192, 530, 532], "encount": [167, 413, 414, 415, 416, 458, 462, 468, 475, 478, 497, 567, 579], "encourag": [381, 386, 407, 410, 440], "end": [52, 53, 86, 87, 91, 92, 94, 100, 102, 109, 123, 125, 133, 198, 239, 248, 386, 388, 390, 392, 393, 395, 396, 397, 398, 400, 401, 404, 433, 443, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 501, 503, 504, 505, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 581], "end_po": [127, 341, 470], "endswith": 381, "energet": 468, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 80, 82, 83, 88, 96, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 122, 123, 125, 126, 127, 130, 132, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 173, 175, 179, 180, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 204, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 281, 283, 285, 376, 377, 381, 387, 390, 392, 393, 394, 395, 396, 397, 399, 400, 403, 405, 409, 413, 417, 421, 422, 423, 424, 426, 427, 428, 429, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 452, 453, 455, 456, 457, 459, 460, 461, 462, 464, 465, 466, 468, 470, 471, 472, 473, 474, 475, 476, 478, 481, 482, 483, 486, 487, 496, 497, 499, 503, 504, 505, 514, 515, 516, 519, 524, 526, 527, 528, 530, 531, 532, 539, 545, 551, 554, 556, 559, 564, 574, 577, 578, 580], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 102, 105, 109, 110, 111, 112, 113, 116, 123, 125, 150, 151, 152, 155, 163, 166, 173, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 405, 451, 453, 456, 458, 459, 460, 462, 466, 468, 469, 474, 475, 478, 482, 485, 486, 487, 490, 495, 496, 504, 523, 526, 528, 529, 531, 532], "energy_axis_new": 482, "energy_axis_tru": [102, 105, 109, 110, 111, 112, 113, 114, 116, 150, 151, 152, 153, 155, 161, 163, 173, 382, 426, 451, 453, 456, 458, 459, 460, 462, 466, 468, 469, 472, 474, 475, 476, 478, 482, 485, 486, 495, 496, 504, 523, 526, 528, 529], "energy_bin": 397, "energy_bin_per_decade_max": [112, 113], "energy_bound": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 395, 432, 452, 454, 456, 458, 464, 465, 476, 480, 481, 484, 490, 495, 504, 505, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 564], "energy_cent": 274, "energy_column": 405, "energy_depend": 467, "energy_dependent_estim": [450, 467, 471], "energy_edg": [16, 118, 120, 122, 126, 127, 130, 133, 141, 142, 146, 198, 328, 405, 452, 456, 457, 460, 461, 462, 464, 465, 466, 467, 470, 473, 474, 475, 476, 483, 496, 503, 504, 517], "energy_estim": 496, "energy_flux": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 490, 505], "energy_flux_err": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "energy_flux_error": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "energy_index": 160, "energy_integr": 51, "energy_logspac": 400, "energy_mask": [191, 192, 201, 204, 428, 458, 464, 476, 482, 484, 488, 492], "energy_max": [19, 20, 26, 83, 100, 102, 105, 109, 110, 123, 125, 126, 127, 130, 150, 191, 192, 198, 201, 204, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 274, 277, 283, 395, 397, 464, 469, 476, 478, 480, 482, 486, 490, 505], "energy_min": [19, 20, 26, 52, 53, 83, 100, 102, 105, 109, 110, 123, 125, 126, 127, 130, 150, 191, 192, 198, 201, 204, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 274, 277, 283, 395, 397, 464, 469, 476, 478, 480, 482, 486, 490, 505], "energy_nam": [163, 166], "energy_nod": [404, 490], "energy_pow": [19, 20, 26, 125, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 285, 456, 464, 476, 484, 505], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 102, 105, 109, 110, 432, 482, 488, 562, 563], "energy_range_fit": [102, 105, 109, 110, 482], "energy_range_saf": [102, 105, 109, 110, 482], "energy_range_tot": [102, 105, 109, 110, 488], "energy_reco": [381, 472], "energy_ref": [123, 125], "energy_resolut": 440, "energy_saf": 397, "energy_tru": [16, 96, 102, 105, 109, 110, 111, 116, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 173, 180, 183, 191, 192, 198, 201, 204, 306, 307, 381, 382, 394, 446, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 466, 468, 469, 472, 473, 474, 475, 476, 478, 482, 485, 486, 487, 488, 490, 491, 494, 495, 496, 503, 504, 523, 524, 526, 528, 529, 531, 532], "energy_true_axi": 150, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 424, "energydependentmorphologi": 467, "energydependentmorphologyestim": [447, 467], "energydependentmultigausspsf": [159, 420, 485, 494, 525], "energydependenttablepsf": [387, 402, 421, 432], "energydispers": [150, 151, 152, 155, 393, 427, 437, 440, 441], "energydispersion2d": [88, 150, 152, 159, 165, 183, 184, 382, 387, 432, 434, 439, 485, 494, 523], "energydispersion3d": 485, "energyoffsetarrai": 437, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 384, 408], "engin": [87, 91], "english": 519, "enhanc": [386, 390, 417], "enlarg": 529, "enough": [394, 396, 397, 456, 459, 462, 472, 473, 488, 526], "enrico": 397, "enrico_config": 397, "enrico_xml": 397, "enriqu": [389, 397, 401, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 440, 441, 442], "ensembl": 93, "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 179, 199, 287, 381, 387, 392, 393, 404, 408, 414, 434, 448, 451, 456, 474, 483, 488, 526, 531, 540], "enter": [215, 217, 224, 248, 417], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 102, 104, 105, 109, 110, 124, 180, 453, 464, 467, 479], "entri": [43, 44, 87, 91, 94, 120, 123, 126, 127, 130, 131, 133, 135, 136, 143, 144, 211, 212, 224, 248, 287, 348, 381, 382, 393, 401, 405, 408, 410, 432, 443, 448, 453, 457, 481, 484, 487, 490, 491, 519, 520, 532], "entry_point": 433, "enum": [95, 156, 323, 324], "enumer": [456, 468, 481, 484, 489, 492], "env": [384, 398, 410, 412, 413, 415, 416, 441, 579], "envelop": [394, 484, 504], "environ": [11, 82, 346, 380, 381, 384, 388, 389, 393, 398, 401, 410, 411, 413, 414, 415, 416, 417, 421, 422, 424, 440, 441, 448, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 579], "envis": 390, "envvar": 11, "eosc": 407, "episod": 137, "epoch": 364, "epsilon": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "epsilon_": [102, 109, 515], "epsilon_k": [102, 109, 515], "epsmch": 484, "eq": 101, "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 404, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 118, 122, 126, 130, 133, 150, 198, 381, 391, 394, 442, 456, 473, 474, 488, 492, 515, 531, 582], "equat": [27, 269, 270, 296, 541, 542, 546, 549, 550, 552, 553, 557, 558, 560, 561, 562, 563, 581, 582], "equatori": [95, 156, 192, 193, 194, 196, 199, 201, 204, 205, 206, 485], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 123, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 243, 374, 382, 393, 394, 395, 404, 405, 446, 447, 456, 481, 486, 487, 488, 490, 494, 503, 515, 517, 519, 530, 531, 532, 579, 580, 581], "er": [26, 480], "era": 226, "ereco": [150, 485], "erf": [235, 536], "erg": [52, 53, 67, 451, 456, 481, 505, 512, 519], "erlangen": 400, "erod": 206, "eroli3o4": 464, "eros": [204, 206], "err": 484, "errat": 381, "errn": [122, 126, 130, 131, 133, 211, 443, 581], "errn_2sigma": 581, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 101, 102, 104, 105, 109, 110, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 143, 169, 195, 198, 203, 214, 216, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 289, 291, 295, 296, 297, 299, 304, 359, 381, 382, 395, 396, 397, 399, 404, 405, 408, 409, 422, 426, 428, 430, 432, 433, 435, 439, 440, 443, 445, 446, 447, 448, 452, 453, 454, 456, 457, 459, 460, 461, 464, 465, 466, 467, 469, 472, 473, 475, 476, 478, 479, 481, 483, 490, 491, 492, 494, 503, 504, 505, 507, 515, 517, 519, 537, 555, 564, 576, 579], "error_callback": 169, "errorbar": [83, 101, 102, 105, 109, 110, 198, 202, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 451, 478, 492], "errp": [122, 126, 130, 131, 133, 211, 443, 581], "errp_2sigma": 581, "escap": [381, 407], "especi": [87, 91, 137, 384, 388, 391, 395, 401, 402, 411, 432, 438, 453, 466, 474, 481, 487, 492, 494, 495], "essenti": [391, 393, 396, 426, 427, 428, 470, 487], "establish": [381, 394], "estim": [6, 19, 20, 26, 50, 72, 101, 105, 110, 112, 113, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 168, 174, 175, 176, 182, 191, 192, 201, 204, 206, 211, 214, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 287, 294, 297, 302, 328, 374, 385, 387, 390, 394, 395, 396, 397, 400, 403, 409, 413, 422, 423, 426, 427, 428, 429, 432, 433, 434, 438, 439, 440, 441, 443, 446, 447, 448, 450, 451, 452, 456, 458, 462, 464, 465, 466, 469, 471, 474, 475, 476, 477, 482, 484, 488, 492, 493, 496, 499, 503, 504, 515, 519, 529, 576, 577, 578, 580, 582], "estimate_best_fit": [126, 127, 130, 131], "estimate_count": [126, 127, 130, 131], "estimate_energy_depend": 120, "estimate_errn_errp": [126, 127, 130, 131], "estimate_excess_map": 122, "estimate_exposure_reco_energi": 122, "estimate_fit_input_map": 133, "estimate_flux_default": 133, "estimate_flux_map": 133, "estimate_flux_point": [126, 127, 130], "estimate_kernel": [122, 133], "estimate_map": 118, "estimate_mask_default": [122, 133], "estimate_min_e2dnd": 132, "estimate_min_excess": 132, "estimate_npr": [126, 127, 130, 131], "estimate_npred_excess": [126, 127, 130], "estimate_pad_width": 133, "estimate_scan": [126, 127, 130, 131], "estimate_t": [126, 127, 130, 131], "estimate_time_bin_flux": 130, "estimate_ul": [126, 127, 130, 131], "estimator_result": [135, 143, 144, 476], "et": [26, 33, 59, 101, 136, 137, 153, 226, 296, 297, 299, 304, 391, 448, 460, 467, 479, 507, 578], "eta": [237, 238, 261, 538, 542, 569], "eta_": 50, "eta_b": 50, "eta_rang": [538, 542], "etc": [105, 110, 123, 381, 386, 387, 391, 392, 393, 396, 397, 401, 402, 405, 407, 408, 429, 457, 459, 464, 472, 473, 475, 476, 478, 482, 487, 490, 492, 495, 503, 515, 528], "etru": 485, "eu": 401, "euclidean": 306, "europ": 407, "ev": [483, 485, 519, 555], "ev2": 485, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 102, 105, 108, 109, 110, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 180, 186, 201, 212, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 321, 381, 386, 390, 396, 399, 400, 403, 404, 405, 409, 421, 422, 423, 425, 428, 432, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 468, 469, 476, 485, 490, 492, 494, 495, 515, 537, 538, 545, 578, 581], "evaluate_contain": [154, 162, 164, 434], "evaluate_direct": [154, 162, 164], "evaluate_energy_flux": [254, 255], "evaluate_error": [19, 20, 26, 125, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 399], "evaluate_geom": [220, 221, 225, 232, 234, 237, 250, 252, 261, 262, 264, 266, 272, 276, 447, 490, 538], "evaluate_integr": [253, 254, 255], "evaluate_paramet": [154, 162, 164], "evaluation_bin_size_min": [220, 221, 225, 234, 237, 250, 252, 261, 262, 264, 266, 272, 276], "evaluation_radiu": [220, 221, 225, 234, 237, 250, 252, 261, 262, 264, 266, 272, 274, 276, 392, 393, 404, 490], "evaluation_region": [220, 221, 225, 234, 237, 250, 252, 261, 262, 264, 266, 272, 276], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 134, 143, 204, 215, 217, 381, 384, 386, 388, 389, 395, 398, 399, 407, 408, 424, 473, 476, 483, 484, 486, 487, 488, 489, 490, 503, 515, 517, 541, 542, 579], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 103, 104, 108, 114, 122, 132, 152, 163, 166, 167, 174, 182, 193, 194, 196, 202, 205, 206, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 338, 381, 382, 385, 387, 391, 393, 395, 396, 397, 408, 413, 417, 424, 425, 426, 428, 432, 433, 434, 439, 440, 441, 442, 443, 446, 447, 448, 450, 453, 456, 457, 458, 462, 464, 465, 471, 475, 486, 496, 499, 501, 503, 504, 519, 527, 528, 529, 577, 578, 581], "event_3fhl": 505, "event_class": [84, 495, 505], "event_det_coord": [103, 108], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [394, 494, 495, 505, 516], "event_list": [83, 381, 382, 394], "event_list_meta": [103, 108, 427], "event_sampl": [450, 468, 471], "event_sampling_nrg_depend_model": [450, 469, 471], "event_typ": [104, 495, 505], "eventlist": [84, 88, 103, 108, 182, 193, 194, 196, 202, 205, 206, 381, 382, 387, 394, 395, 396, 408, 417, 422, 429, 434, 436, 437, 438, 440, 441, 468, 469, 476, 487, 494, 495, 505, 516, 519, 528], "eventlistbas": 89, "eventlistdataset": 441, "eventlistmetadata": [83, 408], "events2": 83, "events_": 468, "events_0001": 468, "events_1": 516, "events_2": 516, "events_3fhl": 505, "events_bkg": 394, "events_gc_3fhl": 505, "events_list": 394, "events_path": [82, 468], "events_src": 394, "events_tot": 394, "events_vela": 476, "eventu": [381, 386, 397, 400, 401, 417, 490], "ever": 582, "everi": [192, 194, 206, 276, 381, 384, 389, 390, 391, 393, 397, 406, 408, 411, 453, 456, 487, 504, 579], "everyon": 386, "everyth": [381, 399, 400, 519], "everywher": [381, 395, 400, 401, 421], "evid": [137, 481], "evolut": [50, 52, 53, 226, 387, 401, 450, 471, 499, 512, 513, 533], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 226, 398, 401, 408, 469, 485], "evt_sampl": 468, "ex": [11, 487, 489, 490], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 399, 474, 487, 495], "exactli": [118, 122, 126, 130, 133, 198, 376, 456, 458, 474, 476, 488, 492, 495, 515, 532], "exagger": 372, "examin": [407, 523], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 101, 102, 105, 109, 110, 111, 115, 116, 117, 118, 120, 122, 123, 125, 127, 129, 130, 131, 132, 133, 137, 141, 142, 145, 146, 148, 150, 152, 153, 154, 155, 161, 163, 166, 173, 176, 178, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 215, 217, 239, 246, 277, 281, 287, 290, 306, 307, 328, 332, 338, 348, 360, 361, 366, 369, 371, 372, 374, 376, 378, 381, 382, 384, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 404, 407, 408, 409, 413, 414, 415, 417, 421, 423, 426, 429, 432, 433, 434, 437, 439, 440, 441, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 516, 519, 521, 522, 523, 525, 530, 532, 533, 534, 544, 565, 573, 574, 575, 576, 579, 581, 583, 584], "example_cub": 487, "example_cube_fgst": 487, "exce": [112, 113], "except": [67, 69, 80, 87, 91, 102, 105, 109, 110, 169, 193, 194, 196, 202, 205, 206, 308, 378, 381, 392, 396, 400, 485, 489, 532], "excerpt": 497, "excess": [15, 67, 72, 102, 105, 109, 110, 119, 122, 123, 125, 126, 127, 130, 132, 135, 138, 139, 143, 144, 173, 289, 291, 296, 297, 379, 393, 396, 428, 429, 435, 440, 447, 448, 451, 452, 456, 457, 459, 460, 461, 464, 466, 470, 472, 475, 476, 481, 482, 483, 486, 488, 489, 496, 503, 504, 517, 519], "excess_estim": 496, "excess_estimator_integr": 496, "excess_integr": 496, "excess_map": [16, 457, 461, 462, 464, 503], "excess_map_estim": 476, "excess_matching_signific": [431, 441], "excess_min": 146, "excess_r": 482, "excessestim": 405, "excessmapconfig": 16, "excessmapestim": [119, 141, 142, 143, 144, 405, 428, 429, 430, 432, 435, 445, 447, 448, 462, 464, 476, 483, 488, 496, 517], "excesspointsestim": 405, "excessprofileestim": [405, 429], "exchang": 395, "exclud": [16, 84, 90, 101, 102, 104, 105, 109, 110, 124, 129, 174, 176, 215, 217, 224, 248, 387, 444, 464, 486, 488, 528, 529], "exclude_default": [16, 84, 90, 104, 124], "exclude_non": [16, 84, 90, 104, 124], "exclude_unset": [16, 84, 90, 104, 124], "exclus": [16, 83, 168, 170, 175, 176, 177, 178, 181, 192, 204, 387, 395, 397, 428, 430, 448, 453, 461, 464, 486, 526, 528], "exclusion_mask": [168, 170, 175, 176, 177, 178, 181, 456, 462, 466, 486, 488, 504, 526, 528, 529], "exclusion_mask_2d": 486, "exclusion_mask_crab": [457, 503], "exclusion_radiu": 488, "exclusion_region": 456, "exclusionmask": 438, "execut": [11, 122, 126, 130, 131, 133, 381, 382, 384, 386, 388, 389, 390, 396, 397, 401, 411, 412, 413, 414, 415, 416, 417, 426, 434, 440, 450, 455, 463, 471, 477, 486, 487, 493, 495, 498, 499, 500, 502, 505, 506, 534, 544, 565, 575, 577], "exercis": [384, 397, 401, 407], "exhibit": 467, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 88, 91, 99, 100, 101, 102, 105, 107, 109, 110, 123, 125, 151, 152, 158, 163, 166, 178, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 212, 224, 239, 248, 272, 273, 274, 276, 350, 365, 381, 384, 386, 389, 390, 392, 393, 394, 395, 397, 398, 400, 401, 402, 404, 405, 407, 408, 413, 414, 417, 418, 421, 425, 426, 440, 441, 443, 446, 460, 462, 482, 487, 488, 490, 491, 495, 516, 531, 532, 580], "exist_ok": [456, 457, 464, 465, 468, 503, 504], "exit": [11, 15, 87, 91, 215, 217, 224, 248, 422, 543, 579], "exot": 398, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 153, 231, 235, 242, 254, 255, 268, 382, 404, 475, 490, 537, 538, 545, 549, 550, 551, 552, 561, 562, 563, 567, 568, 569, 582], "expand": [130, 346, 391, 432], "expand_map": 130, "expans": [50, 52, 53], "expcutoffpowerlaw": 551, "expcutoffpowerlaw3fglspectralmodel": [259, 404, 454, 490, 550], "expcutoffpowerlawnormspectralmodel": [230, 259, 447, 490, 551], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 218, 219, 222, 226, 228, 229, 235, 241, 242, 245, 249, 251, 253, 254, 255, 259, 260, 265, 267, 268, 269, 270, 273, 277, 404, 454, 456, 464, 490, 549, 555], "expdecai": [231, 450, 533, 575], "expdecay_model": [468, 567], "expdecaytemporalmodel": [271, 404, 428, 432, 468, 475, 490, 567], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 105, 108, 110, 123, 178, 183, 184, 189, 204, 289, 290, 291, 292, 294, 298, 305, 338, 381, 386, 394, 396, 397, 398, 401, 406, 408, 451, 453, 458, 459, 460, 462, 468, 469, 473, 479, 480, 484, 487, 488, 492, 495, 497, 515, 517, 580, 581, 582], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 456, 469], "experi": [381, 384, 386, 390, 392, 396, 409, 411, 440, 507, 578, 583], "experienc": [390, 416], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 397, 579], "expert": 401, "expertis": 398, "expfactor": [269, 270, 562, 563], "expir": 394, "explain": [87, 91, 381, 384, 386, 395, 398, 400, 401, 407, 411, 413, 415, 426, 432, 451, 456, 458, 480, 484, 488, 490, 494, 519, 577, 579], "explan": [118, 122, 126, 130, 133, 382, 386, 418, 479, 583], "explicit": [87, 91, 192, 194, 381, 382, 397, 399, 405, 531, 583], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 308, 391, 403, 412, 422, 469, 489, 517, 531, 583], "explor": [193, 194, 196, 202, 205, 206, 389, 397, 417, 450, 456, 461, 464, 467, 470, 471, 473, 474, 478, 479, 481, 482, 489, 496, 497, 503, 505, 519, 528], "explos": 52, "expomap": 394, "expon": [404, 490], "exponenti": [28, 30, 36, 39, 40, 77, 228, 229, 230, 231, 268, 269, 270, 382, 392, 426, 450, 464, 468, 475, 533, 565], "exponentialcutoffpowerlaw": 555, "export": [84, 87, 90, 91, 102, 104, 105, 123, 124, 125, 384, 405, 408, 413, 415, 426, 436, 443, 444, 447, 457, 490, 496, 497, 503], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 390, 395, 396, 397, 400, 401, 445, 447, 448, 487, 499, 517, 518, 577], "exposur": [16, 83, 88, 102, 105, 106, 108, 109, 110, 122, 133, 140, 151, 152, 158, 161, 163, 166, 168, 173, 180, 183, 184, 185, 187, 188, 189, 264, 300, 303, 305, 387, 390, 391, 392, 393, 394, 405, 424, 429, 437, 439, 440, 441, 443, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 466, 468, 469, 472, 474, 475, 478, 482, 486, 487, 488, 496, 503, 504, 515, 524, 527, 532, 581], "exposure_geom": 152, "exposure_hdu": [151, 152, 158, 163, 166], "exposure_hdu_band": [151, 152, 158, 163, 166], "exposure_hpx": 495, "exposure_map": [151, 152, 158, 163, 166, 183, 184, 189, 485], "exposure_max": 482, "exposure_min": 482, "exposure_tim": 394, "express": [122, 137, 289, 291, 392, 404, 405, 447, 462, 484, 485, 490, 492, 515, 531, 538, 580, 581, 582], "exptest": 438, "extend": [15, 19, 20, 26, 69, 72, 87, 91, 92, 100, 168, 195, 198, 206, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 248, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 290, 388, 392, 393, 394, 395, 401, 403, 404, 405, 408, 413, 425, 427, 432, 450, 455, 456, 460, 469, 473, 481, 487, 488, 489, 490, 495, 499, 527, 528], "extended_archive_v18": 543, "extended_source_spectral_analysi": [450, 453, 455], "extens": [41, 150, 193, 194, 196, 198, 205, 206, 220, 221, 224, 225, 234, 237, 248, 250, 252, 261, 262, 266, 272, 276, 383, 386, 387, 388, 389, 390, 392, 394, 396, 397, 398, 399, 400, 401, 410, 411, 435, 467, 468, 469, 490, 579], "extent": [204, 224, 248, 395, 460, 490], "extern": [114, 382, 407, 433, 437, 438, 441, 494, 519], "extnam": 485, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 101, 104, 124, 191, 192, 197, 201, 202, 204, 210, 211, 213, 272, 273, 306, 380, 382, 388, 389, 395, 397, 398, 401, 407, 408, 437, 440, 441, 452, 487, 488, 519, 532], "extra_term": 305, "extract": [16, 84, 90, 100, 102, 104, 105, 109, 110, 123, 124, 125, 130, 151, 152, 158, 163, 166, 169, 174, 175, 180, 182, 190, 193, 194, 195, 196, 198, 203, 204, 205, 206, 274, 381, 391, 396, 405, 407, 408, 434, 435, 446, 447, 451, 453, 456, 457, 458, 459, 464, 465, 468, 469, 470, 472, 478, 482, 483, 487, 503, 515, 523, 528], "extragalact": [226, 452, 494], "extrapol": [101, 147, 148, 149, 173, 193, 194, 196, 202, 205, 206, 226, 277, 320, 321, 432, 437, 439, 440, 448, 485, 487, 494, 495, 531], "extras_requir": 398, "extrem": [381, 408, 487, 538], "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 133, 146, 200, 211, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 307, 308, 335, 381, 384, 398, 403, 404, 409, 412, 413, 415, 434, 443, 451, 453, 456, 457, 459, 465, 466, 467, 468, 469, 474, 475, 476, 478, 480, 481, 484, 486, 488, 490, 491, 492, 495, 496, 501, 503, 504, 505, 513, 528, 545, 555, 566, 567, 568, 569, 570, 571, 572, 579, 580, 581], "f0": [275, 573], "f06": 48, "f06b": [49, 509], "f06p": 49, "f1": [275, 573], "f1jdj4yu": 478, "f2": [275, 573], "f4": [148, 153, 458, 482, 485, 487, 494, 495], "f8": [485, 495], "f_": [295, 297, 307, 515], "f_0": [253, 558], "f_dead": [83, 88], "f_i": 295, "f_max": 479, "f_max_err": 479, "f_mean": 479, "f_mean_err": 479, "f_min": 479, "f_min_err": 479, "f_pp": 296, "f_var": 296, "fabio": [394, 399, 422, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 439, 441, 443, 445, 446, 447, 448], "face": [386, 389], "facecolor": [378, 452, 456, 458, 466, 467, 470, 476, 480, 536, 537, 538], "facil": 406, "fact": [19, 20, 97, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 407, 453, 532], "facto": 407, "factor": [19, 20, 23, 102, 103, 105, 108, 109, 110, 118, 122, 123, 151, 152, 154, 158, 160, 161, 162, 163, 164, 166, 173, 180, 186, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 209, 214, 215, 216, 217, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 250, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 272, 275, 276, 278, 290, 381, 394, 396, 428, 448, 451, 459, 460, 461, 464, 466, 470, 472, 475, 482, 483, 486, 490, 494, 515, 532, 545], "factor1": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276], "factor_max": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276], "factor_min": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276], "factori": [193, 194, 205, 206, 395, 400, 404, 530, 532], "factoris": [264, 404, 490, 576], "fail": [16, 84, 90, 104, 124, 211, 382, 384, 395, 410, 411, 435, 448, 465, 495], "failur": [443, 446], "faint": 580, "fair": [381, 407], "fair4r": [381, 407], "fake": [102, 105, 109, 110, 393, 394, 424, 458, 459, 472, 475, 492], "fall": [77, 137, 176, 203, 224, 248, 381, 388, 390, 391, 398, 441, 442, 479], "fallback": 381, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 122, 123, 124, 125, 126, 130, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 173, 180, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 290, 308, 321, 338, 344, 347, 349, 350, 378, 381, 395, 397, 404, 409, 440, 441, 447, 451, 452, 453, 456, 457, 458, 459, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 495, 503, 504, 505, 516, 519, 526, 528, 529, 543, 555, 564], "falsifi": 492, "famili": 407, "familiar": [398, 399, 487, 488, 505], "fanci": [381, 476], "far": [389, 394, 396, 398, 402, 405, 408, 417, 432, 468, 507], "fashion": [396, 401], "fast": [381, 395, 399, 484], "faster": [87, 91, 134, 143, 193, 194, 196, 202, 205, 206, 359, 447, 460], "faucher": [31, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 31, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 509, "favour": [386, 394, 409, 492], "favourit": 466, "fbgfp0dm": 486, "fc": [490, 532], "fcluster": [306, 491], "fcluster_kwarg": [306, 491], "fcn": 484, "fdx": 381, "fe": 280, "feasibl": [395, 400, 459, 472, 482], "featur": [6, 13, 87, 91, 96, 118, 141, 306, 307, 371, 372, 381, 384, 388, 390, 391, 392, 393, 395, 397, 398, 403, 404, 405, 407, 408, 409, 414, 419, 422, 423, 424, 425, 426, 428, 429, 432, 436, 439, 440, 441, 442, 479, 487, 488, 490, 491, 517, 555], "feature_irf": 491, "features_irf": [96, 306, 307, 491], "feb": [387, 388, 398, 402, 417, 419], "februari": 419, "fed": 458, "feedback": [384, 386, 390, 395, 397, 398, 401, 402, 404, 410, 440, 485, 519], "feedstock": [410, 411], "feel": [391, 579], "feijen": [445, 446, 447, 448], "feldman": [423, 429, 437, 439, 578], "feldman1998": [578, 581], "fellowship": 407, "felt": 381, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 126, 127, 129, 133, 193, 194, 196, 202, 203, 205, 206, 226, 280, 282, 287, 388, 389, 390, 391, 393, 394, 397, 398, 401, 411, 413, 418, 420, 421, 424, 426, 429, 433, 436, 437, 438, 439, 440, 441, 448, 450, 452, 454, 460, 468, 470, 481, 487, 488, 489, 490, 498, 499, 505, 507, 516, 519, 524, 543, 553, 558, 576, 583], "fermi_3fhl": [83, 193, 194, 196, 202, 205, 206, 489, 495, 505], "fermi_3fhl_events_select": [83, 495], "fermi_3fhl_exposure_cube_hpx": 495, "fermi_3fhl_psf_gc": 495, "fermi_bkg_model": 489, "fermi_ct": 129, "fermi_dataset": [287, 489, 495], "fermi_lat": [401, 441, 450, 495, 498], "fermi_model": 495, "fermi_prof": 127, "fermi_ts_imag": 382, "fermilat": 452, "fermipi": [388, 390, 393, 397, 401, 405, 438, 440, 495, 507], "fermitool": 397, "fetch": [15, 381, 389, 410, 420, 433, 503, 579], "few": [82, 83, 87, 88, 91, 380, 381, 382, 384, 386, 387, 388, 389, 391, 393, 395, 399, 401, 406, 410, 411, 417, 431, 442, 444, 447, 448, 453, 457, 462, 464, 466, 481, 483, 484, 487, 494, 503, 504, 528, 532, 584], "fewer": [395, 401], "ff": 407, "fft": 206, "fftconvolv": 206, "fgl": [203, 488], "fgst": [192, 193, 194, 196, 197, 198, 204, 205, 206, 487], "fhit": 496, "fidalgo": [391, 396, 421, 441, 442], "fiduci": 487, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 104, 124, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 170, 232, 249, 310, 314, 368, 381, 395, 407, 408, 417, 422, 427, 434, 441, 456, 458, 462, 464, 466, 468, 485, 486, 488, 494, 495, 519, 521, 522, 523, 524, 525, 526, 528, 555, 578], "fieldinfo": [16, 84, 90, 104, 124], "fig": [206, 369, 451, 453, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 470, 473, 475, 476, 480, 484, 488, 492, 504, 528, 529, 538, 542, 545, 577], "figsiz": [88, 102, 105, 109, 110, 128, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 193, 194, 196, 202, 205, 206, 209, 369, 453, 456, 459, 460, 462, 464, 465, 466, 467, 473, 474, 475, 476, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 497, 504, 528, 538, 542, 545], "figur": [88, 102, 105, 109, 110, 128, 147, 148, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 166, 193, 194, 196, 202, 205, 206, 209, 359, 368, 369, 375, 381, 382, 386, 401, 411, 452, 456, 460, 464, 466, 467, 468, 470, 473, 474, 479, 480, 481, 482, 484, 486, 487, 489, 490, 494, 495, 496, 497, 579], "file": [11, 15, 16, 26, 65, 66, 67, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 174, 179, 193, 194, 196, 200, 202, 205, 206, 212, 224, 226, 239, 248, 272, 273, 274, 275, 276, 277, 316, 344, 347, 350, 380, 381, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 398, 400, 401, 402, 404, 405, 408, 409, 410, 411, 412, 413, 415, 417, 425, 426, 432, 434, 436, 438, 439, 440, 441, 443, 444, 446, 447, 448, 450, 451, 455, 458, 459, 463, 464, 466, 468, 469, 471, 472, 475, 477, 481, 482, 486, 487, 488, 489, 490, 493, 496, 497, 498, 499, 500, 502, 505, 506, 507, 518, 519, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 583], "file_dir": 316, "file_model": 468, "file_nam": 316, "filemod": [16, 457, 461, 462, 464, 503, 579], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 105, 106, 107, 109, 110, 123, 125, 127, 129, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 193, 194, 196, 200, 202, 205, 206, 224, 226, 239, 248, 272, 273, 274, 275, 276, 277, 282, 284, 286, 287, 316, 347, 350, 360, 381, 382, 386, 429, 448, 456, 457, 461, 462, 464, 465, 469, 470, 481, 482, 483, 487, 488, 489, 490, 494, 495, 503, 504, 505, 516, 519, 521, 522, 523, 525, 543, 545, 573, 574, 579], "filename_1": 516, "filename_2": 516, "filename_arf": 107, "filename_bkg": 107, "filename_model": [100, 123, 287, 489, 495], "filename_rmf": 107, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 102, 104, 105, 108, 109, 110, 124, 150, 161, 192, 193, 194, 196, 202, 204, 205, 206, 277, 381, 389, 390, 394, 397, 401, 407, 410, 411, 426, 433, 440, 443, 453, 468, 469, 481, 485, 486, 488, 495, 504, 531], "fill_between": [19, 20, 26, 128, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 476], "fill_by_coord": [161, 193, 194, 196, 202, 205, 206, 487, 495, 531], "fill_by_idx": [193, 194, 196, 202, 205, 206, 531], "fill_by_pix": [193, 194, 196, 202, 205, 206, 531], "fill_ev": [193, 194, 196, 202, 205, 206, 435, 446, 458, 487, 495, 501], "fill_nan": 194, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206, 272, 273, 276, 381, 485, 487], "filled_t": [87, 91], "filter": [88, 89, 387, 391, 393, 395, 396, 441, 442, 445, 478, 488, 491, 499, 504, 505], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [123, 125], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [475, 476], "final": [130, 290, 381, 382, 388, 389, 391, 394, 395, 397, 398, 400, 402, 404, 406, 407, 411, 426, 427, 428, 451, 452, 453, 454, 456, 464, 466, 468, 469, 473, 474, 476, 480, 482, 484, 486, 488, 491, 495, 496, 499, 503, 504, 505, 515, 516, 517], "finalis": 385, "find": [19, 20, 26, 133, 141, 142, 150, 176, 177, 181, 208, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 300, 381, 386, 392, 394, 400, 410, 411, 412, 432, 434, 440, 441, 446, 447, 454, 456, 460, 481, 482, 487, 490, 494, 497, 505, 579, 581, 582], "find_peak": [142, 441, 460, 466], "find_peaks_in_flux_map": 460, "find_root": 432, "finder": [141, 176, 177, 432, 441, 460], "fine": [288, 321, 394, 462, 482, 495, 532, 579], "finer": [468, 482, 532], "fingertip": 380, "finish": [384, 388, 390, 410, 438, 440], "finit": [100, 102, 105, 109, 110, 151, 152, 158, 163, 179, 194, 202, 206, 274, 399], "fink": [226, 227, 452, 545], "fir": 555, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 102, 105, 109, 110, 123, 125, 127, 134, 136, 141, 143, 150, 167, 176, 193, 194, 195, 198, 202, 203, 224, 248, 281, 299, 341, 370, 381, 382, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 405, 406, 407, 411, 412, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 439, 441, 442, 443, 444, 446, 448, 451, 453, 454, 456, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 499, 503, 504, 505, 516, 528, 531, 579], "firstli": [467, 468, 483], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 170, 173, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 210, 212, 213, 214, 216, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 274, 275, 276, 277, 287, 288, 289, 291, 292, 293, 298, 301, 305, 316, 317, 318, 363, 364, 367, 369, 374, 376, 380, 381, 382, 387, 391, 392, 393, 394, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 413, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 437, 439, 440, 441, 442, 444, 446, 447, 448, 450, 451, 455, 459, 460, 462, 463, 467, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 481, 482, 483, 485, 486, 487, 489, 490, 491, 493, 494, 496, 497, 499, 501, 505, 515, 516, 517, 518, 519, 521, 522, 523, 525, 526, 527, 528, 536, 543, 545, 555, 573, 574, 577, 578, 583], "fit2": 489, "fit_covari": [457, 503], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [453, 456, 464, 465], "fit_prior": 492, "fit_rang": [16, 457, 461, 462, 464, 503], "fit_result": [211, 287, 457, 478, 483, 503], "fit_results_nul": 287, "fit_scipi": 484, "fit_sherpa": 484, "fit_stat_scan": 396, "fit_statist": [381, 462], "fit_statistics_cython": 411, "fitconfig": 16, "fitmc": 399, "fitresult": [211, 434, 446, 448, 484, 504], "fitsfixedwarn": [460, 543], "fitsonli": 494, "fitspectrum": 436, "fitstepresult": [210, 213], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 439, 440, 454], "five": 505, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 106, 107, 133, 145, 163, 165, 180, 211, 250, 251, 256, 276, 384, 386, 387, 388, 392, 393, 396, 398, 403, 405, 406, 407, 410, 411, 413, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 451, 458, 459, 461, 462, 464, 465, 468, 472, 474, 475, 478, 484, 485, 486, 489, 490, 491, 503, 529, 531, 539, 556], "fixed_altaz": 85, "fixed_bin": 145, "fixed_icr": [85, 163, 451, 459, 468, 469, 472, 475], "fixed_offset": [96, 179, 432], "fixed_r_in": 168, "fixed_width": 168, "fixedpointinginfo": [88, 163, 186, 446, 447, 451, 459, 468, 469, 472, 475], "fk5": [532, 543], "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 108, 123, 125, 126, 127, 130, 131, 191, 192, 193, 194, 196, 198, 199, 201, 202, 204, 205, 206, 210, 211, 212, 213, 453, 464, 468, 481, 490], "flake8": 384, "flare": [137, 295, 413, 426, 427, 450, 473, 475, 477, 478, 479, 499, 517, 528], "flask": 440, "flat": [125, 137, 155, 165, 191, 192, 197, 199, 201, 204, 207, 208, 250, 392, 405], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 191, 192, 199, 201, 204, 479], "fledg": 409, "flexibl": [82, 332, 381, 386, 390, 391, 392, 395, 397, 401, 402, 408, 487, 519, 576], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 102, 105, 109, 110, 114, 118, 122, 124, 125, 128, 131, 132, 133, 141, 142, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 168, 170, 179, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 207, 208, 211, 213, 214, 216, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 287, 288, 289, 290, 291, 294, 298, 300, 308, 319, 326, 335, 337, 370, 371, 372, 486, 492, 494, 495, 579, 583], "float32": [191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 461, 466, 487], "float64": [87, 91, 111, 116, 150, 153, 381, 409, 417, 483, 485, 487, 517, 579], "float64float64float64": 466, "float64float64float64float64float64float64float64float32bool": 454, "float64float64float64float64float64float64float64float64": 466, "float_a": [87, 91], "flow": [408, 577, 578], "fluctuat": [289, 291, 405, 459, 472, 492, 581], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 101, 102, 105, 109, 110, 118, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 218, 219, 220, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 245, 249, 251, 252, 253, 254, 255, 256, 260, 263, 264, 265, 267, 268, 269, 270, 273, 275, 277, 278, 280, 281, 285, 294, 295, 296, 297, 299, 304, 385, 393, 394, 396, 397, 399, 401, 402, 404, 413, 420, 423, 425, 426, 428, 432, 434, 438, 439, 440, 442, 447, 448, 450, 455, 458, 460, 464, 466, 468, 469, 471, 473, 474, 475, 476, 478, 479, 482, 487, 490, 495, 499, 513, 515, 519, 524, 533, 540, 555, 576, 577, 578, 581], "flux1": 299, "flux2": 299, "flux_err": [19, 20, 26, 123, 125, 133, 142, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 295, 296, 297, 304, 460, 473, 479], "flux_err1": 299, "flux_err2": 299, "flux_errn": [123, 125, 481], "flux_errp": [123, 125, 481], "flux_int_cu": 281, "flux_map": [123, 125, 134, 143, 405, 480], "flux_metadata_fits_kei": 124, "flux_per_omega": 490, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 101, 123, 125, 126, 393, 451, 454, 456, 457, 461, 462, 464, 466, 476, 481, 482, 503, 504, 505], "flux_point_dataset": 393, "flux_points_at_tim": 405, "flux_points_ctb_37b": 125, "flux_points_dataset": [456, 466, 476], "flux_points_dataset_no_ul": 456, "flux_points_fermi": 465, "flux_points_hawc": 465, "flux_points_hess": 465, "flux_points_intrins": 452, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 456, "flux_points_ob": 452, "flux_points_recomput": 125, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 101, "flux_profil": [450, 470, 471], "flux_profile_estim": 470, "flux_profile_fermi": 470, "flux_quant": [136, 137, 138, 139, 479], "flux_ref": [123, 125, 405], "flux_sensit": [123, 125], "flux_ul": [123, 125, 133, 481], "fluxestim": [123, 125, 126, 402, 428, 430, 431, 432, 434, 447], "fluxmap": [122, 124, 125, 133, 134, 135, 142, 143, 432, 447, 448, 460, 517], "fluxmapestim": 405, "fluxmapsmetadata": 408, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 101, 123, 124, 126, 127, 130, 136, 137, 138, 139, 145, 393, 396, 405, 408, 432, 439, 440, 446, 447, 448, 451, 454, 465, 470, 473, 474, 479, 481, 482, 505, 514, 515, 517, 519], "fluxpointdataset": 426, "fluxpointestim": [396, 423, 429, 442], "fluxpointfit": 393, "fluxpointfitt": 441, "fluxpointprofil": 442, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 102, 105, 402, 405, 408, 422, 426, 447, 448, 454, 456, 465, 466, 475, 476, 515], "fluxpointsdatasetmetadata": 408, "fluxpointsestim": [119, 127, 130, 328, 402, 403, 405, 413, 423, 428, 429, 432, 446, 447, 452, 456, 465, 466, 476, 483, 503, 504, 519], "fluxpointsetim": 405, "fluxpointsmetadata": 408, "fluxprofileestim": [119, 432, 445, 447, 470], "fly": 391, "fmt": [478, 484, 492], "focu": [391, 401, 426, 439, 458, 579], "focus": [391, 407], "fold": [108, 405, 454, 465, 474, 483, 515, 517], "folder": [11, 82, 94, 101, 106, 110, 125, 345, 381, 382, 386, 389, 410, 412, 417, 422, 432, 435, 457, 464, 468, 494, 503, 504, 577, 579], "follow": [15, 19, 20, 43, 44, 80, 82, 83, 84, 90, 91, 102, 104, 106, 107, 109, 110, 123, 124, 125, 128, 133, 135, 141, 144, 192, 193, 194, 196, 200, 205, 206, 211, 264, 281, 287, 371, 372, 374, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 424, 425, 426, 428, 429, 432, 434, 435, 441, 442, 446, 447, 448, 451, 452, 453, 454, 456, 457, 459, 460, 461, 464, 465, 468, 469, 473, 474, 475, 476, 478, 480, 481, 483, 484, 486, 487, 488, 489, 490, 494, 499, 503, 505, 507, 509, 510, 515, 517, 519, 521, 523, 524, 528, 530, 531, 532, 533, 541, 542, 546, 549, 550, 552, 553, 557, 558, 560, 561, 562, 563, 564, 577, 578, 580, 581, 582, 584], "font": [193, 194, 196, 202, 205, 206, 382, 487], "fontsiz": [378, 476, 484], "foo": [87, 91], "footprint": [193, 194, 196, 202, 204, 205, 206, 539], "footprint_rectangle_sky_region": 204, "forbid": [16, 84, 90, 104, 124], "forbidden": 489, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 151, 152, 158, 161, 163, 166, 204, 206, 308, 386, 396, 422], "forecom": [381, 406], "foremost": 579, "forens": 397, "foreseen": [391, 406], "forev": 422, "forg": [380, 398, 410, 411, 413, 414, 417, 440], "forget": [457, 467, 503], "forgot": 381, "forgotten": 381, "fork": [384, 410], "form": [16, 84, 87, 90, 91, 102, 104, 124, 163, 166, 201, 320, 381, 387, 391, 396, 404, 406, 408, 418, 440, 448, 488, 492, 516, 524, 537, 547, 577], "formal": [386, 409, 460], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 104, 105, 107, 109, 110, 123, 124, 125, 126, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 186, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 208, 224, 232, 239, 248, 264, 274, 277, 316, 338, 362, 363, 370, 380, 389, 390, 391, 392, 393, 395, 397, 405, 407, 408, 411, 420, 432, 434, 437, 441, 443, 444, 446, 447, 448, 452, 454, 456, 457, 458, 460, 461, 462, 464, 466, 468, 469, 470, 473, 475, 479, 481, 483, 485, 487, 488, 490, 494, 495, 496, 497, 503, 505, 507, 513, 515, 516, 517, 518, 521, 522, 523, 524, 525, 532, 573, 574, 578, 579, 580], "format_plot_xaxi": [195, 198, 203, 485], "format_plot_yaxi": [198, 485], "formatt": [370, 487], "formatwarn": 381, "former": [407, 423, 428, 453, 489, 577, 580], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 162, 254, 255, 305, 451, 580], "forthcom": 483, "forum": 410, "forward": [19, 20, 26, 83, 87, 91, 102, 105, 109, 110, 127, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 175, 197, 201, 202, 203, 211, 218, 219, 222, 223, 226, 228, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 245, 249, 251, 253, 254, 255, 256, 260, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 282, 306, 370, 375, 382, 388, 391, 405, 454, 465, 474, 483, 515, 517, 532], "forwardref": [16, 84, 90, 104, 124], "found": [19, 20, 26, 82, 86, 87, 91, 137, 176, 181, 200, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 295, 384, 385, 389, 396, 406, 407, 426, 429, 430, 431, 435, 462, 468, 479, 490, 492, 497, 516, 517, 528, 529], "four": [384, 392, 405, 410, 473, 494, 495, 523, 525, 531, 578], "fov": [122, 147, 148, 170, 171, 185, 186, 188, 190, 232, 381, 387, 395, 437, 440, 441, 448, 461, 478, 485, 488, 489, 494, 504, 527, 578], "fov_": 381, "fov_align": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 485], "fov_background": [461, 503], "fov_bkg_mak": [486, 526], "fov_lat": [148, 485, 494, 524], "fov_lat_axi": 485, "fov_lon": [148, 485, 494, 524], "fov_lon_axi": 485, "fov_theta": 381, "fovalign": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 485], "fovbackground": [409, 428], "fovbackgroundmak": [171, 427, 432, 486, 503, 504], "fovbackgroundmodel": [15, 102, 108, 109, 113, 170, 244, 409, 429, 446, 447, 448, 464, 465, 468, 469, 472, 482, 489, 503, 504, 526, 539], "fp": [123, 125, 145, 405, 503, 517, 519], "fp_dataset": [456, 482], "fp_dnde": 405, "fp_energy_flux": 405, "fp_estim": 483, "fp_result": 483, "fpe": [328, 403, 405, 452, 456, 466, 476, 504], "fpe_no_ul": 456, "fpp": 296, "fpp_err": [296, 479], "fpp_tabl": 479, "fr": 407, "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 105, 110, 150, 153, 209, 230, 235, 253, 255, 268, 295, 297, 307, 404, 515, 523, 524, 536, 537, 538, 541, 542, 546, 549, 550, 552, 553, 557, 558, 560, 561, 562, 563, 567, 568, 569, 571, 581, 582], "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 122, 132, 139, 154, 160, 162, 163, 164, 166, 201, 207, 208, 218, 219, 222, 225, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 296, 297, 391, 396, 439, 447, 451, 459, 468, 472, 482, 485, 488, 494, 495, 496], "frame": [16, 83, 85, 91, 94, 95, 96, 102, 105, 109, 110, 111, 112, 113, 116, 127, 141, 163, 173, 176, 186, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 220, 221, 225, 234, 237, 250, 252, 261, 262, 264, 266, 272, 276, 306, 307, 342, 357, 381, 382, 390, 392, 395, 405, 422, 423, 425, 426, 427, 453, 456, 457, 458, 459, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 482, 485, 486, 487, 488, 489, 490, 491, 495, 496, 497, 503, 504, 505, 523, 528, 530, 531, 532, 536, 537, 538, 539, 540, 541, 542, 543], "framework": [392, 394, 395, 397, 399, 400, 404, 422, 423, 429, 441, 476, 490, 509, 519], "franceschini": [226, 227, 277, 446, 452, 545], "franceschini17": [227, 452, 545], "franceschni": 545, "frd_ab": 227, "free": [50, 52, 53, 77, 102, 105, 109, 110, 126, 130, 131, 173, 211, 215, 217, 250, 251, 287, 386, 396, 422, 448, 452, 457, 459, 461, 462, 464, 466, 467, 472, 473, 475, 478, 482, 484, 486, 489, 490, 492, 495, 499, 503, 504, 507, 517, 526, 539, 555, 556, 579, 581, 582], "free_paramet": [215, 217, 287, 478, 484, 489], "freedom": [120, 123, 125, 135, 144, 407, 447, 467, 517, 581, 582], "freez": [19, 20, 26, 87, 91, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 396, 407, 422, 432, 447, 461, 472, 478, 484, 490, 555], "freeze_al": [215, 217], "frenk": 507, "frequenc": [275, 290, 511], "frequent": [198, 381, 390, 399, 407, 474, 475, 479, 488, 519, 520, 579], "frequentist": 399, "fridai": 390, "friendli": [381, 386, 408, 443, 457, 503, 519], "frk5avzi": 490, "from": [13, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 179, 180, 182, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 288, 289, 290, 291, 294, 297, 306, 307, 308, 318, 326, 328, 330, 331, 335, 338, 339, 343, 348, 360, 361, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 417, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583], "from_align": [204, 432], "from_attribut": [16, 84, 90, 104, 124], "from_bound": [153, 155, 163, 192, 198, 204, 405, 465, 468, 469, 482, 485, 486, 487, 497, 531, 532], "from_covariance_matrix": 409, "from_default": 197, "from_diagonal_respons": [111, 116, 150, 151, 152, 460, 495], "from_dict": [19, 20, 26, 101, 102, 105, 109, 110, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 425, 432, 492], "from_dir": [82, 89, 96, 173, 306, 307, 417, 453, 456, 458, 466, 474, 476, 478, 486, 491, 494, 497, 501, 504, 516, 519, 526, 528, 529], "from_edg": [152, 193, 194, 196, 198, 202, 205, 206, 459, 472, 475, 485, 495, 496], "from_edisp_kernel": 151, "from_energy_bound": [102, 105, 109, 110, 111, 116, 150, 152, 153, 155, 161, 163, 173, 191, 192, 197, 198, 201, 204, 206, 382, 451, 453, 456, 458, 465, 466, 468, 469, 474, 476, 478, 482, 485, 486, 490, 495, 496, 504, 523, 526, 528, 529, 532], "from_energy_edg": [150, 198, 376, 482, 485], "from_events_fil": [82, 468, 494], "from_factor_matrix": 209, "from_fil": [82, 516], "from_fits_head": 85, "from_gauss": [150, 151, 155, 161, 163, 166, 523], "from_gaussian": 429, "from_geom": [102, 105, 109, 110, 151, 152, 161, 163, 166, 193, 194, 196, 200, 202, 205, 206, 426, 445, 482, 487, 488, 532, 538], "from_gti": 203, "from_gti_bound": 203, "from_hdu": [192, 194, 206], "from_hdulist": [102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 487], "from_head": [84, 90, 104, 124, 192, 204, 408], "from_irf": 165, "from_log10": [241, 242, 553], "from_map": [123, 125], "from_map_dataset": [105, 110], "from_nam": [462, 466], "from_nod": 198, "from_orm": [16, 84, 90, 104, 124], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279], "from_parametr": [153, 521], "from_posit": [220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276, 469], "from_refer": 404, "from_region": [201, 225, 446, 528], "from_region_map": 277, "from_spatial_model": 161, "from_spectrum_dataset": [110, 451, 459], "from_stack": [83, 86, 92, 123, 125, 193, 194, 195, 196, 198, 202, 205, 206, 209, 215, 217, 446, 447, 516], "from_tabl": [125, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 195, 197, 198, 202, 203, 239, 443, 451], "from_table_hdu": [86, 197, 198], "from_time_bound": 203, "from_time_edg": [203, 478, 479], "from_time_interv": 86, "from_wcs_til": 194, "from_yaml": [16, 224, 248, 392, 457], "fromnumer": [458, 478], "front": [390, 410, 439], "frozen": [19, 20, 26, 101, 126, 130, 170, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 396, 404, 409, 424, 447, 452, 453, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475, 478, 481, 482, 483, 484, 488, 489, 490, 492, 495, 503, 504, 505, 517, 526, 555, 564], "fr\u00f6se": [447, 448], "ftol": 484, "ftool": 396, "fulfil": [408, 487], "full": [82, 126, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 194, 212, 224, 248, 316, 377, 380, 381, 386, 390, 391, 394, 396, 397, 401, 407, 409, 412, 419, 422, 432, 434, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 501, 503, 504, 505, 519, 530, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577], "full_enclosur": [186, 485], "full_output": [19, 20, 26, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279], "fulli": [130, 191, 192, 201, 204, 275, 390, 391, 398, 402, 407, 411, 414, 424, 426, 434, 453, 479, 490, 494, 496, 497], "fun": [381, 384], "func": [17, 18, 21, 22, 24, 25, 27, 193, 194, 196, 202, 205, 206, 283, 329, 333, 334, 374, 462, 464], "function": [6, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 85, 87, 88, 91, 100, 101, 102, 103, 105, 108, 109, 110, 118, 123, 130, 133, 134, 136, 137, 138, 139, 142, 143, 153, 154, 155, 157, 158, 160, 162, 163, 164, 166, 193, 194, 196, 198, 202, 205, 206, 211, 212, 213, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 263, 264, 265, 267, 268, 269, 270, 273, 277, 283, 289, 290, 291, 299, 300, 304, 321, 329, 330, 332, 333, 337, 338, 348, 366, 369, 370, 374, 376, 378, 380, 384, 387, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 404, 405, 406, 408, 409, 413, 415, 417, 418, 420, 422, 423, 424, 425, 426, 428, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 451, 452, 456, 457, 458, 459, 460, 464, 466, 467, 468, 469, 470, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 496, 497, 499, 503, 504, 505, 507, 508, 509, 514, 515, 516, 518, 519, 528, 530, 532, 537, 538, 540, 567, 576, 577, 578, 579, 580, 582, 584], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [394, 403, 408], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 118, 122, 126, 127, 130, 133, 199, 332, 381, 384, 385, 387, 390, 391, 394, 395, 398, 400, 401, 402, 403, 404, 427, 428, 429, 432, 434, 462, 468, 480, 481, 482, 483, 487, 504, 505, 508, 509, 524, 579], "furthermor": 494, "futur": [103, 108, 381, 386, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 440, 464, 470, 487, 495, 508, 517, 576], "fvar": [139, 297, 396, 439], "fvar_err": [297, 479], "fvar_tabl": 479, "fx_ejrnv": 478, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 85, 86, 87, 91, 95, 114, 141, 192, 193, 194, 196, 198, 202, 204, 205, 206, 211, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 295, 308, 348, 370, 376, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 407, 408, 410, 411, 413, 414, 415, 432, 434, 438, 440, 441, 442, 443, 446, 453, 454, 456, 457, 459, 466, 468, 470, 480, 481, 482, 484, 487, 488, 489, 490, 494, 495, 499, 505, 507, 511, 514, 515, 516, 517, 519, 524, 529, 530, 531, 538, 576, 578, 579, 581, 583, 584], "g0": [464, 495], "g28": 67, "g320": 481, "g_1": 153, "g_2": 153, "g_3": 153, "ga": 470, "gabriel": 441, "gadf": [83, 84, 85, 86, 88, 90, 95, 102, 104, 105, 109, 110, 124, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 391, 394, 405, 408, 432, 434, 443, 446, 448, 483, 485, 487, 503, 515, 519, 532, 578], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 398, 440], "gal_diffus": 397, "galact": [17, 18, 21, 22, 24, 25, 27, 29, 45, 47, 67, 68, 83, 91, 102, 105, 109, 110, 111, 116, 126, 127, 129, 163, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 225, 234, 237, 252, 261, 262, 315, 342, 381, 382, 392, 395, 401, 420, 422, 439, 452, 453, 456, 459, 460, 461, 464, 466, 467, 468, 470, 472, 475, 480, 481, 482, 487, 488, 489, 490, 494, 505, 507, 510, 514, 529, 530, 531, 532, 536, 537, 538, 539, 540, 541, 542, 578, 584], "galactic_median": 83, "galactocentr": 41, "galaxi": [28, 30, 35, 39, 40, 41, 226, 296, 297, 420, 453], "galelli": [445, 447, 448], "gallant": 440, "galleri": [411, 427, 429, 432, 443, 447, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 520, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576], "gallery_jupyt": 533, "gallery_python": 533, "galprop": [192, 193, 194, 196, 205, 206], "galprop2": [192, 193, 194, 196, 205, 206], "gambit": 507, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 52, 53, 57, 59, 63, 66, 67, 79, 83, 122, 126, 132, 162, 186, 193, 194, 196, 205, 206, 226, 228, 229, 230, 253, 254, 255, 277, 281, 335, 381, 387, 389, 392, 393, 394, 395, 405, 411, 413, 417, 418, 423, 437, 438, 439, 440, 441, 451, 452, 454, 456, 457, 458, 462, 465, 466, 467, 468, 470, 481, 485, 487, 488, 491, 494, 496, 497, 503, 505, 507, 509, 510, 514, 515, 516, 519, 522, 524, 526, 528, 529, 538, 545, 549, 550, 557, 558, 576, 577, 578, 579, 580, 581, 584], "gamma1": [218, 546, 560], "gamma2": [218, 546, 560], "gamma_1": [265, 268, 269, 270, 404, 561, 562, 563], "gamma_2": [265, 268, 269, 270, 404, 561, 562, 563], "gamma_min": [132, 451], "gamma_min_sensit": 122, "gammacat": [55, 66, 439, 454], "gammalib": [381, 394], "gammamc_dif": 507, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 403, 404, 405, 409, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 498, 499, 501, 503, 504, 505, 508, 509, 511, 512, 513, 519, 520, 521, 522, 523, 525, 529, 530, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 578, 579, 580, 581, 584], "gammapy_analysis_config": 397, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 101, 102, 105, 109, 110, 115, 117, 118, 122, 123, 125, 127, 129, 131, 133, 141, 142, 145, 146, 148, 152, 153, 154, 155, 163, 173, 193, 194, 196, 202, 205, 206, 211, 227, 239, 277, 287, 306, 307, 360, 369, 374, 376, 381, 382, 384, 397, 413, 415, 417, 421, 422, 423, 432, 441, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 501, 503, 504, 505, 516, 517, 519, 521, 522, 523, 525, 526, 528, 529, 543, 573, 574], "gammapy_extra": 421, "gammapybaseconfig": 16, "gammapydeprecationwarn": [381, 470, 495, 551], "gammmapi": [391, 398], "gap": 136, "garcia": 441, "gather": [395, 401, 410], "gauss": [42, 51, 54, 102, 105, 128, 129, 154, 194, 206, 234, 235, 236, 237, 404, 438, 476, 487, 490, 505, 536, 537], "gauss_elong": 490, "gauss_temp": 490, "gaussian": [67, 68, 80, 81, 101, 118, 128, 134, 143, 150, 151, 155, 161, 163, 166, 194, 206, 233, 234, 235, 236, 237, 238, 243, 296, 297, 392, 400, 404, 409, 425, 429, 448, 450, 452, 454, 456, 466, 468, 472, 475, 479, 481, 484, 485, 490, 492, 494, 505, 523, 525, 533, 544, 565, 575], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 118, "gaussian_compon": [67, 481], "gaussian_error": [134, 143], "gaussian_filt": [128, 206], "gaussian_model": 568, "gaussian_sigma": 484, "gaussianband2d": 440, "gaussianprior": [409, 452, 492], "gaussianspatialmodel": [80, 81, 115, 117, 258, 404, 425, 466, 467, 472, 490, 537], "gaussianspectralmodel": [259, 404, 490, 552], "gaussiantemporalmod": 432, "gaussiantemporalmodel": [271, 404, 428, 490, 568], "gb": [389, 391, 494, 496], "gc": [86, 102, 105, 109, 110, 115, 117, 118, 122, 127, 129, 133, 141, 142, 369, 374, 376, 384, 460, 461, 464, 466, 468, 470, 480, 482, 483, 487, 489, 490, 494, 495, 505, 507, 516, 517], "gc_3fhl": 505, "gc_3fhl_cutout": 505, "gc_3fhl_smooth": 505, "gc_imag": 470, "gc_po": 495, "gc_sep": 489, "gca": 452, "gcc": 417, "ge": 90, "geminga": 59, "gen_gaussian_model": 569, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 102, 103, 104, 105, 108, 109, 110, 124, 152, 163, 166, 193, 194, 196, 197, 198, 202, 205, 206, 211, 223, 231, 236, 237, 238, 239, 240, 256, 263, 272, 273, 275, 277, 278, 290, 330, 332, 335, 336, 337, 338, 345, 382, 384, 390, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 414, 417, 423, 427, 428, 429, 432, 434, 439, 443, 446, 447, 448, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 515, 519, 524, 530, 532, 533, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 570, 571, 572, 573, 574, 575, 579, 581, 582], "generalconfig": 16, "generalis": [125, 400, 426, 485], "generalized_gaussian_model": 569, "generalizedgaussianspatialmodel": [258, 429, 490, 538], "generalizedgaussiantemporalmodel": [271, 434, 490, 569], "generalrandom": 424, "generatejsonschema": [16, 84, 90, 104, 124], "gengauss": [238, 490, 538], "geodeticloc": 94, "geolat": 453, "geom": [16, 23, 83, 102, 105, 109, 110, 111, 114, 116, 122, 123, 125, 127, 133, 151, 152, 161, 163, 166, 173, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 220, 221, 224, 225, 232, 234, 237, 248, 250, 252, 261, 262, 264, 266, 272, 276, 392, 394, 396, 429, 432, 441, 447, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 466, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 495, 496, 503, 504, 505, 517, 526, 528, 529, 530, 531, 532, 535, 537, 538, 539, 540], "geom_24_energy_bin": 532, "geom_6_energy_bin": 532, "geom_edisp": [102, 105, 109, 110, 482], "geom_energi": 532, "geom_exposur": [102, 105, 109, 110, 445, 482], "geom_imag": [462, 466, 532], "geom_irf": 394, "geom_psf": [102, 105, 109, 110, 482], "geom_tru": 426, "geomconfig": 16, "geometri": [23, 83, 100, 102, 105, 109, 110, 112, 113, 114, 123, 125, 133, 134, 135, 143, 151, 152, 158, 161, 163, 166, 170, 173, 175, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 220, 221, 224, 225, 234, 237, 248, 250, 252, 261, 262, 264, 266, 272, 276, 377, 387, 393, 396, 397, 426, 432, 443, 448, 456, 457, 458, 459, 461, 462, 464, 468, 469, 472, 482, 483, 486, 495, 496, 515, 517, 519, 527, 531, 577, 578], "geomspac": [125, 409, 483], "geq": [52, 53], "gerrit": 448, "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 102, 104, 106, 107, 109, 118, 122, 124, 126, 127, 130, 131, 133, 141, 145, 150, 151, 152, 158, 163, 166, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 209, 215, 217, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 233, 234, 235, 237, 241, 242, 243, 245, 249, 250, 251, 252, 253, 254, 255, 257, 260, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 279, 280, 316, 332, 381, 382, 386, 387, 388, 389, 390, 391, 395, 396, 398, 405, 407, 408, 409, 411, 412, 414, 415, 417, 418, 421, 423, 438, 439, 440, 441, 448, 451, 457, 459, 460, 464, 465, 466, 472, 474, 478, 481, 482, 484, 485, 486, 488, 489, 490, 492, 494, 495, 496, 497, 499, 503, 504, 505, 507, 515, 519, 532, 578, 582], "get_altaz": [85, 94, 446], "get_bia": 150, "get_bias_energi": 150, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [193, 194, 196, 202, 205, 206, 486, 487, 495, 496, 531], "get_by_idx": [193, 194, 196, 202, 205, 206, 487, 531], "get_by_pix": [193, 194, 196, 202, 205, 206, 531], "get_cl": [454, 481, 488], "get_combined_flux_map": 134, "get_combined_significance_map": 135, "get_coord": [191, 192, 197, 201, 204, 425, 432, 441, 469, 487, 488, 528, 532], "get_dataset": [15, 457, 461, 462, 464, 473, 503, 519], "get_devel_vers": 384, "get_edges_fixed_bin": 145, "get_edges_min_t": 145, "get_edisp_kernel": [151, 152, 427, 432, 482, 495, 523], "get_events_meta_data": 394, "get_excess_map": [15, 503], "get_filenam": [106, 107], "get_flux_point": [15, 123, 125, 405, 427, 457, 503], "get_group_by_idx": 405, "get_hdu": 316, "get_icr": [85, 94, 446], "get_idx": [191, 192, 201, 204, 532], "get_image_by_coord": [193, 194, 196, 202, 205, 206, 487], "get_image_by_idx": [193, 194, 196, 202, 205, 206], "get_image_by_pix": [193, 194, 196, 202, 205, 206], "get_index_list": 192, "get_irfs_featur": [306, 307, 446, 491], "get_kernel": 118, "get_light_curv": 15, "get_mean": 150, "get_observ": [15, 82, 96, 306, 307, 423, 434, 453, 456, 457, 458, 461, 462, 464, 466, 468, 473, 474, 476, 478, 486, 491, 496, 497, 501, 503, 504, 519, 526, 528, 529], "get_ogip_meta": 107, "get_pix": 204, "get_pointing_altaz": [88, 491], "get_pointing_icr": [88, 446, 466, 486, 504], "get_psf_kernel": [161, 163, 166, 447, 448, 495], "get_random_st": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 290, 330, 335, 336, 337, 338, 381], "get_rebinned_axi": 474, "get_resolut": 150, "get_respons": 439, "get_scal": 118, "get_scale_model": [126, 127, 130], "get_spectrum": [193, 194, 196, 202, 205, 206], "get_subcovari": 209, "get_transform": [460, 466, 536, 537], "get_valid_path": 106, "get_wcs_coord_and_weight": 201, "getattr": 409, "getitem": 439, "getlogg": [381, 462, 466, 473, 474, 475, 478, 501], "getter": 382, "getting_start": 401, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 127, 133, 193, 194, 196, 198, 202, 205, 206, 454, 458, 460, 464, 465, 470, 472, 475, 476, 480, 481, 486, 487, 488, 489, 494, 495, 496, 505, 532, 555, 577, 578], "gev2": [19, 480], "gevgevgev1": 454, "gf0dd65245": [104, 124, 418, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "ggme57ja": 459, "gh": [381, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411], "git": [86, 264, 381, 382, 384, 386, 388, 389, 407, 410, 414, 443], "github": [382, 384, 385, 386, 387, 389, 390, 399, 401, 407, 410, 411, 414, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 437, 438, 439, 440, 441, 442, 519], "giuliani": 394, "giunti": [422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 435, 443, 446], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 101, 140, 295, 296, 381, 386, 390, 391, 395, 396, 397, 398, 401, 402, 407, 411, 422, 424, 426, 434, 447, 456, 457, 460, 467, 469, 474, 478, 479, 481, 484, 485, 486, 487, 490, 494, 495, 503, 519, 524, 579, 580, 582, 583], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 175, 176, 179, 181, 183, 184, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 289, 291, 297, 306, 308, 311, 312, 319, 326, 330, 333, 334, 342, 368, 369, 374, 378, 381, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 404, 405, 407, 409, 421, 426, 432, 440, 441, 446, 451, 452, 453, 454, 457, 460, 468, 469, 470, 472, 473, 474, 475, 480, 481, 482, 483, 485, 486, 487, 488, 490, 494, 495, 503, 505, 515, 516, 517, 519, 523, 524, 528, 529, 531, 532, 538, 542, 545, 576, 578, 579, 580, 581], "gkro1sxi": 486, "glast": 495, "glat": [41, 67, 68, 83, 381, 456, 481, 487, 495], "glat_err": 481, "glat_pnt": [466, 494], "glimps": [496, 499], "gll_iem_v06_cutout": [193, 194, 196, 202, 205, 206], "gll_iem_v06_gc": [468, 487, 489, 490, 495], "gll_psc_v16": 61, "gll_psc_v20": 481, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 382, 482, 483], "global": [16, 33, 42, 45, 46, 47, 100, 102, 103, 105, 108, 109, 110, 152, 163, 166, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 211, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 290, 330, 332, 335, 336, 337, 338, 381, 385, 387, 429, 446, 456, 466, 467, 476, 489, 492, 517, 577], "global_dataset": 486, "global_to_loc": 192, "glon": [41, 67, 68, 83, 381, 456, 481, 487, 495], "glon_pnt": [466, 494], "glossari": [401, 443, 515, 532], "glue": 519, "glueviz": 398, "go": [50, 87, 91, 384, 391, 401, 406, 443, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 501, 503, 504, 505, 507, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579], "goal": [386, 395, 409, 484], "goe": [41, 52, 371, 381, 400, 411, 470, 492], "gogia": 439, "good": [82, 86, 101, 125, 301, 305, 381, 386, 388, 389, 390, 391, 392, 395, 397, 398, 399, 401, 452, 456, 458, 459, 462, 472, 474, 475, 479, 480, 482, 484, 486, 488, 490, 495, 496, 499, 541, 542, 578, 583], "googl": [87, 91, 401, 410, 448], "got": 494, "gov": [58, 60, 61, 62, 64, 65, 150, 198, 401, 558], "gp": [82, 83, 89, 382, 391, 397, 461, 464, 466, 476, 494, 496], "gpl3": 381, "gps_baseline_110380": [82, 83, 494], "gradient": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "grai": [372, 528, 555], "grand": 381, "grant": [384, 407], "granular": 479, "grayify_colormap": 400, "grb": [475, 479], "great": [386, 395, 400, 438, 499], "greater": [170, 374], "green": [101, 109, 110, 440, 467, 491, 492], "grei": 476, "grep": 416, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 126, 129, 154, 162, 164, 193, 194, 196, 198, 202, 205, 206, 220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276, 283, 374, 381, 392, 397, 424, 426, 484, 531, 532, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572], "gridsearch": [211, 484], "gridspec": 368, "gridspec_kw": [460, 466, 473, 475, 545], "ground": [95, 396, 494, 580], "group": [86, 87, 91, 92, 126, 127, 130, 131, 133, 151, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 306, 387, 396, 400, 401, 402, 405, 410, 413, 423, 426, 428, 432, 438, 441, 460, 473, 475, 499, 517, 519, 533, 579], "group_1": 491, "group_2": 491, "group_bi": [87, 91, 405], "group_by_axi": 405, "group_by_label": [92, 491], "group_high_zenith": 491, "group_low_zenith": 491, "group_siz": [145, 474], "group_tabl": [86, 198, 203], "grouped_observ": 491, "grow": [389, 400, 440], "grown": 401, "gr\u00e9aux": 446, "gsfc": [58, 60, 61, 62, 64, 65, 150, 198, 401, 558], "gt": 485, "gtdrm": [150, 151], "gtexpcube2": 495, "gti": [82, 87, 88, 89, 100, 101, 102, 105, 109, 110, 123, 125, 127, 130, 134, 143, 167, 203, 264, 387, 390, 391, 394, 395, 396, 405, 424, 426, 427, 429, 442, 446, 447, 468, 474, 475, 478, 482, 486, 494, 496, 497, 515, 578], "gti_1": 516, "gti_2": 516, "gti_t0": 475, "gtimetadata": 408, "gtmktime": [391, 495], "gtobsim": 394, "gtol": 484, "gtpsf": [151, 152, 158, 163, 166, 198, 460, 495], "gtselect": [391, 495], "guarante": [389, 404, 406], "guess": [125, 192, 194, 447], "guid": [384, 397, 399, 413, 414, 415, 418, 441, 464, 499, 519, 534, 544, 565, 575], "guidelin": [381, 385, 418, 440], "guiger": [31, 39], "gxtlcgot": 478, "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 102, 105, 109, 110, 115, 117, 118, 122, 127, 129, 133, 141, 142, 155, 227, 277, 369, 374, 376, 382, 403, 441, 452, 456, 457, 460, 467, 468, 469, 470, 481, 482, 483, 485, 487, 489, 490, 494, 495, 496, 501, 503, 504, 505, 516, 517, 519, 521, 522, 523, 525, 545], "h": [26, 67, 82, 86, 87, 91, 95, 126, 128, 152, 179, 193, 194, 196, 202, 205, 206, 290, 371, 401, 404, 413, 417, 418, 426, 441, 448, 450, 451, 452, 453, 456, 457, 459, 462, 465, 467, 473, 474, 475, 478, 480, 484, 485, 486, 487, 490, 491, 492, 494, 495, 496, 498, 499, 501, 503, 504, 514, 519, 532, 567, 568, 578, 579], "h0": 467, "h05": [45, 49], "h1": 467, "h2dq__5q": 478, "h_0": [467, 581], "h_1": [467, 581], "h_i": 128, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 87, 91, 101, 102, 105, 109, 110, 122, 123, 125, 165, 187, 191, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 214, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 275, 276, 277, 374, 376, 378, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 414, 428, 429, 432, 434, 435, 441, 442, 443, 445, 446, 447, 448, 452, 453, 456, 457, 458, 462, 467, 469, 473, 474, 476, 480, 481, 482, 484, 486, 487, 488, 490, 491, 492, 494, 496, 497, 503, 504, 515, 516, 519, 524, 528, 529, 531, 532, 536, 537, 564, 576, 579, 581], "habilit": 305, "hack": 437, "had": [381, 387, 389, 407, 429, 435, 439, 440], "hadron": [280, 387, 392, 462, 482, 494, 515, 528], "hajlaoui": [429, 432], "hal": 407, "half": [163, 166, 198, 204, 276], "halo": 507, "halv": [137, 295, 447], "halving_coord": 479, "halving_err": 479, "hand": [175, 381, 384, 389, 392, 401, 407, 409, 444, 484, 499, 519], "handbook": [401, 499], "handi": 464, "handl": [3, 16, 84, 90, 104, 123, 124, 125, 179, 200, 298, 380, 382, 385, 393, 394, 395, 397, 402, 404, 405, 408, 410, 413, 415, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 456, 458, 464, 465, 466, 468, 482, 485, 487, 489, 490, 495, 496, 499, 504, 505, 515, 516, 519, 578], "handler_map": 378, "hanna": [447, 448], "hap": 397, "happen": [82, 384, 386, 388, 389, 395, 399, 411, 457, 489, 499, 503, 504, 515, 519, 581], "happi": [384, 388, 401, 421, 422, 441], "hard": [381, 382, 404, 409, 427, 492], "harder": [388, 579], "hardli": 408, "harri": [436, 437], "harvard": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 118, 136, 153, 211, 245, 280, 281, 290, 297, 299, 401, 484], "has_any_t": [123, 125], "has_energy_axi": [191, 192, 201, 204], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165], "has_single_spatial_bin": [151, 152, 158, 163, 166], "has_stat_profil": [123, 125], "has_success": [123, 125], "has_ul": [123, 125], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 381, "hasn": 386, "hatch": 476, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 104, 107, 111, 116, 123, 124, 125, 126, 130, 141, 142, 150, 151, 152, 161, 163, 166, 173, 175, 187, 191, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 308, 332, 338, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 392, 394, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 426, 429, 432, 434, 435, 438, 440, 441, 442, 443, 444, 446, 447, 448, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 474, 475, 476, 478, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 494, 495, 496, 499, 503, 504, 505, 507, 515, 516, 517, 519, 526, 530, 531, 532, 542, 553, 576, 579, 582, 583], "haven": 417, "hawc": [55, 59, 63, 72, 76, 97, 418, 426, 432, 440, 443, 444, 446, 450, 498, 499, 514, 527, 578], "hawc19_flux_point": [125, 465, 519], "hawc_crab": [125, 465, 519], "hd": 67, "hdr": 408, "hdr_dict": 408, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 316, 367, 382, 391, 420, 435, 437, 440, 443, 444, 485, 487, 494, 496, 497, 515, 516, 519, 521, 522, 523, 525, 532, 574], "hdu1": 150, "hdu2": 150, "hdu_al": 468, "hdu_band": [123, 125, 151, 152, 158, 163, 166, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206], "hdu_class": [82, 87, 316, 494, 496, 497], "hdu_class_uniqu": 87, "hdu_evt": 468, "hdu_filenam": 496, "hdu_gti": 468, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [151, 152, 154, 158, 162, 163, 164, 166, 193, 194, 205, 206], "hdu_loc": 87, "hdu_nam": 316, "hdu_ob": 82, "hdu_out": [193, 194], "hdu_region": [201, 202], "hdu_tabl": [82, 496], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 494, 496, 497], "hdu_type_uniqu": 87, "hduclas2": 485, "hduclas3": 485, "hduclas4": 485, "hduclasn": 485, "hduindext": [82, 316, 496], "hdulist": [102, 105, 107, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 468, 487, 515], "hduloc": [87, 102], "he": [280, 391, 396], "hea": 396, "head": 382, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 101, 102, 104, 105, 106, 107, 109, 110, 123, 124, 125, 150, 151, 152, 158, 163, 166, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 276, 318, 363, 364, 367, 386, 391, 394, 408, 426, 434, 436, 441, 443, 446, 458, 469, 487, 494, 583], "healpi": [192, 380, 388, 390, 398, 412, 413, 415, 424, 432, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 530], "healpix": [13, 192, 193, 194, 196, 202, 205, 206, 380, 388, 390, 395, 432, 440, 487, 495, 531], "healpix_to_imag": 433, "heapsort": [87, 91], "heart": 581, "heasarc": [150, 198], "heatmap": [370, 375], "heavi": [441, 442], "heavier": 464, "heavili": 432, "hegra": [97, 281], "heidelberg": [381, 410], "heidt": 479, "height": [16, 29, 87, 91, 94, 127, 341, 457, 461, 462, 464, 470, 473, 476, 480, 487, 488, 490, 503, 528, 532], "heighten": 479, "helen": 438, "hello": [417, 466], "help": [11, 87, 91, 292, 298, 381, 384, 386, 388, 395, 396, 397, 401, 407, 410, 411, 412, 417, 421, 422, 423, 440, 441, 443, 481, 486, 487, 489, 495, 497, 505, 519, 579], "helper": [13, 316, 321, 388, 390, 395, 396, 397, 400, 411, 417, 423, 424, 425, 426, 432, 434, 437, 439, 440, 446, 447, 470, 481, 488, 489, 528, 577, 584], "henc": [87, 91, 243, 397, 461, 462, 517, 532, 581], "here": [13, 82, 83, 87, 91, 102, 109, 125, 135, 144, 148, 153, 162, 211, 289, 291, 294, 369, 380, 381, 382, 383, 384, 387, 388, 393, 394, 395, 396, 397, 398, 399, 400, 401, 407, 408, 409, 410, 411, 413, 415, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 466, 467, 468, 469, 472, 473, 474, 475, 476, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 491, 492, 494, 495, 496, 499, 503, 504, 505, 509, 515, 519, 524, 526, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579, 580, 581, 583, 584], "hereaft": 468, "herebi": 492, "heritag": 407, "herm": [284, 286, 447], "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 101, 109, 110, 131, 145, 146, 153, 155, 173, 211, 287, 306, 307, 382, 389, 390, 395, 397, 401, 410, 413, 417, 420, 422, 425, 436, 437, 440, 441, 450, 453, 454, 456, 457, 458, 462, 464, 466, 467, 474, 476, 478, 481, 482, 483, 484, 486, 491, 492, 495, 497, 498, 501, 503, 504, 507, 516, 517, 519, 521, 522, 523, 525, 526, 528, 529], "hess2": [153, 521], "hess_dl3_dr1_obs_id_020136": [88, 155, 382, 521, 522, 523, 525], "hess_dl3_dr1_obs_id_023523": [83, 86, 516], "hess_dl3_dr1_obs_id_023526": 516, "hess_ecpl": [281, 456], "hess_pl": 281, "hessian": 517, "heterogen": [408, 454, 465], "hfm": 67, "hgp": [67, 80, 81, 122, 401, 426, 438, 440, 441, 514], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 481], "hi": [381, 439], "hi_bnd": 198, "hi_threshold": 150, "hidden": 392, "hide": [13, 386, 403], "hierarch": [13, 306, 348, 390, 392, 408, 447, 519, 531], "hierarchi": [306, 392, 425], "hierarchical_clust": [446, 491], "high": [6, 15, 58, 62, 63, 83, 150, 198, 331, 381, 385, 386, 387, 394, 395, 396, 401, 408, 424, 425, 426, 427, 428, 432, 440, 441, 450, 451, 454, 457, 460, 461, 464, 470, 472, 473, 480, 481, 482, 483, 486, 488, 494, 495, 496, 497, 499, 504, 505, 506, 514, 515, 516, 517, 524, 527, 577, 578, 579, 580], "high_zenith": 491, "higher": [191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 238, 384, 387, 392, 397, 400, 402, 414, 454, 469, 479, 485, 487, 526, 532], "highest": [141, 179, 479, 486, 494, 505], "highli": 490, "highlight": 579, "hint": [408, 460, 517], "hire": [154, 401, 509, 511, 512, 513, 515, 516, 521, 522, 523, 525, 528, 532, 581, 584], "hist": [83, 109, 110, 202, 206, 374, 459, 492], "histogram": [83, 109, 110, 198, 202, 206, 374, 446, 476, 532, 578], "histori": [395, 407, 443], "hl9uj1": 478, "hli": [394, 427, 428, 432, 443, 450, 455, 499, 515, 518, 578], "hli_spectrum_analysi": 457, "hline": 536, "hoc": 395, "hold": [69, 82, 89, 92, 96, 100, 161, 232, 308, 390, 391, 393, 396, 579, 581], "home": [16, 345, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 543, 545, 551, 567, 573, 574], "homebrew": 398, "homework": 423, "homogen": [87, 91, 429], "honk": 386, "hood": [457, 499, 503], "hook": [384, 443], "hope": 386, "hopefulli": 388, "horizont": [85, 95, 156, 351, 485, 583], "host": 381, "hour": [67, 94, 384, 397, 410, 411, 451, 481, 486, 487, 519], "hover": 382, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 104, 124, 125, 127, 129, 173, 194, 204, 206, 332, 338, 383, 386, 389, 393, 395, 397, 398, 400, 403, 404, 407, 408, 411, 412, 413, 417, 418, 421, 422, 423, 426, 427, 434, 436, 439, 440, 441, 446, 447, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 481, 482, 483, 484, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 503, 505, 509, 515, 517, 520, 524, 528, 530, 531, 545, 564, 577, 579, 580, 581, 583, 584], "howev": [77, 87, 91, 101, 122, 296, 380, 381, 382, 384, 388, 391, 394, 395, 399, 407, 409, 414, 453, 462, 470, 476, 478, 480, 481, 482, 484, 492, 496, 497, 499, 515, 519, 531, 532, 537, 553, 579], "howto": [401, 443, 444], "hpx": [192, 193, 194, 196, 205, 206, 395, 432, 487, 495], "hpx2wc": [193, 194], "hpx_map": [193, 194], "hpx_pixel": 395, "hpx_reg": 192, "hpxgeom": [123, 191, 193, 194, 427, 432, 443, 495, 530], "hpxmap": [194, 196, 530], "hpxndmap": [272, 432, 530], "hpxsparsemap": 426, "hpxtowcsmap": [193, 194], "hr": [468, 469, 472, 475], "hspace": 480, "hspec": [436, 437, 438], "hst": 226, "hstack": [87, 91, 394], "html": [26, 83, 87, 91, 126, 150, 186, 192, 198, 201, 204, 211, 224, 248, 277, 308, 335, 336, 381, 382, 384, 389, 401, 406, 407, 410, 411, 419, 440, 451, 459, 461, 464, 466, 472, 475, 484, 485, 494, 516, 519, 522, 530, 532, 558], "htmlcov": 411, "http": [11, 13, 16, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 63, 64, 65, 67, 83, 84, 87, 88, 90, 91, 104, 118, 124, 126, 135, 136, 137, 144, 150, 153, 179, 186, 192, 198, 201, 204, 211, 224, 245, 248, 254, 255, 269, 270, 277, 280, 281, 290, 296, 297, 299, 304, 308, 335, 336, 348, 384, 398, 401, 406, 407, 410, 411, 412, 413, 414, 415, 419, 423, 440, 451, 456, 459, 461, 464, 465, 466, 472, 475, 480, 481, 484, 485, 494, 516, 519, 530, 532, 558, 562, 563, 579], "hubert": 441, "hue": 372, "huestart": 372, "huge": [411, 537], "hugovk": 422, "human": [362, 392, 411, 434, 457, 503], "hundr": 496, "hypercub": [487, 531, 532], "hypothes": [287, 446, 519, 581], "hypothesi": [123, 125, 126, 127, 130, 131, 287, 289, 291, 448, 454, 460, 467, 483, 517, 519, 578, 581], "hysteresi": 478, "hz": [338, 505], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 308, 310, 314, 316, 319, 320, 321, 326, 328, 329, 332, 335, 336, 337, 338, 340, 341, 344, 347, 349, 350, 352, 356, 358, 359, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 503, 504, 505, 507, 508, 509, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584], "i0": [87, 91], "i1": [87, 91], "i2w5gnw3": 486, "i4": 470, "i8": [487, 505], "i_0": [193, 194, 196, 202, 205, 206], "i_hpx": [193, 194, 196, 202, 205, 206], "i_lat": [193, 194, 196, 202, 205, 206], "i_lon": [193, 194, 196, 202, 205, 206], "i_n": [193, 194, 196, 202, 205, 206], "i_scan": 492, "iact": [82, 83, 85, 94, 173, 176, 180, 387, 390, 391, 392, 393, 395, 397, 401, 418, 423, 437, 439, 441, 454, 460, 462, 486, 487, 489, 494, 495, 497, 516, 521, 522, 523, 525, 576, 578], "iactbasicimageestim": [387, 440], "iau": [52, 420, 424], "iau2015": 52, "ic": 555, "icon": 577, "icr": [83, 85, 88, 91, 94, 95, 96, 102, 105, 109, 110, 112, 113, 141, 163, 173, 176, 192, 193, 194, 196, 199, 201, 204, 205, 206, 220, 221, 225, 234, 237, 252, 261, 262, 306, 307, 342, 381, 382, 405, 425, 456, 457, 458, 459, 460, 462, 465, 466, 468, 469, 472, 473, 474, 475, 476, 478, 481, 482, 485, 486, 487, 488, 490, 491, 494, 495, 496, 497, 503, 504, 516, 519, 523, 528, 532, 536, 537, 538, 540, 541, 542], "icrc": 436, "id": [67, 80, 82, 83, 87, 88, 91, 92, 112, 113, 394, 397, 417, 457, 459, 468, 470, 472, 476, 481, 490, 494, 495, 496, 497, 503, 516], "id_obs_vela": 476, "idea": [386, 389, 396, 400, 401, 402, 457, 478, 485, 491, 495, 503], "ideal": [383, 384, 391, 395, 396, 405, 409, 410, 454, 495], "idempot": [16, 84, 90, 104, 124], "ident": [356, 384, 396, 443, 456, 458], "identif": [67, 387, 481], "identifi": [67, 88, 103, 108, 192, 264, 381, 391, 392, 394, 397, 406, 407, 411, 427, 460, 468, 479, 481, 482, 490, 494, 496, 518], "identified_object": 481, "idx": [83, 87, 91, 92, 100, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 248, 459, 468, 475, 481, 484, 487, 531], "idx1": 484, "idx2": 484, "idx_glob": 192, "idx_loc": 192, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 407, 452, 478, 489, 490, 515, 578], "iem": [489, 495], "iem_minus_iem": 487, "iem_plus_iem": 487, "iem_times_two": 487, "ignacio": 442, "ignasi": 436, "ignor": [11, 16, 84, 87, 90, 91, 101, 104, 124, 136, 157, 167, 196, 214, 216, 232, 308, 320, 382, 434, 448, 456, 470, 475, 476, 482, 488, 503, 519, 579], "ii": [209, 438], "ii7zvy8f": 478, "ij": 209, "ilist": 192, "illustr": [109, 110, 382, 391, 393, 394, 395, 397, 400, 458, 460, 465, 470, 482, 486, 487, 489, 490, 495, 509, 515, 528, 529, 536, 537, 545, 577], "illustrate_colormap": 400, "iloc": [87, 91], "im": [370, 484], "imag": [102, 105, 109, 110, 118, 128, 129, 141, 152, 153, 154, 160, 162, 163, 164, 166, 168, 178, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 276, 300, 303, 345, 367, 369, 370, 371, 372, 376, 381, 389, 390, 392, 397, 398, 401, 402, 411, 413, 418, 420, 421, 422, 425, 426, 427, 433, 437, 438, 439, 440, 441, 448, 450, 461, 464, 470, 471, 486, 488, 490, 494, 504, 505, 515, 524, 528, 529, 530, 531, 532, 577, 578, 584], "image_analysi": [401, 421], "image_err": 129, "image_fitting_with_sherpa": [401, 442], "image_pip": 440, "image_profil": 439, "imagehdu": [193, 194, 205, 206], "imagenorm": [371, 372], "imageprofil": 129, "images_t": 466, "imagin": 579, "img": [369, 487], "iminuit": [211, 380, 398, 407, 432, 434, 441, 445, 446, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 576], "immut": 224, "impact": [388, 394, 398, 496], "imperfect": 486, "implement": [19, 20, 102, 105, 109, 110, 135, 144, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 290, 296, 381, 382, 386, 387, 389, 390, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 439, 440, 442, 443, 446, 447, 448, 453, 461, 474, 479, 480, 481, 486, 487, 488, 507, 515, 517, 519, 524, 525, 526, 564, 576, 577, 578, 579, 580, 583], "implent": 381, "impli": [238, 381, 400, 515, 578], "implic": 403, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 524], "implicitli": 486, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 101, 102, 104, 105, 109, 110, 111, 115, 116, 117, 118, 122, 123, 124, 125, 127, 129, 131, 133, 141, 142, 145, 146, 148, 150, 152, 153, 154, 155, 161, 163, 173, 176, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 215, 217, 218, 219, 222, 226, 228, 229, 230, 235, 239, 241, 242, 245, 246, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 281, 287, 290, 296, 297, 306, 307, 328, 338, 348, 360, 361, 366, 369, 371, 372, 374, 376, 382, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 416, 417, 428, 438, 440, 445, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 501, 503, 504, 505, 508, 509, 511, 512, 513, 515, 516, 517, 519, 521, 522, 523, 525, 526, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577, 579, 580, 581, 583], "importantli": [405, 441, 453, 579], "importerror": [87, 91], "impos": [445, 451, 528], "improv": [108, 287, 383, 385, 386, 387, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 406, 411, 412, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 444, 487, 494, 519, 529, 536], "imshow": [102, 105, 161, 194, 206, 369, 375, 439, 487, 505], "in2p3": 407, "in_memori": [88, 519], "in_memory_gener": 92, "in_safe_data_rang": [102, 105, 109, 110], "inaccur": 381, "incex": [16, 84, 90, 104, 124], "incid": 387, "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 104, 124, 130, 151, 161, 167, 169, 170, 176, 177, 181, 191, 192, 201, 204, 249, 316, 380, 381, 387, 389, 392, 393, 394, 395, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 422, 424, 429, 440, 445, 446, 447, 448, 451, 464, 465, 467, 468, 470, 475, 480, 481, 483, 484, 486, 488, 489, 490, 494, 496, 507, 509, 515, 517, 518, 529, 531, 576, 580, 583], "include_irf": [88, 516, 519], "include_ssc": 249, "inclus": [83, 201, 395], "incompat": [406, 434], "incomplet": [381, 411, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "inconsist": [429, 435, 445, 446], "inconveni": [400, 441], "incorpor": [397, 401, 409, 578], "incorrect": [83, 381, 408, 416, 425, 443, 444, 486, 492], "incorrectli": [443, 488], "increas": [141, 168, 198, 203, 225, 234, 237, 381, 390, 408, 474, 483, 486, 515, 519, 536], "increment": [19, 20, 26, 118, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 395, 487, 531], "ind": [192, 204, 224, 248], "inde": [468, 537], "indefinit": 388, "indent": [16, 84, 90, 104, 124], "independ": [67, 126, 130, 134, 135, 143, 144, 305, 319, 381, 387, 391, 392, 393, 394, 395, 396, 399, 402, 403, 404, 405, 407, 413, 422, 432, 451, 457, 473, 481, 487, 488, 489, 490, 496, 503, 504, 514, 519, 524, 578, 582], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 101, 102, 105, 109, 110, 118, 122, 123, 125, 126, 127, 131, 132, 133, 140, 150, 151, 152, 158, 161, 163, 166, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 215, 217, 218, 219, 222, 224, 226, 228, 229, 230, 235, 241, 242, 245, 246, 248, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 281, 290, 316, 330, 335, 384, 387, 390, 391, 392, 393, 396, 397, 404, 405, 406, 410, 413, 423, 437, 439, 440, 446, 447, 452, 453, 454, 456, 457, 459, 460, 461, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 481, 482, 483, 484, 485, 489, 490, 494, 495, 496, 497, 503, 504, 505, 517, 519, 530, 531, 532, 535, 536, 537, 538, 540, 541, 542, 543, 545, 547, 549, 550, 551, 556, 557, 558, 566, 567, 568, 569, 570, 571, 572, 573, 574], "index1": [218, 265, 546, 560], "index2": [218, 265, 546, 560], "index_1": [268, 269, 270, 561, 562, 563], "index_2": [77, 268, 269, 270, 561, 562, 563], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 197, "index_err": 478, "index_error": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "index_mod": [87, 91], "index_scan": 492, "indexerror": [92, 100, 248], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 381, 443, 459, 469, 479, 486, 487, 491, 492, 496, 497, 519, 531, 532, 578], "indico": 390, "indirect": [480, 507], "individu": [87, 91, 108, 120, 128, 377, 387, 393, 394, 396, 401, 404, 405, 409, 453, 456, 459, 467, 470, 474, 481, 482, 484, 486, 489, 490, 505, 515, 519, 524], "indiviud": 403, "indxschm": [193, 194, 205, 206], "ineffici": [87, 91, 384], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 237, 279, 409, 492], "infer": [123, 125, 191, 192, 193, 194, 196, 204, 205, 206, 226, 382, 503, 531], "inferno": 487, "infil": 381, "infin": 492, "influenc": 492, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 154, 160, 162, 164, 289, 291, 316, 382, 396, 397, 401, 410, 416, 426, 427, 429, 436, 437, 440, 457, 461, 462, 464, 468, 474, 478, 480, 481, 482, 487, 495, 496, 497, 499, 501, 503, 579], "info_dict": [102, 105, 109, 110, 289, 291, 374, 429, 447, 482], "info_t": [100, 453, 456, 457, 459, 464, 475, 482, 489, 519], "infodict": 374, "inform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 109, 110, 123, 124, 125, 150, 154, 160, 162, 164, 165, 168, 173, 174, 179, 180, 199, 211, 218, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 255, 256, 261, 262, 263, 265, 268, 269, 270, 272, 273, 276, 277, 292, 298, 316, 332, 363, 364, 381, 385, 386, 391, 393, 394, 395, 396, 397, 404, 405, 408, 409, 411, 416, 417, 418, 426, 428, 429, 432, 434, 440, 446, 447, 452, 454, 457, 458, 465, 468, 469, 472, 478, 479, 482, 483, 484, 486, 487, 490, 494, 495, 496, 497, 503, 504, 505, 514, 515, 516, 517, 519, 532, 579, 582], "infrar": 226, "infrastructur": [411, 419, 432, 443, 446], "ingredi": [405, 480], "inherit": [87, 91, 290, 381, 391, 393, 396, 405, 408, 409, 427, 432, 439, 482, 485, 530, 531], "init": [19, 20, 26, 87, 91, 122, 127, 133, 170, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 320, 332, 393, 429, 444, 446, 447, 448, 460, 470, 474, 481, 482, 483, 505], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 104, 123, 124, 125, 133, 191, 192, 194, 197, 198, 201, 204, 224, 248, 250, 251, 308, 381, 386, 391, 392, 393, 397, 434, 451, 459, 462, 464, 465, 467, 468, 469, 472, 476, 481, 482, 487, 490, 503, 504, 505, 514, 516, 564, 578], "initialis": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 290, 330, 332, 335, 336, 337, 338, 381, 403, 492], "inject": [459, 472], "inlin": [386, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 487, 488, 489, 490, 494, 495, 497, 503, 504, 505], "inner": [44, 52, 53, 127, 168, 178, 262, 462, 505, 542], "inner_height": [528, 532], "inner_width": [528, 532], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 102, 104, 105, 108, 118, 120, 122, 123, 124, 125, 126, 129, 130, 133, 137, 138, 139, 140, 142, 146, 151, 152, 154, 161, 162, 163, 164, 165, 166, 168, 170, 174, 176, 178, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 217, 224, 239, 248, 275, 276, 277, 290, 308, 319, 329, 332, 351, 353, 374, 376, 387, 389, 391, 392, 393, 394, 395, 396, 397, 402, 417, 427, 432, 435, 442, 446, 448, 459, 468, 469, 476, 483, 487, 492, 517, 531, 532, 580], "input_map": [111, 116], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 446, "insensit": 200, "insert": [87, 91, 92, 100, 248, 407, 427, 582], "insert_row": [87, 91], "inset": 433, "insid": [50, 83, 102, 109, 115, 117, 150, 176, 192, 193, 194, 196, 201, 204, 205, 206, 224, 248, 264, 370, 374, 381, 382, 395, 397, 405, 432, 451, 456, 459, 461, 464, 466, 472, 475, 482, 486, 488, 489, 490, 494, 496, 516, 526, 528, 529, 532], "inside_geom": 488, "insight": 416, "inspect": [393, 397, 417, 456, 458, 464, 468, 469, 484, 487, 489, 494, 495], "inspir": [381, 405, 410], "instal": [87, 91, 380, 381, 384, 388, 389, 390, 398, 410, 411, 412, 415, 417, 418, 421, 422, 432, 436, 439, 440, 441, 448, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 499, 503, 504, 505, 519, 579], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 104, 120, 124, 125, 126, 128, 130, 131, 165, 167, 175, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 326, 332, 368, 370, 371, 372, 375, 377, 381, 387, 392, 393, 396, 397, 403, 405, 408, 432, 454, 456, 459, 470, 481, 483, 484, 486, 488, 489, 490, 505, 509, 519, 531, 532, 555], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 193, 194, 196, 198, 205, 206, 392, 397, 453, 457, 481, 482, 487, 490, 492, 503], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 102, 104, 105, 109, 110, 114, 124, 180, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 381, 382, 384, 386, 388, 389, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 409, 412, 413, 415, 422, 425, 428, 429, 442, 446, 448, 452, 458, 464, 468, 470, 472, 473, 475, 476, 481, 482, 485, 486, 487, 490, 492, 495, 516, 523, 524, 531, 532, 579], "instruct": [381, 390, 398, 410, 412, 413, 421, 432, 436, 440, 468, 494], "instrument": [6, 83, 95, 108, 153, 157, 158, 232, 381, 391, 392, 393, 394, 396, 401, 405, 413, 417, 426, 429, 441, 442, 443, 450, 453, 454, 456, 457, 460, 464, 471, 476, 478, 482, 484, 485, 486, 489, 490, 491, 492, 494, 495, 496, 497, 499, 503, 504, 515, 516, 517, 521, 523, 525, 577, 578], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 102, 103, 104, 105, 108, 109, 110, 112, 113, 118, 120, 124, 125, 126, 127, 130, 131, 133, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 173, 176, 180, 181, 186, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 283, 285, 287, 289, 290, 291, 295, 296, 297, 299, 304, 308, 319, 320, 326, 330, 332, 335, 336, 337, 338, 340, 341, 368, 374, 381, 395, 439, 484, 509], "int64": [102, 105, 109, 110, 111, 116, 122, 133, 517], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 218, 219, 222, 226, 228, 229, 230, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 524, 536], "int_flux": 480, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 102, 105, 109, 110, 123, 125, 126, 127, 130, 133, 141, 142, 151, 152, 158, 163, 166, 169, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 215, 217, 224, 248, 308, 326, 332, 381, 387, 395, 531], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 101, 102, 105, 109, 110, 123, 125, 128, 130, 140, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 168, 193, 194, 196, 198, 202, 205, 206, 207, 208, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 280, 281, 283, 319, 380, 388, 390, 392, 394, 395, 396, 398, 399, 401, 405, 407, 420, 422, 423, 427, 428, 432, 437, 438, 439, 440, 441, 442, 443, 446, 456, 458, 459, 461, 475, 478, 480, 481, 482, 487, 488, 490, 505, 507, 515, 517, 523, 538, 558], "integral_error": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 399, 429, 478], "integral_flux": 478, "integral_flux_imag": 433, "integrate_geom": [220, 221, 225, 234, 237, 250, 252, 261, 262, 264, 266, 272, 276, 432, 445, 447], "integrate_log_log": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165], "integrate_spectrum": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 423, 429], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 308, 391, 409, 485], "intens": [193, 194, 196, 202, 205, 206, 211, 238, 391, 487, 515], "intent": 386, "interact": [19, 20, 87, 91, 163, 166, 193, 194, 196, 202, 205, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 380, 381, 382, 390, 391, 392, 393, 397, 401, 404, 417, 426, 452, 464, 472, 484, 487, 489, 490, 499, 503, 504, 528, 531, 555, 579], "interchang": 531, "interest": [115, 117, 126, 130, 211, 287, 386, 394, 395, 399, 401, 411, 454, 464, 468, 470, 478, 481, 482, 484, 486, 488, 491, 494, 495, 505, 516, 517, 555, 578, 581, 582], "interfac": [6, 11, 15, 19, 20, 87, 91, 209, 211, 214, 215, 216, 217, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 381, 385, 386, 387, 391, 393, 394, 396, 398, 399, 400, 401, 422, 425, 427, 428, 429, 432, 436, 439, 440, 446, 450, 452, 457, 460, 461, 464, 472, 473, 484, 490, 494, 499, 504, 505, 506, 515, 516, 519, 527, 530, 555, 576, 577, 578, 579], "interfer": 410, "intermedi": [204, 390, 397, 407, 417, 453, 474], "intern": [15, 19, 20, 26, 87, 91, 123, 125, 136, 137, 138, 139, 170, 176, 201, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 283, 308, 320, 381, 393, 395, 397, 400, 405, 432, 434, 443, 446, 451, 457, 464, 473, 479, 482, 485, 487, 497, 503, 515, 519, 574], "interp": [19, 20, 155, 193, 194, 196, 198, 202, 203, 205, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 321, 376, 404, 409, 445, 447, 459, 465, 469, 472, 475, 485, 486, 487, 490, 495, 496, 497, 531, 532, 555, 556], "interp1": 487, "interp1d": 321, "interp2": 487, "interp_by_coord": [193, 194, 196, 202, 205, 206, 276, 443, 487], "interp_by_pix": [193, 194, 196, 202, 205, 206, 272, 273, 487], "interp_kwarg": [68, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 226, 272, 273, 276, 277, 381, 485, 495, 564], "interp_map": [193, 194, 196, 202, 205, 206], "interp_missing_data": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165], "interp_param": 381, "interp_scal": [101, 288, 321], "interp_to_geom": [193, 194, 196, 202, 205, 206, 429, 445, 487, 495, 519], "interp_weight": 192, "interpol": [6, 26, 94, 101, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 173, 192, 193, 194, 196, 198, 202, 203, 205, 206, 226, 239, 250, 251, 272, 273, 275, 276, 277, 288, 320, 321, 322, 380, 392, 393, 394, 422, 427, 432, 434, 437, 440, 442, 443, 444, 445, 446, 447, 456, 469, 485, 486, 490, 495, 496, 519, 527, 531, 564], "interpolatedunivariatesplin": 275, "interpret": [91, 102, 105, 128, 141, 142, 194, 198, 204, 205, 206, 326, 399, 409, 487, 517, 532], "intersect": [89, 176, 177, 181, 201, 395, 474], "interspers": 386, "interstellar": [45, 468], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 101, 103, 108, 125, 130, 174, 198, 203, 211, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 390, 391, 395, 396, 399, 405, 413, 426, 428, 429, 432, 441, 442, 447, 448, 473, 475, 478, 484, 487, 496, 504, 516, 531, 578, 581], "interval_edg": 203, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 249, 297, 392, 396], "intrinsic_model": 452, "intro_map": 441, "introduc": [19, 20, 193, 194, 196, 198, 202, 205, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 381, 388, 389, 391, 393, 394, 395, 396, 398, 401, 403, 406, 409, 423, 425, 426, 428, 429, 432, 434, 435, 439, 440, 441, 443, 446, 447, 448, 467, 479, 486, 490, 532, 537, 579, 582], "introduct": [384, 402, 403, 404, 422, 426, 427, 428, 429, 448, 454, 457, 490, 503, 504, 508], "introductori": 479, "introspect": 308, "intuit": [402, 582], "invalid": [367, 381, 395, 408, 409, 432, 448, 458, 462, 468, 497], "invalid_pixel": 488, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 204, 218, 219, 222, 226, 228, 229, 230, 235, 238, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 289, 290, 291, 330, 337, 394, 468, 488, 490, 492, 555], "inverse_al": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "inverse_cdf": 468, "inversecdf": 394, "inversecdfsampl": [394, 424], "inversecompton": [249, 555], "invert": [91, 192, 204, 505], "invest": 384, "investig": [467, 474, 478], "involv": [87, 91, 102, 105, 109, 110, 381, 386, 395, 397, 399, 403, 460, 579], "io": [13, 83, 86, 87, 91, 126, 186, 196, 201, 211, 277, 384, 390, 401, 411, 423, 426, 438, 442, 446, 468, 484, 485, 487, 494, 516, 519, 530, 532], "iop": 296, "iopscienc": 296, "ipix": 192, "ipykernel": [413, 415], "ipynb": [389, 401, 423, 426, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 501, 503, 504, 505, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "ipynb_to_galleri": 381, "ipython": [87, 91, 380, 381, 397, 398, 412, 416, 424, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 499, 503, 504, 505, 518, 579], "ipython3": 414, "ipywidget": 487, "irap": 401, "irf": [6, 82, 88, 96, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 116, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 179, 180, 182, 183, 184, 186, 188, 189, 192, 201, 204, 264, 307, 381, 382, 387, 391, 392, 393, 394, 397, 400, 401, 402, 403, 409, 413, 421, 423, 426, 428, 429, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 464, 468, 469, 472, 473, 475, 486, 488, 491, 492, 493, 495, 496, 497, 499, 503, 504, 515, 516, 519, 521, 522, 523, 525, 526, 577, 578], "irf_dict": 167, "irf_dl3_hdu_specif": 485, "irf_fil": [88, 148, 152, 153, 154, 163, 451, 459, 472, 475, 485, 494], "irf_filenam": [468, 469, 485, 494], "irf_map": [151, 152, 158, 163, 166], "irf_path": 468, "irfmap": [151, 152, 163, 166, 413, 429, 519], "irfmetadata": 408, "irfmodel": 392, "irfs1": 494, "irfs2": 494, "irfs_path": 82, "irfstack": [429, 438], "irregular": [192, 204, 531], "irrespect": [394, 464, 487, 531], "is_align": [192, 198, 203, 204], "is_all_point_sky_region": 201, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206], "is_allski": [191, 192, 201, 204], "is_bkg": 107, "is_contigu": [203, 487], "is_convertible_to_flux_sed_typ": [123, 125], "is_energy_axi": 198, "is_energy_depend": [220, 221, 223, 225, 231, 234, 236, 237, 238, 239, 240, 250, 252, 256, 261, 262, 263, 266, 272, 275, 276, 278, 445, 490], "is_fixed_rad_max": 165, "is_flat": [191, 192, 197, 201, 204], "is_hpx": [192, 201, 204], "is_imag": [191, 192, 201, 204], "is_mask": [193, 194, 196, 202, 205, 206], "is_norm": [409, 434, 447], "is_norm_spectral_model": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 432, 490], "is_nul": 487, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 432], "is_region": [192, 201, 204], "is_regular": [192, 201, 204], "is_ul": [67, 123, 125, 432, 447, 457, 481, 483, 505], "is_unidimension": 197, "isf": [484, 581], "isinst": [381, 392, 395, 404, 408, 409], "ism": [52, 53, 555], "isn": [384, 388, 395, 397, 400, 411, 466, 579], "isnan": [487, 488], "iso": [88, 125, 203, 208, 446, 475, 489, 495, 531, 573], "iso_p8r2_source_v6_v06": [489, 495], "isol": [395, 412, 488], "isot": [362, 583], "isotherm": [22, 507], "isotrop": [47, 221, 282, 489], "issu": [19, 20, 26, 87, 91, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 381, 382, 384, 389, 390, 392, 393, 395, 398, 401, 406, 407, 408, 409, 410, 413, 414, 415, 419, 422, 434, 435, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 466, 488, 494, 515, 519, 579, 580], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 200, 248, 401, 408], "iter": [87, 91, 92, 100, 123, 125, 133, 193, 194, 196, 197, 198, 200, 202, 203, 205, 206, 248, 384, 387, 389, 397, 433, 460, 475], "iter_by_axi": [123, 125, 193, 194, 196, 202, 205, 206], "iter_by_axis_data": 202, "iter_by_coord": 424, "iter_by_edg": [198, 203], "iter_by_imag": [193, 194, 196, 202, 205, 206, 441], "iter_by_image_data": [193, 194, 196, 202, 205, 206, 487], "iter_by_image_index": [193, 194, 196, 202, 205, 206], "iter_by_pix": 424, "iter_with_reshap": 197, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 484, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 102, 105, 109, 110, 123, 125, 169, 170, 179, 192, 198, 200, 218, 219, 222, 225, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 287, 381, 384, 387, 390, 391, 393, 396, 397, 398, 400, 405, 407, 408, 411, 414, 432, 446, 447, 448, 453, 457, 458, 461, 468, 469, 473, 474, 479, 481, 483, 484, 486, 487, 488, 489, 490, 492, 503, 505, 508, 524, 526, 528, 530, 531, 532, 578, 581], "itself": [87, 91, 380, 381, 396, 407, 453, 473, 474, 476, 492, 579], "ivoa": [381, 447], "iycrpavp": 478, "j": [19, 20, 23, 102, 109, 128, 135, 144, 290, 382, 384, 515], "j0001": [481, 505], "j0002": [481, 505], "j0003": [481, 505], "j0006": 481, "j0007": 505, "j0008": [481, 505], "j0009": 505, "j0010": 481, "j0013": 481, "j0021": 481, "j0022": 481, "j0025": 481, "j0031": 481, "j0349": 481, "j0521": 456, "j0534": [481, 505], "j0633": 505, "j0835": [454, 505], "j0851": 481, "j1036": 481, "j1104": [481, 505], "j1506": 454, "j1507": 454, "j1513": 481, "j1514": 481, "j1555": 505, "j1653": 481, "j1713": 453, "j1731": 489, "j1732": 489, "j1741": 489, "j1744": 489, "j1745": 489, "j1746": 489, "j1747": 489, "j1748": 489, "j1753": 489, "j1800": 489, "j1801": 489, "j1802": 489, "j1809": 489, "j1811": 489, "j1824": 481, "j1825": 467, "j1843": 67, "j1844": 67, "j2028": 481, "j2158": 481, "j2347": 505, "j2350": 505, "j2351": 505, "j2352": 505, "j2356": 505, "j2357": [481, 505], "j2358": [481, 505], "j2359": [481, 505], "j_": 23, "jackson": [87, 91], "jacob": [422, 441], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 428], "jalel": [429, 432], "jan": [386, 387, 390, 393, 398, 402, 418, 419], "jana": 447, "januari": [388, 390, 406], "jargon": 413, "jason": 422, "javascript": [87, 91], "jax": 399, "jbernet": 447, "jean": [440, 441], "jeffrei": 492, "jeltema": 507, "jep": 386, "jet": 372, "jfact": 480, "jfact_decai": 480, "jfact_map": 480, "jfactor": [19, 20, 446], "jfactori": 480, "jj": 209, "jk": [102, 109, 515], "jkl": 515, "jl": 515, "jo": [87, 91], "job": [93, 126, 127, 130, 133, 169, 434], "johann": [425, 432, 436, 437, 438, 439, 440, 441], "john": [87, 91], "join": [383, 392, 393, 494], "joint": [100, 109, 110, 120, 131, 134, 135, 144, 146, 211, 287, 389, 390, 393, 397, 401, 403, 413, 422, 423, 425, 426, 441, 442, 448, 450, 453, 454, 456, 457, 458, 460, 467, 471, 475, 482, 483, 484, 486, 490, 491, 492, 495, 499, 503, 517, 519, 576, 577, 578], "joint_fit": 476, "joint_result": 476, "jointli": [491, 496], "jonathan": [436, 437], "jose": [432, 434, 440], "joshi": 432, "jos\u00e9": [389, 397, 401, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 440, 441, 442], "journal": 407, "jouvin": [422, 424, 425, 426, 429, 437, 438, 439, 440, 441], "jqueri": [87, 91], "jskwarg": [87, 91], "json": [16, 84, 90, 104, 124, 410, 434, 436, 440], "json_data": [16, 84, 90, 104, 124], "json_schema": [16, 84, 90, 104, 124], "jsonschema": [398, 425, 426], "jsviewer": [87, 91, 466], "juan": 447, "jul": [387, 396, 398, 400, 419], "juli": [387, 390, 395, 397, 398, 400, 404, 406, 408, 474, 478], "julia": 447, "julian": 583, "julien": [438, 439, 440], "jun": [395, 397, 398, 403, 404], "june": [395, 399, 419], "junior": [66, 401], "jupyt": [380, 388, 397, 398, 401, 412, 416, 418, 423, 438, 439, 440, 442, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579], "jupyterlab": [380, 398, 401, 417, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "jupytext": 401, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 153, 356, 381, 382, 383, 384, 386, 389, 391, 395, 397, 398, 399, 401, 411, 412, 414, 440, 442, 452, 456, 457, 459, 464, 466, 468, 473, 474, 476, 479, 482, 487, 495, 496, 503, 505, 516, 532, 579], "juypter": 397, "jyear": [87, 91], "k": [19, 33, 52, 53, 102, 109, 200, 222, 275, 332, 454, 456, 458, 481, 484, 487, 489, 490, 495, 515, 532, 536, 548, 555, 566], "kai": [440, 441], "kaori": 424, "kaspi": [31, 39, 45], "katrin": [409, 445, 446, 447], "kb": 389, "keep": [13, 87, 91, 100, 123, 161, 193, 194, 196, 202, 205, 206, 211, 381, 382, 384, 386, 387, 388, 389, 395, 398, 399, 400, 401, 404, 405, 430, 440, 461, 462, 467, 472, 478, 484, 489, 495], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [103, 108], "keepdim": [161, 163, 166, 193, 194, 196, 202, 205, 206, 421, 426, 486], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 82, 84, 87, 89, 90, 91, 102, 104, 105, 109, 110, 118, 124, 133, 200, 211, 344, 349, 350, 367, 389, 391, 398, 403, 405, 408, 418, 441, 452, 482, 490, 545], "kept": [89, 102, 105, 109, 110, 123, 125, 126, 130, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 381, 387, 401, 405, 452, 478, 517], "kernel": [102, 105, 109, 110, 118, 122, 128, 129, 133, 150, 151, 152, 161, 163, 166, 168, 173, 178, 180, 183, 194, 204, 206, 387, 408, 413, 415, 427, 428, 433, 438, 442, 443, 448, 460, 462, 476, 486, 487, 488, 495, 505, 515, 519, 523], "kernel_width": [133, 460, 466], "kernelbackgroundestim": 428, "kernelbackgroundmapestim": 402, "kev": [107, 133, 198, 460, 482, 483, 532], "keyboard": 417, "keyerror": [91, 200, 405], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 101, 102, 104, 105, 109, 110, 124, 125, 127, 128, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 209, 211, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 282, 288, 290, 320, 328, 329, 350, 362, 364, 365, 368, 369, 370, 374, 375, 376, 377, 378, 408, 428, 432, 435, 443, 444, 458, 468, 469, 482, 487, 496, 517, 532, 543], "kg": 52, "khelifi": [424, 426, 429, 432, 435, 439, 440, 441, 443, 444], "kh\u00e9lifi": [407, 443, 445, 446, 447, 448], "kill": 410, "kind": [87, 91, 356, 392, 393, 394, 399, 400, 404, 407, 441], "kinet": 44, "king": [162, 425, 436, 437, 438, 439, 440, 441, 485, 525], "kirsti": [445, 446, 447, 448], "kl": 515, "klepser": 436, "km": [32, 37], "km2": 494, "km2a": [57, 70], "know": [382, 384, 386, 390, 395, 397, 398, 405, 411, 423, 440, 441, 442, 466, 469, 480, 485, 486, 487, 494, 496, 497, 579], "knowledg": [409, 417, 454, 459, 465, 467, 470, 472, 473, 484, 486, 487, 489, 492], "known": [289, 291, 308, 394, 419, 456, 460, 462, 467, 473, 486, 487, 488, 505, 519, 529, 579, 580, 581], "koenig": [290, 448], "konig": [290, 448], "konrad": 447, "kornecki": 447, "kovalev": 479, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 249, 308, 311, 480, 481, 513, 555], "kurt": 447, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 101, 102, 105, 109, 110, 125, 126, 127, 128, 130, 145, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 175, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 282, 288, 320, 331, 356, 368, 369, 370, 373, 375, 376, 377, 378, 381, 392, 408, 409, 445, 454, 458, 468, 476, 486, 497, 567], "kwargs_ax": [374, 462, 464], "kwargs_background": [109, 110], "kwargs_colorbar": [147, 148, 150, 153, 154, 155, 160, 162, 164, 206, 369], "kwargs_count": [109, 110], "kwargs_excess": [109, 110], "kwargs_extens": [220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276, 467], "kwargs_fit": [109, 110, 374], "kwargs_fp": 101, "kwargs_hist": [374, 462, 464], "kwargs_list": 200, "kwargs_model": 101, "kwargs_npred_sign": [109, 110], "kwargs_point": [201, 224, 248, 458], "kwargs_posit": [220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276, 467], "kwargs_residu": [101, 109, 110], "kwargs_saf": [109, 110], "kwargs_spati": [102, 105, 109, 110, 464, 504], "kwargs_spectr": [102, 105, 109, 110, 464, 504], "kwargs_spectrum": [101, 109, 110], "l": [23, 26, 51, 54, 101, 102, 109, 110, 173, 378, 382, 395, 404, 407, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 466, 467, 472, 475, 476, 481, 482, 484, 486, 487, 488, 490, 491, 492, 494, 495, 503, 504, 505, 515, 519, 532, 555, 564, 578, 580, 581, 582], "l06": [48, 509], "l0bif47m": 478, "l_": [52, 53], "l_0": [51, 512, 536, 537], "l_snr": 44, "la": 438, "lab": [407, 413, 415, 417, 440], "label": [92, 195, 198, 203, 224, 248, 306, 369, 370, 375, 378, 381, 382, 385, 390, 394, 395, 410, 411, 432, 434, 443, 444, 446, 448, 451, 452, 454, 456, 458, 462, 464, 465, 469, 470, 473, 474, 476, 479, 480, 484, 487, 490, 491, 492, 505, 512, 513, 521, 545, 551, 554, 555, 559, 564], "label_axi": [195, 487], "label_axis2": 487, "labelcolor": 451, "labelmapaxi": [432, 446, 448], "lack": [200, 396, 476], "lafferti": [420, 578], "lafferty1994": 578, "lai": 488, "lambda": [67, 229, 230, 290, 374, 481, 494, 549, 581], "lambda_": [229, 230, 287, 454, 456, 464, 549, 551], "lancast": [135, 144], "land": 411, "langl": 19, "languag": [388, 400], "laplac": [237, 538], "lar": [397, 421, 422, 423, 439, 440, 441, 444, 446, 448], "larg": [67, 87, 91, 193, 194, 196, 202, 205, 206, 272, 274, 276, 381, 384, 386, 387, 395, 401, 402, 422, 432, 441, 442, 447, 451, 456, 462, 474, 481, 488, 494, 495, 496, 505, 515, 517, 519, 520, 526, 532, 538, 576, 579, 584], "large_scale_compon": [67, 481], "larger": [27, 132, 151, 152, 158, 163, 166, 287, 296, 382, 389, 400, 446, 448, 451, 453, 456, 482, 486, 487, 488, 492, 516, 532, 538, 580, 581], "largest": [102, 105, 109, 110, 206, 381], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 193, 194, 195, 196, 198, 202, 205, 206, 248, 338, 378, 388, 391, 393, 403, 407, 410, 411, 413, 415, 421, 422, 479, 526, 528], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 102, 105, 109, 111, 116, 122, 126, 127, 129, 133, 151, 152, 158, 163, 166, 169, 193, 194, 196, 199, 202, 204, 205, 206, 220, 221, 225, 232, 234, 237, 250, 252, 261, 262, 264, 266, 272, 274, 276, 282, 287, 310, 311, 314, 336, 381, 382, 389, 390, 391, 392, 393, 394, 400, 401, 404, 411, 413, 418, 421, 426, 439, 440, 441, 448, 450, 454, 457, 460, 461, 462, 464, 466, 470, 473, 474, 478, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 498, 499, 503, 504, 505, 507, 514, 516, 517, 519, 524, 531, 532, 536, 537, 538, 539, 540, 541, 542, 576, 583], "lat_0": [225, 234, 237, 252, 261, 262, 276, 396, 404, 460, 461, 464, 465, 467, 468, 469, 472, 473, 481, 482, 489, 490, 495, 503, 504, 536, 537, 538, 540, 541, 542, 543], "lat_0_err": 467, "lat_pnt": [310, 314], "lat_rang": 336, "lat_t": [310, 314], "later": [381, 386, 387, 388, 392, 393, 394, 397, 398, 399, 400, 401, 402, 420, 422, 432, 433, 435, 436, 442, 452, 456, 458, 464, 465, 482, 486, 487, 490, 495, 505, 515], "latest": [126, 186, 277, 308, 384, 388, 401, 406, 407, 410, 414, 443, 451, 459, 461, 464, 465, 466, 472, 475, 484, 516, 519, 532], "latex": [381, 382], "latex_inlin": 446, "latitud": [94, 148, 191, 192, 193, 194, 199, 201, 204, 205, 206, 336, 368, 425, 470, 487, 490, 524, 531, 539], "latpol": 487, "latter": [180, 211, 392, 394, 396, 402, 405, 408, 426, 458, 459, 468, 469, 472, 488, 489, 526, 528, 580], "launch": [413, 415, 440, 579], "laura": [429, 432, 434, 435, 441, 443, 445, 446, 447, 448], "law": [27, 101, 118, 123, 125, 127, 132, 140, 161, 163, 166, 218, 228, 229, 230, 253, 254, 255, 256, 265, 268, 269, 270, 280, 290, 335, 394, 420, 426, 440, 450, 452, 459, 461, 464, 468, 470, 472, 474, 475, 476, 478, 489, 490, 492, 519, 533, 545, 565, 571], "law2": 558, "layer": [87, 91, 393, 400], "layout": [432, 464, 472, 487, 494, 503, 504], "lazi": [88, 100, 102, 105, 109, 110, 274, 317, 440], "lazili": 102, "lazyfitsdata": 428, "lc": [86, 130, 203, 394, 396], "lc_1d": [123, 125, 145, 473, 474, 475, 479], "lc_3d": 473, "lc_estim": 396, "lc_maker_1d": [473, 474, 475], "lc_maker_3d": 473, "lc_new": 474, "lczujwhu": 478, "le": 90, "lea": 429, "lead": [122, 381, 390, 395, 400, 402, 404, 406, 407, 425, 448, 492, 494, 496, 507, 579], "leak": [458, 528], "leakag": [290, 448, 473], "learn": [148, 153, 381, 398, 401, 410, 413, 415, 417, 441, 454, 456, 460, 466, 467, 468, 470, 479, 481, 482, 484, 487, 490, 492, 494, 499, 505, 579], "least": [43, 44, 134, 143, 381, 384, 386, 390, 468, 479, 531], "leav": [386, 393, 395, 396, 398, 401, 412, 489], "lefaucheur": [438, 439, 440], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 102, 109, 123, 125, 130, 133, 151, 153, 193, 194, 196, 202, 205, 206, 230, 235, 255, 268, 292, 298, 381, 389, 391, 395, 397, 400, 404, 417, 460, 466, 473, 475, 479, 481, 489, 517, 526, 529, 537, 538, 545, 546, 549, 550, 552, 553, 555, 557, 560, 561, 562, 563, 567, 568, 569, 571, 580, 581, 582], "legaci": [381, 440, 441], "legacy_altaz": 85, "legal": [87, 91], "legend": [378, 451, 452, 454, 456, 458, 464, 465, 469, 470, 473, 474, 476, 479, 480, 484, 490, 491, 492, 495, 512, 513, 521, 545, 551, 554, 555, 559, 564], "legend_kwarg": 378, "lemi\u00e8r": 440, "len": [83, 287, 378, 460, 467, 468, 469, 474, 476, 478, 479, 481, 486, 489, 505, 519], "lenain": [440, 441], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 169, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 290, 320, 374, 407, 454, 456, 459, 466, 470, 478, 481, 484, 487, 495, 505, 536], "lengthi": 487, "lennarz": [423, 437, 439], "leq": [536, 541, 542], "less": [77, 192, 194, 198, 239, 275, 298, 381, 386, 388, 399, 411, 440, 484, 490, 491, 492], "let": [67, 281, 381, 384, 386, 390, 395, 398, 413, 416, 440, 441, 442, 454, 457, 458, 459, 460, 464, 465, 466, 467, 468, 470, 475, 476, 481, 482, 484, 487, 488, 490, 492, 495, 503, 505, 579], "level": [6, 11, 15, 16, 83, 84, 90, 104, 122, 124, 211, 289, 291, 381, 382, 384, 385, 386, 392, 394, 396, 400, 401, 402, 405, 408, 413, 417, 424, 425, 426, 427, 428, 432, 440, 447, 450, 453, 454, 456, 457, 460, 461, 462, 464, 466, 468, 472, 473, 474, 475, 476, 479, 480, 483, 484, 489, 491, 494, 495, 496, 497, 499, 501, 505, 506, 515, 516, 517, 524, 526, 527, 577, 578, 579, 583], "levelnam": 381, "levmar": [211, 484], "lf": 411, "lgpl": 381, "lgtm": 411, "lhaaso": [55, 57], "li": [118, 122, 176, 387, 451, 460, 462, 468, 483, 578, 581], "lib": [345, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 543, 551, 567], "librari": [87, 91, 381, 386, 387, 391, 401, 407, 418, 453, 456, 468, 490, 494, 504, 507, 516, 519, 577, 579], "licenc": 407, "licens": [407, 417], "lie": [191, 192, 198, 201, 204, 483], "life": [388, 484], "lifetim": [20, 447], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 130, 137, 226, 239, 297, 385, 392, 394, 397, 401, 405, 413, 426, 428, 429, 436, 439, 441, 446, 447, 450, 452, 477, 478, 479, 499, 517, 518, 528, 533, 575, 577], "light_curv": [16, 239, 401, 441, 450, 457, 461, 462, 464, 473, 477, 503, 574], "light_curve_flar": [450, 474, 477], "light_curve_model": 574, "light_curve_simul": [450, 475, 477], "lightcrv_pksb1222": [239, 574], "lightcurv": [71, 73, 74, 75, 77, 78, 119, 125, 130, 136, 137, 138, 139, 145, 202, 203, 239, 294, 295, 297, 390, 392, 397, 400, 402, 405, 413, 424, 426, 427, 428, 432, 438, 439, 440, 441, 443, 444, 446, 447, 450, 473, 474, 477, 483, 499, 514, 519, 574], "lightcurve1": 136, "lightcurve2": 136, "lightcurve_at_energi": 405, "lightcurveconfig": 16, "lightcurveestim": [119, 396, 397, 402, 405, 413, 424, 426, 428, 429, 432, 440, 441, 446, 473, 474, 475, 478, 519], "lightcurvetablemodel": [392, 394], "lightcurvetempl": 392, "lightcurvetemplatemodel": [445, 446], "lightcurvetemplatetemporalmodel": [271, 404, 443, 446, 448, 469, 490, 574], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 141, 142, 157, 165, 193, 194, 196, 200, 202, 205, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 308, 328, 338, 380, 381, 382, 384, 386, 387, 388, 389, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 412, 413, 417, 423, 432, 434, 435, 439, 440, 442, 443, 445, 446, 451, 452, 454, 456, 457, 458, 459, 462, 469, 470, 476, 479, 480, 482, 484, 485, 487, 491, 492, 494, 495, 499, 503, 505, 507, 508, 515, 519, 524, 532, 542, 577, 579, 580, 581, 582], "likelhood": 393, "likelihood": [100, 101, 102, 105, 110, 122, 123, 124, 125, 127, 133, 134, 143, 243, 288, 305, 381, 387, 390, 393, 394, 397, 399, 401, 402, 403, 405, 413, 420, 422, 423, 426, 433, 436, 439, 441, 442, 447, 448, 454, 456, 457, 458, 460, 466, 470, 473, 474, 476, 482, 483, 484, 486, 492, 495, 503, 504, 507, 515, 517, 519, 555, 577, 578, 580, 581], "likelihood_profil": [392, 422], "likelihood_typ": 427, "likewis": [194, 206], "lima": 118, "lima1983": [517, 578, 581], "lima_map": 462, "lima_maps2": 462, "limamapestim": [402, 428], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 101, 112, 113, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 143, 150, 165, 168, 198, 215, 217, 253, 288, 289, 291, 328, 329, 368, 387, 389, 390, 392, 393, 394, 395, 396, 398, 399, 401, 402, 404, 405, 409, 422, 428, 432, 439, 440, 441, 442, 447, 451, 456, 460, 464, 467, 470, 473, 482, 483, 484, 487, 488, 491, 495, 503, 515, 517, 519, 528, 537, 555, 564, 577, 578, 582], "lin": [19, 20, 198, 202, 203, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 288, 320, 321, 322, 409, 469, 485, 487, 497, 532, 555], "line": [6, 13, 46, 82, 83, 87, 91, 101, 102, 105, 109, 110, 154, 160, 162, 164, 201, 202, 224, 248, 340, 341, 378, 380, 382, 384, 387, 390, 392, 395, 397, 398, 405, 411, 412, 413, 415, 417, 426, 437, 440, 448, 464, 484, 486, 490, 507, 519, 532, 577], "line2d": [201, 224, 248], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 147, 148, 149, 150, 153, 155, 157, 160, 165, 193, 194, 196, 202, 203, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 239, 240, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 320, 381, 443, 450, 464, 469, 470, 472, 487, 490, 495, 503, 504, 533, 575], "linear_model": 570, "linearli": [203, 206, 487, 515], "linearsegmentedcolormap": [371, 372], "linearstretch": [371, 372], "lineartemporalmodel": [271, 490, 570], "lineno": 381, "liner": [275, 395], "linestyl": [451, 476, 478, 480, 492, 513, 532, 536, 537], "linewidth": [378, 382, 478], "linhoff": [444, 445, 446, 447, 448], "link": [67, 69, 80, 101, 224, 226, 248, 287, 384, 386, 389, 390, 393, 401, 407, 410, 411, 417, 418, 429, 432, 434, 438, 439, 440, 452, 453, 456, 457, 458, 459, 461, 464, 465, 472, 474, 475, 481, 484, 490, 492, 494, 504, 505, 519, 564, 576], "linkag": 306, "linkage_kwarg": 306, "linkcheck": 382, "linspac": [83, 152, 193, 194, 196, 202, 205, 206, 211, 468, 470, 476, 484, 485, 487, 492, 531, 536], "lint": [16, 84, 90, 104, 124], "linux": [388, 398, 411, 414, 441, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 579], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 101, 102, 103, 104, 105, 108, 109, 110, 118, 120, 122, 123, 125, 126, 127, 130, 131, 133, 134, 135, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 168, 169, 173, 174, 176, 177, 179, 180, 181, 182, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 329, 339, 340, 341, 343, 370, 374, 375, 377, 378, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 453, 456, 459, 460, 465, 469, 470, 472, 473, 475, 478, 479, 482, 483, 484, 485, 486, 491, 492, 494, 495, 496, 497, 499, 504, 515, 519, 522, 531, 532, 576, 577, 578, 579], "list_format": [87, 91], "listen": 519, "listenv": 384, "liter": [16, 84, 90, 104, 124, 326, 381], "literatur": [507, 509, 578], "littl": [87, 91, 400, 402, 408, 487, 495, 524, 528, 579], "live": [83, 86, 88, 381, 386, 389, 391, 402, 442, 445, 483], "livetim": [67, 88, 89, 105, 106, 110, 163, 185, 187, 188, 387, 451, 453, 456, 457, 459, 466, 468, 469, 472, 475, 481, 482, 485, 487, 495, 496, 505, 515, 519], "livetime_fract": 89, "ljouvin": 387, "ll": [123, 125, 133, 384, 386, 398, 414, 451, 452, 453, 456, 458, 461, 462, 466, 473, 474, 475, 476, 478, 479, 579, 581], "llvm": 417, "ln": [53, 484, 562], "lo": [23, 439], "lo_bnd": 198, "lo_threshold": 150, "load": [66, 67, 83, 86, 87, 91, 100, 101, 102, 105, 109, 127, 129, 167, 173, 191, 192, 193, 194, 204, 316, 381, 435, 438, 440, 446, 457, 459, 461, 462, 468, 469, 472, 475, 476, 479, 488, 494, 495, 497, 503, 505, 516], "load_cta_irf": [442, 446], "load_irf_dict_from_fil": [163, 446, 451, 459, 468, 469, 472, 475, 494], "loc": [87, 91, 206, 374, 476, 512, 513, 521, 545, 551, 554, 555, 559], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 141, 142, 178, 191, 192, 201, 202, 204, 381, 382, 384, 389, 395, 410, 411, 414, 418, 422, 432, 457, 460, 461, 462, 467, 468, 480, 486, 499, 503, 519], "local_dataset": 486, "local_dens": [17, 18, 21, 22, 24, 25, 27, 480], "local_to_glob": 192, "localfold": 11, "localis": 316, "localn": [16, 84, 90, 104, 124], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 137, 151, 152, 158, 163, 166, 204, 337, 389, 395, 399, 402, 407, 408, 413, 415, 446, 448, 451, 459, 468, 469, 472, 475, 481, 496, 497, 516, 532, 579], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 102, 104, 123, 124, 125, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 198, 202, 206, 214, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 280, 283, 292, 298, 319, 320, 322, 367, 376, 393, 397, 419, 436, 443, 447, 450, 452, 457, 459, 460, 461, 462, 464, 465, 466, 469, 472, 473, 474, 475, 478, 480, 482, 484, 485, 486, 487, 490, 492, 495, 496, 501, 503, 504, 519, 521, 531, 532, 533, 556, 564, 565, 571, 578, 579, 580, 581, 582], "log10": 476, "log_": [241, 242, 490, 553], "log_2": 295, "log_en": 490, "log_level": 11, "log_parabola": 454, "log_parabola_norm": 404, "logarithm": [34, 487, 492, 553], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 439, "loggaussian": 392, "logger": [347, 350, 381, 466], "logic": [16, 84, 86, 90, 104, 124, 179, 405, 448, 487, 488], "logical_and": [193, 194, 196, 202, 205, 206], "logical_or": [193, 194, 196, 202, 205, 206, 486], "loglog": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 319, 451, 480, 511, 512, 513], "lognorm": 480, "logo": 411, "logparabola": [392, 554], "logparabolanormspectralmodel": [242, 259, 404, 429, 490, 554], "logparabolaspectralmodel": [211, 241, 259, 404, 452, 454, 456, 458, 465, 481, 484, 490, 547, 553], "logscal": 426, "logspac": [152, 193, 194, 196, 202, 205, 206, 459, 472, 475, 476, 480, 487, 511, 512, 513, 532], "logspir": [33, 38], "loguniform": 243, "lomb": [396, 440], "lon": [16, 47, 91, 94, 96, 102, 105, 109, 111, 116, 122, 127, 129, 133, 151, 152, 158, 163, 166, 169, 193, 194, 196, 199, 202, 204, 205, 206, 220, 221, 225, 232, 234, 237, 250, 252, 261, 262, 264, 266, 272, 274, 276, 310, 311, 314, 336, 381, 382, 392, 395, 400, 404, 425, 448, 457, 460, 461, 462, 464, 466, 470, 473, 474, 478, 481, 482, 483, 485, 486, 487, 490, 491, 495, 503, 504, 505, 517, 531, 532, 536, 537, 538, 539, 540, 541, 542], "lon_0": [225, 234, 237, 252, 261, 262, 276, 396, 404, 460, 461, 464, 465, 467, 468, 469, 472, 473, 481, 482, 489, 490, 495, 503, 504, 536, 537, 538, 540, 541, 542, 543], "lon_0_err": 467, "lon_pnt": [310, 314], "lon_rang": 336, "lon_t": [310, 314], "long": [381, 384, 386, 388, 395, 397, 400, 401, 403, 406, 408, 434, 443, 452, 481, 499, 531], "longer": [296, 381, 387, 388, 395, 396, 398, 401, 414, 432, 435, 440, 441, 443, 446, 453, 459, 473], "longest": 197, "longitud": [68, 94, 148, 191, 192, 193, 194, 199, 201, 204, 205, 206, 336, 368, 395, 470, 487, 490, 524, 531, 539], "lonpol": 487, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 102, 105, 109, 110, 125, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 338, 381, 383, 384, 386, 393, 395, 396, 398, 400, 401, 404, 417, 440, 453, 456, 457, 459, 460, 461, 462, 464, 466, 468, 470, 472, 473, 475, 476, 482, 485, 487, 490, 494, 495, 497, 499, 503, 505, 507, 516, 519, 579], "look_up": 438, "lookup": 199, "loop": [87, 91, 329, 394, 446, 456, 481, 487, 496, 503, 519], "lopez": [226, 440, 446, 545], "lopez21": [227, 452, 545], "lopez_2021": 227, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 381, "loss": 52, "lost": [100, 102, 105, 109, 110, 519, 532], "lot": [82, 381, 384, 386, 387, 388, 389, 392, 394, 395, 397, 401, 411, 421, 423, 424, 432, 440, 441, 457, 466, 495, 503, 504, 529], "low": [87, 91, 150, 198, 331, 381, 382, 385, 390, 410, 438, 440, 450, 453, 456, 460, 466, 468, 482, 488, 489, 494, 495, 499, 503, 506, 526, 580], "low_zenith": 491, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 123, 125, 150, 179, 198, 200, 203, 218, 219, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 245, 249, 251, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 273, 275, 277, 278, 381, 395, 400, 401, 408, 470, 486, 504], "lower_error": 125, "lowest": [400, 479], "lp": [241, 242, 404, 454, 481, 490, 547], "lp_norm": 554, "lss": 456, "lst": [388, 494], "lsw": 410, "lt": [381, 407, 434, 443, 541, 542], "ltcube": [192, 193, 194, 196, 205, 206, 487], "lts_author": 407, "luca": [422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 435, 443, 446], "lui": 442, "luigi": 437, "luminos": [41, 46, 51, 52, 53, 54, 249], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 513], "lvtm": 475, "lw": [456, 458, 460, 466, 476, 484, 532, 536, 538], "ly": [432, 489], "lyne": 37, "l\u00e9a": [422, 424, 425, 426, 429, 437, 438, 439, 440, 441], "l\u00f3pez": 440, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 111, 116, 130, 191, 192, 193, 194, 196, 202, 204, 205, 206, 290, 305, 381, 382, 384, 395, 410, 412, 413, 414, 415, 469, 480, 484, 485, 487, 490, 501, 524, 528, 530, 531, 532, 543, 579, 582], "m2": [102, 153, 173, 452, 457, 459, 461, 462, 464, 466, 472, 482, 485, 486, 494, 503, 504], "m_": [20, 50, 52, 53], "m_3fhl_gc": 487, "m_4d": 487, "m_allski": 487, "m_b": 580, "m_cube": 487, "m_ejecta": [52, 512], "m_gc": 487, "m_hpx": 487, "m_i": 580, "m_iem_10gev": 487, "m_iem_cutout": 487, "m_iem_gc": 487, "m_iem_interp": 487, "m_sub": 487, "m_sun": 512, "m_wc": [193, 194, 196, 202, 205, 206, 487], "ma": [87, 91, 118, 122, 451, 460, 462, 483, 578, 581], "mac": [87, 91, 381, 388, 411, 439, 579], "machin": [384, 388, 389, 394, 398, 411, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 464], "maco": [398, 441], "macport": [398, 439, 441], "made": [173, 180, 201, 204, 215, 217, 224, 248, 308, 340, 341, 381, 384, 386, 397, 400, 402, 405, 406, 407, 432, 443, 444, 448, 456, 460, 464, 465, 486, 494, 532, 543], "madrid": 391, "magenta": [378, 467, 491], "magic": [97, 413, 418, 434, 440, 443, 458, 495, 578], "magic_ecpl": 281, "magic_lp": [281, 458], "magnet": [42, 50, 51, 54, 555], "magnetic_field": [50, 51, 54], "magnitud": [320, 468], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 101, 104, 124, 125, 381, 382, 384, 389, 390, 394, 395, 397, 398, 406, 407, 411, 412, 414, 419, 420, 452, 461, 462, 468, 483, 494, 518, 519, 531, 538, 555, 576, 579, 583], "mail": [382, 384, 386, 388, 395, 397, 400, 402, 404, 407, 410, 416, 421, 422, 505, 579], "mailmap": [432, 443], "main": [91, 102, 109, 381, 384, 386, 387, 389, 393, 396, 397, 398, 401, 405, 407, 410, 411, 422, 428, 432, 435, 440, 446, 457, 467, 468, 470, 472, 478, 481, 485, 487, 488, 489, 501, 503, 504, 514, 516, 520, 579], "mainli": [381, 391, 392, 395, 402, 487], "maint": 448, "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 381, 383, 398, 400, 401, 402, 406, 411, 441, 486], "mainten": [381, 388, 407, 411, 423, 445], "major": [201, 225, 234, 237, 381, 385, 386, 390, 398, 406, 434, 440, 441, 536, 537, 538], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 101, 104, 124, 168, 169, 173, 174, 175, 176, 178, 179, 180, 183, 184, 189, 190, 192, 193, 194, 197, 198, 201, 203, 204, 205, 206, 275, 338, 340, 341, 352, 380, 382, 383, 386, 387, 388, 391, 393, 395, 397, 398, 399, 400, 401, 402, 405, 407, 408, 411, 413, 415, 417, 420, 421, 423, 426, 427, 432, 434, 437, 438, 439, 440, 443, 445, 448, 452, 453, 456, 458, 459, 462, 464, 468, 472, 473, 485, 486, 487, 490, 494, 495, 501, 505, 516, 519, 579, 580], "make_background": [173, 180], "make_background_fit": 170, "make_background_scal": 170, "make_base_catalog_galact": [440, 509], "make_concentric_annulus_sky_region": 470, "make_contour": 484, "make_count": [173, 174, 175, 180], "make_counts_off": [174, 175], "make_cub": 168, "make_dataset": 169, "make_default_fov_background_model": 170, "make_edisp": [173, 180], "make_edisp_kernel": [173, 180], "make_edisp_kernel_map": 485, "make_edisp_map": 152, "make_effective_livetime_map": [448, 486], "make_exclusion_mask": 170, "make_exposur": [173, 180], "make_exposure_irf": [173, 180], "make_imag": 441, "make_lupton_rgb": 376, "make_map_background_irf": 435, "make_map_count": 387, "make_map_cutout": 387, "make_map_exposure_reco_energi": 387, "make_map_exposure_true_energi": [152, 387, 485], "make_map_fov_background": 387, "make_map_hadron_accept": 387, "make_map_ring_background": 387, "make_map_xxx": 387, "make_maps_off": 178, "make_mask_bkg_invalid": 179, "make_mask_energy_aeff_default": 179, "make_mask_energy_aeff_max": 179, "make_mask_energy_bkg_peak": 179, "make_mask_energy_edisp_bia": 179, "make_mask_offset_max": 179, "make_mean_edisp": 442, "make_mean_psf": 442, "make_meta_t": [173, 180], "make_model": 400, "make_more_random_stuff": 381, "make_observation_time_map": 486, "make_orthogonal_rectangle_sky_region": [127, 470], "make_path": [125, 465, 482, 483], "make_pixel_region": 395, "make_psf": [163, 173, 180, 442], "make_psf_map": 485, "make_quant": 352, "make_random_stuff": 381, "make_region": 395, "make_sky_coord": 395, "make_some_random_stuff": 381, "make_theta_squared_t": [432, 497], "makefil": [411, 436], "maker": [6, 152, 163, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 387, 394, 396, 407, 426, 428, 429, 434, 443, 446, 447, 450, 451, 456, 458, 459, 462, 466, 468, 469, 472, 475, 476, 478, 482, 485, 488, 493, 496, 497, 499, 529, 578], "maker_fov": 504, "maker_safe_mask": [466, 472, 504], "mamba": [384, 412, 413, 434], "manag": [87, 91, 215, 217, 224, 248, 328, 359, 380, 381, 384, 389, 397, 398, 400, 403, 407, 408, 410, 432, 437, 439, 443, 447, 487, 489, 579], "manconi": 424, "mandatori": [179, 384, 394, 407, 469, 490], "mandatory_keyword": 485, "mani": [87, 91, 320, 381, 382, 384, 386, 388, 390, 393, 395, 396, 397, 398, 401, 402, 407, 411, 417, 423, 424, 429, 432, 438, 439, 440, 441, 442, 445, 446, 453, 456, 459, 467, 472, 479, 483, 487, 497, 499, 507, 515, 517, 529, 532, 576, 577, 578, 579, 583], "manifest": 391, "manipul": [87, 91, 405, 408, 434, 492, 531], "manner": [445, 446], "manpow": [386, 398], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 388, 393, 403, 410, 519, 527, 579, 580], "manuel": [433, 436, 437], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 87, 90, 91, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 118, 119, 120, 122, 123, 124, 125, 127, 129, 130, 133, 134, 135, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 221, 224, 225, 232, 234, 237, 239, 248, 250, 252, 261, 262, 264, 266, 272, 273, 274, 276, 277, 285, 290, 330, 368, 369, 374, 376, 378, 380, 381, 382, 384, 388, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 408, 413, 417, 421, 422, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 446, 447, 448, 450, 451, 453, 456, 457, 458, 459, 463, 464, 467, 468, 469, 470, 471, 473, 474, 475, 478, 479, 481, 482, 483, 486, 490, 493, 494, 495, 496, 497, 499, 500, 503, 504, 507, 514, 515, 518, 519, 523, 525, 526, 527, 528, 529, 535, 537, 538, 539, 540, 543, 574, 577, 578], "map_": [207, 208, 369, 376], "map_4d": 487, "map_analysi": 400, "map_cent": 276, "map_coord": [83, 152, 163, 166], "map_dataset": [393, 476], "map_dataset_empti": 476, "map_dataset_mak": 476, "map_dataset_on_off": 476, "map_edisp": [111, 116], "map_in": [193, 194, 196, 202, 205, 206], "map_out": [105, 110, 151, 152, 158, 163, 166, 193, 194, 196, 202, 205, 206], "map_result": 460, "map_select": [16, 457, 461, 462, 464, 503], "map_typ": [193, 194, 196, 202, 205, 206, 487, 531], "mapax": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 429, 432, 434, 487], "mapaxi": [19, 20, 26, 102, 105, 109, 110, 111, 112, 113, 114, 116, 123, 125, 127, 134, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 173, 183, 184, 189, 190, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 376, 382, 396, 405, 423, 424, 426, 429, 432, 442, 446, 448, 451, 453, 456, 458, 459, 465, 466, 468, 469, 472, 474, 475, 476, 478, 482, 485, 486, 487, 490, 495, 496, 497, 504, 523, 526, 528, 529, 531, 532], "mapcoord": [83, 152, 163, 166, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 250, 440, 441, 487, 532, 539], "mapdataset": [98, 99, 103, 105, 108, 109, 110, 112, 113, 114, 115, 117, 118, 122, 127, 130, 133, 140, 141, 142, 143, 144, 168, 169, 170, 173, 174, 178, 179, 232, 374, 377, 394, 396, 402, 403, 422, 423, 424, 425, 426, 427, 428, 429, 432, 446, 447, 448, 460, 461, 465, 466, 467, 469, 470, 472, 473, 475, 476, 483, 484, 486, 488, 489, 495, 503, 504, 517, 519, 526, 529, 578, 580, 581], "mapdataseteventsampl": [93, 108, 426, 427, 428, 435, 446, 448, 468, 469], "mapdatasetmak": [163, 171, 180, 394, 426, 429, 432, 435, 443, 466, 468, 469, 472, 476, 485, 486, 496, 503, 504, 519, 526, 529], "mapdatasetmetadata": [102, 105, 408], "mapdatasetoff": 434, "mapdatasetonoff": [98, 102, 109, 110, 118, 122, 140, 168, 174, 178, 426, 427, 429, 432, 445, 446, 462, 476, 486, 515, 529, 580], "mapdatasetsampl": 394, "mapevalu": [392, 393, 425, 426, 429, 432, 443, 444, 445, 447], "mapeventsampl": [424, 425], "mapfit": [392, 393, 422, 441, 442], "mapgeom": [387, 442, 443], "mapmak": [173, 397, 422, 426, 441], "mapmakerob": [425, 426], "mappabl": 405, "mappanelplott": [402, 584], "mapper": 316, "mappingintstrani": [16, 84, 90, 104, 124], "mappingnamespac": [16, 84, 90, 104, 124], "maps_off": 178, "mar": [398, 419, 444], "march": [388, 390, 419, 421, 442], "marcocirelli": 26, "margin": [101, 105, 110, 115, 117, 192, 194, 204, 206, 224, 248, 264, 392, 488, 536, 580], "marion": [422, 441], "mark": [91, 381, 392, 410], "marker": [101, 102, 105, 109, 110, 451, 453, 456, 458, 460, 466, 473, 474, 475, 479, 505], "markerfacecolor": [102, 105, 109, 110], "markers": [101, 102, 105, 109, 110, 492], "markov": 578, "mask": [83, 87, 91, 99, 101, 102, 105, 109, 110, 122, 126, 127, 129, 130, 131, 133, 151, 152, 158, 163, 166, 168, 170, 175, 176, 177, 178, 179, 181, 191, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 215, 217, 224, 248, 264, 393, 409, 426, 428, 429, 430, 432, 435, 441, 443, 444, 445, 446, 448, 450, 451, 453, 464, 466, 486, 489, 493, 496, 499, 515, 526, 528, 531, 578], "mask_1": 491, "mask_2": 491, "mask_bright": 481, "mask_contains_region": 206, "mask_data": 488, "mask_energi": [482, 488], "mask_fit": [101, 102, 105, 109, 110, 115, 117, 393, 426, 443, 458, 462, 464, 476, 482, 484, 488, 492, 515], "mask_fit_imag": [102, 105, 109, 110], "mask_imag": [102, 105, 109, 110], "mask_map": [192, 204, 450, 488, 493], "mask_map_catalog": 488, "mask_nearest_posit": [193, 194, 196, 202, 205, 206], "mask_off": 476, "mask_roi": 481, "mask_saf": [101, 102, 105, 106, 109, 110, 179, 393, 426, 482, 486, 488, 515], "mask_safe_edisp": [102, 105, 109, 110, 448], "mask_safe_imag": [102, 105, 109, 110, 151, 152, 158, 163, 166], "mask_safe_psf": [102, 105, 109, 110], "mask_spac": 482, "mask_valid": 101, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 394, 428, 447, 480, 507, 540], "massdm": [19, 20, 480], "master": [387, 388, 395, 410, 411, 420], "match": [87, 91, 108, 113, 191, 192, 194, 197, 198, 199, 201, 204, 206, 208, 289, 291, 381, 389, 440, 442, 447, 456, 459, 475, 483, 495, 514, 531], "match_by_nam": 199, "math": [234, 380], "mathcal": [484, 515], "mathemat": [490, 492], "mathieu": [432, 435], "mathrm": [19, 20, 23, 102, 109, 153, 480, 484, 515, 580, 582], "mathworld": [335, 336], "matomo": 448, "matplotlib": [19, 20, 26, 66, 67, 83, 129, 147, 150, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 193, 194, 196, 202, 205, 206, 209, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 359, 369, 370, 371, 374, 375, 376, 378, 380, 381, 382, 395, 398, 407, 414, 417, 424, 432, 434, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 511, 512, 513, 519, 521, 522, 523, 525, 528, 536, 538, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 583], "matric": 209, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 111, 116, 150, 151, 152, 155, 209, 210, 211, 215, 224, 248, 289, 291, 374, 398, 399, 409, 442, 443, 446, 448, 484, 485, 515, 517, 523], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 395, 401, 409, 441, 446, 447, 450, 486, 493, 495, 499, 508, 577, 579], "matthew": [388, 438, 440, 441], "matthia": [440, 441], "mattox": 460, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 102, 112, 113, 126, 128, 130, 165, 169, 173, 175, 179, 206, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 267, 268, 269, 270, 273, 275, 276, 277, 279, 336, 389, 397, 404, 409, 417, 428, 429, 430, 432, 434, 446, 448, 452, 453, 456, 457, 458, 459, 461, 462, 464, 465, 466, 467, 470, 472, 473, 474, 475, 476, 478, 479, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 495, 496, 503, 504, 505, 507, 526, 528, 529, 536, 555, 558, 564, 581], "max_ag": [45, 509], "max_column": [87, 91], "max_energi": 479, "max_lin": [87, 91], "max_nit": [133, 448], "max_offset": 397, "max_percentil": 83, "max_radiu": [161, 163, 166, 204, 495], "max_region_numb": [176, 528], "max_width": [87, 91], "maxcal": 211, "maxclust": 306, "maxfev": 484, "maxim": [45, 82, 91, 112, 113, 133, 179, 221, 225, 234, 237, 250, 261, 262, 266, 272, 276, 444, 445, 446, 447, 448, 528], "maxima": [141, 215, 217], "maximilian": [432, 434, 435, 444, 445, 446, 447, 448], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 123, 125, 128, 163, 166, 168, 176, 179, 185, 188, 192, 198, 203, 204, 214, 216, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 289, 291, 335, 337, 340, 378, 384, 387, 395, 434, 454, 460, 479, 483, 486, 487, 492, 496, 504, 509, 517, 528, 555, 577, 578, 581], "maxmimum": 279, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381, 389, 391, 392, 403], "mb": [191, 192, 201, 204, 389, 413, 415, 450, 455, 463, 471, 477, 493, 494, 495, 497, 498, 500, 502, 506, 534, 544, 565, 575], "mbox": [102, 109], "mc": 399, "mc_id": [83, 391, 394, 434, 468, 494], "mcerp": 399, "mckee": [53, 447], "mcmc": [399, 401, 422, 427, 429, 555, 578], "mcmc_sampl": [401, 424], "md": [384, 401, 407], "mdm": [26, 480], "mean": [42, 68, 87, 91, 96, 101, 102, 127, 129, 150, 151, 152, 155, 158, 163, 166, 233, 235, 239, 275, 290, 294, 307, 326, 381, 382, 384, 386, 388, 394, 395, 397, 398, 404, 409, 414, 417, 429, 438, 456, 459, 460, 469, 479, 483, 484, 486, 490, 491, 492, 495, 496, 505, 537, 552, 579, 580], "meaning": 490, "meant": [387, 446, 451, 459, 461, 464, 466, 472, 475, 494], "measur": [27, 67, 101, 105, 110, 129, 134, 143, 198, 281, 289, 291, 294, 295, 296, 297, 299, 301, 302, 304, 305, 387, 395, 400, 405, 411, 420, 425, 433, 439, 441, 452, 453, 456, 458, 459, 462, 465, 467, 470, 472, 473, 474, 479, 481, 495, 504, 505, 517, 524, 526, 529, 577, 578, 581, 582], "mechan": [389, 399, 405, 408], "media": 407, "median": [83, 163, 166, 417, 476, 491, 495], "median_zenith": 491, "medium": [45, 52, 381, 390], "meeseeksdev": 381, "meeseeksmachin": 381, "meet": [224, 248, 308, 387, 389, 401, 406, 411], "megabyt": [191, 192, 201, 204], "mem": [450, 455, 463, 471, 477, 493, 498, 500, 502, 506, 534, 544, 565, 575], "member": [83, 382, 386, 395, 407, 408, 440, 446, 483, 494, 497], "memo": [150, 198], "memori": [87, 88, 91, 92, 100, 102, 103, 105, 108, 109, 110, 191, 192, 201, 204, 272, 274, 276, 359, 381, 391, 393, 394, 397, 403, 405, 426, 432, 447, 459, 472, 519], "memoryobserv": 88, "mender": [445, 446, 447], "mention": [59, 145, 381, 382, 384, 388, 389, 393, 395, 398, 400, 401, 406, 407, 410, 411, 485, 489, 490, 492, 507, 578], "mentor": [384, 401], "mere": 391, "merg": [67, 86, 87, 91, 195, 198, 224, 248, 348, 381, 384, 385, 386, 387, 394, 395, 396, 400, 401, 406, 407, 410, 411, 421, 422, 423, 424, 425, 426, 427, 428, 429, 437, 438, 439, 440, 441, 442], "merge_equ": 86, "mergesort": [87, 91], "mess": 382, "messag": [101, 210, 212, 213, 384, 395, 397, 404, 430, 445, 453, 454, 456, 457, 458, 464, 465, 466, 475, 476, 478, 483, 484, 495, 503, 504, 519, 579], "met": [86, 362, 446, 474, 478, 578], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 102, 103, 105, 107, 108, 109, 110, 123, 125, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 180, 193, 194, 196, 202, 205, 206, 272, 273, 276, 277, 318, 362, 363, 364, 365, 391, 394, 395, 396, 405, 408, 410, 428, 429, 440, 444, 446, 447, 468, 476, 487, 491, 494, 496, 516, 517, 574], "meta_t": [100, 101, 102, 105, 109, 110, 173, 180, 405, 408, 429, 453, 459, 486, 515], "metaattribut": [87, 91], "metadata": [16, 83, 84, 85, 87, 88, 90, 91, 104, 106, 123, 124, 125, 147, 148, 149, 153, 154, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206, 363, 385, 387, 398, 447, 457, 461, 462, 464, 468, 490, 503, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "metadata_fits_export_kei": [84, 90, 104, 124], "metadatabas": 408, "metadatabasemodel": 408, "metapackag": 398, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 289, 291, 297, 299, 306, 316, 320, 324, 328, 329, 330, 355, 368, 370, 380, 381, 384, 387, 390, 391, 392, 395, 396, 397, 399, 400, 401, 403, 405, 407, 408, 413, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 451, 453, 454, 456, 457, 458, 460, 461, 462, 464, 465, 466, 467, 468, 469, 472, 474, 476, 478, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 514, 516, 518, 519, 523, 526, 528, 529, 530, 532, 553, 567, 576, 577, 578, 579, 581], "method_kwarg": [328, 329], "methoda": 424, "metric": 306, "mev": [74, 83, 147, 148, 149, 153, 270, 451, 452, 459, 461, 464, 466, 472, 475, 476, 481, 485, 487, 490, 494, 495, 505, 564], "meval": 538, "mexico": 496, "meyer": [245, 281, 465, 578], "meyer2010": 578, "mgtime": 396, "michael": [445, 447], "michel": 448, "mid": [112, 435, 446, 494], "middl": [370, 397], "midli": 456, "midpoint": 88, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 181, 198, 211, 381, 386, 392, 393, 395, 398, 400, 405, 407, 408, 410, 413, 415, 422, 456, 474, 476, 482, 486, 488, 495, 496, 499, 505, 507, 515, 519, 526, 532, 579, 581], "migra": [102, 105, 109, 110, 152, 155, 160, 184, 397, 468, 469, 485, 524], "migra_axi": [102, 105, 109, 110, 114, 152, 154, 155, 468, 469, 485, 486], "migrad": [101, 211, 453, 454, 456, 457, 458, 464, 465, 466, 476, 478, 483, 484, 495, 503, 504], "migrad_opt": [211, 484], "migrat": [102, 105, 109, 110, 114, 154, 155, 160, 390, 425, 432, 441, 464, 468, 486, 523, 524], "milagro": [97, 372], "mileston": [390, 410], "milki": [33, 38, 420, 509], "miller": [87, 91], "million": [381, 408], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 102, 126, 128, 130, 145, 173, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 267, 268, 269, 270, 273, 275, 276, 277, 279, 295, 336, 396, 397, 404, 409, 417, 432, 440, 448, 452, 453, 456, 457, 458, 459, 461, 462, 464, 465, 466, 467, 470, 472, 473, 474, 475, 476, 478, 479, 481, 482, 484, 485, 486, 487, 490, 491, 492, 495, 503, 504, 505, 507, 528, 555, 558, 564], "min_count": 170, "min_dist": [141, 142, 176, 460, 466, 528], "min_distance_input": [176, 528], "min_energi": 479, "min_npix": [151, 152, 158, 163, 166, 204, 206], "min_npred_background": 170, "min_pix": 448, "min_signific": 396, "min_significance_lc": 396, "minaya": 442, "mind": [384, 401, 472, 484], "mini": 401, "miniconda": 412, "minim": [19, 20, 26, 112, 113, 132, 193, 194, 196, 201, 202, 205, 206, 207, 211, 218, 219, 221, 222, 225, 226, 228, 229, 230, 234, 235, 237, 241, 242, 245, 249, 250, 251, 252, 253, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 287, 393, 396, 404, 408, 434, 444, 446, 451, 468, 482, 484, 492, 504, 519, 528, 529, 532, 577, 582], "minima": [215, 217, 492], "minimis": [475, 491], "minimmum": [151, 152, 158, 163, 166, 204, 206], "minimum": [19, 20, 26, 47, 83, 100, 122, 123, 125, 128, 132, 137, 141, 142, 145, 146, 168, 170, 176, 198, 201, 203, 213, 214, 216, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 267, 268, 269, 270, 273, 275, 276, 277, 279, 283, 288, 292, 295, 308, 335, 337, 340, 376, 398, 434, 440, 456, 460, 468, 483, 484, 487, 492, 495, 517, 519, 528, 555, 582], "mino": [211, 484], "minor": [381, 386, 401, 404, 406, 431, 444, 537, 538], "minos_contour": [424, 442], "minu": [155, 476], "minuit": [101, 120, 211, 212, 213, 287, 392, 399, 426, 441, 442, 446, 453, 454, 456, 457, 458, 464, 465, 466, 476, 478, 483, 484, 495, 503, 504], "minuit_opt": 484, "minut": [401, 411, 440, 456, 460, 462, 464, 466, 467, 468, 470, 472, 474, 475, 478, 480, 482, 484, 486, 489, 492, 503], "mireia": [443, 448], "mirror": 190, "misc": [420, 433, 437, 438, 439], "miss": [82, 87, 91, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 381, 384, 389, 390, 391, 392, 395, 401, 402, 405, 430, 432, 434, 440, 445, 448, 487], "mission": [83, 446, 578], "mistak": [386, 406], "mix": [380, 381, 397, 482, 487], "mixin": [87, 91], "mjb62mx3": 478, "mjd": [86, 94, 125, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 363, 365, 382, 445, 446, 460, 468, 469, 473, 474, 475, 478, 479, 487, 490, 516, 567, 568, 569, 570, 571, 572, 573, 574, 583], "mjdref": [460, 487], "mjdreff": [94, 362, 365, 469], "mjdrefi": [94, 362, 365, 469], "mkdir": [397, 456, 457, 464, 465, 468, 503, 504], "mkn": [505, 578], "mkn_421_3fhl": 505, "mncontour": 211, "mnra": [137, 304], "mnt": 443, "mock": 467, "mock_dl4": 467, "mode": [16, 84, 85, 87, 90, 91, 94, 102, 104, 105, 109, 124, 128, 151, 152, 158, 163, 166, 169, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 274, 408, 427, 440, 443, 447, 475], "model": [1, 6, 15, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 140, 143, 144, 147, 153, 154, 161, 162, 163, 164, 166, 170, 173, 186, 193, 194, 196, 202, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 303, 305, 377, 380, 381, 382, 385, 386, 387, 393, 394, 396, 397, 399, 401, 402, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 454, 459, 460, 462, 467, 470, 472, 476, 483, 485, 486, 487, 488, 493, 495, 496, 499, 507, 508, 514, 515, 517, 519, 520, 524, 526, 527, 534, 544, 565, 575, 577, 578, 581, 582], "model1": [219, 545, 547, 551, 554, 556, 559], "model2": [219, 452, 475, 545, 547, 551, 554, 556, 559], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 457], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [490, 547], "model_best": 452, "model_best_joint": 456, "model_best_stack": 456, "model_bin_": 478, "model_bin_0": 478, "model_bkg": 482, "model_computed_field": [16, 84, 90, 104, 124], "model_config": [16, 84, 90, 104, 124, 461, 503], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 104, 124], "model_copi": [16, 84, 90, 104, 124, 464, 490], "model_dump": [16, 84, 90, 104, 124], "model_dump_json": [16, 84, 90, 104, 124], "model_extra": [16, 84, 90, 104, 124], "model_field": [16, 84, 90, 104, 124], "model_fields_set": [16, 84, 90, 104, 124], "model_fit": 475, "model_in_bin": 478, "model_joint": 464, "model_json_schema": [16, 84, 90, 104, 124], "model_manag": [450, 489, 493], "model_nam": [102, 105, 109, 110, 224, 248, 377, 482], "model_parametrized_nam": [16, 84, 90, 104, 124], "model_plot": 467, "model_post_init": [16, 84, 90, 104, 124], "model_prior": 492, "model_read": 492, "model_rebuild": [16, 84, 90, 104, 124], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [459, 472, 475], "model_spectrum": 490, "model_str": 457, "model_typ": [224, 232, 246, 248, 264, 274, 287, 404, 489], "model_valid": [16, 84, 90, 104, 124], "model_validate_json": [16, 84, 90, 104, 124], "model_validate_str": [16, 84, 90, 104, 124], "model_weak": 492, "model_weak_prior": 492, "model_without_nam": 490, "modelbas": [232, 257, 264, 266, 267, 274, 278, 409], "modeldm": [19, 20], "modelevalu": 392, "modeling_2d": [450, 461, 463], "modelmetadata": 408, "modelmodel_dump": [16, 84, 90, 104, 124], "modelmodel_dump_json": [16, 84, 90, 104, 124], "models_3fhl": 489, "models_4fgl_roi": 481, "models_as_dict": [16, 84, 90, 104, 124], "models_diffus": 468, "models_fil": [16, 457, 461, 462, 464, 503], "models_fit": 472, "models_gc": 489, "models_gp": 494, "models_joint": 464, "models_or": 489, "models_read": 490, "models_select": 489, "models_stack": 464, "models_yaml": 490, "modelsmetadata": 408, "modern": [87, 91, 399], "modernis": [398, 426], "modest": [381, 537], "modif": [16, 84, 87, 90, 91, 104, 124, 381, 384, 403, 410, 443], "modifi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 102, 109, 125, 126, 127, 130, 133, 169, 211, 328, 353, 378, 391, 393, 397, 403, 407, 408, 427, 429, 430, 432, 434, 442, 445, 446, 448, 452, 457, 469, 486, 488, 492, 496, 503, 517, 532, 583], "modul": [6, 263, 381, 382, 386, 390, 397, 402, 420, 422, 428, 440, 475, 481, 483, 486, 489, 507, 508, 509, 510, 555, 572, 583], "modular": 387, "mohanti": 101, "mohrmann": [397, 421, 422, 423, 439, 440, 441, 444, 446, 448, 578], "mohrmann2019": 578, "moment": [15, 51, 54, 86, 95, 264, 357, 387, 395, 397, 398, 401, 406, 407, 485, 487, 524], "moncar": [211, 484], "monitor": [394, 494, 519], "monkei": 381, "mono": 389, "monoton": 198, "mont": [399, 524, 578], "montecarlo": [103, 108, 211], "month": [78, 384, 390, 395, 398, 400, 401, 406, 410, 414, 420, 421, 422, 423, 424, 433, 436, 437, 438, 439, 440, 441, 442], "monthli": [390, 408, 413, 442], "moor": 24, "morcuend": [442, 445, 447, 448], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 101, 102, 105, 109, 110, 134, 141, 143, 150, 179, 193, 194, 196, 205, 206, 218, 219, 220, 221, 222, 223, 225, 226, 228, 230, 231, 234, 235, 236, 237, 238, 239, 240, 242, 249, 250, 251, 252, 253, 255, 256, 261, 262, 263, 265, 268, 269, 270, 276, 277, 292, 298, 316, 356, 381, 382, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412, 413, 414, 417, 426, 427, 428, 429, 432, 439, 441, 442, 446, 448, 452, 453, 456, 458, 460, 462, 464, 468, 469, 475, 478, 479, 480, 482, 484, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 505, 515, 516, 517, 519, 528, 529, 531, 532, 537, 576, 577, 579, 581, 583], "moreov": [397, 481, 486, 515], "morpholog": [120, 394, 450, 471, 499], "morphologi": [50, 52, 120, 392, 394, 404, 420, 437, 439, 453, 461, 467, 468, 469, 472, 481, 486, 533], "mosaic": 387, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 118, 125, 380, 381, 382, 384, 386, 387, 388, 389, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 411, 413, 414, 432, 439, 440, 442, 443, 446, 447, 461, 462, 470, 473, 475, 481, 483, 484, 485, 486, 487, 488, 494, 495, 499, 505, 507, 517, 518, 519, 524, 526, 532, 576, 578, 579, 582], "mostli": [56, 69, 308, 381, 382, 387, 388, 389, 390, 395, 397, 400, 401, 402, 405, 406, 408, 411, 432, 440, 481, 486, 497, 505, 581, 583], "motion": [45, 312], "motiv": [179, 386, 388, 389, 395, 398, 400, 410, 490, 519], "move": [287, 386, 387, 388, 389, 392, 395, 400, 401, 402, 405, 410, 416, 422, 423, 425, 426, 427, 428, 432, 433, 437, 438, 440, 441, 442, 443, 459], "move_axi": 446, "movement": 407, "mpatch": 470, "mpg": 67, "mpi": 67, "mpl": 381, "mpl_check_plot": 381, "mpl_kwarg": [456, 466, 470], "mpl_normal": [371, 372], "mpl_plot_check": 381, "mpl_style": 440, "msg": [451, 459, 461, 464, 466, 472, 475, 494], "msh": [462, 481, 486], "msh15": 497, "mst": 494, "mtkfmhlf": 486, "mu": [26, 233, 289, 291, 292, 374, 409, 452, 480, 492, 523, 524, 581], "mu_": [292, 298, 580, 581, 582], "mu_background": 579, "mu_bkg": [105, 110, 289, 302, 305, 417, 579, 581], "mu_off": 581, "mu_on": [292, 298, 581], "mu_sig": [291, 302, 305, 462, 580, 581], "mu_x": 581, "much": [194, 381, 387, 392, 395, 397, 400, 401, 425, 432, 459, 464, 470, 476, 492, 495, 505, 538], "mul": [26, 452, 480, 490, 545, 551, 554, 556, 559, 564], "mulitpli": [233, 243, 257, 279], "multi": [87, 91, 192, 204, 390, 395, 409, 426, 429, 433, 440, 450, 454, 460, 471, 482, 484, 485, 490, 491, 495, 499, 517, 519, 531, 577, 578], "multicompon": 448, "multidimension": [387, 397, 409, 447, 483, 499, 524, 577], "multinorm": 399, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 101, 102, 105, 108, 109, 110, 113, 115, 117, 133, 141, 167, 193, 194, 196, 202, 205, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 381, 382, 387, 390, 393, 394, 395, 397, 399, 402, 403, 405, 409, 413, 422, 429, 430, 432, 440, 446, 447, 448, 458, 464, 474, 481, 482, 483, 486, 487, 488, 490, 495, 517, 531, 555, 564, 576, 577, 578, 579, 584], "multipli": [19, 20, 26, 125, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 234, 235, 237, 239, 241, 242, 245, 248, 249, 250, 251, 253, 254, 255, 260, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 285, 290, 300, 303, 308, 452, 460, 462, 476, 480, 490, 545, 581], "multiprocess": [13, 93, 126, 127, 130, 133, 169, 323, 328, 329, 426, 446, 447], "multithread": 13, "multivari": 399, "multivariategaussianprior": 409, "multiwavelength": 226, "muon": 491, "muoneff": 491, "mur": [26, 480], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 88, 91, 101, 102, 105, 106, 110, 111, 116, 125, 130, 133, 134, 141, 142, 143, 161, 169, 173, 175, 180, 187, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 296, 297, 308, 326, 376, 381, 386, 392, 393, 396, 405, 406, 407, 408, 451, 456, 461, 474, 482, 483, 486, 488, 489, 490, 494, 495, 504, 505, 519, 531], "mutablemap": 200, "mutablesequ": [92, 100, 248], "mutipl": 413, "mutltipl": 384, "mxd8iqnr": 486, "my": [381, 403, 404, 412, 468, 469, 482, 490], "my_custom_model": 490, "my_flux_map": 405, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 403, "mybind": [411, 440], "myconfig": [11, 579], "mycustomgaussianmodel": [404, 490], "mycustomprior": 492, "mycustomspectralmodel": [259, 490], "n": [19, 20, 51, 82, 87, 91, 123, 125, 191, 192, 193, 194, 196, 198, 199, 202, 204, 205, 206, 214, 216, 280, 287, 381, 384, 395, 398, 412, 414, 438, 472, 474, 478, 480, 481, 483, 484, 487, 489, 492, 494, 495, 496, 497, 502, 524, 531, 532, 534, 537, 538, 578, 580, 582], "n_": [102, 109, 292, 298, 515, 580, 581, 582], "n_0": [235, 552], "n_bad": 495, "n_bin": 482, "n_bkg": [289, 291, 581], "n_dof": [123, 125, 517], "n_event": [193, 194, 196, 202, 205, 206, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 394], "n_event_bunch": [103, 108], "n_events_bkg": 394, "n_fit_bin": [464, 475, 482, 489], "n_free_paramet": 287, "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 512, 513], "n_job": [16, 93, 126, 127, 130, 133, 169, 328, 446, 457, 460, 461, 462, 464, 470, 474, 486, 503], "n_jobs_default": [93, 126, 127, 130, 133, 169], "n_model": [72, 76], "n_ob": [459, 468, 475], "n_observ": 579, "n_off": [105, 110, 291, 301, 302, 305, 462, 580, 581], "n_off_posit": 458, "n_off_region": [181, 458], "n_on": [289, 291, 292, 298, 301, 302, 305, 417, 462, 579, 580, 581], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 218, 219, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 245, 249, 251, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 273, 275, 277, 278, 409, 573], "n_scale": 118, "n_sig": [289, 291, 476, 581], "n_sig_matching_signific": [289, 291], "n_sigma": [71, 74, 75, 78, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 287, 289, 291, 451, 460, 470, 474, 481, 482, 483, 503, 505, 517], "n_sigma_sensit": [122, 123, 124, 125], "n_sigma_ul": [71, 74, 75, 78, 122, 123, 124, 125, 126, 127, 130, 131, 133, 460, 470, 473, 474, 481, 482, 483, 503, 505, 517], "n_sourc": [45, 509], "n_spatial_ax": 197, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": [474, 478], "nachiketa": [438, 439], "naima": [249, 380, 398, 399, 400, 401, 404, 423, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 519, 533, 564, 565], "naimamodel": [423, 426, 428], "naimaspectralmodel": [259, 404, 432, 490, 519, 555], "nakashima": 424, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 115, 116, 117, 123, 124, 125, 126, 127, 130, 131, 133, 137, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 173, 174, 183, 184, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 306, 307, 329, 360, 361, 376, 382, 384, 387, 390, 391, 393, 394, 395, 396, 399, 400, 403, 404, 405, 407, 408, 409, 410, 413, 415, 422, 423, 424, 425, 426, 427, 428, 429, 432, 441, 443, 444, 446, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 507, 517, 519, 523, 526, 528, 529, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 581], "name1": 484, "name2": 484, "name_err": [126, 127, 130, 131], "name_scan": [126, 127, 130, 131], "name_substr": [224, 248, 489], "name_ul": [126, 127, 130, 131], "namedtupl": 381, "nameerror": 381, "namespac": [6, 16, 84, 90, 104, 124, 381, 400, 402, 425, 428, 438, 490, 508, 583], "namibia": 497, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 102, 123, 125, 136, 173, 191, 192, 193, 194, 196, 202, 205, 206, 214, 216, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 381, 404, 409, 448, 452, 453, 456, 457, 458, 459, 461, 462, 464, 465, 470, 472, 473, 474, 475, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 503, 504, 505, 519, 555, 564], "nan_to_num": [100, 102, 105, 109, 110, 151, 152, 158, 163, 166, 194, 202, 206, 274], "nanograv": 519, "nansum": [193, 194, 196, 205, 206], "nasa": [58, 60, 61, 62, 64, 65, 150, 198, 401, 558], "nativ": [87, 91, 199, 393, 398, 432, 487], "natur": [87, 91, 381, 387, 404, 407, 490, 553], "nauroi": [305, 578], "naurois2012": 578, "navarro": 507, "navi": 452, "navig": [440, 442], "naxi": 487, "naxis1": 487, "naxis2": 487, "naxis3": 487, "naxis4": 487, "nbin": [16, 111, 116, 127, 153, 155, 161, 163, 195, 198, 203, 206, 340, 341, 397, 451, 456, 457, 458, 461, 462, 464, 465, 466, 468, 469, 470, 473, 474, 476, 478, 482, 485, 486, 487, 490, 495, 496, 497, 503, 523, 526, 528, 529, 532], "nbin_per_decad": 198, "nbstripout": 389, "nchunk": 290, "ncol": [147, 148, 193, 194, 196, 202, 205, 206, 374, 378, 453, 456, 460, 462, 464, 466, 476, 482, 484, 487, 488, 528, 545], "ncp": 479, "nd": [193, 194, 196, 202, 205, 206, 272, 273, 402, 487, 532], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 91, 92, 101, 118, 147, 148, 149, 150, 151, 154, 155, 157, 160, 161, 162, 163, 164, 166, 179, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 214, 215, 216, 217, 224, 250, 251, 277, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 303, 304, 305, 308, 319, 320, 321, 330, 335, 337, 370, 374, 375, 381, 482, 487, 505, 531, 532], "nddata": [423, 426], "nddataarrai": [424, 438, 439], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 283], "ndim": [102, 109, 111, 116, 148, 150, 153, 192, 199, 204, 458, 461, 466, 470, 482, 483, 485, 486, 487, 494, 495, 505, 517, 532], "ndimag": [206, 395], "ndmap": 483, "ndmin": 308, "ne": 393, "nearest": [26, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 193, 194, 196, 198, 202, 205, 206, 320, 434, 441, 443, 487, 517, 519, 531], "nearli": [381, 432, 453], "nebula": [50, 281, 287, 426, 456, 457, 458, 462, 465, 466, 467, 473, 484, 488, 490, 492, 495, 496, 497, 503, 504, 505, 510, 532, 578], "necess": [405, 492], "necessari": [16, 84, 90, 101, 104, 124, 384, 391, 396, 407, 410, 434, 453, 456, 458, 459, 462, 468, 469, 472, 474, 475, 483, 486, 487, 489, 490, 504, 515, 516, 519], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 396, 461], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 101, 102, 104, 105, 109, 110, 122, 124, 125, 151, 152, 163, 165, 166, 201, 280, 281, 308, 380, 381, 382, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 408, 411, 412, 417, 421, 422, 423, 440, 442, 447, 452, 453, 457, 459, 460, 461, 462, 466, 468, 469, 474, 475, 478, 479, 484, 485, 487, 488, 489, 490, 491, 494, 496, 503, 505, 515, 528, 530, 531, 579, 583], "need_upd": 432, "neg": [19, 20, 26, 87, 91, 123, 125, 126, 127, 130, 131, 133, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 276, 277, 289, 291, 382, 429, 447, 448, 492, 517, 581, 582], "neglect": [128, 179, 451, 486, 517, 582], "neighbor": [154, 162, 164, 434, 441], "neighbour": [320, 540], "neither": [96, 179, 398, 406], "neldermead": 211, "nep": [386, 406], "neraest": 194, "nest": [15, 192, 193, 194, 249, 287, 308, 348, 446, 495, 530, 581], "nested_model": 249, "net": [26, 87, 91, 456, 519], "neutrino": [52, 381], "neutron": 36, "never": [378, 380, 381, 384, 387, 391, 395, 403, 496], "nevertheless": [413, 415], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 101, 102, 104, 105, 109, 110, 123, 124, 125, 126, 130, 133, 136, 145, 147, 148, 149, 150, 153, 155, 157, 160, 165, 176, 177, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 224, 248, 264, 274, 299, 308, 332, 359, 366, 384, 386, 387, 388, 389, 390, 391, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 433, 436, 464, 478, 479, 481, 482, 487, 489, 490, 516, 517, 519, 564, 578], "new_attribut": 381, "new_axi": 145, "new_dataset_nam": [224, 248], "new_datasets_nam": [19, 20, 26, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279], "new_ev": 519, "new_flux_map": 405, "new_funct": 381, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 564, "new_nam": [87, 91, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206], "new_ob": [88, 519], "new_observ": 92, "newaxi": 531, "newer": [398, 411, 422, 441], "newli": [426, 427, 428], "next": [87, 91, 102, 381, 382, 386, 397, 401, 402, 406, 409, 410, 438, 439, 451, 464, 467, 468, 470, 472, 481, 482, 483, 486, 487, 490, 491, 492, 495], "nfcn": 484, "nfev": [101, 211, 212, 213, 453, 454, 456, 457, 458, 464, 465, 466, 476, 478, 483, 484, 495, 503, 504], "nfw": [25, 27, 507], "nfwprofil": 480, "ni": 381, "nice": [381, 386, 392, 398, 400, 408, 424, 432, 460, 464, 481, 579], "nicer": [381, 417, 505], "nieto": [429, 432, 434, 435, 443, 445, 446, 447, 448], "nieva": [443, 448], "night": [396, 474], "nightli": [413, 473], "nightwise_lc": 473, "nigro": [429, 432, 434, 440, 441, 443, 446], "niter": [123, 125, 133, 460], "nmcid": 435, "nn": 496, "noah": [409, 447], "node": [19, 20, 26, 163, 166, 195, 198, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 250, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 423, 484, 485, 487, 494, 495, 539, 556], "node_typ": [155, 195, 198, 203, 468, 469, 485, 495], "noeth": [429, 430], "nois": [290, 296, 399, 578], "noisi": 494, "non": [16, 84, 87, 90, 91, 100, 102, 104, 105, 109, 110, 115, 117, 123, 124, 125, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 175, 179, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 274, 308, 371, 372, 374, 376, 387, 392, 395, 399, 401, 402, 408, 422, 426, 427, 428, 432, 440, 443, 444, 446, 447, 448, 453, 478, 495, 499, 515, 519, 530, 531, 555, 578], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 282, 287, 289, 290, 291, 305, 306, 308, 311, 316, 320, 328, 329, 330, 332, 335, 336, 337, 338, 347, 350, 356, 364, 368, 369, 370, 374, 375, 376, 377, 378, 381, 393, 395, 398, 405, 408, 409, 434, 445, 446, 448, 452, 453, 454, 456, 457, 459, 460, 464, 465, 466, 468, 469, 470, 472, 474, 475, 476, 478, 480, 481, 482, 483, 486, 487, 489, 490, 492, 495, 503, 507, 515, 531, 536, 537, 538, 579], "nonposit": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "nonposx": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 432], "nonstopmod": 382, "nonzero": 39, "nooverlaperror": 445, "noqa": [19, 20, 150, 186, 197, 198, 204, 226, 378], "nor": [96, 179, 391, 402, 406, 410], "norm": [19, 20, 26, 122, 123, 125, 126, 127, 130, 133, 135, 142, 144, 170, 218, 219, 222, 223, 226, 228, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 245, 249, 250, 251, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 273, 275, 277, 278, 374, 392, 403, 405, 409, 426, 427, 429, 432, 447, 448, 450, 456, 460, 461, 462, 464, 465, 467, 468, 469, 470, 472, 474, 475, 476, 480, 481, 482, 483, 484, 495, 503, 504, 505, 507, 517, 519, 526, 533, 538, 544, 545, 552, 564, 565, 573, 581], "norm_0": [539, 556], "norm_1": [539, 556], "norm_2": [539, 556], "norm_3": [539, 556], "norm_4": 556, "norm_5": 556, "norm_err": [122, 123, 125, 127, 133, 142, 405, 460, 470, 474, 482, 483, 517], "norm_errn": [123, 125, 474, 481, 483, 505, 517], "norm_errp": [123, 125, 474, 481, 483, 505, 517], "norm_only_chang": 444, "norm_prior": 409, "norm_scan": [123, 405, 456, 457, 483, 517], "norm_sensit": [123, 125], "norm_ul": [123, 125, 405, 470, 474, 481, 482, 483, 505, 517], "norma": [33, 38], "normal": [42, 101, 102, 105, 109, 110, 126, 127, 128, 130, 140, 147, 148, 149, 150, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 170, 193, 194, 196, 202, 203, 205, 206, 232, 250, 251, 254, 274, 276, 280, 308, 371, 372, 381, 382, 386, 387, 391, 392, 395, 399, 405, 421, 425, 434, 448, 452, 462, 468, 473, 474, 476, 486, 487, 488, 489, 490, 495, 504, 505, 531, 536, 537, 538, 541, 542, 543, 564, 580, 581], "normalis": [67, 80, 122, 123, 125, 130, 147, 148, 149, 150, 153, 155, 157, 160, 161, 165, 170, 190, 193, 194, 196, 202, 205, 206, 250, 251, 264, 379, 457, 460, 461, 462, 475, 483, 488, 489, 490, 495, 503], "normed_templ": 490, "normspectralmodel": [224, 248, 404, 429, 445, 447, 490, 526], "north": [225, 234, 237, 536], "notat": [429, 521, 523, 529, 582], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 101, 102, 103, 104, 105, 108, 109, 110, 118, 122, 124, 125, 130, 133, 150, 155, 163, 165, 175, 186, 204, 208, 211, 214, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 267, 268, 269, 270, 273, 275, 276, 277, 296, 297, 308, 329, 356, 372, 378, 380, 383, 384, 386, 389, 394, 395, 398, 401, 405, 406, 407, 409, 410, 411, 414, 420, 422, 442, 444, 446, 448, 451, 452, 453, 457, 458, 460, 461, 464, 467, 469, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 515, 517, 519, 526, 531, 532, 541, 542, 553, 581, 582, 583], "notebook": [87, 91, 345, 384, 385, 390, 391, 395, 396, 397, 398, 399, 401, 410, 411, 413, 414, 415, 418, 421, 422, 423, 424, 426, 427, 428, 430, 432, 434, 438, 439, 440, 441, 442, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 518, 519, 520, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579], "noth": [332, 398, 492], "notic": [387, 484, 499], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "nov": [388, 393, 398, 399, 401, 405, 419, 443], "novemb": [390, 419, 429, 430, 431, 432], "now": [16, 82, 84, 88, 90, 99, 104, 123, 124, 125, 203, 249, 381, 384, 386, 387, 388, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 405, 407, 408, 409, 416, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 456, 457, 458, 459, 461, 462, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 482, 484, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 516, 517, 528, 566, 570, 571, 572, 579, 581, 582, 583], "np": [83, 87, 91, 102, 105, 109, 110, 111, 116, 118, 122, 125, 133, 152, 193, 194, 196, 202, 205, 206, 211, 280, 381, 382, 392, 393, 396, 404, 405, 409, 417, 443, 448, 451, 459, 460, 462, 468, 470, 472, 474, 475, 476, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 511, 512, 513, 517, 519, 526, 531, 532, 536, 537, 539, 564, 572, 579], "npanel": 368, "npix": [192, 201, 204, 205, 206, 456, 466, 485, 495, 528, 532, 535, 539], "npix_max": 192, "npoint": [290, 484], "npred": [102, 105, 109, 110, 122, 123, 125, 126, 127, 130, 131, 133, 142, 274, 293, 392, 393, 394, 403, 405, 420, 422, 429, 432, 438, 440, 448, 460, 468, 470, 474, 481, 482, 483, 492, 495, 515, 517, 581], "npred_background": [102, 105, 109, 110, 123, 125, 429, 458, 459, 470, 482, 517, 581], "npred_background_min": 146, "npred_excess": [122, 123, 125, 127, 133, 135, 142, 144, 460, 462, 470, 474, 476, 483, 517], "npred_excess_err": [123, 125], "npred_excess_errn": [123, 125], "npred_excess_errp": [123, 125], "npred_excess_ref": [123, 125], "npred_excess_ul": [123, 125], "npred_min": 146, "npred_off": [105, 110, 581], "npred_sig": [102, 105, 109, 110, 393], "npred_sign": [102, 105, 109, 110, 377, 432, 446, 482, 581], "npred_signal_min": 146, "npred_sourc": 482, "nqiqrzur": 478, "nrow": [453, 456, 484, 545], "nside": [192, 193, 194, 443, 495, 530], "nside2resol": 194, "nside_til": [192, 194], "nsou": 460, "nstep": 396, "nu": [19, 26], "nu_e": [26, 480], "nu_mu": [26, 480], "nu_tau": [26, 480], "nuisanc": [456, 484, 578, 582], "null": [123, 125, 126, 127, 130, 131, 287, 289, 291, 448, 457, 461, 462, 464, 467, 483, 490, 503, 517, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 581], "null_valu": [131, 287, 470], "nullabl": [87, 91], "num": 83, "numba": 398, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 102, 103, 105, 108, 109, 110, 112, 113, 118, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 169, 170, 173, 176, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 267, 268, 269, 270, 273, 275, 276, 277, 278, 283, 287, 289, 290, 291, 304, 308, 326, 328, 329, 330, 331, 332, 335, 336, 337, 338, 340, 341, 368, 374, 385, 386, 387, 390, 392, 393, 394, 395, 396, 400, 402, 405, 407, 408, 410, 417, 422, 432, 434, 435, 436, 441, 442, 443, 446, 447, 448, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 466, 467, 468, 469, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 490, 491, 494, 495, 496, 497, 503, 504, 505, 509, 515, 517, 519, 526, 528, 531, 532, 578, 579, 580, 581, 582], "number_of_column": [87, 91], "number_param": 209, "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 87, 91, 125, 198, 214, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 267, 268, 269, 270, 273, 275, 276, 277, 278, 308, 380, 381, 394, 399, 414, 432, 451, 459, 461, 464, 466, 472, 475, 487, 494], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 101, 111, 116, 118, 125, 147, 148, 149, 150, 152, 153, 154, 155, 157, 160, 161, 162, 164, 165, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 208, 209, 211, 214, 215, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 268, 269, 270, 275, 276, 289, 291, 308, 332, 337, 375, 380, 381, 382, 384, 388, 392, 394, 398, 399, 400, 407, 409, 417, 418, 425, 426, 429, 437, 438, 439, 441, 443, 444, 445, 447, 448, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 503, 504, 505, 511, 512, 513, 517, 519, 531, 532, 536, 537, 539, 564, 572], "numpoint": [211, 484], "numpy121": 384, "nupeak_ob": 505, "nutshel": 583, "n\u00f6the": [432, 434, 435], "o": [67, 82, 87, 91, 101, 200, 381, 390, 395, 398, 402, 405, 412, 413, 415, 424, 432, 435, 438, 439, 440, 446, 451, 453, 456, 460, 466, 473, 474, 475, 478, 479, 487, 491, 492, 494, 519, 578, 579], "oavcgfup": 478, "ob": [40, 82, 83, 88, 89, 91, 92, 96, 163, 173, 306, 307, 393, 394, 397, 398, 403, 417, 435, 436, 445, 451, 453, 456, 459, 460, 466, 468, 472, 474, 475, 476, 478, 486, 491, 494, 495, 496, 497, 501, 504, 516, 519, 524, 526, 528, 529], "obei": 531, "obj": [16, 84, 90, 104, 124, 458, 478], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 101, 102, 103, 104, 105, 109, 110, 123, 124, 125, 128, 129, 130, 136, 137, 138, 139, 142, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 177, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 289, 291, 308, 312, 316, 317, 320, 328, 330, 332, 338, 341, 355, 356, 357, 358, 363, 368, 374, 376, 377, 378, 387, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 405, 407, 408, 413, 417, 423, 424, 426, 427, 428, 429, 432, 434, 439, 440, 441, 443, 446, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 465, 467, 470, 472, 473, 474, 475, 478, 479, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 509, 514, 515, 516, 517, 525, 528, 530, 531, 532, 564, 576, 578, 579, 583], "obs2": 519, "obs_": 456, "obs_clust": [92, 491], "obs_col": 466, "obs_con": [16, 457, 461, 462, 464, 503], "obs_copi": 88, "obs_fil": [16, 457, 461, 462, 464, 503], "obs_filenam": 496, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 146, 211, 306, 307, 391, 393, 403, 408, 417, 453, 456, 457, 458, 459, 461, 462, 464, 465, 466, 468, 469, 473, 474, 475, 478, 484, 486, 491, 494, 496, 497, 501, 503, 504, 528], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [90, 104, 408], "obs_list": [440, 442], "obs_list_vela": 476, "obs_mod": 95, "obs_model": 452, "obs_muoneff": 491, "obs_po": [41, 311], "obs_tabl": [82, 91, 96, 306, 307, 434, 466, 468, 474, 478, 486, 491, 494, 496, 497, 501, 504, 528], "obs_table_filenam": 82, "obs_tim": [16, 457, 461, 462, 464, 503], "obs_time_src": 486, "obs_zenith": 491, "obscor": 447, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 163, 168, 169, 170, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 188, 189, 190, 223, 226, 231, 236, 238, 239, 240, 256, 263, 275, 278, 292, 298, 305, 307, 316, 337, 385, 387, 393, 394, 395, 396, 397, 401, 403, 405, 408, 413, 422, 426, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 450, 451, 453, 458, 459, 461, 462, 464, 465, 472, 475, 476, 478, 479, 484, 492, 493, 494, 496, 497, 499, 501, 507, 515, 516, 519, 522, 524, 526, 528, 529, 555, 578, 579, 580, 581], "observation_clust": [450, 491, 493], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 441, "observationcta": 391, "observationeventsampl": 447, "observationfilt": [88, 391, 396, 421, 442], "observationlist": [391, 442], "observationmetadata": 408, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 447, "observationseventssampl": 448, "observationssummari": 426, "observationstat": [421, 426], "observationt": [82, 394, 395, 443, 491, 496, 504], "observationtablecheck": 441, "observationtablesummari": 438, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 394, 408, 410, 413, 433, 494, 496, 497, 514, 519], "observatory_earth_loc": [83, 88, 448], "observatory_loc": [408, 434, 451, 459, 468, 469, 472, 475], "obsinfometadata": [90, 104], "obstim": [85, 94, 186, 583], "obtain": [85, 102, 105, 108, 110, 123, 125, 137, 295, 391, 396, 398, 399, 405, 442, 448, 456, 457, 458, 460, 462, 468, 469, 474, 478, 479, 484, 487, 488, 492, 503, 505, 515, 519, 523, 524, 580, 581], "obviou": [393, 400, 401, 402, 408], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 507], "occur": [193, 194, 196, 205, 206, 338, 381, 401, 402, 406, 495], "occurr": [92, 100, 197, 215, 217, 224, 248], "oct": [389, 391, 392, 396, 398, 401, 407], "octob": 390, "odd": [204, 206], "odd_npix": [204, 206], "odot": [28, 35, 39, 40, 52], "off": [102, 103, 105, 107, 108, 109, 110, 122, 123, 125, 168, 174, 175, 178, 181, 190, 291, 305, 378, 379, 384, 387, 393, 395, 396, 397, 426, 432, 434, 436, 446, 448, 451, 452, 453, 457, 458, 462, 466, 473, 474, 476, 478, 482, 484, 486, 492, 515, 528, 529, 578, 580, 581, 582], "off_2": [105, 110], "off_ev": 476, "off_patch": 476, "off_phas": [174, 476], "off_phase_rang": 476, "offdatabackgroundmak": 437, "offer": [123, 384, 392, 407, 408, 413, 414, 441, 458, 483, 484, 486, 490, 519], "offici": [407, 520, 579], "offlin": [87, 91], "offset": [83, 96, 112, 113, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 169, 173, 179, 180, 185, 188, 193, 194, 196, 198, 202, 205, 206, 381, 387, 395, 417, 426, 436, 438, 440, 445, 446, 447, 448, 451, 458, 459, 461, 464, 465, 466, 472, 476, 485, 486, 491, 494, 497, 504, 516, 524, 526, 529], "offset2": 83, "offset_axi": [153, 154, 155], "offset_band": 83, "offset_from_median": 83, "offset_index": 160, "offset_max": [16, 83, 169, 179, 185, 188, 457, 461, 462, 464, 466, 472, 476, 486, 503, 504, 526, 529], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 137, 281, 371, 372, 381, 386, 395, 396, 397, 399, 439, 451, 453, 457, 461, 462, 465, 466, 472, 478, 482, 484, 486, 488, 503, 504, 515, 519, 578], "ogip": [95, 106, 107, 110, 150, 195, 197, 198, 201, 202, 203, 393, 396, 439, 452, 456, 465, 515, 523, 532], "ogip_column": 202, "ogipdatasetread": 110, "ogipdatasetwrit": [110, 445, 447], "ok": [381, 395, 484], "old": [197, 366, 381, 386, 389, 393, 397, 398, 423, 424, 439, 440, 441, 479], "old_attribut": 381, "older": [388, 398, 414, 439, 481], "oldest": 401, "olga": [437, 438], "olivera": [429, 432, 434, 435, 443, 445, 446, 447, 448], "omega": [19, 20, 23, 263, 280, 494, 536, 572], "omit": [133, 382, 464, 494, 579], "omp": 401, "on_circl": 528, "on_ellipse_annulu": 528, "on_ev": 476, "on_patch": 476, "on_phas": [174, 476], "on_phase_rang": 476, "on_posit": 190, "on_radii": 451, "on_radiu": [466, 476], "on_rectangl": 528, "on_region": [16, 102, 105, 176, 451, 453, 456, 457, 458, 459, 461, 462, 464, 466, 468, 469, 473, 474, 476, 478, 482, 503, 528], "on_region_radiu": [451, 456, 459, 468, 469, 474, 478], "onc": [87, 91, 102, 204, 381, 384, 386, 391, 392, 395, 396, 397, 401, 402, 403, 405, 406, 410, 411, 412, 413, 415, 458, 474, 476, 486, 489, 496, 499, 516, 519, 579], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 84, 87, 89, 90, 91, 92, 93, 95, 99, 102, 104, 105, 108, 109, 110, 113, 118, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 173, 175, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 283, 287, 289, 290, 291, 316, 321, 337, 352, 368, 374, 375, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 440, 443, 444, 446, 448, 451, 453, 456, 457, 458, 461, 464, 468, 473, 475, 476, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 503, 504, 505, 514, 515, 516, 517, 519, 524, 526, 528, 531, 532, 538, 576, 577, 579, 580, 581, 582, 583], "ones": [87, 91, 118, 122, 126, 130, 133, 150, 197, 385, 389, 393, 395, 398, 401, 409, 414, 417, 475, 479, 485, 487, 507, 526, 578, 579], "ones_lik": [476, 526], "ongo": [384, 387, 388, 411], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 108, 109, 110, 122, 124, 125, 126, 130, 133, 134, 136, 143, 144, 151, 152, 156, 158, 163, 166, 169, 175, 180, 191, 192, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 214, 215, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 268, 269, 270, 274, 275, 276, 289, 291, 308, 328, 356, 378, 381, 382, 384, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 414, 422, 424, 428, 432, 434, 435, 440, 444, 446, 447, 448, 453, 454, 456, 457, 458, 461, 462, 464, 465, 467, 468, 469, 470, 473, 474, 475, 476, 478, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 504, 507, 515, 517, 523, 526, 529, 532, 574, 578, 579, 580, 581], "onlin": [87, 91, 382, 386, 389, 401, 417], "onlinelibrari": [135, 144], "onoff": [435, 515], "onserv": 93, "ontim": [186, 391, 468, 482], "onto": [105, 110, 193, 194, 196, 202, 204, 205, 206, 368, 387, 504, 515, 519, 531, 577], "oo": 407, "op": 397, "opac": 226, "open": [66, 87, 91, 381, 382, 384, 386, 392, 395, 398, 400, 401, 405, 406, 407, 410, 412, 413, 415, 417, 418, 439, 457, 465, 487, 494, 496, 497, 503, 514, 578, 579], "openastronomi": 440, "oper": [87, 91, 192, 204, 219, 381, 387, 392, 395, 427, 429, 432, 441, 442, 446, 452, 482, 489, 490, 531, 532, 545, 547, 551, 554, 556, 559, 564], "opinion": [386, 579], "oppos": [479, 555, 579], "opposit": [193, 194], "opt": [89, 481, 545, 555], "opt_method": 484, "optic": [226, 395, 452, 545], "optim": [19, 20, 26, 101, 131, 133, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 374, 380, 381, 390, 393, 394, 403, 405, 453, 454, 456, 457, 458, 459, 460, 464, 465, 466, 476, 478, 479, 483, 484, 492, 495, 503, 504], "optimis": [19, 20, 211, 212, 213, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 395, 397, 399, 441, 448, 517, 576], "optimize_opt": [211, 464, 472, 483, 484, 504], "optimize_result": [211, 212, 446], "optimizeresult": [101, 211, 212, 453, 454, 456, 457, 458, 464, 465, 466, 476, 478, 483, 484, 495, 503, 504], "optin": 407, "optinon": [109, 110], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 285, 287, 288, 289, 290, 291, 295, 296, 297, 299, 304, 305, 306, 308, 319, 329, 332, 335, 336, 337, 338, 340, 341, 344, 349, 350, 352, 363, 364, 368, 369, 370, 375, 376, 377, 378, 381, 384, 386, 387, 389, 390, 392, 393, 395, 397, 399, 401, 404, 408, 411, 412, 413, 414, 415, 421, 422, 423, 426, 428, 429, 432, 434, 438, 440, 441, 442, 443, 445, 446, 447, 448, 460, 464, 472, 473, 475, 481, 482, 486, 487, 488, 490, 491, 494, 495, 503, 504, 515, 517, 519, 531, 532, 574, 578, 579], "option1": 382, "option2": 382, "option3": 382, "option_context": [87, 91], "optionali": 539, "optout": 407, "optpars": 386, "oral": 407, "orang": [382, 456, 464, 470, 473, 476, 480, 483, 492, 528], "orchestr": [387, 391, 393, 397, 457, 503, 504], "orcid": 407, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 105, 125, 136, 147, 148, 150, 151, 152, 153, 154, 155, 158, 160, 163, 165, 166, 169, 173, 180, 183, 184, 189, 191, 192, 193, 194, 196, 197, 201, 202, 203, 204, 205, 206, 274, 287, 308, 378, 381, 382, 387, 392, 393, 395, 396, 397, 398, 405, 406, 407, 409, 422, 423, 424, 425, 426, 427, 428, 429, 432, 448, 456, 457, 458, 460, 464, 465, 468, 476, 481, 484, 485, 486, 487, 490, 496, 503, 504, 505, 530, 531, 532, 579, 582], "ordereddict": [387, 398, 425], "ordinari": 505, "org": [11, 34, 63, 64, 65, 83, 87, 88, 91, 179, 211, 254, 255, 269, 270, 296, 308, 384, 389, 398, 401, 406, 407, 410, 412, 413, 415, 419, 438, 440, 451, 459, 461, 464, 465, 466, 472, 475, 480, 481, 484, 494, 562, 563, 579], "organ": [385, 401, 406, 407, 432, 496, 497, 516, 531], "organis": [388, 397, 400, 407, 440], "orient": [148, 156, 157, 381, 392], "origin": [16, 41, 84, 87, 90, 91, 102, 104, 109, 123, 124, 125, 194, 206, 272, 274, 276, 391, 395, 407, 408, 410, 438, 457, 461, 462, 464, 474, 479, 487, 490, 495, 503, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 582, 583], "orthogon": 341, "oscar": [440, 441], "osx": 428, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 102, 104, 105, 109, 110, 123, 124, 126, 130, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 175, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 215, 217, 274, 288, 308, 321, 351, 370, 375, 380, 384, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 408, 412, 440, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 515, 516, 517, 519, 524, 526, 528, 532, 547, 576, 577, 579, 583], "other_id": 453, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 102, 104, 105, 109, 110, 124, 161, 200, 204, 206, 208, 214, 215, 216, 217, 224, 248, 279, 308, 374, 394, 404, 407, 448, 489, 490, 495, 546], "oup": [137, 304], "our": [381, 384, 390, 395, 397, 398, 400, 403, 404, 405, 407, 422, 423, 439, 448, 451, 453, 456, 457, 458, 461, 462, 464, 465, 466, 469, 474, 475, 476, 478, 487, 488, 492, 496, 503, 504, 579], "ourself": 505, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 101, 125, 193, 194, 196, 202, 205, 206, 248, 261, 262, 380, 381, 382, 384, 386, 389, 391, 393, 395, 397, 399, 400, 401, 406, 410, 417, 418, 420, 426, 440, 454, 458, 461, 462, 478, 487, 488, 494, 495, 503, 505, 507, 508, 528, 541, 542, 576, 579, 583], "out_fold": 397, "outcom": [386, 395], "outdat": [398, 401], "outdir": [16, 82, 93, 457, 461, 462, 464, 503], "outer": [43, 44, 52, 53, 127, 168, 261, 542], "outer_height": [528, 532], "outer_width": [528, 532], "outfil": 381, "outflow": 203, "outlin": [102, 105, 109, 110, 220, 221, 225, 234, 237, 252, 261, 262, 276, 384, 386, 389, 390, 391, 392, 395, 401, 404], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 104, 124, 141, 142, 150, 155, 193, 194, 196, 202, 205, 206, 212, 224, 239, 248, 290, 337, 382, 389, 391, 394, 397, 398, 402, 405, 408, 421, 436, 442, 445, 446, 448, 464, 468, 469, 472, 475, 483, 486, 487, 503, 504, 517, 519, 579, 580], "output_map": [193, 194, 196, 202, 205, 206], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 102, 105, 109, 110, 115, 117, 150, 170, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 214, 216, 226, 277, 321, 369, 381, 395, 396, 397, 432, 462, 483, 484, 486, 487, 488, 519, 526, 538, 564], "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 101, 102, 105, 109, 110, 126, 133, 137, 150, 151, 161, 163, 166, 173, 180, 183, 184, 186, 187, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 224, 248, 280, 289, 291, 295, 319, 320, 333, 372, 381, 382, 386, 389, 390, 391, 394, 395, 396, 401, 404, 408, 412, 414, 432, 453, 456, 460, 462, 464, 467, 468, 475, 481, 482, 483, 486, 487, 490, 504, 505, 517, 519, 523, 580, 581], "overal": [389, 395, 448, 456], "overcom": 488, "overestim": [517, 581], "overflow": [203, 458, 475, 478, 567], "overkil": 475, "overlai": [457, 483], "overlaid": [102, 105, 109, 110, 456, 457], "overlap": [86, 91, 115, 117, 130, 181, 198, 203, 378, 396, 456], "overlap_ok": 86, "overlin": [102, 109, 515], "overload": 432, "overplot": [481, 514], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 348, 392, 456, 458, 466, 470], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 124, 201, 378], "oversampl": [103, 108, 161, 163, 166, 173, 180, 186, 192, 193, 194, 196, 201, 202, 205, 206, 221, 225, 234, 237, 238, 239, 250, 261, 262, 264, 266, 272, 276, 278, 283, 423, 486], "oversample_energy_factor": [103, 108, 469], "oversampling_factor": [194, 204, 220, 221, 225, 234, 237, 238, 239, 250, 252, 261, 262, 264, 266, 272, 276, 278], "overview": [6, 384, 411, 426, 427, 429, 432, 450, 476, 483, 487, 490, 499, 505, 506, 519, 520, 533, 580], "overwrit": [11, 15, 16, 19, 20, 26, 82, 88, 93, 100, 101, 102, 105, 107, 109, 110, 123, 125, 151, 152, 158, 163, 166, 191, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 212, 214, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 272, 273, 274, 275, 276, 328, 350, 405, 441, 443, 448, 456, 457, 464, 465, 468, 469, 470, 485, 487, 488, 489, 490, 494, 495, 501, 503, 504, 515, 532, 543, 579], "overwrite_templ": [212, 224, 248], "overwritten": [163, 166, 320], "owen": [420, 433], "own": [87, 91, 99, 123, 125, 200, 202, 384, 387, 397, 403, 407, 432, 451, 468, 490, 495, 504, 519, 531, 532], "p": [38, 51, 54, 87, 91, 109, 110, 129, 294, 305, 381, 432, 457, 467, 480, 484, 503, 519, 524, 525, 581], "p0_birth": 43, "p90": 48, "p_": [521, 523, 524, 525], "p_0": [51, 193, 196, 202, 205, 206, 511], "p_dot": [51, 54], "p_hhr": 490, "p_i": [193, 196, 202, 205, 206], "p_lat": [193, 196, 202, 205, 206], "p_lon": [193, 196, 202, 205, 206], "p_mean": 42, "p_n": [193, 196, 202, 205, 206], "p_stdv": 42, "p_valu": [289, 291, 484, 579, 581], "pace": [389, 390], "packag": [6, 11, 141, 308, 345, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 398, 399, 401, 406, 407, 408, 410, 412, 416, 417, 418, 419, 420, 422, 425, 426, 428, 429, 432, 435, 436, 437, 438, 439, 440, 441, 443, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 515, 518, 519, 520, 527, 532, 543, 551, 553, 567, 579, 583], "pacman": 437, "paczynski": 37, "paczynski1990": [28, 29, 30, 35, 37, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 102, 105, 109, 110, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 173, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 206, 369, 429, 432], "pad_width": [102, 109, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206], "pad_with": [193, 194, 196, 202, 205, 206], "page": [6, 87, 91, 211, 292, 298, 305, 382, 384, 386, 393, 395, 398, 401, 407, 410, 411, 413, 414, 418, 426, 427, 432, 435, 436, 439, 440, 441, 442, 448, 484, 487, 497, 499, 517, 519, 530, 532, 580, 583], "pain": [381, 384, 388], "pair": [16, 84, 90, 102, 104, 105, 109, 110, 123, 124, 125, 137, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 397, 452], "panda": [87, 91, 380, 398, 441, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "panel": [88, 101, 102, 105, 109, 110, 368, 435, 468, 484], "panel_fov": 368, "panni": 432, "papadopoulo": [432, 434], "paper": [57, 59, 63, 72, 74, 126, 179, 401, 407, 441, 474, 479, 481, 486, 496, 507], "papermil": 397, "par": [392, 404, 409, 452, 478, 484, 492, 494], "par_000_amplitud": 484, "par_001_alpha": 484, "par_002_beta": 484, "par_00x_": 392, "par_1": [211, 484], "par_2": [211, 484], "par_alpha": [211, 484], "par_beta": [211, 484], "par_box": 91, "par_nam": [224, 232, 248, 264, 274], "par_to_v": 494, "par_typ": [224, 232, 248, 264, 274], "parabol": [288, 321, 484], "parabola": [241, 242, 450, 465, 484, 533, 565], "paragraph": 386, "parallel": [6, 93, 126, 127, 130, 133, 169, 323, 324, 325, 326, 327, 328, 329, 384, 398, 411, 434, 446, 447, 448, 460, 482], "parallel_backend": [93, 126, 127, 130, 133, 169, 328, 470], "parallelbackendenum": 323, "parallelmixin": [93, 126, 133, 169], "param": [16, 84, 90, 104, 124, 226, 277, 374, 397, 427, 484], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 484, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 310, 312, 314, 315, 317, 319, 320, 321, 322, 328, 329, 330, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 390, 393, 394, 396, 397, 399, 400, 403, 405, 407, 418, 421, 422, 423, 424, 425, 426, 428, 429, 432, 434, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 456, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 472, 473, 475, 476, 478, 480, 481, 482, 483, 485, 486, 491, 492, 494, 495, 504, 505, 507, 515, 517, 518, 519, 526, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582], "parameter": 490, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_nam": 382, "parameter_name_scan": 211, "parameter_typ": 382, "parameterestim": [119, 428, 447], "parameteris": [521, 523], "parameters_list": [215, 217], "parameters_nam": [224, 248], "parameters_stat_sum": 409, "parameters_unique_nam": [19, 20, 26, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 484], "parametr": [16, 27, 84, 90, 101, 104, 124, 153, 154, 159, 162, 164, 241, 242, 261, 393, 397, 404, 422, 429, 432, 458, 460, 490, 494, 541, 542, 553], "parametricpsf": [154, 162, 432, 434], "parametris": [162, 404, 426, 523, 525, 536, 537, 538, 539, 546, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 573, 574], "parent": [16, 84, 90, 104, 118, 122, 124, 126, 130, 133, 204, 381, 391, 408, 474, 483, 517, 555], "parenthes": [392, 398, 444, 446], "parfiv": [398, 425], "parnam": 492, "pars": [16, 84, 85, 90, 104, 124, 192, 201, 382, 395, 448, 451, 459, 461, 464, 466, 472, 475, 488, 494, 579], "parse_arg": 579, "parse_fil": [16, 84, 90, 104, 124], "parse_obj": [16, 84, 90, 104, 124], "parse_raw": [16, 84, 90, 104, 124], "parseabl": 308, "parser": 579, "part": [101, 381, 384, 387, 390, 392, 394, 395, 396, 397, 399, 400, 401, 406, 407, 413, 415, 422, 426, 427, 428, 436, 441, 446, 447, 451, 453, 456, 464, 472, 481, 482, 487, 488, 504, 505, 519, 524, 528], "parti": 386, "partial": [91, 102, 105, 151, 152, 158, 163, 166, 169, 192, 204, 206, 274, 395, 399, 427, 441, 530], "partial_overlap": 91, "particip": [386, 390, 401], "particl": [19, 26, 249, 280, 428, 507, 555], "particle_distribut": [249, 555], "particular": [87, 91, 381, 387, 394, 396, 403, 405, 406, 408, 429, 432, 443, 444, 453, 456, 457, 458, 459, 461, 465, 468, 474, 475, 479, 484, 486, 489, 494, 496, 497, 503, 504, 516, 519, 526, 528, 532, 581], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [384, 390, 391, 395, 401, 402], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 101, 102, 104, 105, 108, 109, 110, 124, 125, 128, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 178, 186, 191, 192, 193, 194, 196, 198, 200, 201, 202, 204, 205, 206, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 288, 290, 308, 320, 328, 329, 330, 335, 336, 337, 338, 368, 369, 374, 376, 377, 381, 384, 391, 393, 394, 395, 396, 408, 428, 432, 434, 446, 447, 448, 453, 454, 456, 457, 464, 465, 469, 473, 474, 479, 481, 482, 484, 485, 486, 487, 488, 490, 491, 494, 503, 504, 505, 519, 530, 531, 532, 536, 537, 579, 583], "pass4": 496, "passkwarg": [458, 478], "past": [381, 386, 389, 397, 398, 401, 402, 404, 407, 409, 417, 438, 440, 441, 487, 579], "patch": [378, 381, 388, 407, 435, 444, 456, 458, 466, 470, 476], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 104, 106, 107, 110, 124, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 167, 193, 194, 196, 201, 202, 205, 206, 212, 224, 239, 248, 275, 316, 345, 346, 347, 350, 381, 384, 416, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 517, 573, 574, 579], "path_effect": [201, 224, 248], "path_to_notebook": 381, "path_to_script": 381, "patheffect": [201, 224, 248], "pathlib": [16, 82, 83, 86, 87, 91, 150, 202, 212, 224, 248, 346, 456, 457, 464, 465, 468, 469, 494, 503, 504], "pathpatch": 470, "pattern": [381, 387, 395], "paula": 447, "paulakx": 447, "paz": [433, 436, 437], "pbar": 519, "pc": [46, 47, 50, 52, 512, 513], "pcolormesh": [83, 125, 147, 148, 150, 153, 154, 155, 160, 162, 164, 165, 439, 445, 484, 485], "pd": [87, 91], "pdf": [150, 154, 179, 254, 255, 269, 270, 330, 374, 382, 465, 468, 480, 509, 511, 512, 513, 515, 516, 521, 522, 523, 525, 528, 532, 562, 563, 581, 584], "pdf_in_safe_rang": 150, "pdf_matrix": 150, "pdf_threshold": [150, 151, 155], "pdflatex": 382, "peak": [68, 128, 141, 142, 150, 179, 230, 236, 238, 242, 434, 440, 447, 460, 479, 481, 486, 542], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 381, "peek": [83, 88, 102, 105, 109, 110, 128, 129, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 381, 393, 417, 429, 435, 439, 443, 453, 458, 464, 468, 469, 476, 482, 485, 494, 496, 497, 516, 519, 521, 522, 523, 525], "pei": 448, "penal": 243, "penalti": 492, "peopl": [386, 388, 401, 407, 410, 411, 480, 507, 519, 579], "pep": 386, "pep8": 384, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 101, 102, 105, 109, 110, 112, 113, 122, 123, 125, 126, 127, 130, 131, 135, 141, 144, 145, 146, 163, 166, 198, 231, 239, 240, 283, 292, 298, 305, 381, 387, 393, 394, 397, 405, 407, 408, 420, 428, 432, 434, 447, 451, 459, 468, 472, 473, 475, 480, 486, 487, 491, 492, 496, 497, 515, 519, 522, 526, 578, 580], "per_decad": [198, 456, 458, 468, 469, 476, 482, 495, 523, 529], "percent": 132, "percentag": [150, 179, 486], "percentil": 83, "peresano": 448, "perfect": 150, "perfectli": [537, 579], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 104, 108, 124, 170, 178, 192, 204, 206, 221, 224, 225, 234, 237, 248, 250, 261, 262, 266, 272, 276, 289, 291, 344, 347, 374, 381, 382, 387, 390, 391, 392, 396, 397, 405, 408, 410, 411, 413, 422, 429, 432, 434, 437, 441, 444, 446, 447, 448, 451, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 467, 469, 472, 473, 474, 475, 478, 482, 484, 486, 487, 488, 489, 491, 496, 499, 503, 515, 519, 527, 528, 531, 537, 555, 577, 578, 579, 580], "perhap": 532, "period": [42, 51, 54, 198, 275, 388, 407, 440, 448, 491, 511], "period_dot": 51, "periodicmapaxi": 448, "periodogram": [290, 396, 441, 448], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 407], "perseu": [33, 38], "person": [381, 384, 386, 388, 389, 390, 394, 399, 402], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 440, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 505, "ph": 366, "pha": [106, 107, 110, 202, 393, 438, 441, 456, 465], "pha_": 482, "pha_meta": 106, "pha_ob": [106, 146, 211, 465, 483, 484], "pha_obs23523": [109, 110, 131, 287, 492, 517], "pha_obs23592": 517, "phacountsspectrum": 424, "phacountsspectrumlist": 423, "phase": [50, 52, 53, 89, 171, 174, 275, 386, 391, 392, 395, 396, 398, 400, 405, 417, 422, 441, 443, 446, 448, 450, 490, 508, 519, 533, 575], "phase_axi": 405, "phase_bkg_mak": 476, "phase_column_nam": [174, 476], "phase_curve_model": 573, "phase_filt": 89, "phase_max": 476, "phase_min": 476, "phase_model": 573, "phasebackgroundestim": 426, "phasebackgroundmak": [171, 426, 446, 448, 476], "phasecurv": [275, 440, 573], "phasecurve_lsi_dc": 573, "phasecurvemodel": 404, "phasecurvetablemodel": [392, 394], "phasecurvetempl": 392, "phasogram": [275, 573], "phi": [19, 20, 26, 199, 218, 219, 222, 225, 226, 228, 229, 230, 234, 237, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 312, 404, 472, 489, 490, 495, 505, 524, 536, 537, 538, 540, 541, 542, 546, 548, 549, 550, 552, 553, 557, 558, 560, 561, 562, 563], "phi_0": [218, 220, 221, 225, 228, 229, 230, 234, 237, 241, 242, 250, 252, 254, 255, 261, 262, 265, 266, 268, 269, 270, 272, 276, 404, 484, 546, 549, 550, 553, 557, 560, 561, 562, 563], "phi_ref": [275, 573], "philipp": [440, 441], "phone": 401, "photon": [44, 226, 249, 366, 396, 452, 459, 468, 472, 488, 490, 505, 524, 555, 578], "photutil": [141, 381, 395, 441], "php": 63, "physic": [126, 127, 130, 133, 328, 329, 380, 405, 409, 423, 457, 465, 487, 490, 492, 494, 503, 517, 519, 555, 578, 581, 582], "pi": [19, 20, 30, 31, 32, 37, 54, 235, 280, 404, 490, 513, 536, 537, 538, 541, 542, 552, 572], "pick": [381, 388, 395, 406, 422, 505], "pictur": 382, "pie": 519, "piec": [381, 387, 395, 400, 409], "piecewis": [250, 251, 450, 490, 533, 544, 565], "piecewisebrokenpowerlawnormspectralmodel": 404, "piecewisebrokenpowerlawnormspectramodel": 404, "piecewisenormsectralmodel": 429, "piecewisenormspatialmodel": [258, 446, 448, 490, 539], "piecewisenormspectralmodel": [259, 409, 429, 432, 445, 447, 490, 526, 556], "pig": [13, 381, 383, 384, 421, 422, 424, 425, 426, 428, 429, 440, 442, 443, 447], "pii": [135, 144], "pillar": 397, "pin": 441, "pink": [109, 110], "pint": [476, 519], "pintor": [394, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 443, 445, 446, 447, 448], "pip": [380, 384, 388, 398, 412, 413, 415, 422, 441, 494, 579], "pipe": [437, 438, 439], "pipelin": [394, 396, 428], "piron": 578, "piron2001": 578, "pivot": [19, 20, 26, 67, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 447, 481], "pivot_energi": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "pix": [191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 531], "pix_reg": 480, "pix_reg_rec": 480, "pix_to_coord": [191, 192, 195, 197, 198, 201, 203, 204, 447], "pix_to_idx": [191, 192, 195, 197, 198, 201, 203, 204], "pix_tuple_to_idx": 448, "pixcoord": 395, "pixel": [13, 83, 102, 105, 109, 110, 112, 113, 114, 118, 128, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 176, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 221, 224, 225, 234, 237, 248, 250, 261, 262, 266, 272, 276, 392, 420, 424, 438, 441, 460, 468, 470, 482, 486, 487, 495, 505, 515, 517, 529, 530, 531, 540], "pixel_area": 204, "pixel_scal": [118, 192, 204], "pixelis": 531, "pixelregion": [395, 528], "pixilis": 487, "pixreg": 538, "pixregion": 206, "pk": [137, 427, 452, 474, 475, 478, 479, 481, 491, 505, 545], "pks2155": [452, 474, 478], "pks2155_hess_lc": [123, 125, 145, 479, 483], "pl": [67, 80, 122, 127, 133, 170, 246, 253, 254, 255, 404, 454, 460, 470, 474, 481, 482, 483, 490, 505], "pl_model": 571, "pl_spectrum": 492, "place": [83, 86, 87, 91, 92, 100, 102, 105, 109, 110, 141, 147, 148, 149, 150, 151, 152, 153, 157, 158, 163, 165, 166, 176, 181, 193, 194, 196, 202, 205, 206, 248, 274, 304, 354, 381, 382, 388, 389, 392, 393, 394, 395, 397, 400, 401, 402, 403, 406, 411, 425, 427, 456, 473, 487, 488, 490, 505, 515, 516, 577, 583], "placehold": 386, "plai": [401, 466], "plain": [398, 487], "plan": [385, 386, 390, 391, 395, 397, 398, 401, 406, 410, 421, 438, 440, 441, 442, 576], "planar": [276, 392], "plane": [29, 67, 68, 126, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 401, 480, 481, 487, 494, 514, 529, 532, 537, 578, 584], "plate": [204, 487], "platform": [398, 407, 432], "plausibl": [408, 467], "pleas": [103, 108, 382, 384, 386, 388, 390, 416, 421, 422, 423, 432, 440, 442, 448, 454, 456, 457, 458, 459, 461, 464, 468, 469, 474, 475, 479, 482, 483, 503, 508, 519], "pleasant": 384, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 101, 102, 105, 109, 110, 125, 128, 129, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 193, 194, 195, 196, 198, 201, 202, 203, 205, 206, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 281, 285, 359, 368, 369, 373, 374, 375, 376, 377, 378, 379, 380, 382, 395, 396, 397, 399, 400, 402, 405, 417, 420, 423, 426, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 447, 448, 451, 453, 454, 458, 460, 461, 462, 464, 465, 469, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 488, 490, 491, 492, 494, 495, 496, 497, 503, 505, 509, 511, 512, 513, 515, 519, 521, 522, 523, 525, 528, 573, 574, 578, 581, 583], "plot_absorb": [450, 545, 565], "plot_at_energi": [147, 148, 494], "plot_bia": [150, 155], "plot_broken_powerlaw": [450, 546, 565], "plot_compound": [450, 547, 565], "plot_const": [450, 535, 544], "plot_constant_spectr": [450, 548, 565], "plot_constant_tempor": [450, 566, 575], "plot_containment_radiu": [154, 160, 162, 164], "plot_containment_radius_vs_energi": [154, 160, 162, 163, 164, 166, 494, 495], "plot_contour_lin": 484, "plot_correl": [209, 484], "plot_count": [109, 110], "plot_dat": 583, "plot_disk": [450, 536, 544], "plot_distribut": [448, 462, 464], "plot_energi": [83, 469], "plot_energy_depend": [147, 153, 494, 521], "plot_energy_offset": 83, "plot_err": 128, "plot_error": [19, 20, 26, 66, 67, 101, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 234, 235, 237, 241, 242, 245, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 276, 277, 399, 452, 454, 456, 458, 464, 465, 467, 481, 484, 504], "plot_excess": [109, 110, 435], "plot_exp_cutoff_powerlaw": [450, 549, 565], "plot_exp_cutoff_powerlaw_3fgl": [450, 550, 565], "plot_exp_cutoff_powerlaw_norm_spectr": [450, 551, 565], "plot_expdecay_tempor": [450, 567, 575], "plot_extension_error": [220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276], "plot_fit": [101, 109, 110, 453, 456, 457, 458, 466, 476, 503], "plot_gauss": [450, 537, 544], "plot_gauss_spectr": [450, 552, 565], "plot_gaussian_tempor": [450, 568, 575], "plot_gen_gauss": [450, 538, 544], "plot_generalized_gaussian_tempor": [450, 569, 575], "plot_grid": [161, 193, 194, 196, 202, 205, 206, 220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276, 405, 434, 445, 464, 482, 485, 486, 487, 488, 490, 496], "plot_heatmap": 209, "plot_hist": [202, 532], "plot_imag": 83, "plot_interact": [193, 194, 196, 202, 205, 206, 220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276, 434, 441, 464, 472, 487, 503, 504], "plot_kernel": 161, "plot_kwarg": [456, 458, 466], "plot_linear_tempor": [450, 570, 575], "plot_logparabola": [450, 553, 565], "plot_logparabola_norm_spectr": [450, 554, 565], "plot_map_rgb": 446, "plot_mask": [109, 110, 194, 202, 206, 528], "plot_matrix": [150, 482, 495], "plot_migr": 155, "plot_naima": [450, 555, 565], "plot_npred_sign": [446, 464, 466, 504], "plot_offset2_distribut": 83, "plot_offset_depend": [147, 153], "plot_panel": 368, "plot_phasogram": 275, "plot_piecewise_norm_spati": [450, 539, 544], "plot_piecewise_norm_spectr": [450, 556, 565], "plot_point": [450, 540, 544], "plot_posit": [224, 248, 489], "plot_position_error": [220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276], "plot_powerlaw": [450, 557, 565], "plot_powerlaw2": [450, 558, 565], "plot_powerlaw_norm_spectr": [450, 559, 565], "plot_powerlaw_tempor": [450, 571, 575], "plot_profil": 128, "plot_psf_vs_rad": [154, 160, 162, 163, 164, 166, 495], "plot_rad_max_vs_energi": [165, 448, 458], "plot_region": [201, 202, 224, 248, 378, 458, 470, 489, 528, 532], "plot_residu": [101, 102, 105, 109, 110, 430, 432, 464, 504], "plot_residuals_spati": [102, 105, 109, 110, 464, 472, 504], "plot_residuals_spectr": [102, 105, 109, 110], "plot_rgb": 446, "plot_shel": [450, 541, 544], "plot_shell2": [450, 542, 544], "plot_sine_tempor": [450, 572, 575], "plot_smooth_broken_powerlaw": [450, 560, 565], "plot_spati": 432, "plot_spectrum": [101, 147, 464, 475, 482], "plot_spectrum_datasets_off_region": [429, 445, 446, 456, 458, 466, 528], "plot_stat": 456, "plot_super_exp_cutoff_powerlaw_3fgl": [450, 561, 565], "plot_super_exp_cutoff_powerlaw_4fgl": [450, 562, 565], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [450, 563, 565], "plot_templ": [450, 543, 544], "plot_template_phase_tempor": [450, 573, 575], "plot_template_spectr": [450, 564, 565], "plot_template_tempor": [450, 574, 575], "plot_theta_squared_t": 497, "plot_tim": 83, "plot_ts_profil": [125, 456, 457, 470, 473, 483], "plotmixin": [109, 110], "plotter": 368, "plsuperexpcutoff3fgl": 439, "plsuperexpcutoff4fgl": 424, "plt": [19, 20, 26, 66, 67, 129, 147, 153, 154, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 369, 378, 381, 382, 417, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 511, 512, 513, 519, 521, 522, 523, 525, 528, 536, 538, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 225, 401, 407, 490], "pmf": 394, "png": [154, 389, 417, 509, 511, 512, 513, 515, 516, 521, 522, 523, 525, 528, 532, 581, 584], "po": [152, 204, 528], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 104, 105, 109, 110, 112, 113, 119, 123, 125, 126, 127, 130, 131, 132, 133, 134, 138, 143, 145, 152, 154, 157, 163, 165, 166, 176, 177, 179, 180, 181, 183, 184, 186, 187, 189, 190, 193, 194, 196, 201, 202, 205, 206, 211, 224, 248, 252, 264, 283, 287, 290, 296, 310, 314, 320, 326, 336, 373, 381, 383, 384, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 410, 413, 420, 423, 425, 426, 432, 434, 435, 437, 438, 439, 440, 442, 445, 446, 447, 450, 453, 455, 458, 459, 460, 464, 469, 470, 472, 473, 474, 475, 476, 478, 482, 484, 485, 486, 487, 490, 491, 495, 497, 499, 507, 508, 514, 515, 516, 519, 524, 528, 531, 533, 537, 538, 544, 555, 576, 577, 578], "point_sourc": 392, "pointer": 389, "pointing_altaz": [408, 446], "pointing_galact": 91, "pointing_info": [85, 94, 451], "pointing_posit": [163, 459, 469, 472], "pointing_radec": [83, 91, 446, 494], "pointing_t": 94, "pointing_zen": 446, "pointinginfo": [85, 438], "pointinginfometadata": [90, 104], "pointingmetadata": 408, "pointingmod": 85, "pointlik": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 440, 528], "points_scal": 320, "pointskyregion": [175, 180, 201, 252, 435, 458, 469], "pointsourc": [392, 507], "pointspatialmodel": [19, 20, 72, 80, 133, 258, 404, 405, 425, 445, 460, 461, 464, 465, 468, 469, 473, 481, 482, 489, 490, 495, 503, 504, 540], "pointspreadfunct": 485, "poisson": [105, 110, 289, 290, 291, 292, 298, 301, 302, 305, 338, 393, 394, 423, 428, 454, 459, 462, 472, 578, 579, 581], "poissonian": [290, 476, 479, 578], "poissonlikelihoodfitt": 437, "polar": [51, 54, 309, 381], "pole": [51, 395, 487], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194], "polici": 385, "pollut": 396, "polygon": [194, 208, 395], "polygonis": 395, "polygonpixelregion": 395, "polygonskyregion": [208, 395], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 245, 487], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [324, 328, 329], "pool_kwarg": [328, 329], "poolmethodenum": 324, "poon": 438, "poorli": [486, 526], "pop": [92, 100, 200, 248], "popitem": 200, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 382, 401, 439, 508, 510, 555, 577], "popular": 579, "port": 439, "pos_ob": 466, "pos_on": 190, "pos_target": [466, 476], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 102, 103, 104, 105, 108, 112, 113, 123, 124, 125, 126, 127, 130, 131, 133, 151, 152, 158, 161, 163, 166, 176, 179, 181, 190, 192, 193, 194, 196, 201, 202, 203, 204, 205, 206, 207, 214, 215, 216, 217, 220, 221, 224, 225, 234, 237, 248, 250, 252, 261, 262, 264, 266, 272, 274, 276, 287, 289, 291, 306, 307, 310, 311, 314, 315, 369, 381, 388, 392, 394, 395, 404, 405, 406, 407, 422, 424, 429, 432, 434, 447, 448, 451, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 475, 476, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 494, 495, 497, 505, 515, 516, 517, 519, 524, 525, 528, 529, 530, 532, 536, 537, 538, 540, 555, 581], "position_angl": 459, "position_error": [220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276, 426], "position_lonlat": [220, 221, 225, 234, 237, 250, 252, 261, 262, 264, 266, 272, 276], "position_off": 190, "positv": 443, "posixpath": [16, 345], "possibl": [33, 82, 87, 91, 136, 156, 381, 382, 384, 388, 389, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 405, 408, 410, 411, 413, 423, 424, 432, 439, 441, 446, 448, 452, 456, 460, 461, 462, 467, 470, 482, 484, 485, 486, 487, 495, 504, 505, 517, 519, 526, 531, 532, 555, 579, 580], "possibli": [87, 91, 123, 387, 391, 392, 394, 395, 399, 400, 401, 402, 408, 410, 432, 526], "post": [52, 390, 408], "postbuild": 410, "poster": [384, 407, 411, 436], "posterior": [399, 492], "posteriori": 492, "postfix": 381, "potenti": [120, 389, 397, 467, 519], "potentiel": 407, "power": [19, 20, 26, 27, 101, 118, 123, 125, 127, 132, 140, 161, 163, 166, 192, 214, 216, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 256, 260, 265, 267, 268, 269, 270, 273, 277, 280, 285, 290, 335, 392, 394, 420, 426, 438, 440, 448, 450, 452, 459, 461, 464, 468, 470, 472, 474, 475, 476, 478, 489, 490, 492, 519, 533, 545, 565, 571], "power_spectrum": 290, "power_spectrum_param": 290, "powerlaw": [179, 254, 256, 290, 392, 393, 397, 438, 440, 450, 453, 461, 469, 470, 481, 490, 492, 504, 533, 559, 575], "powerlaw2spectralmodel": [246, 254, 255, 259, 404, 454, 461, 490, 505, 558], "powerlaw_with_paramet": 290, "powerlawnormspectralmodel": [67, 232, 253, 255, 259, 274, 403, 404, 409, 429, 447, 464, 465, 468, 469, 472, 482, 489, 490, 495, 503, 526, 539, 559, 564], "powerlawspectr": 133, "powerlawspectralmodel": [70, 72, 76, 80, 101, 109, 110, 115, 117, 122, 125, 131, 133, 215, 217, 253, 254, 259, 281, 404, 405, 409, 452, 453, 454, 457, 459, 460, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 481, 482, 483, 489, 490, 492, 494, 495, 503, 504, 505, 517, 535, 536, 537, 538, 540, 541, 542, 543, 545, 547, 556, 557, 566, 567, 568, 569, 570, 571, 572, 573, 574], "powerlawspectramodel": 409, "powerlawtemporalmodel": [271, 490, 571], "pppc4dm": 507, "pppc4dmid": 26, "pprint": [87, 91, 580], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pr": [381, 391, 393, 395, 404, 405, 407, 409, 410, 426, 427], "practic": [394, 398, 402, 405, 406, 407, 408, 456, 482, 488, 490, 504, 515, 519, 528, 578], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 101, 104, 108, 124, 125, 381, 384, 390, 401, 407, 408, 412, 413, 429, 441, 443, 457, 461, 462, 465, 467, 470, 479, 481, 483, 484, 489, 492, 515, 521], "preced": [326, 395, 397, 407, 490], "precis": [133, 154, 160, 162, 164, 221, 225, 234, 237, 250, 261, 262, 266, 272, 276, 381, 399, 406, 407, 469], "precision_factor": [163, 166, 193, 194, 196, 202, 205, 206], "precomput": [26, 101, 125, 448, 482, 489], "pred": 515, "predefin": [413, 415, 434, 470, 473, 474, 503], "predic": 392, "predict": [101, 102, 105, 108, 109, 110, 122, 123, 125, 126, 127, 130, 131, 140, 170, 173, 179, 186, 252, 264, 293, 330, 377, 387, 392, 393, 394, 429, 446, 447, 452, 457, 459, 461, 462, 464, 466, 468, 470, 472, 482, 483, 486, 492, 503, 504, 517, 519, 523, 526, 545, 578, 581], "prefer": [87, 91, 356, 381, 386, 388, 392, 400, 401, 407, 412, 413, 417, 470, 475, 487, 488, 492, 499, 579, 581], "prefix": [198, 392], "preliminari": [390, 401, 409, 437, 439, 447, 460, 485, 495], "prepar": [82, 173, 391, 392, 410, 457, 465, 483, 486, 490, 495, 503, 527, 576], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [87, 91, 308], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 448, 460, 479, 487, 555, 578], "present": [15, 70, 82, 83, 85, 91, 92, 100, 106, 110, 123, 125, 167, 195, 200, 224, 232, 248, 308, 381, 382, 384, 394, 397, 401, 405, 408, 411, 432, 453, 458, 461, 462, 473, 474, 478, 479, 480, 485, 486, 487, 489, 515, 517, 520, 532, 579, 581], "preserv": [87, 91, 105, 193, 194, 196, 198, 202, 205, 206, 398, 482, 488], "preserve_count": [193, 194, 196, 202, 205, 206, 487], "press": 494, "pretti": [395, 401, 411, 417], "prevent": [194, 226, 308, 432, 464, 526], "preview": [384, 497], "previou": [74, 87, 91, 381, 384, 395, 401, 402, 406, 410, 423, 429, 447, 448, 458, 467, 468, 487, 490, 491, 492, 505, 514], "previous": [287, 398, 428, 440, 441, 451, 456, 464, 465, 481, 486, 488], "primari": [26, 87, 91, 193, 194, 196, 197, 205, 206, 386, 407, 428, 443, 483, 487], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 197, "primary_band": 487, "primary_hdu": 468, "primaryflux": [19, 20, 480, 507], "primaryhdu": [468, 487], "prime": 23, "primer": 399, "princip": 467, "principl": [381, 407, 409, 456, 529], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 101, 102, 109, 111, 116, 122, 125, 127, 133, 141, 142, 148, 150, 153, 154, 160, 162, 164, 173, 176, 215, 217, 224, 239, 248, 281, 306, 307, 316, 348, 381, 382, 392, 393, 396, 405, 408, 416, 417, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 503, 504, 505, 517, 519, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579, 580, 581, 583], "print0": 381, "print_level": [464, 472, 484, 504], "print_stack": 381, "printout": [381, 439, 440, 482], "prior": [19, 20, 99, 101, 102, 109, 214, 215, 216, 217, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 279, 385, 390, 447, 448, 450, 452, 453, 456, 457, 458, 459, 461, 464, 465, 470, 472, 474, 475, 481, 484, 490, 493, 499, 504, 505, 564, 576], "prior_registri": 492, "prior_stat_sum": [214, 215, 216, 217, 409, 492], "priorfitstatist": 409, "priori": [405, 462, 488], "prioriti": [378, 390, 392, 393, 395, 407, 410], "priormodel": 409, "priorparamet": [233, 243, 257, 279, 409, 492], "privat": [381, 384, 390, 404, 440, 496, 497], "pro": [381, 397], "probabl": [13, 101, 134, 143, 155, 384, 387, 388, 389, 391, 394, 395, 399, 401, 403, 409, 411, 456, 459, 472, 484, 487, 490, 492, 495, 523, 524, 525, 578, 579, 581, 582], "probe": [133, 296, 490], "problem": [19, 20, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 304, 359, 389, 391, 395, 402, 409, 416, 444, 484, 519], "problemat": [400, 405, 408, 474, 519], "proce": [384, 411, 413, 415, 443, 452, 453, 456, 457, 468, 472, 474, 488, 489, 494, 495, 503, 504], "procedur": [394, 406, 410, 411, 452, 460, 464], "proceed": [401, 407, 496], "process": [11, 83, 93, 126, 127, 130, 133, 134, 143, 169, 194, 206, 327, 328, 329, 338, 381, 382, 384, 386, 387, 389, 390, 391, 393, 394, 396, 397, 403, 406, 407, 408, 414, 418, 424, 429, 432, 434, 440, 447, 448, 453, 456, 460, 466, 468, 469, 481, 482, 486, 496, 501, 504, 509, 516, 518, 519, 577, 578, 579], "process_lots_of_data": 381, "processor": 401, "prod": 421, "prod3": 401, "prod3b": 494, "prod5": [468, 469, 494], "produc": [15, 102, 105, 109, 110, 114, 123, 284, 286, 381, 382, 387, 396, 397, 405, 406, 408, 411, 426, 452, 453, 456, 458, 460, 465, 466, 467, 468, 472, 474, 476, 480, 484, 486, 492, 494, 504, 519, 522, 524, 579], "product": [108, 134, 143, 193, 194, 196, 199, 202, 205, 206, 275, 387, 396, 397, 407, 408, 417, 432, 446, 447, 452, 454, 460, 469, 476, 482, 484, 486, 495, 497, 517, 524, 578], "prof_mak": 127, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 101, 119, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 143, 154, 160, 162, 163, 164, 166, 190, 194, 202, 211, 236, 238, 288, 305, 321, 340, 341, 393, 395, 399, 400, 407, 413, 415, 420, 422, 429, 432, 437, 439, 441, 442, 447, 448, 450, 456, 457, 466, 471, 473, 474, 475, 483, 484, 492, 499, 507, 517, 519, 536, 581], "profile_err": 128, "profile_high": 470, "profile_new": 470, "profuma": 507, "program": [381, 397], "programmat": 464, "progress": [15, 82, 118, 130, 133, 211, 329, 387, 390, 397, 398, 411, 432, 439, 440, 441, 447, 519], "progress_download": 519, "proj": [102, 105, 109, 110, 173, 192, 193, 194, 204, 205, 206, 456, 486, 487, 495, 504, 528], "project": [102, 109, 127, 170, 176, 192, 193, 194, 196, 201, 202, 204, 205, 206, 221, 224, 225, 234, 237, 248, 250, 261, 262, 266, 272, 276, 315, 341, 381, 382, 383, 384, 386, 388, 395, 397, 398, 401, 407, 424, 432, 440, 446, 457, 460, 462, 466, 470, 476, 485, 487, 488, 489, 495, 501, 503, 504, 505, 507, 528, 531, 532, 541, 542, 577, 579], "projected_distance_axi": 127, "prompt": 579, "pronounc": 519, "pronunci": 519, "prop_cycl": 378, "propag": [19, 20, 26, 53, 128, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 295, 392, 399, 426, 446, 484], "proper": [45, 100, 396, 407, 445, 446, 458, 464, 519], "properli": [133, 186, 386, 396, 407, 444, 445, 456, 457, 483, 484, 503, 515, 580], "properti": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 96, 104, 123, 124, 170, 204, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 297, 378, 381, 382, 392, 394, 404, 405, 408, 409, 429, 432, 434, 439, 440, 442, 445, 446, 456, 458, 466, 468, 470, 481, 488, 490, 491, 505, 516, 532, 578], "propos": [381, 383, 385, 386, 387, 388, 390, 398, 406, 407, 409, 410, 422, 425, 426, 428, 429, 440, 446], "protect": 448, "proto": [16, 84, 90, 104, 124], "proton": [280, 555], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 392, 394, 397, 398, 399, 401, 437, 439, 440, 447, 508], "proven": 397, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 85, 87, 88, 90, 91, 101, 102, 104, 105, 109, 110, 114, 124, 130, 133, 134, 136, 143, 150, 151, 169, 183, 184, 189, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 276, 290, 305, 308, 374, 381, 382, 391, 392, 394, 396, 397, 398, 401, 402, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 422, 425, 426, 427, 429, 432, 434, 443, 446, 448, 451, 456, 458, 459, 460, 469, 472, 479, 481, 482, 483, 484, 486, 487, 488, 490, 491, 495, 496, 497, 499, 504, 505, 507, 509, 514, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 529, 530, 531, 532, 533, 540, 543, 555, 564, 576, 577, 578, 579, 581, 584], "proxi": 391, "prune": [384, 410], "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 384, "psf": [16, 82, 87, 88, 96, 102, 103, 105, 108, 109, 110, 112, 113, 114, 152, 154, 159, 160, 161, 162, 163, 164, 166, 173, 180, 189, 204, 224, 248, 264, 306, 307, 381, 387, 391, 392, 393, 394, 397, 420, 422, 426, 427, 428, 429, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 451, 453, 456, 457, 458, 460, 461, 462, 464, 466, 468, 469, 472, 473, 482, 486, 488, 491, 494, 496, 497, 503, 504, 515, 517, 519, 524, 527, 532, 578], "psf3d": [88, 154, 159, 162, 164, 189, 422, 440, 525], "psf68": 451, "psf_": 515, "psf_3gauss": [87, 154, 494, 525], "psf_assym": 485, "psf_kernel": [163, 495], "psf_kernel_map": [161, 495], "psf_king": [87, 162, 525], "psf_map": [103, 108, 163, 166], "psf_map_reco": [166, 496], "psf_mean": 495, "psf_new": 485, "psf_out": [163, 166], "psf_r95": 488, "psf_tabl": [82, 87, 160, 485, 497], "psf_theta": 381, "psf_updat": [103, 108], "psf_valu": [154, 162, 164], "psfkernel": [105, 163, 166, 194, 206, 393, 402, 441, 525], "psfking": [159, 434, 525], "psfmap": [102, 103, 105, 108, 109, 110, 152, 158, 159, 161, 166, 173, 180, 189, 393, 394, 402, 422, 425, 426, 428, 429, 441, 447, 448, 460, 482, 495, 519, 525], "psfnd": 485, "psr": [476, 481, 505], "psvqzpdn": 478, "public": [6, 371, 372, 384, 386, 395, 400, 403, 406, 411, 436, 453, 465, 473, 474, 478, 577, 584], "publicli": [494, 496, 497], "publish": [11, 398, 411, 456, 495], "pull": [382, 385, 386, 389, 390, 391, 392, 393, 394, 395, 401, 406, 407, 410, 411, 419], "puls": 238, "pulsar": [30, 31, 32, 35, 39, 42, 50, 54, 60, 64, 77, 83, 391, 401, 422, 424, 443, 446, 448, 450, 462, 467, 477, 490, 499, 509, 510, 519], "pulsar_analysi": [401, 450, 476, 477], "pulsar_phas": 519, "pulsar_phase_comput": 519, "pulsarastronomi": 519, "pulsat": 263, "pulse_stat": 476, "punch": [445, 447], "pure": [381, 398, 400, 401, 528], "purpl": 532, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 332, 356, 385, 387, 393, 396, 400, 404, 406, 407, 440, 460, 482, 489, 490, 523], "push": [381, 384, 410, 443], "put": [198, 381, 382, 384, 386, 388, 389, 392, 401, 410, 411, 417, 423, 459, 468, 488, 495, 519, 579], "pwbpl": 404, "pwd": [384, 413, 415], "pwl": [19, 20, 26, 125, 215, 217, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 281, 392, 404, 409, 452, 454, 468, 483, 490, 492, 517, 535, 536, 537, 538, 540, 541, 542, 543, 545, 547], "pwl2": 490, "pwl_decai": 468, "pwl_norm": [404, 490, 559], "pwn": [43, 481, 505, 512], "pwne": 467, "py": [381, 382, 388, 395, 398, 400, 402, 410, 411, 417, 422, 424, 425, 433, 438, 442, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503, 504, 505, 506, 519, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 579], "py310": 384, "py35": 439, "pycharm": 423, "pydant": [16, 84, 90, 104, 124, 380, 426, 445, 447, 464], "pydantic_cor": [16, 84, 90, 104, 124], "pydanticdeprecatedsince20": 464, "pydanticserializationerror": [16, 84, 90, 104, 124], "pydanticundefin": [16, 84, 90, 104, 124], "pydata": [434, 448], "pydocstyl": 382, "pyfact": [420, 438], "pyflak": 434, "pyirf": 447, "pyjok": 380, "pymc": 399, "pymotw": 579, "pypi": [398, 408, 410, 411, 413, 414], "pyplot": [19, 20, 26, 66, 67, 83, 129, 154, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 369, 374, 417, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 511, 512, 513, 519, 521, 522, 523, 525, 528, 536, 538, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572], "pyproject": 429, "pyregion": 395, "pytest": [381, 382, 384, 411, 440], "python": [11, 16, 84, 90, 104, 124, 141, 308, 349, 380, 384, 385, 386, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 407, 408, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 424, 425, 432, 434, 437, 438, 439, 440, 441, 442, 443, 446, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 507, 518, 519, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 579], "python3": [345, 414, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 543, 551, 567], "python_execut": [451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "python_vers": [451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "pytorch": 399, "pyx": [384, 411], "pyyaml": [380, 398, 421, 425], "q": [26, 83, 87, 91, 376, 480], "q5tgicc4": 486, "qeoduewi": 452, "qol": 448, "qtabl": [87, 91, 396, 478], "quadrat": [487, 497, 505, 582], "qualiti": [202, 401, 440, 441, 446, 491, 504, 519, 577, 584], "quantifi": [447, 467, 478, 479, 492], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 102, 103, 105, 106, 108, 109, 110, 112, 113, 114, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 168, 177, 178, 179, 181, 185, 186, 187, 188, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 214, 216, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 283, 289, 290, 291, 294, 295, 296, 297, 299, 304, 307, 308, 310, 312, 314, 315, 320, 338, 340, 341, 352, 356, 381, 382, 387, 390, 392, 395, 396, 397, 399, 404, 405, 408, 409, 423, 425, 429, 432, 433, 441, 442, 443, 451, 458, 460, 468, 469, 470, 474, 478, 479, 481, 482, 485, 486, 487, 488, 490, 494, 496, 497, 505, 511, 512, 513, 515, 519, 532, 558, 567, 569, 578, 581, 583], "quantity_support": [485, 536], "quasar": 137, "quentin": [399, 403, 404, 424, 425, 426, 427, 428, 429, 432, 434, 435, 443, 444, 445, 446, 447, 448], "queri": [397, 437, 481], "question": [348, 384, 386, 388, 389, 390, 392, 393, 394, 395, 398, 400, 405, 416, 421, 422, 440, 441, 442, 466, 505, 519, 520, 579], "questionnair": [388, 440], "quetin": 426, "quick": [83, 88, 102, 105, 109, 110, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 381, 384, 401, 411, 460, 461, 464, 466, 468, 475, 482, 485, 489, 494, 496, 497, 499, 505, 507, 516], "quickest": 382, "quickli": [381, 382, 384, 386, 397, 398, 401, 407, 411, 413, 439, 456, 464, 479, 496, 523, 579], "quicklook": 83, "quickplot": 194, "quicksort": [87, 91], "quickstart": 418, "quiescent": 545, "quit": [87, 91, 381, 409, 468], "quival": 392, "quot": [74, 281, 381, 382, 480], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 155, 190, 203, 309, 381, 382, 406, 411, 457, 465, 469, 484, 486, 503, 509, 524, 528, 536, 537, 538, 542, 545], "r68": [83, 112, 113, 154, 163, 166], "r70": [67, 481], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 261, 262, 480, 538, 541, 542], "r_0": [30, 33, 38, 48, 225, 237, 261, 489, 536, 538, 542], "r_1": [39, 48], "r_eval": 237, "r_exp": [36, 48], "r_in": [44, 168, 178, 261, 462, 529], "r_m": 538, "r_out": 44, "r_out_max": 168, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 141, 142, 176, 381, 382, 394, 397, 451, 456, 458, 460, 462, 466, 469, 473, 474, 476, 478, 481, 486, 488, 494, 495, 496, 497, 504, 505, 507, 519, 523, 583], "ra_pnt": 497, "ra_tru": [381, 394], "rad": [33, 83, 88, 102, 105, 109, 110, 112, 113, 114, 154, 160, 162, 163, 164, 165, 166, 176, 189, 263, 397, 434, 446, 458, 482, 485, 486, 495, 524, 525, 528, 572], "rad_axi": [102, 105, 109, 110, 114, 163, 166, 482, 485, 486, 519], "rad_di": [45, 509], "rad_index": 160, "rad_max": [82, 83, 87, 88, 159, 165, 182, 434, 443, 445, 446, 458], "rad_max_2d": [87, 165, 175, 180, 182, 458], "radec": [83, 94, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 381, 382, 485, 487, 505], "radecsi": 543, "radesysa": 543, "radi": [249, 555], "radial": [28, 30, 35, 36, 39, 40, 45, 129, 190, 194, 334, 381, 392, 400, 405, 422, 437, 439, 447, 468, 470, 486, 494, 507, 509, 525, 528], "radian": [17, 18, 21, 22, 24, 25, 27, 199, 220, 221, 225, 234, 237, 250, 252, 261, 262, 264, 266, 272, 276], "radiat": [226, 519, 541, 542, 555], "radiative_model": [249, 555], "radii": [27, 480, 495, 537], "radio": [137, 395, 487], "radiobutton": [464, 472, 487, 503, 504], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 102, 105, 109, 110, 122, 127, 128, 154, 160, 162, 163, 164, 166, 168, 176, 178, 194, 204, 206, 207, 224, 225, 234, 237, 248, 250, 252, 261, 262, 264, 266, 272, 274, 276, 306, 307, 340, 382, 395, 397, 404, 405, 422, 431, 432, 436, 446, 451, 453, 456, 457, 459, 460, 461, 462, 464, 466, 468, 469, 473, 474, 476, 478, 480, 482, 485, 486, 488, 489, 490, 491, 494, 503, 504, 505, 512, 513, 526, 528, 529, 532, 536, 537, 538, 541, 542], "radius_inn": [52, 53], "radius_max": [340, 470], "radius_min": 340, "radius_reverse_shock": [50, 53, 512], "radmax": [434, 435, 446, 447], "radmax2d": [83, 88, 159, 182, 432, 448, 458], "rai": [11, 19, 20, 26, 52, 53, 57, 59, 63, 66, 83, 93, 122, 126, 127, 130, 132, 133, 137, 169, 226, 280, 281, 296, 297, 328, 329, 381, 387, 392, 393, 395, 399, 411, 413, 417, 418, 423, 439, 441, 446, 447, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 507, 509, 510, 514, 515, 516, 519, 522, 524, 526, 528, 529, 545, 576, 577, 578, 579, 580, 581, 584], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 104, 124, 195, 200, 224, 226, 248, 272, 273, 274, 276, 308, 359, 381, 395, 404, 405, 408, 409, 426, 443, 446, 447, 448, 469], "raise_error": [16, 84, 90, 104, 124], "raj2000": [481, 505], "ran": [410, 494], "random": [6, 33, 42, 45, 46, 47, 87, 91, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 290, 330, 331, 332, 333, 334, 335, 336, 337, 338, 384, 393, 394, 397, 424, 436, 440, 468, 490, 519, 580, 581, 583], "random_se": 393, "random_st": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 290, 330, 331, 332, 335, 336, 337, 338, 381, 394, 459, 468, 469], "randomli": [46, 381], "randomnumb": 335, "randomst": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 290, 330, 332, 335, 336, 337, 338, 381], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 80, 83, 87, 91, 92, 100, 101, 102, 105, 109, 110, 126, 133, 150, 163, 165, 166, 179, 191, 192, 195, 197, 198, 201, 202, 204, 214, 216, 218, 219, 222, 223, 225, 226, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 245, 248, 249, 251, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 273, 274, 275, 277, 278, 283, 321, 333, 335, 336, 337, 374, 381, 387, 393, 394, 396, 405, 423, 428, 429, 432, 440, 441, 443, 453, 456, 458, 459, 461, 464, 465, 467, 469, 474, 475, 476, 479, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 495, 496, 503, 504, 505, 515, 517, 519, 538, 548, 577, 581], "rangl": 19, "rapid": [137, 296, 387, 390, 405, 406], "rare": [380, 381, 400, 487], "raster": [95, 194], "rate": [44, 45, 83, 88, 147, 148, 179, 186, 290, 338, 394, 417, 441, 456, 458, 476, 486, 494, 495, 497, 509, 522, 578], "rather": [118, 122, 126, 130, 133, 386, 399, 402, 440, 443, 445, 447, 448, 453, 484, 487, 505, 515, 537, 581], "ratio": [105, 110, 168, 192, 193, 194, 291, 305, 405, 451, 476, 494, 529, 578, 580, 581, 582, 584], "ravel": [192, 468], "raw": [123, 179, 505], "rc": [193, 194, 196, 202, 205, 206, 378, 487], "rc_context": [193, 194, 196, 202, 205, 206, 487], "rc_param": [193, 194, 196, 202, 205, 206, 487], "rcparam": 378, "rdbu": 503, "rdbu_r": [102, 105, 109, 110], "re": [87, 91, 96, 125, 126, 131, 170, 193, 194, 196, 202, 205, 206, 211, 306, 307, 374, 381, 382, 384, 386, 388, 389, 395, 396, 397, 399, 402, 403, 404, 405, 416, 420, 432, 434, 441, 454, 456, 457, 462, 464, 465, 466, 475, 484, 485, 489, 491, 495, 503, 505, 517, 519, 540, 579], "reach": [53, 132, 207, 386, 391, 394, 490], "reactiv": 443, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 105, 106, 109, 110, 115, 117, 118, 122, 123, 125, 127, 129, 131, 133, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 175, 193, 194, 196, 200, 201, 202, 205, 206, 211, 224, 226, 239, 248, 275, 276, 277, 282, 284, 286, 287, 344, 347, 367, 369, 374, 376, 381, 382, 384, 386, 391, 392, 393, 394, 397, 401, 403, 405, 407, 408, 409, 413, 415, 426, 429, 432, 440, 441, 443, 446, 447, 448, 452, 456, 457, 458, 462, 464, 467, 468, 479, 482, 483, 484, 485, 490, 492, 494, 495, 496, 499, 503, 505, 516, 517, 519, 521, 522, 523, 525, 543, 573, 574, 579, 582], "read_arf": 106, "read_bkg": 106, "read_builtin": [226, 452, 545], "read_covari": [224, 248], "read_dataset": 15, "read_lazi": 434, "read_model": 15, "read_pha": 106, "read_rmf": 106, "read_xspec_model": 277, "readabl": [362, 392, 434, 457, 503], "reader": [408, 451, 459, 461, 464, 466, 469, 472, 475, 494], "readi": [391, 408, 416, 578], "readili": 401, "readm": [384, 407], "readthedoc": [13, 126, 186, 201, 211, 277, 384, 401, 423, 438, 484, 485, 494, 516, 519, 530, 532], "real": [51, 381, 384, 411, 459, 460, 462, 469, 484, 488, 515], "realis": [386, 395, 407], "realist": 409, "realiti": 452, "realiz": [387, 578], "realli": [381, 388, 395, 398, 459, 472, 484], "rearrang": 401, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381, 386, 387, 388, 389, 392, 393, 394, 396, 398, 400, 402, 407, 440, 452, 468, 484, 492, 496, 515, 579], "reassign": [19, 20, 26, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279], "rebas": [381, 395], "rebin": [125, 145, 396, 434, 447, 474, 479, 482], "rebuild": [16, 84, 90, 104, 124, 465], "recarrai": [87, 91, 154, 164], "receiv": [399, 401, 402, 404, 406], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 391, 395, 396, 397, 398, 401, 414, 421, 435, 441, 465, 494, 496], "recip": [383, 397, 410, 418, 432, 476, 519, 520, 578, 581], "reco": [102, 105, 109, 110, 150, 183, 381, 387, 396, 405, 442, 443, 451, 482, 486, 496, 578], "reco_exposur": [122, 448], "reco_psf": [102, 105, 109, 110, 114, 486, 496], "recogn": [451, 459, 461, 464, 466, 472, 475, 494], "recognis": [392, 579], "recognit": 407, "recommend": [92, 100, 101, 180, 224, 248, 288, 320, 321, 380, 381, 382, 384, 388, 390, 398, 407, 411, 412, 414, 417, 424, 441, 456, 457, 458, 467, 482, 484, 486, 490, 495, 503, 519, 526, 531, 532, 579, 580, 583], "recomput": [125, 405, 462], "recompute_ul": 125, "recon_vers": [495, 505], "reconstruct": [83, 102, 103, 105, 108, 109, 110, 112, 113, 114, 122, 132, 133, 140, 147, 148, 150, 151, 152, 155, 165, 166, 179, 186, 381, 387, 392, 394, 429, 444, 451, 453, 456, 459, 461, 462, 464, 468, 472, 475, 482, 486, 488, 492, 496, 515, 517, 523, 524, 525, 532, 578], "recopsfmap": [159, 443, 446], "record": [83, 88, 381, 386, 387, 407, 494], "recov": 397, "rectangl": [221, 225, 234, 237, 250, 261, 262, 266, 272, 276, 341, 395, 470, 528], "rectangleskyregion": [204, 220, 221, 276, 340, 341, 395, 453, 480, 488, 528, 532], "rectangular": [470, 528, 532], "recurr": 396, "recurs": [348, 408], "red": [101, 290, 296, 371, 451, 452, 456, 459, 462, 464, 467, 480, 491, 492, 536, 537], "redesign": 390, "redistribut": 523, "redo": 476, "redshift": [19, 20, 226, 404, 505, 545], "redshift_scan": 452, "reduc": [6, 11, 15, 100, 102, 105, 109, 110, 161, 163, 166, 171, 181, 193, 194, 196, 198, 202, 205, 206, 387, 388, 390, 392, 393, 397, 400, 402, 407, 408, 413, 420, 425, 432, 441, 447, 450, 452, 453, 454, 457, 458, 459, 464, 465, 468, 472, 473, 474, 475, 478, 488, 491, 493, 496, 499, 515, 519, 529, 532, 537, 538, 577, 578, 579], "reduce_data": 397, "reduce_over_ax": [193, 194, 196, 202, 205, 206, 461, 486, 496], "reduct": [6, 11, 169, 387, 393, 394, 397, 401, 402, 403, 408, 413, 426, 428, 446, 450, 462, 466, 467, 470, 476, 482, 485, 488, 489, 491, 493, 499, 516, 519, 526, 528, 529, 577, 578], "ref": [83, 94, 102, 109, 122, 127, 133, 192, 201, 204, 224, 248, 382, 405, 460, 466, 470, 474, 481, 482, 483, 485, 487, 495, 505, 532, 567, 568, 569, 570, 571, 572, 578, 579], "ref_templ": [16, 84, 90, 104, 124], "refactor": [381, 393, 395, 396, 397, 404, 422, 423, 424, 426, 427, 428, 429, 432, 434, 436, 438, 440], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 101, 102, 104, 105, 106, 109, 110, 112, 113, 114, 123, 124, 125, 126, 128, 133, 134, 136, 137, 143, 155, 169, 170, 173, 176, 177, 180, 181, 182, 185, 186, 188, 203, 204, 205, 206, 211, 218, 219, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 245, 249, 251, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 273, 275, 277, 278, 281, 290, 292, 296, 297, 298, 299, 304, 305, 335, 336, 362, 363, 364, 365, 381, 382, 387, 389, 392, 393, 395, 397, 399, 404, 405, 406, 407, 408, 411, 418, 432, 439, 440, 448, 452, 453, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 478, 479, 481, 482, 483, 484, 486, 487, 489, 490, 492, 494, 495, 496, 503, 504, 505, 508, 515, 517, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 547, 549, 550, 551, 553, 554, 556, 557, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 581, 583], "referenc": [381, 578], "reference_flux": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "reference_map": 487, "reference_model": [123, 125, 134, 143, 451, 452, 460, 465, 483], "reference_model_default": [123, 125], "reference_spectral_model": [123, 125], "reference_tim": [86, 88, 102, 105, 109, 110, 197, 203, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 445, 446, 469, 475, 479, 486, 487, 574], "refit": 483, "reflect": [171, 175, 176, 177, 181, 190, 390, 395, 397, 400, 402, 413, 425, 432, 434, 437, 438, 441, 452, 453, 456, 457, 458, 466, 474, 478, 488, 527, 578], "reflected_bkg_mak": 486, "reflectedbgestim": 397, "reflectedregion": 452, "reflectedregionsbackgroundmak": [171, 176, 426, 448, 453, 456, 458, 466, 474, 478, 486], "reflectedregionsfind": [175, 181, 424, 528], "refpix": [204, 205, 206], "refresh": [87, 91], "refus": 381, "reg": [102, 105, 109, 110, 488, 490], "reg_dataset": 482, "regard": [405, 408, 456], "regardless": [87, 91], "regeard": [444, 445, 446, 447, 448], "regi": [387, 392, 393, 397], "region": [6, 27, 83, 91, 100, 102, 105, 107, 109, 110, 115, 117, 122, 123, 125, 127, 129, 132, 137, 151, 152, 158, 163, 166, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 190, 192, 193, 194, 196, 201, 202, 204, 205, 206, 208, 211, 220, 221, 224, 225, 234, 237, 248, 250, 252, 261, 262, 264, 266, 272, 274, 276, 277, 280, 291, 305, 339, 340, 341, 342, 343, 377, 378, 380, 382, 385, 387, 388, 396, 397, 398, 400, 403, 405, 413, 424, 425, 426, 428, 432, 434, 435, 437, 438, 440, 441, 443, 445, 446, 448, 452, 457, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 487, 490, 492, 494, 495, 496, 497, 503, 504, 505, 514, 515, 516, 517, 519, 526, 527, 529, 530, 531, 536, 537, 555, 577, 578, 580, 581, 582], "region_coord": 201, "region_ev": 476, "region_find": [175, 458], "region_io": 201, "region_map": [202, 206, 532], "region_map_1": 532, "region_map_2": 532, "region_mask": [83, 192, 204, 395, 456, 462, 466, 482, 486, 488, 504, 526, 528, 529], "region_nd_map": 202, "region_new": 342, "region_pix": 490, "region_weight": 204, "regionfind": [176, 177, 181], "regiongeom": [102, 105, 109, 110, 123, 127, 173, 180, 182, 183, 184, 186, 187, 202, 221, 225, 234, 237, 250, 261, 262, 264, 266, 272, 276, 395, 396, 403, 413, 428, 429, 432, 451, 453, 456, 458, 459, 466, 470, 474, 475, 476, 478, 481, 482, 483, 486, 495, 505, 515, 528, 531], "regionndmap": [26, 106, 109, 110, 132, 174, 175, 180, 182, 193, 194, 196, 201, 205, 206, 221, 225, 234, 237, 239, 250, 261, 262, 266, 272, 273, 276, 378, 395, 413, 428, 429, 432, 435, 443, 446, 469, 483, 495, 515, 531, 574], "regions_ds9": 488, "regionsfind": [175, 176, 181, 434], "regist": 490, "registri": [55, 98, 119, 159, 171, 244, 246, 258, 259, 271, 402, 409, 425, 428, 429, 432, 441, 481, 490], "regress": 384, "regul": 407, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 192, 200, 204, 390, 409, 434, 446, 472, 487, 488, 496], "regulargridinterpol": [320, 381], "regularis": 409, "regularli": [409, 497], "reichardt": 436, "reimplement": 392, "rej_sampl": 394, "reject": [385, 386, 394], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 105, 106, 110, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 203, 204, 205, 206, 261, 281, 295, 338, 396, 407, 432, 475, 479, 496, 542, 581], "rel_reduction_of_f_": 484, "relat": [11, 13, 67, 83, 85, 209, 296, 387, 389, 392, 394, 395, 398, 400, 401, 402, 407, 411, 428, 429, 441, 447, 482, 490, 494, 509, 576, 581], "relative_variability_amplitud": 479, "relative_variability_error": 479, "relative_variability_signific": 479, "relativist": 555, "releas": [11, 51, 65, 95, 383, 385, 386, 388, 389, 395, 398, 399, 408, 412, 414, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 453, 456, 457, 465, 473, 474, 478, 494, 496, 497, 503, 504, 507, 519, 521, 522, 523, 525], "relev": [123, 289, 291, 364, 381, 387, 396, 401, 405, 410, 456, 457, 460, 473, 474, 475, 478, 489, 491, 494, 496, 497, 503, 504, 515, 516, 583], "reli": [123, 381, 386, 387, 391, 392, 396, 400, 405, 406, 424, 429, 432, 443, 454, 464, 488, 507, 581], "reliabl": [384, 414, 462, 484, 488, 580], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 386, 387, 388, 389, 394, 398, 407, 422, 441, 458, 489, 525], "remaind": 496, "remark": 458, "rememb": [381, 395, 484, 499, 579], "remi": [403, 404, 424, 425, 426, 427, 428, 429, 432, 443, 444, 445, 446, 447, 448], "remind": [198, 407, 460, 466, 483], "remnant": [28, 52, 453, 467, 490, 510], "remot": [384, 410], "remov": [13, 16, 84, 87, 90, 91, 92, 96, 100, 104, 124, 163, 166, 178, 191, 192, 197, 200, 201, 204, 206, 248, 307, 384, 388, 389, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 412, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 456, 462, 464, 470, 476, 482, 488, 491, 494, 495, 508, 519, 528], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 384, 391, 392, 400, 401, 404, 420, 423, 425, 426, 427, 428, 432, 442, 443, 446, 579], "rename_ax": [191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 443], "rename_column": [87, 91, 125], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 359, 381, 382, 389, 440], "renorm": [462, 526], "renormalis": 178, "reoptim": [126, 130, 131, 211, 422, 452, 470, 473, 483, 484, 492, 503], "reorder": 448, "reorder_ax": [193, 194, 196, 202, 205, 206, 446], "reorgan": 432, "reorganis": 401, "repeat": [382, 464, 496], "repl": 381, "replac": [15, 87, 91, 100, 102, 105, 109, 110, 151, 152, 158, 163, 191, 192, 194, 197, 201, 202, 204, 206, 274, 287, 381, 391, 392, 395, 399, 402, 408, 414, 423, 424, 426, 428, 429, 446, 447, 448, 476], "replace_axi": [191, 192, 201, 204], "replace_column": [87, 91], "repo": [382, 389, 410, 411, 420, 433], "report": [87, 384, 397, 410, 411, 420, 434, 435, 440], "repositori": [87, 91, 381, 384, 386, 389, 391, 407, 410, 432, 441, 468, 497], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 87, 90, 91, 102, 104, 105, 109, 110, 124, 192, 194, 196, 198, 199, 201, 203, 264, 308, 316, 326, 381, 392, 393, 394, 395, 399, 402, 403, 404, 405, 422, 446, 452, 469, 470, 481, 483, 484, 486, 487, 488, 490, 495, 505, 514, 515, 517, 521, 522, 523, 525, 531, 576, 577, 578, 583], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 104, 124, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 381, 395, 408, 422, 424, 446, 454, 481, 487, 490, 531], "reprocess": 387, "reproduc": [94, 101, 125, 382, 397, 398, 399, 401, 407, 408, 412, 414, 441, 486], "reproject": [179, 193, 194, 196, 202, 205, 206, 377, 381, 387, 395, 398, 405, 426, 433, 441, 443, 447, 487, 488], "reproject_by_imag": [193, 194, 196, 202, 205, 206, 447], "reproject_to_geom": [193, 194, 196, 202, 205, 206, 443], "request": [85, 123, 125, 382, 385, 386, 388, 389, 390, 391, 392, 393, 395, 401, 405, 406, 407, 409, 411, 419, 468, 483, 488, 517], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 83, 84, 85, 87, 88, 90, 91, 95, 102, 104, 105, 109, 110, 111, 116, 124, 125, 128, 133, 147, 148, 150, 153, 154, 155, 160, 162, 165, 170, 193, 194, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 308, 356, 360, 361, 379, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 403, 404, 405, 406, 407, 409, 410, 412, 414, 420, 425, 426, 427, 428, 433, 434, 436, 437, 438, 439, 442, 443, 444, 448, 452, 453, 458, 462, 465, 474, 475, 476, 478, 479, 482, 485, 487, 488, 490, 494, 504, 517, 519, 532], "require_ev": 82, "required_ax": [147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 485], "required_hdu": 435, "required_irf": [16, 82, 457, 458, 461, 462, 464, 503], "required_nam": [195, 197, 198, 203], "required_paramet": [154, 162, 164], "rerun": [396, 478], "resampl": [102, 105, 109, 110, 125, 145, 146, 151, 191, 192, 193, 194, 195, 196, 197, 201, 202, 204, 205, 206, 376, 432, 434, 479, 519], "resample_axi": [125, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 376, 429, 474, 479], "resample_energy_axi": [102, 105, 109, 110, 151, 429, 434, 482], "resample_energy_edg": [456, 519], "resampled_energy_edg": 146, "resampled_map": [193, 194, 196, 202, 205, 206], "rescal": 486, "research": [397, 407], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 232, 274, 382, 429], "reset_data_cach": [102, 105, 109, 110], "reset_to_default": 232, "reshap": [193, 194, 196, 202, 205, 206, 451, 469, 485, 487], "resid": [403, 490], "residu": [72, 101, 102, 105, 109, 110, 170, 392, 393, 397, 424, 429, 435, 442, 448, 462, 482, 484, 495, 515, 528, 578], "resolut": [52, 150, 151, 155, 192, 204, 390, 392, 394, 395, 440, 446, 448, 481, 495], "resolv": [16, 84, 90, 104, 124, 382, 384, 391, 395, 396, 403, 404, 416, 422, 441, 448, 450, 474, 477, 499, 528], "resort": 461, "resourc": [440, 499], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 90, 91, 104, 106, 124, 125, 137, 192, 194, 204, 206, 288, 381, 391, 396, 407, 409, 429, 448, 460, 462, 475, 483, 487, 488, 496, 517, 532, 582], "respond": 407, "respons": [6, 108, 150, 151, 152, 155, 157, 158, 176, 381, 387, 388, 390, 392, 393, 394, 396, 397, 405, 407, 413, 439, 440, 441, 442, 453, 456, 457, 458, 459, 472, 475, 485, 486, 489, 494, 496, 497, 499, 503, 504, 515, 516, 521, 523, 525, 577, 578], "rest": [26, 384, 398, 400, 481, 514], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 489], "restore_statu": [215, 217, 224, 248, 492], "restore_valu": [215, 217, 224, 248], "restrict": [87, 91, 395, 464, 482, 488], "restructur": [382, 396, 397, 398, 400, 402, 408, 411, 426, 432, 433, 434, 435, 437, 446], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 101, 102, 104, 105, 109, 110, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 141, 143, 144, 155, 161, 163, 166, 179, 183, 184, 189, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 210, 211, 212, 213, 224, 248, 276, 287, 290, 308, 374, 380, 381, 382, 384, 386, 388, 390, 391, 392, 393, 394, 397, 399, 400, 403, 407, 409, 414, 417, 424, 432, 434, 435, 440, 442, 446, 447, 448, 452, 454, 456, 458, 459, 464, 466, 468, 469, 472, 474, 475, 476, 479, 481, 482, 484, 487, 488, 491, 492, 495, 496, 497, 503, 504, 514, 517, 519, 532, 567, 578, 580, 581], "result1": 452, "result2": 489, "result_ecpl": 454, "result_joint": [453, 456, 464], "result_list": 374, "result_log_parabola": 454, "result_minuit": 484, "result_pwl": 454, "result_scipi": 484, "result_stack": 456, "results_joint": 465, "results_prior": 492, "results_simplex": 484, "results_t": 467, "retain": [481, 532], "retriev": [87, 91, 405, 407, 453, 454, 456, 487, 490, 491, 496, 504, 516, 531, 532], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 304, 305, 306, 307, 308, 310, 312, 314, 315, 319, 321, 326, 330, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 347, 348, 351, 352, 353, 362, 363, 364, 365, 366, 369, 371, 372, 374, 376, 377, 387, 391, 392, 393, 394, 395, 396, 404, 405, 408, 409, 425, 426, 429, 432, 435, 441, 443, 448, 456, 458, 462, 466, 470, 474, 475, 478, 481, 482, 483, 484, 486, 487, 488, 490, 492, 505, 509, 531, 532, 564, 581], "return_delta": 338, "return_diff": 338, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [397, 429, 447], "reval": 538, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 197, 248, 487, 512], "reverse_lon_radec": 156, "revert": 448, "review": [384, 389, 390, 391, 394, 395, 397, 398, 400, 401, 402, 404, 405, 407, 409, 442, 443, 531], "revis": 401, "revisit": 226, "rework": 427, "rewrit": [387, 390, 397, 427, 437, 438, 440, 441, 442, 579], "rewritten": [439, 442], "rf": 480, "rgb": [376, 378, 446, 451, 456], "rglob": [82, 468, 494], "rhe": 182, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [381, 397], "rid": 387, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 102, 109, 123, 125, 133, 153, 230, 235, 255, 268, 292, 298, 369, 381, 395, 404, 407, 460, 466, 468, 473, 475, 494, 536, 537, 538, 545, 546, 549, 550, 552, 553, 557, 560, 561, 562, 563, 567, 568, 569, 571, 579, 580, 581, 582], "rightarrow": [542, 582], "rigid": 386, "ring": [105, 122, 168, 171, 178, 192, 193, 194, 387, 390, 397, 400, 413, 422, 426, 428, 438, 439, 440, 441, 450, 463, 467, 488, 499, 518, 527, 530, 578], "ring2dkernel": [168, 178], "ring_background": [450, 462, 463], "ring_bkg_mak": 529, "ring_mak": 462, "ringbackgroundestim": [387, 440], "ringbackgroundmak": [168, 171, 426, 462, 486, 529], "rint": 448, "rise": [137, 238, 479, 569], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 384, 407], "rm": [150, 151, 155, 270, 404, 458, 484, 521, 523, 524, 525, 538, 567, 568, 569, 570, 571, 572], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [106, 107, 110, 150, 151, 152, 438, 456], "rmf_ob": 106, "rmffile": 106, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 290, 330, 332, 335, 336, 337, 338, 381], "roadmap": [385, 388, 397, 406, 421, 442], "roberta": [440, 441], "robust": [381, 441], "roellinghoff": 448, "roi": [67, 397, 481, 497, 578], "roi_max": 397, "role": [440, 486], "rolf": 420, "rolk": 578, "rolke2005": [578, 581], "roll": 495, "room": 391, "root": [19, 20, 26, 123, 124, 133, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 300, 303, 381, 399, 432, 460, 507, 517, 579, 581], "rosillo": 443, "rotang": 469, "rotat": [51, 54, 176, 177, 181, 186, 225, 234, 237, 469, 528, 536, 537], "rough": [72, 397], "roughli": [118, 384, 389, 395, 397, 400, 401, 439, 462], "round": [87, 91, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 456, 531], "round_to_edg": [191, 192, 201, 204], "round_trip": [16, 84, 90, 104, 124], "routin": 420, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 141, 150, 316, 352, 375, 396, 405, 408, 443, 446, 456, 459, 469, 470, 478, 481, 484, 487, 494, 496, 497, 505, 514], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 481], "row_label": 375, "row_specifi": [83, 87, 91], "royalblu": 476, "rpovid": 396, "rspec": [67, 481], "rst": [384, 386, 401, 407, 410, 411, 427, 432], "rtd": 441, "rtol": [133, 356, 381], "rtol_ax": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 201, 202, 204, 205, 206], "rtol_wc": 204, "ruben": 440, "rub\u00e9n": 440, "ruiz": [389, 397, 401, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 440, 441, 442], "rule": [87, 91, 264, 283, 319, 407, 487, 531], "run": [16, 82, 83, 84, 88, 90, 93, 101, 103, 104, 108, 118, 120, 121, 122, 124, 126, 127, 129, 130, 131, 132, 133, 141, 142, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 201, 204, 211, 328, 329, 355, 374, 380, 381, 382, 388, 389, 391, 394, 396, 397, 398, 401, 403, 405, 409, 410, 411, 412, 417, 423, 424, 427, 428, 439, 441, 442, 446, 448, 451, 452, 453, 454, 459, 460, 461, 462, 464, 465, 466, 468, 472, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 504, 505, 515, 516, 517, 519, 524, 526, 528, 529, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "run_fit": [15, 457, 461, 503], "run_id": [495, 505], "run_multiprocess": 519, "runner": [16, 345, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 543, 545, 551, 567, 573, 574], "runtim": [390, 408, 410], "runtimewarn": [458, 462, 468, 478, 497, 567], "rwn5uwm": 478, "rx": 453, "rxj": 453, "rxj1713_2016_250gev": 543, "r\u00e9gi": [387, 390, 391, 395, 396, 398, 400, 402, 403, 404, 405, 406, 408, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "r\u00e9my": [399, 432, 434, 435, 443], "s0167947313003204": [135, 144], "s180": 296, "s2": 275, "s3": 275, "s_0": 519, "s_1": 519, "safari": [87, 91], "safe": [99, 101, 102, 105, 109, 110, 151, 152, 158, 163, 166, 171, 179, 381, 393, 395, 407, 426, 428, 429, 443, 444, 445, 446, 448, 453, 456, 482, 488, 504, 515, 577], "safe_mask": [16, 102, 109, 457, 461, 462, 464, 503], "safe_mask_mak": [169, 453, 456, 476, 486, 496, 526, 528, 529], "safe_mask_mask": [458, 466, 474, 478, 486], "safemaskconfig": 16, "safemaskmak": [169, 171, 402, 426, 427, 432, 434, 435, 447, 453, 456, 458, 466, 472, 474, 476, 478, 486, 488, 496, 503, 504, 526, 527, 528, 529], "safeti": 407, "sagittariu": [33, 38], "saha": 440, "sai": [74, 386, 400, 579], "said": [381, 386, 388, 496, 497, 579], "sake": [468, 484], "saldana": [226, 227, 446, 452, 545], "saldana21": 545, "samantha": 448, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 95, 100, 102, 105, 106, 109, 110, 122, 133, 134, 135, 141, 142, 143, 144, 154, 155, 161, 162, 163, 164, 166, 167, 169, 190, 191, 192, 193, 194, 196, 197, 200, 201, 202, 204, 205, 206, 281, 290, 296, 374, 381, 384, 389, 391, 393, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 424, 425, 429, 432, 446, 454, 457, 458, 459, 464, 465, 468, 472, 473, 474, 476, 481, 482, 487, 488, 489, 490, 491, 492, 495, 496, 499, 503, 515, 516, 517, 523, 531, 532, 579], "sampl": [47, 93, 103, 108, 133, 136, 152, 154, 160, 162, 163, 164, 166, 193, 194, 196, 202, 204, 205, 206, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 288, 290, 299, 321, 330, 335, 336, 337, 338, 385, 393, 395, 396, 399, 401, 413, 420, 422, 424, 425, 428, 434, 441, 443, 446, 447, 448, 450, 458, 471, 479, 482, 484, 499, 519], "sample_axi": 330, "sample_background": [103, 108, 426], "sample_coord": [152, 163, 166, 193, 194, 196, 202, 205, 206, 426, 428, 443], "sample_edisp": [103, 108], "sample_powerlaw": 400, "sample_psf": [103, 108], "sample_sourc": [103, 108], "sample_spher": [436, 583], "sample_tim": [223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 432, 443, 448], "sampler": [103, 330, 390, 394, 428, 432, 448, 468], "sampler_kwarg": 93, "saniti": 440, "santiago": 448, "satisfi": [146, 170, 192, 193, 194, 308, 489, 519], "save": [15, 19, 20, 26, 100, 133, 208, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 381, 389, 397, 405, 409, 448, 452, 464, 465, 468, 484, 488, 489, 496, 516], "savefig": [359, 417], "savez": 208, "saw": 418, "sbpl": [265, 404, 490], "sc": [87, 91], "sc6_qhhf": 478, "scalar": [87, 91, 161, 192, 193, 194, 196, 202, 205, 206, 308, 400, 434, 445, 447, 487, 531], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 104, 105, 110, 118, 124, 126, 127, 130, 154, 170, 198, 202, 203, 204, 206, 214, 216, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 267, 268, 269, 270, 273, 275, 276, 277, 285, 288, 307, 320, 321, 322, 338, 362, 363, 364, 374, 382, 390, 395, 396, 399, 404, 427, 432, 433, 441, 444, 445, 446, 448, 457, 460, 469, 470, 473, 474, 475, 479, 480, 481, 483, 485, 486, 487, 490, 491, 492, 494, 503, 505, 507, 545, 566, 567, 568, 569, 570, 571, 572, 573, 574], "scale10": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 409, 555], "scale_method": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 409, 555], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 480], "scaled_featur": 307, "scaled_features_irf": [306, 307, 491], "scaledregulargridinterpol": [68, 226, 277, 427, 442], "scalespectralmodel": [126, 127, 130, 259, 404, 490], "scan": [19, 20, 95, 123, 125, 126, 127, 130, 131, 211, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 396, 405, 432, 470, 474, 483, 492, 517, 519], "scan_max": [19, 20, 126, 130, 133, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 452, 474, 483, 484], "scan_min": [19, 20, 126, 130, 133, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 452, 483, 484], "scan_n_sigma": [19, 20, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 484], "scan_n_valu": [19, 20, 126, 130, 131, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 452, 484, 492], "scan_prior": 492, "scan_valu": [19, 20, 211, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 470, 484], "scargl": [396, 440, 479], "scatter": [224, 248, 402, 460, 466, 478, 536, 537], "scenario": [87, 91, 386, 393, 403, 413, 483, 487, 490, 508, 580], "scengin": [87, 91], "schedul": 390, "schema": [15, 16, 84, 90, 104, 124, 397, 400], "schema_gener": [16, 84, 90, 104, 124], "schema_json": [16, 84, 90, 104, 124], "scheme": [16, 84, 90, 101, 104, 106, 107, 124, 192, 193, 194, 203, 239, 381, 387, 391, 393, 396, 403, 404, 405, 406, 408, 410, 425, 432, 443, 447, 469, 485, 487, 490, 519, 524, 530, 531, 533], "schiavo": 448, "school": 407, "scienc": [135, 144, 193, 194, 196, 205, 206, 388, 390, 394, 397, 398, 401, 407, 418, 440, 441, 459, 465, 475, 487, 490, 491, 494, 495, 499, 507, 519, 553, 578, 579], "sciencedirect": [135, 144], "scientif": [382, 388, 404, 407, 414], "scientist": 494, "scikit": [141, 381, 395, 398, 401, 441, 488], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 206, 211, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 275, 277, 306, 320, 361, 374, 380, 381, 384, 390, 395, 398, 399, 401, 407, 418, 422, 423, 424, 425, 437, 438, 439, 442, 444, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 576, 581], "scipy_mvn": 209, "scipy_opt": 484, "scitool": 558, "scope": [394, 395, 396, 397, 400, 408, 508], "scratch": [153, 381, 391, 395, 411, 464, 488], "screen": [87, 91, 487, 505], "script": [6, 87, 91, 125, 344, 345, 346, 347, 348, 349, 350, 382, 387, 388, 390, 392, 395, 397, 400, 401, 407, 410, 411, 421, 422, 423, 424, 432, 433, 437, 440, 441, 442, 443, 447, 450, 456, 460, 462, 464, 465, 466, 467, 468, 470, 472, 474, 475, 478, 480, 481, 482, 483, 484, 486, 489, 492, 495, 500, 503, 518, 519, 579], "scriptabl": 408, "scutum": [33, 38], "sdc": 494, "sdist": 411, "seaborn": 519, "search": [87, 91, 289, 291, 345, 381, 382, 417, 440, 441, 457, 460, 466, 467, 480, 481, 491, 503, 504, 505, 507, 519, 579], "season": 401, "sebastian": 432, "sec": [54, 83, 94, 100, 130, 338], "second": [42, 58, 83, 86, 87, 88, 91, 136, 150, 275, 299, 338, 341, 358, 362, 365, 370, 382, 389, 391, 393, 395, 399, 405, 407, 411, 426, 445, 456, 457, 460, 462, 464, 466, 467, 468, 469, 470, 472, 474, 475, 478, 480, 482, 484, 486, 487, 489, 492, 494, 499, 503, 514, 580, 583], "secpl": [268, 269, 270, 404, 490], "section": [19, 87, 91, 290, 292, 298, 381, 382, 384, 386, 395, 397, 398, 400, 404, 407, 411, 429, 442, 459, 464, 468, 469, 472, 475, 481, 483, 484, 488, 489, 490, 505, 508, 519, 532, 577, 579, 583], "secur": 488, "sed": [119, 122, 123, 124, 125, 127, 133, 202, 226, 380, 397, 399, 405, 413, 420, 439, 454, 460, 470, 474, 481, 482, 483, 503, 505, 578], "sed_fit": [450, 454, 455], "sed_fitting_gammacat_fermi": 401, "sed_typ": [19, 20, 26, 123, 124, 125, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 432, 451, 452, 454, 456, 457, 458, 465, 466, 470, 473, 474, 475, 481, 483, 504, 505, 517, 519, 555, 578], "sed_type_init": [71, 74, 75, 78, 123, 124, 125], "sed_type_plot_default": [123, 125], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 513], "sedov_taylor_end": [52, 53, 513], "seds_20230803": 64, "sedtypeenum": 124, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 105, 109, 110, 118, 120, 122, 125, 126, 127, 130, 132, 133, 135, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 169, 176, 178, 179, 186, 191, 192, 194, 196, 198, 199, 201, 204, 206, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 282, 292, 298, 301, 302, 305, 308, 316, 332, 348, 371, 372, 380, 381, 382, 384, 385, 386, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 401, 402, 406, 407, 408, 409, 411, 413, 414, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 437, 438, 439, 440, 441, 442, 443, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 499, 503, 504, 505, 507, 515, 516, 519, 529, 530, 532, 558, 562, 563, 576, 578, 579, 580, 581, 583], "seed": [33, 42, 45, 46, 47, 102, 103, 105, 108, 109, 110, 152, 163, 166, 193, 194, 196, 202, 205, 206, 223, 231, 236, 238, 239, 240, 249, 256, 263, 275, 278, 290, 330, 331, 332, 335, 336, 337, 338, 381, 440, 468, 555], "seed_photon_field": [249, 555], "seem": [381, 388, 389, 392, 398, 402, 507], "seen": [381, 395, 402, 453, 460, 465, 474, 487, 490, 495], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 102, 105, 109, 110, 122, 173, 180, 193, 194, 195, 196, 198, 203, 205, 206, 215, 217, 224, 248, 264, 274, 287, 377, 378, 391, 393, 394, 395, 396, 397, 401, 403, 405, 408, 413, 415, 421, 424, 432, 436, 451, 456, 458, 459, 461, 462, 464, 465, 467, 468, 469, 472, 475, 476, 482, 483, 484, 486, 487, 488, 491, 494, 496, 497, 499, 505, 517, 519, 523, 524, 528, 577, 579], "select_energi": [83, 516], "select_from_geom": [224, 248], "select_map_mask": 422, "select_mask": [83, 224, 248, 432, 489], "select_nested_model": [446, 448], "select_obs_id": [91, 466], "select_observ": [91, 96, 397, 474, 478, 491, 504, 519], "select_offset": [83, 468, 497, 516], "select_paramet": [83, 89, 476, 516], "select_phas": 391, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 224, 248, 395, 424, 432, 468, 469, 476, 489, 505, 516], "select_row_subset": 83, "select_sky_box": 395, "select_sky_circl": [91, 395], "select_tim": [83, 86, 88, 92, 100, 391, 405, 426, 469, 474, 478, 516], "select_time_rang": 91, "selected_energi": 516, "selected_ev": 83, "selected_id": 516, "selected_obs_t": [91, 491, 504], "selected_offset": 516, "selected_region": 516, "selected_tim": 516, "selection_al": [118, 133], "selection_mask": [224, 248, 489], "selection_opt": [16, 118, 120, 121, 122, 126, 127, 129, 130, 131, 132, 133, 432, 448, 452, 456, 457, 460, 461, 462, 464, 465, 466, 470, 473, 474, 475, 476, 483, 488, 496, 503], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [464, 472, 487, 503, 504], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 104, 123, 124, 125, 201, 202, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 264, 265, 267, 268, 269, 270, 273, 277, 381, 382, 392, 393, 395, 398, 404, 405, 408, 409, 428, 462, 487, 490], "semant": [395, 406], "semi": 225, "semiaxi": [225, 234, 237, 536, 537, 538], "semilogi": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 451, 469], "semimajor": 481, "semiminor": 481, "semver": 406, "send": 410, "sens": [381, 388, 391, 395, 397, 400, 401, 402, 462], "sensibl": 491, "sensit": [119, 122, 123, 124, 125, 132, 281, 394, 401, 427, 429, 439, 440, 446, 447, 450, 455, 472, 494, 499, 507, 524], "sensitivity_estim": 451, "sensitivity_t": 451, "sensitivityestim": [119, 421, 427, 451], "sent": 386, "sentenc": [386, 401, 407], "sep": [201, 390, 398, 404, 419, 490], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 192, 201, 204, 304, 370, 381, 382, 387, 388, 389, 390, 393, 394, 395, 396, 397, 400, 401, 402, 403, 428, 432, 438, 440, 441, 445, 446, 459, 462, 464, 466, 472, 475, 481, 489, 490, 491, 508, 516, 524, 525, 536, 537, 541, 542, 555, 578], "septemb": [390, 398, 400, 401, 406], "sequenc": [87, 91, 92, 100, 102, 109, 147, 148, 149, 150, 152, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 215, 224, 248, 308, 411], "sequenti": [387, 456, 504], "seri": [87, 91, 125, 290, 295, 338, 390, 395, 396, 432, 448, 479], "serial": [16, 84, 87, 90, 91, 99, 100, 101, 102, 104, 105, 109, 110, 124, 387, 392, 396, 397, 402, 405, 425, 428, 432, 434, 441, 443, 444, 445, 446, 447, 487, 490, 492, 507], "serialis": [20, 102, 105, 109, 110, 218, 219, 222, 224, 226, 228, 229, 230, 232, 233, 235, 239, 241, 242, 243, 245, 247, 248, 249, 251, 253, 254, 255, 257, 260, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 393, 395, 397, 400, 402, 403, 404, 424, 426, 428, 432, 437, 440, 442, 443, 445, 446, 447, 492, 503, 519, 532, 574], "serializ": [16, 84, 90, 104, 124], "serialize_as_ani": [16, 84, 90, 104, 124], "serialize_method": [87, 91], "serializiaton": 393, "serilis": [26, 220, 221, 223, 225, 231, 234, 236, 237, 238, 240, 250, 252, 256, 261, 262, 263, 264, 266, 273, 276, 278], "sersic": 404, "sersic2d": 404, "sersicspatialmodel": 404, "serv": [87, 91, 381, 386, 393, 397, 405, 411, 434, 480, 523], "server": [403, 413, 415, 499], "servic": 440, "session": [397, 407, 518], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 120, 122, 123, 124, 125, 126, 127, 129, 130, 133, 135, 144, 150, 152, 163, 166, 169, 170, 173, 179, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 211, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 266, 268, 269, 270, 272, 275, 276, 277, 287, 299, 328, 330, 381, 382, 387, 390, 391, 393, 394, 396, 397, 398, 399, 401, 405, 406, 407, 408, 409, 411, 413, 415, 428, 434, 436, 438, 440, 443, 446, 447, 448, 451, 452, 453, 456, 458, 459, 460, 461, 464, 466, 467, 468, 469, 470, 473, 474, 476, 481, 482, 483, 484, 486, 488, 490, 491, 492, 494, 496, 497, 499, 504, 507, 515, 516, 519, 528, 530, 531, 532, 555, 576, 579, 582, 583], "set_by_coord": [193, 194, 196, 202, 205, 206, 487, 531], "set_by_idx": [193, 194, 196, 202, 205, 206, 487, 531], "set_by_pix": [193, 194, 196, 202, 205, 206, 531], "set_label": 478, "set_log": 16, "set_model": [15, 403, 457, 461, 473, 503], "set_models_paramet": 403, "set_parameter_factor": [215, 217], "set_parameters_bound": [224, 248], "set_prior": [248, 409], "set_prop_cycl": 451, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 209, "set_titl": [452, 453, 456, 460, 462, 466, 476, 480, 484, 485, 486, 489, 528, 538, 542, 545], "set_unit": [454, 483, 519], "set_xlabel": [451, 452, 453, 456, 459, 476, 478, 484, 491, 492], "set_xlim": [454, 456, 457, 465, 476, 521, 545], "set_xscal": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "set_xtick": [538, 542], "set_ylabel": [451, 452, 453, 456, 470, 476, 478, 480, 484, 491, 545], "set_ylim": [451, 454, 456, 457, 458, 473, 476, 521, 545], "set_yscal": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 470, 480, 521], "set_ytick": [538, 542], "setdefault": 200, "seterr": 381, "setlevel": 466, "setter": [382, 409, 426, 432, 482], "settl": 407, "setup": [13, 383, 384, 385, 388, 393, 394, 398, 401, 409, 438, 442, 499, 579], "setuptool": [433, 579], "sever": [87, 91, 175, 386, 387, 388, 395, 396, 397, 400, 405, 408, 426, 427, 428, 432, 435, 444, 445, 446, 459, 465, 481, 494, 495, 496, 519, 579, 581], "seyfert": 296, "sf": [304, 581], "sgr": 505, "shade": [194, 202, 206, 484, 577], "shall": 384, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 101, 102, 105, 109, 110, 111, 116, 122, 123, 127, 128, 133, 140, 141, 142, 148, 150, 153, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 209, 237, 288, 308, 321, 337, 392, 395, 399, 430, 445, 448, 454, 456, 458, 460, 461, 466, 469, 470, 474, 478, 479, 481, 482, 483, 485, 486, 487, 488, 490, 494, 495, 505, 517, 531, 532, 533, 538, 542], "shape_ax": [192, 204], "share": [193, 194, 196, 200, 202, 205, 206, 381, 386, 393, 396, 400, 403, 414, 432, 434, 446, 464, 465, 488, 489, 519, 579], "sharp": [238, 371, 372, 536], "she": [391, 396], "shear": 395, "sheet": [416, 519], "shell": [52, 53, 80, 261, 262, 392, 397, 404, 413, 415, 450, 490, 533, 542, 544, 579], "shell2": [261, 450, 490, 533, 544], "shell2d": 52, "shell2spatialmodel": [258, 262, 490, 542], "shellspatialmodel": [80, 258, 261, 404, 432, 490, 541], "sherpa": [107, 110, 150, 197, 198, 201, 202, 211, 292, 298, 380, 381, 390, 398, 399, 401, 402, 412, 413, 415, 422, 436, 437, 438, 439, 441, 448, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 532, 553, 580], "sherpa_opt": 484, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 276, 417, 448], "shim": 388, "shini": 366, "ship": [388, 389, 398, 421, 439, 459, 472, 476, 490, 519], "shock": [50, 52, 53, 512], "short": [381, 382, 385, 386, 390, 395, 398, 401, 404, 407, 429, 474, 479, 495, 519, 520, 578, 581, 584], "short_observ": [474, 478], "shortcut": [82, 417, 434], "shorten": 432, "shorter": [296, 381, 382, 395, 401, 406, 429, 459, 474, 490, 579], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 102, 104, 105, 108, 109, 110, 113, 115, 117, 123, 124, 125, 126, 130, 133, 136, 137, 138, 139, 145, 151, 152, 155, 161, 163, 166, 178, 183, 184, 189, 191, 192, 193, 194, 196, 198, 200, 201, 202, 204, 205, 206, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 308, 356, 370, 371, 372, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 406, 407, 408, 410, 411, 413, 415, 416, 417, 422, 424, 446, 458, 464, 467, 468, 469, 475, 476, 482, 484, 485, 486, 487, 488, 489, 490, 492, 494, 496, 515, 517, 519, 524, 526, 531, 579, 580, 582, 583], "shoulder": 280, "shouldn": [83, 381, 384], "show": [11, 82, 87, 91, 127, 128, 129, 154, 173, 239, 378, 381, 382, 384, 393, 395, 396, 400, 401, 409, 411, 421, 422, 426, 434, 439, 440, 441, 446, 447, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 499, 503, 504, 505, 511, 512, 513, 519, 521, 522, 523, 525, 526, 528, 530, 536, 545, 564, 577, 579, 581, 584], "show_dtyp": [87, 91], "show_in_brows": [87, 91, 466], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 519, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 492, "shower": [436, 494, 524], "shown": [19, 20, 26, 83, 161, 201, 202, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 376, 381, 388, 398, 399, 400, 408, 409, 410, 411, 426, 428, 453, 456, 460, 464, 466, 467, 468, 469, 474, 475, 476, 479, 486, 489, 490, 491, 492, 494, 504, 516], "showwarn": 381, "si": [83, 192, 201, 204, 224, 248, 280, 532], "side": [204, 206, 289, 291, 381, 395], "sider": 583, "sidereal_tim": 382, "siejkowski": 441, "sig": [374, 580, 581, 582], "sight": 507, "sigma": [19, 20, 30, 32, 48, 49, 122, 123, 124, 125, 126, 130, 131, 133, 141, 142, 150, 151, 155, 161, 162, 163, 166, 209, 211, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 287, 289, 291, 297, 404, 409, 452, 460, 466, 467, 472, 473, 479, 483, 484, 488, 490, 492, 503, 517, 523, 537, 552, 568, 581], "sigma1": 31, "sigma2": 31, "sigma_": [209, 537], "sigma_1": [31, 49, 154, 485], "sigma_10tev": [404, 490], "sigma_1tev": [404, 490], "sigma_2": [31, 49, 154, 485], "sigma_3": [154, 485], "sigma_err": 467, "sigma_gauss": 237, "sigma_laplac": 237, "sigma_m": 537, "sigma_nod": 490, "sigma_to_t": 581, "sigmav": 507, "sign": [214, 216, 289, 291, 384, 407, 428, 443, 517, 581], "signal": [83, 102, 105, 108, 109, 110, 178, 206, 263, 289, 291, 305, 405, 451, 456, 457, 462, 465, 473, 488, 503, 507, 522, 526, 528, 578, 580, 581, 582], "signif_avg": 505, "signific": [77, 118, 122, 123, 124, 125, 132, 133, 135, 144, 145, 287, 289, 291, 295, 371, 372, 379, 386, 387, 388, 389, 396, 397, 401, 402, 405, 407, 428, 429, 437, 440, 441, 446, 447, 448, 450, 451, 456, 457, 463, 464, 465, 466, 467, 473, 476, 478, 479, 481, 483, 484, 496, 499, 503, 505, 517, 519, 577, 578, 579], "significance_lima": 428, "significance_map": [462, 464], "significance_map_off": 462, "significance_mask": 488, "significance_mask_inv": 488, "significancemapestim": 428, "significantli": [432, 452, 468, 494], "signoff": 384, "silent": [443, 448], "silvia": 424, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 372, 381, 384, 393, 394, 395, 396, 397, 400, 401, 402, 405, 432, 446, 458, 479, 483, 487, 491, 492, 505, 515, 523, 579], "similarli": [387, 389, 405, 408, 432, 481, 484, 485, 487, 488, 490, 532], "simlat": 290, "simon": [445, 446, 447], "simpifi": 390, "simpl": [50, 52, 141, 221, 225, 234, 237, 250, 261, 262, 266, 272, 276, 280, 381, 382, 393, 394, 395, 396, 397, 400, 405, 408, 409, 422, 432, 436, 440, 441, 446, 451, 453, 454, 456, 457, 458, 459, 461, 464, 476, 478, 479, 483, 484, 487, 488, 491, 497, 503, 504, 505, 509, 519, 577, 578, 579], "simple_norm": 206, "simple_rebin_lc": 396, "simplefilt": 519, "simpler": [181, 389, 394, 395, 403], "simplest": [451, 456, 479], "simplex": [211, 484], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 170, 211, 215, 217, 381, 395, 396, 405, 413, 414, 415, 443, 446, 451, 452, 453, 466, 482, 488, 489, 490, 505, 532, 579, 581], "simplic": [465, 468, 484, 490, 492, 495], "simplif": [392, 404, 443], "simplifi": [133, 200, 388, 390, 392, 399, 405, 422, 425, 426, 427, 429, 432, 436, 443, 452, 454, 460, 524, 582], "simu": [472, 475, 492], "simul": [45, 83, 88, 93, 102, 105, 108, 109, 110, 113, 152, 163, 166, 290, 338, 391, 394, 397, 401, 408, 409, 413, 420, 424, 426, 428, 434, 437, 439, 440, 441, 446, 447, 448, 450, 455, 461, 464, 466, 471, 476, 477, 489, 492, 494, 499, 509, 524, 577], "simulate_3d": [401, 441, 450, 471, 472], "simulate_dataset": [422, 426, 427], "simulate_observ": 93, "simulated_d": 458, "simulated_data": 93, "simulated_model": 458, "simultan": [409, 475, 482, 490, 492, 515], "sin": [536, 537, 538, 572], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 87, 91, 194, 204, 356, 381, 382, 387, 391, 395, 397, 398, 399, 400, 401, 405, 407, 408, 409, 411, 432, 442, 443, 444, 445, 446, 447, 448, 452, 458, 462, 464, 474, 475, 478, 482, 489, 490, 492, 494, 496, 551, 580, 583], "sine": [263, 392, 450, 533, 575], "sine_model": 572, "sinetemporalmodel": [271, 490, 572], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 122, 126, 127, 130, 133, 151, 152, 163, 165, 166, 169, 173, 175, 180, 183, 184, 189, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 224, 248, 381, 387, 388, 391, 393, 394, 395, 396, 397, 398, 402, 403, 408, 409, 413, 420, 422, 427, 428, 440, 446, 447, 451, 456, 458, 460, 461, 462, 473, 475, 481, 482, 486, 487, 489, 492, 496, 497, 503, 505, 515, 517, 529, 531, 532, 576, 578], "singleobscubemak": 387, "singleobsimagemak": 387, "singleton": 332, "sinha": [393, 396, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 440, 441, 442, 443, 444, 445, 446, 447, 448], "sink": 398, "sinu": [263, 490], "sinusoid": [263, 572], "sipocz": [398, 422, 424, 426, 428, 437, 438, 439, 440, 441, 442], "sip\u0151cz": [443, 448], "sit": 384, "site": [345, 411, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 543, 551, 567, 579], "situat": [395, 396, 398, 524], "six": [400, 406], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 102, 103, 105, 108, 109, 110, 112, 113, 114, 115, 117, 128, 133, 136, 147, 148, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 166, 168, 169, 175, 176, 177, 180, 181, 182, 190, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 209, 218, 219, 221, 222, 225, 226, 228, 229, 230, 234, 235, 237, 241, 242, 245, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 299, 330, 331, 335, 336, 337, 338, 369, 381, 389, 392, 394, 395, 413, 415, 445, 447, 451, 458, 462, 464, 468, 474, 476, 481, 486, 487, 488, 490, 494, 495, 496, 497, 505, 515, 530, 536, 537, 583], "skeleton": 397, "sketch": 397, "skill": [384, 417], "skimag": 441, "skip": [16, 82, 84, 90, 104, 124, 161, 369, 382, 384, 393, 395, 401, 439, 478, 489], "skip_miss": [82, 440], "sklearn": 381, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 102, 105, 108, 109, 110, 118, 141, 151, 152, 163, 166, 186, 192, 193, 194, 196, 201, 202, 204, 205, 206, 224, 248, 264, 276, 280, 282, 310, 314, 315, 339, 341, 343, 368, 380, 381, 382, 394, 400, 413, 422, 424, 438, 439, 441, 452, 456, 457, 459, 460, 462, 472, 475, 476, 481, 487, 490, 494, 495, 499, 501, 503, 504, 505, 507, 514, 515, 516, 519, 524, 525, 528, 530, 532, 536, 537, 541, 542, 543, 577, 578], "sky_circl": [91, 96, 474, 478, 491, 504], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 115, 117, 396, 452, 473, 474, 478, 481, 489, 490, 504, 547], "sky_model_pntpwl": 468, "sky_reg": 480, "sky_reg_rec": 480, "sky_region": 89, "skycood": 392, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 102, 105, 109, 110, 112, 113, 123, 125, 127, 129, 151, 152, 158, 163, 166, 176, 177, 179, 181, 183, 184, 186, 187, 189, 190, 192, 193, 194, 196, 199, 201, 202, 204, 205, 206, 207, 220, 221, 224, 225, 234, 237, 248, 250, 252, 261, 262, 264, 266, 272, 274, 276, 306, 307, 340, 341, 357, 377, 382, 392, 395, 405, 408, 451, 453, 456, 458, 459, 462, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 504, 505, 519, 523, 528, 530, 532, 540], "skycoord_from_t": 395, "skycoord_to_pixel_scale_angl": 395, "skycoordconfig": 16, "skycub": [387, 400, 438, 439, 440, 441], "skydiffusecub": [392, 404, 423, 428, 429, 441], "skydiffusemap": [392, 423], "skydir": [16, 83, 102, 105, 109, 110, 111, 116, 152, 163, 173, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 456, 457, 458, 461, 462, 464, 466, 467, 468, 469, 472, 473, 476, 480, 482, 485, 486, 487, 488, 490, 495, 496, 503, 504, 526, 528, 529, 530, 532, 537, 538, 539, 540], "skydirfunct": 507, "skydisk": 423, "skydiskelong": 392, "skyellips": [422, 423, 424, 425], "skygaussian": 422, "skygaussianelong": 392, "skyimag": [387, 400, 438, 439, 440, 441], "skyimagelist": 438, "skymap": [193, 194, 196, 202, 205, 206, 395, 437, 438, 469], "skymap_band": [469, 574], "skymap_region": 469, "skymask": 439, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 101, 102, 105, 109, 110, 115, 117, 123, 125, 131, 133, 134, 143, 170, 211, 224, 244, 248, 282, 287, 392, 393, 394, 396, 402, 404, 405, 422, 426, 427, 428, 432, 441, 447, 452, 453, 454, 456, 457, 458, 459, 460, 461, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 478, 481, 482, 483, 484, 489, 492, 495, 503, 504, 514, 515, 517, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576], "skypointsourc": 425, "skyregion": [100, 102, 105, 109, 110, 127, 151, 152, 158, 163, 166, 176, 177, 181, 196, 201, 202, 206, 224, 248, 339, 342, 395, 453, 468, 470, 488, 490, 523, 528, 532], "skyspatialmodel": [392, 441], "slack": [383, 384, 388, 404, 410, 416, 421, 422, 579], "slew": 95, "slice": [83, 87, 91, 100, 102, 105, 109, 110, 120, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 274, 276, 300, 387, 429, 467, 470, 474, 482, 483, 494, 531], "slice_by_coord": [123, 125, 447], "slice_by_energi": [100, 102, 105, 109, 110, 123, 125, 274, 429, 482], "slice_by_idx": [102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 429, 441, 443, 470, 474, 483, 487, 495], "slice_by_tim": [123, 125], "sliced_ax": 197, "sliced_geom": [191, 192, 201, 204], "sliced_lc": 474, "slide": [390, 460, 481], "slider": 487, "sliderstyl": [464, 472, 487, 503, 504], "slightli": [118, 198], "slope": [27, 423], "slow": [87, 91, 211, 388, 397, 457, 484, 503, 504], "slower": [87, 91, 194, 381, 389, 399], "slowest": 411, "small": [372, 381, 387, 389, 395, 397, 398, 401, 403, 408, 411, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 473, 474, 487, 492, 494, 495, 496, 497, 537, 541, 542, 578, 579], "smaller": [27, 152, 163, 166, 181, 192, 193, 194, 196, 202, 205, 206, 374, 384, 422, 441, 468, 474, 479, 484, 487, 492, 537], "smallest": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 260, 265, 267, 268, 269, 270, 273, 277, 460], "smooth": [102, 105, 109, 110, 118, 128, 129, 141, 194, 206, 225, 265, 373, 376, 432, 437, 438, 439, 441, 442, 450, 462, 464, 466, 470, 472, 476, 482, 486, 487, 489, 495, 503, 504, 505, 533, 536, 565], "smooth_kernel": [102, 105], "smooth_radiu": [102, 105], "smoothbrokenpowerlawspectralmodel": [218, 259, 404, 427, 428, 490, 560], "sn": [45, 50, 52, 53], "sn_rate": [45, 509], "snippet": [382, 401, 519], "snr": [44, 50, 53, 67, 495, 512, 513], "snr_model": 513, "snrcat": [436, 481], "snrtruelovemcke": [50, 512, 513], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 101, 105, 110, 122, 126, 128, 130, 131, 133, 134, 143, 146, 151, 152, 158, 163, 166, 190, 193, 194, 196, 198, 202, 205, 206, 211, 214, 216, 237, 276, 287, 356, 364, 371, 372, 381, 382, 384, 386, 387, 388, 389, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 408, 410, 412, 413, 415, 417, 422, 424, 432, 442, 444, 445, 448, 453, 456, 458, 460, 461, 466, 467, 468, 472, 473, 480, 481, 483, 484, 487, 488, 490, 492, 494, 495, 496, 499, 504, 519, 526, 528, 532, 538, 542, 579, 580, 581, 582], "social": 407, "soft": 296, "softwar": [193, 194, 196, 205, 206, 395, 396, 398, 407, 408, 411, 487, 519], "solar": 52, "sole": [391, 407], "solid": [191, 192, 201, 204, 221, 225, 234, 237, 250, 261, 262, 266, 272, 276, 280, 397, 420, 422, 423, 424, 441, 462, 486, 487, 494, 522, 528, 578], "solid_angl": [191, 192, 201, 204, 487, 532], "solut": [19, 20, 26, 52, 134, 143, 150, 218, 219, 222, 226, 228, 229, 230, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 275, 277, 382, 384, 386, 388, 389, 394, 395, 397, 398, 399, 401, 403, 405, 409, 414, 483, 515, 517, 519, 582], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 384, 389, 391, 392, 393, 394, 434, 519], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 104, 124, 179, 200, 308, 316, 384, 386, 387, 388, 389, 390, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 418, 420, 422, 424, 432, 433, 435, 437, 439, 440, 441, 446, 451, 453, 454, 456, 458, 460, 461, 462, 465, 466, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 486, 487, 489, 490, 492, 494, 495, 504, 505, 507, 508, 515, 516, 519, 524, 529, 531, 579, 580, 581, 583], "some_class": 381, "some_map": 161, "some_map_convolv": 161, "somehow": [389, 395, 400], "someon": [384, 386, 401], "someth": [87, 91, 381, 382, 383, 384, 386, 389, 395, 398, 399, 401, 411, 413, 415, 459, 481, 532, 579], "sometim": [19, 20, 83, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 359, 381, 384, 388, 395, 401, 411, 413, 484, 519, 578, 583], "somewhat": [398, 494], "somewher": [384, 398, 411], "soon": [384, 395, 411], "sort": [82, 83, 87, 91, 101, 141, 344, 349, 350, 381, 398, 423, 448, 505], "sort_kei": [344, 349, 350], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 386, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 411, 413, 418, 420, 422, 426, 427, 432, 433, 438, 439, 440, 441, 446, 447, 448, 450, 452, 454, 455, 457, 458, 459, 461, 462, 463, 464, 465, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 493, 495, 496, 497, 499, 501, 503, 504, 507, 508, 513, 515, 517, 519, 524, 527, 528, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581], "source1": 490, "source2": 490, "source_1": [392, 397], "source_2": 392, "source_42": 397, "source_fermi_3fgl": 454, "source_fermi_3fhl": 454, "source_gammacat": 454, "source_irf_model": 392, "source_librari": 494, "source_model": 558, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 481, 505], "source_name_alia": 56, "source_name_kei": 56, "source_po": [462, 466, 486], "source_population_model": [401, 426], "source_posit": [451, 467, 491], "sourcebackground": 392, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 395, 432, 481, 488, 505, 514], "sourcecatalog1lhaaso": [55, 70, 481], "sourcecatalog2fhl": [55, 71, 481, 514], "sourcecatalog2hwc": [55, 72, 481, 514], "sourcecatalog2pc": [55, 481], "sourcecatalog3fgl": [55, 74, 454, 481, 514], "sourcecatalog3fhl": [55, 75, 454, 481, 489, 505, 514], "sourcecatalog3hwc": [55, 76, 481, 514], "sourcecatalog3pc": [55, 481], "sourcecatalog4fgl": [55, 78, 434, 452, 481, 514], "sourcecataloggammacat": [55, 79, 454, 481, 514], "sourcecataloghgp": [55, 80, 81, 481, 514], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 481, 514], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 421, 481], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 392, "sources_flux_map": 460, "sourcetempl": 392, "south": [468, 469, 494], "south_z20_50h": [82, 148, 152, 153, 154, 163, 451, 459, 472, 475, 485, 494], "south_z40_50h": 494, "southaz": 494, "southern": 494, "space": [87, 91, 102, 105, 109, 110, 203, 206, 272, 273, 290, 319, 337, 380, 381, 391, 397, 403, 476, 482, 484, 487, 531, 555, 564], "span": 491, "spars": [192, 193, 194, 196, 201, 204, 205, 206, 423, 432, 440, 469, 487], "sparsif": 405, "sparsifi": [193, 194, 196, 205, 206], "spatail": 133, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 102, 105, 109, 110, 112, 113, 123, 125, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 175, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 215, 217, 220, 221, 224, 225, 232, 234, 237, 248, 250, 252, 258, 261, 262, 264, 266, 272, 274, 276, 287, 374, 376, 381, 387, 390, 393, 394, 395, 397, 399, 400, 405, 413, 421, 422, 424, 425, 426, 427, 429, 432, 440, 441, 443, 446, 447, 448, 450, 452, 454, 457, 459, 460, 461, 464, 465, 467, 468, 469, 470, 472, 474, 475, 476, 478, 481, 482, 483, 486, 489, 493, 495, 499, 503, 507, 508, 515, 517, 519, 520, 530, 531, 544, 576, 577, 578], "spatial_bin_s": [112, 113], "spatial_bin_size_min": [112, 113], "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 115, 117, 133, 225, 232, 264, 274, 287, 396, 426, 452, 460, 464, 466, 467, 468, 469, 472, 473, 474, 478, 481, 482, 489, 490, 495, 504, 535, 536, 537, 538, 539, 540, 541, 542, 543], "spatial_model_point": 468, "spatial_model_registri": 490, "spatial_par": 404, "spatial_typ": 404, "spatial_width": [112, 113], "spatial_width_max": [112, 113], "spatialbackground": 392, "spatialcircleconfig": 16, "spatialconst": 392, "spatialgaussian": 392, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 220, 221, 225, 232, 234, 237, 250, 252, 261, 262, 264, 272, 274, 276, 392, 404, 426, 441, 445, 481, 490, 504, 507, 514, 533, 576], "spatialtempl": 392, "spatiamodel": 161, "speak": 484, "spec": [80, 110, 381, 395, 437, 464, 469, 481, 494, 504], "spec_model_tru": 476, "special": [87, 91, 237, 381, 391, 393, 395, 396, 404, 407, 408, 421, 448, 461, 481, 482, 483, 489, 490], "specialis": [395, 401], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 91, 94, 102, 105, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 169, 183, 184, 189, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 211, 239, 274, 287, 370, 380, 381, 382, 384, 386, 391, 393, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 411, 413, 414, 426, 429, 432, 434, 443, 444, 446, 452, 453, 456, 458, 459, 462, 464, 465, 470, 472, 475, 476, 482, 484, 485, 487, 488, 491, 492, 497, 499, 505, 515, 516, 517, 519, 521, 522, 523, 525, 530, 531, 532, 583], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 90, 91, 92, 96, 101, 102, 104, 105, 109, 110, 118, 120, 123, 124, 125, 126, 128, 130, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 168, 179, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 204, 205, 206, 224, 239, 248, 287, 308, 310, 314, 319, 368, 391, 398, 403, 406, 414, 425, 428, 432, 448, 452, 458, 461, 462, 464, 467, 470, 472, 482, 483, 484, 485, 486, 487, 489, 490, 494, 504, 515, 517, 530], "spectra": [26, 109, 110, 126, 131, 146, 211, 259, 280, 287, 387, 390, 392, 394, 396, 400, 404, 420, 424, 437, 441, 452, 453, 458, 459, 465, 469, 473, 475, 476, 482, 483, 484, 486, 490, 492, 507, 515, 517, 519, 578], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 101, 102, 105, 109, 110, 118, 122, 123, 125, 126, 127, 130, 132, 133, 140, 161, 163, 166, 170, 215, 217, 218, 219, 222, 224, 226, 228, 229, 230, 232, 235, 239, 241, 242, 245, 246, 248, 249, 251, 253, 254, 255, 259, 260, 264, 265, 267, 268, 269, 270, 273, 274, 275, 277, 280, 281, 296, 335, 387, 390, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 405, 413, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 455, 459, 460, 461, 464, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 481, 482, 483, 484, 486, 488, 489, 492, 493, 494, 495, 503, 504, 507, 508, 514, 515, 517, 518, 519, 520, 526, 527, 528, 535, 536, 537, 538, 539, 540, 541, 542, 543, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580], "spectral_analysi": [450, 455, 456], "spectral_analysis_hli": [450, 455, 457], "spectral_analysis_rad_max": [450, 455, 458], "spectral_cub": 433, "spectral_index": [19, 20, 26, 52, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277], "spectral_index_error": [19, 20, 26, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 446], "spectral_irf_model": 392, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 101, 109, 110, 115, 117, 118, 122, 127, 131, 132, 133, 140, 161, 163, 166, 170, 211, 224, 232, 246, 248, 264, 274, 287, 396, 399, 403, 404, 405, 409, 429, 448, 451, 452, 453, 454, 456, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 481, 482, 483, 484, 489, 490, 492, 495, 504, 505, 517, 526, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "spectral_model1": 475, "spectral_model2": 475, "spectral_model_pwl": 468, "spectral_model_registri": 490, "spectral_par": 404, "spectral_point": 397, "spectral_typ": 404, "spectralbackground": 392, "spectralbackgroundmodel": 393, "spectralcompoundmodel": 392, "spectralconst": 392, "spectralevalu": 392, "spectralexponentialcutoffpowerlaw3fgl": 400, "spectralgaussian": [392, 424], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 101, 118, 122, 123, 125, 127, 132, 140, 161, 163, 166, 170, 218, 219, 222, 224, 226, 228, 229, 230, 232, 235, 241, 242, 245, 248, 249, 251, 253, 254, 255, 260, 264, 265, 268, 269, 270, 273, 274, 277, 280, 392, 393, 396, 399, 405, 429, 432, 439, 446, 448, 481, 490, 504, 505, 514, 533, 576], "spectralregion": 395, "spectraltempl": 392, "spectroscopi": [448, 450, 474, 477, 499, 528], "spectrum": [19, 20, 26, 72, 76, 98, 100, 101, 102, 105, 106, 109, 110, 123, 125, 130, 132, 137, 163, 166, 171, 175, 179, 180, 193, 194, 196, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 280, 281, 290, 296, 378, 387, 392, 393, 396, 397, 400, 401, 402, 413, 423, 424, 425, 426, 428, 432, 434, 437, 438, 439, 440, 441, 443, 445, 448, 450, 453, 454, 455, 457, 464, 465, 468, 469, 470, 475, 480, 481, 482, 488, 490, 494, 495, 499, 503, 505, 507, 515, 519, 524, 532, 546, 549, 550, 552, 553, 557, 558, 560, 561, 562, 563, 579], "spectrum_analysi": 456, "spectrum_dataset": [146, 393, 476, 482], "spectrum_dataset_1": 393, "spectrum_dataset_2": 393, "spectrum_dataset_empti": [476, 486], "spectrum_dataset_mak": [476, 486], "spectrum_dataset_on_off": 476, "spectrum_fitting_with_sherpa": 401, "spectrum_mak": 451, "spectrum_simul": [401, 450, 455, 459], "spectrumanalysisiact": [397, 425, 439], "spectrumdataset": [98, 99, 100, 102, 105, 110, 130, 132, 146, 174, 175, 179, 180, 232, 402, 423, 424, 425, 426, 427, 428, 429, 432, 435, 451, 453, 456, 458, 459, 466, 474, 475, 476, 478, 484, 486, 492, 528, 580], "spectrumdatasetmak": [171, 426, 432, 451, 453, 456, 458, 459, 466, 474, 475, 476, 478, 486, 528], "spectrumdatasetonoff": [98, 105, 106, 107, 109, 131, 132, 146, 174, 175, 211, 287, 378, 396, 423, 424, 425, 427, 428, 444, 445, 446, 451, 452, 453, 456, 457, 459, 465, 466, 473, 476, 478, 482, 483, 484, 486, 492, 515, 517, 580], "spectrumdatasetonoffstack": 425, "spectrumdatasetsonoff": 393, "spectrumenergygroup": 440, "spectrumevalu": 428, "spectrumextract": [396, 423, 426, 439], "spectrumfit": [423, 439, 440, 441], "spectrumobserv": [393, 423, 439], "spectrumobservationlist": [423, 438], "spectrumobservationstack": 438, "spectrumonoffdataset": 396, "spectrumresult": 423, "spectrumsimul": [424, 438, 441], "spectrumstack": 440, "spectrumstat": 424, "specutil": 395, "speed": [133, 308, 384, 414, 424, 426, 434, 440, 441, 448, 484], "spell": [386, 519], "spend": [394, 401], "spent": [388, 486], "sphere": [47, 336, 420, 422, 531, 536, 537, 540], "spherepointpick": 336, "spheric": [47, 381, 422, 531, 577], "sphericalcircleskyregion": [400, 476, 505], "sphinx": [384, 388, 401, 411, 423, 427, 434, 440, 441, 443, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "sphinx_gallery_conf": 411, "sphinx_gallery_thumbnail_numb": [382, 452, 456, 458, 460, 462, 467, 470, 485, 545], "sphinxext": 382, "spill": 486, "spin": [50, 51, 54, 424, 511], "spir": [422, 441], "spiral": [33, 34, 38, 45, 436], "spiralarm": [33, 38, 45, 440, 509], "spiralarm_index": [33, 34, 38], "spirit": 407, "split": [19, 20, 87, 91, 92, 115, 117, 123, 125, 193, 194, 196, 202, 205, 206, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 387, 389, 391, 393, 395, 396, 400, 402, 404, 413, 429, 447, 474, 490, 508, 584], "split_by_axi": [193, 194, 196, 202, 205, 206], "split_template_model": [115, 117], "sporad": 408, "spot": 381, "spread": [82, 88, 154, 163, 166, 381, 403, 429, 451, 460, 485, 524, 578], "spring": [391, 442], "sprint": [389, 390, 394, 397, 398, 399, 400, 402], "spuriou": 141, "sqrt": [19, 20, 30, 31, 32, 67, 101, 102, 105, 109, 110, 118, 123, 125, 128, 133, 193, 194, 196, 198, 202, 205, 206, 209, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 288, 297, 320, 321, 322, 393, 453, 456, 460, 462, 464, 470, 472, 476, 479, 481, 484, 486, 487, 489, 495, 503, 504, 505, 517, 537, 538, 541, 542, 552, 581], "sqrt_space": [400, 426], "sqrt_t": [118, 122, 123, 125, 133, 141, 142, 146, 289, 291, 374, 405, 417, 429, 453, 456, 457, 460, 462, 464, 466, 476, 481, 482, 483, 488, 496, 503, 505, 517, 579, 581], "sqrt_ts_min": [146, 456], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 122, 123, 124, 125, 127, 133, 460, 470, 473, 474, 481, 482, 483, 503, 505], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 102, 105, 123, 124, 150, 151, 152, 158, 163, 166, 169, 190, 204, 206, 274, 294, 396, 399, 429, 488, 492, 507, 517, 531, 579, 580, 581, 582], "squash": [152, 191, 192, 195, 197, 198, 201, 203, 204, 446, 451, 462, 482, 487], "squeez": [451, 485], "sr": [147, 148, 149, 160, 191, 192, 201, 204, 221, 276, 280, 451, 459, 461, 464, 466, 472, 475, 481, 482, 485, 487, 490, 494, 495, 524, 535, 543], "src": [394, 452, 467, 515], "src_above_bkg": 467, "src_event": [468, 469], "src_posit": [468, 469], "srcmap": [192, 193, 194, 196, 205, 206, 487], "ssc": [58, 60, 61, 62, 64, 65, 249, 401, 558], "ssc_model": 249, "st": [53, 484, 495], "stabil": [19, 20, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 406, 472], "stabl": [11, 87, 91, 201, 211, 308, 388, 389, 390, 397, 398, 401, 406, 410, 411, 412, 414, 426, 427, 428, 434, 439, 441, 443, 484, 516], "stack": [16, 83, 86, 92, 100, 101, 102, 104, 105, 109, 110, 122, 123, 125, 134, 143, 151, 152, 158, 163, 166, 169, 193, 194, 195, 196, 201, 202, 205, 206, 209, 215, 217, 274, 351, 381, 393, 396, 397, 403, 408, 422, 425, 426, 429, 432, 437, 438, 443, 444, 446, 448, 452, 453, 457, 461, 465, 466, 473, 476, 482, 484, 486, 491, 492, 503, 504, 516, 517, 526, 529], "stack_dataset": [169, 476, 486], "stack_reduc": [100, 146, 211, 425, 453, 456, 458, 464, 465, 466, 476, 482, 484, 517], "stacked_dataset": [466, 467], "stacked_fit": 456, "stacked_on_off": 462, "stackedobscubemak": 387, "stackedobsimagemak": 387, "stackoverflow": 348, "stage": [384, 397, 462, 464, 475, 482, 515, 578], "stai": [393, 410], "stand": 386, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 194, 206, 211, 233, 281, 290, 307, 363, 364, 381, 382, 384, 386, 390, 392, 393, 394, 397, 399, 405, 407, 408, 417, 424, 425, 441, 447, 451, 452, 457, 459, 462, 465, 467, 469, 472, 474, 475, 478, 480, 484, 487, 490, 491, 492, 494, 497, 499, 503, 515, 518, 523, 531, 577, 578, 579], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 306, 491], "standardis": [353, 354, 366, 440], "standardise_unit": [353, 367], "standpoint": 381, "stapel": [447, 448], "star": [36, 40, 226], "starmap": [324, 328, 329], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 130, 141, 203, 223, 224, 231, 236, 238, 239, 240, 248, 256, 263, 275, 278, 381, 382, 384, 386, 388, 389, 390, 391, 394, 395, 397, 398, 406, 407, 409, 410, 411, 415, 416, 417, 418, 420, 425, 434, 437, 438, 439, 440, 441, 446, 448, 450, 451, 452, 453, 454, 456, 457, 458, 460, 461, 462, 464, 466, 467, 468, 469, 470, 473, 474, 475, 476, 478, 479, 480, 481, 483, 487, 490, 494, 495, 496, 499, 503, 505, 506, 519, 523, 577], "start_po": [127, 341, 470], "startswith": 381, "stat": [6, 100, 101, 105, 110, 123, 125, 126, 127, 130, 131, 133, 211, 212, 214, 216, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 374, 381, 393, 401, 409, 411, 417, 424, 426, 427, 428, 429, 432, 438, 441, 442, 443, 447, 448, 453, 454, 456, 457, 458, 460, 462, 464, 465, 466, 467, 470, 474, 476, 478, 479, 483, 484, 492, 495, 503, 504, 517, 579, 580, 581], "stat_arrai": [99, 101, 102, 105, 109, 110, 409, 448], "stat_contour": 211, "stat_kwarg": 101, "stat_max": [289, 291], "stat_nul": [123, 125, 126, 127, 130, 131, 133, 289, 291, 447, 460, 470, 474, 483, 517], "stat_per_bin": 393, "stat_profil": [211, 452, 484, 492, 519], "stat_scan": [101, 123, 125, 126, 127, 130, 131, 133, 134, 143, 211, 288, 448, 452, 456, 474, 483, 484, 492, 517], "stat_sum": [99, 100, 101, 102, 105, 109, 110, 409, 445, 446, 464, 475, 482, 489, 519], "stat_surfac": [211, 429, 519], "stat_typ": [101, 102, 105, 109, 110, 427, 456, 464, 475, 482, 489], "state": [16, 45, 47, 203, 211, 381, 387, 391, 393, 397, 401, 403, 405, 452, 457, 503, 524, 545], "stateless": 408, "statement": [381, 384, 388, 445, 447, 508], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 108, 118, 122, 123, 125, 126, 127, 130, 131, 133, 154, 162, 173, 179, 180, 192, 193, 194, 196, 202, 203, 205, 206, 218, 220, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 253, 254, 255, 256, 261, 262, 263, 265, 268, 269, 270, 275, 277, 278, 279, 378, 389, 392, 411, 423, 440], "staticmethod": [392, 404, 409, 490, 492], "statist": [6, 19, 20, 26, 79, 99, 100, 101, 102, 105, 109, 110, 122, 123, 125, 126, 127, 130, 131, 133, 142, 146, 173, 211, 213, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 260, 265, 267, 268, 269, 270, 273, 277, 287, 288, 289, 291, 292, 293, 298, 305, 393, 396, 399, 400, 401, 403, 409, 423, 427, 428, 429, 432, 434, 446, 447, 451, 452, 457, 459, 460, 461, 462, 464, 466, 470, 472, 473, 475, 476, 479, 482, 484, 486, 492, 503, 504, 515, 517, 519, 526, 529, 577, 578], "statu": [19, 20, 26, 123, 125, 210, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 381, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 442, 447, 489, 490], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 290, 307, 459, 479, 495], "stddev": 68, "stderr": 381, "stdout": [316, 381], "steadi": 452, "steep": 459, "stefan": [436, 447, 448], "step": [19, 20, 26, 122, 126, 130, 131, 133, 211, 212, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 381, 384, 387, 388, 391, 392, 393, 395, 396, 397, 399, 402, 406, 409, 410, 411, 417, 434, 441, 442, 446, 451, 456, 458, 461, 464, 466, 467, 468, 469, 474, 475, 482, 483, 484, 486, 490, 492, 503, 504, 505, 519, 527, 532], "stepprior": 409, "stepsiz": 168, "steradian": 201, "stewart": [133, 300, 460, 578], "stewart2009": [133, 578, 581], "stick": [384, 404, 422, 441, 484, 578], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 388, 389, 391, 394, 395, 398, 400, 401, 402, 405, 406, 408, 410, 411, 439, 440, 441, 490, 492, 505, 517, 541, 542, 579], "stipul": 407, "stone": [381, 401], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 130, 133, 203, 223, 224, 231, 236, 238, 239, 240, 248, 256, 263, 275, 278, 391, 417, 446, 457, 461, 462, 464, 474, 476, 478, 484, 495, 503], "storag": [82, 519], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 82, 83, 85, 86, 87, 91, 123, 124, 125, 128, 130, 161, 174, 175, 193, 194, 196, 202, 205, 206, 211, 212, 214, 216, 224, 248, 364, 381, 382, 384, 387, 389, 390, 391, 393, 394, 397, 399, 403, 405, 407, 408, 411, 429, 432, 433, 448, 453, 458, 459, 468, 469, 476, 478, 479, 482, 483, 484, 485, 486, 487, 488, 491, 494, 495, 496, 497, 505, 515, 516, 519, 524, 525, 526, 531, 532, 555, 576, 577, 579, 583], "store_per_ob": 397, "store_trac": [211, 484], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 120, 122, 123, 124, 125, 126, 128, 130, 131, 133, 134, 136, 137, 138, 139, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 170, 173, 174, 179, 180, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 282, 308, 320, 329, 344, 345, 346, 350, 363, 364, 366, 370, 374, 375, 377, 395, 408, 456, 458, 478, 486, 490], "str3": [87, 91], "straight": [382, 413, 519], "straightforward": [411, 582], "strang": 381, "strategi": [287, 381, 388, 395, 446, 484, 582], "stream": 381, "streil": [409, 445, 446, 447], "strength": [51, 54, 409, 555], "stretch": [193, 194, 196, 202, 205, 206, 371, 372, 376, 460, 464, 470, 472, 486, 487, 489, 495, 503, 504, 505], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 104, 105, 124, 151, 152, 158, 163, 166, 169, 198, 204, 206, 274, 448], "strict_bound": 198, "strictli": [16, 84, 90, 104, 124, 198], "strike": 515, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 104, 123, 124, 125, 126, 127, 130, 133, 154, 160, 162, 164, 169, 192, 193, 194, 196, 198, 199, 201, 202, 204, 205, 206, 214, 216, 224, 248, 308, 326, 370, 381, 394, 395, 398, 400, 407, 408, 420, 424, 432, 434, 457, 481, 488, 490, 503, 531, 532], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 394, 401, 456], "stronger": 492, "strongli": [296, 396, 398, 407, 432, 461, 484, 492], "structur": [87, 91, 204, 304, 385, 386, 387, 390, 392, 394, 397, 401, 404, 407, 408, 419, 425, 426, 428, 432, 435, 447, 448, 450, 470, 482, 483, 486, 487, 488, 490, 499, 506, 507, 516, 520, 531, 532, 579], "stuck": 579, "student": 384, "studi": [46, 280, 304, 394, 397, 405, 414, 441, 448, 453, 454, 465, 466, 467, 470, 472, 474, 475, 478, 484, 487, 490, 494, 509, 519, 528, 580], "stuff": [382, 411, 519], "stuff1": 381, "stuff2": 381, "style": [87, 91, 101, 193, 194, 196, 202, 205, 206, 378, 384, 390, 407, 436, 438, 464, 472, 485, 487, 503, 504, 519, 532], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 109, 110, 115, 117, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 193, 194, 195, 196, 198, 202, 203, 205, 206, 209, 381, 384, 388, 390, 391, 395, 400, 401, 402, 403, 408, 411, 420, 422, 426, 428, 429, 437, 439, 440, 466, 468, 483, 486, 488, 490, 496, 497, 515, 518, 519, 527, 577, 579, 583], "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 124, 308, 395, 438, 441, 490, 492], "subcompon": [67, 80], "subfold": [389, 432], "submit": [386, 407], "submodul": [389, 422, 423, 428, 487, 505, 517], "subok": 308, "subpackag": [402, 408, 425, 432, 436], "subplot": [66, 67, 193, 194, 196, 202, 205, 206, 451, 453, 454, 456, 457, 458, 459, 460, 462, 464, 465, 466, 470, 473, 475, 476, 478, 480, 483, 484, 485, 487, 488, 489, 491, 492, 504, 519, 521, 528, 538, 542, 545], "subplot_kw": [460, 462, 466, 476, 488, 528], "subplots_adjust": [474, 479, 480, 481], "subsect": [401, 487], "subsequ": [295, 390], "subset": [82, 83, 87, 91, 126, 130, 133, 249, 408, 436, 437, 466, 476, 489, 494, 496, 518, 577], "subspac": 395, "substanti": [87, 91], "substitut": 580, "substr": [224, 248], "subtract": 458, "succeed": 123, "success": [16, 84, 90, 101, 104, 123, 124, 125, 126, 127, 130, 131, 133, 210, 211, 212, 213, 409, 410, 432, 453, 454, 456, 457, 458, 460, 464, 465, 466, 470, 473, 474, 476, 478, 483, 484, 489, 495, 503, 504, 543], "successfulli": [101, 410, 453, 454, 456, 457, 458, 464, 465, 466, 475, 476, 478, 483, 484, 495, 503, 504], "sudo": 414, "suffer": [398, 476], "suffic": 475, "suffici": [384, 387, 394, 407, 446, 519], "suffix": [101, 123, 382, 392, 404, 490, 531, 533], "suggest": [384, 386, 388, 391, 395, 401, 403, 405, 409, 460, 468, 469, 519, 579], "suit": [194, 381, 532], "suitabl": 194, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 102, 105, 109, 110, 125, 126, 127, 129, 130, 131, 133, 134, 135, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 193, 194, 196, 202, 205, 206, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 280, 289, 291, 293, 377, 381, 391, 392, 394, 403, 405, 409, 423, 447, 460, 464, 468, 476, 480, 482, 492, 495, 503, 504, 505, 515, 525, 578, 580], "sum_": 515, "sum_band": [193, 194], "sum_i": 128, "sum_j": 515, "sum_k": 515, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [193, 194, 196, 202, 205, 206, 369, 441, 462, 464, 470, 476, 482, 486, 488, 489, 495, 504], "sum_over_energy_group": [122, 126, 133, 460, 466, 470], "summar": [390, 507], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 289, 291, 316, 320, 330, 355, 368, 382, 384, 401, 419, 453, 457, 474, 475, 482, 494, 503, 519], "summaris": [381, 386, 388, 401], "summat": [289, 291, 387], "summer": 389, "sun": 41, "sunpi": [398, 401, 402], "super": [192, 194, 268, 269, 270, 450, 458, 468, 497, 533, 565, 567], "superexpcutoffpowerlaw3fglspectralmodel": [259, 404, 490, 561], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 259, 490, 562], "superexpcutoffpowerlaw4fglspectralmodel": [259, 404, 490, 563], "superflu": [391, 476], "supernova": [28, 52, 453, 467, 490, 509, 510], "superpixel": 192, "supersed": [192, 193, 194, 204, 205, 206], "supervisor": 397, "suppli": [19, 20, 26, 87, 91, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 452, 474, 475], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 102, 105, 109, 110, 114, 125, 145, 156, 161, 192, 193, 194, 195, 196, 198, 203, 204, 205, 206, 211, 224, 248, 380, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 414, 418, 421, 422, 424, 425, 426, 427, 428, 429, 432, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 457, 459, 461, 464, 466, 472, 475, 480, 481, 482, 487, 492, 494, 495, 496, 497, 503, 518, 524, 531, 532, 574, 576, 577, 579], "suppos": [239, 275, 386, 393, 578, 580], "suppress": [150, 151, 155, 519], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381, 384, 386, 397, 410, 456, 473, 487, 519, 579], "surfac": [28, 30, 35, 36, 39, 40, 45, 211, 264, 280, 334, 400, 429, 484, 490, 509], "surface_brightness_err": 481, "surprisingli": 395, "surround": [52, 326, 381], "survei": [63, 67, 126, 226, 388, 391, 401, 417, 450, 494, 499, 500, 509, 514, 519, 578], "survey_map": [450, 500, 501], "suspect": 581, "suss": [390, 407], "sutxorlf": 478, "svg": 381, "swap": 192, "swept": 52, "swh": 407, "swhid": 407, "switch": [103, 108, 287, 381, 388, 391, 410, 434, 438], "switcher": 410, "sy": [381, 416], "syllabl": 519, "symbol": 488, "symmetr": [102, 105, 109, 110, 122, 131, 133, 181, 190, 194, 234, 381, 392, 422, 434, 437, 454, 475, 486, 492, 494, 507, 517, 525, 536, 537, 581], "symmetri": [194, 422], "sync": 441, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 407, "synchrotron": [249, 428, 555], "syntact": [87, 91], "syntax": [16, 87, 91, 382, 397, 400, 426, 443, 579], "synthesi": [509, 510], "synthet": 420, "system": [11, 83, 87, 91, 112, 113, 148, 156, 157, 192, 193, 194, 196, 199, 201, 204, 205, 206, 224, 248, 381, 387, 392, 394, 398, 401, 402, 406, 407, 409, 414, 422, 440, 446, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 530, 531, 577, 579, 583], "systemat": [392, 405, 407, 408, 429, 456, 473, 486, 517, 578, 580], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 104, 118, 119, 120, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 142, 143, 144, 145, 150, 190, 203, 224, 239, 243, 248, 287, 289, 290, 291, 306, 353, 357, 380, 381, 382, 384, 386, 388, 389, 391, 393, 395, 397, 398, 399, 400, 401, 404, 405, 406, 408, 411, 412, 413, 415, 417, 429, 433, 436, 437, 438, 441, 446, 448, 451, 452, 453, 456, 461, 464, 466, 467, 470, 472, 473, 474, 476, 478, 479, 480, 481, 483, 484, 486, 487, 488, 490, 491, 492, 494, 495, 507, 511, 512, 513, 515, 517, 519, 528, 566, 567, 568, 569, 570, 571, 572, 577, 579, 582, 583], "t0": [231, 256, 468, 474, 475, 478, 567, 571], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 295, 524, 567, 568, 569, 570, 571, 572, 580], "t_0": 571, "t_b": 580, "t_decai": [238, 569], "t_delta": [103, 108, 203, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278], "t_i": 295, "t_j": 515, "t_live": [83, 88], "t_max": [223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 394, 405, 478], "t_min": [223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 394, 405, 478], "t_observ": [83, 88], "t_r": 239, "t_ref": [231, 236, 238, 239, 240, 256, 263, 275, 445, 446, 468, 469, 475, 490, 567, 568, 569, 570, 571, 572, 573, 574], "t_rise": [238, 569], "t_start": [86, 516], "t_stop": [52, 86, 516], "ta": 290, "ta2": 290, "ta3": 290, "tab": [150, 386, 464, 470, 473, 483, 492, 528], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 467, "table_class": [87, 91], "table_compon": [67, 481], "table_filenam": 26, "table_format": 125, "table_from_row_data": 446, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 481], "table_model": [277, 404], "table_oth": 351, "tableau": 519, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [392, 442], "tablepsf": [402, 420, 422], "tablepsfcheck": 438, "tabul": 507, "tabular": [490, 564], "tackl": 390, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 178, 179, 180, 193, 194, 196, 202, 205, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 406, 409, 410, 429, 443, 485, 490, 492, 538, 542], "tail": [494, 579], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 105, 109, 110, 122, 148, 168, 170, 202, 204, 209, 211, 224, 248, 264, 356, 379, 381, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 405, 411, 427, 428, 429, 432, 434, 442, 443, 445, 446, 447, 451, 453, 456, 458, 459, 468, 469, 470, 475, 476, 478, 483, 484, 486, 487, 488, 490, 491, 492, 494, 504, 505, 516, 519, 532, 548, 580, 581, 582], "taken": [15, 27, 87, 91, 102, 105, 109, 110, 123, 125, 153, 161, 180, 186, 188, 202, 203, 206, 211, 298, 382, 386, 390, 394, 445, 452, 456, 464, 465, 476, 478, 483, 485, 488, 489, 494, 505, 515, 517, 528, 529, 581], "talk": [384, 386, 388, 398, 407], "tan": [194, 201, 395, 424, 456, 487, 495, 528], "tandem": 507, "tangent": [176, 221, 225, 234, 237, 250, 261, 262, 266, 272, 276], "tangenti": [192, 532], "tar": [411, 494], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 102, 105, 109, 110, 114, 118, 122, 124, 133, 151, 152, 163, 166, 183, 184, 188, 189, 193, 194, 196, 198, 202, 205, 206, 382, 387, 388, 394, 407, 410, 438, 453, 458, 466, 474, 486, 488, 504], "target_nam": 528, "target_posit": [176, 453, 456, 458, 466, 473, 474, 478, 504], "target_radec": 88, "targetmetadata": [90, 124], "task": [329, 401, 405, 407, 408, 410, 411, 442, 457, 460, 486, 487, 495, 499, 503, 519, 527, 577, 579, 583], "task_nam": 329, "tast": 579, "tau": [26, 51, 54, 136, 299, 409, 480, 545], "tau_0": 51, "taul": [26, 480], "taur": [26, 480], "taylor": [52, 53], "tb00058": [135, 144], "tbd": 243, "tbl": [87, 91], "tdelta_precis": 304, "team": [386, 390, 398, 401, 403, 407, 419, 440], "technic": [383, 384, 386, 394, 401, 403, 405, 407, 411, 461], "techniqu": [387, 396, 397, 399, 453, 456, 464, 467, 486, 488, 496, 526, 529, 577], "tediou": 481, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 104, 153, 394, 395, 408, 413, 417, 418, 468, 473, 476, 491, 494, 495, 497], "tell": 458, "temp": [436, 469], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 104, 105, 110, 115, 117, 124, 170, 178, 192, 193, 194, 196, 197, 198, 204, 205, 206, 212, 224, 239, 248, 272, 273, 274, 275, 276, 277, 284, 286, 300, 303, 386, 392, 393, 397, 404, 429, 443, 446, 447, 450, 459, 460, 462, 469, 487, 488, 489, 490, 507, 528, 533, 544, 551, 554, 559, 565, 573], "template_diffus": [489, 495], "template_extrapol": 564, "template_model": 468, "template_noextrapol": 564, "templatelightcurvetemporalmodel": 443, "templatend": [272, 273, 490], "templatendspatialmodel": [258, 490], "templatendspectralmodel": [26, 259, 434, 445, 490], "templatenpredmodel": [244, 432], "templatephasecurvetemporalmodel": [271, 443, 448, 490, 573], "templatespatialmodel": [67, 258, 403, 404, 429, 443, 444, 446, 447, 448, 468, 489, 490, 495, 543], "templatespectralmodel": [224, 248, 259, 282, 404, 490, 495, 515, 551, 554, 559, 564], "templatetemporalmodel": 443, "tempo2": [476, 519], "tempor": [215, 217, 223, 224, 231, 236, 238, 239, 240, 248, 256, 263, 264, 271, 275, 278, 295, 392, 394, 404, 405, 425, 427, 428, 429, 434, 443, 445, 446, 447, 448, 450, 452, 454, 457, 459, 460, 464, 465, 466, 468, 471, 472, 478, 479, 481, 482, 483, 489, 495, 499, 503, 519, 520, 575, 576, 578], "temporal_model": [264, 394, 468, 469, 475, 490, 566, 567, 568, 569, 570, 571, 572, 573, 574], "temporal_model1": 475, "temporal_model2": 475, "temporal_model_map": 469, "temporal_model_registri": 490, "temporal_typ": 404, "temporalbackground": 392, "temporalmodel": [223, 231, 236, 238, 239, 240, 256, 263, 264, 275, 392, 405, 428, 443, 445, 446, 448, 533], "temporari": 499, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392], "ten": [387, 401], "tend": [381, 538], "tension": 479, "tensorflow": [399, 401], "tent": 410, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 240, 243, 301, 305, 384, 386, 388, 390, 391, 395, 398, 401, 406, 408, 430, 434, 443, 452, 460, 484, 485, 579, 581, 582], "termin": [87, 91, 101, 397, 412, 413, 414, 415, 416, 453, 454, 456, 457, 458, 464, 465, 466, 476, 478, 483, 484, 495, 503, 504, 579], "terrier": [387, 390, 391, 392, 393, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 408, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "test": [6, 16, 84, 90, 94, 101, 104, 115, 117, 120, 122, 123, 124, 125, 126, 127, 130, 131, 133, 142, 161, 163, 166, 193, 194, 196, 202, 205, 206, 239, 287, 288, 289, 291, 294, 338, 355, 356, 357, 358, 359, 360, 361, 382, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 406, 409, 410, 411, 421, 423, 424, 426, 428, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 446, 448, 453, 459, 460, 469, 472, 473, 474, 475, 478, 482, 483, 485, 517, 519, 523, 529, 573, 574, 578, 581], "test2": 475, "test_aeff3d": 485, "test_edisp": 485, "test_events_with_gti": 516, "test_gti": 516, "test_person_txt": 381, "test_plot": 381, "test_psf": 485, "test_someth": 381, "test_using_data_fil": 360, "test_using_scipi": 361, "testcod": 382, "testoutput": 382, "testpar": 409, "teststatisticnest": [446, 448], "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 101, 102, 105, 109, 110, 111, 116, 118, 123, 125, 126, 141, 142, 147, 148, 150, 152, 153, 154, 155, 160, 161, 162, 163, 164, 166, 173, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 264, 265, 267, 268, 269, 270, 273, 277, 280, 281, 306, 307, 328, 376, 382, 392, 404, 405, 408, 409, 417, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 513, 516, 517, 523, 524, 526, 528, 529, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577], "tevcat": [433, 481], "tevcat_nam": 71, "tevpi": 420, "tevtevtev1": 466, "tex": 382, "texliv": 382, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 105, 110, 123, 125, 133, 261, 262, 307, 344, 350, 370, 382, 389, 397, 407, 411, 457, 476, 485, 494, 503, 505, 536, 537, 538, 541, 542, 546, 562, 569, 579, 581], "textcolor": 370, "textkw": 370, "th": 198, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 132, 151, 152, 154, 155, 158, 162, 163, 164, 166, 170, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 287, 296, 359, 374, 381, 382, 384, 386, 387, 388, 391, 394, 395, 396, 399, 400, 405, 407, 408, 411, 440, 443, 444, 445, 447, 451, 453, 464, 465, 468, 473, 474, 479, 484, 486, 488, 491, 492, 515, 532, 537, 538, 579, 581], "thank": [405, 426, 427, 432, 434, 448, 486, 519], "thaw": 489, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 104, 108, 112, 113, 124, 130, 137, 167, 275, 295, 328, 381, 382, 384, 386, 387, 388, 389, 390, 392, 395, 397, 398, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 418, 429, 432, 434, 446, 447, 453, 454, 458, 480, 482, 484, 488, 489, 490, 491, 492, 494, 497, 507, 516, 517, 519, 524, 531, 532, 577, 578, 579, 580, 581, 583], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 104, 124, 215, 217, 224, 248, 308, 381, 382, 384, 386, 388, 389, 395, 397, 400, 407, 408, 410, 411, 417, 424, 440, 453, 454, 456, 459, 461, 464, 465, 467, 469, 473, 481, 482, 483, 484, 487, 488, 490, 492, 494, 496, 499, 504, 516, 519, 528, 579, 581], "theme": [434, 441, 448], "themselv": [87, 91, 397, 486, 488, 526], "theorem": [287, 517, 581], "theoret": 492, "therefor": [105, 387, 391, 394, 395, 396, 400, 402, 404, 414, 432, 448, 453, 473, 476, 484, 487, 488, 491, 492, 496, 505, 517, 581, 582], "thereof": 392, "thermal": [19, 555, 578], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 154, 160, 162, 164, 168, 176, 190, 199, 309, 312, 381, 429, 458, 495, 505, 536, 537, 541, 542], "theta2": [180, 190, 379, 440], "theta2_axi": 497, "theta2_max": 379, "theta2_min": 379, "theta2_t": 497, "theta_0": [33, 38], "theta_squared_axi": [190, 497], "thew": 481, "thi": [6, 15, 16, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 102, 103, 104, 105, 108, 109, 110, 114, 118, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 137, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 173, 175, 176, 177, 179, 181, 183, 184, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 214, 216, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 280, 287, 289, 291, 297, 308, 316, 326, 329, 332, 337, 338, 356, 359, 366, 368, 370, 371, 372, 376, 378, 380, 381, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 507, 508, 515, 516, 517, 519, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583], "thick": 378, "thin": [56, 320], "thing": [381, 384, 386, 389, 395, 396, 397, 398, 401, 405, 411, 420, 439, 458, 461, 475, 476, 488, 495], "think": [386, 398, 399, 401], "third": [62, 63, 87, 91, 382, 432, 481, 484, 487, 499, 505, 514], "thoma": [407, 440], "thorough": [487, 507], "those": [15, 83, 179, 193, 194, 196, 202, 205, 206, 211, 215, 217, 224, 248, 316, 370, 381, 384, 386, 388, 390, 395, 397, 400, 401, 402, 403, 404, 406, 411, 412, 413, 415, 416, 426, 429, 473, 478, 484, 487, 488, 489, 491, 499, 505, 517, 519, 528, 583], "though": [15, 384, 389, 395, 396, 397, 399, 401, 457, 490, 503], "thought": [386, 395], "three": [87, 91, 161, 290, 381, 390, 393, 395, 407, 410, 448, 466, 468, 473, 479, 487, 492, 499, 524, 531, 578], "threshold": [67, 102, 109, 118, 123, 124, 125, 133, 141, 142, 150, 151, 155, 168, 179, 203, 287, 370, 371, 372, 395, 422, 428, 429, 451, 456, 458, 460, 466, 470, 473, 481, 482, 484, 486, 488, 494, 503, 515, 517], "threshold_alpha": 168, "through": [41, 87, 91, 307, 308, 378, 384, 386, 394, 395, 401, 405, 406, 414, 418, 432, 443, 452, 460, 469, 479, 484, 486, 487, 488, 489, 495, 496, 519, 524, 531, 578, 581], "throughout": [13, 388, 390, 391, 395, 397, 439, 481], "throught": 470, "thrown": 490, "thu": [381, 388, 395, 398, 399, 401, 436, 451, 452, 461, 462, 466, 468, 483, 576, 582], "thumbnail": 432, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 194, 390, 475], "tibaldo": 437, "tick": [445, 446], "tick_param": 451, "ticker": 370, "tight_layout": [474, 484, 492, 538, 542], "tightli": 400, "tikonov": 409, "tild": [192, 204], "tile": [192, 194], "tilt": [254, 274, 392, 403, 404, 409, 421, 427, 461, 464, 465, 468, 469, 472, 482, 490, 495, 503, 504, 526, 532, 539, 559, 564], "tilt_prior": 409, "tim": 447, "time": [6, 19, 20, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 101, 102, 103, 104, 105, 108, 109, 110, 112, 123, 124, 125, 130, 133, 136, 137, 145, 169, 175, 186, 188, 193, 194, 195, 196, 197, 202, 203, 205, 206, 211, 214, 216, 223, 226, 231, 236, 238, 239, 240, 256, 263, 264, 275, 278, 290, 295, 299, 304, 338, 358, 362, 363, 364, 365, 381, 382, 384, 386, 387, 388, 389, 391, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 411, 413, 417, 421, 422, 425, 426, 427, 429, 432, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 452, 456, 458, 459, 460, 462, 464, 466, 467, 469, 470, 472, 473, 476, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 503, 504, 505, 511, 512, 513, 515, 516, 517, 519, 524, 528, 532, 537, 538, 545, 566, 567, 568, 569, 570, 571, 572, 573, 574, 578, 579, 580, 581, 582], "time1": 299, "time2": 299, "time_axi": [193, 194, 196, 197, 202, 205, 206, 290, 469, 478, 487, 532], "time_bin": 396, "time_bin_end": 396, "time_bin_s": 396, "time_bin_start": 396, "time_bound": 203, "time_box": 91, "time_column": 405, "time_delta": [86, 203, 362, 365], "time_edg": [203, 479, 487], "time_filt": 89, "time_format": [125, 203, 446, 475], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 130, 457, 461, 462, 464, 469, 473, 474, 478, 503], "time_map_axi": [203, 487], "time_map_axis_contigu": 487, "time_max": [100, 123, 125, 203, 395, 396, 397, 469, 473, 478, 481, 487], "time_mid": [203, 479], "time_min": [100, 123, 125, 203, 395, 396, 397, 469, 473, 478, 481, 487], "time_rang": [91, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 469, 566, 567, 568, 569, 570, 571, 572, 573, 574], "time_ref": [83, 85, 86, 91, 94, 197], "time_ref_default": 86, "time_ref_from_dict": 583, "time_relative_to_ref": 583, "time_resolved_spectroscopi": [450, 477, 478], "time_seri": 290, "time_start": [85, 86, 91, 396], "time_step": 396, "time_stop": [85, 86, 91, 396], "time_sum": [86, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278], "timedelta": [87, 91, 94, 203, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 338, 362, 365, 583], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [386, 388, 440], "timemapaxi": [125, 145, 195, 197, 432, 447, 448, 474, 475, 478, 479], "timerangeconfig": 16, "timeref": 468, "timescal": [137, 231, 296, 406, 479], "timeseri": 396, "timesi": [94, 444, 446, 468], "timestamp": 381, "timeunit": 468, "timmer": [290, 448], "timmer1995": 290, "tini": [466, 494], "tip": 519, "titl": [386, 470, 480], "tiziani": 438, "tke": 495, "tm": [87, 91], "tmax": 396, "tmid": [88, 446, 466, 486, 491, 504], "tmin": 396, "to_2d": [148, 497], "to_3d": [147, 445, 447], "to_bands_hdu": [191, 192, 201, 204], "to_binsz": [192, 201, 204, 432], "to_binsz_wc": 201, "to_contigu": [203, 487], "to_counts_hdulist": 107, "to_cub": [191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 429, 462, 532], "to_dict": [19, 20, 26, 99, 101, 102, 105, 109, 110, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 408, 492], "to_edisp_kernel": [155, 448, 523], "to_edisp_kernel_map": [152, 432, 523], "to_energy_dependent_table_psf": 440, "to_even_npix": 204, "to_fits_head": 85, "to_fram": 199, "to_gti": [203, 447], "to_hdu": [193, 194, 205, 206], "to_hdulist": [102, 105, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 193, 194, 200, 201, 202, 205, 206, 487], "to_head": [84, 90, 104, 124, 192, 195, 197, 198, 203, 204, 408], "to_html": 381, "to_imag": [102, 105, 109, 110, 150, 151, 161, 163, 166, 191, 192, 201, 204, 403, 426, 427, 451, 462, 466, 482, 495, 529, 532], "to_json": [16, 84, 90, 104, 124], "to_map": [123, 125], "to_map_dataset": [105, 110], "to_mask": [102, 105, 109, 110, 480], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 432, 481], "to_node_typ": 198, "to_nsid": [192, 194], "to_odd_npix": 204, "to_panda": [87, 91], "to_parameters_t": [224, 248, 452, 453, 456, 457, 458, 461, 464, 474, 484, 492, 504], "to_pixel": [395, 456, 466, 480, 486, 490, 528, 536, 537, 538], "to_polygon": 395, "to_psf3d": [154, 162, 164], "to_python": [16, 84, 90, 104, 124], "to_region": [220, 221, 224, 225, 234, 237, 248, 252, 261, 262, 276, 395, 426, 490, 536, 537, 538], "to_region_map_dataset": [102, 105, 109, 110, 482], "to_region_nd_map": [151, 152, 158, 163, 166, 194, 202, 206, 429, 432, 495], "to_region_nd_map_histogram": [206, 446], "to_sed_typ": 405, "to_sherpa": [426, 440, 441], "to_spectrum": 432, "to_spectrum_dataset": [100, 102, 105, 109, 110, 403, 425, 427, 476, 482, 492], "to_st": 446, "to_str": [446, 451], "to_swap": [192, 193, 194], "to_tabl": [101, 125, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 197, 198, 202, 203, 215, 217, 239, 432, 448, 452, 454, 456, 457, 466, 470, 472, 473, 475, 481, 483, 490, 505, 517], "to_table_hdu": [83, 86, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 197, 198, 487], "to_table_psf": 438, "to_template_sky_model": [224, 248], "to_template_spectral_model": [224, 248, 404], "to_unit": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 193, 194, 196, 202, 205, 206], "to_wc": [193, 194], "to_wcs_geom": [192, 201, 532], "to_wcs_til": [192, 194], "to_yaml": [16, 84, 90, 104, 124, 224, 248, 392, 408, 490, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "tob": 457, "todai": 407, "todo": [13, 79, 99, 161, 277, 382, 405, 423, 494, 509, 510, 583], "tof": 160, "togeth": [100, 102, 105, 109, 110, 126, 130, 224, 248, 378, 381, 394, 398, 401, 412, 424, 452, 462, 464, 465, 470, 474, 482, 484, 486, 489, 490, 491, 492, 497, 504, 515, 516, 579], "tol": [287, 484], "toler": [86, 100, 130, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 358, 484], "tolist": 484, "tomato": 452, "toml": 429, "ton": [296, 494], "too": [381, 386, 387, 431, 432, 445, 446, 447, 484, 488], "took": 406, "tool": [6, 13, 193, 194, 196, 205, 206, 380, 384, 388, 390, 392, 394, 397, 398, 401, 407, 418, 426, 437, 440, 441, 467, 470, 475, 482, 484, 487, 491, 494, 495, 497, 507, 519, 553, 577, 578], "toolbox": [397, 437], "top": [109, 110, 368, 377, 381, 386, 397, 401, 403, 414, 440, 458, 460, 466, 470, 473, 475, 479, 481, 486, 505, 519, 532, 577, 579, 583], "top_five_ts_3fhl": 505, "tophat2dkernel": 122, "topic": [386, 390, 401, 409, 505], "total": [51, 67, 99, 101, 102, 105, 109, 110, 126, 127, 130, 131, 140, 173, 188, 192, 212, 223, 231, 236, 238, 239, 240, 256, 263, 275, 278, 305, 389, 405, 409, 413, 415, 447, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 492, 493, 495, 498, 500, 502, 503, 504, 505, 506, 509, 515, 519, 524, 534, 544, 555, 565, 575, 578], "total_jfact": 480, "total_jfact_decai": 480, "total_model": 392, "total_obstim": 486, "total_stat": [212, 213, 452, 478, 484, 580], "touch": [86, 421], "tour": 499, "toward": [326, 388, 395, 401, 442], "tox": [345, 382, 384, 443, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 543, 551, 567], "tqdm": 519, "trace": [211, 212, 213, 429, 484], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 381], "track": [85, 94, 381, 390, 396, 407, 434, 489], "tracker": [384, 395, 410, 448], "tradition": [490, 580], "train": 406, "traitlet": [397, 408], "traittyp": 408, "transfer": 408, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 161, 195, 197, 198, 203, 204, 224, 248, 310, 314, 337, 342, 381, 395, 397, 405, 409, 420, 422, 438, 441, 460, 466, 486, 492, 531, 536, 537, 583], "transit": [27, 371, 372, 388, 421, 422, 440, 496], "transit_map": 496, "transit_numb": 496, "transitsmap_crab": 496, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 397, 517], "transpar": 396, "transport": 487, "transpos": 441, "trapezoid": [147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 283, 319], "trapz": 319, "trapz_loglog": 427, "trash": 423, "travi": [426, 428, 432], "treat": [95, 413, 445, 446, 456, 468, 582], "treatment": [432, 456, 464, 578], "trend": 468, "tri": [77, 389, 395], "tributor": 407, "tricki": 395, "trigger": [359, 381, 410, 496], "trim": [102, 105, 151, 152, 158, 163, 166, 169, 204, 206, 274], "tripl": 154, "trivial": 388, "troubl": 579, "troubleshoot": [413, 414, 415], "trough": 479, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 122, 123, 124, 125, 126, 130, 131, 133, 134, 140, 143, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 173, 179, 180, 183, 184, 186, 187, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 208, 211, 212, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 305, 308, 316, 317, 320, 338, 350, 352, 369, 374, 378, 381, 387, 394, 395, 396, 397, 404, 405, 408, 423, 427, 428, 439, 441, 442, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 495, 496, 501, 503, 504, 505, 509, 515, 517, 519, 524, 529, 531, 532, 535, 536, 537, 540, 541, 543, 564, 578, 581], "truelov": 53, "truncat": [133, 326, 432], "truncation_valu": [292, 298], "trust": [16, 84, 90, 104, 124], "trustworthi": 409, "truth": 492, "try": [16, 77, 84, 90, 104, 124, 193, 194, 196, 202, 205, 206, 381, 382, 391, 395, 401, 410, 411, 417, 422, 454, 456, 458, 468, 469, 473, 481, 484, 487, 505, 579], "ts2": 290, "ts3": 290, "ts_image_estim": 466, "ts_scan": [123, 125], "ts_threshold": [145, 287], "ts_threshold_ul": [476, 517], "ts_to_sigma": [467, 581], "tsimageestim": 440, "tsmap": 448, "tsmap_est": 374, "tsmapestim": [119, 143, 144, 374, 402, 405, 427, 428, 430, 432, 446, 448, 460, 466, 519], "tstart": [88, 91, 394, 396, 459, 468, 472, 474, 475, 478, 494], "tstop": [88, 394, 396, 459, 468, 472, 474, 478, 494], "tt": [86, 94, 363, 364, 407, 469, 474, 478, 583], "tth_sec3": 198, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 101, 102, 104, 105, 109, 110, 124, 128, 133, 147, 148, 150, 151, 152, 153, 154, 155, 158, 160, 161, 162, 163, 164, 166, 169, 174, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 209, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 274, 277, 289, 291, 294, 320, 330, 337, 381, 487, 531], "turn": [83, 88, 382, 384, 395, 494, 576], "tutori": [82, 99, 120, 130, 132, 178, 381, 384, 385, 390, 393, 394, 395, 396, 397, 398, 399, 402, 411, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 438, 439, 440, 441, 442, 443, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 490, 491, 492, 493, 495, 497, 498, 500, 502, 503, 504, 505, 506, 519, 520, 522, 531, 576, 579], "tutorials_jupyt": [410, 499], "tutorials_python": 499, "tweak": [397, 432, 448, 487], "twice": [122, 531, 582], "twinx": 451, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 101, 102, 105, 109, 110, 136, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 169, 174, 176, 192, 193, 194, 195, 196, 198, 201, 202, 204, 205, 206, 211, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 338, 348, 370, 375, 378, 380, 381, 382, 384, 388, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 405, 406, 407, 409, 410, 411, 413, 434, 440, 442, 446, 448, 457, 458, 464, 465, 467, 470, 475, 481, 482, 483, 484, 485, 487, 488, 490, 491, 492, 494, 496, 503, 504, 509, 515, 516, 517, 519, 528, 531, 532, 547, 581, 582], "txt": [125, 406, 408, 410, 489, 495], "tyler": 434, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 101, 102, 104, 114, 122, 123, 124, 125, 127, 133, 167, 173, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 308, 338, 387, 390, 391, 392, 393, 395, 396, 397, 400, 404, 405, 407, 409, 411, 412, 417, 425, 432, 438, 439, 440, 446, 448, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 503, 504, 505, 507, 519, 531, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 578, 579], "typeerror": [16, 84, 90, 104, 124, 308, 395, 405, 409], "typic": [123, 387, 390, 392, 399, 403, 404, 405, 406, 408, 410, 413, 414, 453, 458, 462, 470, 472, 473, 474, 481, 482, 483, 485, 488, 490, 491, 507, 514, 515, 516, 524, 528, 577, 578], "typing_extens": [16, 84, 90, 104, 124], "typo": [381, 418, 444, 445, 448], "tyud97sz": 478, "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 102, 105, 109, 110, 115, 117, 118, 123, 125, 127, 129, 133, 141, 142, 150, 152, 161, 191, 192, 193, 194, 196, 197, 201, 202, 203, 204, 205, 206, 218, 219, 222, 226, 228, 229, 230, 235, 239, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 280, 281, 290, 306, 307, 308, 328, 376, 381, 384, 388, 389, 390, 396, 397, 398, 399, 404, 405, 408, 409, 421, 422, 423, 440, 441, 442, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 509, 516, 517, 519, 521, 526, 528, 529, 532, 536, 538, 539, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573], "u03c3": 467, "u18": [33, 38], "uc": [87, 91], "ufunc": [193, 194, 196, 202, 205, 206, 458, 478], "ui": [28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 58, 60, 61, 62, 83, 88, 118, 136, 153, 245, 280, 281, 290, 297, 299], "ul": [67, 122, 123, 125, 126, 127, 130, 131, 133, 288, 465, 470, 475, 481], "ultim": 381, "un": [393, 407, 429, 489], "unambigu": 490, "unbehaun": 447, "unbin": [393, 394, 441], "unboundlocalerror": 381, "uncertaint": 399, "uncertainti": [52, 102, 105, 109, 110, 289, 291, 385, 398, 439, 454, 456, 476, 484, 492, 504, 577, 578, 580], "unchang": [102, 105, 109, 110, 115, 117, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 163, 164, 165, 166, 191, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 440], "unclear": [381, 391, 392, 398, 408], "uncom": [397, 494], "undefin": 582, "under": [72, 91, 134, 135, 143, 144, 381, 385, 390, 398, 407, 441, 442, 452, 457, 499, 503, 515, 581, 582], "underestim": 517, "underflow": 203, "underli": [87, 91, 201, 394, 454, 481, 487, 492, 505, 507, 516, 528, 531], "underscor": 381, "understand": [397, 418, 426, 427, 453, 456, 457, 458, 461, 468, 469, 474, 475, 479, 487, 488, 489, 494, 503, 504, 579], "undertak": 401, "unevenli": [136, 299], "unexpect": 496, "unfold": 578, "unfreez": [19, 20, 26, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 555], "unfreeze_al": [215, 217, 489], "unfrozen": 526, "unheard": 579, "uni": [409, 410], "uni_prior_stat_sum": 492, "unicod": [87, 91, 381], "unid": 67, "unidimension": 197, "unif": 426, "unifi": [87, 91, 385, 390, 395, 421, 424, 426, 427, 428, 429, 432, 441, 442, 578], "uniform": [161, 211, 243, 279, 337, 381, 390, 392, 393, 403, 405, 409, 423, 424, 428, 432, 448, 453, 487, 492, 577], "uniform_filt": [128, 206], "uniformli": [394, 517], "uniformprior": [409, 448, 492], "uninstal": 380, "union": [86, 89, 102, 105, 201, 343, 395, 396, 407, 408, 424, 515], "uniqu": [87, 91, 100, 150, 192, 193, 194, 195, 196, 202, 204, 205, 206, 215, 217, 224, 232, 248, 264, 274, 374, 391, 392, 393, 394, 404, 407, 427, 448, 457, 482, 490, 496, 532, 576], "unique_id": 490, "unique_paramet": [215, 217], "uniquifi": [87, 91], "unit": [6, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 101, 102, 105, 107, 109, 110, 111, 115, 116, 117, 118, 123, 125, 127, 129, 133, 141, 142, 147, 148, 149, 150, 152, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 173, 176, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 214, 216, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 280, 281, 290, 299, 306, 307, 308, 338, 352, 353, 354, 356, 365, 366, 367, 370, 371, 372, 376, 382, 390, 392, 395, 397, 399, 404, 405, 409, 421, 422, 424, 432, 434, 440, 441, 443, 444, 445, 446, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 509, 511, 512, 513, 516, 517, 519, 521, 523, 524, 526, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 578], "unit_string_format": [446, 451], "unitbas": 308, "uniti": [128, 195, 276, 444, 538], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 232, 274], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [451, 459, 461, 464, 466, 472, 475, 494], "univers": [193, 194, 196, 202, 205, 206, 578], "univsers": 20, "unknown": [101, 291, 460, 484, 580, 581], "unless": [93, 95, 126, 127, 130, 133, 169, 308, 380, 387, 406, 408, 485], "unlik": [87, 91, 287, 388, 399], "unmaintain": 422, "unmask": [87, 91], "unnam": [87, 91, 199], "unnecessari": [432, 443, 464], "unneed": 446, "unphys": 582, "unrealist": 381, "unrel": 583, "unreli": 494, "unsaf": 381, "unstabl": [381, 494], "unsupport": 398, "untar": 494, "until": [381, 384, 388, 395, 406, 439], "unus": [397, 424, 426], "unusu": 386, "unweight": [105, 110], "unzip": 494, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 101, 127, 129, 133, 154, 160, 162, 164, 201, 308, 381, 382, 385, 386, 388, 389, 390, 393, 395, 397, 398, 399, 401, 403, 407, 409, 411, 412, 413, 415, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 432, 436, 438, 439, 440, 441, 442, 448, 456, 457, 464, 467, 468, 492, 494, 495, 532, 579], "upcast": 308, "upcom": [389, 390], "updat": [15, 16, 84, 87, 90, 91, 103, 104, 108, 124, 200, 214, 216, 224, 248, 276, 287, 328, 348, 381, 384, 386, 387, 388, 389, 390, 393, 398, 403, 405, 407, 408, 410, 411, 413, 414, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 438, 439, 440, 441, 443, 446, 447, 448, 487, 490, 530, 531], "update_config": 15, "update_forward_ref": [16, 84, 90, 104, 124], "update_from_dict": [214, 216], "update_link_label": [224, 248], "update_parameters_from_t": [224, 248], "upgrad": [192, 380, 406, 414], "upload": [398, 410], "upon": [102, 105, 109, 110, 390, 461, 489, 494, 515], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 101, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 143, 150, 198, 203, 211, 218, 219, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 245, 249, 251, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 273, 275, 277, 278, 288, 289, 291, 408, 417, 428, 432, 439, 440, 441, 447, 456, 460, 470, 473, 482, 483, 486, 503, 515, 517, 519], "upper_error": 125, "upsampl": [163, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 423, 443], "upsample_geom": 163, "upstream": [381, 384, 410], "upward": [289, 291], "url": 389, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 281, 283, 288, 290, 292, 304, 306, 308, 316, 319, 320, 321, 328, 329, 332, 337, 338, 345, 348, 364, 365, 367, 368, 370, 371, 372, 374, 375, 376, 377, 378, 380, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 464, 465, 466, 469, 470, 472, 474, 475, 476, 478, 479, 480, 481, 483, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 501, 505, 508, 509, 519, 521, 522, 523, 525, 529, 530, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 577, 578, 579, 580, 581, 583, 584], "usabl": 381, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 104, 120, 124, 130, 132, 178, 191, 192, 201, 204, 332, 387, 391, 392, 394, 396, 400, 405, 425, 446, 447, 481, 486, 488, 489, 579], "use_cach": 249, "use_center_as_plot_label": 198, "use_enum_valu": [16, 84, 90, 104, 124], "use_evaluation_region": [224, 248], "use_fft": 206, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [173, 180, 183, 184, 186, 187, 432, 453], "useless": 494, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 381, 382, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 418, 425, 432, 433, 439, 440, 441, 443, 457, 460, 467, 468, 469, 482, 483, 485, 487, 488, 489, 490, 491, 499, 503, 516, 517, 518, 519, 524, 528, 531, 534, 540, 544, 565, 575, 576, 579], "userdataset": 393, "usernam": 384, "userwarn": [456, 458, 465, 466, 470, 495], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 579, "usual": [29, 82, 83, 123, 141, 147, 148, 149, 161, 202, 316, 381, 382, 384, 386, 387, 388, 389, 395, 396, 401, 407, 411, 446, 451, 452, 453, 454, 456, 458, 459, 461, 462, 466, 468, 469, 472, 473, 474, 475, 478, 479, 480, 482, 488, 491, 496, 504, 507, 515, 519, 521, 522, 523, 525, 528, 532, 537, 576, 578, 579, 580], "ut1": 583, "utc": [86, 88, 104, 124, 362, 468, 473, 474, 478, 487, 490, 566, 567, 568, 569, 570, 571, 572, 573, 574, 583], "utf": [87, 91], "utf8": [16, 84, 90, 104, 124], "util": [6, 96, 104, 111, 115, 116, 117, 124, 125, 127, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 182, 183, 184, 185, 186, 187, 188, 189, 190, 286, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 381, 390, 392, 393, 394, 395, 405, 420, 423, 424, 425, 426, 433, 434, 437, 438, 439, 440, 441, 442, 446, 447, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 507, 508, 519, 578], "utilis": [142, 287, 382, 413, 415, 451, 456, 460, 467, 479, 483, 487, 491, 496, 504, 516, 519, 526], "v": [26, 31, 32, 37, 87, 91, 154, 160, 162, 163, 164, 166, 175, 182, 200, 275, 287, 312, 384, 389, 396, 397, 408, 409, 410, 411, 434, 451, 473, 480, 491, 503], "v0": [95, 388, 389, 392, 393, 395, 398, 400, 401, 406, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 441, 442, 443, 468, 469, 485, 489, 494], "v1": [13, 381, 388, 390, 392, 397, 398, 399, 400, 406, 407, 410, 426, 427, 428, 434, 439, 443, 444, 445, 446, 447, 448, 470, 495, 551], "v15": 448, "v2": [407, 408, 432, 440, 447, 464], "v3": [16, 84, 90, 104, 124, 424, 464], "v_0": [37, 49], "v_glat": 315, "v_glon": 315, "va": 536, "vagu": 386, "vain": 384, "val": [87, 91, 193, 194, 196, 202, 205, 206, 215, 217, 487, 531], "valfmt": 370, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 104, 106, 123, 124, 127, 135, 144, 165, 179, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 308, 326, 380, 381, 390, 394, 397, 398, 407, 426, 434, 443, 453, 456, 478, 484, 486, 487, 490, 495, 517, 519, 524, 578], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "valid_interv": 478, "valid_tim": 478, "validate_al": 408, "validate_assign": [16, 84, 90, 104, 124, 408], "validate_default": [16, 84, 90, 104, 124], "validate_loc": 408, "validate_scalar": 90, "validate_zenith_angl": 408, "validationerror": [16, 84, 90, 104, 124, 408], "valle": 38, "valleespir": 509, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 104, 105, 109, 110, 112, 113, 118, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 169, 173, 179, 180, 182, 183, 184, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 288, 289, 291, 292, 294, 295, 296, 299, 308, 312, 320, 321, 335, 338, 348, 352, 367, 370, 371, 372, 382, 384, 387, 392, 393, 395, 397, 399, 401, 404, 405, 408, 423, 426, 432, 443, 446, 447, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 494, 495, 496, 497, 503, 504, 505, 507, 511, 512, 513, 517, 519, 523, 531, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579, 580, 581, 582], "value_rang": 91, "value_scan": 288, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 224, 248, 381, 395, 408], "values_equ": [87, 91], "values_err": 476, "values_scal": [147, 148, 149, 202, 206, 239, 272, 276, 277, 320, 444, 446, 469, 485], "vanilla": [87, 91], "var": [297, 413, 415], "vari": [68, 103, 108, 130, 161, 211, 320, 348, 393, 395, 396, 406, 426, 429, 450, 452, 461, 466, 467, 469, 477, 478, 486, 490, 492, 495, 499], "variability_amplitud": 479, "variability_amplitude_100": 479, "variability_amplitude_error": 479, "variability_amplitude_signific": 479, "variability_estim": [450, 474, 477, 479], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 104, 124, 136, 137, 206, 289, 291, 294, 295, 296, 297, 299, 304, 319, 346, 381, 382, 384, 394, 396, 397, 411, 413, 415, 421, 422, 438, 439, 440, 446, 447, 448, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 469, 470, 473, 474, 475, 476, 477, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 499, 503, 504, 505, 524, 579, 580, 581], "varianc": [96, 138, 139, 296, 297, 307, 396, 447, 491, 526], "variant": 411, "variat": [137, 240, 296, 387, 397, 451, 479, 485, 486, 529, 581], "varieti": [392, 577], "variou": [120, 126, 127, 130, 131, 133, 142, 381, 387, 391, 393, 396, 405, 408, 411, 413, 432, 433, 447, 452, 454, 457, 460, 465, 467, 473, 483, 484, 503, 515, 519, 577, 583], "vasco": 448, "vast": [398, 434], "vaughan": [297, 479], "vaughan2003": 297, "ve": [381, 382, 384, 579], "vector": [191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 487, 523, 531], "vega": 441, "vel": 476, "vel_di": [45, 509], "vela": [66, 420, 454, 476, 505], "veloc": [31, 32, 37, 45, 49, 312, 315], "ver": 487, "verbos": [11, 82, 382, 404, 579, 581], "veri": [63, 87, 91, 141, 211, 371, 380, 381, 382, 383, 386, 387, 392, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 408, 411, 442, 451, 452, 459, 479, 481, 483, 484, 487, 492, 495, 505, 515, 519, 532, 541, 542, 576, 578, 579, 580], "verif": [100, 224, 248, 344, 347, 465, 495], "verifi": [215, 217, 237, 287, 381, 394, 481, 519], "verifywarn": 519, "verita": [97, 413, 418, 495], "versa": 192, "version": [11, 78, 85, 87, 91, 125, 181, 380, 382, 384, 385, 388, 389, 390, 391, 395, 398, 401, 407, 408, 409, 411, 412, 413, 414, 416, 418, 420, 421, 422, 423, 425, 426, 431, 433, 434, 436, 439, 440, 441, 443, 444, 446, 447, 448, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 517, 579], "versu": [147, 153, 287, 289, 291, 494, 513], "vert": 255, "vertex": 395, "vhe": [453, 507], "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 103, 108, 194, 199, 209, 380, 382, 384, 389, 393, 395, 396, 397, 398, 399, 400, 402, 404, 407, 408, 409, 410, 411, 413, 414, 421, 429, 437, 439, 440, 441, 445, 446, 448, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 501, 503, 504, 505, 519, 523, 528, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 579, 583], "viabil": 408, "vice": 192, "victor": 436, "view": [83, 87, 91, 147, 148, 149, 150, 153, 154, 155, 156, 157, 160, 162, 164, 165, 170, 193, 194, 196, 200, 202, 205, 206, 232, 310, 314, 368, 381, 395, 422, 427, 432, 434, 441, 442, 456, 458, 462, 464, 468, 478, 482, 485, 486, 488, 494, 495, 519, 521, 522, 523, 524, 525, 526, 528, 578], "vika": 432, "vila": 448, "vilcn72g": 483, "vin\u00edciu": 439, "viridi": [458, 480], "virtual": [384, 411, 413, 414, 415, 579], "visibl": [87, 91, 371, 372, 389, 432, 451, 468, 496, 504, 505, 578], "vision": 386, "visit": 469, "visual": [6, 194, 206, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 395, 427, 428, 446, 447, 448, 456, 458, 462, 464, 466, 469, 484, 485, 491, 497, 504, 505, 519, 528, 533, 536, 577], "visualis": [378, 393, 395, 402, 428, 443, 458, 485, 490, 492, 494, 519], "vline": [513, 536, 537], "vmax": [102, 105, 109, 110, 371, 372, 461, 464, 466, 472, 482, 487, 488, 495, 496, 503, 504, 528], "vmin": [102, 105, 109, 110, 371, 372, 460, 464, 472, 482, 487, 488, 495, 496, 503, 504, 528], "volum": [27, 197, 201, 204], "vorokh": [437, 438], "voruganti": [439, 440], "voxbnipu": 460, "vstack": [83, 86, 394], "vuillaum": [407, 440], "vx": [312, 315, 406], "vy": [312, 315], "vz": [312, 315], "w": [26, 31, 49, 86, 190, 203, 305, 382, 406, 460, 462, 470, 480, 486, 490, 492, 528, 580, 582], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 102, 104, 118, 124, 126, 127, 130, 133, 169, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 374, 381, 384, 386, 387, 388, 389, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 411, 421, 424, 425, 426, 427, 428, 429, 436, 440, 441, 442, 443, 444, 445, 446, 452, 454, 456, 462, 464, 466, 470, 486, 492, 494, 495, 496, 497, 505, 579], "wacroka1": 478, "wagner": 479, "wai": [33, 38, 83, 87, 91, 198, 290, 332, 338, 380, 381, 382, 384, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 401, 402, 405, 407, 413, 414, 415, 417, 420, 424, 440, 441, 454, 456, 458, 461, 464, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 494, 495, 496, 497, 499, 509, 516, 518, 519, 523, 532, 577, 579, 581], "wait": [381, 410, 411], "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 104, 107, 124, 150, 176, 201, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 381, 383, 384, 386, 387, 388, 391, 395, 396, 397, 399, 400, 401, 411, 412, 413, 414, 415, 417, 418, 421, 441, 453, 456, 457, 458, 459, 461, 468, 469, 472, 473, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 503, 504, 505, 523, 576, 579, 580, 581, 582, 583], "ward": 306, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 104, 124, 194, 214, 215, 216, 217, 272, 273, 274, 276, 367, 406, 411, 423, 440, 445, 446, 447, 448, 451, 459, 460, 461, 464, 465, 466, 469, 472, 475, 476, 494, 495, 519, 543, 551, 579], "warn_miss": 87, "warn_with_traceback": 381, "wasn": [388, 441], "watch": [495, 583], "water": [413, 496], "watson": 422, "wavelength": 400, "wavelet": [420, 438], "wc": [13, 16, 83, 102, 105, 109, 127, 168, 176, 177, 181, 192, 193, 194, 196, 201, 202, 204, 205, 206, 221, 224, 225, 234, 237, 248, 250, 261, 262, 266, 272, 276, 341, 376, 381, 387, 395, 400, 422, 423, 424, 426, 432, 440, 441, 445, 447, 456, 457, 460, 461, 462, 464, 466, 470, 473, 476, 480, 482, 485, 486, 488, 489, 490, 495, 503, 504, 505, 528, 531, 536, 537, 538, 543], "wcda": [57, 70], "wcs_geom": [201, 224, 248, 487, 532], "wcs_geom_3d": 487, "wcs_geom_cel": 487, "wcs_map": [205, 206, 374], "wcs_tile": [192, 194], "wcsax": [102, 105, 109, 110, 194, 201, 202, 206, 224, 248, 376, 378, 464, 487, 505, 535, 539, 540, 541], "wcsconfig": 16, "wcsgeom": [23, 83, 102, 105, 109, 110, 111, 114, 116, 122, 123, 133, 152, 161, 163, 173, 186, 187, 191, 192, 201, 205, 206, 220, 221, 225, 234, 237, 250, 252, 261, 262, 266, 272, 276, 382, 387, 395, 422, 425, 426, 427, 432, 445, 447, 448, 456, 460, 461, 466, 468, 469, 470, 472, 476, 480, 482, 483, 485, 486, 487, 488, 490, 495, 496, 504, 505, 515, 517, 526, 528, 529, 532, 535, 537, 538, 539, 540], "wcslib": 381, "wcsmap": [193, 194, 196, 206, 443], "wcsndmap": [102, 105, 111, 116, 118, 133, 141, 161, 163, 166, 168, 170, 175, 176, 177, 178, 181, 186, 187, 192, 193, 194, 196, 202, 204, 205, 207, 208, 224, 248, 264, 272, 368, 374, 376, 387, 425, 426, 427, 429, 432, 434, 441, 443, 446, 447, 460, 461, 470, 480, 482, 486, 487, 495, 505, 515, 517, 525, 528], "wcsprm": 543, "wcsshape": 487, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 101, 133, 175, 201, 204, 214, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 281, 356, 381, 382, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 411, 412, 413, 414, 415, 417, 420, 421, 422, 423, 428, 432, 434, 439, 440, 441, 442, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 501, 503, 504, 505, 516, 523, 524, 526, 528, 531, 542, 545, 555, 576, 579, 580, 581, 582, 583], "weak": [400, 483, 492], "weaker": 287, "weakli": 488, "web": [87, 91, 389, 407, 411, 417, 418, 432, 440, 448, 481], "webpag": [383, 389, 401, 407, 410, 440, 443], "websit": 448, "wedg": 395, "week": [384, 389, 399, 401, 406, 410], "weekli": [387, 390, 394, 395, 473], "wegen": [440, 441], "weigh": [163, 166, 492], "weight": [67, 105, 110, 151, 152, 158, 161, 163, 166, 192, 193, 194, 196, 201, 202, 204, 205, 206, 233, 243, 257, 274, 279, 409, 442, 446, 467, 492, 515, 531], "weighted_chi2_paramet": 467, "weighted_kernel": 161, "welcom": [386, 395, 495], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 105, 110, 115, 117, 122, 123, 131, 192, 196, 198, 202, 204, 214, 218, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 371, 372, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 432, 434, 435, 440, 441, 442, 446, 447, 452, 453, 459, 462, 467, 469, 473, 475, 478, 482, 483, 484, 485, 486, 487, 488, 490, 494, 495, 499, 503, 504, 505, 515, 516, 517, 528, 531, 532, 576, 577, 579, 581], "went": 421, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 104, 124, 137, 295, 381, 386, 387, 388, 389, 394, 396, 397, 398, 399, 400, 401, 402, 404, 406, 409, 411, 421, 424, 425, 426, 427, 428, 429, 432, 435, 440, 441, 444, 465, 476, 478, 488, 492, 494, 582], "wg": 410, "wgvvbznc": 478, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 281, 338, 382, 387, 395, 398, 400, 401, 408, 411, 419, 470, 480, 481, 483, 484, 494, 495, 499, 504, 507, 515, 532, 564, 579, 580, 583], "whatev": [395, 397, 398, 579], "wheel": [398, 448], "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 122, 123, 124, 125, 140, 151, 152, 158, 163, 165, 166, 176, 179, 193, 194, 196, 198, 200, 202, 205, 206, 211, 212, 218, 219, 222, 224, 226, 228, 229, 230, 233, 235, 239, 241, 242, 243, 245, 248, 249, 251, 253, 254, 255, 257, 260, 265, 267, 268, 269, 270, 273, 276, 277, 279, 320, 380, 381, 382, 384, 386, 387, 388, 391, 393, 395, 396, 398, 401, 406, 407, 408, 409, 410, 413, 414, 415, 426, 434, 435, 440, 442, 445, 446, 447, 452, 458, 462, 466, 469, 470, 473, 474, 476, 481, 484, 486, 487, 490, 491, 494, 495, 515, 517, 519, 524, 526, 530, 531, 578, 580, 581, 582, 583], "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 104, 123, 124, 125, 128, 133, 150, 151, 152, 158, 163, 166, 168, 179, 191, 192, 193, 194, 196, 198, 201, 202, 204, 205, 206, 207, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 292, 295, 298, 300, 308, 345, 382, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 408, 409, 411, 413, 415, 417, 423, 435, 441, 451, 456, 461, 468, 469, 481, 486, 487, 488, 490, 492, 494, 495, 496, 505, 507, 515, 516, 519, 524, 531, 536, 537, 538, 541, 542, 545, 578, 579, 580, 581, 582, 583], "wherea": [387, 395, 398, 579], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 102, 104, 105, 107, 109, 110, 123, 124, 125, 126, 133, 147, 148, 149, 150, 153, 154, 155, 157, 160, 162, 164, 165, 179, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 211, 218, 219, 222, 224, 226, 228, 229, 230, 235, 239, 241, 242, 245, 248, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 274, 276, 277, 290, 308, 317, 344, 347, 349, 350, 378, 386, 388, 395, 398, 400, 401, 408, 446, 459, 472, 483, 486, 487, 505, 531, 580, 581], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 101, 102, 104, 105, 107, 109, 110, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 141, 142, 143, 147, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 168, 169, 173, 174, 179, 180, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 209, 211, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 230, 234, 235, 237, 241, 242, 245, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 277, 281, 287, 289, 290, 291, 295, 296, 297, 299, 304, 306, 320, 330, 340, 341, 359, 368, 370, 375, 377, 380, 382, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 418, 422, 423, 424, 426, 427, 428, 429, 432, 435, 441, 443, 446, 448, 451, 452, 453, 456, 459, 460, 461, 462, 464, 467, 468, 469, 470, 473, 475, 476, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 503, 504, 505, 509, 510, 515, 516, 517, 519, 521, 522, 523, 525, 526, 528, 530, 531, 532, 533, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 576, 577, 578, 579, 580, 581, 582], "whichev": [192, 193, 194], "while": [87, 91, 105, 193, 194, 196, 198, 202, 205, 206, 381, 384, 386, 387, 388, 390, 393, 394, 396, 400, 402, 403, 405, 406, 407, 410, 411, 413, 451, 456, 458, 461, 469, 475, 476, 482, 483, 485, 486, 487, 489, 490, 515, 517, 519, 530, 532, 579], "whilst": [382, 491, 499], "whippl": 97, "whirlwind": 499, "white": [296, 370, 371, 466, 476, 484, 489, 507, 532], "whitespac": 326, "who": [407, 480, 507], "whole": [95, 118, 170, 173, 180, 183, 184, 186, 187, 192, 193, 194, 196, 205, 206, 249, 280, 289, 291, 381, 387, 393, 396, 407, 453, 456, 464, 469, 473, 476, 482, 490, 495, 497, 576], "whose": [407, 411, 469, 525, 537], "why": [381, 382, 386, 388, 395, 484, 532], "wide": [388, 407, 408, 422, 441, 454, 465, 578], "wider": [474, 488, 526], "widget": [193, 194, 196, 202, 205, 206, 464, 472, 487, 503, 504], "width": [16, 27, 68, 83, 87, 91, 102, 105, 109, 110, 111, 112, 113, 115, 116, 117, 118, 128, 133, 150, 151, 152, 155, 158, 161, 163, 166, 168, 173, 178, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 221, 224, 225, 234, 236, 237, 248, 250, 261, 262, 264, 266, 272, 274, 276, 371, 372, 397, 404, 442, 457, 458, 460, 461, 462, 464, 466, 467, 468, 469, 470, 472, 473, 476, 480, 481, 482, 485, 486, 487, 488, 490, 495, 496, 503, 504, 505, 526, 528, 529, 530, 531, 532, 536, 537, 538, 540, 541, 542], "width_err": 481, "width_error": 68, "width_min": 201, "width_pix": [192, 193, 194], "widthconfig": 16, "wiki": [34, 83, 88, 432, 497], "wikipedia": [34, 83, 88, 337, 395, 399], "wilei": [135, 144], "wilk": [287, 517, 581], "willing": 384, "wind": [50, 462, 467, 490, 510], "window": [112, 113, 380, 381, 388, 398, 411, 412, 413, 415, 421, 437, 441, 460, 481, 578, 579, 581], "wise": [19, 20, 26, 87, 91, 141, 142, 194, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 409, 434, 448, 462, 464, 515], "wish": [201, 384, 399, 467, 484], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [391, 392, 393, 396, 403, 405], "withdrawn": [385, 386, 391, 392, 393, 396, 403, 405], "within": [126, 129, 141, 192, 206, 223, 224, 225, 231, 236, 237, 238, 239, 240, 248, 256, 261, 263, 264, 275, 278, 380, 381, 382, 386, 390, 395, 397, 398, 399, 400, 401, 404, 406, 407, 409, 410, 411, 412, 413, 415, 435, 438, 440, 444, 446, 448, 457, 458, 464, 467, 473, 474, 475, 478, 481, 483, 485, 486, 487, 490, 491, 495, 499, 505, 515, 518, 519, 578], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 130, 153, 191, 192, 197, 201, 204, 243, 378, 381, 384, 386, 389, 391, 395, 396, 397, 398, 400, 405, 411, 422, 423, 427, 448, 457, 460, 464, 465, 478, 480, 486, 487, 488, 503, 519, 530, 531, 532, 574, 579, 581], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wj9cu_af": 478, "wl": [26, 480], "wo": 476, "wobbl": [95, 475, 494], "wobbleregionfind": 434, "wobbleregionsfind": 458, "wolfram": [335, 336], "women": 437, "won": [118, 122, 126, 130, 133, 353, 406, 464, 487, 494, 582], "wong": [424, 448], "wood": [388, 438, 440, 441], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 519], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 125, 203, 345, 380, 381, 382, 384, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 403, 406, 407, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 433, 436, 437, 438, 439, 440, 441, 442, 443, 448, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505, 515, 519, 529, 531, 543, 545, 551, 567, 573, 574, 579], "workaround": [398, 448], "workflow": [384, 389, 390, 397, 402, 406, 411, 426, 448, 457, 462, 499, 503, 504, 520], "workshop": 390, "workspac": 384, "world": [83, 204, 224, 248, 381, 387, 466, 505, 531], "worst": 384, "worth": [381, 507], "would": [16, 84, 87, 90, 91, 95, 104, 124, 193, 194, 196, 202, 205, 206, 243, 381, 384, 387, 388, 389, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 408, 423, 432, 454, 456, 459, 460, 472, 484, 487, 488, 490, 492, 495, 532], "wouldn": 395, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 198, 260, 316, 395, 425, 448], "wrap_at": 392, "wrap_coord": 198, "wrapper": [56, 249, 260, 320, 395, 396, 423, 426, 507, 519], "write": [11, 15, 16, 26, 82, 86, 87, 88, 91, 100, 101, 102, 105, 107, 109, 110, 123, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 193, 194, 196, 200, 202, 205, 206, 212, 224, 239, 248, 272, 273, 274, 275, 276, 350, 359, 382, 384, 390, 391, 392, 393, 394, 395, 397, 398, 400, 401, 403, 404, 405, 407, 408, 409, 411, 417, 420, 426, 429, 434, 436, 439, 440, 441, 442, 447, 448, 451, 456, 464, 465, 468, 470, 485, 489, 490, 494, 495, 501, 503, 504, 519, 524, 580, 582], "write_arf": 107, "write_bkg": 107, "write_covari": [15, 100, 212, 224, 248], "write_dataset": 15, "write_ds9": 490, "write_model": 15, "write_pha": 107, "write_rmf": 107, "writeabl": 409, "writer": [87, 91, 401, 408], "writeto": [86, 147, 148, 149, 153, 154, 155, 157, 160, 162, 164, 165, 468], "written": [88, 100, 101, 102, 105, 107, 109, 110, 123, 125, 151, 152, 158, 163, 166, 193, 194, 196, 200, 202, 205, 206, 208, 381, 382, 384, 386, 390, 391, 401, 407, 409, 444, 451, 469, 489, 492, 507, 515, 516, 519, 532, 578], "wrong": [381, 430, 444, 445, 446], "wrote": 407, "wrt": [83, 163, 166, 381, 399, 475, 574], "wstat": [105, 110, 301, 302, 393, 420, 438, 439, 452, 456, 457, 459, 462, 466, 476, 482, 492, 515, 578], "wstatcountsstatist": [476, 581], "wt": [26, 480], "wun": 424, "www": [26, 67, 87, 91, 135, 144, 401, 494, 519], "wyatt": [420, 578], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 102, 109, 128, 135, 141, 142, 144, 148, 198, 202, 203, 211, 214, 216, 218, 221, 222, 225, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 252, 253, 254, 255, 256, 260, 261, 262, 263, 265, 268, 269, 270, 275, 276, 290, 296, 297, 300, 311, 312, 313, 315, 319, 321, 326, 335, 370, 373, 374, 381, 382, 386, 388, 389, 390, 395, 406, 410, 413, 415, 454, 459, 460, 466, 469, 476, 478, 479, 481, 484, 485, 487, 492, 495, 505, 513, 519, 536, 537, 579, 581], "x27": [483, 485], "x86_64": [451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "x_": 128, "x_0": [193, 194, 196, 202, 205, 206], "x_1": 320, "x_2": 320, "x_3": 320, "x_bkg": 476, "x_edg": 129, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [193, 194, 196, 202, 205, 206], "x_j": 128, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [128, 333, 335, 470], "x_min": [128, 333, 335, 470], "x_n": [193, 194, 196, 202, 205, 206], "x_r_0": 237, "x_ref": [128, 470], "x_sigma": 234, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [211, 484], "xarg": 381, "xaxi": [483, 519], "xebyak6d": 478, "xerr": [451, 478, 492], "xf": 494, "xfail": 381, "xlabel": [382, 446, 462, 475, 478, 492, 495, 511, 512, 513, 536, 573], "xlim": [368, 464, 492, 495, 513], "xmax": [17, 18, 21, 22, 24, 25, 27, 202, 409], "xmin": [17, 18, 21, 22, 24, 25, 27, 202, 409], "xml": [390, 391, 392, 425, 439, 441, 494, 507], "xmltodict": [433, 494], "xref": 128, "xspec": [226, 277, 305, 439, 452, 580], "xunit": [458, 545], "xviii": 401, "xx": [392, 407], "xxx": [87, 91, 386, 407], "xxx_by_coord": 487, "xxxx": 519, "xy": [456, 466, 470, 536], "xy_posit": [33, 34, 38], "xytext": 536, "xyz": 410, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 141, 142, 148, 198, 211, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 311, 312, 313, 315, 319, 321, 373, 381, 395, 406, 413, 415, 446, 451, 460, 466, 469, 478, 484, 492, 513, 519], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [211, 484], "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 101, 102, 104, 105, 109, 110, 123, 124, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 287, 344, 347, 349, 350, 380, 389, 390, 392, 393, 394, 397, 398, 403, 408, 409, 410, 411, 412, 424, 425, 426, 429, 434, 443, 447, 448, 451, 453, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 504, 505, 518, 576, 577, 578, 579], "yaml_str": [224, 248, 457], "yaxi": [454, 483, 519], "ye": 411, "year": [45, 61, 65, 78, 381, 386, 388, 389, 391, 398, 401, 402, 406, 408, 411, 438, 440, 441, 465, 467, 481, 494, 511, 512, 513, 514], "yearli": [414, 439], "yellow": 371, "yerr": [476, 478], "yet": [89, 380, 381, 384, 386, 388, 395, 398, 401, 402, 448, 449, 454, 457, 503, 583], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 193, 194, 196, 202, 205, 206, 345, 388, 394, 395, 400, 402, 404, 409, 488, 580, 581, 582], "yjlei0vc": 478, "yk04": [45, 48], "yk04b": 48, "ylabel": [382, 475, 478, 492, 495, 511, 512, 513, 536, 573], "ylim": [368, 452, 462, 492, 495, 511, 513, 552, 561, 562, 563], "ymax": [536, 537], "ymin": [536, 537], "yml": [384, 398, 410, 411, 412, 413, 415, 440, 448], "ynlkt3or": 478, "ynqripai": 478, "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 101, 104, 107, 124, 125, 141, 148, 150, 153, 176, 193, 194, 196, 202, 205, 206, 211, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 280, 287, 380, 381, 382, 383, 384, 386, 388, 391, 395, 398, 399, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 432, 440, 441, 442, 448, 452, 453, 454, 456, 457, 458, 459, 461, 462, 464, 466, 468, 469, 472, 474, 475, 476, 478, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 499, 503, 504, 505, 515, 516, 519, 522, 526, 530, 553, 576, 579, 580, 581, 582, 583], "your": [16, 19, 20, 26, 84, 90, 99, 104, 124, 218, 219, 222, 226, 228, 229, 230, 235, 241, 242, 245, 249, 251, 253, 254, 255, 260, 265, 267, 268, 269, 270, 273, 277, 380, 381, 382, 384, 386, 388, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423, 426, 427, 432, 441, 442, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 514, 519, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 578, 581], "yourself": [579, 580], "yr": [45, 52, 53, 509, 511, 512, 513], "yscale": [462, 571], "yt": 381, "yu": [424, 448], "yunit": [456, 458, 480, 481, 495, 556], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 440, "yy": 407, "yyyi": 407, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 311, 312, 315, 406, 407, 413, 415, 480, 509, 545], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 436, "zanin": [440, 441], "zd": 83, "zen": 491, "zen_pnt": 491, "zenith": [451, 465, 491, 494, 495, 496, 524], "zenith_angl": [83, 408, 495, 505], "zenodo": [407, 434, 494], "zero": [52, 53, 67, 87, 91, 100, 102, 105, 109, 110, 133, 141, 150, 151, 152, 155, 158, 163, 179, 193, 194, 196, 202, 205, 206, 252, 274, 276, 320, 326, 338, 381, 425, 428, 443, 448, 481, 486, 487, 492, 582], "zhao": [27, 447], "zhen": [135, 144], "zip": [396, 409, 410, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 501, 503, 504, 505, 513, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "zl": [26, 480], "zone": 476, "zs3cepjv": 464, "zsh": 382, "zt": [26, 480], "z\u00e9": 439, "\u00e0": 438, "\u0261\u00e6m\u0259pa\u026a": 519, "\u03b3": [137, 507, 578], "\u03c3": 467}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_empty_map_dataset_from_irfs", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "SensitivityEstimator", "TSMapEstimator", "combine_flux_maps", "combine_significance_maps", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_flux_maps", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianPrior", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "LogUniformPrior", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "UniformPrior", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (November 26th, 2024)", "2.0 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 457, 469, 497, 503], "0": [390, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449], "1": [386, 390, 409, 419, 420, 427, 428, 430, 435, 443, 444, 445, 446, 447, 448, 492], "10": [395, 419, 421], "10th": 443, "11": [396, 419, 422], "12": [397, 419, 423], "12th": 434, "13": [398, 419, 424, 433, 436], "13th": 446, "14": [399, 419, 425], "14th": 444, "15": [419, 426], "16": [400, 419, 427], "16th": 435, "17": [419, 428], "18": [401, 419, 429, 430, 431], "19": [402, 419, 432], "19th": 431, "1d": [457, 459, 465, 473, 474, 499], "1dc": 494, "2": [387, 388, 409, 419, 431, 433, 445, 447, 449, 492, 558], "20": [403, 419, 434, 435, 437], "2014": 420, "2015": [433, 436], "2016": [437, 438], "2017": 439, "2018": [440, 441, 442], "2019": [421, 422, 423, 424, 425, 426], "2020": [427, 428, 429, 430, 431], "2021": 432, "2022": [434, 435, 443], "2023": [444, 445, 446], "2024": [447, 448], "21": 404, "2155": 483, "22": [405, 438], "22nd": 432, "23": [406, 441], "24": 407, "25": [408, 420], "26": [409, 424], "26th": 448, "28": [421, 439, 440], "29": [422, 442], "29th": 447, "2d": [461, 499], "3": [388, 409, 419, 426, 436, 448], "30": [423, 425], "304": 483, "32": 381, "3955": 409, "3d": [464, 465, 472, 473, 499], "3fgl": [550, 561], "3fhl": 465, "4": [389, 419, 437], "4122": 409, "4fgl": [562, 563], "4th": 429, "5": [390, 419, 438], "6": [391, 419, 439], "64": 381, "6th": [430, 445], "7": [388, 392, 419, 440], "8": [393, 419, 441], "9": [394, 419, 442], "A": [456, 483], "As": 525, "In": 382, "ON": [453, 458, 465], "On": 459, "The": [387, 411, 465, 467, 483, 484, 492, 516, 528], "To": [381, 382, 401, 519], "about": 492, "abov": 467, "absolute_tim": 362, "absorpt": [404, 452, 545], "abstract": [386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409], "accept": 384, "access": [460, 482, 483, 487, 496, 516], "accessor": 531, "account": 452, "action": [381, 401], "ad": 487, "adapt": 460, "adaptiveringbackgroundmak": 168, "add": [392, 489], "add_colorbar": 369, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [404, 409, 525, 577], "aeff_2d": 521, "against": 458, "aim": 489, "algorithm": 478, "alia": 404, "all": 474, "along": 408, "altern": [389, 392, 394, 395, 396, 397, 398, 399, 401, 402, 405, 408], "amplitud": [409, 492], "an": [381, 451, 468, 469, 482, 488], "anaconda": 414, "analysi": [0, 11, 15, 387, 390, 451, 453, 456, 457, 458, 459, 464, 465, 466, 473, 476, 499, 503, 515, 518, 577], "analysisconfig": 16, "angl": [521, 522, 523, 525], "angular": 532, "annihil": 480, "annotate_heatmap": 370, "api": [6, 381, 382, 403, 405, 408, 409, 443, 446, 447, 448, 483, 499, 504], "apply_edisp": [111, 116], "approach": [396, 453, 454, 457, 459, 460, 461, 462, 465, 468, 469, 470, 472, 473, 474, 475, 478, 479, 484, 488, 489, 491, 503, 504], "apr": [428, 433, 437, 439], "arbitrari": 408, "area": [485, 494, 521], "argument": [381, 395], "arm": 509, "asmoothmapestim": 118, "assert": 381, "assert_quantity_allclos": 356, "assert_skycoord_allclos": 357, "assert_time_allclos": 358, "assess": [464, 484], "assign": [474, 489], "astro": [1, 507, 510], "astronomi": 396, "astrophys": [1, 508, 509, 510], "astropi": [381, 406], "asymmetr": 485, "attribut": [381, 382, 392], "aug": [420, 436], "author": 407, "authorship": 407, "avail": 481, "ax": [487, 532], "axi": [381, 524], "backend_default": 323, "background": [392, 396, 400, 403, 409, 462, 467, 468, 486, 489, 494, 495, 503, 522, 526, 527, 528, 529, 580], "background2d": 147, "background3d": 148, "backgroundirf": 149, "backgroundirfmodel": 392, "backgroundmodel": 392, "backport": 381, "base": [405, 408, 530], "basic": [466, 487], "bayesian": 479, "between": 403, "bin": [396, 451, 467, 532], "binder": 411, "bit": 381, "bkg_2d": 522, "bkg_3d": 522, "block": 479, "boundari": 488, "branch": 410, "break": 381, "broken": [382, 546, 560], "brokenpowerlawspectralmodel": 218, "bsd": 381, "bug": [434, 443, 446, 447, 448], "bugfix": 410, "build": [382, 384, 411, 473, 474], "built": 576, "bullet": 382, "bundl": 381, "burkertprofil": 17, "butterfli": 504, "call": 392, "candid": [410, 460], "caplog": 381, "cartesian": 309, "case": [387, 391, 409, 582], "casebattacharya1998": 28, "cash": [292, 580, 581], "cash_sum_cython": 293, "cashcountsstatist": 289, "catalog": [2, 481, 488, 489, 505, 514], "catalog_registri": 55, "caveat": 580, "cell": 381, "certif": 384, "cff": 407, "chain": [456, 458], "chang": [381, 402, 443, 446, 447, 448], "changelog": 401, "character": 479, "check": [11, 381, 382, 416, 451, 453, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "checker": 355, "chi": 467, "choos": 382, "citat": 407, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 381, 382, 391, 392, 405, 408, 504, 525, 581], "clean": 400, "cli": 579, "click": 381, "clobber": 381, "clumpi": 507, "cluster": [13, 491], "code": [381, 382, 387, 390, 411], "codemeta": 407, "collect": 407, "colormap": 584, "colormap_hess": 371, "colormap_milagro": 372, "combin": [489, 516], "combine_flux_map": 134, "combine_significance_map": 135, "command": [11, 381, 579], "common": 483, "compar": [458, 473], "compound": [490, 547], "compound_region_to_region": 339, "compoundspectralmodel": 219, "comput": [450, 451, 455, 456, 457, 462, 463, 466, 471, 477, 484, 493, 498, 500, 502, 504, 506, 534, 544, 565, 575], "compute_chisq": 294, "compute_flux_doubl": 295, "compute_fpp": 296, "compute_fvar": 297, "compute_lightcurve_discrete_correl": 136, "compute_lightcurve_doublingtim": 137, "compute_lightcurve_fpp": 138, "compute_lightcurve_fvar": 139, "conda": 412, "confer": 407, "confid": 484, "config": [11, 461, 462, 579], "configur": [457, 464, 470, 473, 483, 503, 577], "constant": [535, 548, 566], "constantfluxspatialmodel": 220, "constantspatialmodel": 221, "constantspectralmodel": 222, "constanttemporalmodel": 223, "contain": 408, "containment_radiu": 207, "containment_region": 208, "content": [482, 532], "context": [453, 454, 456, 457, 458, 459, 460, 461, 462, 465, 467, 468, 470, 472, 473, 474, 475, 478, 479, 488, 491, 492, 503, 504], "contigu": 487, "continu": 411, "contour": 484, "contribut": [384, 407, 489], "contributor": [407, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "conveni": 393, "convent": 381, "convers": [381, 483], "convert": 381, "coordin": [13, 381, 392, 522, 532], "correct": 382, "correl": 462, "count": [483, 489, 495, 515, 581], "covari": [209, 484], "covarianceresult": 210, "creat": [453, 456, 461, 462, 469, 482, 483, 485, 487, 488, 504, 532], "create_cosmic_ray_spectral_model": 280, "create_crab_spectral_model": 281, "create_empty_map_dataset_from_irf": 112, "create_fermi_isotropic_diffuse_model": 282, "create_map_dataset_from_observ": 113, "create_map_dataset_geom": 114, "creation": [453, 457, 474], "cstat": 298, "cta": [391, 494], "ctao": 494, "cube": [387, 487, 499], "cumul": 453, "current": 406, "curv": [396, 473, 474, 475, 483, 573, 574], "custom": [490, 492, 576], "cut": [454, 458], "cutoff": [549, 550, 551, 561, 562, 563], "cutout": 487, "cycl": 406, "cython": [406, 411], "d_sun_to_galactic_cent": 308, "dark": [480, 507], "darkmatt": [1, 507], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 381, 387, 389, 390, 396, 408, 411, 452, 453, 456, 457, 458, 464, 465, 467, 470, 473, 474, 476, 478, 482, 486, 487, 496, 499, 503, 504, 505, 516, 527, 579, 580], "dataflow": 408, "dataset": [4, 11, 99, 100, 381, 390, 393, 402, 403, 408, 451, 453, 457, 458, 461, 462, 464, 465, 469, 473, 474, 475, 482, 483, 484, 486, 488, 489, 492, 496, 503, 504, 515], "dataset_registri": 98, "datasetmodel": 224, "datasetsmak": 169, "datastor": [82, 494, 504], "dco": [384, 407], "deal": 382, "dec": 426, "decai": 480, "decemb": 445, "decis": [386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409], "default": 392, "defin": [451, 453, 456, 458, 466, 468, 469, 473, 474, 488, 504, 532], "definit": [407, 473, 527], "depend": [380, 398, 404, 434, 458, 467, 469, 490], "deprec": [381, 406], "deriv": 582, "detail": [388, 464], "detect": [402, 460, 466, 524], "detector": 522, "develop": [381, 383, 384, 388], "diagram": 391, "differ": [465, 487, 583], "diffus": 495, "dilat": 488, "direct": 458, "discrete_correl": 299, "discuss": 396, "disk": [457, 469, 503, 504, 536], "diskspatialmodel": 225, "dispers": [485, 494, 495, 523], "dissolv": 400, "distribut": [398, 497, 509], "dl3": [3, 465, 497, 516, 524, 527], "dl4": [485, 515, 517, 527, 531, 576], "dl5": [517, 576], "dl6": 517, "dmprofil": 18, "do": 381, "doc": 411, "docstr": 382, "document": [382, 384, 390, 401, 447, 448], "doubl": 479, "download": [11, 411], "downsampl": 532, "dr1": [497, 563], "dr2": 563, "dr3": 562, "draw": 331, "driven": 579, "drop": 388, "due": 452, "durat": 486, "e": 497, "each": 467, "earli": 384, "earth_location_from_dict": 318, "ebl": [452, 545], "ebl_data_builtin": 227, "eblabsorptionnormspectralmodel": 226, "edg": 517, "edisp": 485, "edisp_2d": 523, "edispkernel": 150, "edispkernelmap": 151, "edispmap": 152, "effect": [485, 486, 494, 521], "effectiveareatable2d": 153, "einastoprofil": 21, "elaps": 583, "empti": 482, "encourag": 492, "end": 381, "energi": [404, 451, 458, 467, 469, 485, 488, 490, 494, 495, 517, 521, 522, 523, 525], "energydependentmorphologyestim": 120, "energydependentmultigausspsf": 154, "energydispersion2d": 155, "environ": 412, "eros": 488, "error": [484, 581], "estim": [5, 121, 399, 402, 405, 408, 457, 460, 467, 470, 473, 478, 479, 483, 486, 517, 527, 528, 581], "estimate_exposure_reco_energi": 140, "estimator_registri": 119, "evalu": [392, 393, 394], "event": [390, 394, 468, 469, 476, 487, 494, 495, 497, 505, 516, 524], "eventlist": 83, "eventlistmetadata": 84, "evolut": 469, "exampl": [411, 492, 515, 517, 518, 526, 527, 528, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 580], "excess": [405, 453, 462, 479, 581], "excessmapestim": 122, "exclus": [456, 457, 462, 488, 503], "execut": 579, "exemplari": 409, "exercis": [451, 454, 456, 459, 464, 466, 468, 469, 475, 478, 494, 495, 496, 497, 505], "exist": 387, "expcutoffpowerlaw3fglspectralmodel": 228, "expcutoffpowerlawnormspectralmodel": 229, "expcutoffpowerlawspectralmodel": 230, "expdecai": 567, "expdecaytemporalmodel": 231, "expect": 524, "explor": [453, 457, 466, 499], "exponenti": [29, 454, 549, 550, 551, 561, 562, 563], "expos": 392, "exposur": [485, 495], "extend": [453, 468], "extens": [382, 452], "extern": 381, "extra": 411, "extract": [462, 473, 474, 475], "extrapol": [381, 564], "f_cash_root_cython": 300, "factor": 480, "factori": 487, "factoris": 524, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 409, "featur": [14, 406, 410, 443, 446, 447, 448, 483], "feb": [427, 440], "februari": 447, "fermi": [465, 495], "fermist": 507, "file": [382, 407, 457, 461, 462, 465, 494, 503, 516, 532], "fill": [487, 532], "filter": 474, "final": [386, 410, 457, 582], "find_peak": 141, "find_peaks_in_flux_map": 142, "finder": 528, "first": [410, 457], "fit": [10, 13, 211, 390, 396, 452, 453, 454, 456, 457, 458, 461, 464, 465, 466, 472, 475, 484, 488, 492, 495, 503, 504, 532, 576, 580, 581, 582], "fitresult": 212, "fix": [381, 434, 443, 446, 447, 448], "fixedpointinginfo": 85, "fixtur": 381, "flare": 474, "float": 381, "flux": [405, 409, 451, 452, 454, 456, 457, 465, 470, 480, 481, 483, 503, 504, 505, 517], "fluxestim": 405, "fluxmap": [123, 405, 483], "fluxmetadata": 124, "fluxpoint": [125, 483], "fluxpointscollect": 405, "fluxpointsdataset": [101, 393, 482], "fluxpointsestim": [126, 517], "fluxprofileestim": 127, "fold": 392, "folder": 411, "follow": 402, "format": [381, 382, 583], "formula": 582, "forward": 392, "found": 579, "fov": [486, 526], "fov_to_ski": 310, "fovalign": 156, "fovbackgroundmak": [170, 526], "fovbackgroundmodel": 232, "fraction": 479, "freez": [406, 410, 489], "from": [381, 474, 487, 488, 489, 532], "from_yaml": 344, "fulli": 483, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 381, 382, 494, 521, 522, 523, 524, 525, 581, 583], "further": [396, 452, 580], "galact": [311, 495], "galactocentr": 509, "galleri": [381, 382, 533], "gamlik": 507, "gamma": [396, 480], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 381, 384, 387, 390, 398, 400, 401, 402, 406, 407, 408, 410, 411, 417, 418, 485, 494, 495, 496, 497, 507, 510, 514, 515, 516, 517, 518, 524, 526, 527, 528, 531, 576, 577, 583], "gaussian": [537, 538, 552, 568, 569], "gaussianprior": 233, "gaussianspatialmodel": 234, "gaussianspectralmodel": 235, "gaussiantemporalmodel": 236, "gener": [381, 387, 391, 396, 407, 408, 517, 538, 569], "generalist": 405, "generalizedgaussianspatialmodel": 237, "generalizedgaussiantemporalmodel": 238, "geom": 191, "geometri": [453, 466, 473, 474, 487, 488, 503, 504, 530, 532], "get": [384, 401, 413, 452, 461, 462, 487, 508, 509, 510, 516, 531], "get_combined_flux_map": 143, "get_combined_significance_map": 144, "get_images_path": 345, "get_irfs_featur": 96, "get_random_st": 332, "get_rebinned_axi": 145, "get_wstat_gof_term": 301, "get_wstat_mu_bkg": 302, "github": 381, "given": 489, "global": 403, "glossari": 578, "good": 582, "gpl": 381, "group": 491, "gti": [86, 516], "guid": [383, 520], "guidelin": [382, 386, 387, 401], "h": 497, "halv": 479, "handl": [381, 390, 391, 392, 403, 407, 486, 583], "have": [389, 391, 396, 397, 405], "hawc": [465, 496], "hduindext": 87, "hduloc": 316, "healpix": 530, "help": 416, "helper": 393, "hess": 465, "hgp": 481, "hierarch": 491, "hierarchi": 408, "hierarchical_clust": 306, "high": [0, 5, 390, 397, 503, 518], "hli": 457, "how": [381, 382, 384, 401, 410, 487, 519], "hpxgeom": 192, "hpxmap": 193, "hpxndmap": 194, "hstack_column": 351, "i": [381, 384, 386, 470], "idea": 391, "imag": [382, 387, 395, 400, 460, 466, 487, 499], "imageprofil": 128, "imageprofileestim": 129, "implement": [391, 392, 401, 407, 409, 490, 492], "import": [381, 472], "improv": [392, 404, 434, 443, 446, 447, 448], "inbuilt": 485, "includ": [382, 492], "index": [487, 492, 516], "info": [11, 381], "inform": [407, 481, 492, 523], "infrastructur": 448, "input": [381, 408, 460], "inspect": 504, "instal": [401, 413, 414, 416], "instrument": [7, 465, 524], "integr": [13, 411, 451], "integrate_spectrum": 283, "interact": 403, "interest": 467, "interfac": [0, 390, 392, 397, 503, 518, 531], "intern": 483, "interpol": [13, 381, 487], "interpolate_profil": 321, "interpolation_scal": 322, "interv": 474, "intrins": 452, "introduc": [392, 400, 402, 404, 405, 470], "introduct": [392, 395, 396, 398, 399, 401, 405, 407, 408, 451, 456, 458, 466, 476, 480, 481, 482, 486, 487, 494, 495, 496, 497, 499, 505, 507, 509, 510, 580], "inversecdfsampl": 330, "ipython": 417, "irf": [7, 157, 390, 408, 451, 482, 485, 494, 524], "irf_registri": 159, "irfmap": 158, "isothermalprofil": 22, "isotrop": 495, "issu": [416, 448], "iter": 487, "j": 480, "jan": 421, "jfactori": 23, "joint": [464, 465, 515], "json": 407, "jul": 424, "june": [435, 446], "jupyt": [381, 413, 415, 417], "kei": 483, "kernel": 485, "known": 448, "labelmapaxi": [195, 487], "lat": [465, 495], "latest": 494, "law": [454, 546, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563], "lazi": 393, "lazyfitsdata": 317, "lc": 473, "let": 469, "level": [0, 5, 387, 390, 397, 503, 504, 518], "li": 476, "licens": 381, "light": [396, 473, 474, 475, 483, 574], "lightcurv": [396, 468, 475, 479, 481], "lightcurveestim": [130, 517], "lightcurvetemplatetemporalmodel": 239, "like": [468, 483], "likelihood": 582, "limit": 391, "line": [11, 381, 579], "linear": 570, "lineartemporalmodel": 240, "link": 382, "list": [382, 392, 393, 394, 395, 396, 397, 398, 468, 474, 481, 487, 488, 489, 490, 505, 516], "literatur": 458, "livetim": 486, "load": [393, 451, 452, 454, 456, 458, 481, 483, 489, 496], "load_irf_dict_from_fil": 167, "locat": 381, "log": [11, 381, 454, 553, 554], "logparabolanormspectralmodel": 241, "logparabolaspectralmodel": 242, "logspir": 34, "loguniformprior": 243, "long": 407, "loop": [453, 486, 504], "lorimer2006": 35, "low": [387, 504], "lt": 406, "ma": 476, "mai": [423, 434], "maintain": [388, 407], "mainten": 390, "major": 410, "make": [381, 384, 410, 466, 469, 476, 504], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 340, "make_counts_rad_max": 182, "make_edisp_kernel_map": 183, "make_edisp_map": 184, "make_effective_livetime_map": 185, "make_map_background_irf": 186, "make_map_exposure_true_energi": 187, "make_observation_time_map": 188, "make_orthogonal_rectangle_sky_region": 341, "make_path": 346, "make_psf_map": 189, "make_theta_squared_t": 190, "maker": [8, 172, 402, 408, 453, 474, 486, 503, 504, 526, 527, 528], "maker_registri": 171, "mamba": 414, "manag": [390, 414], "manual": [488, 491], "map": [9, 196, 200, 387, 390, 391, 460, 461, 462, 465, 466, 472, 476, 480, 485, 487, 488, 489, 501, 505, 517, 530, 531, 532], "mapax": 197, "mapaxi": 198, "mapcoord": [199, 531], "mapdataset": [102, 393, 464, 468, 482, 496, 515], "mapdataseteventsampl": [103, 394], "mapdatasetmak": [173, 527], "mapdatasetmetadata": 104, "mapdatasetonoff": [105, 393], "mappanelplott": 368, "mar": 422, "march": 444, "mask": [395, 456, 457, 462, 482, 488, 503], "materi": 407, "matter": [480, 507], "measur": 580, "meet": 390, "messag": 381, "met": 583, "metadata": [407, 408], "method": [382, 393, 394, 409, 479, 487, 517, 531], "method_default": 324, "method_kwargs_default": 325, "meyercrabspectralmodel": 245, "miniconda": 414, "minor": 402, "mission": 583, "model": [10, 246, 248, 390, 392, 400, 403, 404, 408, 409, 452, 453, 456, 457, 458, 461, 464, 465, 466, 468, 469, 473, 474, 475, 478, 480, 481, 482, 484, 489, 490, 492, 494, 503, 504, 505, 509, 510, 511, 512, 513, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 580], "model_registri": 244, "modelbas": 247, "modif": 488, "modifi": [381, 487, 490], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 467, "morphologi": 490, "motion_since_birth": 312, "motiv": 409, "mpl_plot_check": 359, "multi": 465, "multipl": [468, 489, 492, 515], "multiprocessing_manag": 328, "n_jobs_default": 326, "naima": 555, "naimaspectralmodel": 249, "name": [381, 392, 524], "nebula": 512, "new": [381, 392, 396, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 474], "next": [454, 456, 457, 460, 466, 473, 494, 496, 497, 503, 505], "nfwprofil": 25, "night": 473, "non": [381, 487, 532], "norm": [404, 490, 539, 551, 554, 556, 559], "norm_bounds_cython": 303, "normal": [333, 503], "notat": 581, "note": [381, 419, 456, 483, 580], "notebook": [11, 381, 389, 417], "nov": [429, 430, 431, 432, 438, 442], "novemb": [443, 448], "now": 396, "nuisanc": 409, "number": [381, 406, 524], "numpi": 406, "o": 470, "object": [381, 382, 391, 403, 461, 462, 468, 469, 481, 483, 491], "observ": [3, 88, 92, 390, 391, 452, 456, 457, 466, 468, 469, 473, 474, 486, 491, 503, 504], "observationeventsampl": 108, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [451, 467, 475, 491], "off": [454, 456, 459, 465], "offset": [521, 522, 523, 525], "ogipdatasetread": 106, "ogipdatasetwrit": 107, "old": 411, "one": 483, "onto": 487, "open": 476, "oper": [487, 488], "optimizeresult": 213, "option": [380, 398, 484], "org": 411, "organ": [387, 396], "origin": [381, 384], "other": [381, 382, 391, 411, 414, 507], "outlin": 409, "outlook": [393, 394, 395, 397, 398, 400, 401, 402, 405], "output": 381, "over": 476, "overview": [401, 413, 467, 494, 496, 526, 528, 529], "overwrit": 381, "own": 579, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 400, 402, 411, 414, 434, 499, 507, 508, 577], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 584, "paper": 390, "parabola": [454, 553, 554], "parallel": [13, 393], "paramet": [214, 215, 392, 404, 409, 457, 467, 484, 489, 490, 503], "parameterestim": 131, "parametr": 392, "parametricpsf": 164, "pdf": 334, "perform": [394, 453, 494, 504], "person": 407, "perspect": 388, "phase": [476, 573], "phasebackgroundmak": 174, "phasogram": 476, "piecewis": [539, 556], "piecewisenormspatialmodel": 250, "piecewisenormspectralmodel": 251, "pig": [385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409], "pip": 414, "pixel": [381, 395, 488], "pk": 483, "plan": 388, "plot": [14, 381, 452, 456, 457, 466, 467, 470, 487, 489, 504, 532, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 584], "plot_contour_lin": 373, "plot_distribut": 374, "plot_heatmap": 375, "plot_map_rgb": 376, "plot_npred_sign": 377, "plot_spectrum_datasets_off_region": 378, "plot_theta_squared_t": 379, "png": 382, "point": [382, 409, 451, 452, 454, 456, 457, 465, 466, 468, 479, 481, 483, 494, 503, 504, 505, 517, 525, 540], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 252, "poisson": 580, "polar": 313, "polici": 407, "pool_kwargs_default": 327, "popul": [1, 509], "posit": [409, 492, 523], "possibl": 407, "post": 410, "power": [454, 546, 549, 550, 551, 557, 558, 559, 560, 561, 562, 563], "powerlaw": [454, 571], "powerlaw2spectralmodel": 253, "powerlawnormspectralmodel": 254, "powerlawspectralmodel": 255, "powerlawtemporalmodel": 256, "precis": 394, "predict": 515, "prepar": [396, 406, 451, 453, 469, 504], "prerequisit": [453, 454, 456, 457, 458, 459, 461, 465, 467, 468, 469, 470, 472, 473, 474, 475, 479, 484, 488, 489, 492, 503, 504], "pretti": 481, "primaryflux": 26, "print": 481, "prior": [257, 409, 492], "priorparamet": [216, 217], "produc": 496, "product": [480, 485], "profil": [452, 470, 480, 582], "project": [390, 411], "propag": 408, "propos": [389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 408, 453, 454, 457, 459, 460, 461, 462, 465, 468, 469, 470, 472, 473, 474, 475, 478, 479, 484, 488, 489, 491, 503, 504], "psf": [485, 495, 525], "psf3d": 160, "psf_tabl": 525, "psfkernel": 161, "psfking": 162, "psfmap": [163, 485], "public": 407, "pull": [381, 384, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "pulsar": [51, 476, 511, 512], "purpos": 386, "pwn": 50, "pydant": 408, "python": [381, 382, 388, 406, 417], "qualiti": [390, 411, 456, 458, 464, 484], "quantiti": [483, 491, 517], "radial": 522, "radial_distribut": 48, "radmax2d": 165, "rai": [396, 480], "random": [13, 381], "rang": [486, 527], "read": [460, 465, 469, 470, 487, 488, 489, 532], "read_hermes_cub": [284, 286], "read_yaml": 347, "recommend": [413, 415], "reconstruct": 522, "recopsfmap": 166, "recursive_merge_dict": 348, "redshift": 452, "reduc": [4, 461, 462, 482, 503, 504], "reduct": [8, 390, 396, 453, 456, 457, 458, 464, 473, 474, 478, 486, 496, 503, 504, 527, 579], "refer": [6, 401, 578, 579, 580], "reflect": [486, 528], "reflectedregionsbackgroundmak": [175, 528], "reflectedregionsfind": 176, "region": [13, 392, 395, 451, 453, 456, 458, 486, 488, 489, 528, 532], "region_to_fram": 342, "regiongeom": [201, 532], "regionndmap": [202, 532], "regions_to_compound_region": 343, "regionsfind": 177, "relat": 532, "releas": [381, 390, 406, 407, 410, 411, 419], "remark": 386, "remnant": 513, "remov": [381, 489], "renam": 381, "repositori": 411, "repr": 381, "represent": [404, 483, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "request": [381, 384, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448], "requir": [380, 381, 398, 408], "requires_data": 360, "requires_depend": 361, "resampl": 482, "resample_energy_edg": 146, "residu": [456, 458, 464, 504], "resolv": [402, 476, 478], "respons": [7, 524], "restructur": 401, "result": [396, 405, 451, 453, 457, 460, 467, 470, 473, 478, 483, 582], "return": [381, 382], "review": 386, "ring": [462, 486, 529], "ringbackgroundmak": 178, "rmf": 523, "road": 391, "roadmap": 390, "rotat": 395, "rst": 382, "run": [11, 384, 456, 457, 458, 467, 469, 470, 473, 503, 579], "run_multiprocess": 329, "safe": [486, 527], "safemaskmak": 179, "sampl": [394, 468, 469], "sample_powerlaw": 335, "sample_spher": 336, "sample_sphere_dist": 337, "sample_tim": 338, "sampler": 469, "save": [457, 503, 504], "scale": 583, "scale_plot_flux": 285, "scaledregulargridinterpol": 320, "scalespectralmodel": 260, "scenario": 391, "schedul": 406, "scheme": [392, 407], "script": [11, 13, 381, 417, 499, 501], "section": 401, "sed": 517, "select": [453, 457, 466, 473, 474, 478, 481, 489, 503, 504, 516], "select_nested_model": 287, "sensit": 451, "sensitivityestim": 132, "sep": [425, 441], "serial": [393, 408, 465], "serialis": [409, 457, 470, 485, 489, 490, 495, 515], "seril": 392, "set": [384, 457, 487, 503], "setup": [389, 411, 413, 415, 416, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 494, 495, 496, 497, 503, 504, 505], "sever": 381, "share": 490, "shell": 541, "shell2": 542, "shell2spatialmodel": 261, "shellspatialmodel": 262, "shorter": 404, "should": 381, "show": [466, 467, 491], "signal": 467, "signific": [453, 460, 462, 488, 581], "simplepulsar": 54, "simplifi": 404, "simul": [390, 393, 458, 459, 468, 469, 472, 475], "sine": 572, "sinetemporalmodel": 263, "singl": [382, 459], "size": 532, "skip": 381, "sky": [9, 392, 395, 466, 468, 488, 523, 531], "sky_to_fov": 314, "skycoord": 531, "skymodel": [264, 490], "slice": 487, "small": 384, "smooth": [460, 560], "smoothbrokenpowerlawspectralmodel": 265, "snr": 52, "snrtruelovemcke": 53, "solut": 408, "some": [381, 391, 488], "sourc": [1, 2, 451, 453, 456, 460, 466, 467, 468, 469, 475, 481, 488, 492, 494, 505, 509, 510, 511, 512, 514], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 392, "sourcemodel": 392, "spatial": [392, 404, 466, 480, 487, 490, 509, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543], "spatial_model_registri": 258, "spatialirfmodel": 392, "spatialmodel": 266, "special": 582, "specif": [392, 401, 481, 483], "spectra": 480, "spectral": [404, 409, 452, 453, 454, 456, 457, 458, 465, 466, 480, 490, 499, 505, 533, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 564], "spectral_model_registri": 259, "spectralirfmodel": 392, "spectralmodel": 267, "spectroscopi": 478, "spectrum": [452, 456, 458, 459, 466, 476, 486, 504], "spectrumdataset": [109, 393, 482, 515], "spectrumdatasetmak": [180, 527], "spectrumdatasetonoff": [110, 393], "sphinx": [381, 382], "spiral": 509, "split_dataset": [115, 117], "spread": [494, 525], "squar": [467, 497], "stack": [456, 462, 464, 515], "standard_scal": 307, "standardise_unit": 366, "start": [401, 413, 508, 509, 510, 516, 531], "stat": [12, 452], "stat_contour": 484, "stat_profile_ul_scipi": 288, "stat_surfac": 484, "statist": [12, 456, 488, 580, 581], "statu": [386, 391, 400, 406], "step": [457, 494, 496, 497, 577], "store": [396, 457, 523], "str": 381, "structur": [400, 402, 434, 505, 577], "structure_funct": 304, "studi": 396, "style": 387, "sub": [487, 508], "subclass": 409, "subpackag": 387, "subset": 481, "suggest": 407, "summari": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 464, 495], "super": [561, 562, 563], "superexpcutoffpowerlaw3fglspectralmodel": 268, "superexpcutoffpowerlaw4fgldr3spectralmodel": 269, "superexpcutoffpowerlaw4fglspectralmodel": 270, "supernova": 513, "support": [381, 388, 406, 407, 409, 485, 515], "survei": [501, 584], "symmetr": 522, "systemat": 409, "t": [460, 581], "tabl": [13, 467, 481, 483, 496, 516], "table_row_to_dict": 352, "table_standardise_units_copi": 353, "table_standardise_units_inplac": 354, "tag": 404, "target": 456, "task": [392, 393, 394, 395, 396, 397, 398], "templat": [468, 543, 564], "templatendspatialmodel": 272, "templatendspectralmodel": 273, "templatenpredmodel": 274, "templatephasecurvetemporalmodel": 275, "templatespatialmodel": 276, "templatespectralmodel": 277, "tempor": [469, 475, 490, 533, 566, 567, 568, 569, 570, 571, 572, 573, 574], "temporal_model_registri": 271, "temporalmodel": 278, "term": 407, "terminologi": 391, "test": [13, 381, 384, 467, 476], "text": 381, "theta": 497, "thi": 384, "through": 483, "thumbnail": 382, "time": [13, 390, 396, 450, 455, 463, 468, 471, 474, 475, 477, 478, 479, 493, 498, 499, 500, 502, 506, 534, 544, 565, 575, 583], "time_ref_from_dict": 363, "time_ref_to_dict": 364, "time_relative_to_ref": 365, "timemapaxi": [203, 487], "timmerkonig_lightcurve_simul": 290, "to_yaml": 349, "tool": [11, 381, 579], "tooltip": 382, "touch": 384, "trapz_loglog": 319, "troubleshoot": [416, 579], "true": [521, 523, 525], "tsmapestim": 133, "tutori": [382, 389, 401, 413, 467, 494, 496, 499], "two": 489, "type": [381, 408, 515, 517], "uncertainti": 399, "underli": [474, 532], "unfold": 409, "unfreez": 489, "unif": 405, "unifi": [392, 405], "uniformprior": 279, "unit": [13, 381], "unit_from_fits_image_hdu": 367, "unix": 381, "unreleas": 449, "up": [384, 400, 402], "upsampl": 532, "us": [381, 391, 409, 414, 417, 457, 467, 468, 473, 482, 484, 485, 487, 503, 504, 507, 510, 514, 515, 516, 517, 518, 524, 526, 527, 528, 531, 550, 561, 562, 563, 576], "user": [388, 520], "util": [4, 5, 8, 10, 13, 400, 577, 581, 583], "valid": 408, "valleespir": 38, "valu": [381, 409, 467, 487, 492], "vari": 475, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 468, 479], "varianc": 479, "variou": 491, "veloc": 509, "velocity_distribut": 49, "velocity_glon_glat": 315, "venv": 412, "version": [381, 406, 410, 419, 472], "virtual": 412, "visual": [14, 402, 487, 532, 584], "visualis": [460, 478, 483], "volum": 532, "warn": 381, "wc": [487, 532], "wcsgeom": 204, "wcsmap": 205, "wcsndmap": 206, "we": [389, 396, 397, 405, 496], "webpag": 411, "what": [381, 384, 386, 389, 391, 396, 397, 405, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 454, 456, 457, 460, 466, 473, 503, 505], "where": 381, "which": 381, "wind": 512, "wise": 473, "without": 492, "wobbleregionsfind": 181, "work": 516, "workflow": [11, 577], "write": [381, 386, 457, 469, 487, 488, 516, 532, 579], "write_yaml": 350, "wstat": [305, 580, 581, 582], "wstatcountsstatist": 291, "yaml": [404, 457, 503, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574], "your": [416, 457, 579], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})