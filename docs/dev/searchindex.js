Search.setIndex({"alltitles": {"0.1 (Aug 25, 2014)": [[426, null]], "0.10 (Jan 28, 2019)": [[427, null]], "0.11 (Mar 29, 2019)": [[428, null]], "0.12 (May 30, 2019)": [[429, null]], "0.13 (Jul 26, 2019)": [[430, null]], "0.14 (Sep 30, 2019)": [[431, null]], "0.15 (Dec 3, 2019)": [[432, null]], "0.16 (Feb 1, 2020)": [[433, null]], "0.17 (Apr 1, 2020)": [[434, null]], "0.18 (Nov 4th, 2020)": [[435, null]], "0.18.1 (Nov 6th, 2020)": [[436, null]], "0.18.2 (Nov 19th, 2020)": [[437, null]], "0.19 (Nov 22nd, 2021)": [[438, null]], "0.2 (Apr 13, 2015)": [[439, null]], "0.20 (May 12th, 2022)": [[440, null]], "0.20.1 (June 16th, 2022)": [[441, null]], "0.3 (Aug 13, 2015)": [[442, null]], "0.4 (Apr 20, 2016)": [[443, null]], "0.5 (Nov 22, 2016)": [[444, null]], "0.6 (Apr 28, 2017)": [[445, null]], "0.7 (Feb 28, 2018)": [[446, null]], "0.8 (Sep 23, 2018)": [[447, null]], "0.9 (Nov 29, 2018)": [[448, null]], "1.0 (November 10th, 2022)": [[449, null]], "1.0.1 (March 14th, 2023)": [[450, null]], "1.0.2 (December 6th, 2023)": [[451, null]], "1.1 (June 13th 2023)": [[452, null]], "1.2 (February 29th 2024)": [[453, null]], "1.3 (November 26th, 2024)": [[454, null]], "1D Spectral": [[505, "d-spectral"]], "1D spectrum simulation": [[465, null]], "2.0 (unreleased)": [[455, null]], "2D Image": [[505, "d-image"]], "2D map fitting": [[467, null]], "3D Cube": [[505, "d-cube"]], "3D detailed analysis": [[470, null]], "3D map simulation": [[478, null]], "A fully configured Flux Points Estimation": [[489, "a-fully-configured-flux-points-estimation"]], "A note on statistics": [[462, "a-note-on-statistics"]], "A note on the internal representation": [[489, "a-note-on-the-internal-representation"]], "API Links": [[387, "api-links"]], "API changes": [[449, "api-changes"], [452, "api-changes"], [453, "api-changes"], [454, "api-changes"]], "API reference": [[6, null]], "ASmoothMapEstimator": [[121, null]], "Abstract": [[391, "abstract"], [392, "abstract"], [393, "abstract"], [394, "abstract"], [395, "abstract"], [396, "abstract"], [398, "abstract"], [399, "abstract"], [400, "abstract"], [401, "abstract"], [402, "abstract"], [403, "abstract"], [404, "abstract"], [405, "abstract"], [406, "abstract"], [407, "abstract"], [408, "abstract"], [409, "abstract"], [410, "abstract"], [411, "abstract"], [412, "abstract"], [413, "abstract"], [414, "abstract"], [415, "abstract"]], "Acceptation of the Developer Certificate of Origin (DCO)": [[389, "acceptation-of-the-developer-certificate-of-origin-dco"]], "Accessing Data": [[493, "accessing-data"]], "Accessing and visualising results": [[466, "accessing-and-visualising-results"]], "Accessing and visualising the results": [[489, "accessing-and-visualising-the-results"]], "Accessing contents of a dataset": [[488, "accessing-contents-of-a-dataset"]], "Accessor methods": [[537, "accessor-methods"]], "Account for spectral absorption due to the EBL": [[458, null]], "Adaptive smoothing": [[466, "adaptive-smoothing"]], "AdaptiveRingBackgroundMaker": [[172, null]], "Add a model on multiple datasets": [[495, "add-a-model-on-multiple-datasets"]], "Add new parametric models": [[397, "add-new-parametric-models"]], "Adding Non-Spatial Axes": [[493, "adding-non-spatial-axes"]], "Adding Non-contiguous axes": [[493, "adding-non-contiguous-axes"]], "Additional Models": [[409, "additional-models"]], "Additional PSF classes": [[531, "additional-psf-classes"]], "Additional utilities": [[583, "additional-utilities"]], "Aim": [[495, "aim"]], "Alternative": [[410, "alternative"]], "Alternatives": [[394, "alternatives"], [397, "alternatives"], [400, "alternatives"], [402, "alternatives"], [403, "alternatives"], [404, "alternatives"], [406, "alternatives"], [407, "alternatives"], [413, "alternatives"]], "Alternatives / Outlook": [[399, "alternatives-outlook"]], "Analysis": [[15, null]], "Analysis configuration": [[463, "analysis-configuration"], [470, "analysis-configuration"], [479, "analysis-configuration"], [509, "analysis-configuration"]], "Analysis steps": [[583, "analysis-steps"]], "Analysis workflow": [[583, "analysis-workflow"]], "AnalysisConfig": [[16, null]], "As a function of of true energy and offset angle (PSF_TABLE)": [[531, "as-a-function-of-of-true-energy-and-offset-angle-gadf-psf-table"]], "Assert convention": [[386, "assert-convention"]], "Assign to model to all datasets": [[480, "assign-to-model-to-all-datasets"]], "Assigning background models to datasets": [[495, "assigning-background-models-to-datasets"]], "Astrophysical source models": [[516, null]], "Astrophysical source population models": [[515, null]], "Astrophysics": [[514, null]], "Authorship policy": [[412, "authorship-policy"]], "BACKEND_DEFAULT": [[328, null]], "BSD or GPL license?": [[386, "bsd-or-gpl-license"]], "Background": [[500, "background"], [528, null]], "Background / What we have now": [[401, "background-what-we-have-now"]], "Background Model Handling": [[408, "background-model-handling"]], "Background estimation": [[492, "background-estimation"], [533, "background-estimation"]], "Background2D": [[151, null]], "Background3D": [[152, null]], "BackgroundIRF": [[153, null]], "BackgroundIRFModel": [[397, "backgroundirfmodel"]], "BackgroundModel": [[397, "backgroundmodel"]], "Basic image exploration and fitting": [[472, null]], "Basic operators": [[493, "basic-operators"]], "Bayesian blocks": [[485, "bayesian-blocks"]], "Bin volume and angular size": [[538, "bin-volume-and-angular-size"]], "Boundary mask": [[494, "boundary-mask"]], "Broken power law spectral model": [[552, null]], "BrokenPowerLawSpectralModel": [[222, null]], "Bug fixes and improvements": [[440, "bug-fixes-and-improvements"], [449, "bug-fixes-and-improvements"], [452, "bug-fixes-and-improvements"], [453, "bug-fixes-and-improvements"], [454, "bug-fixes-and-improvements"]], "Build": [[417, "build"]], "Building 1D datasets from the new observations": [[480, "building-1d-datasets-from-the-new-observations"]], "Building the 1D analysis configuration": [[479, "building-the-1d-analysis-configuration"]], "Building the 3D analysis configuration": [[479, "building-the-3d-analysis-configuration"]], "Built-in models": [[582, "built-in-models"]], "Bundled gammapy.extern code": [[386, "bundled-gammapy-extern-code"]], "BurkertProfile": [[17, null]], "CATALOG_REGISTRY": [[55, null]], "CITATION.cff": [[412, "citation-cff"]], "CLUMPY": [[513, "clumpy"]], "CTA 1DC": [[500, "cta-1dc"]], "CTAO with Gammapy": [[500, null]], "Caplog fixture": [[386, "caplog-fixture"]], "Case 1: Background systematics as a nuisance parameter #3955": [[414, "case-1-background-systematics-as-a-nuisance-parameter-3955"]], "Case 1: Estimate the posterior distribution with a tuning-parameter free approach": [[415, "case-1-estimate-the-posterior-distribution-with-a-tuning-parameter-free-approach"]], "Case 2: Favoring positive values for flux amplitudes": [[414, "case-2-favoring-positive-values-for-flux-amplitudes"]], "Case 2: Minuit convergence issues": [[415, "case-2-minuit-convergence-issues"]], "Case 3: Model comparison using the Bayesian evidence (aka marginal evidence)": [[415, "case-3-model-comparison-using-the-bayesian-evidence-aka-marginal-evidence"]], "Case 3: Support unfolding methods for spectral flux points #4122": [[414, "case-3-support-unfolding-methods-for-spectral-flux-points-4122"]], "Case 4: Parallelization of the \u201cfitting\u201d": [[415, "case-4-parallelization-of-the-fitting"]], "CaseBattacharya1998": [[28, null]], "Cash : Poisson data with background model": [[586, "cash-poisson-data-with-background-model"]], "Cash counts statistic": [[587, "cash-counts-statistic"]], "CashCountsStatistic": [[293, null]], "Catalog table": [[487, "catalog-table"]], "Caveat": [[586, "caveat"]], "Changelog": [[406, "changelog"]], "Check Python code": [[387, "check-python-code"]], "Check broken links": [[387, "check-broken-links"]], "Check setup": [[457, "check-setup"], [459, "check-setup"], [462, "check-setup"], [463, "check-setup"], [464, "check-setup"], [465, "check-setup"], [466, "check-setup"], [467, "check-setup"], [468, "check-setup"], [470, "check-setup"], [471, "check-setup"], [472, "check-setup"], [473, "check-setup"], [474, "check-setup"], [475, "check-setup"], [476, "check-setup"], [479, "check-setup"], [480, "check-setup"], [481, "check-setup"], [482, "check-setup"], [486, "check-setup"], [487, "check-setup"], [488, "check-setup"], [490, "check-setup"], [492, "check-setup"], [493, "check-setup"], [494, "check-setup"], [495, "check-setup"], [496, "check-setup"], [498, "check-setup"], [500, "check-setup"], [501, "check-setup"], [502, "check-setup"], [503, "check-setup"], [509, "check-setup"], [510, "check-setup"], [511, "check-setup"]], "Check the dataset we produced": [[502, "check-the-dataset-we-produced"]], "Check your setup": [[422, "check-your-setup"]], "Checker": [[360, null]], "Choose a thumbnail and tooltip for the tutorial gallery": [[387, "choose-a-thumbnail-and-tooltip-for-the-tutorial-gallery"]], "Citation scheme": [[412, "citation-scheme"]], "Class attributes": [[387, "class-attributes"]], "Classes": [[0, "classes"], [1, "classes"], [1, "id1"], [1, "id2"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [10, "id2"], [12, "classes"], [13, "classes"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id15"], [14, "classes"]], "Clean up gammapy.utils": [[405, "clean-up-gammapy-utils"]], "Clobber or overwrite?": [[386, "clobber-or-overwrite"]], "Code in RST files": [[387, "code-in-rst-files"]], "Code in docstrings in Python files": [[387, "code-in-docstrings-in-python-files"]], "Code quality": [[417, "code-quality"]], "Collection of the personal information of authors": [[412, "collection-of-the-personal-information-of-authors"]], "Colormaps": [[590, "colormaps"]], "Combining event lists and GTIs": [[522, "combining-event-lists-and-gtis"]], "Combining two Models": [[495, "combining-two-models"]], "Command line tools": [[585, null]], "Command line tools using click": [[386, "command-line-tools-using-click"]], "Command not found": [[585, "command-not-found"]], "Common API": [[489, "common-api"]], "Compare against the literature": [[464, "compare-against-the-literature"]], "Compare results": [[479, "compare-results"]], "Compound Spectral Model": [[496, "compound-spectral-model"]], "Compound spectral model": [[553, null]], "CompoundSpectralModel": [[223, null]], "Computation times": [[456, null], [461, null], [469, null], [477, null], [483, null], [499, null], [504, null], [506, null], [508, null], [512, null], [540, null], [550, null], [571, null], [581, null]], "Compute Flux Points": [[462, "compute-flux-points"]], "Compute correlated significance and correlated excess maps": [[468, "compute-correlated-significance-and-correlated-excess-maps"]], "Compute images": [[472, "compute-images"]], "Compute sensitivity": [[457, "compute-sensitivity"]], "Computing contours using stat_contour": [[490, "computing-contours-using-stat-contour"]], "Computing contours using stat_surface": [[490, "computing-contours-using-stat-surface"]], "Computing flux points": [[510, "computing-flux-points"]], "Conda Environments": [[418, "conda-environments"]], "Confidence contours": [[490, "confidence-contours"]], "Configurable analysis": [[583, "configurable-analysis"]], "Configuration": [[476, "configuration"]], "Configuration for stacked and joint analysis": [[470, "configuration-for-stacked-and-joint-analysis"]], "Configuration of the analysis": [[463, "configuration-of-the-analysis"]], "Constant spatial model": [[541, null]], "Constant spectral model": [[554, null]], "Constant temporal model": [[572, null]], "ConstantFluxSpatialModel": [[224, null]], "ConstantSpatialModel": [[225, null]], "ConstantSpectralModel": [[226, null]], "ConstantTemporalModel": [[227, null]], "Context": [[459, "context"], [460, "context"], [462, "context"], [463, "context"], [464, "context"], [465, "context"], [466, "context"], [467, "context"], [468, "context"], [471, "context"], [473, "context"], [474, "context"], [476, "context"], [478, "context"], [479, "context"], [480, "context"], [481, "context"], [484, "context"], [485, "context"], [494, "context"], [497, "context"], [498, "context"], [509, "context"], [510, "context"]], "Continuous integration": [[417, "continuous-integration"]], "Contribution in conferences": [[412, "contribution-in-conferences"]], "Contributors": [[426, "contributors"], [427, "contributors"], [428, "contributors"], [429, "contributors"], [430, "contributors"], [431, "contributors"], [432, "contributors"], [433, "contributors"], [434, "contributors"], [435, "contributors"], [438, "contributors"], [439, "contributors"], [440, "contributors"], [441, "contributors"], [442, "contributors"], [443, "contributors"], [444, "contributors"], [445, "contributors"], [446, "contributors"], [447, "contributors"], [448, "contributors"], [449, "contributors"], [450, "contributors"], [451, "contributors"], [452, "contributors"], [453, "contributors"], [454, "contributors"]], "Convert a jupyter notebook to python script in the sphinx-gallery format": [[386, "convert-a-jupyter-notebook-to-python-script-in-the-sphinx-gallery-format"]], "Coordinate and axis names": [[386, "coordinate-and-axis-names"]], "Coordinates defined by the RegionGeom": [[538, "coordinates-defined-by-the-regiongeom"]], "Correct format for bullet point list": [[387, "correct-format-for-bullet-point-list"]], "Counts": [[501, "counts"]], "Counts and fit statistics": [[587, "counts-and-fit-statistics"]], "Counts statistics classes": [[587, "counts-statistics-classes"]], "Covariance": [[213, null]], "Covariance and parameters errors": [[490, "covariance-and-parameters-errors"]], "CovarianceResult": [[214, null]], "Create DL4 product - PSFMap": [[491, "create-dl4-product-psfmap"]], "Create a FluxMaps object through one of the estimators.": [[489, "create-a-fluxmaps-object-through-one-of-the-estimators"]], "Create a mask in energy": [[494, "create-a-mask-in-energy"]], "Create a stacked dataset": [[468, "create-a-stacked-dataset"]], "Create edisp kernel map": [[491, "create-edisp-kernel-map"]], "Create exclusion mask": [[462, "create-exclusion-mask"], [468, "create-exclusion-mask"]], "Create exposure map": [[491, "create-exposure-map"]], "Create the energy-dependent temporal model": [[475, "create-the-energy-dependent-temporal-model"]], "Create the maker classes to be used": [[510, "create-the-maker-classes-to-be-used"]], "Create the makers": [[459, "create-the-makers"]], "Create the mask from a catalog of sources": [[494, "create-the-mask-from-a-catalog-of-sources"]], "Create the mask from a list of regions": [[494, "create-the-mask-from-a-list-of-regions"]], "Create the mask from statistically significant pixels in a dataset": [[494, "create-the-mask-from-statistically-significant-pixels-in-a-dataset"]], "Create the mask map": [[494, "create-the-mask-map"]], "Create the temporal model and write it to disk": [[475, "create-the-temporal-model-and-write-it-to-disk"]], "Creating WCS Maps": [[493, "creating-wcs-maps"]], "Creating a RegionGeom": [[538, "creating-a-regiongeom"]], "Creating a RegionNDMap": [[538, "creating-a-regionndmap"]], "Creating a mask for fitting": [[494, "creating-a-mask-for-fitting"]], "Creating a mask manually": [[494, "creating-a-mask-manually"]], "Creating an empty dataset": [[488, "creating-an-empty-dataset"]], "Creating an exclusion mask": [[494, "creating-an-exclusion-mask"]], "Creating from a Map Geometry": [[493, "creating-from-a-map-geometry"]], "Creating the config file": [[467, "creating-the-config-file"], [468, "creating-the-config-file"]], "Creation of the Flux points": [[463, "creation-of-the-flux-points"]], "Creation of the data reduction makers": [[480, "creation-of-the-data-reduction-makers"]], "Creation of the datasets": [[480, "creation-of-the-datasets"]], "Creation of the model": [[463, "creation-of-the-model"]], "Cube plotting": [[493, "cube-plotting"]], "Cumulative excess and significance": [[459, "cumulative-excess-and-significance"]], "Current status": [[411, "current-status"]], "Custom models": [[582, "custom-models"]], "Cutouts": [[493, "cutouts"]], "Cython": [[417, "cython"]], "DATASET_REGISTRY": [[98, null]], "DCO implementation": [[412, "dco-implementation"]], "DL3 DR1": [[503, "dl3-dr1"]], "DMProfile": [[18, null]], "D_SUN_TO_GALACTIC_CENTER": [[313, null]], "Dark matter": [[513, null]], "Dark matter spatial and spectral models": [[486, null]], "DarkMatterAnnihilationSpectralModel": [[19, null]], "DarkMatterDecaySpectralModel": [[20, null]], "Data Fitting": [[401, "data-fitting"]], "Data access and selection (DL3)": [[522, null]], "Data analysis": [[505, "data-analysis"]], "Data analysis subpackages in gammapy": [[392, "data-analysis-subpackages-in-gammapy"]], "Data and Observation handling": [[395, "data-and-observation-handling"]], "Data and models files": [[471, "data-and-models-files"]], "Data exploration": [[505, "data-exploration"]], "Data reduction": [[401, "data-reduction"], [470, "data-reduction"], [470, "id1"], [484, "data-reduction"], [509, "data-reduction"], [510, "data-reduction"]], "Data reduction (DL3 to DL4)": [[533, null]], "Data reduction into a MapDataset": [[502, "data-reduction-into-a-mapdataset"]], "Data reduction loop": [[492, "data-reduction-loop"]], "Data selection": [[484, "data-selection"]], "Data structures": [[511, null]], "DataStore": [[82, null]], "Dataset": [[99, null], [398, "dataset"], [492, "dataset"]], "Dataset helper / convenience methods": [[398, "dataset-helper-convenience-methods"]], "Dataset serialization": [[398, "dataset-serialization"]], "Dataset simulations": [[464, "dataset-simulations"]], "Dataset specific quantities (\u201ccounts like\u201d)": [[489, "dataset-specific-quantities-counts-like"]], "DatasetModels": [[228, null]], "Datasets": [[100, null], [395, "datasets"], [398, "datasets"], [413, "datasets"], [488, "datasets"]], "Datasets (DL4)": [[521, null]], "Datasets - Reduced data, IRFs, models": [[488, null]], "Datasets serialization": [[471, "datasets-serialization"]], "DatasetsMaker": [[173, null]], "Datastore": [[500, "datastore"]], "Dealing with links": [[387, "dealing-with-links"]], "Decision": [[391, "decision"], [392, "decision"], [393, "decision"], [394, "decision"], [395, "decision"], [396, "decision"], [397, "decision"], [398, "decision"], [399, "decision"], [400, "decision"], [401, "decision"], [402, "decision"], [403, "decision"], [404, "decision"], [405, "decision"], [406, "decision"], [407, "decision"], [408, "decision"], [409, "decision"], [410, "decision"], [411, "decision"], [412, "decision"], [413, "decision"], [414, "decision"], [415, "decision"]], "Define Target Region": [[462, "define-target-region"]], "Define an Observation": [[474, "define-an-observation"]], "Define an observation and make a dataset": [[475, "define-an-observation-and-make-a-dataset"]], "Define analysis region and energy binning": [[457, "define-analysis-region-and-energy-binning"]], "Define map geometry": [[472, "define-map-geometry"]], "Define the MapDataset": [[474, "define-the-mapdataset"]], "Define the ON region": [[464, "define-the-on-region"]], "Define the Sky model: a point-like source": [[474, "define-the-sky-model-a-point-like-source"]], "Define the geometries": [[459, "define-the-geometries"]], "Define the geometry": [[494, "define-the-geometry"]], "Define the model": [[510, "define-the-model"]], "Define the model to be used": [[479, "define-the-model-to-be-used"], [479, "id3"]], "Define the simulation source model": [[475, "define-the-simulation-source-model"]], "Define time intervals": [[480, "define-time-intervals"]], "Define underlying model": [[480, "define-underlying-model"]], "Defining the datastore and selecting observations": [[510, "defining-the-datastore-and-selecting-observations"]], "Defining the geometry": [[480, "defining-the-geometry"]], "Definition of a Contributor": [[412, "definition-of-a-contributor"]], "Definition of the Maintainer": [[412, "definition-of-the-maintainer"]], "Definition of the data selection": [[479, "definition-of-the-data-selection"], [479, "id1"]], "Definition of the dataset geometry": [[479, "definition-of-the-dataset-geometry"], [479, "id2"]], "Dependencies": [[385, null], [403, "dependencies"]], "Deprecating a function or a class": [[386, "deprecating-a-function-or-a-class"]], "Deprecation": [[411, "deprecation"]], "Derivation of the WStat formula": [[588, null]], "Detailed plan": [[393, "detailed-plan"]], "Developer How To": [[386, null]], "Developer guide": [[388, null]], "Discussion / Alternatives": [[401, "discussion-alternatives"]], "Disk spatial model": [[542, null]], "DiskSpatialModel": [[229, null]], "Dissolve gammapy.background": [[405, "dissolve-gammapy-background"]], "Dissolve gammapy.image": [[405, "dissolve-gammapy-image"]], "Distributions": [[403, "distributions"], [403, "id1"]], "Documentation": [[395, "documentation"], [453, "documentation"]], "Documentation How To": [[387, null]], "Documentation building": [[387, "documentation-building"]], "Documentation guidelines": [[387, "documentation-guidelines"]], "Documentation improvements": [[454, "documentation-improvements"]], "Download": [[417, "download"]], "EBL absorption spectral model": [[551, null]], "EBLAbsorptionNormSpectralModel": [[230, null]], "EBL_DATA_BUILTIN": [[231, null]], "EDispKernel": [[154, null]], "EDispKernelMap": [[155, null]], "EDispMap": [[156, null]], "ESTIMATOR_REGISTRY": [[122, null]], "Effective Area": [[491, "effective-area"]], "Effective area": [[500, "effective-area"], [527, null]], "EffectiveAreaTable2D": [[157, null]], "EinastoProfile": [[21, null]], "Energy Dependent Spatial Models": [[409, "energy-dependent-spatial-models"]], "Energy Dispersion": [[491, "energy-dispersion"], [501, "energy-dispersion"], [529, null]], "Energy dispersion": [[500, "energy-dispersion"]], "Energy edges": [[523, "energy-edges"]], "EnergyDependentMorphologyEstimator": [[123, null]], "EnergyDependentMultiGaussPSF": [[158, null]], "EnergyDispersion2D": [[159, null]], "Estimating TS": [[587, "estimating-ts"]], "Estimation of time variability in a lightcurve": [[485, null]], "Estimator": [[124, null]], "Estimators": [[413, "estimators"], [489, null]], "Estimators (DL4 to DL5, and DL6)": [[523, null]], "Event Simulation": [[395, "event-simulation"]], "Event lists": [[511, "event-lists"]], "Event sampling": [[474, null]], "EventList": [[83, null]], "EventListMetaData": [[84, null]], "Events": [[500, "events"], [501, "events"]], "Example": [[586, "example"], [586, "id2"]], "Example 1: Including Prior Information about the Sources Index": [[498, "example-1-including-prior-information-about-the-sources-index"]], "Example 2: Encouraging Positive Amplitude Values": [[498, "example-2-encouraging-positive-amplitude-values"]], "Example of extrapolation": [[570, "example-of-extrapolation"]], "Example plot": [[541, "example-plot"], [542, "example-plot"], [543, "example-plot"], [544, "example-plot"], [545, "example-plot"], [546, "example-plot"], [547, "example-plot"], [548, "example-plot"], [549, "example-plot"], [551, "example-plot"], [552, "example-plot"], [553, "example-plot"], [554, "example-plot"], [555, "example-plot"], [556, "example-plot"], [557, "example-plot"], [558, "example-plot"], [559, "example-plot"], [560, "example-plot"], [561, "example-plot"], [562, "example-plot"], [563, "example-plot"], [564, "example-plot"], [565, "example-plot"], [566, "example-plot"], [567, "example-plot"], [568, "example-plot"], [569, "example-plot"], [570, "example-plot"], [572, "example-plot"], [573, "example-plot"], [574, "example-plot"], [575, "example-plot"], [576, "example-plot"], [577, "example-plot"], [578, "example-plot"]], "Examples using FluxPointsEstimator": [[523, "examples-using-fluxpointsestimator"]], "Examples using LightCurveEstimator": [[523, "examples-using-lightcurveestimator"]], "Examples using MapDataset": [[521, "examples-using-mapdataset"]], "Examples using MapDatasetMaker": [[533, "examples-using-mapdatasetmaker"]], "Examples using SpectrumDataset": [[521, "examples-using-spectrumdataset"]], "Examples using SpectrumDatasetMaker": [[533, "examples-using-spectrumdatasetmaker"]], "Examples using gammapy.analysis.Analysis": [[524, "examples-using-gammapy-analysis-analysis"]], "Examples using gammapy.makers.FoVBackgroundMaker": [[532, "examples-using-gammapy-makers-fovbackgroundmaker"]], "Examples using gammapy.makers.ReflectedRegionsBackgroundMaker": [[534, "examples-using-gammapy-makers-reflectedregionsbackgroundmaker"]], "Excess and Significance": [[587, "excess-and-significance"], [587, "id2"]], "Excess errors": [[587, "excess-errors"], [587, "id4"]], "Excess estimators": [[410, "excess-estimators"]], "ExcessMapEstimator": [[125, null]], "Exclusion masks": [[494, "exclusion-masks"]], "Execution": [[585, "execution"]], "Exemplary additional prior subclasses:": [[414, "exemplary-additional-prior-subclasses"]], "Exercises": [[457, "exercises"], [460, "exercises"], [462, "exercises"], [465, "exercises"], [470, "exercises"], [472, "exercises"], [474, "exercises"], [475, "exercises"], [481, "exercises"], [484, "exercises"], [500, "exercises"], [501, "exercises"], [502, "exercises"], [503, "exercises"], [511, "exercises"], [511, "id1"], [511, "id2"], [511, "id3"]], "Existing code": [[392, "existing-code"]], "ExpCutoffPowerLaw3FGLSpectralModel": [[232, null]], "ExpCutoffPowerLawNormSpectralModel": [[233, null]], "ExpCutoffPowerLawSpectralModel": [[234, null]], "ExpDecay temporal model": [[573, null]], "ExpDecayTemporalModel": [[235, null]], "Expected number of detected events": [[530, "expected-number-of-detected-events"]], "Exploration of the fit results": [[463, "exploration-of-the-fit-results"]], "Explore the fit results": [[459, "explore-the-fit-results"]], "Explore the results": [[459, "explore-the-results"]], "Exponential": [[29, null]], "Exponential Cut-Off Powerlaw Fit": [[460, "exponential-cut-off-powerlaw-fit"]], "Exponential cutoff power law norm spectral model": [[557, null]], "Exponential cutoff power law spectral model": [[555, null]], "Exponential cutoff power law spectral model used for 3FGL": [[556, null]], "Expose model parameters as attributes": [[397, "expose-model-parameters-as-attributes"]], "Exposure": [[501, "exposure"]], "Extended source using a template": [[474, "extended-source-using-a-template"]], "Extract the light curve": [[480, "extract-the-light-curve"]], "Extract the lightcurve": [[481, "extract-the-lightcurve"]], "Extracting the light curve": [[479, "extracting-the-light-curve"]], "Extracting the ring background": [[468, "extracting-the-ring-background"]], "Factorisation of the IRFs": [[530, "factorisation-of-the-irfs"]], "FaucherKaspi2006": [[30, null]], "FaucherKaspi2006VelocityBimodal": [[31, null]], "FaucherKaspi2006VelocityMaxwellian": [[32, null]], "FaucherSpiral": [[33, null]], "Feature Freeze and Branching": [[416, "feature-freeze-and-branching"]], "Fermi-LAT 3FHL: map dataset for 3D analysis": [[471, "fermi-lat-3fhl-map-dataset-for-3d-analysis"]], "Fermi-LAT with Gammapy": [[501, null]], "FermiST": [[513, "fermist"]], "FermipyDatasetsReader": [[101, null]], "Files": [[500, "files"]], "Filling a RegionNDMap": [[538, "filling-a-regionndmap"]], "Filling maps from event lists": [[493, "filling-maps-from-event-lists"]], "Filling maps from interpolation": [[493, "filling-maps-from-interpolation"]], "Filter the observations list in time intervals": [[480, "filter-the-observations-list-in-time-intervals"]], "Final remarks": [[391, "final-remarks"]], "Final result": [[588, "final-result"]], "Fit": [[215, null], [478, "fit"], [501, "fit"]], "Fit quality and model residuals": [[462, "fit-quality-and-model-residuals"], [464, "fit-quality-and-model-residuals"]], "Fit quality assessment": [[490, "fit-quality-assessment"]], "Fit quality assessment and model residuals for a MapDataset": [[470, "fit-quality-assessment-and-model-residuals-for-a-mapdataset"]], "Fit quality assessment and model residuals for a joint Datasets": [[470, "fit-quality-assessment-and-model-residuals-for-a-joint-datasets"]], "Fit spectrum": [[462, "fit-spectrum"], [464, "fit-spectrum"]], "Fit statistics": [[586, null]], "Fit the datasets": [[481, "fit-the-datasets"]], "Fit the model": [[510, "fit-the-model"]], "FitResult": [[216, null]], "Fitting": [[395, "fitting"], [490, null]], "Fitting Multiple Datasets with and without the Prior": [[498, "fitting-multiple-datasets-with-and-without-the-prior"]], "Fitting a Dataset with and without the Prior": [[498, "fitting-a-dataset-with-and-without-the-prior"]], "Fitting options": [[490, "fitting-options"]], "Fitting temporal models": [[481, "fitting-temporal-models"]], "Fitting the obtained light curve": [[481, "fitting-the-obtained-light-curve"]], "Fix non-Unix line endings": [[386, "fix-non-unix-line-endings"]], "FixedPointingInfo": [[85, null]], "Float data type: 32 bit or 64 bit?": [[386, "float-data-type-32-bit-or-64-bit"]], "Flux Points Estimation": [[489, "flux-points-estimation"]], "Flux Profile Estimation": [[476, null]], "Flux maps": [[523, "flux-maps"]], "Flux maps for annihilation": [[486, "flux-maps-for-annihilation"]], "Flux maps for decay": [[486, "flux-maps-for-decay"]], "Flux point fitting": [[460, null]], "Flux points": [[487, "flux-points"], [509, "flux-points"], [523, "flux-points"]], "Flux quantities": [[523, "flux-quantities"]], "FluxMaps": [[126, null]], "FluxMetaData": [[127, null]], "FluxPoints": [[128, null]], "FluxPointsDataset": [[102, null], [398, "fluxpointsdataset"], [488, "fluxpointsdataset"]], "FluxPointsEstimator": [[129, null]], "FluxProfileEstimator": [[130, null]], "FoV background": [[492, "fov-background"], [532, null]], "FoVAlignment": [[160, null]], "FoVBackgroundMaker": [[174, null]], "FoVBackgroundModel": [[236, null]], "Fractional excess variance, point-to-point fractional variance and doubling/halving time": [[485, "fractional-excess-variance-point-to-point-fractional-variance-and-doubling-halving-time"]], "Freezing and unfreezing model parameters": [[495, "freezing-and-unfreezing-model-parameters"]], "Functions": [[1, "functions"], [3, "functions"], [4, "functions"], [4, "id1"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [10, "id1"], [10, "id3"], [12, "functions"], [13, "functions"], [13, "id1"], [13, "id2"], [13, "id3"], [13, "id4"], [13, "id6"], [13, "id8"], [13, "id9"], [13, "id12"], [13, "id13"], [13, "id14"], [13, "id16"], [13, "id17"], [14, "functions"]], "Functions or class methods that return a single object": [[387, "functions-or-class-methods-that-return-a-single-object"]], "Functions returning several values": [[386, "functions-returning-several-values"]], "Further extensions": [[458, "further-extensions"]], "Further references": [[586, "further-references"]], "GTI": [[86, null]], "Galactic diffuse background": [[501, "galactic-diffuse-background"]], "Galactocentric spatial distributions": [[515, "galactocentric-spatial-distributions"]], "Gamma-ray spectra at production": [[486, "gamma-ray-spectra-at-production"]], "Gammapy": [[424, null]], "Gammapy Binder": [[417, "id1"]], "Gammapy analysis workflow and package structure": [[583, null]], "Gammapy overview": [[406, "gammapy-overview"]], "Gammapy repository": [[417, "gammapy-repository"]], "Gammapy webpages": [[417, "gammapy-webpages"]], "Gaussian spatial model": [[543, null]], "Gaussian spectral model": [[558, null]], "Gaussian temporal model": [[574, null]], "GaussianPrior": [[237, null]], "GaussianSpatialModel": [[238, null]], "GaussianSpectralModel": [[239, null]], "GaussianTemporalModel": [[240, null]], "General Gammapy publications": [[412, "general-gammapy-publications"]], "General code style guidelines": [[392, "general-code-style-guidelines"]], "General conventions": [[386, "general-conventions"]], "General idea and class diagram": [[396, "general-idea-and-class-diagram"]], "General method": [[523, "general-method"]], "General organization of the new approach": [[401, "general-organization-of-the-new-approach"]], "Generalist estimators": [[410, "generalist-estimators"]], "Generalized Gaussian temporal model": [[575, null]], "Generalized gaussian spatial model": [[544, null]], "GeneralizedGaussianSpatialModel": [[241, null]], "GeneralizedGaussianTemporalModel": [[242, null]], "Generating log messages": [[386, "generating-log-messages"]], "Geom": [[195, null]], "Get a fit stat profile for the redshift": [[458, "get-a-fit-stat-profile-for-the-redshift"]], "Get in touch early": [[389, "get-in-touch-early"]], "Get set up": [[389, "get-set-up"]], "Get the flux points": [[458, "get-the-flux-points"]], "Getting started": [[406, "getting-started"], [419, null], [514, "getting-started"], [515, "getting-started"], [516, "getting-started"]], "Getting started section restructuring": [[406, "getting-started-section-restructuring"]], "Getting started with data": [[522, "getting-started-with-data"]], "Getting started with maps": [[537, "getting-started-with-maps"]], "Getting the reduced dataset": [[467, "getting-the-reduced-dataset"], [468, "getting-the-reduced-dataset"]], "Global Model Handling": [[408, "global-model-handling"]], "Glossary": [[584, "glossary"]], "Glossary and references": [[584, null]], "Goodness of fit": [[588, "goodness-of-fit"]], "Guidelines and specific actions": [[406, "guidelines-and-specific-actions"]], "H.E.S.S. with Gammapy": [[503, null]], "HAWC data access and reduction": [[502, "hawc-data-access-and-reduction"]], "HAWC with Gammapy": [[502, null]], "HAWC: 1D dataset for flux point fitting": [[471, "hawc-1d-dataset-for-flux-point-fitting"]], "HDUIndexTable": [[87, null]], "HDULocation": [[321, null]], "HEALPix geometry": [[536, "healpix-geometry"]], "HEALPix-based maps": [[536, null]], "HESS-DL3: 1D ON/OFF dataset for spectral fitting": [[471, "hess-dl3-1d-on-off-dataset-for-spectral-fitting"]], "Handling of conference material": [[412, "handling-of-conference-material"]], "Help!?": [[422, "help"]], "Hierarchical clustering of observations": [[497, "hierarchical-clustering-of-observations"]], "Hierarchy": [[413, "hierarchy"]], "High Level Analysis Interface": [[524, null]], "High level interface": [[395, "high-level-interface"], [509, null]], "How To": [[406, "how-to"], [525, null]], "How to contribute to Gammapy": [[389, null]], "How to get data values": [[493, "how-to-get-data-values"]], "How to handle API breaking changes?": [[386, "how-to-handle-api-breaking-changes"]], "How to make a Gammapy release": [[416, null]], "How to make a pull request": [[386, "how-to-make-a-pull-request"]], "How to set data values": [[493, "how-to-set-data-values"]], "How to use logging": [[386, "how-to-use-logging"]], "How to use random numbers": [[386, "how-to-use-random-numbers"]], "How to write code": [[386, "how-to-write-code"]], "How to write tests": [[386, "how-to-write-tests"]], "HpxGeom": [[196, null]], "HpxMap": [[197, null]], "HpxNDMap": [[198, null]], "IPython": [[423, "id3"]], "IRF": [[161, null], [413, "irf"]], "IRF axis naming": [[530, "irf-axis-naming"]], "IRFMap": [[162, null]], "IRF_REGISTRY": [[163, null]], "IRFs": [[395, "irfs"], [500, "irfs"]], "Image Plotting": [[493, "image-plotting"]], "ImageProfile": [[131, null]], "ImageProfileEstimator": [[132, null]], "Images and masks": [[400, "images-and-masks"]], "Implement default parameters": [[397, "implement-default-parameters"]], "Implement evaluation region specifications": [[397, "implement-evaluation-region-specifications"]], "Implement sky coordinate handling": [[397, "implement-sky-coordinate-handling"]], "Implementation": [[406, "implementation"], [414, "implementation"]], "Implementation Outline": [[414, "implementation-outline"]], "Implementation impact": [[415, "implementation-impact"]], "Implementation road map": [[396, "implementation-road-map"]], "Implementing a custom model": [[496, "implementing-a-custom-model"]], "Implementing a custom prior": [[498, "implementing-a-custom-prior"]], "Imports and versions": [[478, "imports-and-versions"]], "Improve SourceModels class": [[397, "improve-sourcemodels-class"]], "Improve and implement model serilization": [[397, "improve-and-implement-model-serilization"]], "Improve spatial models": [[397, "improve-spatial-models"]], "In the RST files": [[387, "in-the-rst-files"]], "Inbuilt Gammapy IRFs": [[491, "inbuilt-gammapy-irfs"]], "Include png files as images": [[387, "include-png-files-as-images"]], "Indexing and Slicing Sub-Maps": [[493, "indexing-and-slicing-sub-maps"]], "Infrastructure": [[454, "infrastructure"]], "Inspect the reduced dataset": [[510, "inspect-the-reduced-dataset"]], "Inspecting residuals": [[510, "inspecting-residuals"]], "Install issues": [[422, "install-issues"]], "Installation": [[406, "installation"], [419, "installation"], [420, null]], "Instrument Response Functions (DL3)": [[530, null]], "Interaction Between Models and Dataset Objects": [[408, "interaction-between-models-and-dataset-objects"]], "Interface with MapCoord and SkyCoord": [[537, "interface-with-mapcoord-and-skycoord"]], "Interpolating onto a different geometry": [[493, "interpolating-onto-a-different-geometry"]], "Interpolation and extrapolation": [[386, "interpolation-and-extrapolation"]], "Introduce Shorter YAML Alias Tags": [[409, "introduce-shorter-yaml-alias-tags"]], "Introduce a FluxEstimate base class": [[410, "introduce-a-fluxestimate-base-class"]], "Introduce a FluxMap API": [[410, "introduce-a-fluxmap-api"]], "Introduce a FluxPointsCollection API": [[410, "introduce-a-fluxpointscollection-api"]], "Introduce gammapy.datasets": [[407, "introduce-gammapy-datasets"]], "Introduce gammapy.estimators": [[407, "introduce-gammapy-estimators"]], "Introduce gammapy.makers": [[407, "introduce-gammapy-makers"]], "Introduce gammapy.modeling": [[405, "introduce-gammapy-modeling"]], "Introduce gammapy.visualization": [[407, "introduce-gammapy-visualization"]], "Introduce naming scheme for models": [[397, "introduce-naming-scheme-for-models"]], "Introduction": [[397, "introduction"], [400, "introduction"], [401, "introduction"], [403, "introduction"], [404, "introduction"], [406, "introduction"], [410, "introduction"], [412, "introduction"], [413, "introduction"], [457, "introduction"], [462, "introduction"], [464, "introduction"], [472, "introduction"], [482, "introduction"], [486, "introduction"], [487, "introduction"], [488, "introduction"], [492, "introduction"], [493, "introduction"], [500, "introduction"], [501, "introduction"], [502, "introduction"], [503, "introduction"], [505, "introduction"], [511, "introduction"], [513, "introduction"], [515, "introduction"], [516, "introduction"], [586, "introduction"]], "Introduction of background models": [[397, "introduction-of-background-models"]], "Introduction of model name attributes": [[397, "introduction-of-model-name-attributes"]], "Introduction of \u201cforward folded\u201d models": [[397, "introduction-of-forward-folded-models"]], "InverseCDFSampler": [[335, null]], "IsothermalProfile": [[22, null]], "Isotropic diffuse background": [[501, "isotropic-diffuse-background"]], "Iterating by image": [[493, "iterating-by-image"]], "J Factors": [[486, "j-factors"]], "JFactory": [[23, null]], "Joint Analysis": [[521, "joint-analysis"]], "Joint analysis": [[470, "joint-analysis"], [471, "joint-analysis"]], "Jupyter": [[419, "id2"], [421, "jupyter"]], "Jupyter notebooks": [[423, "jupyter-notebooks"]], "Key Features": [[489, "key-features"]], "Known issues": [[454, "known-issues"]], "LabelMapAxis": [[199, null], [493, "labelmapaxis"]], "Latest CTAO performance files": [[500, "latest-ctao-performance-files"]], "Lazy loading of Datasets": [[398, "lazy-loading-of-datasets"]], "LazyFitsData": [[322, null]], "Let\u2019s simulate the model": [[475, "let-s-simulate-the-model"]], "Light Curve Fitting": [[401, "light-curve-fitting"]], "Light Curve estimation by observation": [[479, "light-curve-estimation-by-observation"]], "Light curve temporal model": [[580, null]], "Light curves": [[479, null]], "Light curves for flares": [[480, null]], "LightCurveEstimator": [[133, null]], "LightCurveTemplateTemporalModel": [[243, null]], "Lightcurve": [[401, "lightcurve"]], "Lightcurves": [[487, "lightcurves"]], "Lightcurves in gamma-ray astronomy": [[401, "lightcurves-in-gamma-ray-astronomy"]], "Limitations": [[396, "limitations"]], "Linear temporal model": [[576, null]], "LinearTemporalModel": [[244, null]], "Links to documentation": [[387, "links-to-documentation"]], "Links to other tutorials": [[387, "links-to-other-tutorials"]], "List available catalogs": [[487, "list-available-catalogs"]], "Load Data": [[462, "load-data"]], "Load IRFs and prepare dataset": [[457, "load-irfs-and-prepare-dataset"]], "Load catalogs": [[487, "load-catalogs"]], "Load data": [[464, "load-data"]], "Load spectral points": [[460, "load-spectral-points"]], "Load the data": [[458, "load-the-data"]], "Load the light curve for the PKS 2155-304 as a FluxPoints object.": [[489, "load-the-light-curve-for-the-pks-2155-304-as-a-fluxpoints-object"]], "Load the tables": [[502, "load-the-tables"]], "Loading models from a catalog": [[495, "loading-models-from-a-catalog"]], "Locate origin of warnings": [[386, "locate-origin-of-warnings"]], "Log parabola spectral model": [[559, null]], "Log parabola spectral norm model": [[560, null]], "Log-Parabola Fit": [[460, "log-parabola-fit"]], "LogParabolaNormSpectralModel": [[245, null]], "LogParabolaSpectralModel": [[246, null]], "LogSpiral": [[34, null]], "LogUniformPrior": [[247, null]], "Long Term Support releases": [[412, "long-term-support-releases"]], "Lorimer2006": [[35, null]], "Low level API": [[510, null]], "Low level map and cube analysis": [[392, "low-level-map-and-cube-analysis"]], "MAKER_REGISTRY": [[175, null]], "METHOD_DEFAULT": [[329, null]], "METHOD_KWARGS_DEFAULT": [[330, null]], "MODEL_REGISTRY": [[248, null]], "Maintainer and developer perspective": [[393, "maintainer-and-developer-perspective"]], "Maintenance and Code Quality": [[395, "maintenance-and-code-quality"]], "Make a Bugfix release": [[416, "make-a-bugfix-release"]], "Make a Li&Ma test over the events": [[482, "make-a-li-ma-test-over-the-events"]], "Make sky images": [[472, "make-sky-images"]], "Make small pull requests": [[389, "make-small-pull-requests"]], "Maker": [[176, null]], "Makers": [[413, "makers"]], "Makers - Data reduction": [[492, null]], "Making a butterfly plot": [[510, "making-a-butterfly-plot"]], "Making a pull request that requires backport": [[386, "making-a-pull-request-that-requires-backport"]], "Making a pull request which skips GitHub Actions": [[386, "making-a-pull-request-which-skips-github-actions"]], "Making a pull request with new or modified datasets": [[386, "making-a-pull-request-with-new-or-modified-datasets"]], "Manual grouping of observations": [[497, "manual-grouping-of-observations"]], "Map": [[200, null]], "Map Analysis / Data Reduction": [[395, "map-analysis-data-reduction"]], "MapAxes": [[201, null]], "MapAxis": [[202, null]], "MapCoord": [[203, null], [537, "mapcoord"]], "MapDataset": [[103, null], [398, "mapdataset"], [488, "mapdataset"]], "MapDatasetEventSampler": [[104, null], [399, "mapdataseteventsampler"]], "MapDatasetMaker": [[177, null]], "MapDatasetMetaData": [[105, null]], "MapDatasetOnOff": [[106, null], [398, "mapdatasetonoff"]], "MapDatasetWeighted": [[107, null]], "MapPanelPlotter": [[373, null]], "Maps": [[204, null], [395, "maps"], [493, null], [511, "maps"]], "Maps operations": [[493, "maps-operations"]], "Mask dilation and erosion": [[494, "mask-dilation-and-erosion"]], "Mask maps": [[494, null]], "Mask modifications": [[494, "mask-modifications"]], "Mask some sky regions": [[494, "mask-some-sky-regions"]], "Masks for fitting": [[494, "masks-for-fitting"]], "Masks operations": [[494, "masks-operations"]], "Meetings": [[395, "meetings"]], "Metadata API": [[413, "metadata-api"]], "Metadata files": [[412, "metadata-files"]], "Metadata generation and propagation along the dataflow": [[413, "metadata-generation-and-propagation-along-the-dataflow"]], "Methods to characterize variability": [[485, "methods-to-characterize-variability"]], "MeyerCrabSpectralModel": [[249, null]], "Minor changes": [[407, "minor-changes"]], "Mission elapsed times (MET)": [[589, "mission-elapsed-times-met"]], "Model": [[250, null]], "Model and dataset": [[490, "model-and-dataset"], [498, "model-and-dataset"]], "Model fit": [[472, "model-fit"]], "Model fitting": [[463, "model-fitting"], [509, "model-fitting"]], "Model gallery": [[539, null]], "Model lists and serialisation": [[496, "model-lists-and-serialisation"]], "Model the observed spectrum": [[458, "model-the-observed-spectrum"]], "ModelBase": [[251, null]], "Modeling": [[395, "modeling"], [413, "modeling"], [484, "modeling"]], "Modeling and Fitting (DL4 to DL5)": [[582, null]], "Modeling and fitting": [[470, "modeling-and-fitting"]], "Modelling": [[467, "modelling"], [495, null]], "Models": [[252, null], [496, null]], "Models with energy dependent morphology": [[496, "models-with-energy-dependent-morphology"]], "Models with shared parameter": [[496, "models-with-shared-parameter"]], "Modifying Data": [[493, "modifying-data"]], "Modifying model parameters": [[496, "modifying-model-parameters"]], "MooreProfile": [[24, null]], "Morphological energy dependence estimation": [[473, null]], "Motivation": [[414, "motivation"], [415, "motivation"]], "Multi instrument joint 3D and 1D analysis": [[471, null]], "NFWProfile": [[25, null]], "N_JOBS_DEFAULT": [[331, null]], "Naima spectral model": [[561, null]], "NaimaSpectralModel": [[253, null]], "New features": [[449, "new-features"], [452, "new-features"], [453, "new-features"], [454, "new-features"]], "Next steps": [[500, "next-steps"], [502, "next-steps"], [503, "next-steps"]], "Night-wise LC estimation": [[479, "night-wise-lc-estimation"]], "Norm Spectral Models": [[496, "norm-spectral-models"]], "Notations": [[587, "notations"]], "Notes": [[586, "notes"]], "OGIPDatasetReader": [[108, null]], "OGIPDatasetWriter": [[109, null]], "Object text repr, str and info": [[386, "object-text-repr-str-and-info"]], "Objective": [[467, "objective"], [468, "objective"], [474, "objective"], [475, "objective"], [497, "objective"]], "Objectives": [[396, "objectives"]], "Observation": [[88, null]], "Observation duration and effective livetime": [[492, "observation-duration-and-effective-livetime"]], "Observation selection": [[463, "observation-selection"], [509, "observation-selection"]], "ObservationEventSampler": [[110, null]], "ObservationFilter": [[89, null]], "ObservationMetaData": [[90, null]], "ObservationTable": [[91, null]], "Observational clustering": [[497, null]], "Observations": [[92, null]], "ObservationsEventsSampler": [[93, null]], "Obtain the data to use": [[473, "obtain-the-data-to-use"]], "Obtain the observations": [[497, "obtain-the-observations"]], "Obtaining an integral flux sensitivity": [[457, "obtaining-an-integral-flux-sensitivity"]], "Old example data": [[417, "old-example-data"]], "On-Off analysis": [[465, "on-off-analysis"]], "Opening the data": [[482, "opening-the-data"]], "OptimizeResult": [[217, null]], "Optional dependencies": [[385, "optional-dependencies"], [403, "optional-dependencies"]], "Other folders": [[417, "other-folders"]], "Other packages": [[513, "other-packages"]], "Other repositories": [[417, "other-repositories"]], "Others": [[386, "others"], [417, "others"]], "Outlook": [[398, "outlook"], [400, "outlook"], [402, "outlook"], [403, "outlook"], [405, "outlook"], [406, "outlook"], [407, "outlook"], [410, "outlook"]], "Output in Jupyter notebook cells": [[386, "output-in-jupyter-notebook-cells"]], "Outputs from the Nested Sampling": [[415, "outputs-from-the-nested-sampling"]], "Overview": [[532, "overview"], [534, "overview"], [535, "overview"]], "PIG 1 - PIG purpose and guidelines": [[391, null]], "PIG 10 - Regions": [[400, null]], "PIG 11 - Light curves": [[401, null]], "PIG 12 - High level interface": [[402, null]], "PIG 13 - Gammapy dependencies and distribution": [[403, null]], "PIG 14 - Uncertainty estimation": [[404, null]], "PIG 16 - Gammapy package structure": [[405, null]], "PIG 18 - Documentation": [[406, null]], "PIG 19 - Gammapy package structure follow up": [[407, null]], "PIG 2 - Organization of low level analysis code": [[392, null]], "PIG 20 - Global Model API": [[408, null]], "PIG 21 - Models improvements": [[409, null]], "PIG 22 - Unified flux estimators API": [[410, null]], "PIG 23 - Gammapy release cycle and version numbering": [[411, null]], "PIG 24 - Authorship policy": [[412, null]], "PIG 25 - Metadata container for Gammapy": [[413, null]], "PIG 26 - Model Priors API": [[414, null]], "PIG 27 - Bayesian Inference using Nested Sampling": [[415, null]], "PIG 3 - Plan for dropping Python 2.7 support": [[393, null]], "PIG 4 - Setup for tutorial notebooks and data": [[394, null]], "PIG 5 - Gammapy 1.0 roadmap": [[395, null]], "PIG 6 - CTA observation handling": [[396, null]], "PIG 7 - Models": [[397, null]], "PIG 8 - Datasets": [[398, null]], "PIG 9 - Event sampling": [[399, null]], "PIG review": [[391, "pig-review"]], "PIG status": [[391, "pig-status"]], "PIGs": [[390, null]], "POOL_KWARGS_DEFAULT": [[332, null]], "PSF": [[491, "psf"], [501, "psf"]], "PSF3D": [[164, null]], "PSFKernel": [[165, null]], "PSFKing": [[166, null]], "PSFMap": [[167, null]], "PWN": [[50, null]], "Package / API": [[505, "package-api"]], "Package and docs": [[417, "package-and-docs"]], "Package structure and dependencies": [[440, "package-structure-and-dependencies"]], "Paczynski1990": [[36, null]], "Paczynski1990Velocity": [[37, null]], "Papers": [[395, "papers"]], "Parallel evaluation of datasets": [[398, "parallel-evaluation-of-datasets"]], "Parameter": [[218, null]], "ParameterEstimator": [[134, null]], "ParameterSensitivityEstimator": [[135, null]], "Parameters": [[219, null]], "ParametricPSF": [[168, null]], "Perform spectral model fitting": [[459, "perform-spectral-model-fitting"]], "Perform the data reduction loop": [[510, "perform-the-data-reduction-loop"]], "Perform the data reduction loop.": [[459, "perform-the-data-reduction-loop"]], "Performance and precision evaluation": [[399, "performance-and-precision-evaluation"]], "Phase curve temporal model": [[579, null]], "Phase-resolved map": [[482, "phase-resolved-map"]], "Phase-resolved spectrum": [[482, "phase-resolved-spectrum"]], "PhaseBackgroundMaker": [[178, null]], "Phasogram": [[482, "phasogram"]], "Piecewise  norm spectral model": [[562, null]], "Piecewise norm spatial model": [[545, null]], "PiecewiseNormSpatialModel": [[254, null]], "PiecewiseNormSpectralModel": [[255, null]], "Pixel coordinate convention": [[386, "pixel-coordinate-convention"]], "Plot": [[472, "plot"]], "Plot off regions": [[462, "plot-off-regions"]], "Plot the fitted spectrum": [[510, "plot-the-fitted-spectrum"]], "Plot the observed and intrinsic fluxes": [[458, "plot-the-observed-and-intrinsic-fluxes"]], "Plotting Results": [[476, "plotting-results"]], "Plotting a RegionGeom": [[538, "plotting-a-regiongeom"]], "Plotting models on a (counts) map": [[495, "plotting-models-on-a-counts-map"]], "Plotting the final results of the 1D Analysis": [[463, "plotting-the-final-results-of-the-1d-analysis"]], "Plotting the map content": [[538, "plotting-the-map-content"]], "Plotting the results": [[473, "plotting-the-results"]], "Plotting the underlying region": [[538, "plotting-the-underlying-region"]], "Point Spread Function": [[531, null]], "Point source sensitivity": [[457, null]], "Point spatial model": [[546, null]], "Point spread function": [[500, "point-spread-function"]], "PointSpatialModel": [[256, null]], "PointingInfo": [[94, null]], "PointingMode": [[95, null]], "Possible implementations": [[412, "possible-implementations"]], "Post release": [[416, "post-release"]], "Power Law Fit": [[460, "power-law-fit"]], "Power law 2 spectral model": [[564, null]], "Power law norm spectral model": [[565, null]], "Power law spectral model": [[563, null]], "PowerLaw temporal model": [[577, null]], "PowerLaw2SpectralModel": [[257, null]], "PowerLawNormSpectralModel": [[258, null]], "PowerLawSpectralModel": [[259, null]], "PowerLawTemporalModel": [[260, null]], "Predicted counts": [[521, "predicted-counts"]], "Prepare and run the event sampler": [[475, "prepare-and-run-the-event-sampler"]], "Prepare the datasets creation": [[459, "prepare-the-datasets-creation"]], "Preparing reduced datasets geometry": [[510, "preparing-reduced-datasets-geometry"]], "Prerequisites": [[459, "prerequisites"], [460, "prerequisites"], [462, "prerequisites"], [463, "prerequisites"], [464, "prerequisites"], [465, "prerequisites"], [467, "prerequisites"], [471, "prerequisites"], [473, "prerequisites"], [474, "prerequisites"], [475, "prerequisites"], [476, "prerequisites"], [478, "prerequisites"], [479, "prerequisites"], [480, "prerequisites"], [481, "prerequisites"], [485, "prerequisites"], [490, "prerequisites"], [494, "prerequisites"], [495, "prerequisites"], [498, "prerequisites"], [509, "prerequisites"], [510, "prerequisites"]], "Pretty-print source information": [[487, "pretty-print-source-information"]], "PrimaryFlux": [[26, null]], "Prior": [[261, null]], "PriorParameter": [[220, null]], "PriorParameters": [[221, null]], "Priors": [[498, null]], "Profile Estimation": [[476, "profile-estimation"]], "Profile Likelihood": [[588, "profile-likelihood"]], "Profiles": [[486, "profiles"]], "Project Management": [[395, "project-management"]], "Project setup": [[417, null]], "Projects": [[395, "projects"]], "Proposal": [[394, "proposal"], [396, "proposal"], [397, "proposal"], [398, "proposal"], [399, "proposal"], [400, "proposal"], [401, "proposal"], [402, "proposal"], [404, "proposal"], [405, "proposal"], [406, "proposal"], [407, "proposal"], [408, "proposal"], [409, "proposal"], [415, "proposal"]], "Proposal of API for flux estimate results": [[410, "proposal-of-api-for-flux-estimate-results"]], "Proposed Approach": [[476, "proposed-approach"]], "Proposed approach": [[459, "proposed-approach"], [460, "proposed-approach"], [463, "proposed-approach"], [465, "proposed-approach"], [466, "proposed-approach"], [467, "proposed-approach"], [468, "proposed-approach"], [471, "proposed-approach"], [474, "proposed-approach"], [475, "proposed-approach"], [478, "proposed-approach"], [479, "proposed-approach"], [480, "proposed-approach"], [481, "proposed-approach"], [484, "proposed-approach"], [485, "proposed-approach"], [490, "proposed-approach"], [494, "proposed-approach"], [495, "proposed-approach"], [497, "proposed-approach"], [509, "proposed-approach"], [510, "proposed-approach"]], "Proposed class diagram": [[396, "proposed-class-diagram"]], "Proposed metadata classes": [[413, "proposed-metadata-classes"]], "Proposed solution": [[413, "proposed-solution"]], "Pull Requests": [[440, "pull-requests"], [441, "pull-requests"], [449, "pull-requests"], [450, "pull-requests"], [451, "pull-requests"], [452, "pull-requests"], [453, "pull-requests"], [454, "pull-requests"]], "Pull requests": [[426, "pull-requests"], [427, "pull-requests"], [428, "pull-requests"], [429, "pull-requests"], [430, "pull-requests"], [431, "pull-requests"], [432, "pull-requests"], [433, "pull-requests"], [434, "pull-requests"], [435, "pull-requests"], [436, "pull-requests"], [437, "pull-requests"], [438, "pull-requests"], [439, "pull-requests"], [442, "pull-requests"], [443, "pull-requests"], [444, "pull-requests"], [445, "pull-requests"], [446, "pull-requests"], [447, "pull-requests"], [448, "pull-requests"]], "Pulsar": [[51, null]], "Pulsar Source Models": [[517, null]], "Pulsar Wind Nebula Source Models": [[518, null]], "Pulsar analysis": [[482, null]], "Python": [[423, "id2"]], "Python scripts": [[423, "python-scripts"]], "Python version support": [[386, "python-version-support"]], "RadMax2D": [[169, null]], "Read and Introduce Data": [[476, "read-and-introduce-data"]], "Read in input images": [[466, "read-in-input-images"]], "Read the datasets": [[495, "read-the-datasets"]], "Read the energy-dependent model": [[475, "read-the-energy-dependent-model"]], "Reading Maps": [[493, "reading-maps"]], "Reading and Writing": [[493, "reading-and-writing"]], "Reading and writing masks": [[494, "reading-and-writing-masks"]], "Reading different datasets": [[471, "reading-different-datasets"]], "RecoPSFMap": [[170, null]], "Recommended Setup": [[419, "recommended-setup"], [421, null]], "Reference": [[406, "reference"], [585, "reference"]], "References": [[584, "publications"]], "Reflected regions background": [[492, "reflected-regions-background"], [534, null]], "ReflectedRegionsBackgroundMaker": [[179, null]], "ReflectedRegionsFinder": [[180, null]], "Region arguments": [[400, "region-arguments"]], "RegionGeom": [[205, null], [538, "regiongeom"]], "RegionGeom and RegionNDMap": [[538, null]], "RegionGeom and coordinates": [[538, "regiongeom-and-coordinates"]], "RegionNDMap": [[206, null], [538, "regionndmap"]], "RegionsFinder": [[181, null]], "Relation to WCS geometries": [[538, "relation-to-wcs-geometries"]], "Release notes": [[386, "release-notes"], [425, null]], "Release preparation, feature freeze": [[411, "release-preparation-feature-freeze"]], "Release scheduling and LTS": [[411, "release-scheduling-and-lts"]], "Releases": [[395, "releases"], [412, "releases"], [417, "releases"]], "Releasing the final version of the major release": [[416, "releasing-the-final-version-of-the-major-release"]], "Releasing the first major release candidate": [[416, "releasing-the-first-major-release-candidate"]], "Removing a model from a dataset": [[495, "removing-a-model-from-a-dataset"]], "Removing an attribute": [[386, "removing-an-attribute"]], "Renaming an argument": [[386, "renaming-an-argument"]], "Required dependencies": [[385, "required-dependencies"], [403, "required-dependencies"]], "Requirements": [[413, "requirements"]], "Resampling datasets": [[488, "resampling-datasets"]], "Resolve gammapy.detect": [[407, "resolve-gammapy-detect"]], "Results": [[457, "results"]], "Results exploration": [[463, "results-exploration"]], "Ring background": [[492, "ring-background"], [535, null]], "Ring background map": [[468, null]], "RingBackgroundMaker": [[182, null]], "Rotated regions": [[400, "rotated-regions"]], "Run Estimation": [[476, "run-estimation"]], "Run Estimator": [[473, "run-estimator"]], "Run data reduction chain": [[462, "run-data-reduction-chain"], [464, "run-data-reduction-chain"]], "Run the 1D data reduction": [[479, "run-the-1d-data-reduction"]], "Run the 3D data reduction": [[479, "run-the-3d-data-reduction"]], "Running config driven data reduction": [[585, "running-config-driven-data-reduction"]], "Running tests & building Documentation": [[389, "running-tests-building-documentation"]], "Running the Data Reduction": [[463, "running-the-data-reduction"]], "Running the analysis": [[509, "running-the-analysis"]], "Running the estimation": [[463, "running-the-estimation"]], "Running the first step of the analysis: the Data Reduction": [[463, "running-the-first-step-of-the-analysis-the-data-reduction"]], "Running the fit": [[463, "running-the-fit"]], "Running the light curve extraction in 1D": [[479, "running-the-light-curve-extraction-in-1d"]], "SED types": [[523, "sed-types"]], "SNR": [[52, null]], "SNRTrueloveMcKee": [[53, null]], "SPATIAL_MODEL_REGISTRY": [[262, null]], "SPECTRAL_MODEL_REGISTRY": [[263, null]], "Safe data range definition": [[533, "safe-data-range-definition"]], "Safe data range handling": [[492, "safe-data-range-handling"]], "SafeMaskMaker": [[183, null]], "Sample a source with energy-dependent temporal evolution": [[475, null]], "Sampling methods": [[399, "sampling-methods"]], "Sampling the source and background events": [[474, "sampling-the-source-and-background-events"]], "Save dataset to disk": [[463, "save-dataset-to-disk"], [509, "save-dataset-to-disk"], [510, "save-dataset-to-disk"]], "ScaleSpectralModel": [[264, null]], "ScaledRegularGridInterpolator": [[325, null]], "Scripts": [[505, "scripts"]], "Select a catalog subset": [[487, "select-a-catalog-subset"]], "Select a source": [[487, "select-a-source"]], "Select observations": [[472, "select-observations"]], "Select the ON region": [[459, "select-the-on-region"]], "Select the data": [[459, "select-the-data"], [480, "select-the-data"]], "Selecting models contributing to a given region": [[495, "selecting-models-contributing-to-a-given-region"]], "Selecting models from a list": [[495, "selecting-models-from-a-list"]], "SensitivityEstimator": [[136, null]], "Serialisation": [[414, "serialisation"], [491, "serialisation"], [491, "id1"], [491, "id2"], [501, "serialisation"]], "Serialisation and I/O": [[476, "serialisation-and-i-o"]], "Serialisation of datasets": [[521, "serialisation-of-datasets"]], "Serialisation of the fit result": [[463, "serialisation-of-the-fit-result"]], "Serialisation of the results": [[463, "serialisation-of-the-results"]], "Serialisation of the samples": [[415, "serialisation-of-the-samples"]], "Serialising models": [[495, "serialising-models"]], "Serialization": [[413, "serialization"]], "Setting fitting parameters": [[463, "setting-fitting-parameters"]], "Setting modeling and fitting parameters": [[509, "setting-modeling-and-fitting-parameters"]], "Setting the background normalization maker": [[509, "setting-the-background-normalization-maker"]], "Setting the data to use": [[509, "setting-the-data-to-use"]], "Setting the exclusion mask": [[463, "setting-the-exclusion-mask"], [509, "setting-the-exclusion-mask"]], "Setting the reduced datasets geometry": [[509, "setting-the-reduced-datasets-geometry"]], "Setup": [[457, "setup"], [458, "setup"], [459, "setup"], [460, "setup"], [462, "setup"], [463, "setup"], [464, "setup"], [465, "setup"], [466, "setup"], [467, "setup"], [468, "setup"], [472, "setup"], [473, "setup"], [474, "setup"], [475, "setup"], [476, "setup"], [479, "setup"], [480, "setup"], [481, "setup"], [484, "setup"], [485, "setup"], [486, "setup"], [488, "setup"], [492, "setup"], [493, "setup"], [494, "setup"], [495, "setup"], [496, "setup"], [500, "setup"], [501, "setup"], [509, "setup"], [510, "setup"], [511, "setup"]], "Shell spatial model": [[547, null]], "Shell2 spatial model": [[548, null]], "Shell2SpatialModel": [[265, null]], "ShellSpatialModel": [[266, null]], "Show images": [[472, "show-images"]], "Show the results tables": [[473, "show-the-results-tables"]], "Show various observation quantities": [[497, "show-various-observation-quantities"]], "SimplePulsar": [[54, null]], "Simplify YAML Parameter Representation": [[409, "simplify-yaml-parameter-representation"]], "Simplify YAML Representation": [[409, "simplify-yaml-representation"]], "Simulate multiple event lists": [[474, "simulate-multiple-event-lists"]], "Simulating a light curve": [[481, "simulating-a-light-curve"]], "Simulating and fitting a time varying source": [[481, null]], "Simulation": [[478, "simulation"]], "Simulation of MapDataset and SpectrumDataset": [[398, "simulation-of-mapdataset-and-spectrumdataset"]], "Simulation of a single spectrum": [[465, "simulation-of-a-single-spectrum"]], "Sine temporal model": [[578, null]], "SineTemporalModel": [[267, null]], "Skip unit tests for some Astropy versions": [[386, "skip-unit-tests-for-some-astropy-versions"]], "Sky and pixel regions": [[400, "sky-and-pixel-regions"]], "Sky maps (DL4)": [[537, null]], "SkyModel": [[268, null], [496, "skymodel"]], "Smooth broken power law spectral model": [[566, null]], "SmoothBrokenPowerLawSpectralModel": [[269, null]], "Some terminology": [[396, "some-terminology"]], "Source Detection": [[472, "source-detection"]], "Source candidates": [[466, "source-candidates"]], "Source catalogs": [[487, null], [511, "source-catalogs"], [520, null]], "Source detection and significance maps": [[466, null]], "Source information": [[487, "source-information"]], "Source models": [[487, "source-models"], [500, "source-models"]], "Source object": [[487, "source-object"]], "Source statistic": [[462, "source-statistic"]], "SourceCatalog": [[56, null]], "SourceCatalog1LHAASO": [[57, null]], "SourceCatalog2FHL": [[58, null]], "SourceCatalog2HWC": [[59, null]], "SourceCatalog2PC": [[60, null]], "SourceCatalog3FGL": [[61, null]], "SourceCatalog3FHL": [[62, null]], "SourceCatalog3HWC": [[63, null]], "SourceCatalog3PC": [[64, null]], "SourceCatalog4FGL": [[65, null]], "SourceCatalogGammaCat": [[66, null]], "SourceCatalogHGPS": [[67, null]], "SourceCatalogLargeScaleHGPS": [[68, null]], "SourceCatalogObject": [[69, null]], "SourceCatalogObject1LHAASO": [[70, null]], "SourceCatalogObject2FHL": [[71, null]], "SourceCatalogObject2HWC": [[72, null]], "SourceCatalogObject2PC": [[73, null]], "SourceCatalogObject3FGL": [[74, null]], "SourceCatalogObject3FHL": [[75, null]], "SourceCatalogObject3HWC": [[76, null]], "SourceCatalogObject3PC": [[77, null]], "SourceCatalogObject4FGL": [[78, null]], "SourceCatalogObjectGammaCat": [[79, null]], "SourceCatalogObjectHGPS": [[80, null]], "SourceCatalogObjectHGPSComponent": [[81, null]], "SourceIRFModel": [[397, "sourceirfmodel"]], "Spatial analysis": [[472, "spatial-analysis"]], "Spatial models": [[496, "spatial-models"], [539, "spatial-models"]], "SpatialIRFModel": [[397, "spatialirfmodel"]], "SpatialModel": [[270, null]], "Special cases": [[588, "special-cases"]], "Specificities of the HGPS catalog": [[487, "specificities-of-the-hgps-catalog"]], "Spectral Absorption Model": [[409, "spectral-absorption-model"]], "Spectral Norm Models": [[409, "spectral-norm-models"]], "Spectral analysis": [[462, null]], "Spectral analysis of extended sources": [[459, null]], "Spectral analysis with energy-dependent directional cuts": [[464, null]], "Spectral analysis with the HLI": [[463, null]], "Spectral models": [[496, "spectral-models"], [539, "spectral-models"]], "Spectral models and flux points": [[511, "spectral-models-and-flux-points"]], "Spectral points": [[472, "spectral-points"]], "SpectralIRFModel": [[397, "spectralirfmodel"]], "SpectralModel": [[271, null]], "Spectrum": [[472, "spectrum"]], "Spectrum dataset": [[492, "spectrum-dataset"]], "SpectrumDataset": [[111, null], [398, "spectrumdataset"], [488, "spectrumdataset"]], "SpectrumDatasetMaker": [[184, null]], "SpectrumDatasetOnOff": [[112, null], [398, "spectrumdatasetonoff"]], "Sphinx gallery extension": [[387, "sphinx-gallery-extension"]], "Spiral arm models": [[515, "spiral-arm-models"]], "Stack observations": [[462, "stack-observations"]], "Stacked analysis": [[470, "stacked-analysis"]], "Stacking Multiple Datasets": [[521, "stacking-multiple-datasets"]], "Statistical utility functions": [[587, null]], "Status": [[396, "status"], [405, "status"]], "Storing the energy dispersion information as a function of sky position": [[529, "storing-the-energy-dispersion-information-as-a-function-of-sky-position"]], "Storing the results and further studies": [[401, "storing-the-results-and-further-studies"]], "Sub-packages": [[514, "sub-packages"]], "Suggestions": [[412, "suggestions"]], "Summary": [[426, "summary"], [427, "summary"], [428, "summary"], [429, "summary"], [430, "summary"], [431, "summary"], [432, "summary"], [433, "summary"], [434, "summary"], [435, "summary"], [436, "summary"], [437, "summary"], [438, "summary"], [439, "summary"], [440, "summary"], [441, "summary"], [442, "summary"], [443, "summary"], [444, "summary"], [445, "summary"], [446, "summary"], [447, "summary"], [448, "summary"], [449, "summary"], [450, "summary"], [451, "summary"], [452, "summary"], [453, "summary"], [454, "summary"], [470, "summary"], [501, "summary"]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)": [[569, null]], "Super Exponential Cutoff Power Law Model used for 4FGL-DR3": [[568, null]], "Super exponential cutoff power law model used for 3FGL": [[567, null]], "SuperExpCutoffPowerLaw3FGLSpectralModel": [[272, null]], "SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[273, null]], "SuperExpCutoffPowerLaw4FGLSpectralModel": [[274, null]], "Supernova Remnant Models": [[519, null]], "Support for Asymmetric IRFs": [[491, "support-for-asymmetric-irfs"]], "Support of python Cython, numpy and astropy versions": [[411, "support-of-python-cython-numpy-and-astropy-versions"]], "Survey Map Script": [[507, null]], "Survey panel plots": [[590, "survey-panel-plots"]], "TEMPORAL_MODEL_REGISTRY": [[275, null]], "TS map estimation": [[466, "ts-map-estimation"]], "TSMapEstimator": [[137, null]], "Table conversion": [[489, "table-conversion"]], "Task List": [[398, "task-list"]], "Task list": [[397, "task-list"], [399, "task-list"], [400, "task-list"], [401, "task-list"], [402, "task-list"], [403, "task-list"], [415, "task-list"]], "Template spatial model": [[549, null]], "Template spectral model": [[570, null]], "TemplateNDSpatialModel": [[276, null]], "TemplateNDSpectralModel": [[277, null]], "TemplateNPredModel": [[278, null]], "TemplatePhaseCurveTemporalModel": [[279, null]], "TemplateSpatialModel": [[280, null]], "TemplateSpectralModel": [[281, null]], "Temporal models": [[496, "temporal-models"], [539, "temporal-models"]], "TemporalModel": [[282, null]], "Testing of plotting functions": [[386, "testing-of-plotting-functions"]], "The case of image and cube analysis": [[392, "the-case-of-image-and-cube-analysis"]], "The chi-squared value for each parameter of interest": [[473, "the-chi-squared-value-for-each-parameter-of-interest"]], "The gammapy-data repository": [[417, "the-gammapy-data-repository"]], "The gammapy-extra repository": [[417, "the-gammapy-extra-repository"]], "The index tables": [[522, "the-index-tables"]], "The reflected region finder": [[534, "the-reflected-region-finder"]], "The results for testing energy dependence": [[473, "the-results-for-testing-energy-dependence"]], "The results of the source signal above the background in each energy bin": [[473, "the-results-of-the-source-signal-above-the-background-in-each-energy-bin"]], "The setup": [[471, "the-setup"], [489, "the-setup"], [490, "the-setup"], [498, "the-setup"]], "Theta squared event distribution": [[503, "theta-squared-event-distribution"]], "Time": [[505, "time"]], "Time bin preparation": [[401, "time-bin-preparation"]], "Time bins": [[401, "time-bins"]], "Time differences": [[589, "time-differences"]], "Time format and scale": [[589, "time-format-and-scale"]], "Time handling in Gammapy": [[589, "time-handling-in-gammapy"]], "Time resolved spectroscopy algorithm": [[484, "time-resolved-spectroscopy-algorithm"]], "Time resolved spectroscopy estimator": [[484, null]], "Time variable source using a lightcurve": [[474, "time-variable-source-using-a-lightcurve"]], "TimeMapAxis": [[207, null], [493, "timemapaxis"]], "Timing Analysis": [[395, "timing-analysis"]], "TimmerKonig_lightcurve_simulator": [[294, null]], "Troubleshooting": [[422, null], [585, "troubleshooting"]], "Tutorial overview": [[473, "tutorial-overview"], [500, "tutorial-overview"], [502, "tutorial-overview"]], "Tutorials": [[406, "tutorials"], [505, null]], "Tutorials Overview": [[419, "tutorials-overview"]], "Type validation": [[413, "type-validation"]], "Types of supported datasets": [[521, "types-of-supported-datasets"]], "Unification of flux estimators?": [[410, "unification-of-flux-estimators"]], "UniformPrior": [[283, null]], "Unify calling interface for models": [[397, "unify-calling-interface-for-models"]], "Upsampling and downsampling non-spatial axes": [[538, "upsampling-and-downsampling-non-spatial-axes"]], "Use cases": [[414, "use-cases"], [415, "use-cases"]], "Use cases / scenarios": [[396, "use-cases-scenarios"]], "User guide": [[526, null]], "User perspective": [[393, "user-perspective"]], "User testing of the API": [[415, "user-testing-of-the-api"]], "Using Anaconda / Miniconda": [[420, "using-anaconda-miniconda"]], "Using Factory Methods": [[493, "using-factory-methods"]], "Using Gammapy": [[423, null]], "Using Gammapy IRFs": [[491, null]], "Using Mamba": [[420, "using-mamba"]], "Using YAML configuration files": [[509, "using-yaml-configuration-files"]], "Using YAML configuration files for setting/writing the Data Reduction parameters": [[463, "using-yaml-configuration-files-for-setting-writing-the-data-reduction-parameters"]], "Using data stored into your computer": [[463, "using-data-stored-into-your-computer"]], "Using gammapy.analysis": [[524, "using-gammapy-analysis"]], "Using gammapy.astro.darkmatter": [[513, "using-gammapy-astro-darkmatter"]], "Using gammapy.astro.source": [[516, "using-gammapy-astro-source"]], "Using gammapy.catalog": [[520, "using-gammapy-catalog"]], "Using gammapy.data": [[522, "using-gammapy-data"]], "Using gammapy.datasets": [[521, "using-gammapy-datasets"]], "Using gammapy.estimators": [[523, "using-gammapy-estimators"]], "Using gammapy.irf": [[530, "using-gammapy-irf"]], "Using gammapy.makers": [[533, "using-gammapy-makers"]], "Using gammapy.maps": [[537, "using-gammapy-maps"]], "Using gammapy.modeling": [[582, "using-gammapy-modeling"]], "Using masks": [[488, "using-masks"]], "Using other package managers": [[420, "using-other-package-managers"]], "Using pip": [[420, "using-pip"]], "Using regions": [[534, "using-regions"]], "Using the reflected background estimator": [[534, "using-the-reflected-background-estimator"]], "Utility functions": [[589, null]], "ValleeSpiral": [[38, null]], "Variables": [[1, "variables"], [2, "variables"], [3, "variables"], [4, "variables"], [5, "variables"], [7, "variables"], [8, "variables"], [10, "variables"], [13, "variables"], [13, "id11"]], "Velocity distributions": [[515, "velocity-distributions"]], "Venv Environments": [[418, "venv-environments"]], "Version 0.1": [[425, "version-0-1"]], "Version 0.10": [[425, "version-0-10"]], "Version 0.11": [[425, "version-0-11"]], "Version 0.12": [[425, "version-0-12"]], "Version 0.13": [[425, "version-0-13"]], "Version 0.14": [[425, "version-0-14"]], "Version 0.15": [[425, "version-0-15"]], "Version 0.16": [[425, "version-0-16"]], "Version 0.17": [[425, "version-0-17"]], "Version 0.18": [[425, "version-0-18"]], "Version 0.19": [[425, "version-0-19"]], "Version 0.2": [[425, "version-0-2"]], "Version 0.20": [[425, "version-0-20"]], "Version 0.20.1": [[425, "version-0-20-1"]], "Version 0.3": [[425, "version-0-3"]], "Version 0.4": [[425, "version-0-4"]], "Version 0.5": [[425, "version-0-5"]], "Version 0.6": [[425, "version-0-6"]], "Version 0.7": [[425, "version-0-7"]], "Version 0.8": [[425, "version-0-8"]], "Version 0.9": [[425, "version-0-9"]], "Version 1.0": [[425, "version-1-0"]], "Version 1.0.1": [[425, "version-1-0-1"]], "Version 1.0.2": [[425, "version-1-0-2"]], "Version 1.1": [[425, "version-1-1"]], "Version 1.2": [[425, "version-1-2"]], "Version 1.3": [[425, "version-1-3"]], "Version numbering": [[411, "version-numbering"]], "Virtual Environments": [[418, null]], "Visualing a RegionNDMap": [[538, "visualing-a-regionndmap"]], "Visualising the results": [[484, "visualising-the-results"]], "Visualization": [[590, null]], "Visualizing and Plotting": [[493, "visualizing-and-plotting"]], "WStat : Poisson data with background measurement": [[586, "wstat-poisson-data-with-background-measurement"]], "WStat counts statistic": [[587, "wstat-counts-statistic"]], "WStatCountsStatistic": [[295, null]], "WcsGeom": [[208, null]], "WcsMap": [[209, null]], "WcsNDMap": [[210, null]], "What checks and conversions should I do for inputs?": [[386, "what-checks-and-conversions-should-i-do-for-inputs"]], "What is a PIG?": [[391, "what-is-a-pig"]], "What is this?": [[389, "what-is-this"]], "What next?": [[460, "what-next"], [462, "what-next"], [466, "what-next"], [472, "what-next"], [479, "what-next"], [511, "what-next"]], "What others have": [[396, "what-others-have"]], "What we have": [[394, "what-we-have"], [402, "what-we-have"], [410, "what-we-have"]], "What\u2019s new?": [[427, "what-s-new"], [428, "what-s-new"], [429, "what-s-new"], [430, "what-s-new"], [431, "what-s-new"], [432, "what-s-new"], [433, "what-s-new"], [434, "what-s-new"], [435, "what-s-new"], [436, "what-s-new"], [437, "what-s-new"], [438, "what-s-new"], [440, "what-s-new"], [441, "what-s-new"], [443, "what-s-new"], [444, "what-s-new"], [445, "what-s-new"], [446, "what-s-new"], [447, "what-s-new"], [448, "what-s-new"]], "What\u2019s next": [[509, "whats-next"]], "What\u2019s next?": [[463, "whats-next"]], "Where should I import from?": [[386, "where-should-i-import-from"]], "WobbleRegionsFinder": [[185, null]], "Working with event lists": [[522, "working-with-event-lists"]], "Write your own CLI": [[585, "write-your-own-cli"]], "Writing Maps": [[493, "writing-maps"]], "Writing a PIG": [[391, "writing-a-pig"]], "Writing and reading a RegionNDMap to/from a FITS file": [[538, "writing-and-reading-a-regionndmap-to-from-a-fits-file"]], "Writing event lists and GTIs to file": [[522, "writing-event-lists-and-gtis-to-file"]], "YAML representation": [[541, "yaml-representation"], [542, "yaml-representation"], [543, "yaml-representation"], [544, "yaml-representation"], [545, "yaml-representation"], [546, "yaml-representation"], [547, "yaml-representation"], [548, "yaml-representation"], [549, "yaml-representation"], [551, "yaml-representation"], [552, "yaml-representation"], [553, "yaml-representation"], [554, "yaml-representation"], [555, "yaml-representation"], [556, "yaml-representation"], [557, "yaml-representation"], [558, "yaml-representation"], [559, "yaml-representation"], [560, "yaml-representation"], [561, "yaml-representation"], [562, "yaml-representation"], [563, "yaml-representation"], [564, "yaml-representation"], [565, "yaml-representation"], [566, "yaml-representation"], [567, "yaml-representation"], [568, "yaml-representation"], [569, "yaml-representation"], [570, "yaml-representation"], [572, "yaml-representation"], [573, "yaml-representation"], [574, "yaml-representation"], [575, "yaml-representation"], [576, "yaml-representation"], [577, "yaml-representation"], [578, "yaml-representation"], [579, "yaml-representation"], [580, "yaml-representation"]], "YusifovKucuk2004": [[39, null]], "YusifovKucuk2004B": [[40, null]], "ZhaoProfile": [[27, null]], "absolute_time": [[367, null]], "add_colorbar": [[374, null]], "add_observed_parameters": [[41, null]], "add_pulsar_parameters": [[42, null]], "add_pwn_parameters": [[43, null]], "add_snr_parameters": [[44, null]], "analysis": [[11, "gammapy-analysis"]], "analysis - High level interface": [[0, null]], "annotate_heatmap": [[375, null]], "apply_edisp": [[113, null], [118, null]], "arbitrary type input and validation": [[413, "arbitrary-type-input-and-validation"]], "as a function of of true energy and offset angle (EDISP_2D)": [[529, "as-a-function-of-of-true-energy-and-offset-angle-gadf-edisp-2d"]], "as a function of reconstructed energy and detector coordinates (BKG_3D)": [[528, "as-a-function-of-reconstructed-energy-and-detector-coordinates-gadf-bkg-3d"]], "as a function of reconstructed energy and offset angle, radially symmetric (BKG_2D)": [[528, "as-a-function-of-reconstructed-energy-and-offset-angle-radially-symmetric-gadf-bkg-2d"]], "as a function of true energy (RMF)": [[529, "as-a-function-of-true-energy-gadf-ogip-rmf"]], "as a function of true energy and offset angle (AEFF_2D)": [[527, "as-a-function-of-true-energy-and-offset-angle-gadf-aeff-2d"]], "assert_quantity_allclose": [[361, null]], "assert_skycoord_allclose": [[362, null]], "assert_time_allclose": [[363, null]], "astro - Astrophysics": [[1, null]], "cartesian": [[314, null]], "cash": [[296, null]], "cash_sum_cython": [[297, null]], "catalog - Source catalogs": [[2, null]], "check": [[11, "gammapy-check"]], "codemeta.json": [[412, "codemeta-json"]], "colormap_hess": [[376, null]], "colormap_milagro": [[377, null]], "combine_flux_maps": [[138, null]], "combine_significance_maps": [[139, null]], "compound_region_to_regions": [[344, null]], "compute_chisq": [[298, null]], "compute_flux_doubling": [[299, null]], "compute_fpp": [[300, null]], "compute_fvar": [[301, null]], "compute_lightcurve_discrete_correlation": [[140, null]], "compute_lightcurve_doublingtime": [[141, null]], "compute_lightcurve_fpp": [[142, null]], "compute_lightcurve_fvar": [[143, null]], "config": [[11, "gammapy-analysis-config"], [11, "gammapy-workflow-config"]], "containment_radius": [[211, null]], "containment_region": [[212, null]], "create_cosmic_ray_spectral_model": [[284, null]], "create_crab_spectral_model": [[285, null]], "create_empty_map_dataset_from_irfs": [[114, null]], "create_fermi_isotropic_diffuse_model": [[286, null]], "create_map_dataset_from_dl4": [[119, null]], "create_map_dataset_from_observation": [[115, null]], "create_map_dataset_geoms": [[116, null]], "cstat": [[302, null]], "data": [[413, "data"]], "data - DL3 data and observations": [[3, null]], "datasets": [[11, "gammapy-download-datasets"]], "datasets - Reduced datasets": [[4, null]], "discrete_correlation": [[303, null]], "docs.gammapy.org": [[417, "docs-gammapy-org"]], "download": [[11, "gammapy-download"]], "draw": [[336, null]], "earth_location_from_dict": [[323, null]], "estimate_exposure_reco_energy": [[144, null]], "estimators - High level estimators": [[5, null]], "f_cash_root_cython": [[304, null]], "find_peaks": [[145, null]], "find_peaks_in_flux_map": [[146, null]], "fov_to_sky": [[315, null]], "from_yaml": [[349, null]], "galactic": [[316, null]], "gamLike": [[513, "gamlike"]], "gammapy": [[11, "gammapy"]], "gammapy.analysis Package": [[0, "module-gammapy.analysis"]], "gammapy.astro.darkmatter Package": [[1, "module-gammapy.astro.darkmatter"]], "gammapy.astro.population Package": [[1, "module-gammapy.astro.population"]], "gammapy.astro.source Package": [[1, "module-gammapy.astro.source"]], "gammapy.catalog Package": [[2, "module-gammapy.catalog"]], "gammapy.data Package": [[3, "module-gammapy.data"]], "gammapy.datasets Package": [[4, "module-gammapy.datasets"]], "gammapy.datasets.utils Module": [[4, "module-gammapy.datasets.utils"]], "gammapy.estimators Package": [[5, "module-gammapy.estimators"]], "gammapy.estimators.utils Module": [[5, "module-gammapy.estimators.utils"]], "gammapy.irf Package": [[7, "module-gammapy.irf"]], "gammapy.makers Package": [[8, "module-gammapy.makers"]], "gammapy.makers.utils Module": [[8, "module-gammapy.makers.utils"]], "gammapy.maps Package": [[9, "module-gammapy.maps"]], "gammapy.modeling Package": [[10, "module-gammapy.modeling"]], "gammapy.modeling.models Package": [[10, "module-gammapy.modeling.models"]], "gammapy.modeling.models.utils Module": [[10, "module-gammapy.modeling.models.utils"]], "gammapy.org": [[417, "gammapy-org"]], "gammapy.stats Package": [[12, "module-gammapy.stats"]], "gammapy.utils.cluster Module": [[13, "module-gammapy.utils.cluster"]], "gammapy.utils.coordinates Package": [[13, "module-gammapy.utils.coordinates"]], "gammapy.utils.fits Module": [[13, "module-gammapy.utils.fits"]], "gammapy.utils.integrate Module": [[13, "module-gammapy.utils.integrate"]], "gammapy.utils.interpolation Module": [[13, "module-gammapy.utils.interpolation"]], "gammapy.utils.parallel Module": [[13, "module-gammapy.utils.parallel"]], "gammapy.utils.random Package": [[13, "module-gammapy.utils.random"]], "gammapy.utils.regions Module": [[13, "module-gammapy.utils.regions"]], "gammapy.utils.scripts Module": [[13, "module-gammapy.utils.scripts"]], "gammapy.utils.table Module": [[13, "module-gammapy.utils.table"]], "gammapy.utils.testing Module": [[13, "module-gammapy.utils.testing"]], "gammapy.utils.time Module": [[13, "module-gammapy.utils.time"]], "gammapy.utils.units Module": [[13, "module-gammapy.utils.units"]], "gammapy.visualization Package": [[14, "module-gammapy.visualization"]], "get_combined_flux_maps": [[147, null]], "get_combined_significance_maps": [[148, null]], "get_images_paths": [[350, null]], "get_irfs_features": [[96, null]], "get_random_state": [[337, null]], "get_rebinned_axis": [[149, null]], "get_wstat_gof_terms": [[305, null]], "get_wstat_mu_bkg": [[306, null]], "hierarchical_clustering": [[311, null]], "hstack_columns": [[356, null]], "info": [[11, "gammapy-info"]], "integrate_spectrum": [[287, null]], "interpolate_profile": [[326, null]], "interpolation_scale": [[327, null]], "irf - Instrument response functions": [[7, null]], "load_irf_dict_from_file": [[171, null]], "logging": [[11, "gammapy-check-logging"]], "make_base_catalog_galactic": [[45, null]], "make_catalog_random_positions_cube": [[46, null]], "make_catalog_random_positions_sphere": [[47, null]], "make_concentric_annulus_sky_regions": [[345, null]], "make_counts_rad_max": [[186, null]], "make_edisp_kernel_map": [[187, null]], "make_edisp_map": [[188, null]], "make_effective_livetime_map": [[189, null]], "make_map_background_irf": [[190, null]], "make_map_exposure_true_energy": [[191, null]], "make_observation_time_map": [[192, null]], "make_orthogonal_rectangle_sky_regions": [[346, null]], "make_path": [[351, null]], "make_psf_map": [[193, null]], "make_theta_squared_table": [[194, null]], "makers - Data reduction": [[8, null]], "maps - Sky maps": [[9, null]], "modeling - Models and fitting": [[10, null]], "motion_since_birth": [[317, null]], "mpl_plot_check": [[364, null]], "multiprocessing_manager": [[333, null]], "norm_bounds_cython": [[307, null]], "normalize": [[338, null]], "notebooks": [[11, "gammapy-download-notebooks"]], "observatory_locations": [[97, null]], "pdf": [[339, null]], "plot_contour_line": [[378, null]], "plot_distribution": [[379, null]], "plot_heatmap": [[380, null]], "plot_map_rgb": [[381, null]], "plot_npred_signal": [[382, null]], "plot_spectrum_datasets_off_regions": [[383, null]], "plot_theta_squared_table": [[384, null]], "polar": [[318, null]], "pydantic": [[413, "pydantic"]], "radial_distributions": [[48, null]], "read_hermes_cube": [[288, null], [290, null]], "read_yaml": [[352, null]], "recursive_merge_dicts": [[353, null]], "region_to_frame": [[347, null]], "regions_to_compound_region": [[348, null]], "requires_data": [[365, null]], "requires_dependency": [[366, null]], "resample_energy_edges": [[150, null]], "run": [[11, "gammapy-analysis-run"], [11, "gammapy-workflow-run"]], "run_multiprocessing": [[334, null]], "sample_powerlaw": [[340, null]], "sample_sphere": [[341, null]], "sample_sphere_distance": [[342, null]], "sample_times": [[343, null]], "scale_plot_flux": [[289, null]], "scripts - Command line tools": [[11, null]], "select_nested_models": [[291, null]], "sky_to_fov": [[319, null]], "split_dataset": [[117, null], [120, null]], "standard_scaler": [[312, null]], "standardise_unit": [[371, null]], "stat_profile_ul_scipy": [[292, null]], "stats - Statistics": [[12, null]], "structure_function": [[308, null]], "table_row_to_dict": [[357, null]], "table_standardise_units_copy": [[358, null]], "table_standardise_units_inplace": [[359, null]], "the base class": [[413, "the-base-class"]], "time_ref_from_dict": [[368, null]], "time_ref_to_dict": [[369, null]], "time_relative_to_ref": [[370, null]], "to_yaml": [[354, null]], "trapz_loglog": [[324, null]], "unit_from_fits_image_hdu": [[372, null]], "utils - Utilities": [[13, null]], "velocity_distributions": [[49, null]], "velocity_glon_glat": [[320, null]], "visualization - Plotting features": [[14, null]], "weighted_cash_sum_cython": [[309, null]], "workflow": [[11, "gammapy-workflow"]], "write_yaml": [[355, null]], "wstat": [[310, null]]}, "docnames": ["api-reference/analysis", "api-reference/astro", "api-reference/catalog", "api-reference/data", "api-reference/datasets", "api-reference/estimators", "api-reference/index", "api-reference/irf", "api-reference/makers", "api-reference/maps", "api-reference/modeling", "api-reference/scripts", "api-reference/stats", "api-reference/utils", "api-reference/visualization", "api/gammapy.analysis.Analysis", "api/gammapy.analysis.AnalysisConfig", "api/gammapy.astro.darkmatter.BurkertProfile", "api/gammapy.astro.darkmatter.DMProfile", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", "api/gammapy.astro.darkmatter.EinastoProfile", "api/gammapy.astro.darkmatter.IsothermalProfile", "api/gammapy.astro.darkmatter.JFactory", "api/gammapy.astro.darkmatter.MooreProfile", "api/gammapy.astro.darkmatter.NFWProfile", "api/gammapy.astro.darkmatter.PrimaryFlux", "api/gammapy.astro.darkmatter.ZhaoProfile", "api/gammapy.astro.population.CaseBattacharya1998", "api/gammapy.astro.population.Exponential", "api/gammapy.astro.population.FaucherKaspi2006", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", "api/gammapy.astro.population.FaucherSpiral", "api/gammapy.astro.population.LogSpiral", "api/gammapy.astro.population.Lorimer2006", "api/gammapy.astro.population.Paczynski1990", "api/gammapy.astro.population.Paczynski1990Velocity", "api/gammapy.astro.population.ValleeSpiral", "api/gammapy.astro.population.YusifovKucuk2004", "api/gammapy.astro.population.YusifovKucuk2004B", "api/gammapy.astro.population.add_observed_parameters", "api/gammapy.astro.population.add_pulsar_parameters", "api/gammapy.astro.population.add_pwn_parameters", "api/gammapy.astro.population.add_snr_parameters", "api/gammapy.astro.population.make_base_catalog_galactic", "api/gammapy.astro.population.make_catalog_random_positions_cube", "api/gammapy.astro.population.make_catalog_random_positions_sphere", "api/gammapy.astro.population.radial_distributions", "api/gammapy.astro.population.velocity_distributions", "api/gammapy.astro.source.PWN", "api/gammapy.astro.source.Pulsar", "api/gammapy.astro.source.SNR", "api/gammapy.astro.source.SNRTrueloveMcKee", "api/gammapy.astro.source.SimplePulsar", "api/gammapy.catalog.CATALOG_REGISTRY", "api/gammapy.catalog.SourceCatalog", "api/gammapy.catalog.SourceCatalog1LHAASO", "api/gammapy.catalog.SourceCatalog2FHL", "api/gammapy.catalog.SourceCatalog2HWC", "api/gammapy.catalog.SourceCatalog2PC", "api/gammapy.catalog.SourceCatalog3FGL", "api/gammapy.catalog.SourceCatalog3FHL", "api/gammapy.catalog.SourceCatalog3HWC", "api/gammapy.catalog.SourceCatalog3PC", "api/gammapy.catalog.SourceCatalog4FGL", "api/gammapy.catalog.SourceCatalogGammaCat", "api/gammapy.catalog.SourceCatalogHGPS", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS", "api/gammapy.catalog.SourceCatalogObject", "api/gammapy.catalog.SourceCatalogObject1LHAASO", "api/gammapy.catalog.SourceCatalogObject2FHL", "api/gammapy.catalog.SourceCatalogObject2HWC", "api/gammapy.catalog.SourceCatalogObject2PC", "api/gammapy.catalog.SourceCatalogObject3FGL", "api/gammapy.catalog.SourceCatalogObject3FHL", "api/gammapy.catalog.SourceCatalogObject3HWC", "api/gammapy.catalog.SourceCatalogObject3PC", "api/gammapy.catalog.SourceCatalogObject4FGL", "api/gammapy.catalog.SourceCatalogObjectGammaCat", "api/gammapy.catalog.SourceCatalogObjectHGPS", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent", "api/gammapy.data.DataStore", "api/gammapy.data.EventList", "api/gammapy.data.EventListMetaData", "api/gammapy.data.FixedPointingInfo", "api/gammapy.data.GTI", "api/gammapy.data.HDUIndexTable", "api/gammapy.data.Observation", "api/gammapy.data.ObservationFilter", "api/gammapy.data.ObservationMetaData", "api/gammapy.data.ObservationTable", "api/gammapy.data.Observations", "api/gammapy.data.ObservationsEventsSampler", "api/gammapy.data.PointingInfo", "api/gammapy.data.PointingMode", "api/gammapy.data.get_irfs_features", "api/gammapy.data.observatory_locations", "api/gammapy.datasets.DATASET_REGISTRY", "api/gammapy.datasets.Dataset", "api/gammapy.datasets.Datasets", "api/gammapy.datasets.FermipyDatasetsReader", "api/gammapy.datasets.FluxPointsDataset", "api/gammapy.datasets.MapDataset", "api/gammapy.datasets.MapDatasetEventSampler", "api/gammapy.datasets.MapDatasetMetaData", "api/gammapy.datasets.MapDatasetOnOff", "api/gammapy.datasets.MapDatasetWeighted", "api/gammapy.datasets.OGIPDatasetReader", "api/gammapy.datasets.OGIPDatasetWriter", "api/gammapy.datasets.ObservationEventSampler", "api/gammapy.datasets.SpectrumDataset", "api/gammapy.datasets.SpectrumDatasetOnOff", "api/gammapy.datasets.apply_edisp", "api/gammapy.datasets.create_empty_map_dataset_from_irfs", "api/gammapy.datasets.create_map_dataset_from_observation", "api/gammapy.datasets.create_map_dataset_geoms", "api/gammapy.datasets.split_dataset", "api/gammapy.datasets.utils.apply_edisp", "api/gammapy.datasets.utils.create_map_dataset_from_dl4", "api/gammapy.datasets.utils.split_dataset", "api/gammapy.estimators.ASmoothMapEstimator", "api/gammapy.estimators.ESTIMATOR_REGISTRY", "api/gammapy.estimators.EnergyDependentMorphologyEstimator", "api/gammapy.estimators.Estimator", "api/gammapy.estimators.ExcessMapEstimator", "api/gammapy.estimators.FluxMaps", "api/gammapy.estimators.FluxMetaData", "api/gammapy.estimators.FluxPoints", "api/gammapy.estimators.FluxPointsEstimator", "api/gammapy.estimators.FluxProfileEstimator", "api/gammapy.estimators.ImageProfile", "api/gammapy.estimators.ImageProfileEstimator", "api/gammapy.estimators.LightCurveEstimator", "api/gammapy.estimators.ParameterEstimator", "api/gammapy.estimators.ParameterSensitivityEstimator", "api/gammapy.estimators.SensitivityEstimator", "api/gammapy.estimators.TSMapEstimator", "api/gammapy.estimators.utils.combine_flux_maps", "api/gammapy.estimators.utils.combine_significance_maps", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime", "api/gammapy.estimators.utils.compute_lightcurve_fpp", "api/gammapy.estimators.utils.compute_lightcurve_fvar", "api/gammapy.estimators.utils.estimate_exposure_reco_energy", "api/gammapy.estimators.utils.find_peaks", "api/gammapy.estimators.utils.find_peaks_in_flux_map", "api/gammapy.estimators.utils.get_combined_flux_maps", "api/gammapy.estimators.utils.get_combined_significance_maps", "api/gammapy.estimators.utils.get_rebinned_axis", "api/gammapy.estimators.utils.resample_energy_edges", "api/gammapy.irf.Background2D", "api/gammapy.irf.Background3D", "api/gammapy.irf.BackgroundIRF", "api/gammapy.irf.EDispKernel", "api/gammapy.irf.EDispKernelMap", "api/gammapy.irf.EDispMap", "api/gammapy.irf.EffectiveAreaTable2D", "api/gammapy.irf.EnergyDependentMultiGaussPSF", "api/gammapy.irf.EnergyDispersion2D", "api/gammapy.irf.FoVAlignment", "api/gammapy.irf.IRF", "api/gammapy.irf.IRFMap", "api/gammapy.irf.IRF_REGISTRY", "api/gammapy.irf.PSF3D", "api/gammapy.irf.PSFKernel", "api/gammapy.irf.PSFKing", "api/gammapy.irf.PSFMap", "api/gammapy.irf.ParametricPSF", "api/gammapy.irf.RadMax2D", "api/gammapy.irf.RecoPSFMap", "api/gammapy.irf.load_irf_dict_from_file", "api/gammapy.makers.AdaptiveRingBackgroundMaker", "api/gammapy.makers.DatasetsMaker", "api/gammapy.makers.FoVBackgroundMaker", "api/gammapy.makers.MAKER_REGISTRY", "api/gammapy.makers.Maker", "api/gammapy.makers.MapDatasetMaker", "api/gammapy.makers.PhaseBackgroundMaker", "api/gammapy.makers.ReflectedRegionsBackgroundMaker", "api/gammapy.makers.ReflectedRegionsFinder", "api/gammapy.makers.RegionsFinder", "api/gammapy.makers.RingBackgroundMaker", "api/gammapy.makers.SafeMaskMaker", "api/gammapy.makers.SpectrumDatasetMaker", "api/gammapy.makers.WobbleRegionsFinder", "api/gammapy.makers.utils.make_counts_rad_max", "api/gammapy.makers.utils.make_edisp_kernel_map", "api/gammapy.makers.utils.make_edisp_map", "api/gammapy.makers.utils.make_effective_livetime_map", "api/gammapy.makers.utils.make_map_background_irf", "api/gammapy.makers.utils.make_map_exposure_true_energy", "api/gammapy.makers.utils.make_observation_time_map", "api/gammapy.makers.utils.make_psf_map", "api/gammapy.makers.utils.make_theta_squared_table", "api/gammapy.maps.Geom", "api/gammapy.maps.HpxGeom", "api/gammapy.maps.HpxMap", "api/gammapy.maps.HpxNDMap", "api/gammapy.maps.LabelMapAxis", "api/gammapy.maps.Map", "api/gammapy.maps.MapAxes", "api/gammapy.maps.MapAxis", "api/gammapy.maps.MapCoord", "api/gammapy.maps.Maps", "api/gammapy.maps.RegionGeom", "api/gammapy.maps.RegionNDMap", "api/gammapy.maps.TimeMapAxis", "api/gammapy.maps.WcsGeom", "api/gammapy.maps.WcsMap", "api/gammapy.maps.WcsNDMap", "api/gammapy.maps.containment_radius", "api/gammapy.maps.containment_region", "api/gammapy.modeling.Covariance", "api/gammapy.modeling.CovarianceResult", "api/gammapy.modeling.Fit", "api/gammapy.modeling.FitResult", "api/gammapy.modeling.OptimizeResult", "api/gammapy.modeling.Parameter", "api/gammapy.modeling.Parameters", "api/gammapy.modeling.PriorParameter", "api/gammapy.modeling.PriorParameters", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel", "api/gammapy.modeling.models.CompoundSpectralModel", "api/gammapy.modeling.models.ConstantFluxSpatialModel", "api/gammapy.modeling.models.ConstantSpatialModel", "api/gammapy.modeling.models.ConstantSpectralModel", "api/gammapy.modeling.models.ConstantTemporalModel", "api/gammapy.modeling.models.DatasetModels", "api/gammapy.modeling.models.DiskSpatialModel", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel", "api/gammapy.modeling.models.EBL_DATA_BUILTIN", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", "api/gammapy.modeling.models.ExpDecayTemporalModel", "api/gammapy.modeling.models.FoVBackgroundModel", "api/gammapy.modeling.models.GaussianPrior", "api/gammapy.modeling.models.GaussianSpatialModel", "api/gammapy.modeling.models.GaussianSpectralModel", "api/gammapy.modeling.models.GaussianTemporalModel", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel", "api/gammapy.modeling.models.LinearTemporalModel", "api/gammapy.modeling.models.LogParabolaNormSpectralModel", "api/gammapy.modeling.models.LogParabolaSpectralModel", "api/gammapy.modeling.models.LogUniformPrior", "api/gammapy.modeling.models.MODEL_REGISTRY", "api/gammapy.modeling.models.MeyerCrabSpectralModel", "api/gammapy.modeling.models.Model", "api/gammapy.modeling.models.ModelBase", "api/gammapy.modeling.models.Models", "api/gammapy.modeling.models.NaimaSpectralModel", "api/gammapy.modeling.models.PiecewiseNormSpatialModel", "api/gammapy.modeling.models.PiecewiseNormSpectralModel", "api/gammapy.modeling.models.PointSpatialModel", "api/gammapy.modeling.models.PowerLaw2SpectralModel", "api/gammapy.modeling.models.PowerLawNormSpectralModel", "api/gammapy.modeling.models.PowerLawSpectralModel", "api/gammapy.modeling.models.PowerLawTemporalModel", "api/gammapy.modeling.models.Prior", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", "api/gammapy.modeling.models.ScaleSpectralModel", "api/gammapy.modeling.models.Shell2SpatialModel", "api/gammapy.modeling.models.ShellSpatialModel", "api/gammapy.modeling.models.SineTemporalModel", "api/gammapy.modeling.models.SkyModel", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", "api/gammapy.modeling.models.SpatialModel", "api/gammapy.modeling.models.SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", "api/gammapy.modeling.models.TemplateNDSpatialModel", "api/gammapy.modeling.models.TemplateNDSpectralModel", "api/gammapy.modeling.models.TemplateNPredModel", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel", "api/gammapy.modeling.models.TemplateSpatialModel", "api/gammapy.modeling.models.TemplateSpectralModel", "api/gammapy.modeling.models.TemporalModel", "api/gammapy.modeling.models.UniformPrior", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model", "api/gammapy.modeling.models.create_crab_spectral_model", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model", "api/gammapy.modeling.models.integrate_spectrum", "api/gammapy.modeling.models.read_hermes_cube", "api/gammapy.modeling.models.scale_plot_flux", "api/gammapy.modeling.models.utils.read_hermes_cube", "api/gammapy.modeling.select_nested_models", "api/gammapy.modeling.stat_profile_ul_scipy", "api/gammapy.stats.CashCountsStatistic", "api/gammapy.stats.TimmerKonig_lightcurve_simulator", "api/gammapy.stats.WStatCountsStatistic", "api/gammapy.stats.cash", "api/gammapy.stats.cash_sum_cython", "api/gammapy.stats.compute_chisq", "api/gammapy.stats.compute_flux_doubling", "api/gammapy.stats.compute_fpp", "api/gammapy.stats.compute_fvar", "api/gammapy.stats.cstat", "api/gammapy.stats.discrete_correlation", "api/gammapy.stats.f_cash_root_cython", "api/gammapy.stats.get_wstat_gof_terms", "api/gammapy.stats.get_wstat_mu_bkg", "api/gammapy.stats.norm_bounds_cython", "api/gammapy.stats.structure_function", "api/gammapy.stats.weighted_cash_sum_cython", "api/gammapy.stats.wstat", "api/gammapy.utils.cluster.hierarchical_clustering", "api/gammapy.utils.cluster.standard_scaler", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", "api/gammapy.utils.coordinates.cartesian", "api/gammapy.utils.coordinates.fov_to_sky", "api/gammapy.utils.coordinates.galactic", "api/gammapy.utils.coordinates.motion_since_birth", "api/gammapy.utils.coordinates.polar", "api/gammapy.utils.coordinates.sky_to_fov", "api/gammapy.utils.coordinates.velocity_glon_glat", "api/gammapy.utils.fits.HDULocation", "api/gammapy.utils.fits.LazyFitsData", "api/gammapy.utils.fits.earth_location_from_dict", "api/gammapy.utils.integrate.trapz_loglog", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator", "api/gammapy.utils.interpolation.interpolate_profile", "api/gammapy.utils.interpolation.interpolation_scale", "api/gammapy.utils.parallel.BACKEND_DEFAULT", "api/gammapy.utils.parallel.METHOD_DEFAULT", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", "api/gammapy.utils.parallel.N_JOBS_DEFAULT", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT", "api/gammapy.utils.parallel.multiprocessing_manager", "api/gammapy.utils.parallel.run_multiprocessing", "api/gammapy.utils.random.InverseCDFSampler", "api/gammapy.utils.random.draw", "api/gammapy.utils.random.get_random_state", "api/gammapy.utils.random.normalize", "api/gammapy.utils.random.pdf", "api/gammapy.utils.random.sample_powerlaw", "api/gammapy.utils.random.sample_sphere", "api/gammapy.utils.random.sample_sphere_distance", "api/gammapy.utils.random.sample_times", "api/gammapy.utils.regions.compound_region_to_regions", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", "api/gammapy.utils.regions.region_to_frame", "api/gammapy.utils.regions.regions_to_compound_region", "api/gammapy.utils.scripts.from_yaml", "api/gammapy.utils.scripts.get_images_paths", "api/gammapy.utils.scripts.make_path", "api/gammapy.utils.scripts.read_yaml", "api/gammapy.utils.scripts.recursive_merge_dicts", "api/gammapy.utils.scripts.to_yaml", "api/gammapy.utils.scripts.write_yaml", "api/gammapy.utils.table.hstack_columns", "api/gammapy.utils.table.table_row_to_dict", "api/gammapy.utils.table.table_standardise_units_copy", "api/gammapy.utils.table.table_standardise_units_inplace", "api/gammapy.utils.testing.Checker", "api/gammapy.utils.testing.assert_quantity_allclose", "api/gammapy.utils.testing.assert_skycoord_allclose", "api/gammapy.utils.testing.assert_time_allclose", "api/gammapy.utils.testing.mpl_plot_check", "api/gammapy.utils.testing.requires_data", "api/gammapy.utils.testing.requires_dependency", "api/gammapy.utils.time.absolute_time", "api/gammapy.utils.time.time_ref_from_dict", "api/gammapy.utils.time.time_ref_to_dict", "api/gammapy.utils.time.time_relative_to_ref", "api/gammapy.utils.units.standardise_unit", "api/gammapy.utils.units.unit_from_fits_image_hdu", "api/gammapy.visualization.MapPanelPlotter", "api/gammapy.visualization.add_colorbar", "api/gammapy.visualization.annotate_heatmap", "api/gammapy.visualization.colormap_hess", "api/gammapy.visualization.colormap_milagro", "api/gammapy.visualization.plot_contour_line", "api/gammapy.visualization.plot_distribution", "api/gammapy.visualization.plot_heatmap", "api/gammapy.visualization.plot_map_rgb", "api/gammapy.visualization.plot_npred_signal", "api/gammapy.visualization.plot_spectrum_datasets_off_regions", "api/gammapy.visualization.plot_theta_squared_table", "development/dependencies", "development/dev_howto", "development/doc_howto", "development/index", "development/intro", "development/pigs/index", "development/pigs/pig-001", "development/pigs/pig-002", "development/pigs/pig-003", "development/pigs/pig-004", "development/pigs/pig-005", "development/pigs/pig-006", "development/pigs/pig-007", "development/pigs/pig-008", "development/pigs/pig-009", "development/pigs/pig-010", "development/pigs/pig-011", "development/pigs/pig-012", "development/pigs/pig-013", "development/pigs/pig-014", "development/pigs/pig-016", "development/pigs/pig-018", "development/pigs/pig-019", "development/pigs/pig-020", "development/pigs/pig-021", "development/pigs/pig-022", "development/pigs/pig-023", "development/pigs/pig-024", "development/pigs/pig-025", "development/pigs/pig-026", "development/pigs/pig-027", "development/release", "development/setup", "getting-started/environments", "getting-started/index", "getting-started/install", "getting-started/quickstart", "getting-started/troubleshooting", "getting-started/usage", "index", "release-notes/index", "release-notes/v0.1", "release-notes/v0.10", "release-notes/v0.11", "release-notes/v0.12", "release-notes/v0.13", "release-notes/v0.14", "release-notes/v0.15", "release-notes/v0.16", "release-notes/v0.17", "release-notes/v0.18", "release-notes/v0.18.1", "release-notes/v0.18.2", "release-notes/v0.19", "release-notes/v0.2", "release-notes/v0.20", "release-notes/v0.20.1", "release-notes/v0.3", "release-notes/v0.4", "release-notes/v0.5", "release-notes/v0.6", "release-notes/v0.7", "release-notes/v0.8", "release-notes/v0.9", "release-notes/v1.0", "release-notes/v1.0.1", "release-notes/v1.0.2", "release-notes/v1.1", "release-notes/v1.2", "release-notes/v1.3", "release-notes/v2.0", "sg_execution_times", "tutorials/analysis-1d/cta_sensitivity", "tutorials/analysis-1d/ebl", "tutorials/analysis-1d/extended_source_spectral_analysis", "tutorials/analysis-1d/sed_fitting", "tutorials/analysis-1d/sg_execution_times", "tutorials/analysis-1d/spectral_analysis", "tutorials/analysis-1d/spectral_analysis_hli", "tutorials/analysis-1d/spectral_analysis_rad_max", "tutorials/analysis-1d/spectrum_simulation", "tutorials/analysis-2d/detect", "tutorials/analysis-2d/modeling_2D", "tutorials/analysis-2d/ring_background", "tutorials/analysis-2d/sg_execution_times", "tutorials/analysis-3d/analysis_3d", "tutorials/analysis-3d/analysis_mwl", "tutorials/analysis-3d/cta_data_analysis", "tutorials/analysis-3d/energy_dependent_estimation", "tutorials/analysis-3d/event_sampling", "tutorials/analysis-3d/event_sampling_nrg_depend_models", "tutorials/analysis-3d/flux_profiles", "tutorials/analysis-3d/sg_execution_times", "tutorials/analysis-3d/simulate_3d", "tutorials/analysis-time/light_curve", "tutorials/analysis-time/light_curve_flare", "tutorials/analysis-time/light_curve_simulation", "tutorials/analysis-time/pulsar_analysis", "tutorials/analysis-time/sg_execution_times", "tutorials/analysis-time/time_resolved_spectroscopy", "tutorials/analysis-time/variability_estimation", "tutorials/api/astro_dark_matter", "tutorials/api/catalog", "tutorials/api/datasets", "tutorials/api/estimators", "tutorials/api/fitting", "tutorials/api/irfs", "tutorials/api/makers", "tutorials/api/maps", "tutorials/api/mask_maps", "tutorials/api/model_management", "tutorials/api/models", "tutorials/api/observation_clustering", "tutorials/api/priors", "tutorials/api/sg_execution_times", "tutorials/data/cta", "tutorials/data/fermi_lat", "tutorials/data/hawc", "tutorials/data/hess", "tutorials/data/sg_execution_times", "tutorials/index", "tutorials/scripts/sg_execution_times", "tutorials/scripts/survey_map", "tutorials/sg_execution_times", "tutorials/starting/analysis_1", "tutorials/starting/analysis_2", "tutorials/starting/overview", "tutorials/starting/sg_execution_times", "user-guide/astro/darkmatter/index", "user-guide/astro/index", "user-guide/astro/population/index", "user-guide/astro/source/index", "user-guide/astro/source/pulsar", "user-guide/astro/source/pwn", "user-guide/astro/source/snr", "user-guide/catalog", "user-guide/datasets/index", "user-guide/dl3", "user-guide/estimators", "user-guide/hli", "user-guide/howto", "user-guide/index", "user-guide/irf/aeff", "user-guide/irf/bkg", "user-guide/irf/edisp", "user-guide/irf/index", "user-guide/irf/psf", "user-guide/makers/fov", "user-guide/makers/index", "user-guide/makers/reflected", "user-guide/makers/ring", "user-guide/maps/hpxmap", "user-guide/maps/index", "user-guide/maps/regionmap", "user-guide/model-gallery/index", "user-guide/model-gallery/sg_execution_times", "user-guide/model-gallery/spatial/plot_constant", "user-guide/model-gallery/spatial/plot_disk", "user-guide/model-gallery/spatial/plot_gauss", "user-guide/model-gallery/spatial/plot_gen_gauss", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial", "user-guide/model-gallery/spatial/plot_point", "user-guide/model-gallery/spatial/plot_shell", "user-guide/model-gallery/spatial/plot_shell2", "user-guide/model-gallery/spatial/plot_template", "user-guide/model-gallery/spatial/sg_execution_times", "user-guide/model-gallery/spectral/plot_absorbed", "user-guide/model-gallery/spectral/plot_broken_powerlaw", "user-guide/model-gallery/spectral/plot_compound", "user-guide/model-gallery/spectral/plot_constant_spectral", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_gauss_spectral", "user-guide/model-gallery/spectral/plot_logparabola", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral", "user-guide/model-gallery/spectral/plot_naima", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral", "user-guide/model-gallery/spectral/plot_powerlaw", "user-guide/model-gallery/spectral/plot_powerlaw2", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1", "user-guide/model-gallery/spectral/plot_template_spectral", "user-guide/model-gallery/spectral/sg_execution_times", "user-guide/model-gallery/temporal/plot_constant_temporal", "user-guide/model-gallery/temporal/plot_expdecay_temporal", "user-guide/model-gallery/temporal/plot_gaussian_temporal", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal", "user-guide/model-gallery/temporal/plot_linear_temporal", "user-guide/model-gallery/temporal/plot_powerlaw_temporal", "user-guide/model-gallery/temporal/plot_sine_temporal", "user-guide/model-gallery/temporal/plot_template_phase_temporal", "user-guide/model-gallery/temporal/plot_template_temporal", "user-guide/model-gallery/temporal/sg_execution_times", "user-guide/modeling", "user-guide/package", "user-guide/references", "user-guide/scripts/index", "user-guide/stats/fit_statistics", "user-guide/stats/index", "user-guide/stats/wstat_derivation", "user-guide/utils", "user-guide/visualization/index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api-reference/analysis.rst", "api-reference/astro.rst", "api-reference/catalog.rst", "api-reference/data.rst", "api-reference/datasets.rst", "api-reference/estimators.rst", "api-reference/index.rst", "api-reference/irf.rst", "api-reference/makers.rst", "api-reference/maps.rst", "api-reference/modeling.rst", "api-reference/scripts.rst", "api-reference/stats.rst", "api-reference/utils.rst", "api-reference/visualization.rst", "api/gammapy.analysis.Analysis.rst", "api/gammapy.analysis.AnalysisConfig.rst", "api/gammapy.astro.darkmatter.BurkertProfile.rst", "api/gammapy.astro.darkmatter.DMProfile.rst", "api/gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.rst", "api/gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.rst", "api/gammapy.astro.darkmatter.EinastoProfile.rst", "api/gammapy.astro.darkmatter.IsothermalProfile.rst", "api/gammapy.astro.darkmatter.JFactory.rst", "api/gammapy.astro.darkmatter.MooreProfile.rst", "api/gammapy.astro.darkmatter.NFWProfile.rst", "api/gammapy.astro.darkmatter.PrimaryFlux.rst", "api/gammapy.astro.darkmatter.ZhaoProfile.rst", "api/gammapy.astro.population.CaseBattacharya1998.rst", "api/gammapy.astro.population.Exponential.rst", "api/gammapy.astro.population.FaucherKaspi2006.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rst", "api/gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rst", "api/gammapy.astro.population.FaucherSpiral.rst", "api/gammapy.astro.population.LogSpiral.rst", "api/gammapy.astro.population.Lorimer2006.rst", "api/gammapy.astro.population.Paczynski1990.rst", "api/gammapy.astro.population.Paczynski1990Velocity.rst", "api/gammapy.astro.population.ValleeSpiral.rst", "api/gammapy.astro.population.YusifovKucuk2004.rst", "api/gammapy.astro.population.YusifovKucuk2004B.rst", "api/gammapy.astro.population.add_observed_parameters.rst", "api/gammapy.astro.population.add_pulsar_parameters.rst", "api/gammapy.astro.population.add_pwn_parameters.rst", "api/gammapy.astro.population.add_snr_parameters.rst", "api/gammapy.astro.population.make_base_catalog_galactic.rst", "api/gammapy.astro.population.make_catalog_random_positions_cube.rst", "api/gammapy.astro.population.make_catalog_random_positions_sphere.rst", "api/gammapy.astro.population.radial_distributions.rst", "api/gammapy.astro.population.velocity_distributions.rst", "api/gammapy.astro.source.PWN.rst", "api/gammapy.astro.source.Pulsar.rst", "api/gammapy.astro.source.SNR.rst", "api/gammapy.astro.source.SNRTrueloveMcKee.rst", "api/gammapy.astro.source.SimplePulsar.rst", "api/gammapy.catalog.CATALOG_REGISTRY.rst", "api/gammapy.catalog.SourceCatalog.rst", "api/gammapy.catalog.SourceCatalog1LHAASO.rst", "api/gammapy.catalog.SourceCatalog2FHL.rst", "api/gammapy.catalog.SourceCatalog2HWC.rst", "api/gammapy.catalog.SourceCatalog2PC.rst", "api/gammapy.catalog.SourceCatalog3FGL.rst", "api/gammapy.catalog.SourceCatalog3FHL.rst", "api/gammapy.catalog.SourceCatalog3HWC.rst", "api/gammapy.catalog.SourceCatalog3PC.rst", "api/gammapy.catalog.SourceCatalog4FGL.rst", "api/gammapy.catalog.SourceCatalogGammaCat.rst", "api/gammapy.catalog.SourceCatalogHGPS.rst", "api/gammapy.catalog.SourceCatalogLargeScaleHGPS.rst", "api/gammapy.catalog.SourceCatalogObject.rst", "api/gammapy.catalog.SourceCatalogObject1LHAASO.rst", "api/gammapy.catalog.SourceCatalogObject2FHL.rst", "api/gammapy.catalog.SourceCatalogObject2HWC.rst", "api/gammapy.catalog.SourceCatalogObject2PC.rst", "api/gammapy.catalog.SourceCatalogObject3FGL.rst", "api/gammapy.catalog.SourceCatalogObject3FHL.rst", "api/gammapy.catalog.SourceCatalogObject3HWC.rst", "api/gammapy.catalog.SourceCatalogObject3PC.rst", "api/gammapy.catalog.SourceCatalogObject4FGL.rst", "api/gammapy.catalog.SourceCatalogObjectGammaCat.rst", "api/gammapy.catalog.SourceCatalogObjectHGPS.rst", "api/gammapy.catalog.SourceCatalogObjectHGPSComponent.rst", "api/gammapy.data.DataStore.rst", "api/gammapy.data.EventList.rst", "api/gammapy.data.EventListMetaData.rst", "api/gammapy.data.FixedPointingInfo.rst", "api/gammapy.data.GTI.rst", "api/gammapy.data.HDUIndexTable.rst", "api/gammapy.data.Observation.rst", "api/gammapy.data.ObservationFilter.rst", "api/gammapy.data.ObservationMetaData.rst", "api/gammapy.data.ObservationTable.rst", "api/gammapy.data.Observations.rst", "api/gammapy.data.ObservationsEventsSampler.rst", "api/gammapy.data.PointingInfo.rst", "api/gammapy.data.PointingMode.rst", "api/gammapy.data.get_irfs_features.rst", "api/gammapy.data.observatory_locations.rst", "api/gammapy.datasets.DATASET_REGISTRY.rst", "api/gammapy.datasets.Dataset.rst", "api/gammapy.datasets.Datasets.rst", "api/gammapy.datasets.FermipyDatasetsReader.rst", "api/gammapy.datasets.FluxPointsDataset.rst", "api/gammapy.datasets.MapDataset.rst", "api/gammapy.datasets.MapDatasetEventSampler.rst", "api/gammapy.datasets.MapDatasetMetaData.rst", "api/gammapy.datasets.MapDatasetOnOff.rst", "api/gammapy.datasets.MapDatasetWeighted.rst", "api/gammapy.datasets.OGIPDatasetReader.rst", "api/gammapy.datasets.OGIPDatasetWriter.rst", "api/gammapy.datasets.ObservationEventSampler.rst", "api/gammapy.datasets.SpectrumDataset.rst", "api/gammapy.datasets.SpectrumDatasetOnOff.rst", "api/gammapy.datasets.apply_edisp.rst", "api/gammapy.datasets.create_empty_map_dataset_from_irfs.rst", "api/gammapy.datasets.create_map_dataset_from_observation.rst", "api/gammapy.datasets.create_map_dataset_geoms.rst", "api/gammapy.datasets.split_dataset.rst", "api/gammapy.datasets.utils.apply_edisp.rst", "api/gammapy.datasets.utils.create_map_dataset_from_dl4.rst", "api/gammapy.datasets.utils.split_dataset.rst", "api/gammapy.estimators.ASmoothMapEstimator.rst", "api/gammapy.estimators.ESTIMATOR_REGISTRY.rst", "api/gammapy.estimators.EnergyDependentMorphologyEstimator.rst", "api/gammapy.estimators.Estimator.rst", "api/gammapy.estimators.ExcessMapEstimator.rst", "api/gammapy.estimators.FluxMaps.rst", "api/gammapy.estimators.FluxMetaData.rst", "api/gammapy.estimators.FluxPoints.rst", "api/gammapy.estimators.FluxPointsEstimator.rst", "api/gammapy.estimators.FluxProfileEstimator.rst", "api/gammapy.estimators.ImageProfile.rst", "api/gammapy.estimators.ImageProfileEstimator.rst", "api/gammapy.estimators.LightCurveEstimator.rst", "api/gammapy.estimators.ParameterEstimator.rst", "api/gammapy.estimators.ParameterSensitivityEstimator.rst", "api/gammapy.estimators.SensitivityEstimator.rst", "api/gammapy.estimators.TSMapEstimator.rst", "api/gammapy.estimators.utils.combine_flux_maps.rst", "api/gammapy.estimators.utils.combine_significance_maps.rst", "api/gammapy.estimators.utils.compute_lightcurve_discrete_correlation.rst", "api/gammapy.estimators.utils.compute_lightcurve_doublingtime.rst", "api/gammapy.estimators.utils.compute_lightcurve_fpp.rst", "api/gammapy.estimators.utils.compute_lightcurve_fvar.rst", "api/gammapy.estimators.utils.estimate_exposure_reco_energy.rst", "api/gammapy.estimators.utils.find_peaks.rst", "api/gammapy.estimators.utils.find_peaks_in_flux_map.rst", "api/gammapy.estimators.utils.get_combined_flux_maps.rst", "api/gammapy.estimators.utils.get_combined_significance_maps.rst", "api/gammapy.estimators.utils.get_rebinned_axis.rst", "api/gammapy.estimators.utils.resample_energy_edges.rst", "api/gammapy.irf.Background2D.rst", "api/gammapy.irf.Background3D.rst", "api/gammapy.irf.BackgroundIRF.rst", "api/gammapy.irf.EDispKernel.rst", "api/gammapy.irf.EDispKernelMap.rst", "api/gammapy.irf.EDispMap.rst", "api/gammapy.irf.EffectiveAreaTable2D.rst", "api/gammapy.irf.EnergyDependentMultiGaussPSF.rst", "api/gammapy.irf.EnergyDispersion2D.rst", "api/gammapy.irf.FoVAlignment.rst", "api/gammapy.irf.IRF.rst", "api/gammapy.irf.IRFMap.rst", "api/gammapy.irf.IRF_REGISTRY.rst", "api/gammapy.irf.PSF3D.rst", "api/gammapy.irf.PSFKernel.rst", "api/gammapy.irf.PSFKing.rst", "api/gammapy.irf.PSFMap.rst", "api/gammapy.irf.ParametricPSF.rst", "api/gammapy.irf.RadMax2D.rst", "api/gammapy.irf.RecoPSFMap.rst", "api/gammapy.irf.load_irf_dict_from_file.rst", "api/gammapy.makers.AdaptiveRingBackgroundMaker.rst", "api/gammapy.makers.DatasetsMaker.rst", "api/gammapy.makers.FoVBackgroundMaker.rst", "api/gammapy.makers.MAKER_REGISTRY.rst", "api/gammapy.makers.Maker.rst", "api/gammapy.makers.MapDatasetMaker.rst", "api/gammapy.makers.PhaseBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsBackgroundMaker.rst", "api/gammapy.makers.ReflectedRegionsFinder.rst", "api/gammapy.makers.RegionsFinder.rst", "api/gammapy.makers.RingBackgroundMaker.rst", "api/gammapy.makers.SafeMaskMaker.rst", "api/gammapy.makers.SpectrumDatasetMaker.rst", "api/gammapy.makers.WobbleRegionsFinder.rst", "api/gammapy.makers.utils.make_counts_rad_max.rst", "api/gammapy.makers.utils.make_edisp_kernel_map.rst", "api/gammapy.makers.utils.make_edisp_map.rst", "api/gammapy.makers.utils.make_effective_livetime_map.rst", "api/gammapy.makers.utils.make_map_background_irf.rst", "api/gammapy.makers.utils.make_map_exposure_true_energy.rst", "api/gammapy.makers.utils.make_observation_time_map.rst", "api/gammapy.makers.utils.make_psf_map.rst", "api/gammapy.makers.utils.make_theta_squared_table.rst", "api/gammapy.maps.Geom.rst", "api/gammapy.maps.HpxGeom.rst", "api/gammapy.maps.HpxMap.rst", "api/gammapy.maps.HpxNDMap.rst", "api/gammapy.maps.LabelMapAxis.rst", "api/gammapy.maps.Map.rst", "api/gammapy.maps.MapAxes.rst", "api/gammapy.maps.MapAxis.rst", "api/gammapy.maps.MapCoord.rst", "api/gammapy.maps.Maps.rst", "api/gammapy.maps.RegionGeom.rst", "api/gammapy.maps.RegionNDMap.rst", "api/gammapy.maps.TimeMapAxis.rst", "api/gammapy.maps.WcsGeom.rst", "api/gammapy.maps.WcsMap.rst", "api/gammapy.maps.WcsNDMap.rst", "api/gammapy.maps.containment_radius.rst", "api/gammapy.maps.containment_region.rst", "api/gammapy.modeling.Covariance.rst", "api/gammapy.modeling.CovarianceResult.rst", "api/gammapy.modeling.Fit.rst", "api/gammapy.modeling.FitResult.rst", "api/gammapy.modeling.OptimizeResult.rst", "api/gammapy.modeling.Parameter.rst", "api/gammapy.modeling.Parameters.rst", "api/gammapy.modeling.PriorParameter.rst", "api/gammapy.modeling.PriorParameters.rst", "api/gammapy.modeling.models.BrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.CompoundSpectralModel.rst", "api/gammapy.modeling.models.ConstantFluxSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpatialModel.rst", "api/gammapy.modeling.models.ConstantSpectralModel.rst", "api/gammapy.modeling.models.ConstantTemporalModel.rst", "api/gammapy.modeling.models.DatasetModels.rst", "api/gammapy.modeling.models.DiskSpatialModel.rst", "api/gammapy.modeling.models.EBLAbsorptionNormSpectralModel.rst", "api/gammapy.modeling.models.EBL_DATA_BUILTIN.rst", "api/gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.rst", "api/gammapy.modeling.models.ExpDecayTemporalModel.rst", "api/gammapy.modeling.models.FoVBackgroundModel.rst", "api/gammapy.modeling.models.GaussianPrior.rst", "api/gammapy.modeling.models.GaussianSpatialModel.rst", "api/gammapy.modeling.models.GaussianSpectralModel.rst", "api/gammapy.modeling.models.GaussianTemporalModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianSpatialModel.rst", "api/gammapy.modeling.models.GeneralizedGaussianTemporalModel.rst", "api/gammapy.modeling.models.LightCurveTemplateTemporalModel.rst", "api/gammapy.modeling.models.LinearTemporalModel.rst", "api/gammapy.modeling.models.LogParabolaNormSpectralModel.rst", "api/gammapy.modeling.models.LogParabolaSpectralModel.rst", "api/gammapy.modeling.models.LogUniformPrior.rst", "api/gammapy.modeling.models.MODEL_REGISTRY.rst", "api/gammapy.modeling.models.MeyerCrabSpectralModel.rst", "api/gammapy.modeling.models.Model.rst", "api/gammapy.modeling.models.ModelBase.rst", "api/gammapy.modeling.models.Models.rst", "api/gammapy.modeling.models.NaimaSpectralModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpatialModel.rst", "api/gammapy.modeling.models.PiecewiseNormSpectralModel.rst", "api/gammapy.modeling.models.PointSpatialModel.rst", "api/gammapy.modeling.models.PowerLaw2SpectralModel.rst", "api/gammapy.modeling.models.PowerLawNormSpectralModel.rst", "api/gammapy.modeling.models.PowerLawSpectralModel.rst", "api/gammapy.modeling.models.PowerLawTemporalModel.rst", "api/gammapy.modeling.models.Prior.rst", "api/gammapy.modeling.models.SPATIAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.ScaleSpectralModel.rst", "api/gammapy.modeling.models.Shell2SpatialModel.rst", "api/gammapy.modeling.models.ShellSpatialModel.rst", "api/gammapy.modeling.models.SineTemporalModel.rst", "api/gammapy.modeling.models.SkyModel.rst", "api/gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.rst", "api/gammapy.modeling.models.SpatialModel.rst", "api/gammapy.modeling.models.SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.rst", "api/gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.rst", "api/gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY.rst", "api/gammapy.modeling.models.TemplateNDSpatialModel.rst", "api/gammapy.modeling.models.TemplateNDSpectralModel.rst", "api/gammapy.modeling.models.TemplateNPredModel.rst", "api/gammapy.modeling.models.TemplatePhaseCurveTemporalModel.rst", "api/gammapy.modeling.models.TemplateSpatialModel.rst", "api/gammapy.modeling.models.TemplateSpectralModel.rst", "api/gammapy.modeling.models.TemporalModel.rst", "api/gammapy.modeling.models.UniformPrior.rst", "api/gammapy.modeling.models.create_cosmic_ray_spectral_model.rst", "api/gammapy.modeling.models.create_crab_spectral_model.rst", "api/gammapy.modeling.models.create_fermi_isotropic_diffuse_model.rst", "api/gammapy.modeling.models.integrate_spectrum.rst", "api/gammapy.modeling.models.read_hermes_cube.rst", "api/gammapy.modeling.models.scale_plot_flux.rst", "api/gammapy.modeling.models.utils.read_hermes_cube.rst", "api/gammapy.modeling.select_nested_models.rst", "api/gammapy.modeling.stat_profile_ul_scipy.rst", "api/gammapy.stats.CashCountsStatistic.rst", "api/gammapy.stats.TimmerKonig_lightcurve_simulator.rst", "api/gammapy.stats.WStatCountsStatistic.rst", "api/gammapy.stats.cash.rst", "api/gammapy.stats.cash_sum_cython.rst", "api/gammapy.stats.compute_chisq.rst", "api/gammapy.stats.compute_flux_doubling.rst", "api/gammapy.stats.compute_fpp.rst", "api/gammapy.stats.compute_fvar.rst", "api/gammapy.stats.cstat.rst", "api/gammapy.stats.discrete_correlation.rst", "api/gammapy.stats.f_cash_root_cython.rst", "api/gammapy.stats.get_wstat_gof_terms.rst", "api/gammapy.stats.get_wstat_mu_bkg.rst", "api/gammapy.stats.norm_bounds_cython.rst", "api/gammapy.stats.structure_function.rst", "api/gammapy.stats.weighted_cash_sum_cython.rst", "api/gammapy.stats.wstat.rst", "api/gammapy.utils.cluster.hierarchical_clustering.rst", "api/gammapy.utils.cluster.standard_scaler.rst", "api/gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER.rst", "api/gammapy.utils.coordinates.cartesian.rst", "api/gammapy.utils.coordinates.fov_to_sky.rst", "api/gammapy.utils.coordinates.galactic.rst", "api/gammapy.utils.coordinates.motion_since_birth.rst", "api/gammapy.utils.coordinates.polar.rst", "api/gammapy.utils.coordinates.sky_to_fov.rst", "api/gammapy.utils.coordinates.velocity_glon_glat.rst", "api/gammapy.utils.fits.HDULocation.rst", "api/gammapy.utils.fits.LazyFitsData.rst", "api/gammapy.utils.fits.earth_location_from_dict.rst", "api/gammapy.utils.integrate.trapz_loglog.rst", "api/gammapy.utils.interpolation.ScaledRegularGridInterpolator.rst", "api/gammapy.utils.interpolation.interpolate_profile.rst", "api/gammapy.utils.interpolation.interpolation_scale.rst", "api/gammapy.utils.parallel.BACKEND_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_DEFAULT.rst", "api/gammapy.utils.parallel.METHOD_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.N_JOBS_DEFAULT.rst", "api/gammapy.utils.parallel.POOL_KWARGS_DEFAULT.rst", "api/gammapy.utils.parallel.multiprocessing_manager.rst", "api/gammapy.utils.parallel.run_multiprocessing.rst", "api/gammapy.utils.random.InverseCDFSampler.rst", "api/gammapy.utils.random.draw.rst", "api/gammapy.utils.random.get_random_state.rst", "api/gammapy.utils.random.normalize.rst", "api/gammapy.utils.random.pdf.rst", "api/gammapy.utils.random.sample_powerlaw.rst", "api/gammapy.utils.random.sample_sphere.rst", "api/gammapy.utils.random.sample_sphere_distance.rst", "api/gammapy.utils.random.sample_times.rst", "api/gammapy.utils.regions.compound_region_to_regions.rst", "api/gammapy.utils.regions.make_concentric_annulus_sky_regions.rst", "api/gammapy.utils.regions.make_orthogonal_rectangle_sky_regions.rst", "api/gammapy.utils.regions.region_to_frame.rst", "api/gammapy.utils.regions.regions_to_compound_region.rst", "api/gammapy.utils.scripts.from_yaml.rst", "api/gammapy.utils.scripts.get_images_paths.rst", "api/gammapy.utils.scripts.make_path.rst", "api/gammapy.utils.scripts.read_yaml.rst", "api/gammapy.utils.scripts.recursive_merge_dicts.rst", "api/gammapy.utils.scripts.to_yaml.rst", "api/gammapy.utils.scripts.write_yaml.rst", "api/gammapy.utils.table.hstack_columns.rst", "api/gammapy.utils.table.table_row_to_dict.rst", "api/gammapy.utils.table.table_standardise_units_copy.rst", "api/gammapy.utils.table.table_standardise_units_inplace.rst", "api/gammapy.utils.testing.Checker.rst", "api/gammapy.utils.testing.assert_quantity_allclose.rst", "api/gammapy.utils.testing.assert_skycoord_allclose.rst", "api/gammapy.utils.testing.assert_time_allclose.rst", "api/gammapy.utils.testing.mpl_plot_check.rst", "api/gammapy.utils.testing.requires_data.rst", "api/gammapy.utils.testing.requires_dependency.rst", "api/gammapy.utils.time.absolute_time.rst", "api/gammapy.utils.time.time_ref_from_dict.rst", "api/gammapy.utils.time.time_ref_to_dict.rst", "api/gammapy.utils.time.time_relative_to_ref.rst", "api/gammapy.utils.units.standardise_unit.rst", "api/gammapy.utils.units.unit_from_fits_image_hdu.rst", "api/gammapy.visualization.MapPanelPlotter.rst", "api/gammapy.visualization.add_colorbar.rst", "api/gammapy.visualization.annotate_heatmap.rst", "api/gammapy.visualization.colormap_hess.rst", "api/gammapy.visualization.colormap_milagro.rst", "api/gammapy.visualization.plot_contour_line.rst", "api/gammapy.visualization.plot_distribution.rst", "api/gammapy.visualization.plot_heatmap.rst", "api/gammapy.visualization.plot_map_rgb.rst", "api/gammapy.visualization.plot_npred_signal.rst", "api/gammapy.visualization.plot_spectrum_datasets_off_regions.rst", "api/gammapy.visualization.plot_theta_squared_table.rst", "development/dependencies.rst", "development/dev_howto.rst", "development/doc_howto.rst", "development/index.rst", "development/intro.rst", "development/pigs/index.rst", "development/pigs/pig-001.rst", "development/pigs/pig-002.rst", "development/pigs/pig-003.rst", "development/pigs/pig-004.rst", "development/pigs/pig-005.rst", "development/pigs/pig-006.rst", "development/pigs/pig-007.rst", "development/pigs/pig-008.rst", "development/pigs/pig-009.rst", "development/pigs/pig-010.rst", "development/pigs/pig-011.rst", "development/pigs/pig-012.rst", "development/pigs/pig-013.rst", "development/pigs/pig-014.rst", "development/pigs/pig-016.rst", "development/pigs/pig-018.rst", "development/pigs/pig-019.rst", "development/pigs/pig-020.rst", "development/pigs/pig-021.rst", "development/pigs/pig-022.rst", "development/pigs/pig-023.rst", "development/pigs/pig-024.rst", "development/pigs/pig-025.rst", "development/pigs/pig-026.rst", "development/pigs/pig-027.rst", "development/release.rst", "development/setup.rst", "getting-started/environments.rst", "getting-started/index.rst", "getting-started/install.rst", "getting-started/quickstart.rst", "getting-started/troubleshooting.rst", "getting-started/usage.rst", "index.rst", "release-notes/index.rst", "release-notes/v0.1.rst", "release-notes/v0.10.rst", "release-notes/v0.11.rst", "release-notes/v0.12.rst", "release-notes/v0.13.rst", "release-notes/v0.14.rst", "release-notes/v0.15.rst", "release-notes/v0.16.rst", "release-notes/v0.17.rst", "release-notes/v0.18.rst", "release-notes/v0.18.1.rst", "release-notes/v0.18.2.rst", "release-notes/v0.19.rst", "release-notes/v0.2.rst", "release-notes/v0.20.rst", "release-notes/v0.20.1.rst", "release-notes/v0.3.rst", "release-notes/v0.4.rst", "release-notes/v0.5.rst", "release-notes/v0.6.rst", "release-notes/v0.7.rst", "release-notes/v0.8.rst", "release-notes/v0.9.rst", "release-notes/v1.0.rst", "release-notes/v1.0.1.rst", "release-notes/v1.0.2.rst", "release-notes/v1.1.rst", "release-notes/v1.2.rst", "release-notes/v1.3.rst", "release-notes/v2.0.rst", "sg_execution_times.rst", "tutorials/analysis-1d/cta_sensitivity.rst", "tutorials/analysis-1d/ebl.rst", "tutorials/analysis-1d/extended_source_spectral_analysis.rst", "tutorials/analysis-1d/sed_fitting.rst", "tutorials/analysis-1d/sg_execution_times.rst", "tutorials/analysis-1d/spectral_analysis.rst", "tutorials/analysis-1d/spectral_analysis_hli.rst", "tutorials/analysis-1d/spectral_analysis_rad_max.rst", "tutorials/analysis-1d/spectrum_simulation.rst", "tutorials/analysis-2d/detect.rst", "tutorials/analysis-2d/modeling_2D.rst", "tutorials/analysis-2d/ring_background.rst", "tutorials/analysis-2d/sg_execution_times.rst", "tutorials/analysis-3d/analysis_3d.rst", "tutorials/analysis-3d/analysis_mwl.rst", "tutorials/analysis-3d/cta_data_analysis.rst", "tutorials/analysis-3d/energy_dependent_estimation.rst", "tutorials/analysis-3d/event_sampling.rst", "tutorials/analysis-3d/event_sampling_nrg_depend_models.rst", "tutorials/analysis-3d/flux_profiles.rst", "tutorials/analysis-3d/sg_execution_times.rst", "tutorials/analysis-3d/simulate_3d.rst", "tutorials/analysis-time/light_curve.rst", "tutorials/analysis-time/light_curve_flare.rst", "tutorials/analysis-time/light_curve_simulation.rst", "tutorials/analysis-time/pulsar_analysis.rst", "tutorials/analysis-time/sg_execution_times.rst", "tutorials/analysis-time/time_resolved_spectroscopy.rst", "tutorials/analysis-time/variability_estimation.rst", "tutorials/api/astro_dark_matter.rst", "tutorials/api/catalog.rst", "tutorials/api/datasets.rst", "tutorials/api/estimators.rst", "tutorials/api/fitting.rst", "tutorials/api/irfs.rst", "tutorials/api/makers.rst", "tutorials/api/maps.rst", "tutorials/api/mask_maps.rst", "tutorials/api/model_management.rst", "tutorials/api/models.rst", "tutorials/api/observation_clustering.rst", "tutorials/api/priors.rst", "tutorials/api/sg_execution_times.rst", "tutorials/data/cta.rst", "tutorials/data/fermi_lat.rst", "tutorials/data/hawc.rst", "tutorials/data/hess.rst", "tutorials/data/sg_execution_times.rst", "tutorials/index.rst", "tutorials/scripts/sg_execution_times.rst", "tutorials/scripts/survey_map.rst", "tutorials/sg_execution_times.rst", "tutorials/starting/analysis_1.rst", "tutorials/starting/analysis_2.rst", "tutorials/starting/overview.rst", "tutorials/starting/sg_execution_times.rst", "user-guide/astro/darkmatter/index.rst", "user-guide/astro/index.rst", "user-guide/astro/population/index.rst", "user-guide/astro/source/index.rst", "user-guide/astro/source/pulsar.rst", "user-guide/astro/source/pwn.rst", "user-guide/astro/source/snr.rst", "user-guide/catalog.rst", "user-guide/datasets/index.rst", "user-guide/dl3.rst", "user-guide/estimators.rst", "user-guide/hli.rst", "user-guide/howto.rst", "user-guide/index.rst", "user-guide/irf/aeff.rst", "user-guide/irf/bkg.rst", "user-guide/irf/edisp.rst", "user-guide/irf/index.rst", "user-guide/irf/psf.rst", "user-guide/makers/fov.rst", "user-guide/makers/index.rst", "user-guide/makers/reflected.rst", "user-guide/makers/ring.rst", "user-guide/maps/hpxmap.rst", "user-guide/maps/index.rst", "user-guide/maps/regionmap.rst", "user-guide/model-gallery/index.rst", "user-guide/model-gallery/sg_execution_times.rst", "user-guide/model-gallery/spatial/plot_constant.rst", "user-guide/model-gallery/spatial/plot_disk.rst", "user-guide/model-gallery/spatial/plot_gauss.rst", "user-guide/model-gallery/spatial/plot_gen_gauss.rst", "user-guide/model-gallery/spatial/plot_piecewise_norm_spatial.rst", "user-guide/model-gallery/spatial/plot_point.rst", "user-guide/model-gallery/spatial/plot_shell.rst", "user-guide/model-gallery/spatial/plot_shell2.rst", "user-guide/model-gallery/spatial/plot_template.rst", "user-guide/model-gallery/spatial/sg_execution_times.rst", "user-guide/model-gallery/spectral/plot_absorbed.rst", "user-guide/model-gallery/spectral/plot_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_compound.rst", "user-guide/model-gallery/spectral/plot_constant_spectral.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_exp_cutoff_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_gauss_spectral.rst", "user-guide/model-gallery/spectral/plot_logparabola.rst", "user-guide/model-gallery/spectral/plot_logparabola_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_naima.rst", "user-guide/model-gallery/spectral/plot_piecewise_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_powerlaw.rst", "user-guide/model-gallery/spectral/plot_powerlaw2.rst", "user-guide/model-gallery/spectral/plot_powerlaw_norm_spectral.rst", "user-guide/model-gallery/spectral/plot_smooth_broken_powerlaw.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_3fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl.rst", "user-guide/model-gallery/spectral/plot_super_exp_cutoff_powerlaw_4fgl_dr1.rst", "user-guide/model-gallery/spectral/plot_template_spectral.rst", "user-guide/model-gallery/spectral/sg_execution_times.rst", "user-guide/model-gallery/temporal/plot_constant_temporal.rst", "user-guide/model-gallery/temporal/plot_expdecay_temporal.rst", "user-guide/model-gallery/temporal/plot_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_generalized_gaussian_temporal.rst", "user-guide/model-gallery/temporal/plot_linear_temporal.rst", "user-guide/model-gallery/temporal/plot_powerlaw_temporal.rst", "user-guide/model-gallery/temporal/plot_sine_temporal.rst", "user-guide/model-gallery/temporal/plot_template_phase_temporal.rst", "user-guide/model-gallery/temporal/plot_template_temporal.rst", "user-guide/model-gallery/temporal/sg_execution_times.rst", "user-guide/modeling.rst", "user-guide/package.rst", "user-guide/references.rst", "user-guide/scripts/index.rst", "user-guide/stats/fit_statistics.rst", "user-guide/stats/index.rst", "user-guide/stats/wstat_derivation.rst", "user-guide/utils.rst", "user-guide/visualization/index.rst"], "indexentries": {"--dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--filename": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-run-filename", false]], "--ignore-warnings": [[11, "cmdoption-gammapy-ignore-warnings", false]], "--log-level": [[11, "cmdoption-gammapy-log-level", false]], "--no-dependencies": [[11, "cmdoption-gammapy-info-dependencies", false]], "--no-envvar": [[11, "cmdoption-gammapy-info-envvar", false]], "--no-system": [[11, "cmdoption-gammapy-info-system", false]], "--no-version": [[11, "cmdoption-gammapy-info-version", false]], "--out": [[11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-notebooks-out", false]], "--overwrite": [[11, "cmdoption-gammapy-analysis-config-overwrite", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "--release": [[11, "cmdoption-gammapy-download-datasets-release", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "--system": [[11, "cmdoption-gammapy-info-system", false]], "--version": [[11, "cmdoption-gammapy-info-version", false], [11, "cmdoption-gammapy-version", false]], "1d analysis": [[584, "term-1D-Analysis", true]], "3d analysis": [[584, "term-3D-Analysis", true]], "__call__() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.__call__", false]], "__call__() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.__call__", false]], "__call__() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.__call__", false]], "__call__() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.__call__", false]], "__call__() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.__call__", false]], "__call__() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.__call__", false]], "__call__() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.__call__", false]], "__call__() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.__call__", false]], "__call__() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.__call__", false]], "__call__() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.__call__", false]], "__call__() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.__call__", false]], "__call__() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.constanttemporalmodel method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.expdecaytemporalmodel method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianprior method)": [[237, "gammapy.modeling.models.GaussianPrior.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.gaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.lineartemporalmodel method)": [[244, "gammapy.modeling.models.LinearTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.loguniformprior method)": [[247, "gammapy.modeling.models.LogUniformPrior.__call__", false]], "__call__() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.powerlawtemporalmodel method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.prior method)": [[261, "gammapy.modeling.models.Prior.__call__", false]], "__call__() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.sinetemporalmodel method)": [[267, "gammapy.modeling.models.SineTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.skymodel method)": [[268, "gammapy.modeling.models.SkyModel.__call__", false]], "__call__() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.__call__", false]], "__call__() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.__call__", false]], "__call__() (gammapy.modeling.models.temporalmodel method)": [[282, "gammapy.modeling.models.TemporalModel.__call__", false]], "__call__() (gammapy.modeling.models.uniformprior method)": [[283, "gammapy.modeling.models.UniformPrior.__call__", false]], "__call__() (gammapy.utils.interpolation.scaledregulargridinterpolator method)": [[325, "gammapy.utils.interpolation.ScaledRegularGridInterpolator.__call__", false]], "a (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.a", false]], "a (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.a", false]], "absolute_time() (in module gammapy.utils.time)": [[367, "gammapy.utils.time.absolute_time", false]], "acceptance_off (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.acceptance_off", false]], "acceptance_off (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.acceptance_off", false]], "acceptance_on (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.acceptance_on", false]], "acceptance_on (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.acceptance_on", false]], "adaptiveringbackgroundmaker (class in gammapy.makers)": [[172, "gammapy.makers.AdaptiveRingBackgroundMaker", false]], "add_colorbar() (in module gammapy.visualization)": [[374, "gammapy.visualization.add_colorbar", false]], "add_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_column", false]], "add_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_column", false]], "add_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_columns", false]], "add_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_columns", false]], "add_index() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_index", false]], "add_index() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_index", false]], "add_observed_parameters() (in module gammapy.astro.population)": [[41, "gammapy.astro.population.add_observed_parameters", false]], "add_pulsar_parameters() (in module gammapy.astro.population)": [[42, "gammapy.astro.population.add_pulsar_parameters", false]], "add_pwn_parameters() (in module gammapy.astro.population)": [[43, "gammapy.astro.population.add_pwn_parameters", false]], "add_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.add_row", false]], "add_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.add_row", false]], "add_snr_parameters() (in module gammapy.astro.population)": [[44, "gammapy.astro.population.add_snr_parameters", false]], "aeff": [[584, "term-Aeff", true]], "aeff (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.aeff", false]], "all_quantities() (gammapy.estimators.fluxmaps static method)": [[126, "gammapy.estimators.FluxMaps.all_quantities", false]], "all_quantities() (gammapy.estimators.fluxpoints static method)": [[128, "gammapy.estimators.FluxPoints.all_quantities", false]], "allowed_channels (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.allowed_channels", false]], "alpha (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.alpha", false]], "alpha (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.alpha", false]], "alpha (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.alpha", false]], "alpha (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.alpha", false]], "alpha (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.alpha", false]], "alpha (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.alpha", false]], "alpha_norm (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.alpha_norm", false]], "altaz (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz", false]], "altaz (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz", false]], "altaz (gammapy.irf.fovalignment attribute)": [[160, "gammapy.irf.FoVAlignment.ALTAZ", false]], "altaz_frame (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_frame", false]], "altaz_frame (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_frame", false]], "altaz_from_table (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.altaz_from_table", false]], "altaz_from_table (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.altaz_from_table", false]], "altaz_interpolate() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.altaz_interpolate", false]], "amp (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.amp", false]], "amplitude (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.amplitude", false]], "amplitude (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.amplitude", false]], "amplitude (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.amplitude", false]], "amplitude (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.amplitude", false]], "amplitude (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.amplitude", false]], "amplitude (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.amplitude", false]], "amplitude (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.amplitude", false]], "amplitude (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.amplitude", false]], "analysis (class in gammapy.analysis)": [[15, "gammapy.analysis.Analysis", false]], "analysisconfig (class in gammapy.analysis)": [[16, "gammapy.analysis.AnalysisConfig", false]], "annotate_heatmap() (in module gammapy.visualization)": [[375, "gammapy.visualization.annotate_heatmap", false]], "append() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.append", false]], "append() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.append", false]], "append() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.append", false]], "apply_edisp() (in module gammapy.datasets)": [[113, "gammapy.datasets.apply_edisp", false]], "apply_edisp() (in module gammapy.datasets.utils)": [[118, "gammapy.datasets.utils.apply_edisp", false]], "apply_mask() (gammapy.maps.mapcoord method)": [[203, "gammapy.maps.MapCoord.apply_mask", false]], "argsort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.argsort", false]], "argsort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.argsort", false]], "as_array() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.as_array", false]], "as_array() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.as_array", false]], "as_energy_true (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.as_energy_true", false]], "as_energy_true (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.as_energy_true", false]], "as_energy_true (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.as_energy_true", false]], "as_plot_center (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.as_plot_center", false]], "as_plot_center (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.as_plot_center", false]], "as_plot_edges (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.as_plot_edges", false]], "as_plot_edges (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.as_plot_edges", false]], "as_plot_labels (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.as_plot_labels", false]], "as_plot_labels (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.as_plot_labels", false]], "as_plot_scale (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.as_plot_scale", false]], "as_plot_xerr (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.as_plot_xerr", false]], "as_plot_xerr (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.as_plot_xerr", false]], "asmoothmapestimator (class in gammapy.estimators)": [[121, "gammapy.estimators.ASmoothMapEstimator", false]], "assert_name() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.assert_name", false]], "assert_name() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.assert_name", false]], "assert_name() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.assert_name", false]], "assert_names() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.assert_names", false]], "assert_quantity_allclose() (in module gammapy.utils.testing)": [[361, "gammapy.utils.testing.assert_quantity_allclose", false]], "assert_skycoord_allclose() (in module gammapy.utils.testing)": [[362, "gammapy.utils.testing.assert_skycoord_allclose", false]], "assert_time_allclose() (in module gammapy.utils.testing)": [[363, "gammapy.utils.testing.assert_time_allclose", false]], "asso (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.asso", false]], "asso (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.asso", false]], "asso (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.asso", false]], "autoscale() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.autoscale", false]], "autoscale() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.autoscale", false]], "autoscale() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.autoscale", false]], "autoscale() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.autoscale", false]], "available_hdus (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_hdus", false]], "available_irfs (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.available_irfs", false]], "available_methods (gammapy.makers.fovbackgroundmaker attribute)": [[174, "gammapy.makers.FoVBackgroundMaker.available_methods", false]], "available_methods (gammapy.makers.safemaskmaker attribute)": [[183, "gammapy.makers.SafeMaskMaker.available_methods", false]], "available_quantities (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.available_quantities", false]], "available_quantities (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.available_quantities", false]], "available_selection (gammapy.makers.mapdatasetmaker attribute)": [[177, "gammapy.makers.MapDatasetMaker.available_selection", false]], "available_selection (gammapy.makers.spectrumdatasetmaker attribute)": [[184, "gammapy.makers.SpectrumDatasetMaker.available_selection", false]], "available_stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.available_stat_type", false]], "axes (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.axes", false]], "axes (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.axes", false]], "axes (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.axes", false]], "axes (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.axes", false]], "axes (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.axes", false]], "axes (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.axes", false]], "axes (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.axes", false]], "axes (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.axes", false]], "axes (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.axes", false]], "axes (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.axes", false]], "axes (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.axes", false]], "axes (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.axes", false]], "axes (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.axes", false]], "axes (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.axes", false]], "axes (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.axes", false]], "axes_names (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.axes_names", false]], "axes_names (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.axes_names", false]], "axes_names (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.axes_names", false]], "axis_names (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.axis_names", false]], "b (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.B", false]], "b (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.b", false]], "b (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.b", false]], "backend (gammapy.modeling.covarianceresult attribute)": [[214, "gammapy.modeling.CovarianceResult.backend", false]], "backend (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.backend", false]], "backend (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.backend", false]], "backend_default (in module gammapy.utils.parallel)": [[328, "gammapy.utils.parallel.BACKEND_DEFAULT", false]], "background (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background", false]], "background (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background", false]], "background (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.background", false]], "background (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.background", false]], "background (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.background", false]], "background2d (class in gammapy.irf)": [[151, "gammapy.irf.Background2D", false]], "background3d (class in gammapy.irf)": [[152, "gammapy.irf.Background3D", false]], "background_model (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.background_model", false]], "background_model (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.background_model", false]], "background_model (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.background_model", false]], "background_model (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.background_model", false]], "background_model (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.background_model", false]], "backgroundirf (class in gammapy.irf)": [[153, "gammapy.irf.BackgroundIRF", false]], "bar_radius (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.bar_radius", false]], "base_dir (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.base_dir", false]], "bbox_with_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bbox_with_units", false]], "bbox_with_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bbox_with_units", false]], "beta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.beta", false]], "beta (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.beta", false]], "beta (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.beta", false]], "beta (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.beta", false]], "beta (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.beta", false]], "bin_volume() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.bin_volume", false]], "bin_volume() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.bin_volume", false]], "bin_volume() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.bin_volume", false]], "bin_width (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.bin_width", false]], "bin_width (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.bin_width", false]], "bin_width (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.bin_width", false]], "binary_dilate() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.binary_dilate", false]], "binary_erode() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.binary_erode", false]], "binary_structure() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.binary_structure", false]], "binsz_wcs (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.binsz_wcs", false]], "bkg": [[584, "term-Bkg", true]], "bkg (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.bkg", false]], "boundary_mask() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.boundary_mask", false]], "bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounding_box", false]], "bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounding_box", false]], "bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounding_box", false]], "bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounding_box", false]], "bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounding_box", false]], "bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounding_box", false]], "bounds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.bounds", false]], "bounds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.bounds", false]], "bounds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.bounds", false]], "bounds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.bounds", false]], "bounds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.bounds", false]], "bounds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.bounds", false]], "bounds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.bounds", false]], "bounds (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.bounds", false]], "bounds (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.bounds", false]], "broadcasted (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.broadcasted", false]], "brokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel", false]], "burkertprofile (class in gammapy.astro.darkmatter)": [[17, "gammapy.astro.darkmatter.BurkertProfile", false]], "c (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.C", false]], "callback() (gammapy.makers.datasetsmaker method)": [[173, "gammapy.makers.DatasetsMaker.callback", false]], "cartesian() (in module gammapy.utils.coordinates)": [[314, "gammapy.utils.coordinates.cartesian", false]], "casebattacharya1998 (class in gammapy.astro.population)": [[28, "gammapy.astro.population.CaseBattacharya1998", false]], "cash": [[584, "term-Cash", true]], "cash() (in module gammapy.stats)": [[296, "gammapy.stats.cash", false]], "cash_sum_cython() (in module gammapy.stats)": [[297, "gammapy.stats.cash_sum_cython", false]], "cashcountsstatistic (class in gammapy.stats)": [[293, "gammapy.stats.CashCountsStatistic", false]], "catalog_registry (in module gammapy.catalog)": [[55, "gammapy.catalog.CATALOG_REGISTRY", false]], "center (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.center", false]], "center (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.center", false]], "center (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.center", false]], "center_coord (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.center_coord", false]], "center_coord (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.center_coord", false]], "center_coord (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.center_coord", false]], "center_coord (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.center_coord", false]], "center_coord (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.center_coord", false]], "center_pix (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.center_pix", false]], "center_pix (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.center_pix", false]], "center_pix (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.center_pix", false]], "center_pix (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.center_pix", false]], "center_skydir (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.center_skydir", false]], "center_skydir (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.center_skydir", false]], "center_skydir (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.center_skydir", false]], "center_skydir (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.center_skydir", false]], "channel (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel", false]], "channel_registry (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.channel_registry", false]], "check() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.check", false]], "check() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.check", false]], "check() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.check", false]], "check_limits() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.check_limits", false]], "check_limits() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.check_limits", false]], "check_limits() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.check_limits", false]], "check_limits() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.check_limits", false]], "checker (class in gammapy.utils.testing)": [[360, "gammapy.utils.testing.Checker", false]], "clear() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.clear", false]], "clear() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.clear", false]], "clear() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.clear", false]], "clear() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.clear", false]], "coadd() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.coadd", false]], "coadd() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.coadd", false]], "coadd() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.coadd", false]], "coadd() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.coadd", false]], "coadd() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.coadd", false]], "coadd() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.coadd", false]], "coefficients (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.coefficients", false]], "coerce_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.coerce_units", false]], "coerce_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.coerce_units", false]], "coerce_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.coerce_units", false]], "coerce_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.coerce_units", false]], "coerce_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.coerce_units", false]], "coerce_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.coerce_units", false]], "col_fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.col_fit_deriv", false]], "col_fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.col_fit_deriv", false]], "colnames (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.colnames", false]], "colnames (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.colnames", false]], "colormap_hess() (in module gammapy.visualization)": [[376, "gammapy.visualization.colormap_hess", false]], "colormap_milagro() (in module gammapy.visualization)": [[377, "gammapy.visualization.colormap_milagro", false]], "columnclass (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.ColumnClass", false]], "columnclass (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.ColumnClass", false]], "combine_flux_maps() (in module gammapy.estimators.utils)": [[138, "gammapy.estimators.utils.combine_flux_maps", false]], "combine_significance_maps() (in module gammapy.estimators.utils)": [[139, "gammapy.estimators.utils.combine_significance_maps", false]], "components_models() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.components_models", false]], "compound_region_to_regions() (in module gammapy.utils.regions)": [[344, "gammapy.utils.regions.compound_region_to_regions", false]], "compoundspectralmodel (class in gammapy.modeling.models)": [[223, "gammapy.modeling.models.CompoundSpectralModel", false]], "compute_chisq() (in module gammapy.stats)": [[298, "gammapy.stats.compute_chisq", false]], "compute_differential_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_differential_jfactor", false]], "compute_errn() (gammapy.stats.cashcountsstatistic method)": [[293, "gammapy.stats.CashCountsStatistic.compute_errn", false]], "compute_errn() (gammapy.stats.wstatcountsstatistic method)": [[295, "gammapy.stats.WStatCountsStatistic.compute_errn", false]], "compute_errp() (gammapy.stats.cashcountsstatistic method)": [[293, "gammapy.stats.CashCountsStatistic.compute_errp", false]], "compute_errp() (gammapy.stats.wstatcountsstatistic method)": [[295, "gammapy.stats.WStatCountsStatistic.compute_errp", false]], "compute_flux_doubling() (in module gammapy.stats)": [[299, "gammapy.stats.compute_flux_doubling", false]], "compute_fpp() (in module gammapy.stats)": [[300, "gammapy.stats.compute_fpp", false]], "compute_fvar() (in module gammapy.stats)": [[301, "gammapy.stats.compute_fvar", false]], "compute_jfactor() (gammapy.astro.darkmatter.jfactory method)": [[23, "gammapy.astro.darkmatter.JFactory.compute_jfactor", false]], "compute_lightcurve_discrete_correlation() (in module gammapy.estimators.utils)": [[140, "gammapy.estimators.utils.compute_lightcurve_discrete_correlation", false]], "compute_lightcurve_doublingtime() (in module gammapy.estimators.utils)": [[141, "gammapy.estimators.utils.compute_lightcurve_doublingtime", false]], "compute_lightcurve_fpp() (in module gammapy.estimators.utils)": [[142, "gammapy.estimators.utils.compute_lightcurve_fpp", false]], "compute_lightcurve_fvar() (in module gammapy.estimators.utils)": [[143, "gammapy.estimators.utils.compute_lightcurve_fvar", false]], "compute_upper_limit() (gammapy.stats.cashcountsstatistic method)": [[293, "gammapy.stats.CashCountsStatistic.compute_upper_limit", false]], "compute_upper_limit() (gammapy.stats.wstatcountsstatistic method)": [[295, "gammapy.stats.WStatCountsStatistic.compute_upper_limit", false]], "concatenate() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.concatenate", false]], "concatenate() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.concatenate", false]], "conf_max (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.conf_max", false]], "conf_max (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.conf_max", false]], "conf_min (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.conf_min", false]], "conf_min (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.conf_min", false]], "confidence() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.confidence", false]], "config (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.config", false]], "config_parameters (gammapy.estimators.asmoothmapestimator attribute)": [[121, "gammapy.estimators.ASmoothMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.energydependentmorphologyestimator attribute)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.estimator attribute)": [[124, "gammapy.estimators.Estimator.config_parameters", false]], "config_parameters (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.imageprofileestimator attribute)": [[132, "gammapy.estimators.ImageProfileEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.parameterestimator attribute)": [[134, "gammapy.estimators.ParameterEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.sensitivityestimator attribute)": [[136, "gammapy.estimators.SensitivityEstimator.config_parameters", false]], "config_parameters (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.config_parameters", false]], "const (gammapy.modeling.models.constantspectralmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpectralModel.const", false]], "constantfluxspatialmodel (class in gammapy.modeling.models)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel", false]], "constantspatialmodel (class in gammapy.modeling.models)": [[225, "gammapy.modeling.models.ConstantSpatialModel", false]], "constantspectralmodel (class in gammapy.modeling.models)": [[226, "gammapy.modeling.models.ConstantSpectralModel", false]], "constanttemporalmodel (class in gammapy.modeling.models)": [[227, "gammapy.modeling.models.ConstantTemporalModel", false]], "construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.construct", false]], "construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.construct", false]], "construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.construct", false]], "construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.construct", false]], "construct() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.construct", false]], "containment() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.containment", false]], "containment() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.containment", false]], "containment() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.containment", false]], "containment() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.containment", false]], "containment() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.containment", false]], "containment() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.containment", false]], "containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.containment_radius", false]], "containment_radius() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.containment_radius", false]], "containment_radius() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.containment_radius", false]], "containment_radius() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.containment_radius", false]], "containment_radius() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.containment_radius", false]], "containment_radius() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.containment_radius", false]], "containment_radius() (in module gammapy.maps)": [[211, "gammapy.maps.containment_radius", false]], "containment_radius_map() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.containment_radius_map", false]], "containment_radius_map() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.containment_radius_map", false]], "containment_region() (in module gammapy.maps)": [[212, "gammapy.maps.containment_region", false]], "contains() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.contains", false]], "contains() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.contains", false]], "contains() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.contains", false]], "contains() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.contains", false]], "contains_pix() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.contains_pix", false]], "contains_pix() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.contains_pix", false]], "contains_pix() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.contains_pix", false]], "contains_pix() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.contains_pix", false]], "contains_wcs_pix() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.contains_wcs_pix", false]], "contributes() (gammapy.modeling.models.fovbackgroundmodel static method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.contributes", false]], "contributes() (gammapy.modeling.models.skymodel method)": [[268, "gammapy.modeling.models.SkyModel.contributes", false]], "contributes_to_stat (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.contributes_to_stat", false]], "convert_bytestring_to_unicode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_bytestring_to_unicode", false]], "convert_bytestring_to_unicode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_bytestring_to_unicode", false]], "convert_unicode_to_bytestring() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.convert_unicode_to_bytestring", false]], "convert_unicode_to_bytestring() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.convert_unicode_to_bytestring", false]], "convolve() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.convolve", false]], "convolve() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.convolve", false]], "convolve_full() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.convolve_full", false]], "convolve_wcs() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.convolve_wcs", false]], "coord_to_idx() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.coord_to_idx", false]], "coord_to_idx() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.coord_to_idx", false]], "coord_to_pix() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.coord_to_pix", false]], "coord_to_pix() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.coord_to_pix", false]], "coords (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.coords", false]], "copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.copy", false]], "copy() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.copy", false]], "copy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.copy", false]], "copy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.copy", false]], "copy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.copy", false]], "copy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.copy", false]], "copy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.copy", false]], "copy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.copy", false]], "copy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.copy", false]], "copy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.copy", false]], "copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.copy", false]], "copy() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.copy", false]], "copy() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.copy", false]], "copy() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.copy", false]], "copy() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.copy", false]], "copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.copy", false]], "copy() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.copy", false]], "copy() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.copy", false]], "copy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.copy", false]], "copy() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.copy", false]], "copy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.copy", false]], "copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.copy", false]], "copy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.copy", false]], "copy() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.copy", false]], "copy() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.copy", false]], "copy() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.copy", false]], "copy() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.copy", false]], "copy() (gammapy.estimators.energydependentmorphologyestimator method)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.copy", false]], "copy() (gammapy.estimators.estimator method)": [[124, "gammapy.estimators.Estimator.copy", false]], "copy() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.copy", false]], "copy() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.copy", false]], "copy() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.copy", false]], "copy() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.copy", false]], "copy() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.copy", false]], "copy() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.copy", false]], "copy() (gammapy.estimators.imageprofileestimator method)": [[132, "gammapy.estimators.ImageProfileEstimator.copy", false]], "copy() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.copy", false]], "copy() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.copy", false]], "copy() (gammapy.estimators.sensitivityestimator method)": [[136, "gammapy.estimators.SensitivityEstimator.copy", false]], "copy() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.copy", false]], "copy() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.copy", false]], "copy() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.copy", false]], "copy() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.copy", false]], "copy() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.copy", false]], "copy() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.copy", false]], "copy() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.copy", false]], "copy() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.copy", false]], "copy() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.copy", false]], "copy() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.copy", false]], "copy() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.copy", false]], "copy() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.copy", false]], "copy() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.copy", false]], "copy() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.copy", false]], "copy() (gammapy.maps.mapcoord method)": [[203, "gammapy.maps.MapCoord.copy", false]], "copy() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.copy", false]], "copy() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.copy", false]], "copy() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.copy", false]], "copy() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.copy", false]], "copy() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.copy", false]], "copy() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.copy", false]], "copy() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.copy", false]], "copy() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.copy", false]], "copy() (gammapy.modeling.models.constanttemporalmodel method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.copy", false]], "copy() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.copy", false]], "copy() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.copy", false]], "copy() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.expdecaytemporalmodel method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.copy", false]], "copy() (gammapy.modeling.models.fovbackgroundmodel method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.copy", false]], "copy() (gammapy.modeling.models.gaussianprior method)": [[237, "gammapy.modeling.models.GaussianPrior.copy", false]], "copy() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.copy", false]], "copy() (gammapy.modeling.models.gaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.copy", false]], "copy() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.copy", false]], "copy() (gammapy.modeling.models.lineartemporalmodel method)": [[244, "gammapy.modeling.models.LinearTemporalModel.copy", false]], "copy() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.loguniformprior method)": [[247, "gammapy.modeling.models.LogUniformPrior.copy", false]], "copy() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.copy", false]], "copy() (gammapy.modeling.models.modelbase method)": [[251, "gammapy.modeling.models.ModelBase.copy", false]], "copy() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.copy", false]], "copy() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.copy", false]], "copy() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.copy", false]], "copy() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.powerlawtemporalmodel method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.copy", false]], "copy() (gammapy.modeling.models.prior method)": [[261, "gammapy.modeling.models.Prior.copy", false]], "copy() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.copy", false]], "copy() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.copy", false]], "copy() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.copy", false]], "copy() (gammapy.modeling.models.sinetemporalmodel method)": [[267, "gammapy.modeling.models.SineTemporalModel.copy", false]], "copy() (gammapy.modeling.models.skymodel method)": [[268, "gammapy.modeling.models.SkyModel.copy", false]], "copy() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.copy", false]], "copy() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.copy", false]], "copy() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.copy", false]], "copy() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.copy", false]], "copy() (gammapy.modeling.models.templatenpredmodel method)": [[278, "gammapy.modeling.models.TemplateNPredModel.copy", false]], "copy() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.copy", false]], "copy() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.copy", false]], "copy() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.copy", false]], "copy() (gammapy.modeling.models.temporalmodel method)": [[282, "gammapy.modeling.models.TemporalModel.copy", false]], "copy() (gammapy.modeling.models.uniformprior method)": [[283, "gammapy.modeling.models.UniformPrior.copy", false]], "copy() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.copy", false]], "copy() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.copy", false]], "copy() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.copy", false]], "copy() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.copy", false]], "copy_obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.copy_obs", false]], "correlation (gammapy.modeling.covariance attribute)": [[213, "gammapy.modeling.Covariance.correlation", false]], "correlation_radius (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.correlation_radius", false]], "count() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.count", false]], "count() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.count", false]], "count() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.count", false]], "count() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.count", false]], "count() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.count", false]], "count() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.count", false]], "count() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.count", false]], "counts (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.counts", false]], "counts (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.counts", false]], "counts (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.counts", false]], "counts (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.counts", false]], "counts (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.counts", false]], "counts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.counts", false]], "counts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.counts", false]], "cov_matrix (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.cov_matrix", false]], "cov_matrix (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.cov_matrix", false]], "cov_matrix (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.cov_matrix", false]], "cov_matrix (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.cov_matrix", false]], "cov_matrix (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.cov_matrix", false]], "cov_matrix (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.cov_matrix", false]], "covariance (class in gammapy.modeling)": [[213, "gammapy.modeling.Covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.covariance", false]], "covariance (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.covariance", false]], "covariance (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.compoundspectralmodel attribute)": [[223, "gammapy.modeling.models.CompoundSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.constantspectralmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.constanttemporalmodel attribute)": [[227, "gammapy.modeling.models.ConstantTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.datasetmodels attribute)": [[228, "gammapy.modeling.models.DatasetModels.covariance", false]], "covariance (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.fovbackgroundmodel attribute)": [[236, "gammapy.modeling.models.FoVBackgroundModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianprior attribute)": [[237, "gammapy.modeling.models.GaussianPrior.covariance", false]], "covariance (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.loguniformprior attribute)": [[247, "gammapy.modeling.models.LogUniformPrior.covariance", false]], "covariance (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.modelbase attribute)": [[251, "gammapy.modeling.models.ModelBase.covariance", false]], "covariance (gammapy.modeling.models.models attribute)": [[252, "gammapy.modeling.models.Models.covariance", false]], "covariance (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.prior attribute)": [[261, "gammapy.modeling.models.Prior.covariance", false]], "covariance (gammapy.modeling.models.scalespectralmodel attribute)": [[264, "gammapy.modeling.models.ScaleSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.covariance", false]], "covariance (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.covariance", false]], "covariance (gammapy.modeling.models.spectralmodel attribute)": [[271, "gammapy.modeling.models.SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.covariance", false]], "covariance (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatendspectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.covariance", false]], "covariance (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.covariance", false]], "covariance (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.covariance", false]], "covariance (gammapy.modeling.models.templatespectralmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpectralModel.covariance", false]], "covariance (gammapy.modeling.models.temporalmodel attribute)": [[282, "gammapy.modeling.models.TemporalModel.covariance", false]], "covariance (gammapy.modeling.models.uniformprior attribute)": [[283, "gammapy.modeling.models.UniformPrior.covariance", false]], "covariance() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.covariance", false]], "covariance_result (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.covariance_result", false]], "covarianceresult (class in gammapy.modeling)": [[214, "gammapy.modeling.CovarianceResult", false]], "create() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.create", false]], "create() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.create", false]], "create() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.create", false]], "create() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.create", false]], "create() (gammapy.datasets.mapdatasetweighted class method)": [[107, "gammapy.datasets.MapDatasetWeighted.create", false]], "create() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.create", false]], "create() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.create", false]], "create() (gammapy.maps.hpxgeom class method)": [[196, "gammapy.maps.HpxGeom.create", false]], "create() (gammapy.maps.hpxmap class method)": [[197, "gammapy.maps.HpxMap.create", false]], "create() (gammapy.maps.hpxndmap class method)": [[198, "gammapy.maps.HpxNDMap.create", false]], "create() (gammapy.maps.map static method)": [[200, "gammapy.maps.Map.create", false]], "create() (gammapy.maps.mapcoord class method)": [[203, "gammapy.maps.MapCoord.create", false]], "create() (gammapy.maps.regiongeom class method)": [[205, "gammapy.maps.RegionGeom.create", false]], "create() (gammapy.maps.regionndmap class method)": [[206, "gammapy.maps.RegionNDMap.create", false]], "create() (gammapy.maps.wcsgeom class method)": [[208, "gammapy.maps.WcsGeom.create", false]], "create() (gammapy.maps.wcsmap class method)": [[209, "gammapy.maps.WcsMap.create", false]], "create() (gammapy.maps.wcsndmap class method)": [[210, "gammapy.maps.WcsNDMap.create", false]], "create() (gammapy.modeling.models.model static method)": [[250, "gammapy.modeling.models.Model.create", false]], "create() (gammapy.modeling.models.skymodel class method)": [[268, "gammapy.modeling.models.SkyModel.create", false]], "create_cosmic_ray_spectral_model() (in module gammapy.modeling.models)": [[284, "gammapy.modeling.models.create_cosmic_ray_spectral_model", false]], "create_crab_spectral_model() (in module gammapy.modeling.models)": [[285, "gammapy.modeling.models.create_crab_spectral_model", false]], "create_dataset() (gammapy.datasets.fermipydatasetsreader static method)": [[101, "gammapy.datasets.FermipyDatasetsReader.create_dataset", false]], "create_empty_map_dataset_from_irfs() (in module gammapy.datasets)": [[114, "gammapy.datasets.create_empty_map_dataset_from_irfs", false]], "create_fermi_isotropic_diffuse_model() (in module gammapy.modeling.models)": [[286, "gammapy.modeling.models.create_fermi_isotropic_diffuse_model", false]], "create_map_dataset_from_dl4() (in module gammapy.datasets.utils)": [[119, "gammapy.datasets.utils.create_map_dataset_from_dl4", false]], "create_map_dataset_from_observation() (in module gammapy.datasets)": [[115, "gammapy.datasets.create_map_dataset_from_observation", false]], "create_map_dataset_geoms() (in module gammapy.datasets)": [[116, "gammapy.datasets.create_map_dataset_geoms", false]], "create_mask() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.create_mask", false]], "create_mask() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.create_mask", false]], "create_mask() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.create_mask", false]], "create_mask() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.create_mask", false]], "crop() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.crop", false]], "crop() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.crop", false]], "crop() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.crop", false]], "crop() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.crop", false]], "crop() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.crop", false]], "crop() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.crop", false]], "crop() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.crop", false]], "crop() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.crop", false]], "crop() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.crop", false]], "crop() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.crop", false]], "cstat() (in module gammapy.stats)": [[302, "gammapy.stats.cstat", false]], "cumsum() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.cumsum", false]], "cumsum() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.cumsum", false]], "cumsum() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.cumsum", false]], "cumsum() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.cumsum", false]], "cumsum() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.cumsum", false]], "cumsum() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.cumsum", false]], "cumsum() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.cumsum", false]], "cumsum() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.cumsum", false]], "cumsum() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.cumsum", false]], "cumsum() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.cumsum", false]], "cumsum() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.cumsum", false]], "cumsum() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.cumsum", false]], "cumsum() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.cumsum", false]], "cumsum() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.cumsum", false]], "cumsum() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.cumsum", false]], "cumsum() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.cumsum", false]], "cumsum() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.cumsum", false]], "cumsum() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.cumsum", false]], "cutout() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.cutout", false]], "cutout() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.cutout", false]], "cutout() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.cutout", false]], "cutout() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.cutout", false]], "cutout() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.cutout", false]], "cutout() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.cutout", false]], "cutout() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.cutout", false]], "cutout() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.cutout", false]], "cutout() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.cutout", false]], "cutout() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.cutout", false]], "cutout() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.cutout", false]], "cutout() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.cutout", false]], "cutout() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.cutout", false]], "cutout() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.cutout", false]], "cutout() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.cutout", false]], "cutout() (gammapy.modeling.models.templatenpredmodel method)": [[278, "gammapy.modeling.models.TemplateNPredModel.cutout", false]], "cutout_and_mask_region() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.cutout_and_mask_region", false]], "cutout_slices() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.cutout_slices", false]], "d_sun_to_galactic_center (in module gammapy.utils.coordinates)": [[313, "gammapy.utils.coordinates.D_SUN_TO_GALACTIC_CENTER", false]], "darkmatterannihilationspectralmodel (class in gammapy.astro.darkmatter)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel", false]], "darkmatterdecayspectralmodel (class in gammapy.astro.darkmatter)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel", false]], "data (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.data", false]], "data (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.data", false]], "data (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.data", false]], "data (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.data", false]], "data (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.data", false]], "data (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.data", false]], "data (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.data", false]], "data (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.data", false]], "data (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.data", false]], "data (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.data", false]], "data (gammapy.irf.psfkernel attribute)": [[165, "gammapy.irf.PSFKernel.data", false]], "data (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.data", false]], "data (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.data", false]], "data (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.data", false]], "data (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.data", false]], "data (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.data", false]], "data (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.data", false]], "data (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.data", false]], "data (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.data", false]], "data (gammapy.modeling.covariance attribute)": [[213, "gammapy.modeling.Covariance.data", false]], "data_nbytes() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.data_nbytes", false]], "data_nbytes() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.data_nbytes", false]], "data_nbytes() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.data_nbytes", false]], "data_shape (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.data_shape", false]], "data_shape (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.data_shape", false]], "data_shape (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.data_shape", false]], "data_shape (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.data_shape", false]], "data_shape (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.data_shape", false]], "data_shape (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.data_shape", false]], "data_shape (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.data_shape", false]], "data_shape (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.data_shape", false]], "data_shape() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.data_shape", false]], "data_shape_axes (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.data_shape_axes", false]], "data_shape_axes (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.data_shape_axes", false]], "data_shape_image (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.data_shape_image", false]], "dataset": [[584, "term-Dataset", true]], "dataset (class in gammapy.datasets)": [[99, "gammapy.datasets.Dataset", false]], "dataset_registry (in module gammapy.datasets)": [[98, "gammapy.datasets.DATASET_REGISTRY", false]], "datasetmodels (class in gammapy.modeling.models)": [[228, "gammapy.modeling.models.DatasetModels", false]], "datasets (class in gammapy.datasets)": [[100, "gammapy.datasets.Datasets", false]], "datasetsmaker (class in gammapy.makers)": [[173, "gammapy.makers.DatasetsMaker", false]], "datastore (class in gammapy.data)": [[82, "gammapy.data.DataStore", false]], "deepcopy() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.deepcopy", false]], "deepcopy() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.deepcopy", false]], "deepcopy() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.deepcopy", false]], "deepcopy() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.deepcopy", false]], "deepcopy() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.deepcopy", false]], "deepcopy() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.deepcopy", false]], "default_alpha (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_ALPHA", false]], "default_alpha (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_ALPHA", false]], "default_beta (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_BETA", false]], "default_gamma (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_GAMMA", false]], "default_hdu_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_HDU_TABLE", false]], "default_interp_kwargs (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.default_interp_kwargs", false]], "default_interp_kwargs (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.default_interp_kwargs", false]], "default_obs_table (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.DEFAULT_OBS_TABLE", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.default_parameters", false]], "default_parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.default_parameters", false]], "default_parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[223, "gammapy.modeling.models.CompoundSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[227, "gammapy.modeling.models.ConstantTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[236, "gammapy.modeling.models.FoVBackgroundModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianprior attribute)": [[237, "gammapy.modeling.models.GaussianPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.loguniformprior attribute)": [[247, "gammapy.modeling.models.LogUniformPrior.default_parameters", false]], "default_parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.prior attribute)": [[261, "gammapy.modeling.models.Prior.default_parameters", false]], "default_parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[264, "gammapy.modeling.models.ScaleSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.spectralmodel attribute)": [[271, "gammapy.modeling.models.SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpectralModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.temporalmodel attribute)": [[282, "gammapy.modeling.models.TemporalModel.default_parameters", false]], "default_parameters (gammapy.modeling.models.uniformprior attribute)": [[283, "gammapy.modeling.models.UniformPrior.default_parameters", false]], "default_scale_radius (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DEFAULT_SCALE_RADIUS", false]], "default_scale_radius (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DEFAULT_SCALE_RADIUS", false]], "default_unit (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.default_unit", false]], "default_unit (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.default_unit", false]], "default_unit (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.default_unit", false]], "default_unit (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.default_unit", false]], "default_unit (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.default_unit", false]], "default_unit (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.default_unit", false]], "delete_interval() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.delete_interval", false]], "description (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.description", false]], "description (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.description", false]], "description (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.description", false]], "description (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.description", false]], "description (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.description", false]], "description (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.description", false]], "description (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.description", false]], "description (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.description", false]], "description (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.description", false]], "description (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.description", false]], "description (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.description", false]], "description() (gammapy.catalog.sourcecatalog class method)": [[56, "gammapy.catalog.SourceCatalog.description", false]], "dict() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.dict", false]], "dict() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.dict", false]], "dict() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.dict", false]], "dict() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.dict", false]], "dict() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.dict", false]], "discrete_correlation() (in module gammapy.stats)": [[303, "gammapy.stats.discrete_correlation", false]], "diskspatialmodel (class in gammapy.modeling.models)": [[229, "gammapy.modeling.models.DiskSpatialModel", false]], "distance_gc (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.DISTANCE_GC", false]], "distance_gc (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.DISTANCE_GC", false]], "dl3": [[584, "term-DL3", true]], "dl4": [[584, "term-DL4", true]], "dl5": [[584, "term-DL5", true]], "dl6": [[584, "term-DL6", true]], "dmprofile (class in gammapy.astro.darkmatter)": [[18, "gammapy.astro.darkmatter.DMProfile", false]], "dnde (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde", false]], "dnde (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde", false]], "dnde_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_err", false]], "dnde_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_err", false]], "dnde_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_errn", false]], "dnde_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_errn", false]], "dnde_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_errp", false]], "dnde_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_errp", false]], "dnde_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_ref", false]], "dnde_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_ref", false]], "dnde_scan_values (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_scan_values", false]], "dnde_scan_values (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_scan_values", false]], "dnde_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.dnde_ul", false]], "dnde_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.dnde_ul", false]], "dot() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.dot", false]], "dot() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.dot", false]], "dot() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.dot", false]], "dot() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.dot", false]], "dot() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.dot", false]], "dot() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.dot", false]], "downsample() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.downsample", false]], "downsample() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.downsample", false]], "downsample() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.downsample", false]], "downsample() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.downsample", false]], "downsample() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.downsample", false]], "downsample() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.downsample", false]], "downsample() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.downsample", false]], "downsample() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.downsample", false]], "downsample() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.downsample", false]], "downsample() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.downsample", false]], "downsample() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.downsample", false]], "downsample() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.downsample", false]], "downsample() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.downsample", false]], "downsample() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.downsample", false]], "downsample() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.downsample", false]], "downsample() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.downsample", false]], "downsample() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.downsample", false]], "downsample() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.downsample", false]], "downsample() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.downsample", false]], "downsample() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.downsample", false]], "downsample() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.downsample", false]], "downsample() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.downsample", false]], "downsample() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.downsample", false]], "downsample() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.downsample", false]], "draw() (in module gammapy.utils.random)": [[336, "gammapy.utils.random.draw", false]], "drift (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.DRIFT", false]], "drop() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.drop", false]], "drop() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.drop", false]], "drop() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.drop", false]], "drop() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.drop", false]], "drop() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.drop", false]], "dtype (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.dtype", false]], "dtype (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.dtype", false]], "duration (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.duration", false]], "e (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.e", false]], "e (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.e", false]], "e (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.e", false]], "e2dnde (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde", false]], "e2dnde (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde", false]], "e2dnde_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_err", false]], "e2dnde_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_err", false]], "e2dnde_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_errn", false]], "e2dnde_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_errn", false]], "e2dnde_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_errp", false]], "e2dnde_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_errp", false]], "e2dnde_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_ref", false]], "e2dnde_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_ref", false]], "e2dnde_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.e2dnde_ul", false]], "e2dnde_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.e2dnde_ul", false]], "e_peak (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.e_peak", false]], "e_peak (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.e_peak", false]], "earth_location_from_dict() (in module gammapy.utils.fits)": [[323, "gammapy.utils.fits.earth_location_from_dict", false]], "ebl_data_builtin (in module gammapy.modeling.models)": [[231, "gammapy.modeling.models.EBL_DATA_BUILTIN", false]], "eblabsorptionnormspectralmodel (class in gammapy.modeling.models)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel", false]], "ebreak (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.ebreak", false]], "ebreak (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.ebreak", false]], "ecut (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "ecut (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.ecut", false]], "edge_width (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.edge_width", false]], "edges (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.edges", false]], "edges (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.edges", false]], "edges (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.edges", false]], "edges_max (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.edges_max", false]], "edges_max (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.edges_max", false]], "edges_max (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.edges_max", false]], "edges_min (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.edges_min", false]], "edges_min (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.edges_min", false]], "edges_min (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.edges_min", false]], "edisp": [[584, "term-EDisp", true]], "edisp (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.edisp", false]], "edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.edisp", false]], "edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.edisp", false]], "edisp (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.edisp", false]], "edisp (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.edisp", false]], "edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.edisp", false]], "edisp_map (gammapy.irf.edispkernelmap attribute)": [[155, "gammapy.irf.EDispKernelMap.edisp_map", false]], "edisp_map (gammapy.irf.edispmap attribute)": [[156, "gammapy.irf.EDispMap.edisp_map", false]], "edispkernel (class in gammapy.irf)": [[154, "gammapy.irf.EDispKernel", false]], "edispkernelmap (class in gammapy.irf)": [[155, "gammapy.irf.EDispKernelMap", false]], "edispmap (class in gammapy.irf)": [[156, "gammapy.irf.EDispMap", false]], "effectiveareatable2d (class in gammapy.irf)": [[157, "gammapy.irf.EffectiveAreaTable2D", false]], "eflux (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux", false]], "eflux (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux", false]], "eflux_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_err", false]], "eflux_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_err", false]], "eflux_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_errn", false]], "eflux_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_errn", false]], "eflux_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_errp", false]], "eflux_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_errp", false]], "eflux_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_ref", false]], "eflux_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_ref", false]], "eflux_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.eflux_ul", false]], "eflux_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.eflux_ul", false]], "einastoprofile (class in gammapy.astro.darkmatter)": [[21, "gammapy.astro.darkmatter.EinastoProfile", false]], "emax (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.emax", false]], "emin (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.emin", false]], "energy (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.energy", false]], "energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy", false]], "energy_axes_are_aligned (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_axes_are_aligned", false]], "energy_axis (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_axis", false]], "energy_axis (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_axis", false]], "energy_center (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.energy_center", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux", false]], "energy_flux() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux", false]], "energy_flux() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux", false]], "energy_flux() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.energy_flux", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.energy_flux_error", false]], "energy_flux_error() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.energy_flux_error", false]], "energy_integrated() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.energy_integrated", false]], "energy_mask() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.energy_mask", false]], "energy_mask() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.energy_mask", false]], "energy_mask() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.energy_mask", false]], "energy_mask() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.energy_mask", false]], "energy_max (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_max", false]], "energy_max (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_max", false]], "energy_min (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_min", false]], "energy_min (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_min", false]], "energy_name (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.energy_name", false]], "energy_name (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.energy_name", false]], "energy_range (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.energy_range", false]], "energy_range (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.energy_range", false]], "energy_range (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range", false]], "energy_range (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.energy_range", false]], "energy_range (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range", false]], "energy_range (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range", false]], "energy_range_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range_fit", false]], "energy_range_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_fit", false]], "energy_range_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range_safe", false]], "energy_range_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_safe", false]], "energy_range_total (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.energy_range_total", false]], "energy_range_total (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.energy_range_total", false]], "energy_range_total (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.energy_range_total", false]], "energy_ranges (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.energy_ranges", false]], "energy_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.energy_ref", false]], "energy_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.energy_ref", false]], "energydependentmorphologyestimator (class in gammapy.estimators)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator", false]], "energydependentmultigausspsf (class in gammapy.irf)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF", false]], "energydispersion2d (class in gammapy.irf)": [[159, "gammapy.irf.EnergyDispersion2D", false]], "eqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.eqcons", false]], "eqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.eqcons", false]], "eqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.eqcons", false]], "eqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.eqcons", false]], "eqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.eqcons", false]], "eqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.eqcons", false]], "error (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.error", false]], "error (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.error", false]], "error (gammapy.stats.cashcountsstatistic attribute)": [[293, "gammapy.stats.CashCountsStatistic.error", false]], "error (gammapy.stats.wstatcountsstatistic attribute)": [[295, "gammapy.stats.WStatCountsStatistic.error", false]], "error_callback() (gammapy.makers.datasetsmaker method)": [[173, "gammapy.makers.DatasetsMaker.error_callback", false]], "estimate_best_fit() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_best_fit", false]], "estimate_best_fit() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_best_fit", false]], "estimate_counts() (gammapy.estimators.fluxpointsestimator static method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.fluxprofileestimator static method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.lightcurveestimator static method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_counts", false]], "estimate_counts() (gammapy.estimators.parameterestimator static method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_counts", false]], "estimate_energy_dependence() (gammapy.estimators.energydependentmorphologyestimator method)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.estimate_energy_dependence", false]], "estimate_errn_errp() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_errn_errp", false]], "estimate_errn_errp() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_errn_errp", false]], "estimate_excess_map() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_excess_map", false]], "estimate_exposure_reco_energy() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_exposure_reco_energy", false]], "estimate_exposure_reco_energy() (in module gammapy.estimators.utils)": [[144, "gammapy.estimators.utils.estimate_exposure_reco_energy", false]], "estimate_fit_input_maps() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_fit_input_maps", false]], "estimate_flux_default() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_flux_default", false]], "estimate_flux_map() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_flux_map", false]], "estimate_flux_point() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_flux_point", false]], "estimate_flux_point() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_flux_point", false]], "estimate_kernel() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_kernel", false]], "estimate_kernel() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_kernel", false]], "estimate_maps() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.estimate_maps", false]], "estimate_mask_default() (gammapy.estimators.excessmapestimator static method)": [[125, "gammapy.estimators.ExcessMapEstimator.estimate_mask_default", false]], "estimate_mask_default() (gammapy.estimators.tsmapestimator static method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_mask_default", false]], "estimate_min_e2dnde() (gammapy.estimators.sensitivityestimator method)": [[136, "gammapy.estimators.SensitivityEstimator.estimate_min_e2dnde", false]], "estimate_min_excess() (gammapy.estimators.sensitivityestimator method)": [[136, "gammapy.estimators.SensitivityEstimator.estimate_min_excess", false]], "estimate_npred() (gammapy.estimators.fluxpointsestimator static method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.fluxprofileestimator static method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.lightcurveestimator static method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_npred", false]], "estimate_npred() (gammapy.estimators.parameterestimator static method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_npred", false]], "estimate_npred_excess() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_npred_excess", false]], "estimate_npred_excess() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_npred_excess", false]], "estimate_pad_width() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.estimate_pad_width", false]], "estimate_scan() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_scan", false]], "estimate_scan() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_scan", false]], "estimate_sensitivity() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_sensitivity", false]], "estimate_sensitivity() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_sensitivity", false]], "estimate_time_bin_flux() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_time_bin_flux", false]], "estimate_ts() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_ts", false]], "estimate_ts() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_ts", false]], "estimate_ul() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.estimate_ul", false]], "estimate_ul() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.estimate_ul", false]], "estimator": [[584, "term-Estimator", true]], "estimator (class in gammapy.estimators)": [[124, "gammapy.estimators.Estimator", false]], "estimator_registry (in module gammapy.estimators)": [[122, "gammapy.estimators.ESTIMATOR_REGISTRY", false]], "eta (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.eta", false]], "eta (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.eta", false]], "eta (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.eta", false]], "evaluate() (gammapy.astro.darkmatter.burkertprofile static method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.einastoprofile static method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.isothermalprofile static method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.mooreprofile static method)": [[24, "gammapy.astro.darkmatter.MooreProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.nfwprofile static method)": [[25, "gammapy.astro.darkmatter.NFWProfile.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate", false]], "evaluate() (gammapy.astro.darkmatter.zhaoprofile static method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.evaluate", false]], "evaluate() (gammapy.astro.population.casebattacharya1998 static method)": [[28, "gammapy.astro.population.CaseBattacharya1998.evaluate", false]], "evaluate() (gammapy.astro.population.exponential static method)": [[29, "gammapy.astro.population.Exponential.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006 static method)": [[30, "gammapy.astro.population.FaucherKaspi2006.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitybimodal static method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.evaluate", false]], "evaluate() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian static method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.evaluate", false]], "evaluate() (gammapy.astro.population.lorimer2006 static method)": [[35, "gammapy.astro.population.Lorimer2006.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990 static method)": [[36, "gammapy.astro.population.Paczynski1990.evaluate", false]], "evaluate() (gammapy.astro.population.paczynski1990velocity static method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004 static method)": [[39, "gammapy.astro.population.YusifovKucuk2004.evaluate", false]], "evaluate() (gammapy.astro.population.yusifovkucuk2004b static method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evaluate", false]], "evaluate() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.evaluate", false]], "evaluate() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.evaluate", false]], "evaluate() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.evaluate", false]], "evaluate() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.evaluate", false]], "evaluate() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.evaluate", false]], "evaluate() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.evaluate", false]], "evaluate() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate", false]], "evaluate() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.evaluate", false]], "evaluate() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.evaluate", false]], "evaluate() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.evaluate", false]], "evaluate() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.evaluate", false]], "evaluate() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.evaluate", false]], "evaluate() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.evaluate", false]], "evaluate() (gammapy.modeling.models.brokenpowerlawspectralmodel static method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspatialmodel static method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constantspectralmodel static method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.constanttemporalmodel static method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.diskspatialmodel static method)": [[229, "gammapy.modeling.models.DiskSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel static method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel static method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expcutoffpowerlawspectralmodel static method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.fovbackgroundmodel method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianprior static method)": [[237, "gammapy.modeling.models.GaussianPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspatialmodel static method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussianspectralmodel static method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussianspatialmodel static method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.lineartemporalmodel static method)": [[244, "gammapy.modeling.models.LinearTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolanormspectralmodel static method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.logparabolaspectralmodel static method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.loguniformprior static method)": [[247, "gammapy.modeling.models.LogUniformPrior.evaluate", false]], "evaluate() (gammapy.modeling.models.meyercrabspectralmodel static method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawspectralmodel static method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shell2spatialmodel static method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.shellspatialmodel static method)": [[266, "gammapy.modeling.models.ShellSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.sinetemporalmodel static method)": [[267, "gammapy.modeling.models.SineTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.skymodel method)": [[268, "gammapy.modeling.models.SkyModel.evaluate", false]], "evaluate() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel static method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel static method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel static method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel static method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatenpredmodel method)": [[278, "gammapy.modeling.models.TemplateNPredModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.evaluate", false]], "evaluate() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.evaluate", false]], "evaluate() (gammapy.modeling.models.uniformprior static method)": [[283, "gammapy.modeling.models.UniformPrior.evaluate", false]], "evaluate_containment() (gammapy.irf.energydependentmultigausspsf static method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.evaluate_containment", false]], "evaluate_containment() (gammapy.irf.psfking static method)": [[166, "gammapy.irf.PSFKing.evaluate_containment", false]], "evaluate_direct() (gammapy.irf.energydependentmultigausspsf static method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.evaluate_direct", false]], "evaluate_direct() (gammapy.irf.psfking static method)": [[166, "gammapy.irf.PSFKing.evaluate_direct", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_energy_flux", false]], "evaluate_energy_flux() (gammapy.modeling.models.powerlawspectralmodel static method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_energy_flux", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.evaluate_error", false]], "evaluate_error() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.evaluate_error", false]], "evaluate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.fovbackgroundmodel method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.skymodel method)": [[268, "gammapy.modeling.models.SkyModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.evaluate_geom", false]], "evaluate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.evaluate_geom", false]], "evaluate_integral() (gammapy.modeling.models.powerlaw2spectralmodel static method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawnormspectralmodel static method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.evaluate_integral", false]], "evaluate_integral() (gammapy.modeling.models.powerlawspectralmodel static method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.evaluate_integral", false]], "evaluate_parameters() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.evaluate_parameters", false]], "evaluate_parameters() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.evaluate_parameters", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_bin_size_min", false]], "evaluation_bin_size_min (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.evaluation_bin_size_min", false]], "evaluation_radius (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.evaluation_radius", false]], "evaluation_radius (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.evaluation_radius", false]], "evaluation_region (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.evaluation_region", false]], "evaluation_region (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.evaluation_region", false]], "evaluators (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.evaluators", false]], "evaluators (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.evaluators", false]], "evaluators (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.evaluators", false]], "evaluators (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.evaluators", false]], "event_det_coords() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_det_coords", false]], "event_det_coords() (gammapy.datasets.observationeventsampler static method)": [[110, "gammapy.datasets.ObservationEventSampler.event_det_coords", false]], "event_filter_types (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.EVENT_FILTER_TYPES", false]], "event_list_meta() (gammapy.datasets.mapdataseteventsampler static method)": [[104, "gammapy.datasets.MapDatasetEventSampler.event_list_meta", false]], "event_list_meta() (gammapy.datasets.observationeventsampler static method)": [[110, "gammapy.datasets.ObservationEventSampler.event_list_meta", false]], "eventlist (class in gammapy.data)": [[83, "gammapy.data.EventList", false]], "eventlistmetadata (class in gammapy.data)": [[84, "gammapy.data.EventListMetaData", false]], "events (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.events", false]], "evolved (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.evolved", false]], "evolved (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.evolved", false]], "evolved (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.evolved", false]], "evolved (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.evolved", false]], "evolved (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.evolved", false]], "evolved (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.evolved", false]], "excess (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.excess", false]], "excess (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.excess", false]], "excess (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.excess", false]], "excess (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.excess", false]], "excess (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.excess", false]], "excessmapestimator (class in gammapy.estimators)": [[125, "gammapy.estimators.ExcessMapEstimator", false]], "expand_map() (gammapy.estimators.lightcurveestimator static method)": [[133, "gammapy.estimators.LightCurveEstimator.expand_map", false]], "expcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel", false]], "expcutoffpowerlawnormspectralmodel (class in gammapy.modeling.models)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel", false]], "expcutoffpowerlawspectralmodel (class in gammapy.modeling.models)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel", false]], "expdecaytemporalmodel (class in gammapy.modeling.models)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.expfactor", false]], "expfactor (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.expfactor", false]], "exponential (class in gammapy.astro.population)": [[29, "gammapy.astro.population.Exponential", false]], "exposure (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.exposure", false]], "exposure (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.exposure", false]], "exposure (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.exposure", false]], "exposure (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.exposure", false]], "exposure (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.exposure", false]], "extend() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.extend", false]], "extend() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.extend", false]], "extend() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.extend", false]], "f0 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f0", false]], "f1 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f1", false]], "f2 (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.f2", false]], "f_cash_root_cython() (in module gammapy.stats)": [[304, "gammapy.stats.f_cash_root_cython", false]], "factor (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.factor", false]], "factor (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.factor", false]], "factor_max (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.factor_max", false]], "factor_max (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.factor_max", false]], "factor_min (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.factor_min", false]], "factor_min (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.factor_min", false]], "fake() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.fake", false]], "fake() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.fake", false]], "fake() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.fake", false]], "fake() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.fake", false]], "fake() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.fake", false]], "faucherkaspi2006 (class in gammapy.astro.population)": [[30, "gammapy.astro.population.FaucherKaspi2006", false]], "faucherkaspi2006velocitybimodal (class in gammapy.astro.population)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal", false]], "faucherkaspi2006velocitymaxwellian (class in gammapy.astro.population)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian", false]], "faucherspiral (class in gammapy.astro.population)": [[33, "gammapy.astro.population.FaucherSpiral", false]], "fermipydatasetsreader (class in gammapy.datasets)": [[101, "gammapy.datasets.FermipyDatasetsReader", false]], "field() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.field", false]], "field() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.field", false]], "fill_by_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.fill_by_coord", false]], "fill_by_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.fill_by_coord", false]], "fill_by_idx() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.fill_by_idx", false]], "fill_by_idx() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.fill_by_idx", false]], "fill_by_pix() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.fill_by_pix", false]], "fill_by_pix() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.fill_by_pix", false]], "fill_events() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.fill_events", false]], "fill_events() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.fill_events", false]], "fill_events() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.fill_events", false]], "fill_events() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.fill_events", false]], "fill_events() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.fill_events", false]], "fill_events() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.fill_events", false]], "filled() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.filled", false]], "filled() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.filled", false]], "filter_events() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_events", false]], "filter_gti() (gammapy.data.observationfilter method)": [[89, "gammapy.data.ObservationFilter.filter_gti", false]], "filter_success_nan (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.filter_success_nan", false]], "filter_success_nan (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.filter_success_nan", false]], "find_peaks() (in module gammapy.estimators.utils)": [[145, "gammapy.estimators.utils.find_peaks", false]], "find_peaks_in_flux_map() (in module gammapy.estimators.utils)": [[146, "gammapy.estimators.utils.find_peaks_in_flux_map", false]], "fit (class in gammapy.modeling)": [[215, "gammapy.modeling.Fit", false]], "fit_deriv (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fit_deriv", false]], "fit_deriv (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fit_deriv", false]], "fit_deriv (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fit_deriv", false]], "fit_deriv (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fit_deriv", false]], "fit_deriv (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fit_deriv", false]], "fit_deriv (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fit_deriv", false]], "fitresult (class in gammapy.modeling)": [[216, "gammapy.modeling.FitResult", false]], "fittable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fittable", false]], "fittable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fittable", false]], "fittable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fittable", false]], "fittable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fittable", false]], "fittable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fittable", false]], "fittable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fittable", false]], "fittable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fittable", false]], "fixed (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.fixed", false]], "fixed (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.fixed", false]], "fixed (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.fixed", false]], "fixed (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.fixed", false]], "fixed (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.fixed", false]], "fixed (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.fixed", false]], "fixed (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.fixed", false]], "fixed_altaz (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_altaz", false]], "fixed_icrs (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.fixed_icrs", false]], "fixedpointinginfo (class in gammapy.data)": [[85, "gammapy.data.FixedPointingInfo", false]], "flat (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.flat", false]], "flux (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux", false]], "flux (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux", false]], "flux_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_err", false]], "flux_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_err", false]], "flux_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_errn", false]], "flux_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_errn", false]], "flux_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_errp", false]], "flux_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_errp", false]], "flux_points (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points", false]], "flux_points (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_meta", false]], "flux_points_meta (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_meta", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.flux_points_table", false]], "flux_points_table (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.flux_points_table", false]], "flux_pred() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.flux_pred", false]], "flux_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_ref", false]], "flux_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_ref", false]], "flux_sensitivity (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_sensitivity", false]], "flux_sensitivity (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_sensitivity", false]], "flux_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.flux_ul", false]], "flux_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.flux_ul", false]], "fluxmaps (class in gammapy.estimators)": [[126, "gammapy.estimators.FluxMaps", false]], "fluxmetadata (class in gammapy.estimators)": [[127, "gammapy.estimators.FluxMetaData", false]], "fluxpoints (class in gammapy.estimators)": [[128, "gammapy.estimators.FluxPoints", false]], "fluxpointsdataset (class in gammapy.datasets)": [[102, "gammapy.datasets.FluxPointsDataset", false]], "fluxpointsestimator (class in gammapy.estimators)": [[129, "gammapy.estimators.FluxPointsEstimator", false]], "fluxprofileestimator (class in gammapy.estimators)": [[130, "gammapy.estimators.FluxProfileEstimator", false]], "footprint (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.footprint", false]], "footprint_rectangle_sky_region (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.footprint_rectangle_sky_region", false]], "format_plot_xaxis() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.format_plot_xaxis", false]], "format_plot_xaxis() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.format_plot_xaxis", false]], "format_plot_yaxis() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.format_plot_yaxis", false]], "fov": [[584, "term-FoV", true]], "fov background": [[584, "term-FoV-Background", true]], "fov_alignment (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.fov_alignment", false]], "fov_alignment (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.fov_alignment", false]], "fov_alignment (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.fov_alignment", false]], "fov_alignment (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.fov_alignment", false]], "fov_alignment (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.fov_alignment", false]], "fov_alignment (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.fov_alignment", false]], "fov_alignment (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.fov_alignment", false]], "fov_alignment (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.fov_alignment", false]], "fov_alignment (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.fov_alignment", false]], "fov_alignment (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.fov_alignment", false]], "fov_alignment (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.fov_alignment", false]], "fov_to_sky() (in module gammapy.utils.coordinates)": [[315, "gammapy.utils.coordinates.fov_to_sky", false]], "fovalignment (class in gammapy.irf)": [[160, "gammapy.irf.FoVAlignment", false]], "fovbackgroundmaker (class in gammapy.makers)": [[174, "gammapy.makers.FoVBackgroundMaker", false]], "fovbackgroundmodel (class in gammapy.modeling.models)": [[236, "gammapy.modeling.models.FoVBackgroundModel", false]], "frame (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.frame", false]], "frame (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.frame", false]], "frame (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.frame", false]], "frame (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.frame", false]], "frame (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.frame", false]], "frame (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.frame", false]], "frame (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.frame", false]], "free_parameters (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.free_parameters", false]], "free_parameters (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.free_parameters", false]], "freeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.freeze", false]], "freeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.freeze", false]], "freeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.constanttemporalmodel method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.freeze", false]], "freeze() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianprior method)": [[237, "gammapy.modeling.models.GaussianPrior.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.lineartemporalmodel method)": [[244, "gammapy.modeling.models.LinearTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.loguniformprior method)": [[247, "gammapy.modeling.models.LogUniformPrior.freeze", false]], "freeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.modelbase method)": [[251, "gammapy.modeling.models.ModelBase.freeze", false]], "freeze() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.freeze", false]], "freeze() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.prior method)": [[261, "gammapy.modeling.models.Prior.freeze", false]], "freeze() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.sinetemporalmodel method)": [[267, "gammapy.modeling.models.SineTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.skymodel method)": [[268, "gammapy.modeling.models.SkyModel.freeze", false]], "freeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.templatenpredmodel method)": [[278, "gammapy.modeling.models.TemplateNPredModel.freeze", false]], "freeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.freeze", false]], "freeze() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.freeze", false]], "freeze() (gammapy.modeling.models.temporalmodel method)": [[282, "gammapy.modeling.models.TemporalModel.freeze", false]], "freeze() (gammapy.modeling.models.uniformprior method)": [[283, "gammapy.modeling.models.UniformPrior.freeze", false]], "freeze_all() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.freeze_all", false]], "freeze_all() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.freeze_all", false]], "from_aligned() (gammapy.maps.wcsgeom class method)": [[208, "gammapy.maps.WcsGeom.from_aligned", false]], "from_bounds() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_bounds", false]], "from_default() (gammapy.maps.mapaxes class method)": [[201, "gammapy.maps.MapAxes.from_default", false]], "from_diagonal_response() (gammapy.irf.edispkernel class method)": [[154, "gammapy.irf.EDispKernel.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.from_diagonal_response", false]], "from_diagonal_response() (gammapy.irf.edispmap class method)": [[156, "gammapy.irf.EDispMap.from_diagonal_response", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_dict", false]], "from_dict() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_dict", false]], "from_dict() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_dict", false]], "from_dict() (gammapy.datasets.mapdatasetweighted class method)": [[107, "gammapy.datasets.MapDatasetWeighted.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.from_dict", false]], "from_dict() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_dict", false]], "from_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.compoundspectralmodel class method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspatialmodel class method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constantspectralmodel class method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.constanttemporalmodel class method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.datasetmodels class method)": [[228, "gammapy.modeling.models.DatasetModels.from_dict", false]], "from_dict() (gammapy.modeling.models.diskspatialmodel class method)": [[229, "gammapy.modeling.models.DiskSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.fovbackgroundmodel class method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianprior class method)": [[237, "gammapy.modeling.models.GaussianPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspatialmodel class method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussianspectralmodel class method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.lineartemporalmodel class method)": [[244, "gammapy.modeling.models.LinearTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.loguniformprior class method)": [[247, "gammapy.modeling.models.LogUniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.model static method)": [[250, "gammapy.modeling.models.Model.from_dict", false]], "from_dict() (gammapy.modeling.models.modelbase class method)": [[251, "gammapy.modeling.models.ModelBase.from_dict", false]], "from_dict() (gammapy.modeling.models.models class method)": [[252, "gammapy.modeling.models.Models.from_dict", false]], "from_dict() (gammapy.modeling.models.naimaspectralmodel class method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.pointspatialmodel class method)": [[256, "gammapy.modeling.models.PointSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawspectralmodel class method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.prior class method)": [[261, "gammapy.modeling.models.Prior.from_dict", false]], "from_dict() (gammapy.modeling.models.scalespectralmodel class method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shell2spatialmodel class method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.shellspatialmodel class method)": [[266, "gammapy.modeling.models.ShellSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.sinetemporalmodel class method)": [[267, "gammapy.modeling.models.SineTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.skymodel class method)": [[268, "gammapy.modeling.models.SkyModel.from_dict", false]], "from_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spatialmodel class method)": [[270, "gammapy.modeling.models.SpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.spectralmodel class method)": [[271, "gammapy.modeling.models.SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspatialmodel class method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatendspectralmodel class method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatenpredmodel class method)": [[278, "gammapy.modeling.models.TemplateNPredModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespatialmodel class method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.from_dict", false]], "from_dict() (gammapy.modeling.models.templatespectralmodel class method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.from_dict", false]], "from_dict() (gammapy.modeling.models.temporalmodel class method)": [[282, "gammapy.modeling.models.TemporalModel.from_dict", false]], "from_dict() (gammapy.modeling.models.uniformprior class method)": [[283, "gammapy.modeling.models.UniformPrior.from_dict", false]], "from_dict() (gammapy.modeling.parameters class method)": [[219, "gammapy.modeling.Parameters.from_dict", false]], "from_dict() (gammapy.modeling.priorparameters class method)": [[221, "gammapy.modeling.PriorParameters.from_dict", false]], "from_dir() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_dir", false]], "from_edges() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_edges", false]], "from_edisp_kernel() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.from_edisp_kernel", false]], "from_energy_bounds() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_energy_bounds", false]], "from_energy_edges() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_energy_edges", false]], "from_events_files() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_events_files", false]], "from_factor_matrix() (gammapy.modeling.covariance class method)": [[213, "gammapy.modeling.Covariance.from_factor_matrix", false]], "from_file() (gammapy.data.datastore class method)": [[82, "gammapy.data.DataStore.from_file", false]], "from_fits_header() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.from_fits_header", false]], "from_gauss() (gammapy.irf.edispkernel class method)": [[154, "gammapy.irf.EDispKernel.from_gauss", false]], "from_gauss() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.from_gauss", false]], "from_gauss() (gammapy.irf.energydispersion2d class method)": [[159, "gammapy.irf.EnergyDispersion2D.from_gauss", false]], "from_gauss() (gammapy.irf.psfkernel class method)": [[165, "gammapy.irf.PSFKernel.from_gauss", false]], "from_gauss() (gammapy.irf.psfmap class method)": [[167, "gammapy.irf.PSFMap.from_gauss", false]], "from_gauss() (gammapy.irf.recopsfmap class method)": [[170, "gammapy.irf.RecoPSFMap.from_gauss", false]], "from_geom() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.from_geom", false]], "from_geom() (gammapy.irf.edispmap class method)": [[156, "gammapy.irf.EDispMap.from_geom", false]], "from_geom() (gammapy.irf.psfmap class method)": [[167, "gammapy.irf.PSFMap.from_geom", false]], "from_geom() (gammapy.irf.recopsfmap class method)": [[170, "gammapy.irf.RecoPSFMap.from_geom", false]], "from_geom() (gammapy.maps.hpxmap static method)": [[197, "gammapy.maps.HpxMap.from_geom", false]], "from_geom() (gammapy.maps.hpxndmap static method)": [[198, "gammapy.maps.HpxNDMap.from_geom", false]], "from_geom() (gammapy.maps.map static method)": [[200, "gammapy.maps.Map.from_geom", false]], "from_geom() (gammapy.maps.maps class method)": [[204, "gammapy.maps.Maps.from_geom", false]], "from_geom() (gammapy.maps.regionndmap static method)": [[206, "gammapy.maps.RegionNDMap.from_geom", false]], "from_geom() (gammapy.maps.wcsmap static method)": [[209, "gammapy.maps.WcsMap.from_geom", false]], "from_geom() (gammapy.maps.wcsndmap static method)": [[210, "gammapy.maps.WcsNDMap.from_geom", false]], "from_geoms() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_geoms", false]], "from_geoms() (gammapy.datasets.mapdatasetweighted class method)": [[107, "gammapy.datasets.MapDatasetWeighted.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.from_geoms", false]], "from_geoms() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_geoms", false]], "from_gti() (gammapy.maps.timemapaxis class method)": [[207, "gammapy.maps.TimeMapAxis.from_gti", false]], "from_gti_bounds() (gammapy.maps.timemapaxis class method)": [[207, "gammapy.maps.TimeMapAxis.from_gti_bounds", false]], "from_hdu() (gammapy.maps.hpxgeom class method)": [[196, "gammapy.maps.HpxGeom.from_hdu", false]], "from_hdu() (gammapy.maps.hpxndmap class method)": [[198, "gammapy.maps.HpxNDMap.from_hdu", false]], "from_hdu() (gammapy.maps.wcsndmap class method)": [[210, "gammapy.maps.WcsNDMap.from_hdu", false]], "from_hdulist() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.datasets.mapdatasetweighted class method)": [[107, "gammapy.datasets.MapDatasetWeighted.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.from_hdulist", false]], "from_hdulist() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.from_hdulist", false]], "from_hdulist() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_hdulist", false]], "from_hdulist() (gammapy.irf.background2d class method)": [[151, "gammapy.irf.Background2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.background3d class method)": [[152, "gammapy.irf.Background3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.backgroundirf class method)": [[153, "gammapy.irf.BackgroundIRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernel class method)": [[154, "gammapy.irf.EDispKernel.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.edispmap class method)": [[156, "gammapy.irf.EDispMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.effectiveareatable2d class method)": [[157, "gammapy.irf.EffectiveAreaTable2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydependentmultigausspsf class method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.energydispersion2d class method)": [[159, "gammapy.irf.EnergyDispersion2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.irf class method)": [[161, "gammapy.irf.IRF.from_hdulist", false]], "from_hdulist() (gammapy.irf.irfmap class method)": [[162, "gammapy.irf.IRFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.parametricpsf class method)": [[168, "gammapy.irf.ParametricPSF.from_hdulist", false]], "from_hdulist() (gammapy.irf.psf3d class method)": [[164, "gammapy.irf.PSF3D.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfking class method)": [[166, "gammapy.irf.PSFKing.from_hdulist", false]], "from_hdulist() (gammapy.irf.psfmap class method)": [[167, "gammapy.irf.PSFMap.from_hdulist", false]], "from_hdulist() (gammapy.irf.radmax2d class method)": [[169, "gammapy.irf.RadMax2D.from_hdulist", false]], "from_hdulist() (gammapy.irf.recopsfmap class method)": [[170, "gammapy.irf.RecoPSFMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.geom class method)": [[195, "gammapy.maps.Geom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxgeom class method)": [[196, "gammapy.maps.HpxGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxmap class method)": [[197, "gammapy.maps.HpxMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.hpxndmap class method)": [[198, "gammapy.maps.HpxNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.map static method)": [[200, "gammapy.maps.Map.from_hdulist", false]], "from_hdulist() (gammapy.maps.maps class method)": [[204, "gammapy.maps.Maps.from_hdulist", false]], "from_hdulist() (gammapy.maps.regiongeom class method)": [[205, "gammapy.maps.RegionGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.regionndmap class method)": [[206, "gammapy.maps.RegionNDMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsgeom class method)": [[208, "gammapy.maps.WcsGeom.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsmap class method)": [[209, "gammapy.maps.WcsMap.from_hdulist", false]], "from_hdulist() (gammapy.maps.wcsndmap class method)": [[210, "gammapy.maps.WcsNDMap.from_hdulist", false]], "from_header() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_header", false]], "from_header() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_header", false]], "from_header() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_header", false]], "from_header() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.from_header", false]], "from_header() (gammapy.maps.hpxgeom class method)": [[196, "gammapy.maps.HpxGeom.from_header", false]], "from_header() (gammapy.maps.wcsgeom class method)": [[208, "gammapy.maps.WcsGeom.from_header", false]], "from_irf() (gammapy.irf.radmax2d class method)": [[169, "gammapy.irf.RadMax2D.from_irf", false]], "from_log10() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_log10", false]], "from_log10() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.from_log10", false]], "from_map_dataset() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.from_map_dataset", false]], "from_map_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_map_dataset", false]], "from_maps() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.from_maps", false]], "from_maps() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_maps", false]], "from_nodes() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_nodes", false]], "from_orm() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_orm", false]], "from_orm() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.from_orm", false]], "from_orm() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.from_orm", false]], "from_orm() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.from_orm", false]], "from_orm() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.from_orm", false]], "from_pandas() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.from_pandas", false]], "from_pandas() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.from_pandas", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel class method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel class method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.from_parameters", false]], "from_parameters() (gammapy.astro.darkmatter.primaryflux class method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.from_parameters", false]], "from_parameters() (gammapy.modeling.models.brokenpowerlawspectralmodel class method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.compoundspectralmodel class method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspatialmodel class method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constantspectralmodel class method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.constanttemporalmodel class method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.diskspatialmodel class method)": [[229, "gammapy.modeling.models.DiskSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel class method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel class method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expcutoffpowerlawspectralmodel class method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.expdecaytemporalmodel class method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.fovbackgroundmodel class method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianprior class method)": [[237, "gammapy.modeling.models.GaussianPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspatialmodel class method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussianspectralmodel class method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.gaussiantemporalmodel class method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.generalizedgaussiantemporalmodel class method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.lineartemporalmodel class method)": [[244, "gammapy.modeling.models.LinearTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolanormspectralmodel class method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.logparabolaspectralmodel class method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.loguniformprior class method)": [[247, "gammapy.modeling.models.LogUniformPrior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.meyercrabspectralmodel class method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.modelbase class method)": [[251, "gammapy.modeling.models.ModelBase.from_parameters", false]], "from_parameters() (gammapy.modeling.models.naimaspectralmodel class method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.piecewisenormspectralmodel class method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.pointspatialmodel class method)": [[256, "gammapy.modeling.models.PointSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlaw2spectralmodel class method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawnormspectralmodel class method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawspectralmodel class method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.powerlawtemporalmodel class method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.prior class method)": [[261, "gammapy.modeling.models.Prior.from_parameters", false]], "from_parameters() (gammapy.modeling.models.scalespectralmodel class method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shell2spatialmodel class method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.shellspatialmodel class method)": [[266, "gammapy.modeling.models.ShellSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.sinetemporalmodel class method)": [[267, "gammapy.modeling.models.SineTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.skymodel class method)": [[268, "gammapy.modeling.models.SkyModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel class method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spatialmodel class method)": [[270, "gammapy.modeling.models.SpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.spectralmodel class method)": [[271, "gammapy.modeling.models.SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel class method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel class method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel class method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspatialmodel class method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatendspectralmodel class method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatenpredmodel class method)": [[278, "gammapy.modeling.models.TemplateNPredModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespatialmodel class method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.templatespectralmodel class method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.temporalmodel class method)": [[282, "gammapy.modeling.models.TemporalModel.from_parameters", false]], "from_parameters() (gammapy.modeling.models.uniformprior class method)": [[283, "gammapy.modeling.models.UniformPrior.from_parameters", false]], "from_parametrization() (gammapy.irf.effectiveareatable2d class method)": [[157, "gammapy.irf.EffectiveAreaTable2D.from_parametrization", false]], "from_position() (gammapy.modeling.models.constantfluxspatialmodel class method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.constantspatialmodel class method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.diskspatialmodel class method)": [[229, "gammapy.modeling.models.DiskSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.gaussianspatialmodel class method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.generalizedgaussianspatialmodel class method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.piecewisenormspatialmodel class method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.pointspatialmodel class method)": [[256, "gammapy.modeling.models.PointSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shell2spatialmodel class method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.shellspatialmodel class method)": [[266, "gammapy.modeling.models.ShellSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.spatialmodel class method)": [[270, "gammapy.modeling.models.SpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatendspatialmodel class method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.from_position", false]], "from_position() (gammapy.modeling.models.templatespatialmodel class method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.from_position", false]], "from_region() (gammapy.modeling.models.diskspatialmodel class method)": [[229, "gammapy.modeling.models.DiskSpatialModel.from_region", false]], "from_region_map() (gammapy.modeling.models.templatespectralmodel class method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.from_region_map", false]], "from_regions() (gammapy.maps.regiongeom class method)": [[205, "gammapy.maps.RegionGeom.from_regions", false]], "from_spatial_model() (gammapy.irf.psfkernel class method)": [[165, "gammapy.irf.PSFKernel.from_spatial_model", false]], "from_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.from_spectrum_dataset", false]], "from_stack() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.from_stack", false]], "from_stack() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_stack", false]], "from_stack() (gammapy.data.observations class method)": [[92, "gammapy.data.Observations.from_stack", false]], "from_stack() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.from_stack", false]], "from_stack() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_stack", false]], "from_stack() (gammapy.maps.hpxmap class method)": [[197, "gammapy.maps.HpxMap.from_stack", false]], "from_stack() (gammapy.maps.hpxndmap class method)": [[198, "gammapy.maps.HpxNDMap.from_stack", false]], "from_stack() (gammapy.maps.labelmapaxis class method)": [[199, "gammapy.maps.LabelMapAxis.from_stack", false]], "from_stack() (gammapy.maps.map class method)": [[200, "gammapy.maps.Map.from_stack", false]], "from_stack() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_stack", false]], "from_stack() (gammapy.maps.regionndmap class method)": [[206, "gammapy.maps.RegionNDMap.from_stack", false]], "from_stack() (gammapy.maps.wcsmap class method)": [[209, "gammapy.maps.WcsMap.from_stack", false]], "from_stack() (gammapy.maps.wcsndmap class method)": [[210, "gammapy.maps.WcsNDMap.from_stack", false]], "from_stack() (gammapy.modeling.covariance class method)": [[213, "gammapy.modeling.Covariance.from_stack", false]], "from_stack() (gammapy.modeling.parameters class method)": [[219, "gammapy.modeling.Parameters.from_stack", false]], "from_stack() (gammapy.modeling.priorparameters class method)": [[221, "gammapy.modeling.PriorParameters.from_stack", false]], "from_table() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.from_table", false]], "from_table() (gammapy.irf.background2d class method)": [[151, "gammapy.irf.Background2D.from_table", false]], "from_table() (gammapy.irf.background3d class method)": [[152, "gammapy.irf.Background3D.from_table", false]], "from_table() (gammapy.irf.backgroundirf class method)": [[153, "gammapy.irf.BackgroundIRF.from_table", false]], "from_table() (gammapy.irf.edispkernel class method)": [[154, "gammapy.irf.EDispKernel.from_table", false]], "from_table() (gammapy.irf.effectiveareatable2d class method)": [[157, "gammapy.irf.EffectiveAreaTable2D.from_table", false]], "from_table() (gammapy.irf.energydependentmultigausspsf class method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.from_table", false]], "from_table() (gammapy.irf.energydispersion2d class method)": [[159, "gammapy.irf.EnergyDispersion2D.from_table", false]], "from_table() (gammapy.irf.irf class method)": [[161, "gammapy.irf.IRF.from_table", false]], "from_table() (gammapy.irf.parametricpsf class method)": [[168, "gammapy.irf.ParametricPSF.from_table", false]], "from_table() (gammapy.irf.psf3d class method)": [[164, "gammapy.irf.PSF3D.from_table", false]], "from_table() (gammapy.irf.psfking class method)": [[166, "gammapy.irf.PSFKing.from_table", false]], "from_table() (gammapy.irf.radmax2d class method)": [[169, "gammapy.irf.RadMax2D.from_table", false]], "from_table() (gammapy.maps.labelmapaxis class method)": [[199, "gammapy.maps.LabelMapAxis.from_table", false]], "from_table() (gammapy.maps.mapaxes class method)": [[201, "gammapy.maps.MapAxes.from_table", false]], "from_table() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_table", false]], "from_table() (gammapy.maps.regionndmap class method)": [[206, "gammapy.maps.RegionNDMap.from_table", false]], "from_table() (gammapy.maps.timemapaxis class method)": [[207, "gammapy.maps.TimeMapAxis.from_table", false]], "from_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.from_table", false]], "from_table_hdu() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxes class method)": [[201, "gammapy.maps.MapAxes.from_table_hdu", false]], "from_table_hdu() (gammapy.maps.mapaxis class method)": [[202, "gammapy.maps.MapAxis.from_table_hdu", false]], "from_time_bounds() (gammapy.maps.timemapaxis class method)": [[207, "gammapy.maps.TimeMapAxis.from_time_bounds", false]], "from_time_edges() (gammapy.maps.timemapaxis class method)": [[207, "gammapy.maps.TimeMapAxis.from_time_edges", false]], "from_time_intervals() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.from_time_intervals", false]], "from_wcs_tiles() (gammapy.maps.hpxndmap class method)": [[198, "gammapy.maps.HpxNDMap.from_wcs_tiles", false]], "from_yaml() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.from_yaml", false]], "from_yaml() (gammapy.modeling.models.datasetmodels class method)": [[228, "gammapy.modeling.models.DatasetModels.from_yaml", false]], "from_yaml() (gammapy.modeling.models.models class method)": [[252, "gammapy.modeling.models.Models.from_yaml", false]], "from_yaml() (in module gammapy.utils.scripts)": [[349, "gammapy.utils.scripts.from_yaml", false]], "frozen (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.frozen", false]], "frozen (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.frozen", false]], "frozen (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.compoundspectralmodel attribute)": [[223, "gammapy.modeling.models.CompoundSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.constantspectralmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.constanttemporalmodel attribute)": [[227, "gammapy.modeling.models.ConstantTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.datasetmodels attribute)": [[228, "gammapy.modeling.models.DatasetModels.frozen", false]], "frozen (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.fovbackgroundmodel attribute)": [[236, "gammapy.modeling.models.FoVBackgroundModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianprior attribute)": [[237, "gammapy.modeling.models.GaussianPrior.frozen", false]], "frozen (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.loguniformprior attribute)": [[247, "gammapy.modeling.models.LogUniformPrior.frozen", false]], "frozen (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.modelbase attribute)": [[251, "gammapy.modeling.models.ModelBase.frozen", false]], "frozen (gammapy.modeling.models.models attribute)": [[252, "gammapy.modeling.models.Models.frozen", false]], "frozen (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.prior attribute)": [[261, "gammapy.modeling.models.Prior.frozen", false]], "frozen (gammapy.modeling.models.scalespectralmodel attribute)": [[264, "gammapy.modeling.models.ScaleSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.frozen", false]], "frozen (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.frozen", false]], "frozen (gammapy.modeling.models.spectralmodel attribute)": [[271, "gammapy.modeling.models.SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.frozen", false]], "frozen (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatendspectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.frozen", false]], "frozen (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.frozen", false]], "frozen (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.frozen", false]], "frozen (gammapy.modeling.models.templatespectralmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpectralModel.frozen", false]], "frozen (gammapy.modeling.models.temporalmodel attribute)": [[282, "gammapy.modeling.models.TemporalModel.frozen", false]], "frozen (gammapy.modeling.models.uniformprior attribute)": [[283, "gammapy.modeling.models.UniformPrior.frozen", false]], "frozen (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.frozen", false]], "frozen (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.frozen", false]], "gadf": [[584, "term-GADF", true]], "galactic (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic", false]], "galactic() (in module gammapy.utils.coordinates)": [[316, "gammapy.utils.coordinates.galactic", false]], "galactic_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.galactic_median", false]], "gammapy command line option": [[11, "cmdoption-gammapy-ignore-warnings", false], [11, "cmdoption-gammapy-log-level", false], [11, "cmdoption-gammapy-version", false]], "gammapy-analysis-config command line option": [[11, "cmdoption-gammapy-analysis-config-filename", false], [11, "cmdoption-gammapy-analysis-config-overwrite", false]], "gammapy-analysis-run command line option": [[11, "cmdoption-gammapy-analysis-run-filename", false], [11, "cmdoption-gammapy-analysis-run-out", false], [11, "cmdoption-gammapy-analysis-run-overwrite", false]], "gammapy-download-datasets command line option": [[11, "cmdoption-gammapy-download-datasets-out", false], [11, "cmdoption-gammapy-download-datasets-release", false]], "gammapy-download-notebooks command line option": [[11, "cmdoption-gammapy-download-notebooks-out", false], [11, "cmdoption-gammapy-download-notebooks-release", false]], "gammapy-info command line option": [[11, "cmdoption-gammapy-info-dependencies", false], [11, "cmdoption-gammapy-info-envvar", false], [11, "cmdoption-gammapy-info-system", false], [11, "cmdoption-gammapy-info-version", false]], "gammapy-workflow-config command line option": [[11, "cmdoption-gammapy-workflow-config-filename", false], [11, "cmdoption-gammapy-workflow-config-overwrite", false]], "gammapy-workflow-run command line option": [[11, "cmdoption-gammapy-workflow-run-filename", false]], "gammapy.analysis": [[0, "module-gammapy.analysis", false]], "gammapy.astro.darkmatter": [[1, "module-gammapy.astro.darkmatter", false]], "gammapy.astro.population": [[1, "module-gammapy.astro.population", false]], "gammapy.astro.source": [[1, "module-gammapy.astro.source", false]], "gammapy.catalog": [[2, "module-gammapy.catalog", false]], "gammapy.data": [[3, "module-gammapy.data", false]], "gammapy.datasets": [[4, "module-gammapy.datasets", false]], "gammapy.datasets.utils": [[4, "module-gammapy.datasets.utils", false]], "gammapy.estimators": [[5, "module-gammapy.estimators", false]], "gammapy.estimators.utils": [[5, "module-gammapy.estimators.utils", false]], "gammapy.irf": [[7, "module-gammapy.irf", false]], "gammapy.makers": [[8, "module-gammapy.makers", false]], "gammapy.makers.utils": [[8, "module-gammapy.makers.utils", false]], "gammapy.maps": [[9, "module-gammapy.maps", false]], "gammapy.modeling": [[10, "module-gammapy.modeling", false]], "gammapy.modeling.models": [[10, "module-gammapy.modeling.models", false]], "gammapy.modeling.models.utils": [[10, "module-gammapy.modeling.models.utils", false]], "gammapy.stats": [[12, "module-gammapy.stats", false]], "gammapy.utils.cluster": [[13, "module-gammapy.utils.cluster", false]], "gammapy.utils.coordinates": [[13, "module-gammapy.utils.coordinates", false]], "gammapy.utils.fits": [[13, "module-gammapy.utils.fits", false]], "gammapy.utils.integrate": [[13, "module-gammapy.utils.integrate", false]], "gammapy.utils.interpolation": [[13, "module-gammapy.utils.interpolation", false]], "gammapy.utils.parallel": [[13, "module-gammapy.utils.parallel", false]], "gammapy.utils.random": [[13, "module-gammapy.utils.random", false]], "gammapy.utils.regions": [[13, "module-gammapy.utils.regions", false]], "gammapy.utils.scripts": [[13, "module-gammapy.utils.scripts", false]], "gammapy.utils.table": [[13, "module-gammapy.utils.table", false]], "gammapy.utils.testing": [[13, "module-gammapy.utils.testing", false]], "gammapy.utils.time": [[13, "module-gammapy.utils.time", false]], "gammapy.utils.units": [[13, "module-gammapy.utils.units", false]], "gammapy.visualization": [[14, "module-gammapy.visualization", false]], "gaussian_component() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.gaussian_component", false]], "gaussianprior (class in gammapy.modeling.models)": [[237, "gammapy.modeling.models.GaussianPrior", false]], "gaussianspatialmodel (class in gammapy.modeling.models)": [[238, "gammapy.modeling.models.GaussianSpatialModel", false]], "gaussianspectralmodel (class in gammapy.modeling.models)": [[239, "gammapy.modeling.models.GaussianSpectralModel", false]], "gaussiantemporalmodel (class in gammapy.modeling.models)": [[240, "gammapy.modeling.models.GaussianTemporalModel", false]], "generalizedgaussianspatialmodel (class in gammapy.modeling.models)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel", false]], "generalizedgaussiantemporalmodel (class in gammapy.modeling.models)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel", false]], "geom (class in gammapy.maps)": [[195, "gammapy.maps.Geom", false]], "geom (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.geom", false]], "geom (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.geom", false]], "geom (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.geom", false]], "geom (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.geom", false]], "geom (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.geom", false]], "geom (gammapy.maps.maps attribute)": [[204, "gammapy.maps.Maps.geom", false]], "geom (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.geom", false]], "geom (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.geom", false]], "geom (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.geom", false]], "geoms (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.geoms", false]], "geoms (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.geoms", false]], "geoms (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.geoms", false]], "geoms (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.geoms", false]], "geoms (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.geoms", false]], "get() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.get", false]], "get_altaz() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_altaz", false]], "get_altaz() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_altaz", false]], "get_bias() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.get_bias", false]], "get_bias_energy() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.get_bias_energy", false]], "get_bounding_box() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.get_bounding_box", false]], "get_bounding_box() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.get_bounding_box", false]], "get_by_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_by_coord", false]], "get_by_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_by_coord", false]], "get_by_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_by_coord", false]], "get_by_idx() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_by_idx", false]], "get_by_idx() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_by_idx", false]], "get_by_idx() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_by_idx", false]], "get_by_pix() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_by_pix", false]], "get_by_pix() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_by_pix", false]], "get_by_pix() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_by_pix", false]], "get_combined_flux_maps() (in module gammapy.estimators.utils)": [[147, "gammapy.estimators.utils.get_combined_flux_maps", false]], "get_combined_significance_maps() (in module gammapy.estimators.utils)": [[148, "gammapy.estimators.utils.get_combined_significance_maps", false]], "get_coord() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.get_coord", false]], "get_coord() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.get_coord", false]], "get_coord() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.get_coord", false]], "get_coord() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.get_coord", false]], "get_coord() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.get_coord", false]], "get_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_datasets", false]], "get_edisp_kernel() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.get_edisp_kernel", false]], "get_edisp_kernel() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.get_edisp_kernel", false]], "get_excess_map() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_excess_map", false]], "get_filenames() (gammapy.datasets.ogipdatasetreader method)": [[108, "gammapy.datasets.OGIPDatasetReader.get_filenames", false]], "get_filenames() (gammapy.datasets.ogipdatasetwriter static method)": [[109, "gammapy.datasets.OGIPDatasetWriter.get_filenames", false]], "get_flux_points() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.get_flux_points", false]], "get_flux_points() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.get_flux_points", false]], "get_hdu() (gammapy.utils.fits.hdulocation method)": [[321, "gammapy.utils.fits.HDULocation.get_hdu", false]], "get_icrs() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.get_icrs", false]], "get_icrs() (gammapy.data.pointinginfo method)": [[94, "gammapy.data.PointingInfo.get_icrs", false]], "get_idx() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.get_idx", false]], "get_idx() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.get_idx", false]], "get_idx() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.get_idx", false]], "get_idx() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.get_idx", false]], "get_image_by_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_image_by_coord", false]], "get_image_by_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_image_by_coord", false]], "get_image_by_idx() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_image_by_idx", false]], "get_image_by_idx() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_image_by_idx", false]], "get_image_by_pix() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_image_by_pix", false]], "get_image_by_pix() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_image_by_pix", false]], "get_images_paths() (in module gammapy.utils.scripts)": [[350, "gammapy.utils.scripts.get_images_paths", false]], "get_index_list() (gammapy.maps.hpxgeom static method)": [[196, "gammapy.maps.HpxGeom.get_index_list", false]], "get_irfs_features() (in module gammapy.data)": [[96, "gammapy.data.get_irfs_features", false]], "get_kernels() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.get_kernels", false]], "get_light_curve() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_light_curve", false]], "get_mean() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.get_mean", false]], "get_observations() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.get_observations", false]], "get_observations() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.get_observations", false]], "get_ogip_meta() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.get_ogip_meta", false]], "get_pix() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.get_pix", false]], "get_pointing_altaz() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_altaz", false]], "get_pointing_icrs() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.get_pointing_icrs", false]], "get_psf_kernel() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.get_psf_kernel", false]], "get_psf_kernel() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.get_psf_kernel", false]], "get_random_state() (in module gammapy.utils.random)": [[337, "gammapy.utils.random.get_random_state", false]], "get_rebinned_axis() (in module gammapy.estimators.utils)": [[149, "gammapy.estimators.utils.get_rebinned_axis", false]], "get_resolution() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.get_resolution", false]], "get_scale_model() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.get_scale_model", false]], "get_scale_model() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.get_scale_model", false]], "get_scales() (gammapy.estimators.asmoothmapestimator static method)": [[121, "gammapy.estimators.ASmoothMapEstimator.get_scales", false]], "get_spectrum() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.get_spectrum", false]], "get_spectrum() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.get_spectrum", false]], "get_spectrum() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.get_spectrum", false]], "get_subcovariance() (gammapy.modeling.covariance method)": [[213, "gammapy.modeling.Covariance.get_subcovariance", false]], "get_valid_path() (gammapy.datasets.ogipdatasetreader method)": [[108, "gammapy.datasets.OGIPDatasetReader.get_valid_path", false]], "get_wcs_coord_and_weights() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.get_wcs_coord_and_weights", false]], "get_wstat_gof_terms() (in module gammapy.stats)": [[305, "gammapy.stats.get_wstat_gof_terms", false]], "get_wstat_mu_bkg() (in module gammapy.stats)": [[306, "gammapy.stats.get_wstat_mu_bkg", false]], "global_to_local() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.global_to_local", false]], "group_by() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.group_by", false]], "group_by() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.group_by", false]], "group_by_label() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.group_by_label", false]], "group_table() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.group_table", false]], "group_table() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.group_table", false]], "group_table() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.group_table", false]], "groups (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.groups", false]], "groups (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.groups", false]], "gti": [[584, "term-GTI", true]], "gti (class in gammapy.data)": [[86, "gammapy.data.GTI", false]], "gti (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.gti", false]], "gti (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.gti", false]], "gti (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.gti", false]], "gti (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.gti", false]], "gti (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.gti", false]], "gti (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.gti", false]], "gti (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.gti", false]], "gti (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.gti", false]], "has_any_ts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_any_ts", false]], "has_any_ts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_any_ts", false]], "has_energy_axis (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.has_energy_axis", false]], "has_energy_axis (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.has_energy_axis", false]], "has_inverse() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_inverse", false]], "has_inverse() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_inverse", false]], "has_inverse() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_inverse", false]], "has_inverse() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.has_inverse", false]], "has_inverse() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_inverse", false]], "has_inverse() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_inverse", false]], "has_masked_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_columns", false]], "has_masked_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_columns", false]], "has_masked_values (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_masked_values", false]], "has_masked_values (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_masked_values", false]], "has_mixin_columns (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.has_mixin_columns", false]], "has_mixin_columns (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.has_mixin_columns", false]], "has_offset_axis (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.has_offset_axis", false]], "has_offset_axis (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.has_offset_axis", false]], "has_offset_axis (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.has_offset_axis", false]], "has_offset_axis (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.has_offset_axis", false]], "has_single_spatial_bin (gammapy.irf.edispkernelmap attribute)": [[155, "gammapy.irf.EDispKernelMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.edispmap attribute)": [[156, "gammapy.irf.EDispMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.irfmap attribute)": [[162, "gammapy.irf.IRFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.has_single_spatial_bin", false]], "has_single_spatial_bin (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.has_single_spatial_bin", false]], "has_stat_profiles (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_stat_profiles", false]], "has_stat_profiles (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_stat_profiles", false]], "has_success (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_success", false]], "has_success (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_success", false]], "has_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.has_ul", false]], "has_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.has_ul", false]], "has_user_bounding_box (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_bounding_box", false]], "has_user_bounding_box (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_bounding_box", false]], "has_user_inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.has_user_inverse", false]], "has_user_inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.has_user_inverse", false]], "hdu_class_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_class_unique", false]], "hdu_location() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.hdu_location", false]], "hdu_type_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.hdu_type_unique", false]], "hduindextable (class in gammapy.data)": [[87, "gammapy.data.HDUIndexTable", false]], "hdulocation (class in gammapy.utils.fits)": [[321, "gammapy.utils.fits.HDULocation", false]], "hierarchical_clustering() (in module gammapy.utils.cluster)": [[311, "gammapy.utils.cluster.hierarchical_clustering", false]], "hli": [[584, "term-HLI", true]], "hpxgeom (class in gammapy.maps)": [[196, "gammapy.maps.HpxGeom", false]], "hpxmap (class in gammapy.maps)": [[197, "gammapy.maps.HpxMap", false]], "hpxndmap (class in gammapy.maps)": [[198, "gammapy.maps.HpxNDMap", false]], "hstack_columns() (in module gammapy.utils.table)": [[356, "gammapy.utils.table.hstack_columns", false]], "ids (gammapy.data.observations attribute)": [[92, "gammapy.data.Observations.ids", false]], "iloc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.iloc", false]], "iloc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.iloc", false]], "imageprofile (class in gammapy.estimators)": [[131, "gammapy.estimators.ImageProfile", false]], "imageprofileestimator (class in gammapy.estimators)": [[132, "gammapy.estimators.ImageProfileEstimator", false]], "in_memory_generator() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.in_memory_generator", false]], "include_ssc (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.include_ssc", false]], "index (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.index", false]], "index (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.index", false]], "index (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.index", false]], "index (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.index", false]], "index() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.index", false]], "index() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.index", false]], "index() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.index", false]], "index() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.index", false]], "index() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.index", false]], "index() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.index", false]], "index() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.index", false]], "index1 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index1", false]], "index1 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index1", false]], "index2 (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.index2", false]], "index2 (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.index2", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_1", false]], "index_1 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_1", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.index_2", false]], "index_2 (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.index_2", false]], "index_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_column", false]], "index_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_column", false]], "index_data() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.index_data", false]], "index_mode() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.index_mode", false]], "index_mode() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.index_mode", false]], "indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.indices", false]], "indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.indices", false]], "ineqcons (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.ineqcons", false]], "ineqcons (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.ineqcons", false]], "ineqcons (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.ineqcons", false]], "ineqcons (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.ineqcons", false]], "ineqcons (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.ineqcons", false]], "ineqcons (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.ineqcons", false]], "info (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.info", false]], "info (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.info", false]], "info() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.info", false]], "info() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.info", false]], "info() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.info", false]], "info() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.info", false]], "info() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.info", false]], "info() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.info", false]], "info() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.info", false]], "info() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.info", false]], "info() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.info", false]], "info() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.info", false]], "info() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.info", false]], "info() (gammapy.utils.fits.hdulocation method)": [[321, "gammapy.utils.fits.HDULocation.info", false]], "info_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.info_dict", false]], "info_dict() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.info_dict", false]], "info_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.info_dict", false]], "info_dict() (gammapy.stats.cashcountsstatistic method)": [[293, "gammapy.stats.CashCountsStatistic.info_dict", false]], "info_dict() (gammapy.stats.wstatcountsstatistic method)": [[295, "gammapy.stats.WStatCountsStatistic.info_dict", false]], "info_table() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.info_table", false]], "input_shape() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_shape", false]], "input_shape() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_shape", false]], "input_shape() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_shape", false]], "input_shape() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.input_shape", false]], "input_shape() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_shape", false]], "input_shape() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_shape", false]], "input_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units", false]], "input_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units", false]], "input_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units", false]], "input_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units", false]], "input_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units", false]], "input_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units", false]], "input_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units", false]], "input_units_allow_dimensionless (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_allow_dimensionless", false]], "input_units_allow_dimensionless (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_allow_dimensionless", false]], "input_units_equivalencies (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_equivalencies", false]], "input_units_equivalencies (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_equivalencies", false]], "input_units_strict (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.input_units_strict", false]], "input_units_strict (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.input_units_strict", false]], "input_units_strict (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.input_units_strict", false]], "input_units_strict (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.input_units_strict", false]], "input_units_strict (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.input_units_strict", false]], "input_units_strict (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.input_units_strict", false]], "inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inputs", false]], "inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inputs", false]], "inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inputs", false]], "inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inputs", false]], "inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inputs", false]], "inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inputs", false]], "inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inputs", false]], "insert() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.insert", false]], "insert() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.insert", false]], "insert() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.insert", false]], "insert_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.insert_row", false]], "insert_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.insert_row", false]], "integral() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral", false]], "integral() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integral", false]], "integral() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integral", false]], "integral() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integral", false]], "integral() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integral", false]], "integral() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integral", false]], "integral() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral", false]], "integral() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integral", false]], "integral() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.integral", false]], "integral() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.integral", false]], "integral() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.integral", false]], "integral() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.integral", false]], "integral() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.integral", false]], "integral() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.integral", false]], "integral() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.integral", false]], "integral() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.integral", false]], "integral() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.integral", false]], "integral() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.integral", false]], "integral() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.integral", false]], "integral() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.integral", false]], "integral() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.integral", false]], "integral() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.integral", false]], "integral() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.integral", false]], "integral() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.integral", false]], "integral() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.integral", false]], "integral() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.integral", false]], "integral() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.integral", false]], "integral() (gammapy.modeling.models.constanttemporalmodel method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.integral", false]], "integral() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.expdecaytemporalmodel method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.integral", false]], "integral() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.integral", false]], "integral() (gammapy.modeling.models.gaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.integral", false]], "integral() (gammapy.modeling.models.lineartemporalmodel method)": [[244, "gammapy.modeling.models.LinearTemporalModel.integral", false]], "integral() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.integral", false]], "integral() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.integral", false]], "integral() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.powerlawtemporalmodel method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.integral", false]], "integral() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.integral", false]], "integral() (gammapy.modeling.models.sinetemporalmodel method)": [[267, "gammapy.modeling.models.SineTemporalModel.integral", false]], "integral() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral", false]], "integral() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral", false]], "integral() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.integral", false]], "integral() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.integral", false]], "integral() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.integral", false]], "integral() (gammapy.modeling.models.temporalmodel method)": [[282, "gammapy.modeling.models.TemporalModel.integral", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.integral_error", false]], "integral_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.integral_error", false]], "integral_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.integral_error", false]], "integral_error() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.integral_error", false]], "integrate_geom() (gammapy.modeling.models.constantfluxspatialmodel static method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.skymodel method)": [[268, "gammapy.modeling.models.SkyModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.integrate_geom", false]], "integrate_geom() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.integrate_geom", false]], "integrate_log_log() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.integrate_log_log", false]], "integrate_log_log() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.integrate_log_log", false]], "integrate_spectrum() (in module gammapy.modeling.models)": [[287, "gammapy.modeling.models.integrate_spectrum", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.integrate_spectrum_separation", false]], "integrate_spectrum_separation() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.integrate_spectrum_separation", false]], "interp (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.interp", false]], "interp (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.interp", false]], "interp_by_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.interp_by_coord", false]], "interp_by_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.interp_by_coord", false]], "interp_by_pix() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.interp_by_pix", false]], "interp_by_pix() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.interp_by_pix", false]], "interp_missing_data() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.interp_missing_data", false]], "interp_missing_data() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.interp_missing_data", false]], "interp_to_geom() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.interp_to_geom", false]], "interp_to_geom() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.interp_to_geom", false]], "interp_weights() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.interp_weights", false]], "interpolate_profile() (in module gammapy.utils.interpolation)": [[326, "gammapy.utils.interpolation.interpolate_profile", false]], "interpolation_scale() (in module gammapy.utils.interpolation)": [[327, "gammapy.utils.interpolation.interpolation_scale", false]], "inverse (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.inverse", false]], "inverse (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.inverse", false]], "inverse (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.inverse", false]], "inverse (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.inverse", false]], "inverse (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.inverse", false]], "inverse (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.inverse", false]], "inverse (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse", false]], "inverse() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse", false]], "inverse() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.inverse", false]], "inverse() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.inverse", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.inverse_all", false]], "inverse_all() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.inverse_all", false]], "inverse_all() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.inverse_all", false]], "inverse_all() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.inverse_all", false]], "inversecdfsampler (class in gammapy.utils.random)": [[335, "gammapy.utils.random.InverseCDFSampler", false]], "ipix (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.ipix", false]], "irf": [[584, "term-IRF", true]], "irf (class in gammapy.irf)": [[161, "gammapy.irf.IRF", false]], "irf_registry (in module gammapy.irf)": [[163, "gammapy.irf.IRF_REGISTRY", false]], "irfmap (class in gammapy.irf)": [[162, "gammapy.irf.IRFMap", false]], "is_aligned() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.is_aligned", false]], "is_aligned() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.is_aligned", false]], "is_aligned() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.is_aligned", false]], "is_all_point_sky_regions (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_all_point_sky_regions", false]], "is_all_same_energy_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_energy_shape", false]], "is_all_same_shape (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_shape", false]], "is_all_same_type (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.is_all_same_type", false]], "is_allclose() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.is_allclose", false]], "is_allclose() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.is_allclose", false]], "is_allclose() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.is_allclose", false]], "is_allclose() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.is_allclose", false]], "is_allclose() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.is_allclose", false]], "is_allclose() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.is_allclose", false]], "is_allclose() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.is_allclose", false]], "is_allclose() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.is_allclose", false]], "is_allclose() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.is_allclose", false]], "is_allclose() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.is_allclose", false]], "is_allclose() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.is_allclose", false]], "is_allclose() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.is_allclose", false]], "is_allclose() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.is_allclose", false]], "is_allclose() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.is_allclose", false]], "is_allclose() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.is_allclose", false]], "is_allclose() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.is_allclose", false]], "is_allclose() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.is_allclose", false]], "is_allclose() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.is_allclose", false]], "is_allclose() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.is_allclose", false]], "is_allclose() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.is_allclose", false]], "is_allclose() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.is_allclose", false]], "is_allsky (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.is_allsky", false]], "is_allsky (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_allsky", false]], "is_allsky (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_allsky", false]], "is_allsky (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_allsky", false]], "is_contiguous (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.is_contiguous", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.is_convertible_to_flux_sed_type", false]], "is_convertible_to_flux_sed_type (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.is_convertible_to_flux_sed_type", false]], "is_energy_axis (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.is_energy_axis", false]], "is_energy_dependent (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.constanttemporalmodel attribute)": [[227, "gammapy.modeling.models.ConstantTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.is_energy_dependent", false]], "is_energy_dependent (gammapy.modeling.models.temporalmodel attribute)": [[282, "gammapy.modeling.models.TemporalModel.is_energy_dependent", false]], "is_fixed_rad_max (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.is_fixed_rad_max", false]], "is_flat (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.is_flat", false]], "is_flat (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_flat", false]], "is_flat (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.is_flat", false]], "is_flat (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_flat", false]], "is_flat (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_flat", false]], "is_hpx (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_hpx", false]], "is_hpx (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_hpx", false]], "is_hpx (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_hpx", false]], "is_image (gammapy.maps.geom attribute)": [[195, "gammapy.maps.Geom.is_image", false]], "is_image (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_image", false]], "is_image (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_image", false]], "is_image (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_image", false]], "is_mask (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.is_mask", false]], "is_mask (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.is_mask", false]], "is_mask (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.is_mask", false]], "is_mask (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.is_mask", false]], "is_mask (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.is_mask", false]], "is_mask (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.is_mask", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.compoundspectralmodel attribute)": [[223, "gammapy.modeling.models.CompoundSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.constantspectralmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.scalespectralmodel attribute)": [[264, "gammapy.modeling.models.ScaleSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.spectralmodel attribute)": [[271, "gammapy.modeling.models.SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatendspectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.is_norm_spectral_model", false]], "is_norm_spectral_model (gammapy.modeling.models.templatespectralmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpectralModel.is_norm_spectral_model", false]], "is_pointed_observation (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.is_pointed_observation", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.is_pointlike", false]], "is_pointlike (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.is_pointlike", false]], "is_pointlike (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.is_pointlike", false]], "is_pointlike (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.is_pointlike", false]], "is_pointlike (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.is_pointlike", false]], "is_pointlike (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.is_pointlike", false]], "is_pointlike (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.is_pointlike", false]], "is_pointlike (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.is_pointlike", false]], "is_pointlike (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.is_pointlike", false]], "is_pointlike (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.is_pointlike", false]], "is_pointlike (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.is_pointlike", false]], "is_pointlike (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.is_pointlike", false]], "is_pointlike (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.is_pointlike", false]], "is_region (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_region", false]], "is_region (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_region", false]], "is_region (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_region", false]], "is_regular (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.is_regular", false]], "is_regular (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.is_regular", false]], "is_regular (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.is_regular", false]], "is_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.is_ul", false]], "is_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.is_ul", false]], "is_unidimensional (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.is_unidimensional", false]], "isothermalprofile (class in gammapy.astro.darkmatter)": [[22, "gammapy.astro.darkmatter.IsothermalProfile", false]], "items() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.items", false]], "items() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.items", false]], "items() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.items", false]], "iter_by_axis() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.iter_by_axis", false]], "iter_by_axis() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.iter_by_axis", false]], "iter_by_axis() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.iter_by_axis", false]], "iter_by_axis_data() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.iter_by_axis_data", false]], "iter_by_edges (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.iter_by_edges", false]], "iter_by_edges (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.iter_by_edges", false]], "iter_by_image() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.iter_by_image", false]], "iter_by_image() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.iter_by_image", false]], "iter_by_image() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.iter_by_image", false]], "iter_by_image_data() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.iter_by_image_data", false]], "iter_by_image_data() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.iter_by_image_data", false]], "iter_by_image_index() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.iter_by_image_index", false]], "iter_by_image_index() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.iter_by_image_index", false]], "iter_with_reshape (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.iter_with_reshape", false]], "itercols() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.itercols", false]], "itercols() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.itercols", false]], "iterrows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.iterrows", false]], "iterrows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.iterrows", false]], "jfactory (class in gammapy.astro.darkmatter)": [[23, "gammapy.astro.darkmatter.JFactory", false]], "joint analysis": [[584, "term-Joint-Analysis", true]], "json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.json", false]], "json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.json", false]], "json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.json", false]], "json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.json", false]], "json() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.json", false]], "k (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.k", false]], "keep_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keep_columns", false]], "keep_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keep_columns", false]], "kernel() (gammapy.makers.ringbackgroundmaker method)": [[182, "gammapy.makers.RingBackgroundMaker.kernel", false]], "kernels() (gammapy.makers.adaptiveringbackgroundmaker method)": [[172, "gammapy.makers.AdaptiveRingBackgroundMaker.kernels", false]], "keys() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.keys", false]], "keys() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.keys", false]], "keys() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.keys", false]], "labelmapaxis (class in gammapy.maps)": [[199, "gammapy.maps.LabelMapAxis", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.lambda_", false]], "lambda_ (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.lambda_", false]], "large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.large_scale_component", false]], "lat (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.lat", false]], "lat_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.lat_0", false]], "lat_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.lat_0", false]], "lazyfitsdata (class in gammapy.utils.fits)": [[322, "gammapy.utils.fits.LazyFitsData", false]], "lifetime_age_of_universe (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.LIFETIME_AGE_OF_UNIVERSE", false]], "lightcurve (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.lightcurve", false]], "lightcurve (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.lightcurve", false]], "lightcurve() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.lightcurve", false]], "lightcurveestimator (class in gammapy.estimators)": [[133, "gammapy.estimators.LightCurveEstimator", false]], "lightcurvetemplatetemporalmodel (class in gammapy.modeling.models)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel", false]], "linear (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.linear", false]], "linear (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.linear", false]], "linear (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.linear", false]], "linear (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.linear", false]], "linear (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.linear", false]], "linear (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.linear", false]], "linear (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.linear", false]], "lineartemporalmodel (class in gammapy.modeling.models)": [[244, "gammapy.modeling.models.LinearTemporalModel", false]], "livetime_fraction (gammapy.data.observationfilter attribute)": [[89, "gammapy.data.ObservationFilter.livetime_fraction", false]], "load() (gammapy.utils.fits.hdulocation method)": [[321, "gammapy.utils.fits.HDULocation.load", false]], "load_irf_dict_from_file() (in module gammapy.irf)": [[171, "gammapy.irf.load_irf_dict_from_file", false]], "loc (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc", false]], "loc (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc", false]], "loc_indices (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.loc_indices", false]], "loc_indices (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.loc_indices", false]], "local_density (gammapy.astro.darkmatter.burkertprofile attribute)": [[17, "gammapy.astro.darkmatter.BurkertProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.dmprofile attribute)": [[18, "gammapy.astro.darkmatter.DMProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.einastoprofile attribute)": [[21, "gammapy.astro.darkmatter.EinastoProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.isothermalprofile attribute)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.mooreprofile attribute)": [[24, "gammapy.astro.darkmatter.MooreProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.nfwprofile attribute)": [[25, "gammapy.astro.darkmatter.NFWProfile.LOCAL_DENSITY", false]], "local_density (gammapy.astro.darkmatter.zhaoprofile attribute)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.LOCAL_DENSITY", false]], "local_to_global() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.local_to_global", false]], "location (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.location", false]], "location_info() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.location_info", false]], "logparabolanormspectralmodel (class in gammapy.modeling.models)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel", false]], "logparabolaspectralmodel (class in gammapy.modeling.models)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel", false]], "logspiral (class in gammapy.astro.population)": [[34, "gammapy.astro.population.LogSpiral", false]], "loguniformprior (class in gammapy.modeling.models)": [[247, "gammapy.modeling.models.LogUniformPrior", false]], "lon (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.lon", false]], "lon_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.lon_0", false]], "lon_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.lon_0", false]], "lorimer2006 (class in gammapy.astro.population)": [[35, "gammapy.astro.population.Lorimer2006", false]], "luminosity_spindown (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.luminosity_spindown", false]], "luminosity_spindown() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.luminosity_spindown", false]], "luminosity_tev() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.luminosity_tev", false]], "luminosity_tev() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.luminosity_tev", false]], "m (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.m", false]], "magnetic_field (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.magnetic_field", false]], "magnetic_field() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.magnetic_field", false]], "make_background() (gammapy.makers.mapdatasetmaker method)": [[177, "gammapy.makers.MapDatasetMaker.make_background", false]], "make_background() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_background", false]], "make_background_fit() (gammapy.makers.fovbackgroundmaker method)": [[174, "gammapy.makers.FoVBackgroundMaker.make_background_fit", false]], "make_background_scale() (gammapy.makers.fovbackgroundmaker method)": [[174, "gammapy.makers.FoVBackgroundMaker.make_background_scale", false]], "make_base_catalog_galactic() (in module gammapy.astro.population)": [[45, "gammapy.astro.population.make_base_catalog_galactic", false]], "make_catalog_random_positions_cube() (in module gammapy.astro.population)": [[46, "gammapy.astro.population.make_catalog_random_positions_cube", false]], "make_catalog_random_positions_sphere() (in module gammapy.astro.population)": [[47, "gammapy.astro.population.make_catalog_random_positions_sphere", false]], "make_concentric_annulus_sky_regions() (in module gammapy.utils.regions)": [[345, "gammapy.utils.regions.make_concentric_annulus_sky_regions", false]], "make_counts() (gammapy.makers.mapdatasetmaker static method)": [[177, "gammapy.makers.MapDatasetMaker.make_counts", false]], "make_counts() (gammapy.makers.phasebackgroundmaker method)": [[178, "gammapy.makers.PhaseBackgroundMaker.make_counts", false]], "make_counts() (gammapy.makers.spectrumdatasetmaker static method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_counts", false]], "make_counts_off() (gammapy.makers.phasebackgroundmaker method)": [[178, "gammapy.makers.PhaseBackgroundMaker.make_counts_off", false]], "make_counts_off() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[179, "gammapy.makers.ReflectedRegionsBackgroundMaker.make_counts_off", false]], "make_counts_rad_max() (in module gammapy.makers.utils)": [[186, "gammapy.makers.utils.make_counts_rad_max", false]], "make_cubes() (gammapy.makers.adaptiveringbackgroundmaker method)": [[172, "gammapy.makers.AdaptiveRingBackgroundMaker.make_cubes", false]], "make_dataset() (gammapy.makers.datasetsmaker method)": [[173, "gammapy.makers.DatasetsMaker.make_dataset", false]], "make_default_fov_background_model() (gammapy.makers.fovbackgroundmaker method)": [[174, "gammapy.makers.FoVBackgroundMaker.make_default_fov_background_model", false]], "make_edisp() (gammapy.makers.mapdatasetmaker method)": [[177, "gammapy.makers.MapDatasetMaker.make_edisp", false]], "make_edisp() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_edisp", false]], "make_edisp_kernel() (gammapy.makers.mapdatasetmaker method)": [[177, "gammapy.makers.MapDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_edisp_kernel", false]], "make_edisp_kernel_map() (in module gammapy.makers.utils)": [[187, "gammapy.makers.utils.make_edisp_kernel_map", false]], "make_edisp_map() (in module gammapy.makers.utils)": [[188, "gammapy.makers.utils.make_edisp_map", false]], "make_effective_livetime_map() (in module gammapy.makers.utils)": [[189, "gammapy.makers.utils.make_effective_livetime_map", false]], "make_exclusion_mask() (gammapy.makers.fovbackgroundmaker method)": [[174, "gammapy.makers.FoVBackgroundMaker.make_exclusion_mask", false]], "make_exposure() (gammapy.makers.mapdatasetmaker static method)": [[177, "gammapy.makers.MapDatasetMaker.make_exposure", false]], "make_exposure() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_exposure", false]], "make_exposure_irf() (gammapy.makers.mapdatasetmaker static method)": [[177, "gammapy.makers.MapDatasetMaker.make_exposure_irf", false]], "make_exposure_irf() (gammapy.makers.spectrumdatasetmaker static method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_exposure_irf", false]], "make_map_background_irf() (in module gammapy.makers.utils)": [[190, "gammapy.makers.utils.make_map_background_irf", false]], "make_map_exposure_true_energy() (in module gammapy.makers.utils)": [[191, "gammapy.makers.utils.make_map_exposure_true_energy", false]], "make_maps_off() (gammapy.makers.ringbackgroundmaker method)": [[182, "gammapy.makers.RingBackgroundMaker.make_maps_off", false]], "make_mask_bkg_invalid() (gammapy.makers.safemaskmaker static method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_bkg_invalid", false]], "make_mask_energy_aeff_default() (gammapy.makers.safemaskmaker static method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_default", false]], "make_mask_energy_aeff_max() (gammapy.makers.safemaskmaker method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_energy_aeff_max", false]], "make_mask_energy_bkg_peak() (gammapy.makers.safemaskmaker method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_energy_bkg_peak", false]], "make_mask_energy_edisp_bias() (gammapy.makers.safemaskmaker method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_energy_edisp_bias", false]], "make_mask_offset_max() (gammapy.makers.safemaskmaker method)": [[183, "gammapy.makers.SafeMaskMaker.make_mask_offset_max", false]], "make_meta_table() (gammapy.makers.mapdatasetmaker static method)": [[177, "gammapy.makers.MapDatasetMaker.make_meta_table", false]], "make_meta_table() (gammapy.makers.spectrumdatasetmaker static method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_meta_table", false]], "make_observation_time_map() (in module gammapy.makers.utils)": [[192, "gammapy.makers.utils.make_observation_time_map", false]], "make_orthogonal_rectangle_sky_regions() (in module gammapy.utils.regions)": [[346, "gammapy.utils.regions.make_orthogonal_rectangle_sky_regions", false]], "make_path() (in module gammapy.utils.scripts)": [[351, "gammapy.utils.scripts.make_path", false]], "make_psf() (gammapy.makers.mapdatasetmaker method)": [[177, "gammapy.makers.MapDatasetMaker.make_psf", false]], "make_psf() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.make_psf", false]], "make_psf_map() (in module gammapy.makers.utils)": [[193, "gammapy.makers.utils.make_psf_map", false]], "make_theta_squared_table() (in module gammapy.makers.utils)": [[194, "gammapy.makers.utils.make_theta_squared_table", false]], "maker": [[584, "term-Maker", true]], "maker (class in gammapy.makers)": [[176, "gammapy.makers.Maker", false]], "maker_registry (in module gammapy.makers)": [[175, "gammapy.makers.MAKER_REGISTRY", false]], "map (class in gammapy.maps)": [[200, "gammapy.maps.Map", false]], "map (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.map", false]], "map (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.map", false]], "map (gammapy.modeling.models.templatendspectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.map", false]], "map (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.map", false]], "map (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.map", false]], "map_center (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.map_center", false]], "map_coord() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.map_coord", false]], "mapaxes (class in gammapy.maps)": [[201, "gammapy.maps.MapAxes", false]], "mapaxis (class in gammapy.maps)": [[202, "gammapy.maps.MapAxis", false]], "mapcoord (class in gammapy.maps)": [[203, "gammapy.maps.MapCoord", false]], "mapdataset (class in gammapy.datasets)": [[103, "gammapy.datasets.MapDataset", false]], "mapdataseteventsampler (class in gammapy.datasets)": [[104, "gammapy.datasets.MapDatasetEventSampler", false]], "mapdatasetmaker (class in gammapy.makers)": [[177, "gammapy.makers.MapDatasetMaker", false]], "mapdatasetmetadata (class in gammapy.datasets)": [[105, "gammapy.datasets.MapDatasetMetaData", false]], "mapdatasetonoff (class in gammapy.datasets)": [[106, "gammapy.datasets.MapDatasetOnOff", false]], "mapdatasetweighted (class in gammapy.datasets)": [[107, "gammapy.datasets.MapDatasetWeighted", false]], "mappanelplotter (class in gammapy.visualization)": [[373, "gammapy.visualization.MapPanelPlotter", false]], "maps (class in gammapy.maps)": [[204, "gammapy.maps.Maps", false]], "mask (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.mask", false]], "mask (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.mask", false]], "mask (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.mask", false]], "mask (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask", false]], "mask (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask", false]], "mask (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask", false]], "mask (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask", false]], "mask (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask", false]], "mask (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask", false]], "mask_contains_region() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.mask_contains_region", false]], "mask_fit (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit", false]], "mask_fit (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_fit", false]], "mask_fit (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit", false]], "mask_fit_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_fit_image", false]], "mask_fit_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_fit_image", false]], "mask_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_image", false]], "mask_image (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_image", false]], "mask_image (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_image", false]], "mask_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_image", false]], "mask_nearest_position() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.mask_nearest_position", false]], "mask_nearest_position() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.mask_nearest_position", false]], "mask_safe (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe", false]], "mask_safe (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe", false]], "mask_safe (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe", false]], "mask_safe_edisp (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe_edisp", false]], "mask_safe_edisp (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_edisp", false]], "mask_safe_image (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe_image", false]], "mask_safe_image (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispkernelmap attribute)": [[155, "gammapy.irf.EDispKernelMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.edispmap attribute)": [[156, "gammapy.irf.EDispMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.irfmap attribute)": [[162, "gammapy.irf.IRFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.mask_safe_image", false]], "mask_safe_image (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.mask_safe_image", false]], "mask_safe_psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.mask_safe_psf", false]], "mask_safe_psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.mask_safe_psf", false]], "mask_valid (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.mask_valid", false]], "masked (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.masked", false]], "masked (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.masked", false]], "match_by_name (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.match_by_name", false]], "matrix (gammapy.modeling.covarianceresult attribute)": [[214, "gammapy.modeling.CovarianceResult.matrix", false]], "max (gammapy.modeling.models.loguniformprior attribute)": [[247, "gammapy.modeling.models.LogUniformPrior.max", false]], "max (gammapy.modeling.models.uniformprior attribute)": [[283, "gammapy.modeling.models.UniformPrior.max", false]], "max (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.max", false]], "max (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.max", false]], "max (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.max", false]], "max (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.max", false]], "mcmc": [[584, "term-MCMC", true]], "mdm (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.mDM", false]], "mean (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.mean", false]], "message (gammapy.modeling.covarianceresult attribute)": [[214, "gammapy.modeling.CovarianceResult.message", false]], "message (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.message", false]], "message (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.message", false]], "met": [[584, "term-MET", true]], "met_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_start", false]], "met_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.met_stop", false]], "meta (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.meta", false]], "meta (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.meta", false]], "meta (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.meta", false]], "meta (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.meta", false]], "meta (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.meta", false]], "meta (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.meta", false]], "meta (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.meta", false]], "meta (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.meta", false]], "meta (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.meta", false]], "meta (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.meta", false]], "meta (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta", false]], "meta (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta", false]], "meta (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.meta", false]], "meta (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.meta", false]], "meta (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.meta", false]], "meta (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.meta", false]], "meta (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.meta", false]], "meta (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.meta", false]], "meta (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.meta", false]], "meta (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.meta", false]], "meta (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.meta", false]], "meta_table (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.meta_table", false]], "meta_table (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.meta_table", false]], "meta_table (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.meta_table", false]], "meta_table (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.meta_table", false]], "meta_table (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.meta_table", false]], "method (gammapy.makers.fovbackgroundmaker attribute)": [[174, "gammapy.makers.FoVBackgroundMaker.method", false]], "method (gammapy.modeling.covarianceresult attribute)": [[214, "gammapy.modeling.CovarianceResult.method", false]], "method (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.method", false]], "method (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.method", false]], "method_default (in module gammapy.utils.parallel)": [[329, "gammapy.utils.parallel.METHOD_DEFAULT", false]], "method_kwargs_default (in module gammapy.utils.parallel)": [[330, "gammapy.utils.parallel.METHOD_KWARGS_DEFAULT", false]], "meyercrabspectralmodel (class in gammapy.modeling.models)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel", false]], "min (gammapy.modeling.models.loguniformprior attribute)": [[247, "gammapy.modeling.models.LogUniformPrior.min", false]], "min (gammapy.modeling.models.uniformprior attribute)": [[283, "gammapy.modeling.models.UniformPrior.min", false]], "min (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.min", false]], "min (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.min", false]], "min (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.min", false]], "min (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.min", false]], "minuit (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.minuit", false]], "minuit (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.minuit", false]], "mode (gammapy.data.fixedpointinginfo attribute)": [[85, "gammapy.data.FixedPointingInfo.mode", false]], "model (class in gammapy.modeling.models)": [[250, "gammapy.modeling.models.Model", false]], "model_computed_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_computed_fields", false]], "model_computed_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_computed_fields", false]], "model_computed_fields (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_computed_fields", false]], "model_config (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_config", false]], "model_config (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_config", false]], "model_config (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_config", false]], "model_config (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_config", false]], "model_config (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_config", false]], "model_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_constraints", false]], "model_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_constraints", false]], "model_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_constraints", false]], "model_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_constraints", false]], "model_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_constraints", false]], "model_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_constraints", false]], "model_construct() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_construct", false]], "model_construct() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_construct", false]], "model_construct() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_construct", false]], "model_construct() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_construct", false]], "model_construct() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_construct", false]], "model_copy() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_copy", false]], "model_copy() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_copy", false]], "model_copy() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_copy", false]], "model_copy() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_copy", false]], "model_copy() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_copy", false]], "model_dump() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump", false]], "model_dump() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump", false]], "model_dump() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump", false]], "model_dump() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump", false]], "model_dump() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_dump", false]], "model_dump_json() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_dump_json", false]], "model_dump_json() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_dump_json", false]], "model_dump_json() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_dump_json", false]], "model_dump_json() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_dump_json", false]], "model_dump_json() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_dump_json", false]], "model_extra (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_extra", false]], "model_extra (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_extra", false]], "model_extra (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_extra", false]], "model_extra (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_extra", false]], "model_extra (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_extra", false]], "model_fields (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields", false]], "model_fields (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields", false]], "model_fields (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields", false]], "model_fields (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields", false]], "model_fields (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_fields", false]], "model_fields_set (gammapy.analysis.analysisconfig attribute)": [[16, "gammapy.analysis.AnalysisConfig.model_fields_set", false]], "model_fields_set (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.model_fields_set", false]], "model_fields_set (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.model_fields_set", false]], "model_fields_set (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.model_fields_set", false]], "model_fields_set (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.model_fields_set", false]], "model_json_schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_json_schema", false]], "model_json_schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_json_schema", false]], "model_json_schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_json_schema", false]], "model_json_schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_json_schema", false]], "model_json_schema() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_json_schema", false]], "model_parametrized_name() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_parametrized_name", false]], "model_parametrized_name() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_parametrized_name", false]], "model_post_init() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.model_post_init", false]], "model_post_init() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.model_post_init", false]], "model_post_init() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.model_post_init", false]], "model_post_init() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_post_init", false]], "model_post_init() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.model_post_init", false]], "model_rebuild() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_rebuild", false]], "model_rebuild() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_rebuild", false]], "model_rebuild() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_rebuild", false]], "model_rebuild() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_rebuild", false]], "model_rebuild() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_rebuild", false]], "model_registry (in module gammapy.modeling.models)": [[248, "gammapy.modeling.models.MODEL_REGISTRY", false]], "model_set_axis (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.model_set_axis", false]], "model_set_axis (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.model_set_axis", false]], "model_set_axis (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.model_set_axis", false]], "model_set_axis (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.model_set_axis", false]], "model_set_axis (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.model_set_axis", false]], "model_set_axis (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.model_set_axis", false]], "model_validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate", false]], "model_validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate", false]], "model_validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate", false]], "model_validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate", false]], "model_validate() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_validate", false]], "model_validate_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_json", false]], "model_validate_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_json", false]], "model_validate_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_json", false]], "model_validate_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_json", false]], "model_validate_json() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_validate_json", false]], "model_validate_strings() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.model_validate_strings", false]], "model_validate_strings() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.model_validate_strings", false]], "model_validate_strings() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.model_validate_strings", false]], "modelbase (class in gammapy.modeling.models)": [[251, "gammapy.modeling.models.ModelBase", false]], "models (class in gammapy.modeling.models)": [[252, "gammapy.modeling.models.Models", false]], "models (gammapy.analysis.analysis attribute)": [[15, "gammapy.analysis.Analysis.models", false]], "models (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.models", false]], "models (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.models", false]], "models (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.models", false]], "models (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.models", false]], "models (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.models", false]], "models (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.models", false]], "models (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.models", false]], "models (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.models", false]], "models (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.models", false]], "module": [[0, "module-gammapy.analysis", false], [1, "module-gammapy.astro.darkmatter", false], [1, "module-gammapy.astro.population", false], [1, "module-gammapy.astro.source", false], [2, "module-gammapy.catalog", false], [3, "module-gammapy.data", false], [4, "module-gammapy.datasets", false], [4, "module-gammapy.datasets.utils", false], [5, "module-gammapy.estimators", false], [5, "module-gammapy.estimators.utils", false], [7, "module-gammapy.irf", false], [8, "module-gammapy.makers", false], [8, "module-gammapy.makers.utils", false], [9, "module-gammapy.maps", false], [10, "module-gammapy.modeling", false], [10, "module-gammapy.modeling.models", false], [10, "module-gammapy.modeling.models.utils", false], [12, "module-gammapy.stats", false], [13, "module-gammapy.utils.cluster", false], [13, "module-gammapy.utils.coordinates", false], [13, "module-gammapy.utils.fits", false], [13, "module-gammapy.utils.integrate", false], [13, "module-gammapy.utils.interpolation", false], [13, "module-gammapy.utils.parallel", false], [13, "module-gammapy.utils.random", false], [13, "module-gammapy.utils.regions", false], [13, "module-gammapy.utils.scripts", false], [13, "module-gammapy.utils.table", false], [13, "module-gammapy.utils.testing", false], [13, "module-gammapy.utils.time", false], [13, "module-gammapy.utils.units", false], [14, "module-gammapy.visualization", false]], "mooreprofile (class in gammapy.astro.darkmatter)": [[24, "gammapy.astro.darkmatter.MooreProfile", false]], "more() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.more", false]], "more() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.more", false]], "motion_since_birth() (in module gammapy.utils.coordinates)": [[317, "gammapy.utils.coordinates.motion_since_birth", false]], "mpl_plot_check() (in module gammapy.utils.testing)": [[364, "gammapy.utils.testing.mpl_plot_check", false]], "mu (gammapy.modeling.models.gaussianprior attribute)": [[237, "gammapy.modeling.models.GaussianPrior.mu", false]], "multiprocessing_manager (class in gammapy.utils.parallel)": [[333, "gammapy.utils.parallel.multiprocessing_manager", false]], "n_bkg (gammapy.stats.cashcountsstatistic attribute)": [[293, "gammapy.stats.CashCountsStatistic.n_bkg", false]], "n_bkg (gammapy.stats.wstatcountsstatistic attribute)": [[295, "gammapy.stats.WStatCountsStatistic.n_bkg", false]], "n_dof (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.n_dof", false]], "n_dof (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.n_dof", false]], "n_inputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_inputs", false]], "n_inputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_inputs", false]], "n_inputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_inputs", false]], "n_inputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_inputs", false]], "n_inputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_inputs", false]], "n_inputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_inputs", false]], "n_jobs (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.n_jobs", false]], "n_jobs (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.n_jobs", false]], "n_jobs (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.n_jobs", false]], "n_jobs (gammapy.makers.datasetsmaker attribute)": [[173, "gammapy.makers.DatasetsMaker.n_jobs", false]], "n_jobs_default (in module gammapy.utils.parallel)": [[331, "gammapy.utils.parallel.N_JOBS_DEFAULT", false]], "n_models (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.n_models", false]], "n_models (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.n_models", false]], "n_outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_outputs", false]], "n_outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_outputs", false]], "n_outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_outputs", false]], "n_outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_outputs", false]], "n_outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_outputs", false]], "n_outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_outputs", false]], "n_sig (gammapy.stats.cashcountsstatistic attribute)": [[293, "gammapy.stats.CashCountsStatistic.n_sig", false]], "n_sig (gammapy.stats.wstatcountsstatistic attribute)": [[295, "gammapy.stats.WStatCountsStatistic.n_sig", false]], "n_sig_matching_significance() (gammapy.stats.cashcountsstatistic method)": [[293, "gammapy.stats.CashCountsStatistic.n_sig_matching_significance", false]], "n_sig_matching_significance() (gammapy.stats.wstatcountsstatistic method)": [[295, "gammapy.stats.WStatCountsStatistic.n_sig_matching_significance", false]], "n_sigma (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.n_sigma", false]], "n_sigma (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.n_sigma", false]], "n_sigma_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.n_sigma_ul", false]], "n_sigma_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.n_sigma_ul", false]], "n_submodels (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.n_submodels", false]], "n_submodels (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.n_submodels", false]], "n_submodels (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.n_submodels", false]], "n_submodels (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.n_submodels", false]], "n_submodels (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.n_submodels", false]], "n_submodels (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.n_submodels", false]], "naimaspectralmodel (class in gammapy.modeling.models)": [[253, "gammapy.modeling.models.NaimaSpectralModel", false]], "name (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.name", false]], "name (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.name", false]], "name (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.name", false]], "name (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.name", false]], "name (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.name", false]], "name (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.name", false]], "name (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.name", false]], "name (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.name", false]], "name (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.name", false]], "name (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.name", false]], "name (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.name", false]], "name (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.name", false]], "name (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.name", false]], "name (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.name", false]], "name (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.name", false]], "name (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.name", false]], "name (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.name", false]], "name (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.name", false]], "name (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.name", false]], "name (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.name", false]], "name (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.name", false]], "name (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.name", false]], "name (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.name", false]], "name (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.name", false]], "name (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.name", false]], "name (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.name", false]], "name (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.name", false]], "name (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.name", false]], "name (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.name", false]], "name (gammapy.modeling.models.fovbackgroundmodel attribute)": [[236, "gammapy.modeling.models.FoVBackgroundModel.name", false]], "name (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.name", false]], "name (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.name", false]], "name (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.name", false]], "name (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.name", false]], "names (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.names", false]], "names (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.names", false]], "names (gammapy.modeling.models.datasetmodels attribute)": [[228, "gammapy.modeling.models.DatasetModels.names", false]], "names (gammapy.modeling.models.models attribute)": [[252, "gammapy.modeling.models.Models.names", false]], "names (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.names", false]], "names (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.names", false]], "nbin (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.nbin", false]], "nbin (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.nbin", false]], "nbin (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.nbin", false]], "nbin_per_decade (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.nbin_per_decade", false]], "ndim (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.ndim", false]], "ndim (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.ndim", false]], "ndim (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.ndim", false]], "nest (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.nest", false]], "nfev (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.nfev", false]], "nfev (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.nfev", false]], "nfwprofile (class in gammapy.astro.darkmatter)": [[25, "gammapy.astro.darkmatter.NFWProfile", false]], "niter (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.niter", false]], "niter (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.niter", false]], "node_type (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.node_type", false]], "node_type (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.node_type", false]], "node_type (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.node_type", false]], "norm (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm", false]], "norm (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm", false]], "norm (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.norm", false]], "norm (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.norm", false]], "norm (gammapy.modeling.models.scalespectralmodel attribute)": [[264, "gammapy.modeling.models.ScaleSpectralModel.norm", false]], "norm_bounds_cython() (in module gammapy.stats)": [[307, "gammapy.stats.norm_bounds_cython", false]], "norm_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_err", false]], "norm_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_err", false]], "norm_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_errn", false]], "norm_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_errn", false]], "norm_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_errp", false]], "norm_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_errp", false]], "norm_sensitivity (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_sensitivity", false]], "norm_sensitivity (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_sensitivity", false]], "norm_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.norm_ul", false]], "norm_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.norm_ul", false]], "normalize() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.normalize", false]], "normalize() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.normalize", false]], "normalize() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.normalize", false]], "normalize() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.normalize", false]], "normalize() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.normalize", false]], "normalize() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.normalize", false]], "normalize() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.normalize", false]], "normalize() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.normalize", false]], "normalize() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.normalize", false]], "normalize() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.normalize", false]], "normalize() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.normalize", false]], "normalize() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.normalize", false]], "normalize() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.normalize", false]], "normalize() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.normalize", false]], "normalize() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.normalize", false]], "normalize() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.normalize", false]], "normalize() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.normalize", false]], "normalize() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.normalize", false]], "normalize() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.normalize", false]], "normalize() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.normalize", false]], "normalize() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.normalize", false]], "normalize() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.normalize", false]], "normalize() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.normalize", false]], "normalize() (in module gammapy.utils.random)": [[338, "gammapy.utils.random.normalize", false]], "norms (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.norms", false]], "norms (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.norms", false]], "npix (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.npix", false]], "npix (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.npix", false]], "npix (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.npix", false]], "npix_max (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.npix_max", false]], "npred (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred", false]], "npred (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred", false]], "npred() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred", false]], "npred() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred", false]], "npred() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.npred", false]], "npred() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.npred", false]], "npred() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred", false]], "npred_background (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_background", false]], "npred_background (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_background", false]], "npred_background() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_background", false]], "npred_background() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.npred_background", false]], "npred_background() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred_background", false]], "npred_excess (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess", false]], "npred_excess (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess", false]], "npred_excess_err (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_err", false]], "npred_excess_err (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_err", false]], "npred_excess_errn (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_errn", false]], "npred_excess_errn (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_errn", false]], "npred_excess_errp (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_errp", false]], "npred_excess_errp (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_errp", false]], "npred_excess_ref (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_ref", false]], "npred_excess_ref (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_ref", false]], "npred_excess_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.npred_excess_ul", false]], "npred_excess_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.npred_excess_ul", false]], "npred_off() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_off", false]], "npred_off() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred_off", false]], "npred_signal() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.npred_signal", false]], "npred_signal() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.npred_signal", false]], "npred_signal() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.npred_signal", false]], "nside (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.nside", false]], "obs() (gammapy.data.datastore method)": [[82, "gammapy.data.DataStore.obs", false]], "obs_id_unique (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.obs_id_unique", false]], "obs_ids (gammapy.data.datastore attribute)": [[82, "gammapy.data.DataStore.obs_ids", false]], "observation (class in gammapy.data)": [[88, "gammapy.data.Observation", false]], "observation_dead_time_fraction (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_dead_time_fraction", false]], "observation_dead_time_fraction (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_dead_time_fraction", false]], "observation_live_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_live_time_duration", false]], "observation_live_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_live_time_duration", false]], "observation_time_duration (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_duration", false]], "observation_time_duration (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observation_time_duration", false]], "observation_time_start (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_start", false]], "observation_time_stop (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observation_time_stop", false]], "observationeventsampler (class in gammapy.datasets)": [[110, "gammapy.datasets.ObservationEventSampler", false]], "observationfilter (class in gammapy.data)": [[89, "gammapy.data.ObservationFilter", false]], "observationmetadata (class in gammapy.data)": [[90, "gammapy.data.ObservationMetaData", false]], "observations (class in gammapy.data)": [[92, "gammapy.data.Observations", false]], "observationseventssampler (class in gammapy.data)": [[93, "gammapy.data.ObservationsEventsSampler", false]], "observationtable (class in gammapy.data)": [[91, "gammapy.data.ObservationTable", false]], "observatory_earth_location (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.observatory_earth_location", false]], "observatory_earth_location (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.observatory_earth_location", false]], "observatory_locations (in module gammapy.data)": [[97, "gammapy.data.observatory_locations", false]], "offset (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset", false]], "offset_from_median (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.offset_from_median", false]], "offset_max (gammapy.makers.datasetsmaker attribute)": [[173, "gammapy.makers.DatasetsMaker.offset_max", false]], "ogipdatasetreader (class in gammapy.datasets)": [[108, "gammapy.datasets.OGIPDatasetReader", false]], "ogipdatasetwriter (class in gammapy.datasets)": [[109, "gammapy.datasets.OGIPDatasetWriter", false]], "omega (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.omega", false]], "optimize() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.optimize", false]], "optimize_result (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.optimize_result", false]], "optimizeresult (class in gammapy.modeling)": [[217, "gammapy.modeling.OptimizeResult", false]], "order (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.order", false]], "ordering (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.ordering", false]], "output_units() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.output_units", false]], "output_units() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.output_units", false]], "output_units() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.output_units", false]], "output_units() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.output_units", false]], "output_units() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.output_units", false]], "output_units() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.output_units", false]], "outputs (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.outputs", false]], "outputs (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.outputs", false]], "outputs (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.outputs", false]], "outputs (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.outputs", false]], "outputs (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.outputs", false]], "outputs (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.outputs", false]], "outputs (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.outputs", false]], "p (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.p", false]], "p_value (gammapy.stats.cashcountsstatistic attribute)": [[293, "gammapy.stats.CashCountsStatistic.p_value", false]], "p_value (gammapy.stats.wstatcountsstatistic attribute)": [[295, "gammapy.stats.WStatCountsStatistic.p_value", false]], "paczynski1990 (class in gammapy.astro.population)": [[36, "gammapy.astro.population.Paczynski1990", false]], "paczynski1990velocity (class in gammapy.astro.population)": [[37, "gammapy.astro.population.Paczynski1990Velocity", false]], "pad() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.pad", false]], "pad() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.pad", false]], "pad() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.pad", false]], "pad() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.pad", false]], "pad() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.pad", false]], "pad() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.pad", false]], "pad() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.pad", false]], "pad() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.pad", false]], "pad() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.pad", false]], "pad() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.pad", false]], "pad() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.pad", false]], "pad() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.pad", false]], "pad() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.pad", false]], "pad() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.pad", false]], "pad() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.pad", false]], "pad() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.pad", false]], "pad() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.pad", false]], "pad() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.pad", false]], "pad() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.pad", false]], "pad() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.pad", false]], "pad() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.pad", false]], "pad() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.pad", false]], "pad() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.pad", false]], "pad() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.pad", false]], "pad() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.pad", false]], "pad() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.pad", false]], "pad() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.pad", false]], "pad() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.pad", false]], "pad() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.pad", false]], "pad() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.pad", false]], "parallel_backend (gammapy.data.observationseventssampler attribute)": [[93, "gammapy.data.ObservationsEventsSampler.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.parallel_backend", false]], "parallel_backend (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.parallel_backend", false]], "parallel_backend (gammapy.makers.datasetsmaker attribute)": [[173, "gammapy.makers.DatasetsMaker.parallel_backend", false]], "param_names (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_names", false]], "param_names (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_names", false]], "param_names (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_names", false]], "param_names (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_names", false]], "param_names (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_names", false]], "param_names (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_names", false]], "param_names (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_names", false]], "param_sets (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.param_sets", false]], "param_sets (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.param_sets", false]], "param_sets (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.param_sets", false]], "param_sets (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.param_sets", false]], "param_sets (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.param_sets", false]], "param_sets (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.param_sets", false]], "parameter (class in gammapy.modeling)": [[218, "gammapy.modeling.Parameter", false]], "parameter_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameter_constraints", false]], "parameter_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameter_constraints", false]], "parameter_matching_significance() (gammapy.estimators.parametersensitivityestimator method)": [[135, "gammapy.estimators.ParameterSensitivityEstimator.parameter_matching_significance", false]], "parameterestimator (class in gammapy.estimators)": [[134, "gammapy.estimators.ParameterEstimator", false]], "parameters (class in gammapy.modeling)": [[219, "gammapy.modeling.Parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters", false]], "parameters (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters", false]], "parameters (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.parameters", false]], "parameters (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.parameters", false]], "parameters (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.parameters", false]], "parameters (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.parameters", false]], "parameters (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.parameters", false]], "parameters (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.parameters", false]], "parameters (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.parameters", false]], "parameters (gammapy.datasets.datasets attribute)": [[100, "gammapy.datasets.Datasets.parameters", false]], "parameters (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.parameters", false]], "parameters (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.compoundspectralmodel attribute)": [[223, "gammapy.modeling.models.CompoundSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.constantspectralmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.constanttemporalmodel attribute)": [[227, "gammapy.modeling.models.ConstantTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.datasetmodels attribute)": [[228, "gammapy.modeling.models.DatasetModels.parameters", false]], "parameters (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.fovbackgroundmodel attribute)": [[236, "gammapy.modeling.models.FoVBackgroundModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianprior attribute)": [[237, "gammapy.modeling.models.GaussianPrior.parameters", false]], "parameters (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.loguniformprior attribute)": [[247, "gammapy.modeling.models.LogUniformPrior.parameters", false]], "parameters (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.modelbase attribute)": [[251, "gammapy.modeling.models.ModelBase.parameters", false]], "parameters (gammapy.modeling.models.models attribute)": [[252, "gammapy.modeling.models.Models.parameters", false]], "parameters (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.prior attribute)": [[261, "gammapy.modeling.models.Prior.parameters", false]], "parameters (gammapy.modeling.models.scalespectralmodel attribute)": [[264, "gammapy.modeling.models.ScaleSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.parameters", false]], "parameters (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.parameters", false]], "parameters (gammapy.modeling.models.spectralmodel attribute)": [[271, "gammapy.modeling.models.SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters", false]], "parameters (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatendspectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.parameters", false]], "parameters (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters", false]], "parameters (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.parameters", false]], "parameters (gammapy.modeling.models.templatespectralmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpectralModel.parameters", false]], "parameters (gammapy.modeling.models.temporalmodel attribute)": [[282, "gammapy.modeling.models.TemporalModel.parameters", false]], "parameters (gammapy.modeling.models.uniformprior attribute)": [[283, "gammapy.modeling.models.UniformPrior.parameters", false]], "parameters (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.parameters", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.compoundspectralmodel attribute)": [[223, "gammapy.modeling.models.CompoundSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constantspectralmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.constanttemporalmodel attribute)": [[227, "gammapy.modeling.models.ConstantTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.datasetmodels attribute)": [[228, "gammapy.modeling.models.DatasetModels.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.fovbackgroundmodel attribute)": [[236, "gammapy.modeling.models.FoVBackgroundModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianprior attribute)": [[237, "gammapy.modeling.models.GaussianPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.loguniformprior attribute)": [[247, "gammapy.modeling.models.LogUniformPrior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.modelbase attribute)": [[251, "gammapy.modeling.models.ModelBase.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.models attribute)": [[252, "gammapy.modeling.models.Models.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.prior attribute)": [[261, "gammapy.modeling.models.Prior.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.scalespectralmodel attribute)": [[264, "gammapy.modeling.models.ScaleSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.spectralmodel attribute)": [[271, "gammapy.modeling.models.SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatendspectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.templatespectralmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpectralModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.temporalmodel attribute)": [[282, "gammapy.modeling.models.TemporalModel.parameters_unique_names", false]], "parameters_unique_names (gammapy.modeling.models.uniformprior attribute)": [[283, "gammapy.modeling.models.UniformPrior.parameters_unique_names", false]], "parametersensitivityestimator (class in gammapy.estimators)": [[135, "gammapy.estimators.ParameterSensitivityEstimator", false]], "parametricpsf (class in gammapy.irf)": [[168, "gammapy.irf.ParametricPSF", false]], "parse_file() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_file", false]], "parse_file() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_file", false]], "parse_file() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_file", false]], "parse_file() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_file", false]], "parse_file() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.parse_file", false]], "parse_obj() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_obj", false]], "parse_obj() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_obj", false]], "parse_obj() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_obj", false]], "parse_obj() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_obj", false]], "parse_obj() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.parse_obj", false]], "parse_raw() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.parse_raw", false]], "parse_raw() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.parse_raw", false]], "parse_raw() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.parse_raw", false]], "parse_raw() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.parse_raw", false]], "parse_raw() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.parse_raw", false]], "particle_distribution (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.particle_distribution", false]], "path() (gammapy.utils.fits.hdulocation method)": [[321, "gammapy.utils.fits.HDULocation.path", false]], "pdf() (in module gammapy.utils.random)": [[339, "gammapy.utils.random.pdf", false]], "pdf_in_safe_range() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.pdf_in_safe_range", false]], "pdf_matrix (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.pdf_matrix", false]], "peak_brightness() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness", false]], "peak_brightness_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_brightness_error", false]], "peak_latitude() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude", false]], "peak_latitude_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.peak_latitude_error", false]], "peek() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.peek", false]], "peek() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.peek", false]], "peek() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.peek", false]], "peek() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.peek", false]], "peek() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.peek", false]], "peek() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.peek", false]], "peek() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.peek", false]], "peek() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.peek", false]], "peek() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.peek", false]], "peek() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.peek", false]], "peek() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.peek", false]], "peek() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.peek", false]], "peek() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.peek", false]], "peek() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.peek", false]], "peek() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.peek", false]], "peek() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.peek", false]], "peek() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.peek", false]], "peek() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.peek", false]], "peek() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.peek", false]], "peek() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.peek", false]], "peek() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.peek", false]], "peek() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.peek", false]], "period() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period", false]], "period_dot() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.period_dot", false]], "pformat() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat", false]], "pformat() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat", false]], "pformat_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pformat_all", false]], "pformat_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pformat_all", false]], "phasebackgroundmaker (class in gammapy.makers)": [[178, "gammapy.makers.PhaseBackgroundMaker", false]], "phi (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.phi", false]], "phi (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.phi", false]], "phi (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.phi", false]], "phi (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi", false]], "phi_0 (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.phi_0", false]], "phi_0 (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.phi_0", false]], "phi_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.phi_ref", false]], "piecewisenormspatialmodel (class in gammapy.modeling.models)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel", false]], "piecewisenormspectralmodel (class in gammapy.modeling.models)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.pivot_energy", false]], "pivot_energy (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.compoundspectralmodel attribute)": [[223, "gammapy.modeling.models.CompoundSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.constantspectralmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.scalespectralmodel attribute)": [[264, "gammapy.modeling.models.ScaleSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.spectralmodel attribute)": [[271, "gammapy.modeling.models.SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatendspectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.pivot_energy", false]], "pivot_energy (gammapy.modeling.models.templatespectralmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpectralModel.pivot_energy", false]], "pix_to_coord() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.pix_to_coord", false]], "pix_to_coord() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.pix_to_coord", false]], "pix_to_idx() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.timemapaxis static method)": [[207, "gammapy.maps.TimeMapAxis.pix_to_idx", false]], "pix_to_idx() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.pix_to_idx", false]], "pixel_area (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.pixel_area", false]], "pixel_scales (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.pixel_scales", false]], "pixel_scales (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.pixel_scales", false]], "plot() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot", false]], "plot() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot", false]], "plot() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.plot", false]], "plot() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.plot", false]], "plot() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.plot", false]], "plot() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.plot", false]], "plot() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.plot", false]], "plot() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot", false]], "plot() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.plot", false]], "plot() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.plot", false]], "plot() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.plot", false]], "plot() (gammapy.modeling.models.constanttemporalmodel method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.plot", false]], "plot() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.plot", false]], "plot() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.expdecaytemporalmodel method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.plot", false]], "plot() (gammapy.modeling.models.gaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot", false]], "plot() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.plot", false]], "plot() (gammapy.modeling.models.lineartemporalmodel method)": [[244, "gammapy.modeling.models.LinearTemporalModel.plot", false]], "plot() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.plot", false]], "plot() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot", false]], "plot() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.plot", false]], "plot() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.powerlawtemporalmodel method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.plot", false]], "plot() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.plot", false]], "plot() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.plot", false]], "plot() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.plot", false]], "plot() (gammapy.modeling.models.sinetemporalmodel method)": [[267, "gammapy.modeling.models.SineTemporalModel.plot", false]], "plot() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot", false]], "plot() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.plot", false]], "plot() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot", false]], "plot() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.plot", false]], "plot() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot", false]], "plot() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.plot", false]], "plot() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.plot", false]], "plot() (gammapy.modeling.models.temporalmodel method)": [[282, "gammapy.modeling.models.TemporalModel.plot", false]], "plot() (gammapy.visualization.mappanelplotter method)": [[373, "gammapy.visualization.MapPanelPlotter.plot", false]], "plot_at_energy() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.plot_at_energy", false]], "plot_at_energy() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.plot_at_energy", false]], "plot_bias() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.plot_bias", false]], "plot_bias() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.plot_bias", false]], "plot_containment_radius() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.plot_containment_radius", false]], "plot_containment_radius() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.plot_containment_radius", false]], "plot_containment_radius_vs_energy() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.plot_containment_radius_vs_energy", false]], "plot_containment_radius_vs_energy() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.plot_containment_radius_vs_energy", false]], "plot_contour_line() (in module gammapy.visualization)": [[378, "gammapy.visualization.plot_contour_line", false]], "plot_correlation() (gammapy.modeling.covariance method)": [[213, "gammapy.modeling.Covariance.plot_correlation", false]], "plot_counts() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_counts", false]], "plot_counts() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_counts", false]], "plot_distribution() (in module gammapy.visualization)": [[379, "gammapy.visualization.plot_distribution", false]], "plot_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy", false]], "plot_energy_dependence() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.plot_energy_dependence", false]], "plot_energy_dependence() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.plot_energy_dependence", false]], "plot_energy_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_energy_offset", false]], "plot_err() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.plot_err", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.plot_error", false]], "plot_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.plot_error", false]], "plot_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.plot_error", false]], "plot_error() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.plot_error", false]], "plot_excess() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_excess", false]], "plot_excess() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_excess", false]], "plot_fit() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_fit", false]], "plot_fit() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_fit", false]], "plot_grid() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.plot_grid", false]], "plot_grid() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.plot_grid", false]], "plot_grid() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.plot_grid", false]], "plot_grid() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.plot_grid", false]], "plot_grid() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.plot_grid", false]], "plot_heatmap() (in module gammapy.visualization)": [[380, "gammapy.visualization.plot_heatmap", false]], "plot_hist() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot_hist", false]], "plot_image() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_image", false]], "plot_interactive() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.plot_interactive", false]], "plot_interactive() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.plot_interactive", false]], "plot_interactive() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.plot_interactive", false]], "plot_interactive() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.plot_interactive", false]], "plot_kernel() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.plot_kernel", false]], "plot_map_rgb() (in module gammapy.visualization)": [[381, "gammapy.visualization.plot_map_rgb", false]], "plot_mask() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot_mask", false]], "plot_mask() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.plot_mask", false]], "plot_masks() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_masks", false]], "plot_masks() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_masks", false]], "plot_matrix() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.plot_matrix", false]], "plot_migration() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.plot_migration", false]], "plot_npred_signal() (in module gammapy.visualization)": [[382, "gammapy.visualization.plot_npred_signal", false]], "plot_offset2_distribution() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_offset2_distribution", false]], "plot_offset_dependence() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.plot_offset_dependence", false]], "plot_offset_dependence() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.plot_offset_dependence", false]], "plot_panel() (gammapy.visualization.mappanelplotter method)": [[373, "gammapy.visualization.MapPanelPlotter.plot_panel", false]], "plot_phasogram() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.plot_phasogram", false]], "plot_position_error() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.plot_position_error", false]], "plot_position_error() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.plot_position_error", false]], "plot_positions() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.plot_positions", false]], "plot_positions() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.plot_positions", false]], "plot_psf_vs_rad() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.plot_psf_vs_rad", false]], "plot_psf_vs_rad() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.plot_psf_vs_rad", false]], "plot_rad_max_vs_energy() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.plot_rad_max_vs_energy", false]], "plot_region() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.plot_region", false]], "plot_region() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.plot_region", false]], "plot_regions() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.plot_regions", false]], "plot_regions() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.plot_regions", false]], "plot_residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals", false]], "plot_residuals() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_residuals", false]], "plot_residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals", false]], "plot_residuals_spatial() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_residuals_spatial", false]], "plot_residuals_spatial() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spatial", false]], "plot_residuals_spectral() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.plot_residuals_spectral", false]], "plot_residuals_spectral() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.plot_residuals_spectral", false]], "plot_spectrum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.plot_spectrum", false]], "plot_spectrum() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.plot_spectrum", false]], "plot_spectrum_datasets_off_regions() (in module gammapy.visualization)": [[383, "gammapy.visualization.plot_spectrum_datasets_off_regions", false]], "plot_theta_squared_table() (in module gammapy.visualization)": [[384, "gammapy.visualization.plot_theta_squared_table", false]], "plot_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.plot_time", false]], "plot_ts_profiles() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.plot_ts_profiles", false]], "pointing (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.pointing", false]], "pointing (gammapy.data.pointingmode attribute)": [[95, "gammapy.data.PointingMode.POINTING", false]], "pointing_galactic (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_galactic", false]], "pointing_radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.pointing_radec", false]], "pointing_radec (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pointing_radec", false]], "pointinginfo (class in gammapy.data)": [[94, "gammapy.data.PointingInfo", false]], "pointingmode (class in gammapy.data)": [[95, "gammapy.data.PointingMode", false]], "pointspatialmodel (class in gammapy.modeling.models)": [[256, "gammapy.modeling.models.PointSpatialModel", false]], "polar() (in module gammapy.utils.coordinates)": [[318, "gammapy.utils.coordinates.polar", false]], "pool_kwargs_default (in module gammapy.utils.parallel)": [[332, "gammapy.utils.parallel.POOL_KWARGS_DEFAULT", false]], "pop() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.pop", false]], "pop() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.pop", false]], "pop() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.pop", false]], "pop() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.pop", false]], "popitem() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.popitem", false]], "position (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.position", false]], "position (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.position", false]], "position (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.position", false]], "position (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.position", false]], "position (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.position", false]], "position (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.position", false]], "position (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.position", false]], "position (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.position", false]], "position (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.position", false]], "position (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.position", false]], "position (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.position", false]], "position (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.position", false]], "position (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.position", false]], "position (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.position", false]], "position (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position", false]], "position (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.position", false]], "position (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.position", false]], "position (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.position", false]], "position (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.position", false]], "position (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.position", false]], "position (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.position", false]], "position (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.position", false]], "position (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.position", false]], "position (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.position", false]], "position_error (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.position_error", false]], "position_error (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.position_error", false]], "position_lonlat (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.position_lonlat", false]], "position_lonlat (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.position_lonlat", false]], "positions (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.positions", false]], "positions (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.positions", false]], "positions (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.positions", false]], "positions (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.positions", false]], "positions (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.positions", false]], "positions (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.positions", false]], "positions (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.positions", false]], "positions (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.positions", false]], "positions (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.positions", false]], "positions (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.positions", false]], "positions (gammapy.modeling.models.datasetmodels attribute)": [[228, "gammapy.modeling.models.DatasetModels.positions", false]], "positions (gammapy.modeling.models.models attribute)": [[252, "gammapy.modeling.models.Models.positions", false]], "powerlaw2spectralmodel (class in gammapy.modeling.models)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel", false]], "powerlawnormspectralmodel (class in gammapy.modeling.models)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel", false]], "powerlawspectralmodel (class in gammapy.modeling.models)": [[259, "gammapy.modeling.models.PowerLawSpectralModel", false]], "powerlawtemporalmodel (class in gammapy.modeling.models)": [[260, "gammapy.modeling.models.PowerLawTemporalModel", false]], "pprint() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint", false]], "pprint() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint", false]], "pprint_all() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.pprint_all", false]], "pprint_all() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.pprint_all", false]], "pprint_exclude_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_exclude_names", false]], "pprint_exclude_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_exclude_names", false]], "pprint_include_names (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.pprint_include_names", false]], "pprint_include_names (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.pprint_include_names", false]], "prepare_inputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_inputs", false]], "prepare_inputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_inputs", false]], "prepare_outputs() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.prepare_outputs", false]], "prepare_outputs() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.prepare_outputs", false]], "primary_axis (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.primary_axis", false]], "primaryflux (class in gammapy.astro.darkmatter)": [[26, "gammapy.astro.darkmatter.PrimaryFlux", false]], "prior (class in gammapy.modeling.models)": [[261, "gammapy.modeling.models.Prior", false]], "prior (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.prior", false]], "prior (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.prior", false]], "prior (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.prior", false]], "prior (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.prior", false]], "prior_stat_sum() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.prior_stat_sum", false]], "prior_stat_sum() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.prior_stat_sum", false]], "priorparameter (class in gammapy.modeling)": [[220, "gammapy.modeling.PriorParameter", false]], "priorparameters (class in gammapy.modeling)": [[221, "gammapy.modeling.PriorParameters", false]], "profile (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.profile", false]], "profile_err (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.profile_err", false]], "projected_distance_axis (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.projected_distance_axis", false]], "projection (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.projection", false]], "projection (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.projection", false]], "projection (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.projection", false]], "psf": [[584, "term-PSF", true]], "psf (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.psf", false]], "psf (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.psf", false]], "psf (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.psf", false]], "psf (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.psf", false]], "psf (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.psf", false]], "psf (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.psf", false]], "psf3d (class in gammapy.irf)": [[164, "gammapy.irf.PSF3D", false]], "psf_kernel_map (gammapy.irf.psfkernel attribute)": [[165, "gammapy.irf.PSFKernel.psf_kernel_map", false]], "psf_map (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.psf_map", false]], "psf_map (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.psf_map", false]], "psfkernel (class in gammapy.irf)": [[165, "gammapy.irf.PSFKernel", false]], "psfking (class in gammapy.irf)": [[166, "gammapy.irf.PSFKing", false]], "psfmap (class in gammapy.irf)": [[167, "gammapy.irf.PSFMap", false]], "pulsar (class in gammapy.astro.source)": [[51, "gammapy.astro.source.Pulsar", false]], "pwn (class in gammapy.astro.source)": [[50, "gammapy.astro.source.PWN", false]], "quantity (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.quantity", false]], "quantity (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.quantity", false]], "quantity (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.quantity", false]], "quantity (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.quantity", false]], "quantity (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.quantity", false]], "quantity (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.quantity", false]], "quantity (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.quantity", false]], "quantity (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.quantity", false]], "quantity (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.quantity", false]], "quantity (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.quantity", false]], "quantity (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.quantity", false]], "quantity (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.quantity", false]], "quantity (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.quantity", false]], "quantity (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.quantity", false]], "quantity (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.quantity", false]], "quantity (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.quantity", false]], "quantity (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.quantity", false]], "quantity (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.quantity", false]], "quantity (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.quantity", false]], "quantity (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.quantity", false]], "r_0 (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.r_0", false]], "r_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.r_0", false]], "r_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_0", false]], "r_0 (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.r_0", false]], "r_0 (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.r_0", false]], "r_1 (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.r_1", false]], "r_exp (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.r_exp", false]], "r_in (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.r_in", false]], "r_sun (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.r_sun", false]], "rad_max (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.rad_max", false]], "radec (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.radec", false]], "radec (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.radec", false]], "radec (gammapy.irf.fovalignment attribute)": [[160, "gammapy.irf.FoVAlignment.RADEC", false]], "radial_distributions (in module gammapy.astro.population)": [[48, "gammapy.astro.population.radial_distributions", false]], "radius (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.radius", false]], "radius() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.radius", false]], "radius() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.radius", false]], "radius() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.radius", false]], "radius() (gammapy.astro.source.pwn method)": [[50, "gammapy.astro.source.PWN.radius", false]], "radius() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius", false]], "radius() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius", false]], "radius_inner() (gammapy.astro.source.snr method)": [[52, "gammapy.astro.source.SNR.radius_inner", false]], "radius_inner() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_inner", false]], "radius_reverse_shock() (gammapy.astro.source.snrtruelovemckee method)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.radius_reverse_shock", false]], "radmax2d (class in gammapy.irf)": [[169, "gammapy.irf.RadMax2D", false]], "read() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.read", false]], "read() (gammapy.data.eventlist class method)": [[83, "gammapy.data.EventList.read", false]], "read() (gammapy.data.fixedpointinginfo class method)": [[85, "gammapy.data.FixedPointingInfo.read", false]], "read() (gammapy.data.gti class method)": [[86, "gammapy.data.GTI.read", false]], "read() (gammapy.data.hduindextable class method)": [[87, "gammapy.data.HDUIndexTable.read", false]], "read() (gammapy.data.observation class method)": [[88, "gammapy.data.Observation.read", false]], "read() (gammapy.data.observationtable class method)": [[91, "gammapy.data.ObservationTable.read", false]], "read() (gammapy.data.pointinginfo class method)": [[94, "gammapy.data.PointingInfo.read", false]], "read() (gammapy.datasets.datasets class method)": [[100, "gammapy.datasets.Datasets.read", false]], "read() (gammapy.datasets.fermipydatasetsreader method)": [[101, "gammapy.datasets.FermipyDatasetsReader.read", false]], "read() (gammapy.datasets.fluxpointsdataset class method)": [[102, "gammapy.datasets.FluxPointsDataset.read", false]], "read() (gammapy.datasets.mapdataset class method)": [[103, "gammapy.datasets.MapDataset.read", false]], "read() (gammapy.datasets.mapdatasetonoff class method)": [[106, "gammapy.datasets.MapDatasetOnOff.read", false]], "read() (gammapy.datasets.mapdatasetweighted class method)": [[107, "gammapy.datasets.MapDatasetWeighted.read", false]], "read() (gammapy.datasets.ogipdatasetreader method)": [[108, "gammapy.datasets.OGIPDatasetReader.read", false]], "read() (gammapy.datasets.spectrumdataset class method)": [[111, "gammapy.datasets.SpectrumDataset.read", false]], "read() (gammapy.datasets.spectrumdatasetonoff class method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.read", false]], "read() (gammapy.estimators.fluxmaps class method)": [[126, "gammapy.estimators.FluxMaps.read", false]], "read() (gammapy.estimators.fluxpoints class method)": [[128, "gammapy.estimators.FluxPoints.read", false]], "read() (gammapy.irf.background2d class method)": [[151, "gammapy.irf.Background2D.read", false]], "read() (gammapy.irf.background3d class method)": [[152, "gammapy.irf.Background3D.read", false]], "read() (gammapy.irf.backgroundirf class method)": [[153, "gammapy.irf.BackgroundIRF.read", false]], "read() (gammapy.irf.edispkernel class method)": [[154, "gammapy.irf.EDispKernel.read", false]], "read() (gammapy.irf.edispkernelmap class method)": [[155, "gammapy.irf.EDispKernelMap.read", false]], "read() (gammapy.irf.edispmap class method)": [[156, "gammapy.irf.EDispMap.read", false]], "read() (gammapy.irf.effectiveareatable2d class method)": [[157, "gammapy.irf.EffectiveAreaTable2D.read", false]], "read() (gammapy.irf.energydependentmultigausspsf class method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.read", false]], "read() (gammapy.irf.energydispersion2d class method)": [[159, "gammapy.irf.EnergyDispersion2D.read", false]], "read() (gammapy.irf.irf class method)": [[161, "gammapy.irf.IRF.read", false]], "read() (gammapy.irf.irfmap class method)": [[162, "gammapy.irf.IRFMap.read", false]], "read() (gammapy.irf.parametricpsf class method)": [[168, "gammapy.irf.ParametricPSF.read", false]], "read() (gammapy.irf.psf3d class method)": [[164, "gammapy.irf.PSF3D.read", false]], "read() (gammapy.irf.psfkernel class method)": [[165, "gammapy.irf.PSFKernel.read", false]], "read() (gammapy.irf.psfking class method)": [[166, "gammapy.irf.PSFKing.read", false]], "read() (gammapy.irf.psfmap class method)": [[167, "gammapy.irf.PSFMap.read", false]], "read() (gammapy.irf.radmax2d class method)": [[169, "gammapy.irf.RadMax2D.read", false]], "read() (gammapy.irf.recopsfmap class method)": [[170, "gammapy.irf.RecoPSFMap.read", false]], "read() (gammapy.maps.hpxmap static method)": [[197, "gammapy.maps.HpxMap.read", false]], "read() (gammapy.maps.hpxndmap static method)": [[198, "gammapy.maps.HpxNDMap.read", false]], "read() (gammapy.maps.map static method)": [[200, "gammapy.maps.Map.read", false]], "read() (gammapy.maps.maps class method)": [[204, "gammapy.maps.Maps.read", false]], "read() (gammapy.maps.regionndmap class method)": [[206, "gammapy.maps.RegionNDMap.read", false]], "read() (gammapy.maps.wcsmap static method)": [[209, "gammapy.maps.WcsMap.read", false]], "read() (gammapy.maps.wcsndmap static method)": [[210, "gammapy.maps.WcsNDMap.read", false]], "read() (gammapy.modeling.models.datasetmodels class method)": [[228, "gammapy.modeling.models.DatasetModels.read", false]], "read() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read", false]], "read() (gammapy.modeling.models.lightcurvetemplatetemporalmodel class method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.read", false]], "read() (gammapy.modeling.models.models class method)": [[252, "gammapy.modeling.models.Models.read", false]], "read() (gammapy.modeling.models.templatephasecurvetemporalmodel class method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.read", false]], "read() (gammapy.modeling.models.templatespatialmodel class method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.read", false]], "read_arf() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_arf", false]], "read_bkg() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_bkg", false]], "read_builtin() (gammapy.modeling.models.eblabsorptionnormspectralmodel class method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.read_builtin", false]], "read_covariance() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.read_covariance", false]], "read_covariance() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.read_covariance", false]], "read_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_datasets", false]], "read_hermes_cube() (in module gammapy.modeling.models)": [[288, "gammapy.modeling.models.read_hermes_cube", false]], "read_hermes_cube() (in module gammapy.modeling.models.utils)": [[290, "gammapy.modeling.models.utils.read_hermes_cube", false]], "read_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.read_models", false]], "read_pha() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_pha", false]], "read_rmf() (gammapy.datasets.ogipdatasetreader static method)": [[108, "gammapy.datasets.OGIPDatasetReader.read_rmf", false]], "read_xspec_model() (gammapy.modeling.models.templatespectralmodel class method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.read_xspec_model", false]], "read_yaml() (in module gammapy.utils.scripts)": [[352, "gammapy.utils.scripts.read_yaml", false]], "reassign() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reassign", false]], "reassign() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reassign", false]], "reassign() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.constanttemporalmodel method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.reassign", false]], "reassign() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.expdecaytemporalmodel method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.fovbackgroundmodel method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianprior method)": [[237, "gammapy.modeling.models.GaussianPrior.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.gaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.lineartemporalmodel method)": [[244, "gammapy.modeling.models.LinearTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.loguniformprior method)": [[247, "gammapy.modeling.models.LogUniformPrior.reassign", false]], "reassign() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.modelbase method)": [[251, "gammapy.modeling.models.ModelBase.reassign", false]], "reassign() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.reassign", false]], "reassign() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.powerlawtemporalmodel method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.prior method)": [[261, "gammapy.modeling.models.Prior.reassign", false]], "reassign() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.sinetemporalmodel method)": [[267, "gammapy.modeling.models.SineTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.skymodel method)": [[268, "gammapy.modeling.models.SkyModel.reassign", false]], "reassign() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.templatenpredmodel method)": [[278, "gammapy.modeling.models.TemplateNPredModel.reassign", false]], "reassign() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.reassign", false]], "reassign() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.reassign", false]], "reassign() (gammapy.modeling.models.temporalmodel method)": [[282, "gammapy.modeling.models.TemporalModel.reassign", false]], "reassign() (gammapy.modeling.models.uniformprior method)": [[283, "gammapy.modeling.models.UniformPrior.reassign", false]], "reco energy": [[584, "term-Reco-Energy", true]], "recompute_ul() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.recompute_ul", false]], "recopsfmap (class in gammapy.irf)": [[170, "gammapy.irf.RecoPSFMap", false]], "recursive_merge_dicts() (in module gammapy.utils.scripts)": [[353, "gammapy.utils.scripts.recursive_merge_dicts", false]], "redshift (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.redshift", false]], "reduce() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.reduce", false]], "reduce() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.reduce", false]], "reduce() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.reduce", false]], "reduce() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.reduce", false]], "reduce() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.reduce", false]], "reduce() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.reduce", false]], "reduce_over_axes() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.reduce_over_axes", false]], "reduce_over_axes() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.reduce_over_axes", false]], "reference (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.reference", false]], "reference (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference", false]], "reference (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.reference_fluxes", false]], "reference_fluxes() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.reference_fluxes", false]], "reference_model (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.reference_model", false]], "reference_model (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.reference_model", false]], "reference_model_default (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.reference_model_default", false]], "reference_model_default (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.reference_model_default", false]], "reference_spectral_model (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.reference_spectral_model", false]], "reference_spectral_model (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.reference_spectral_model", false]], "reference_time (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.reference_time", false]], "reference_time (gammapy.modeling.models.constanttemporalmodel attribute)": [[227, "gammapy.modeling.models.ConstantTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.reference_time", false]], "reference_time (gammapy.modeling.models.temporalmodel attribute)": [[282, "gammapy.modeling.models.TemporalModel.reference_time", false]], "reflected background": [[584, "term-Reflected-Background", true]], "reflectedregionsbackgroundmaker (class in gammapy.makers)": [[179, "gammapy.makers.ReflectedRegionsBackgroundMaker", false]], "reflectedregionsfinder (class in gammapy.makers)": [[180, "gammapy.makers.ReflectedRegionsFinder", false]], "region (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.region", false]], "region (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.region", false]], "region_mask() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.region_mask", false]], "region_mask() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.region_mask", false]], "region_to_frame() (in module gammapy.utils.regions)": [[347, "gammapy.utils.regions.region_to_frame", false]], "region_weights() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.region_weights", false]], "regiongeom (class in gammapy.maps)": [[205, "gammapy.maps.RegionGeom", false]], "regionndmap (class in gammapy.maps)": [[206, "gammapy.maps.RegionNDMap", false]], "regions_to_compound_region() (in module gammapy.utils.regions)": [[348, "gammapy.utils.regions.regions_to_compound_region", false]], "regionsfinder (class in gammapy.makers)": [[181, "gammapy.makers.RegionsFinder", false]], "remove() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.remove", false]], "remove() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.remove", false]], "remove() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.remove", false]], "remove_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_column", false]], "remove_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_column", false]], "remove_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_columns", false]], "remove_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_columns", false]], "remove_indices() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_indices", false]], "remove_indices() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_indices", false]], "remove_row() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_row", false]], "remove_row() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_row", false]], "remove_rows() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.remove_rows", false]], "remove_rows() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.remove_rows", false]], "rename() (gammapy.astro.population.casebattacharya1998 class method)": [[28, "gammapy.astro.population.CaseBattacharya1998.rename", false]], "rename() (gammapy.astro.population.exponential class method)": [[29, "gammapy.astro.population.Exponential.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006 class method)": [[30, "gammapy.astro.population.FaucherKaspi2006.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitybimodal class method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.rename", false]], "rename() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian class method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.rename", false]], "rename() (gammapy.astro.population.lorimer2006 class method)": [[35, "gammapy.astro.population.Lorimer2006.rename", false]], "rename() (gammapy.astro.population.paczynski1990 class method)": [[36, "gammapy.astro.population.Paczynski1990.rename", false]], "rename() (gammapy.astro.population.paczynski1990velocity class method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004 class method)": [[39, "gammapy.astro.population.YusifovKucuk2004.rename", false]], "rename() (gammapy.astro.population.yusifovkucuk2004b class method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.rename", false]], "rename() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.rename", false]], "rename_axes() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.rename_axes", false]], "rename_axes() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.rename_axes", false]], "rename_axes() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.rename_axes", false]], "rename_axes() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.rename_axes", false]], "rename_axes() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.rename_axes", false]], "rename_axes() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.rename_axes", false]], "rename_axes() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.rename_axes", false]], "rename_axes() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.rename_axes", false]], "rename_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_column", false]], "rename_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_column", false]], "rename_columns() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.rename_columns", false]], "rename_columns() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.rename_columns", false]], "render() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.render", false]], "render() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.render", false]], "render() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.render", false]], "render() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.render", false]], "render() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.render", false]], "render() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.render", false]], "render() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.render", false]], "render() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.render", false]], "reorder_axes() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.reorder_axes", false]], "reorder_axes() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.reorder_axes", false]], "reorder_axes() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.reorder_axes", false]], "replace() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.replace", false]], "replace_axis() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.replace_axis", false]], "replace_axis() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.replace_axis", false]], "replace_axis() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.replace_axis", false]], "replace_axis() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.replace_axis", false]], "replace_column() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.replace_column", false]], "replace_column() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.replace_column", false]], "reproject_by_image() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.reproject_by_image", false]], "reproject_by_image() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.reproject_by_image", false]], "reproject_to_geom() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.reproject_to_geom", false]], "reproject_to_geom() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.reproject_to_geom", false]], "required_axes (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.required_axes", false]], "required_axes (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.required_axes", false]], "required_axes (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.required_axes", false]], "required_axes (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.required_axes", false]], "required_axes (gammapy.irf.edispkernelmap attribute)": [[155, "gammapy.irf.EDispKernelMap.required_axes", false]], "required_axes (gammapy.irf.edispmap attribute)": [[156, "gammapy.irf.EDispMap.required_axes", false]], "required_axes (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.required_axes", false]], "required_axes (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.required_axes", false]], "required_axes (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.required_axes", false]], "required_axes (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.required_axes", false]], "required_axes (gammapy.irf.irfmap attribute)": [[162, "gammapy.irf.IRFMap.required_axes", false]], "required_axes (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.required_axes", false]], "required_axes (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.required_axes", false]], "required_axes (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.required_axes", false]], "required_axes (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.required_axes", false]], "required_axes (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.required_axes", false]], "required_axes (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.required_axes", false]], "required_parameters (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.required_parameters", false]], "required_parameters (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.required_parameters", false]], "required_parameters (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.required_parameters", false]], "requires_data() (in module gammapy.utils.testing)": [[365, "gammapy.utils.testing.requires_data", false]], "requires_dependency() (in module gammapy.utils.testing)": [[366, "gammapy.utils.testing.requires_dependency", false]], "resample() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.resample", false]], "resample() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.resample", false]], "resample() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.resample", false]], "resample() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.resample", false]], "resample() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.resample", false]], "resample() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.resample", false]], "resample() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.resample", false]], "resample() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.resample", false]], "resample_axis() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.resample_axis", false]], "resample_axis() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.resample_axis", false]], "resample_axis() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.resample_axis", false]], "resample_axis() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.resample_axis", false]], "resample_axis() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.resample_axis", false]], "resample_axis() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.resample_axis", false]], "resample_axis() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.resample_axis", false]], "resample_axis() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.resample_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.resample_energy_axis", false]], "resample_energy_axis() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.resample_energy_axis", false]], "resample_energy_axis() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.resample_energy_axis", false]], "resample_energy_edges() (in module gammapy.estimators.utils)": [[150, "gammapy.estimators.utils.resample_energy_edges", false]], "reset_data_cache() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.reset_data_cache", false]], "reset_data_cache() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.reset_data_cache", false]], "reset_to_default() (gammapy.modeling.models.fovbackgroundmodel method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.reset_to_default", false]], "residuals() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.residuals", false]], "residuals() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.residuals", false]], "residuals() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.residuals", false]], "residuals() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.residuals", false]], "residuals() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.residuals", false]], "residuals() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.residuals", false]], "restore_status() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.restore_status", false]], "restore_status() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.restore_status", false]], "restore_status() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.restore_status", false]], "restore_status() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.restore_status", false]], "return_units (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.return_units", false]], "return_units (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.return_units", false]], "return_units (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.return_units", false]], "return_units (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.return_units", false]], "return_units (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.return_units", false]], "return_units (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.return_units", false]], "return_units (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.return_units", false]], "reverse (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.reverse", false]], "reverse() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.reverse", false]], "reverse() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.reverse", false]], "reverse() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.reverse", false]], "reverse() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.reverse", false]], "reverse() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.reverse", false]], "reverse_lon_radec (gammapy.irf.fovalignment attribute)": [[160, "gammapy.irf.FoVAlignment.REVERSE_LON_RADEC", false]], "ring background": [[584, "term-Ring-Background", true]], "ringbackgroundmaker (class in gammapy.makers)": [[182, "gammapy.makers.RingBackgroundMaker", false]], "roi": [[584, "term-RoI", true]], "round() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.round", false]], "round() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.round", false]], "round() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.round", false]], "row_idx() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.row_idx", false]], "row_index (gammapy.catalog.sourcecatalogobject attribute)": [[69, "gammapy.catalog.SourceCatalogObject.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject1lhaaso attribute)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2fhl attribute)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2hwc attribute)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject2pc attribute)": [[73, "gammapy.catalog.SourceCatalogObject2PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fgl attribute)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3fhl attribute)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3hwc attribute)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject3pc attribute)": [[77, "gammapy.catalog.SourceCatalogObject3PC.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobject4fgl attribute)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjectgammacat attribute)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgps attribute)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.row_index", false]], "row_index (gammapy.catalog.sourcecatalogobjecthgpscomponent attribute)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.row_index", false]], "row_index() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.row_index", false]], "row_index() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.row_index", false]], "row_index() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.row_index", false]], "run() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.run", false]], "run() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.run", false]], "run() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.run", false]], "run() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.run", false]], "run() (gammapy.estimators.energydependentmorphologyestimator method)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.run", false]], "run() (gammapy.estimators.estimator method)": [[124, "gammapy.estimators.Estimator.run", false]], "run() (gammapy.estimators.excessmapestimator method)": [[125, "gammapy.estimators.ExcessMapEstimator.run", false]], "run() (gammapy.estimators.fluxpointsestimator method)": [[129, "gammapy.estimators.FluxPointsEstimator.run", false]], "run() (gammapy.estimators.fluxprofileestimator method)": [[130, "gammapy.estimators.FluxProfileEstimator.run", false]], "run() (gammapy.estimators.imageprofileestimator method)": [[132, "gammapy.estimators.ImageProfileEstimator.run", false]], "run() (gammapy.estimators.lightcurveestimator method)": [[133, "gammapy.estimators.LightCurveEstimator.run", false]], "run() (gammapy.estimators.parameterestimator method)": [[134, "gammapy.estimators.ParameterEstimator.run", false]], "run() (gammapy.estimators.parametersensitivityestimator method)": [[135, "gammapy.estimators.ParameterSensitivityEstimator.run", false]], "run() (gammapy.estimators.sensitivityestimator method)": [[136, "gammapy.estimators.SensitivityEstimator.run", false]], "run() (gammapy.estimators.tsmapestimator method)": [[137, "gammapy.estimators.TSMapEstimator.run", false]], "run() (gammapy.makers.adaptiveringbackgroundmaker method)": [[172, "gammapy.makers.AdaptiveRingBackgroundMaker.run", false]], "run() (gammapy.makers.datasetsmaker method)": [[173, "gammapy.makers.DatasetsMaker.run", false]], "run() (gammapy.makers.fovbackgroundmaker method)": [[174, "gammapy.makers.FoVBackgroundMaker.run", false]], "run() (gammapy.makers.maker method)": [[176, "gammapy.makers.Maker.run", false]], "run() (gammapy.makers.mapdatasetmaker method)": [[177, "gammapy.makers.MapDatasetMaker.run", false]], "run() (gammapy.makers.phasebackgroundmaker method)": [[178, "gammapy.makers.PhaseBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsbackgroundmaker method)": [[179, "gammapy.makers.ReflectedRegionsBackgroundMaker.run", false]], "run() (gammapy.makers.reflectedregionsfinder method)": [[180, "gammapy.makers.ReflectedRegionsFinder.run", false]], "run() (gammapy.makers.regionsfinder method)": [[181, "gammapy.makers.RegionsFinder.run", false]], "run() (gammapy.makers.ringbackgroundmaker method)": [[182, "gammapy.makers.RingBackgroundMaker.run", false]], "run() (gammapy.makers.safemaskmaker method)": [[183, "gammapy.makers.SafeMaskMaker.run", false]], "run() (gammapy.makers.spectrumdatasetmaker method)": [[184, "gammapy.makers.SpectrumDatasetMaker.run", false]], "run() (gammapy.makers.wobbleregionsfinder method)": [[185, "gammapy.makers.WobbleRegionsFinder.run", false]], "run() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.run", false]], "run() (gammapy.utils.testing.checker method)": [[360, "gammapy.utils.testing.Checker.run", false]], "run_fit() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.run_fit", false]], "run_multiprocessing() (in module gammapy.utils.parallel)": [[334, "gammapy.utils.parallel.run_multiprocessing", false]], "safe_mask_maker (gammapy.makers.datasetsmaker attribute)": [[173, "gammapy.makers.DatasetsMaker.safe_mask_maker", false]], "safemaskmaker (class in gammapy.makers)": [[183, "gammapy.makers.SafeMaskMaker", false]], "sample() (gammapy.utils.random.inversecdfsampler method)": [[335, "gammapy.utils.random.InverseCDFSampler.sample", false]], "sample_axis() (gammapy.utils.random.inversecdfsampler method)": [[335, "gammapy.utils.random.InverseCDFSampler.sample_axis", false]], "sample_background() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_background", false]], "sample_background() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_background", false]], "sample_coord() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.sample_coord", false]], "sample_coord() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.sample_coord", false]], "sample_coord() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.sample_coord", false]], "sample_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.sample_coord", false]], "sample_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.sample_coord", false]], "sample_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.sample_coord", false]], "sample_edisp() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_edisp", false]], "sample_edisp() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_edisp", false]], "sample_powerlaw() (in module gammapy.utils.random)": [[340, "gammapy.utils.random.sample_powerlaw", false]], "sample_psf() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_psf", false]], "sample_psf() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_psf", false]], "sample_sources() (gammapy.datasets.mapdataseteventsampler method)": [[104, "gammapy.datasets.MapDatasetEventSampler.sample_sources", false]], "sample_sources() (gammapy.datasets.observationeventsampler method)": [[110, "gammapy.datasets.ObservationEventSampler.sample_sources", false]], "sample_sphere() (in module gammapy.utils.random)": [[341, "gammapy.utils.random.sample_sphere", false]], "sample_sphere_distance() (in module gammapy.utils.random)": [[342, "gammapy.utils.random.sample_sphere_distance", false]], "sample_time() (gammapy.modeling.models.constanttemporalmodel method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.expdecaytemporalmodel method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.gaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.lineartemporalmodel method)": [[244, "gammapy.modeling.models.LinearTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.powerlawtemporalmodel method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.sinetemporalmodel method)": [[267, "gammapy.modeling.models.SineTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.sample_time", false]], "sample_time() (gammapy.modeling.models.temporalmodel method)": [[282, "gammapy.modeling.models.TemporalModel.sample_time", false]], "sample_times() (in module gammapy.utils.random)": [[343, "gammapy.utils.random.sample_times", false]], "scale (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.scale", false]], "scale (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.scale", false]], "scale (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scale", false]], "scale (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scale", false]], "scale_method (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scale_method", false]], "scale_method (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scale_method", false]], "scale_plot_flux() (in module gammapy.modeling.models)": [[289, "gammapy.modeling.models.scale_plot_flux", false]], "scale_to_local_density() (gammapy.astro.darkmatter.burkertprofile method)": [[17, "gammapy.astro.darkmatter.BurkertProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.dmprofile method)": [[18, "gammapy.astro.darkmatter.DMProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.einastoprofile method)": [[21, "gammapy.astro.darkmatter.EinastoProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.isothermalprofile method)": [[22, "gammapy.astro.darkmatter.IsothermalProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.mooreprofile method)": [[24, "gammapy.astro.darkmatter.MooreProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.nfwprofile method)": [[25, "gammapy.astro.darkmatter.NFWProfile.scale_to_local_density", false]], "scale_to_local_density() (gammapy.astro.darkmatter.zhaoprofile method)": [[27, "gammapy.astro.darkmatter.ZhaoProfile.scale_to_local_density", false]], "scaledregulargridinterpolator (class in gammapy.utils.interpolation)": [[325, "gammapy.utils.interpolation.ScaledRegularGridInterpolator", false]], "scalespectralmodel (class in gammapy.modeling.models)": [[264, "gammapy.modeling.models.ScaleSpectralModel", false]], "scan_max (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scan_max", false]], "scan_max (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scan_max", false]], "scan_min (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scan_min", false]], "scan_min (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scan_min", false]], "scan_n_sigma (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scan_n_sigma", false]], "scan_n_sigma (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scan_n_sigma", false]], "scan_values (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.scan_values", false]], "scan_values (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.scan_values", false]], "schema() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema", false]], "schema() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema", false]], "schema() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema", false]], "schema() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema", false]], "schema() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.schema", false]], "schema_json() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.schema_json", false]], "schema_json() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.schema_json", false]], "schema_json() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.schema_json", false]], "schema_json() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.schema_json", false]], "schema_json() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.schema_json", false]], "scipy_mvn (gammapy.modeling.covariance attribute)": [[213, "gammapy.modeling.Covariance.scipy_mvn", false]], "sed": [[584, "term-SED", true]], "sed_type_init (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sed_type_init", false]], "sed_type_init (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sed_type_init", false]], "sed_type_plot_default (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sed_type_plot_default", false]], "sed_type_plot_default (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sed_type_plot_default", false]], "sedov_taylor_begin (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_begin", false]], "sedov_taylor_begin (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_begin", false]], "sedov_taylor_end (gammapy.astro.source.snr attribute)": [[52, "gammapy.astro.source.SNR.sedov_taylor_end", false]], "sedov_taylor_end (gammapy.astro.source.snrtruelovemckee attribute)": [[53, "gammapy.astro.source.SNRTrueloveMcKee.sedov_taylor_end", false]], "select() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.select", false]], "select() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.select", false]], "select() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.select", false]], "select() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.select", false]], "select_energy() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_energy", false]], "select_from_geom() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.select_from_geom", false]], "select_from_geom() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.select_from_geom", false]], "select_mask() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_mask", false]], "select_mask() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.select_mask", false]], "select_mask() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.select_mask", false]], "select_nested_models() (in module gammapy.modeling)": [[291, "gammapy.modeling.select_nested_models", false]], "select_obs_id() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_obs_id", false]], "select_observations() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_observations", false]], "select_offset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_offset", false]], "select_parameter() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_parameter", false]], "select_rad_max() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_rad_max", false]], "select_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_range", false]], "select_region() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_region", false]], "select_region() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.select_region", false]], "select_region() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.select_region", false]], "select_row_subset() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_row_subset", false]], "select_sky_circle() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_sky_circle", false]], "select_time() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.select_time", false]], "select_time() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.select_time", false]], "select_time() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.select_time", false]], "select_time() (gammapy.data.observations method)": [[92, "gammapy.data.Observations.select_time", false]], "select_time() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.select_time", false]], "select_time_range() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.select_time_range", false]], "selection_all (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.selection_all", false]], "selection_all() (gammapy.estimators.asmoothmapestimator method)": [[121, "gammapy.estimators.ASmoothMapEstimator.selection_all", false]], "selection_mask() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.selection_mask", false]], "selection_mask() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.selection_mask", false]], "selection_optional (gammapy.estimators.asmoothmapestimator attribute)": [[121, "gammapy.estimators.ASmoothMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.energydependentmorphologyestimator attribute)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.estimator attribute)": [[124, "gammapy.estimators.Estimator.selection_optional", false]], "selection_optional (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.imageprofileestimator attribute)": [[132, "gammapy.estimators.ImageProfileEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.parameterestimator attribute)": [[134, "gammapy.estimators.ParameterEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.sensitivityestimator attribute)": [[136, "gammapy.estimators.SensitivityEstimator.selection_optional", false]], "selection_optional (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.selection_optional", false]], "sensitivityestimator (class in gammapy.estimators)": [[136, "gammapy.estimators.SensitivityEstimator", false]], "separable (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.separable", false]], "separable (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.separable", false]], "separable (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.separable", false]], "separable (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.separable", false]], "separable (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.separable", false]], "separable (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.separable", false]], "separable (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.separable", false]], "separation() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.separation", false]], "separation() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.separation", false]], "separation() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.separation", false]], "set_by_coord() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.set_by_coord", false]], "set_by_coord() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.set_by_coord", false]], "set_by_coord() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.set_by_coord", false]], "set_by_idx() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.set_by_idx", false]], "set_by_idx() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.set_by_idx", false]], "set_by_idx() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.set_by_idx", false]], "set_by_pix() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.set_by_pix", false]], "set_by_pix() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.set_by_pix", false]], "set_by_pix() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.set_by_pix", false]], "set_lim() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.set_lim", false]], "set_lim() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.set_lim", false]], "set_logging() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.set_logging", false]], "set_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.set_models", false]], "set_parameter_factors() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.set_parameter_factors", false]], "set_parameter_factors() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.set_parameter_factors", false]], "set_parameters_bounds() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.set_parameters_bounds", false]], "set_parameters_bounds() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.set_parameters_bounds", false]], "set_prior() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.set_prior", false]], "set_slice_args() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.set_slice_args", false]], "set_slice_args() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.set_slice_args", false]], "set_subcovariance() (gammapy.modeling.covariance method)": [[213, "gammapy.modeling.Covariance.set_subcovariance", false]], "setdefault() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.setdefault", false]], "shape (gammapy.maps.mapaxes attribute)": [[201, "gammapy.maps.MapAxes.shape", false]], "shape (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.shape", false]], "shape (gammapy.modeling.covariance attribute)": [[213, "gammapy.modeling.Covariance.shape", false]], "shape_axes (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.shape_axes", false]], "shape_axes (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.shape_axes", false]], "shell2spatialmodel (class in gammapy.modeling.models)": [[265, "gammapy.modeling.models.Shell2SpatialModel", false]], "shellspatialmodel (class in gammapy.modeling.models)": [[266, "gammapy.modeling.models.ShellSpatialModel", false]], "show_in_browser() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_browser", false]], "show_in_browser() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_browser", false]], "show_in_notebook() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.show_in_notebook", false]], "show_in_notebook() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.show_in_notebook", false]], "sigma (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sigma", false]], "sigma (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sigma", false]], "sigma (gammapy.modeling.models.gaussianprior attribute)": [[237, "gammapy.modeling.models.GaussianPrior.sigma", false]], "sigma (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.sigma", false]], "sigma (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.sigma", false]], "sigma (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.sigma", false]], "sigma_1 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_1", false]], "sigma_2 (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sigma_2", false]], "simplepulsar (class in gammapy.astro.source)": [[54, "gammapy.astro.source.SimplePulsar", false]], "simulate_observation() (gammapy.data.observationseventssampler method)": [[93, "gammapy.data.ObservationsEventsSampler.simulate_observation", false]], "sinetemporalmodel (class in gammapy.modeling.models)": [[267, "gammapy.modeling.models.SineTemporalModel", false]], "size (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.size", false]], "sky_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.sky_model", false]], "sky_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.sky_model", false]], "sky_to_fov() (in module gammapy.utils.coordinates)": [[319, "gammapy.utils.coordinates.sky_to_fov", false]], "skycoord (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.skycoord", false]], "skymodel (class in gammapy.modeling.models)": [[268, "gammapy.modeling.models.SkyModel", false]], "slice() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.slice", false]], "slice() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.slice", false]], "slice() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.slice", false]], "slice_by_coord() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_coord", false]], "slice_by_coord() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_coord", false]], "slice_by_energy() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.slice_by_energy", false]], "slice_by_energy() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_energy", false]], "slice_by_energy() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_energy", false]], "slice_by_energy() (gammapy.modeling.models.templatenpredmodel method)": [[278, "gammapy.modeling.models.TemplateNPredModel.slice_by_energy", false]], "slice_by_idx() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.slice_by_idx", false]], "slice_by_idx() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_idx", false]], "slice_by_idx() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.slice_by_idx", false]], "slice_by_idx() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.slice_by_idx", false]], "slice_by_idx() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.slice_by_idx", false]], "slice_by_time() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.slice_by_time", false]], "slice_by_time() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.slice_by_time", false]], "smooth() (gammapy.estimators.imageprofile method)": [[131, "gammapy.estimators.ImageProfile.smooth", false]], "smooth() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.smooth", false]], "smooth() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.smooth", false]], "smoothbrokenpowerlawspectralmodel (class in gammapy.modeling.models)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel", false]], "snr (class in gammapy.astro.source)": [[52, "gammapy.astro.source.SNR", false]], "snrtruelovemckee (class in gammapy.astro.source)": [[53, "gammapy.astro.source.SNRTrueloveMcKee", false]], "solid_angle() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.solid_angle", false]], "solid_angle() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.solid_angle", false]], "solid_angle() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.solid_angle", false]], "solid_angle() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.solid_angle", false]], "sort() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.sort", false]], "sort() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.sort", false]], "source_name() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.source_name", false]], "source_name() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.source_name", false]], "source_name() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.source_name", false]], "source_name() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.source_name", false]], "sourcecatalog (class in gammapy.catalog)": [[56, "gammapy.catalog.SourceCatalog", false]], "sourcecatalog1lhaaso (class in gammapy.catalog)": [[57, "gammapy.catalog.SourceCatalog1LHAASO", false]], "sourcecatalog2fhl (class in gammapy.catalog)": [[58, "gammapy.catalog.SourceCatalog2FHL", false]], "sourcecatalog2hwc (class in gammapy.catalog)": [[59, "gammapy.catalog.SourceCatalog2HWC", false]], "sourcecatalog2pc (class in gammapy.catalog)": [[60, "gammapy.catalog.SourceCatalog2PC", false]], "sourcecatalog3fgl (class in gammapy.catalog)": [[61, "gammapy.catalog.SourceCatalog3FGL", false]], "sourcecatalog3fhl (class in gammapy.catalog)": [[62, "gammapy.catalog.SourceCatalog3FHL", false]], "sourcecatalog3hwc (class in gammapy.catalog)": [[63, "gammapy.catalog.SourceCatalog3HWC", false]], "sourcecatalog3pc (class in gammapy.catalog)": [[64, "gammapy.catalog.SourceCatalog3PC", false]], "sourcecatalog4fgl (class in gammapy.catalog)": [[65, "gammapy.catalog.SourceCatalog4FGL", false]], "sourcecataloggammacat (class in gammapy.catalog)": [[66, "gammapy.catalog.SourceCatalogGammaCat", false]], "sourcecataloghgps (class in gammapy.catalog)": [[67, "gammapy.catalog.SourceCatalogHGPS", false]], "sourcecataloglargescalehgps (class in gammapy.catalog)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS", false]], "sourcecatalogobject (class in gammapy.catalog)": [[69, "gammapy.catalog.SourceCatalogObject", false]], "sourcecatalogobject1lhaaso (class in gammapy.catalog)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO", false]], "sourcecatalogobject2fhl (class in gammapy.catalog)": [[71, "gammapy.catalog.SourceCatalogObject2FHL", false]], "sourcecatalogobject2hwc (class in gammapy.catalog)": [[72, "gammapy.catalog.SourceCatalogObject2HWC", false]], "sourcecatalogobject2pc (class in gammapy.catalog)": [[73, "gammapy.catalog.SourceCatalogObject2PC", false]], "sourcecatalogobject3fgl (class in gammapy.catalog)": [[74, "gammapy.catalog.SourceCatalogObject3FGL", false]], "sourcecatalogobject3fhl (class in gammapy.catalog)": [[75, "gammapy.catalog.SourceCatalogObject3FHL", false]], "sourcecatalogobject3hwc (class in gammapy.catalog)": [[76, "gammapy.catalog.SourceCatalogObject3HWC", false]], "sourcecatalogobject3pc (class in gammapy.catalog)": [[77, "gammapy.catalog.SourceCatalogObject3PC", false]], "sourcecatalogobject4fgl (class in gammapy.catalog)": [[78, "gammapy.catalog.SourceCatalogObject4FGL", false]], "sourcecatalogobjectgammacat (class in gammapy.catalog)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat", false]], "sourcecatalogobjecthgps (class in gammapy.catalog)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS", false]], "sourcecatalogobjecthgpscomponent (class in gammapy.catalog)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent", false]], "spatial_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[236, "gammapy.modeling.models.FoVBackgroundModel.spatial_model", false]], "spatial_model (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spatial_model", false]], "spatial_model() (gammapy.catalog.sourcecatalogobjecthgpscomponent method)": [[81, "gammapy.catalog.SourceCatalogObjectHGPSComponent.spatial_model", false]], "spatial_model_registry (in module gammapy.modeling.models)": [[262, "gammapy.modeling.models.SPATIAL_MODEL_REGISTRY", false]], "spatialmodel (class in gammapy.modeling.models)": [[270, "gammapy.modeling.models.SpatialModel", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index", false]], "spectral_index() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index", false]], "spectral_index() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index", false]], "spectral_index() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.spectral_index", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.spectral_index_error", false]], "spectral_index_error() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.spectral_index_error", false]], "spectral_model (gammapy.modeling.models.fovbackgroundmodel attribute)": [[236, "gammapy.modeling.models.FoVBackgroundModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.spectral_model", false]], "spectral_model (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject1lhaaso method)": [[70, "gammapy.catalog.SourceCatalogObject1LHAASO.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2fhl method)": [[71, "gammapy.catalog.SourceCatalogObject2FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2hwc method)": [[72, "gammapy.catalog.SourceCatalogObject2HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject2pc method)": [[73, "gammapy.catalog.SourceCatalogObject2PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fgl method)": [[74, "gammapy.catalog.SourceCatalogObject3FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3fhl method)": [[75, "gammapy.catalog.SourceCatalogObject3FHL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3hwc method)": [[76, "gammapy.catalog.SourceCatalogObject3HWC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject3pc method)": [[77, "gammapy.catalog.SourceCatalogObject3PC.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobject4fgl method)": [[78, "gammapy.catalog.SourceCatalogObject4FGL.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjectgammacat method)": [[79, "gammapy.catalog.SourceCatalogObjectGammaCat.spectral_model", false]], "spectral_model() (gammapy.catalog.sourcecatalogobjecthgps method)": [[80, "gammapy.catalog.SourceCatalogObjectHGPS.spectral_model", false]], "spectral_model_registry (in module gammapy.modeling.models)": [[263, "gammapy.modeling.models.SPECTRAL_MODEL_REGISTRY", false]], "spectralmodel (class in gammapy.modeling.models)": [[271, "gammapy.modeling.models.SpectralModel", false]], "spectrumdataset (class in gammapy.datasets)": [[111, "gammapy.datasets.SpectrumDataset", false]], "spectrumdatasetmaker (class in gammapy.makers)": [[184, "gammapy.makers.SpectrumDatasetMaker", false]], "spectrumdatasetonoff (class in gammapy.datasets)": [[112, "gammapy.datasets.SpectrumDatasetOnOff", false]], "spiralarms (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.spiralarms", false]], "spiralarms (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.spiralarms", false]], "split_by_axis() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.split_by_axis", false]], "split_by_axis() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.split_by_axis", false]], "split_by_axis() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.split_by_axis", false]], "split_dataset() (in module gammapy.datasets)": [[117, "gammapy.datasets.split_dataset", false]], "split_dataset() (in module gammapy.datasets.utils)": [[120, "gammapy.datasets.utils.split_dataset", false]], "sqrt_ts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sqrt_ts", false]], "sqrt_ts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sqrt_ts", false]], "sqrt_ts (gammapy.stats.cashcountsstatistic attribute)": [[293, "gammapy.stats.CashCountsStatistic.sqrt_ts", false]], "sqrt_ts (gammapy.stats.wstatcountsstatistic attribute)": [[295, "gammapy.stats.WStatCountsStatistic.sqrt_ts", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.sqrt_ts_threshold_ul", false]], "sqrt_ts_threshold_ul (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.sqrt_ts_threshold_ul", false]], "squash() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.squash", false]], "squash() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.squash", false]], "squash() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.squash", false]], "squash() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.squash", false]], "squash() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.squash", false]], "squash() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.squash", false]], "squash() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.squash", false]], "squash() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.squash", false]], "ssc_model (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.ssc_model", false]], "stack() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.stack", false]], "stack() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.stack", false]], "stack() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stack", false]], "stack() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.stack", false]], "stack() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stack", false]], "stack() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.stack", false]], "stack() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.stack", false]], "stack() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stack", false]], "stack() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.stack", false]], "stack() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.stack", false]], "stack() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.stack", false]], "stack() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.stack", false]], "stack() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.stack", false]], "stack() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.stack", false]], "stack() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.stack", false]], "stack() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.stack", false]], "stack() (gammapy.modeling.models.templatenpredmodel method)": [[278, "gammapy.modeling.models.TemplateNPredModel.stack", false]], "stack_reduce() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stack_reduce", false]], "standard_broadcasting (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.standard_broadcasting", false]], "standard_broadcasting (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.standard_broadcasting", false]], "standard_scaler() (in module gammapy.utils.cluster)": [[312, "gammapy.utils.cluster.standard_scaler", false]], "standardise_unit() (in module gammapy.utils.units)": [[371, "gammapy.utils.units.standardise_unit", false]], "stat (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.stat", false]], "stat (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.stat", false]], "stat_array() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_array", false]], "stat_array() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_array", false]], "stat_array() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.stat_array", false]], "stat_array() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stat_array", false]], "stat_contour() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.stat_contour", false]], "stat_max (gammapy.stats.cashcountsstatistic attribute)": [[293, "gammapy.stats.CashCountsStatistic.stat_max", false]], "stat_max (gammapy.stats.wstatcountsstatistic attribute)": [[295, "gammapy.stats.WStatCountsStatistic.stat_max", false]], "stat_null (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.stat_null", false]], "stat_null (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.stat_null", false]], "stat_null (gammapy.stats.cashcountsstatistic attribute)": [[293, "gammapy.stats.CashCountsStatistic.stat_null", false]], "stat_null (gammapy.stats.wstatcountsstatistic attribute)": [[295, "gammapy.stats.WStatCountsStatistic.stat_null", false]], "stat_profile() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.stat_profile", false]], "stat_profile_ul_scipy() (in module gammapy.modeling)": [[292, "gammapy.modeling.stat_profile_ul_scipy", false]], "stat_scan (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.stat_scan", false]], "stat_scan (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.stat_scan", false]], "stat_sum() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.stat_sum", false]], "stat_sum() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.stat_sum", false]], "stat_sum() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_sum", false]], "stat_sum() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.stat_sum", false]], "stat_sum() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stat_sum", false]], "stat_surface() (gammapy.modeling.fit method)": [[215, "gammapy.modeling.Fit.stat_surface", false]], "stat_type (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.stat_type", false]], "stat_type (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.stat_type", false]], "stat_type (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.stat_type", false]], "stat_type (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.stat_type", false]], "stds (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.stds", false]], "stds (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.stds", false]], "stds (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.stds", false]], "stds (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.stds", false]], "stds (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.stds", false]], "stds (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.stds", false]], "stds (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.stds", false]], "strip_units_from_tree() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.strip_units_from_tree", false]], "strip_units_from_tree() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.strip_units_from_tree", false]], "structure_function() (in module gammapy.stats)": [[308, "gammapy.stats.structure_function", false]], "success (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.success", false]], "success (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.success", false]], "success (gammapy.modeling.covarianceresult attribute)": [[214, "gammapy.modeling.CovarianceResult.success", false]], "success (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.success", false]], "success (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.success", false]], "sum() (gammapy.stats.cashcountsstatistic method)": [[293, "gammapy.stats.CashCountsStatistic.sum", false]], "sum() (gammapy.stats.wstatcountsstatistic method)": [[295, "gammapy.stats.WStatCountsStatistic.sum", false]], "sum_of_implicit_terms() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.sum_of_implicit_terms", false]], "sum_of_implicit_terms() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sum_of_implicit_terms", false]], "sum_over_axes() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.sum_over_axes", false]], "sum_over_axes() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.sum_over_axes", false]], "summary() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.summary", false]], "summary() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.summary", false]], "superexpcutoffpowerlaw3fglspectralmodel (class in gammapy.modeling.models)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel", false]], "superexpcutoffpowerlaw4fgldr3spectralmodel (class in gammapy.modeling.models)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel", false]], "superexpcutoffpowerlaw4fglspectralmodel (class in gammapy.modeling.models)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel", false]], "sync_constraints (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.sync_constraints", false]], "sync_constraints (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.sync_constraints", false]], "sync_constraints (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.sync_constraints", false]], "sync_constraints (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.sync_constraints", false]], "sync_constraints (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.sync_constraints", false]], "sync_constraints (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.sync_constraints", false]], "t0 (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.t0", false]], "t0 (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.t0", false]], "t_decay (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_decay", false]], "t_ref (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.t_ref", false]], "t_ref (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.t_ref", false]], "t_rise (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.t_rise", false]], "table_associations (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_associations", false]], "table_components (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_components", false]], "table_filename (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.table_filename", false]], "table_identifications (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_identifications", false]], "table_large_scale_component (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.table_large_scale_component", false]], "table_row_to_dict() (in module gammapy.utils.table)": [[357, "gammapy.utils.table.table_row_to_dict", false]], "table_standardise_units_copy() (in module gammapy.utils.table)": [[358, "gammapy.utils.table.table_standardise_units_copy", false]], "table_standardise_units_inplace() (in module gammapy.utils.table)": [[359, "gammapy.utils.table.table_standardise_units_inplace", false]], "tag (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.tag", false]], "tag (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.tag", false]], "tag (gammapy.catalog.sourcecatalog attribute)": [[56, "gammapy.catalog.SourceCatalog.tag", false]], "tag (gammapy.catalog.sourcecatalog1lhaaso attribute)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.tag", false]], "tag (gammapy.catalog.sourcecatalog2fhl attribute)": [[58, "gammapy.catalog.SourceCatalog2FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog2hwc attribute)": [[59, "gammapy.catalog.SourceCatalog2HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog2pc attribute)": [[60, "gammapy.catalog.SourceCatalog2PC.tag", false]], "tag (gammapy.catalog.sourcecatalog3fgl attribute)": [[61, "gammapy.catalog.SourceCatalog3FGL.tag", false]], "tag (gammapy.catalog.sourcecatalog3fhl attribute)": [[62, "gammapy.catalog.SourceCatalog3FHL.tag", false]], "tag (gammapy.catalog.sourcecatalog3hwc attribute)": [[63, "gammapy.catalog.SourceCatalog3HWC.tag", false]], "tag (gammapy.catalog.sourcecatalog3pc attribute)": [[64, "gammapy.catalog.SourceCatalog3PC.tag", false]], "tag (gammapy.catalog.sourcecatalog4fgl attribute)": [[65, "gammapy.catalog.SourceCatalog4FGL.tag", false]], "tag (gammapy.catalog.sourcecataloggammacat attribute)": [[66, "gammapy.catalog.SourceCatalogGammaCat.tag", false]], "tag (gammapy.catalog.sourcecataloghgps attribute)": [[67, "gammapy.catalog.SourceCatalogHGPS.tag", false]], "tag (gammapy.data.eventlistmetadata attribute)": [[84, "gammapy.data.EventListMetaData.tag", false]], "tag (gammapy.data.observationmetadata attribute)": [[90, "gammapy.data.ObservationMetaData.tag", false]], "tag (gammapy.datasets.dataset attribute)": [[99, "gammapy.datasets.Dataset.tag", false]], "tag (gammapy.datasets.fermipydatasetsreader attribute)": [[101, "gammapy.datasets.FermipyDatasetsReader.tag", false]], "tag (gammapy.datasets.fluxpointsdataset attribute)": [[102, "gammapy.datasets.FluxPointsDataset.tag", false]], "tag (gammapy.datasets.mapdataset attribute)": [[103, "gammapy.datasets.MapDataset.tag", false]], "tag (gammapy.datasets.mapdatasetmetadata attribute)": [[105, "gammapy.datasets.MapDatasetMetaData.tag", false]], "tag (gammapy.datasets.mapdatasetonoff attribute)": [[106, "gammapy.datasets.MapDatasetOnOff.tag", false]], "tag (gammapy.datasets.mapdatasetweighted attribute)": [[107, "gammapy.datasets.MapDatasetWeighted.tag", false]], "tag (gammapy.datasets.ogipdatasetreader attribute)": [[108, "gammapy.datasets.OGIPDatasetReader.tag", false]], "tag (gammapy.datasets.ogipdatasetwriter attribute)": [[109, "gammapy.datasets.OGIPDatasetWriter.tag", false]], "tag (gammapy.datasets.spectrumdataset attribute)": [[111, "gammapy.datasets.SpectrumDataset.tag", false]], "tag (gammapy.datasets.spectrumdatasetonoff attribute)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.tag", false]], "tag (gammapy.estimators.asmoothmapestimator attribute)": [[121, "gammapy.estimators.ASmoothMapEstimator.tag", false]], "tag (gammapy.estimators.energydependentmorphologyestimator attribute)": [[123, "gammapy.estimators.EnergyDependentMorphologyEstimator.tag", false]], "tag (gammapy.estimators.estimator attribute)": [[124, "gammapy.estimators.Estimator.tag", false]], "tag (gammapy.estimators.excessmapestimator attribute)": [[125, "gammapy.estimators.ExcessMapEstimator.tag", false]], "tag (gammapy.estimators.fluxmetadata attribute)": [[127, "gammapy.estimators.FluxMetaData.tag", false]], "tag (gammapy.estimators.fluxpointsestimator attribute)": [[129, "gammapy.estimators.FluxPointsEstimator.tag", false]], "tag (gammapy.estimators.fluxprofileestimator attribute)": [[130, "gammapy.estimators.FluxProfileEstimator.tag", false]], "tag (gammapy.estimators.imageprofileestimator attribute)": [[132, "gammapy.estimators.ImageProfileEstimator.tag", false]], "tag (gammapy.estimators.lightcurveestimator attribute)": [[133, "gammapy.estimators.LightCurveEstimator.tag", false]], "tag (gammapy.estimators.parameterestimator attribute)": [[134, "gammapy.estimators.ParameterEstimator.tag", false]], "tag (gammapy.estimators.parametersensitivityestimator attribute)": [[135, "gammapy.estimators.ParameterSensitivityEstimator.tag", false]], "tag (gammapy.estimators.sensitivityestimator attribute)": [[136, "gammapy.estimators.SensitivityEstimator.tag", false]], "tag (gammapy.estimators.tsmapestimator attribute)": [[137, "gammapy.estimators.TSMapEstimator.tag", false]], "tag (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.tag", false]], "tag (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.tag", false]], "tag (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.tag", false]], "tag (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.tag", false]], "tag (gammapy.irf.edispkernelmap attribute)": [[155, "gammapy.irf.EDispKernelMap.tag", false]], "tag (gammapy.irf.edispmap attribute)": [[156, "gammapy.irf.EDispMap.tag", false]], "tag (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.tag", false]], "tag (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.tag", false]], "tag (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.tag", false]], "tag (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.tag", false]], "tag (gammapy.irf.irfmap attribute)": [[162, "gammapy.irf.IRFMap.tag", false]], "tag (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.tag", false]], "tag (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.tag", false]], "tag (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.tag", false]], "tag (gammapy.irf.psfmap attribute)": [[167, "gammapy.irf.PSFMap.tag", false]], "tag (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.tag", false]], "tag (gammapy.irf.recopsfmap attribute)": [[170, "gammapy.irf.RecoPSFMap.tag", false]], "tag (gammapy.makers.adaptiveringbackgroundmaker attribute)": [[172, "gammapy.makers.AdaptiveRingBackgroundMaker.tag", false]], "tag (gammapy.makers.datasetsmaker attribute)": [[173, "gammapy.makers.DatasetsMaker.tag", false]], "tag (gammapy.makers.fovbackgroundmaker attribute)": [[174, "gammapy.makers.FoVBackgroundMaker.tag", false]], "tag (gammapy.makers.maker attribute)": [[176, "gammapy.makers.Maker.tag", false]], "tag (gammapy.makers.mapdatasetmaker attribute)": [[177, "gammapy.makers.MapDatasetMaker.tag", false]], "tag (gammapy.makers.phasebackgroundmaker attribute)": [[178, "gammapy.makers.PhaseBackgroundMaker.tag", false]], "tag (gammapy.makers.reflectedregionsbackgroundmaker attribute)": [[179, "gammapy.makers.ReflectedRegionsBackgroundMaker.tag", false]], "tag (gammapy.makers.ringbackgroundmaker attribute)": [[182, "gammapy.makers.RingBackgroundMaker.tag", false]], "tag (gammapy.makers.safemaskmaker attribute)": [[183, "gammapy.makers.SafeMaskMaker.tag", false]], "tag (gammapy.makers.spectrumdatasetmaker attribute)": [[184, "gammapy.makers.SpectrumDatasetMaker.tag", false]], "tag (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.tag", false]], "tag (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.tag", false]], "tag (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.tag", false]], "tag (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.tag", false]], "tag (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.tag", false]], "tag (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.tag", false]], "tag (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.compoundspectralmodel attribute)": [[223, "gammapy.modeling.models.CompoundSpectralModel.tag", false]], "tag (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.tag", false]], "tag (gammapy.modeling.models.constantspectralmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpectralModel.tag", false]], "tag (gammapy.modeling.models.constanttemporalmodel attribute)": [[227, "gammapy.modeling.models.ConstantTemporalModel.tag", false]], "tag (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.tag", false]], "tag (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.tag", false]], "tag (gammapy.modeling.models.fovbackgroundmodel attribute)": [[236, "gammapy.modeling.models.FoVBackgroundModel.tag", false]], "tag (gammapy.modeling.models.gaussianprior attribute)": [[237, "gammapy.modeling.models.GaussianPrior.tag", false]], "tag (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.tag", false]], "tag (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.tag", false]], "tag (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.tag", false]], "tag (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.tag", false]], "tag (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.tag", false]], "tag (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.tag", false]], "tag (gammapy.modeling.models.loguniformprior attribute)": [[247, "gammapy.modeling.models.LogUniformPrior.tag", false]], "tag (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.tag", false]], "tag (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.tag", false]], "tag (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.tag", false]], "tag (gammapy.modeling.models.scalespectralmodel attribute)": [[264, "gammapy.modeling.models.ScaleSpectralModel.tag", false]], "tag (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.tag", false]], "tag (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.tag", false]], "tag (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.tag", false]], "tag (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.tag", false]], "tag (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.tag", false]], "tag (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatendspectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.tag", false]], "tag (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.tag", false]], "tag (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.tag", false]], "tag (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.tag", false]], "tag (gammapy.modeling.models.templatespectralmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpectralModel.tag", false]], "tag (gammapy.modeling.models.uniformprior attribute)": [[283, "gammapy.modeling.models.UniformPrior.tag", false]], "target_radec (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.target_radec", false]], "tau (gammapy.astro.source.simplepulsar attribute)": [[54, "gammapy.astro.source.SimplePulsar.tau", false]], "tau() (gammapy.astro.source.pulsar method)": [[51, "gammapy.astro.source.Pulsar.tau", false]], "templatendspatialmodel (class in gammapy.modeling.models)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel", false]], "templatendspectralmodel (class in gammapy.modeling.models)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel", false]], "templatenpredmodel (class in gammapy.modeling.models)": [[278, "gammapy.modeling.models.TemplateNPredModel", false]], "templatephasecurvetemporalmodel (class in gammapy.modeling.models)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel", false]], "templatespatialmodel (class in gammapy.modeling.models)": [[280, "gammapy.modeling.models.TemplateSpatialModel", false]], "templatespectralmodel (class in gammapy.modeling.models)": [[281, "gammapy.modeling.models.TemplateSpectralModel", false]], "temporal_model (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.temporal_model", false]], "temporal_model_registry (in module gammapy.modeling.models)": [[275, "gammapy.modeling.models.TEMPORAL_MODEL_REGISTRY", false]], "temporalmodel (class in gammapy.modeling.models)": [[282, "gammapy.modeling.models.TemporalModel", false]], "thermal_relic_cross_section (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.THERMAL_RELIC_CROSS_SECTION", false]], "theta (gammapy.maps.mapcoord attribute)": [[203, "gammapy.maps.MapCoord.theta", false]], "theta() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.theta", false]], "theta() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.theta", false]], "theta() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.theta", false]], "theta_0 (gammapy.astro.population.faucherspiral attribute)": [[33, "gammapy.astro.population.FaucherSpiral.theta_0", false]], "theta_0 (gammapy.astro.population.valleespiral attribute)": [[38, "gammapy.astro.population.ValleeSpiral.theta_0", false]], "tied (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.tied", false]], "tied (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.tied", false]], "tied (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.tied", false]], "tied (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.tied", false]], "tied (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.tied", false]], "tied (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.tied", false]], "tied (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.tied", false]], "tilt (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.tilt", false]], "time (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time", false]], "time (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time", false]], "time_bounds (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_bounds", false]], "time_delta (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_delta", false]], "time_delta (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_delta", false]], "time_edges (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_edges", false]], "time_format (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_format", false]], "time_intervals (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_intervals", false]], "time_max (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_max", false]], "time_mid (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_mid", false]], "time_min (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.time_min", false]], "time_ref (gammapy.data.eventlist attribute)": [[83, "gammapy.data.EventList.time_ref", false]], "time_ref (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_ref", false]], "time_ref (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_ref", false]], "time_ref (gammapy.data.pointinginfo attribute)": [[94, "gammapy.data.PointingInfo.time_ref", false]], "time_ref_from_dict() (in module gammapy.utils.time)": [[368, "gammapy.utils.time.time_ref_from_dict", false]], "time_ref_to_dict() (in module gammapy.utils.time)": [[369, "gammapy.utils.time.time_ref_to_dict", false]], "time_relative_to_ref() (in module gammapy.utils.time)": [[370, "gammapy.utils.time.time_relative_to_ref", false]], "time_start (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_start", false]], "time_start (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_start", false]], "time_stop (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_stop", false]], "time_stop (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.time_stop", false]], "time_sum (gammapy.data.gti attribute)": [[86, "gammapy.data.GTI.time_sum", false]], "time_sum() (gammapy.modeling.models.constanttemporalmodel static method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.expdecaytemporalmodel static method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.gaussiantemporalmodel static method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.generalizedgaussiantemporalmodel static method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lightcurvetemplatetemporalmodel static method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.lineartemporalmodel static method)": [[244, "gammapy.modeling.models.LinearTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.powerlawtemporalmodel static method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.sinetemporalmodel static method)": [[267, "gammapy.modeling.models.SineTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.templatephasecurvetemporalmodel static method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.time_sum", false]], "time_sum() (gammapy.modeling.models.temporalmodel static method)": [[282, "gammapy.modeling.models.TemporalModel.time_sum", false]], "timemapaxis (class in gammapy.maps)": [[207, "gammapy.maps.TimeMapAxis", false]], "timmerkonig_lightcurve_simulator() (in module gammapy.stats)": [[294, "gammapy.stats.TimmerKonig_lightcurve_simulator", false]], "tmid (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tmid", false]], "to_2d() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.to_2d", false]], "to_3d() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.to_3d", false]], "to_bands_hdu() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_bands_hdu", false]], "to_bands_hdu() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_bands_hdu", false]], "to_binsz() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_binsz", false]], "to_binsz() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_binsz", false]], "to_binsz() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_binsz", false]], "to_binsz_wcs() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_binsz_wcs", false]], "to_contiguous() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.to_contiguous", false]], "to_counts_hdulist() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.to_counts_hdulist", false]], "to_cube() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.to_cube", false]], "to_cube() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_cube", false]], "to_cube() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_cube", false]], "to_cube() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_cube", false]], "to_cube() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.to_cube", false]], "to_cube() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_cube", false]], "to_cube() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.to_cube", false]], "to_cube() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_cube", false]], "to_cube() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.to_cube", false]], "to_cube() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_cube", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.to_dict", false]], "to_dict() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.to_dict", false]], "to_dict() (gammapy.datasets.dataset method)": [[99, "gammapy.datasets.Dataset.to_dict", false]], "to_dict() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_dict", false]], "to_dict() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_dict", false]], "to_dict() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_dict", false]], "to_dict() (gammapy.modeling.covarianceresult method)": [[214, "gammapy.modeling.CovarianceResult.to_dict", false]], "to_dict() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.constanttemporalmodel method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.to_dict", false]], "to_dict() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.expdecaytemporalmodel method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.fovbackgroundmodel method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianprior method)": [[237, "gammapy.modeling.models.GaussianPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.gaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.lineartemporalmodel method)": [[244, "gammapy.modeling.models.LinearTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.loguniformprior method)": [[247, "gammapy.modeling.models.LogUniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.modelbase method)": [[251, "gammapy.modeling.models.ModelBase.to_dict", false]], "to_dict() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.to_dict", false]], "to_dict() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.powerlawtemporalmodel method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.prior method)": [[261, "gammapy.modeling.models.Prior.to_dict", false]], "to_dict() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.sinetemporalmodel method)": [[267, "gammapy.modeling.models.SineTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.skymodel method)": [[268, "gammapy.modeling.models.SkyModel.to_dict", false]], "to_dict() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatenpredmodel method)": [[278, "gammapy.modeling.models.TemplateNPredModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.to_dict", false]], "to_dict() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.to_dict", false]], "to_dict() (gammapy.modeling.models.temporalmodel method)": [[282, "gammapy.modeling.models.TemporalModel.to_dict", false]], "to_dict() (gammapy.modeling.models.uniformprior method)": [[283, "gammapy.modeling.models.UniformPrior.to_dict", false]], "to_dict() (gammapy.modeling.optimizeresult method)": [[217, "gammapy.modeling.OptimizeResult.to_dict", false]], "to_dict() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.to_dict", false]], "to_dict() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.to_dict", false]], "to_dict() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.to_dict", false]], "to_dict() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.to_dict", false]], "to_edisp_kernel() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.to_edisp_kernel", false]], "to_edisp_kernel_map() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.to_edisp_kernel_map", false]], "to_even_npix() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_even_npix", false]], "to_fits_header() (gammapy.data.fixedpointinginfo method)": [[85, "gammapy.data.FixedPointingInfo.to_fits_header", false]], "to_frame() (gammapy.maps.mapcoord method)": [[203, "gammapy.maps.MapCoord.to_frame", false]], "to_gti() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.to_gti", false]], "to_hdu() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_hdu", false]], "to_hdu() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.to_hdu", false]], "to_hdu() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_hdu", false]], "to_hdulist() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_hdulist", false]], "to_hdulist() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.to_hdulist", false]], "to_hdulist() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.to_hdulist", false]], "to_hdulist() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.to_hdulist", false]], "to_hdulist() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.to_hdulist", false]], "to_hdulist() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.to_hdulist", false]], "to_hdulist() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.to_hdulist", false]], "to_hdulist() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.to_hdulist", false]], "to_hdulist() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.to_hdulist", false]], "to_hdulist() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_hdulist", false]], "to_hdulist() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.to_hdulist", false]], "to_hdulist() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_hdulist", false]], "to_header() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_header", false]], "to_header() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_header", false]], "to_header() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_header", false]], "to_header() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.to_header", false]], "to_header() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_header", false]], "to_header() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.to_header", false]], "to_header() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.to_header", false]], "to_header() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.to_header", false]], "to_header() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.to_header", false]], "to_header() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_header", false]], "to_image() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_image", false]], "to_image() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_image", false]], "to_image() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_image", false]], "to_image() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_image", false]], "to_image() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_image", false]], "to_image() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.to_image", false]], "to_image() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.to_image", false]], "to_image() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.to_image", false]], "to_image() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.to_image", false]], "to_image() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.to_image", false]], "to_image() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.to_image", false]], "to_image() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_image", false]], "to_image() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_image", false]], "to_image() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_image", false]], "to_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_map_dataset", false]], "to_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_map_dataset", false]], "to_maps() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.to_maps", false]], "to_maps() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.to_maps", false]], "to_masked() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_masked", false]], "to_masked() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_masked", false]], "to_masked() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_masked", false]], "to_models() (gammapy.catalog.sourcecatalog method)": [[56, "gammapy.catalog.SourceCatalog.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog1lhaaso method)": [[57, "gammapy.catalog.SourceCatalog1LHAASO.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2fhl method)": [[58, "gammapy.catalog.SourceCatalog2FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2hwc method)": [[59, "gammapy.catalog.SourceCatalog2HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog2pc method)": [[60, "gammapy.catalog.SourceCatalog2PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fgl method)": [[61, "gammapy.catalog.SourceCatalog3FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3fhl method)": [[62, "gammapy.catalog.SourceCatalog3FHL.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3hwc method)": [[63, "gammapy.catalog.SourceCatalog3HWC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog3pc method)": [[64, "gammapy.catalog.SourceCatalog3PC.to_models", false]], "to_models() (gammapy.catalog.sourcecatalog4fgl method)": [[65, "gammapy.catalog.SourceCatalog4FGL.to_models", false]], "to_models() (gammapy.catalog.sourcecataloggammacat method)": [[66, "gammapy.catalog.SourceCatalogGammaCat.to_models", false]], "to_models() (gammapy.catalog.sourcecataloghgps method)": [[67, "gammapy.catalog.SourceCatalogHGPS.to_models", false]], "to_node_type() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.to_node_type", false]], "to_nside() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_nside", false]], "to_nside() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_nside", false]], "to_odd_npix() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.to_odd_npix", false]], "to_pandas() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.to_pandas", false]], "to_pandas() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.to_pandas", false]], "to_parameters_table() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.to_parameters_table", false]], "to_parameters_table() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.to_parameters_table", false]], "to_psf3d() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.to_psf3d", false]], "to_psf3d() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.to_psf3d", false]], "to_region() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.to_region", false]], "to_region() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.to_region", false]], "to_region_map_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_region_map_dataset", false]], "to_region_map_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_region_map_dataset", false]], "to_region_nd_map() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.to_region_nd_map", false]], "to_region_nd_map() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_region_nd_map", false]], "to_region_nd_map_histogram() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_region_nd_map_histogram", false]], "to_regions() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.to_regions", false]], "to_regions() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.to_regions", false]], "to_spectrum_dataset() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.to_spectrum_dataset", false]], "to_spectrum_dataset() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.to_spectrum_dataset", false]], "to_spectrum_datasets() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.to_spectrum_datasets", false]], "to_swapped() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_swapped", false]], "to_swapped() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_swapped", false]], "to_swapped() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_swapped", false]], "to_table() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.to_table", false]], "to_table() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.to_table", false]], "to_table() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.to_table", false]], "to_table() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.to_table", false]], "to_table() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.to_table", false]], "to_table() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.to_table", false]], "to_table() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table", false]], "to_table() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.to_table", false]], "to_table() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.to_table", false]], "to_table() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.to_table", false]], "to_table() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.to_table", false]], "to_table() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.to_table", false]], "to_table() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.to_table", false]], "to_table() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.to_table", false]], "to_table() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.to_table", false]], "to_table() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.to_table", false]], "to_table() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.to_table", false]], "to_table() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.to_table", false]], "to_table() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.to_table", false]], "to_table() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.to_table", false]], "to_table_hdu() (gammapy.data.eventlist method)": [[83, "gammapy.data.EventList.to_table_hdu", false]], "to_table_hdu() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.to_table_hdu", false]], "to_table_hdu() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.to_table_hdu", false]], "to_table_hdu() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.to_table_hdu", false]], "to_template_sky_model() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.to_template_sky_model", false]], "to_template_sky_model() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.to_template_sky_model", false]], "to_template_spectral_model() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.to_template_spectral_model", false]], "to_template_spectral_model() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.to_template_spectral_model", false]], "to_unit() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.to_unit", false]], "to_unit() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.to_unit", false]], "to_unit() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.to_unit", false]], "to_unit() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.to_unit", false]], "to_unit() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.to_unit", false]], "to_unit() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.to_unit", false]], "to_unit() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.to_unit", false]], "to_unit() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.to_unit", false]], "to_unit() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.to_unit", false]], "to_unit() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.to_unit", false]], "to_unit() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.to_unit", false]], "to_unit() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.to_unit", false]], "to_unit() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_unit", false]], "to_unit() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_unit", false]], "to_unit() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.to_unit", false]], "to_unit() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.to_unit", false]], "to_unit() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.to_unit", false]], "to_unit() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.to_unit", false]], "to_wcs() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.to_wcs", false]], "to_wcs() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_wcs", false]], "to_wcs_geom() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_wcs_geom", false]], "to_wcs_geom() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.to_wcs_geom", false]], "to_wcs_tiles() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.to_wcs_tiles", false]], "to_wcs_tiles() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.to_wcs_tiles", false]], "to_yaml() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.to_yaml", false]], "to_yaml() (gammapy.data.eventlistmetadata method)": [[84, "gammapy.data.EventListMetaData.to_yaml", false]], "to_yaml() (gammapy.data.observationmetadata method)": [[90, "gammapy.data.ObservationMetaData.to_yaml", false]], "to_yaml() (gammapy.datasets.mapdatasetmetadata method)": [[105, "gammapy.datasets.MapDatasetMetaData.to_yaml", false]], "to_yaml() (gammapy.estimators.fluxmetadata method)": [[127, "gammapy.estimators.FluxMetaData.to_yaml", false]], "to_yaml() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.to_yaml", false]], "to_yaml() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.to_yaml", false]], "to_yaml() (in module gammapy.utils.scripts)": [[354, "gammapy.utils.scripts.to_yaml", false]], "total_stat (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.total_stat", false]], "total_stat (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.total_stat", false]], "trace (gammapy.modeling.fitresult attribute)": [[216, "gammapy.modeling.FitResult.trace", false]], "trace (gammapy.modeling.optimizeresult attribute)": [[217, "gammapy.modeling.OptimizeResult.trace", false]], "trapz_loglog() (in module gammapy.utils.integrate)": [[324, "gammapy.utils.integrate.trapz_loglog", false]], "ts (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.ts", false]], "ts (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.ts", false]], "ts (gammapy.stats.cashcountsstatistic attribute)": [[293, "gammapy.stats.CashCountsStatistic.ts", false]], "ts (gammapy.stats.wstatcountsstatistic attribute)": [[295, "gammapy.stats.WStatCountsStatistic.ts", false]], "ts_scan (gammapy.estimators.fluxmaps attribute)": [[126, "gammapy.estimators.FluxMaps.ts_scan", false]], "ts_scan (gammapy.estimators.fluxpoints attribute)": [[128, "gammapy.estimators.FluxPoints.ts_scan", false]], "tsmapestimator (class in gammapy.estimators)": [[137, "gammapy.estimators.TSMapEstimator", false]], "tstart (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstart", false]], "tstop (gammapy.data.observation attribute)": [[88, "gammapy.data.Observation.tstop", false]], "type (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel attribute)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.type", false]], "type (gammapy.astro.darkmatter.darkmatterdecayspectralmodel attribute)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.type", false]], "type (gammapy.astro.darkmatter.primaryflux attribute)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.type", false]], "type (gammapy.modeling.models.brokenpowerlawspectralmodel attribute)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.compoundspectralmodel attribute)": [[223, "gammapy.modeling.models.CompoundSpectralModel.type", false]], "type (gammapy.modeling.models.constantfluxspatialmodel attribute)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.type", false]], "type (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.type", false]], "type (gammapy.modeling.models.constantspectralmodel attribute)": [[226, "gammapy.modeling.models.ConstantSpectralModel.type", false]], "type (gammapy.modeling.models.constanttemporalmodel attribute)": [[227, "gammapy.modeling.models.ConstantTemporalModel.type", false]], "type (gammapy.modeling.models.diskspatialmodel attribute)": [[229, "gammapy.modeling.models.DiskSpatialModel.type", false]], "type (gammapy.modeling.models.eblabsorptionnormspectralmodel attribute)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel attribute)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel attribute)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.expcutoffpowerlawspectralmodel attribute)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.expdecaytemporalmodel attribute)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.type", false]], "type (gammapy.modeling.models.fovbackgroundmodel attribute)": [[236, "gammapy.modeling.models.FoVBackgroundModel.type", false]], "type (gammapy.modeling.models.gaussianprior attribute)": [[237, "gammapy.modeling.models.GaussianPrior.type", false]], "type (gammapy.modeling.models.gaussianspatialmodel attribute)": [[238, "gammapy.modeling.models.GaussianSpatialModel.type", false]], "type (gammapy.modeling.models.gaussianspectralmodel attribute)": [[239, "gammapy.modeling.models.GaussianSpectralModel.type", false]], "type (gammapy.modeling.models.gaussiantemporalmodel attribute)": [[240, "gammapy.modeling.models.GaussianTemporalModel.type", false]], "type (gammapy.modeling.models.generalizedgaussianspatialmodel attribute)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.type", false]], "type (gammapy.modeling.models.generalizedgaussiantemporalmodel attribute)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.type", false]], "type (gammapy.modeling.models.lightcurvetemplatetemporalmodel attribute)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.type", false]], "type (gammapy.modeling.models.lineartemporalmodel attribute)": [[244, "gammapy.modeling.models.LinearTemporalModel.type", false]], "type (gammapy.modeling.models.logparabolanormspectralmodel attribute)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.type", false]], "type (gammapy.modeling.models.logparabolaspectralmodel attribute)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.type", false]], "type (gammapy.modeling.models.loguniformprior attribute)": [[247, "gammapy.modeling.models.LogUniformPrior.type", false]], "type (gammapy.modeling.models.meyercrabspectralmodel attribute)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.type", false]], "type (gammapy.modeling.models.modelbase attribute)": [[251, "gammapy.modeling.models.ModelBase.type", false]], "type (gammapy.modeling.models.naimaspectralmodel attribute)": [[253, "gammapy.modeling.models.NaimaSpectralModel.type", false]], "type (gammapy.modeling.models.piecewisenormspatialmodel attribute)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.type", false]], "type (gammapy.modeling.models.piecewisenormspectralmodel attribute)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.type", false]], "type (gammapy.modeling.models.pointspatialmodel attribute)": [[256, "gammapy.modeling.models.PointSpatialModel.type", false]], "type (gammapy.modeling.models.powerlaw2spectralmodel attribute)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.type", false]], "type (gammapy.modeling.models.powerlawnormspectralmodel attribute)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawspectralmodel attribute)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.powerlawtemporalmodel attribute)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.type", false]], "type (gammapy.modeling.models.prior attribute)": [[261, "gammapy.modeling.models.Prior.type", false]], "type (gammapy.modeling.models.scalespectralmodel attribute)": [[264, "gammapy.modeling.models.ScaleSpectralModel.type", false]], "type (gammapy.modeling.models.shell2spatialmodel attribute)": [[265, "gammapy.modeling.models.Shell2SpatialModel.type", false]], "type (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.type", false]], "type (gammapy.modeling.models.sinetemporalmodel attribute)": [[267, "gammapy.modeling.models.SineTemporalModel.type", false]], "type (gammapy.modeling.models.skymodel attribute)": [[268, "gammapy.modeling.models.SkyModel.type", false]], "type (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel attribute)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.type", false]], "type (gammapy.modeling.models.spatialmodel attribute)": [[270, "gammapy.modeling.models.SpatialModel.type", false]], "type (gammapy.modeling.models.spectralmodel attribute)": [[271, "gammapy.modeling.models.SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel attribute)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel attribute)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.type", false]], "type (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel attribute)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.type", false]], "type (gammapy.modeling.models.templatendspatialmodel attribute)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.type", false]], "type (gammapy.modeling.models.templatendspectralmodel attribute)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.type", false]], "type (gammapy.modeling.models.templatenpredmodel attribute)": [[278, "gammapy.modeling.models.TemplateNPredModel.type", false]], "type (gammapy.modeling.models.templatephasecurvetemporalmodel attribute)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.type", false]], "type (gammapy.modeling.models.templatespatialmodel attribute)": [[280, "gammapy.modeling.models.TemplateSpatialModel.type", false]], "type (gammapy.modeling.models.templatespectralmodel attribute)": [[281, "gammapy.modeling.models.TemplateSpectralModel.type", false]], "type (gammapy.modeling.models.temporalmodel attribute)": [[282, "gammapy.modeling.models.TemporalModel.type", false]], "type (gammapy.modeling.models.uniformprior attribute)": [[283, "gammapy.modeling.models.UniformPrior.type", false]], "type (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.type", false]], "type (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.type", false]], "types (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.types", false]], "types (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.types", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterannihilationspectralmodel method)": [[19, "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.darkmatterdecayspectralmodel method)": [[20, "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel.unfreeze", false]], "unfreeze() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.unfreeze", false]], "unfreeze() (gammapy.modeling.models.brokenpowerlawspectralmodel method)": [[222, "gammapy.modeling.models.BrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.compoundspectralmodel method)": [[223, "gammapy.modeling.models.CompoundSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantfluxspatialmodel method)": [[224, "gammapy.modeling.models.ConstantFluxSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspatialmodel method)": [[225, "gammapy.modeling.models.ConstantSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constantspectralmodel method)": [[226, "gammapy.modeling.models.ConstantSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.constanttemporalmodel method)": [[227, "gammapy.modeling.models.ConstantTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.unfreeze", false]], "unfreeze() (gammapy.modeling.models.diskspatialmodel method)": [[229, "gammapy.modeling.models.DiskSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.eblabsorptionnormspectralmodel method)": [[230, "gammapy.modeling.models.EBLAbsorptionNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlaw3fglspectralmodel method)": [[232, "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawnormspectralmodel method)": [[233, "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expcutoffpowerlawspectralmodel method)": [[234, "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.expdecaytemporalmodel method)": [[235, "gammapy.modeling.models.ExpDecayTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.fovbackgroundmodel method)": [[236, "gammapy.modeling.models.FoVBackgroundModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianprior method)": [[237, "gammapy.modeling.models.GaussianPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspatialmodel method)": [[238, "gammapy.modeling.models.GaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussianspectralmodel method)": [[239, "gammapy.modeling.models.GaussianSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.gaussiantemporalmodel method)": [[240, "gammapy.modeling.models.GaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussianspatialmodel method)": [[241, "gammapy.modeling.models.GeneralizedGaussianSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.generalizedgaussiantemporalmodel method)": [[242, "gammapy.modeling.models.GeneralizedGaussianTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.lineartemporalmodel method)": [[244, "gammapy.modeling.models.LinearTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolanormspectralmodel method)": [[245, "gammapy.modeling.models.LogParabolaNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.logparabolaspectralmodel method)": [[246, "gammapy.modeling.models.LogParabolaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.loguniformprior method)": [[247, "gammapy.modeling.models.LogUniformPrior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.meyercrabspectralmodel method)": [[249, "gammapy.modeling.models.MeyerCrabSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.modelbase method)": [[251, "gammapy.modeling.models.ModelBase.unfreeze", false]], "unfreeze() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.unfreeze", false]], "unfreeze() (gammapy.modeling.models.naimaspectralmodel method)": [[253, "gammapy.modeling.models.NaimaSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspatialmodel method)": [[254, "gammapy.modeling.models.PiecewiseNormSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.piecewisenormspectralmodel method)": [[255, "gammapy.modeling.models.PiecewiseNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.pointspatialmodel method)": [[256, "gammapy.modeling.models.PointSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlaw2spectralmodel method)": [[257, "gammapy.modeling.models.PowerLaw2SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawnormspectralmodel method)": [[258, "gammapy.modeling.models.PowerLawNormSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawspectralmodel method)": [[259, "gammapy.modeling.models.PowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.powerlawtemporalmodel method)": [[260, "gammapy.modeling.models.PowerLawTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.prior method)": [[261, "gammapy.modeling.models.Prior.unfreeze", false]], "unfreeze() (gammapy.modeling.models.scalespectralmodel method)": [[264, "gammapy.modeling.models.ScaleSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shell2spatialmodel method)": [[265, "gammapy.modeling.models.Shell2SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.shellspatialmodel method)": [[266, "gammapy.modeling.models.ShellSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.sinetemporalmodel method)": [[267, "gammapy.modeling.models.SineTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.skymodel method)": [[268, "gammapy.modeling.models.SkyModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.smoothbrokenpowerlawspectralmodel method)": [[269, "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spatialmodel method)": [[270, "gammapy.modeling.models.SpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.spectralmodel method)": [[271, "gammapy.modeling.models.SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw3fglspectralmodel method)": [[272, "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fgldr3spectralmodel method)": [[273, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.superexpcutoffpowerlaw4fglspectralmodel method)": [[274, "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatenpredmodel method)": [[278, "gammapy.modeling.models.TemplateNPredModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.templatespectralmodel method)": [[281, "gammapy.modeling.models.TemplateSpectralModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.temporalmodel method)": [[282, "gammapy.modeling.models.TemporalModel.unfreeze", false]], "unfreeze() (gammapy.modeling.models.uniformprior method)": [[283, "gammapy.modeling.models.UniformPrior.unfreeze", false]], "unfreeze_all() (gammapy.modeling.parameters method)": [[219, "gammapy.modeling.Parameters.unfreeze_all", false]], "unfreeze_all() (gammapy.modeling.priorparameters method)": [[221, "gammapy.modeling.PriorParameters.unfreeze_all", false]], "uniformprior (class in gammapy.modeling.models)": [[283, "gammapy.modeling.models.UniformPrior", false]], "union() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.union", false]], "union() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.union", false]], "unique_parameters (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.unique_parameters", false]], "unique_parameters (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.unique_parameters", false]], "unit (gammapy.irf.background2d attribute)": [[151, "gammapy.irf.Background2D.unit", false]], "unit (gammapy.irf.background3d attribute)": [[152, "gammapy.irf.Background3D.unit", false]], "unit (gammapy.irf.backgroundirf attribute)": [[153, "gammapy.irf.BackgroundIRF.unit", false]], "unit (gammapy.irf.edispkernel attribute)": [[154, "gammapy.irf.EDispKernel.unit", false]], "unit (gammapy.irf.effectiveareatable2d attribute)": [[157, "gammapy.irf.EffectiveAreaTable2D.unit", false]], "unit (gammapy.irf.energydependentmultigausspsf attribute)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.unit", false]], "unit (gammapy.irf.energydispersion2d attribute)": [[159, "gammapy.irf.EnergyDispersion2D.unit", false]], "unit (gammapy.irf.irf attribute)": [[161, "gammapy.irf.IRF.unit", false]], "unit (gammapy.irf.parametricpsf attribute)": [[168, "gammapy.irf.ParametricPSF.unit", false]], "unit (gammapy.irf.psf3d attribute)": [[164, "gammapy.irf.PSF3D.unit", false]], "unit (gammapy.irf.psfking attribute)": [[166, "gammapy.irf.PSFKing.unit", false]], "unit (gammapy.irf.radmax2d attribute)": [[169, "gammapy.irf.RadMax2D.unit", false]], "unit (gammapy.maps.hpxmap attribute)": [[197, "gammapy.maps.HpxMap.unit", false]], "unit (gammapy.maps.hpxndmap attribute)": [[198, "gammapy.maps.HpxNDMap.unit", false]], "unit (gammapy.maps.labelmapaxis attribute)": [[199, "gammapy.maps.LabelMapAxis.unit", false]], "unit (gammapy.maps.map attribute)": [[200, "gammapy.maps.Map.unit", false]], "unit (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.unit", false]], "unit (gammapy.maps.regionndmap attribute)": [[206, "gammapy.maps.RegionNDMap.unit", false]], "unit (gammapy.maps.timemapaxis attribute)": [[207, "gammapy.maps.TimeMapAxis.unit", false]], "unit (gammapy.maps.wcsmap attribute)": [[209, "gammapy.maps.WcsMap.unit", false]], "unit (gammapy.maps.wcsndmap attribute)": [[210, "gammapy.maps.WcsNDMap.unit", false]], "unit (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.unit", false]], "unit (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.unit", false]], "unit_from_fits_image_hdu() (in module gammapy.utils.units)": [[372, "gammapy.utils.units.unit_from_fits_image_hdu", false]], "update() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.update", false]], "update() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.update", false]], "update() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.update", false]], "update() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.update", false]], "update_config() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.update_config", false]], "update_forward_refs() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.update_forward_refs", false]], "update_forward_refs() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.update_forward_refs", false]], "update_forward_refs() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.update_forward_refs", false]], "update_from_dict() (gammapy.modeling.parameter method)": [[218, "gammapy.modeling.Parameter.update_from_dict", false]], "update_from_dict() (gammapy.modeling.priorparameter method)": [[220, "gammapy.modeling.PriorParameter.update_from_dict", false]], "update_link_label() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.update_link_label", false]], "update_link_label() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.update_link_label", false]], "update_parameters_from_table() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.update_parameters_from_table", false]], "update_parameters_from_table() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.update_parameters_from_table", false]], "upsample() (gammapy.maps.geom method)": [[195, "gammapy.maps.Geom.upsample", false]], "upsample() (gammapy.maps.hpxgeom method)": [[196, "gammapy.maps.HpxGeom.upsample", false]], "upsample() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.upsample", false]], "upsample() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.upsample", false]], "upsample() (gammapy.maps.labelmapaxis method)": [[199, "gammapy.maps.LabelMapAxis.upsample", false]], "upsample() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.upsample", false]], "upsample() (gammapy.maps.mapaxes method)": [[201, "gammapy.maps.MapAxes.upsample", false]], "upsample() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.upsample", false]], "upsample() (gammapy.maps.regiongeom method)": [[205, "gammapy.maps.RegionGeom.upsample", false]], "upsample() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.upsample", false]], "upsample() (gammapy.maps.timemapaxis method)": [[207, "gammapy.maps.TimeMapAxis.upsample", false]], "upsample() (gammapy.maps.wcsgeom method)": [[208, "gammapy.maps.WcsGeom.upsample", false]], "upsample() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.upsample", false]], "upsample() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.upsample", false]], "use_center_as_plot_labels (gammapy.maps.mapaxis attribute)": [[202, "gammapy.maps.MapAxis.use_center_as_plot_labels", false]], "uses_quantity (gammapy.astro.population.casebattacharya1998 attribute)": [[28, "gammapy.astro.population.CaseBattacharya1998.uses_quantity", false]], "uses_quantity (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006 attribute)": [[30, "gammapy.astro.population.FaucherKaspi2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.uses_quantity", false]], "uses_quantity (gammapy.astro.population.faucherkaspi2006velocitymaxwellian attribute)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.uses_quantity", false]], "uses_quantity (gammapy.astro.population.lorimer2006 attribute)": [[35, "gammapy.astro.population.Lorimer2006.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990 attribute)": [[36, "gammapy.astro.population.Paczynski1990.uses_quantity", false]], "uses_quantity (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004 attribute)": [[39, "gammapy.astro.population.YusifovKucuk2004.uses_quantity", false]], "uses_quantity (gammapy.astro.population.yusifovkucuk2004b attribute)": [[40, "gammapy.astro.population.YusifovKucuk2004B.uses_quantity", false]], "v_0 (gammapy.astro.population.paczynski1990velocity attribute)": [[37, "gammapy.astro.population.Paczynski1990Velocity.v_0", false]], "valid_hdu_class (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_CLASS", false]], "valid_hdu_type (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.VALID_HDU_TYPE", false]], "validate() (gammapy.analysis.analysisconfig class method)": [[16, "gammapy.analysis.AnalysisConfig.validate", false]], "validate() (gammapy.data.eventlistmetadata class method)": [[84, "gammapy.data.EventListMetaData.validate", false]], "validate() (gammapy.data.observationmetadata class method)": [[90, "gammapy.data.ObservationMetaData.validate", false]], "validate() (gammapy.datasets.mapdatasetmetadata class method)": [[105, "gammapy.datasets.MapDatasetMetaData.validate", false]], "validate() (gammapy.estimators.fluxmetadata class method)": [[127, "gammapy.estimators.FluxMetaData.validate", false]], "valleespiral (class in gammapy.astro.population)": [[38, "gammapy.astro.population.ValleeSpiral", false]], "value (gammapy.modeling.models.constantspatialmodel attribute)": [[225, "gammapy.modeling.models.ConstantSpatialModel.value", false]], "value (gammapy.modeling.parameter attribute)": [[218, "gammapy.modeling.Parameter.value", false]], "value (gammapy.modeling.parameters attribute)": [[219, "gammapy.modeling.Parameters.value", false]], "value (gammapy.modeling.priorparameter attribute)": [[220, "gammapy.modeling.PriorParameter.value", false]], "value (gammapy.modeling.priorparameters attribute)": [[221, "gammapy.modeling.PriorParameters.value", false]], "values() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values", false]], "values() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values", false]], "values() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.values", false]], "values_equal() (gammapy.data.hduindextable method)": [[87, "gammapy.data.HDUIndexTable.values_equal", false]], "values_equal() (gammapy.data.observationtable method)": [[91, "gammapy.data.ObservationTable.values_equal", false]], "velocity_distributions (in module gammapy.astro.population)": [[49, "gammapy.astro.population.velocity_distributions", false]], "velocity_glon_glat() (in module gammapy.utils.coordinates)": [[320, "gammapy.utils.coordinates.velocity_glon_glat", false]], "w (gammapy.astro.population.faucherkaspi2006velocitybimodal attribute)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.w", false]], "wcs (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.wcs", false]], "wcs (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.wcs", false]], "wcs_geom (gammapy.modeling.models.datasetmodels attribute)": [[228, "gammapy.modeling.models.DatasetModels.wcs_geom", false]], "wcs_geom (gammapy.modeling.models.models attribute)": [[252, "gammapy.modeling.models.Models.wcs_geom", false]], "wcsgeom (class in gammapy.maps)": [[208, "gammapy.maps.WcsGeom", false]], "wcsmap (class in gammapy.maps)": [[209, "gammapy.maps.WcsMap", false]], "wcsndmap (class in gammapy.maps)": [[210, "gammapy.maps.WcsNDMap", false]], "weight (gammapy.modeling.models.gaussianprior attribute)": [[237, "gammapy.modeling.models.GaussianPrior.weight", false]], "weight (gammapy.modeling.models.loguniformprior attribute)": [[247, "gammapy.modeling.models.LogUniformPrior.weight", false]], "weight (gammapy.modeling.models.prior attribute)": [[261, "gammapy.modeling.models.Prior.weight", false]], "weight (gammapy.modeling.models.uniformprior attribute)": [[283, "gammapy.modeling.models.UniformPrior.weight", false]], "weighted_cash_sum_cython() (in module gammapy.stats)": [[309, "gammapy.stats.weighted_cash_sum_cython", false]], "width (gammapy.maps.hpxgeom attribute)": [[196, "gammapy.maps.HpxGeom.width", false]], "width (gammapy.maps.regiongeom attribute)": [[205, "gammapy.maps.RegionGeom.width", false]], "width (gammapy.maps.wcsgeom attribute)": [[208, "gammapy.maps.WcsGeom.width", false]], "width (gammapy.modeling.models.shellspatialmodel attribute)": [[266, "gammapy.modeling.models.ShellSpatialModel.width", false]], "width() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width", false]], "width_error() (gammapy.catalog.sourcecataloglargescalehgps method)": [[68, "gammapy.catalog.SourceCatalogLargeScaleHGPS.width_error", false]], "with_units_from_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.with_units_from_data", false]], "with_units_from_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.with_units_from_data", false]], "without_units_for_data() (gammapy.astro.population.casebattacharya1998 method)": [[28, "gammapy.astro.population.CaseBattacharya1998.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.exponential method)": [[29, "gammapy.astro.population.Exponential.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006 method)": [[30, "gammapy.astro.population.FaucherKaspi2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitybimodal method)": [[31, "gammapy.astro.population.FaucherKaspi2006VelocityBimodal.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.faucherkaspi2006velocitymaxwellian method)": [[32, "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.lorimer2006 method)": [[35, "gammapy.astro.population.Lorimer2006.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990 method)": [[36, "gammapy.astro.population.Paczynski1990.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.paczynski1990velocity method)": [[37, "gammapy.astro.population.Paczynski1990Velocity.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004 method)": [[39, "gammapy.astro.population.YusifovKucuk2004.without_units_for_data", false]], "without_units_for_data() (gammapy.astro.population.yusifovkucuk2004b method)": [[40, "gammapy.astro.population.YusifovKucuk2004B.without_units_for_data", false]], "wobbleregionsfinder (class in gammapy.makers)": [[185, "gammapy.makers.WobbleRegionsFinder", false]], "wrap_coord() (gammapy.maps.mapaxis method)": [[202, "gammapy.maps.MapAxis.wrap_coord", false]], "write (gammapy.data.hduindextable attribute)": [[87, "gammapy.data.HDUIndexTable.write", false]], "write (gammapy.data.observationtable attribute)": [[91, "gammapy.data.ObservationTable.write", false]], "write() (gammapy.analysis.analysisconfig method)": [[16, "gammapy.analysis.AnalysisConfig.write", false]], "write() (gammapy.astro.darkmatter.primaryflux method)": [[26, "gammapy.astro.darkmatter.PrimaryFlux.write", false]], "write() (gammapy.data.gti method)": [[86, "gammapy.data.GTI.write", false]], "write() (gammapy.data.observation method)": [[88, "gammapy.data.Observation.write", false]], "write() (gammapy.datasets.datasets method)": [[100, "gammapy.datasets.Datasets.write", false]], "write() (gammapy.datasets.fluxpointsdataset method)": [[102, "gammapy.datasets.FluxPointsDataset.write", false]], "write() (gammapy.datasets.mapdataset method)": [[103, "gammapy.datasets.MapDataset.write", false]], "write() (gammapy.datasets.mapdatasetonoff method)": [[106, "gammapy.datasets.MapDatasetOnOff.write", false]], "write() (gammapy.datasets.mapdatasetweighted method)": [[107, "gammapy.datasets.MapDatasetWeighted.write", false]], "write() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write", false]], "write() (gammapy.datasets.spectrumdataset method)": [[111, "gammapy.datasets.SpectrumDataset.write", false]], "write() (gammapy.datasets.spectrumdatasetonoff method)": [[112, "gammapy.datasets.SpectrumDatasetOnOff.write", false]], "write() (gammapy.estimators.fluxmaps method)": [[126, "gammapy.estimators.FluxMaps.write", false]], "write() (gammapy.estimators.fluxpoints method)": [[128, "gammapy.estimators.FluxPoints.write", false]], "write() (gammapy.irf.background2d method)": [[151, "gammapy.irf.Background2D.write", false]], "write() (gammapy.irf.background3d method)": [[152, "gammapy.irf.Background3D.write", false]], "write() (gammapy.irf.backgroundirf method)": [[153, "gammapy.irf.BackgroundIRF.write", false]], "write() (gammapy.irf.edispkernel method)": [[154, "gammapy.irf.EDispKernel.write", false]], "write() (gammapy.irf.edispkernelmap method)": [[155, "gammapy.irf.EDispKernelMap.write", false]], "write() (gammapy.irf.edispmap method)": [[156, "gammapy.irf.EDispMap.write", false]], "write() (gammapy.irf.effectiveareatable2d method)": [[157, "gammapy.irf.EffectiveAreaTable2D.write", false]], "write() (gammapy.irf.energydependentmultigausspsf method)": [[158, "gammapy.irf.EnergyDependentMultiGaussPSF.write", false]], "write() (gammapy.irf.energydispersion2d method)": [[159, "gammapy.irf.EnergyDispersion2D.write", false]], "write() (gammapy.irf.irf method)": [[161, "gammapy.irf.IRF.write", false]], "write() (gammapy.irf.irfmap method)": [[162, "gammapy.irf.IRFMap.write", false]], "write() (gammapy.irf.parametricpsf method)": [[168, "gammapy.irf.ParametricPSF.write", false]], "write() (gammapy.irf.psf3d method)": [[164, "gammapy.irf.PSF3D.write", false]], "write() (gammapy.irf.psfkernel method)": [[165, "gammapy.irf.PSFKernel.write", false]], "write() (gammapy.irf.psfking method)": [[166, "gammapy.irf.PSFKing.write", false]], "write() (gammapy.irf.psfmap method)": [[167, "gammapy.irf.PSFMap.write", false]], "write() (gammapy.irf.radmax2d method)": [[169, "gammapy.irf.RadMax2D.write", false]], "write() (gammapy.irf.recopsfmap method)": [[170, "gammapy.irf.RecoPSFMap.write", false]], "write() (gammapy.maps.hpxmap method)": [[197, "gammapy.maps.HpxMap.write", false]], "write() (gammapy.maps.hpxndmap method)": [[198, "gammapy.maps.HpxNDMap.write", false]], "write() (gammapy.maps.map method)": [[200, "gammapy.maps.Map.write", false]], "write() (gammapy.maps.maps method)": [[204, "gammapy.maps.Maps.write", false]], "write() (gammapy.maps.regionndmap method)": [[206, "gammapy.maps.RegionNDMap.write", false]], "write() (gammapy.maps.wcsmap method)": [[209, "gammapy.maps.WcsMap.write", false]], "write() (gammapy.maps.wcsndmap method)": [[210, "gammapy.maps.WcsNDMap.write", false]], "write() (gammapy.modeling.fitresult method)": [[216, "gammapy.modeling.FitResult.write", false]], "write() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.write", false]], "write() (gammapy.modeling.models.lightcurvetemplatetemporalmodel method)": [[243, "gammapy.modeling.models.LightCurveTemplateTemporalModel.write", false]], "write() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.write", false]], "write() (gammapy.modeling.models.templatendspatialmodel method)": [[276, "gammapy.modeling.models.TemplateNDSpatialModel.write", false]], "write() (gammapy.modeling.models.templatendspectralmodel method)": [[277, "gammapy.modeling.models.TemplateNDSpectralModel.write", false]], "write() (gammapy.modeling.models.templatenpredmodel method)": [[278, "gammapy.modeling.models.TemplateNPredModel.write", false]], "write() (gammapy.modeling.models.templatephasecurvetemporalmodel method)": [[279, "gammapy.modeling.models.TemplatePhaseCurveTemporalModel.write", false]], "write() (gammapy.modeling.models.templatespatialmodel method)": [[280, "gammapy.modeling.models.TemplateSpatialModel.write", false]], "write_arf() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_arf", false]], "write_bkg() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_bkg", false]], "write_covariance() (gammapy.modeling.models.datasetmodels method)": [[228, "gammapy.modeling.models.DatasetModels.write_covariance", false]], "write_covariance() (gammapy.modeling.models.models method)": [[252, "gammapy.modeling.models.Models.write_covariance", false]], "write_datasets() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_datasets", false]], "write_models() (gammapy.analysis.analysis method)": [[15, "gammapy.analysis.Analysis.write_models", false]], "write_pha() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_pha", false]], "write_rmf() (gammapy.datasets.ogipdatasetwriter method)": [[109, "gammapy.datasets.OGIPDatasetWriter.write_rmf", false]], "write_yaml() (in module gammapy.utils.scripts)": [[355, "gammapy.utils.scripts.write_yaml", false]], "wstat() (in module gammapy.stats)": [[310, "gammapy.stats.wstat", false]], "wstatcountsstatistic (class in gammapy.stats)": [[295, "gammapy.stats.WStatCountsStatistic", false]], "x_max (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.x_max", false]], "x_min (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.x_min", false]], "x_ref (gammapy.estimators.imageprofile attribute)": [[131, "gammapy.estimators.ImageProfile.x_ref", false]], "xy_position() (gammapy.astro.population.faucherspiral method)": [[33, "gammapy.astro.population.FaucherSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.logspiral method)": [[34, "gammapy.astro.population.LogSpiral.xy_position", false]], "xy_position() (gammapy.astro.population.valleespiral method)": [[38, "gammapy.astro.population.ValleeSpiral.xy_position", false]], "yusifovkucuk2004 (class in gammapy.astro.population)": [[39, "gammapy.astro.population.YusifovKucuk2004", false]], "yusifovkucuk2004b (class in gammapy.astro.population)": [[40, "gammapy.astro.population.YusifovKucuk2004B", false]], "z_0 (gammapy.astro.population.exponential attribute)": [[29, "gammapy.astro.population.Exponential.z_0", false]], "zhaoprofile (class in gammapy.astro.darkmatter)": [[27, "gammapy.astro.darkmatter.ZhaoProfile", false]]}, "objects": {"gammapy": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "catalog"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "datasets"], [5, 0, 0, "-", "estimators"], [7, 0, 0, "-", "irf"], [8, 0, 0, "-", "makers"], [9, 0, 0, "-", "maps"], [10, 0, 0, "-", "modeling"], [12, 0, 0, "-", "stats"], [14, 0, 0, "-", "visualization"], [11, 6, 1, "cmdoption-gammapy-ignore-warnings", "--ignore-warnings"], [11, 6, 1, "cmdoption-gammapy-log-level", "--log-level"], [11, 6, 1, "cmdoption-gammapy-version", "--version"]], "gammapy-analysis-config": [[11, 6, 1, "cmdoption-gammapy-analysis-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-config-overwrite", "--overwrite"]], "gammapy-analysis-run": [[11, 6, 1, "cmdoption-gammapy-analysis-run-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-analysis-run-out", "--out"], [11, 6, 1, "cmdoption-gammapy-analysis-run-overwrite", "--overwrite"]], "gammapy-download-datasets": [[11, 6, 1, "cmdoption-gammapy-download-datasets-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-datasets-release", "--release"]], "gammapy-download-notebooks": [[11, 6, 1, "cmdoption-gammapy-download-notebooks-out", "--out"], [11, 6, 1, "cmdoption-gammapy-download-notebooks-release", "--release"]], "gammapy-info": [[11, 6, 1, "cmdoption-gammapy-info-dependencies", "--dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--envvar"], [11, 6, 1, "cmdoption-gammapy-info-dependencies", "--no-dependencies"], [11, 6, 1, "cmdoption-gammapy-info-envvar", "--no-envvar"], [11, 6, 1, "cmdoption-gammapy-info-system", "--no-system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--no-version"], [11, 6, 1, "cmdoption-gammapy-info-system", "--system"], [11, 6, 1, "cmdoption-gammapy-info-version", "--version"]], "gammapy-workflow-config": [[11, 6, 1, "cmdoption-gammapy-workflow-config-filename", "--filename"], [11, 6, 1, "cmdoption-gammapy-workflow-config-overwrite", "--overwrite"]], "gammapy-workflow-run": [[11, 6, 1, "cmdoption-gammapy-workflow-run-filename", "--filename"]], "gammapy.analysis": [[15, 1, 1, "", "Analysis"], [16, 1, 1, "", "AnalysisConfig"]], "gammapy.analysis.Analysis": [[15, 2, 1, "", "config"], [15, 3, 1, "", "get_datasets"], [15, 3, 1, "", "get_excess_map"], [15, 3, 1, "", "get_flux_points"], [15, 3, 1, "", "get_light_curve"], [15, 3, 1, "", "get_observations"], [15, 2, 1, "", "models"], [15, 3, 1, "", "read_datasets"], [15, 3, 1, "", "read_models"], [15, 3, 1, "", "run_fit"], [15, 3, 1, "", "set_models"], [15, 3, 1, "", "update_config"], [15, 3, 1, "", "write_datasets"], [15, 3, 1, "", "write_models"]], "gammapy.analysis.AnalysisConfig": [[16, 3, 1, "", "construct"], [16, 3, 1, "", "copy"], [16, 3, 1, "", "dict"], [16, 3, 1, "", "from_orm"], [16, 3, 1, "", "from_yaml"], [16, 3, 1, "", "json"], [16, 2, 1, "", "model_computed_fields"], [16, 2, 1, "", "model_config"], [16, 3, 1, "", "model_construct"], [16, 3, 1, "", "model_copy"], [16, 3, 1, "", "model_dump"], [16, 3, 1, "", "model_dump_json"], [16, 2, 1, "", "model_extra"], [16, 2, 1, "", "model_fields"], [16, 2, 1, "", "model_fields_set"], [16, 3, 1, "", "model_json_schema"], [16, 3, 1, "", "model_parametrized_name"], [16, 3, 1, "", "model_post_init"], [16, 3, 1, "", "model_rebuild"], [16, 3, 1, "", "model_validate"], [16, 3, 1, "", "model_validate_json"], [16, 3, 1, "", "model_validate_strings"], [16, 3, 1, "", "parse_file"], [16, 3, 1, "", "parse_obj"], [16, 3, 1, "", "parse_raw"], [16, 3, 1, "", "read"], [16, 3, 1, "", "schema"], [16, 3, 1, "", "schema_json"], [16, 3, 1, "", "set_logging"], [16, 3, 1, "", "to_yaml"], [16, 3, 1, "", "update"], [16, 3, 1, "", "update_forward_refs"], [16, 3, 1, "", "validate"], [16, 3, 1, "", "write"]], "gammapy.astro": [[1, 0, 0, "-", "darkmatter"], [1, 0, 0, "-", "population"], [1, 0, 0, "-", "source"]], "gammapy.astro.darkmatter": [[17, 1, 1, "", "BurkertProfile"], [18, 1, 1, "", "DMProfile"], [19, 1, 1, "", "DarkMatterAnnihilationSpectralModel"], [20, 1, 1, "", "DarkMatterDecaySpectralModel"], [21, 1, 1, "", "EinastoProfile"], [22, 1, 1, "", "IsothermalProfile"], [23, 1, 1, "", "JFactory"], [24, 1, 1, "", "MooreProfile"], [25, 1, 1, "", "NFWProfile"], [26, 1, 1, "", "PrimaryFlux"], [27, 1, 1, "", "ZhaoProfile"]], "gammapy.astro.darkmatter.BurkertProfile": [[17, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [17, 2, 1, "", "DISTANCE_GC"], [17, 2, 1, "", "LOCAL_DENSITY"], [17, 3, 1, "", "__call__"], [17, 3, 1, "", "evaluate"], [17, 3, 1, "", "integral"], [17, 3, 1, "", "integrate_spectrum_separation"], [17, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DMProfile": [[18, 2, 1, "", "DISTANCE_GC"], [18, 2, 1, "", "LOCAL_DENSITY"], [18, 3, 1, "", "__call__"], [18, 3, 1, "", "integral"], [18, 3, 1, "", "integrate_spectrum_separation"], [18, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.DarkMatterAnnihilationSpectralModel": [[19, 2, 1, "", "THERMAL_RELIC_CROSS_SECTION"], [19, 3, 1, "", "__call__"], [19, 3, 1, "", "copy"], [19, 2, 1, "", "covariance"], [19, 2, 1, "", "default_parameters"], [19, 3, 1, "", "energy_flux"], [19, 3, 1, "", "energy_flux_error"], [19, 3, 1, "", "evaluate"], [19, 3, 1, "", "evaluate_error"], [19, 3, 1, "", "freeze"], [19, 3, 1, "", "from_dict"], [19, 3, 1, "", "from_parameters"], [19, 2, 1, "", "frozen"], [19, 3, 1, "", "integral"], [19, 3, 1, "", "integral_error"], [19, 3, 1, "", "inverse"], [19, 3, 1, "", "inverse_all"], [19, 2, 1, "", "is_norm_spectral_model"], [19, 2, 1, "", "parameters"], [19, 2, 1, "", "parameters_unique_names"], [19, 2, 1, "", "pivot_energy"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "plot_error"], [19, 3, 1, "", "reassign"], [19, 3, 1, "", "reference_fluxes"], [19, 2, 1, "", "scale"], [19, 3, 1, "", "spectral_index"], [19, 3, 1, "", "spectral_index_error"], [19, 2, 1, "", "tag"], [19, 3, 1, "", "to_dict"], [19, 2, 1, "", "type"], [19, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.DarkMatterDecaySpectralModel": [[20, 2, 1, "", "LIFETIME_AGE_OF_UNIVERSE"], [20, 3, 1, "", "__call__"], [20, 3, 1, "", "copy"], [20, 2, 1, "", "covariance"], [20, 2, 1, "", "default_parameters"], [20, 3, 1, "", "energy_flux"], [20, 3, 1, "", "energy_flux_error"], [20, 3, 1, "", "evaluate"], [20, 3, 1, "", "evaluate_error"], [20, 3, 1, "", "freeze"], [20, 3, 1, "", "from_dict"], [20, 3, 1, "", "from_parameters"], [20, 2, 1, "", "frozen"], [20, 3, 1, "", "integral"], [20, 3, 1, "", "integral_error"], [20, 3, 1, "", "inverse"], [20, 3, 1, "", "inverse_all"], [20, 2, 1, "", "is_norm_spectral_model"], [20, 2, 1, "", "parameters"], [20, 2, 1, "", "parameters_unique_names"], [20, 2, 1, "", "pivot_energy"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "plot_error"], [20, 3, 1, "", "reassign"], [20, 3, 1, "", "reference_fluxes"], [20, 2, 1, "", "scale"], [20, 3, 1, "", "spectral_index"], [20, 3, 1, "", "spectral_index_error"], [20, 2, 1, "", "tag"], [20, 3, 1, "", "to_dict"], [20, 2, 1, "", "type"], [20, 3, 1, "", "unfreeze"]], "gammapy.astro.darkmatter.EinastoProfile": [[21, 2, 1, "", "DEFAULT_ALPHA"], [21, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [21, 2, 1, "", "DISTANCE_GC"], [21, 2, 1, "", "LOCAL_DENSITY"], [21, 3, 1, "", "__call__"], [21, 3, 1, "", "evaluate"], [21, 3, 1, "", "integral"], [21, 3, 1, "", "integrate_spectrum_separation"], [21, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.IsothermalProfile": [[22, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [22, 2, 1, "", "DISTANCE_GC"], [22, 2, 1, "", "LOCAL_DENSITY"], [22, 3, 1, "", "__call__"], [22, 3, 1, "", "evaluate"], [22, 3, 1, "", "integral"], [22, 3, 1, "", "integrate_spectrum_separation"], [22, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.JFactory": [[23, 3, 1, "", "compute_differential_jfactor"], [23, 3, 1, "", "compute_jfactor"]], "gammapy.astro.darkmatter.MooreProfile": [[24, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [24, 2, 1, "", "DISTANCE_GC"], [24, 2, 1, "", "LOCAL_DENSITY"], [24, 3, 1, "", "__call__"], [24, 3, 1, "", "evaluate"], [24, 3, 1, "", "integral"], [24, 3, 1, "", "integrate_spectrum_separation"], [24, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.NFWProfile": [[25, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [25, 2, 1, "", "DISTANCE_GC"], [25, 2, 1, "", "LOCAL_DENSITY"], [25, 3, 1, "", "__call__"], [25, 3, 1, "", "evaluate"], [25, 3, 1, "", "integral"], [25, 3, 1, "", "integrate_spectrum_separation"], [25, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.darkmatter.PrimaryFlux": [[26, 3, 1, "", "__call__"], [26, 2, 1, "", "allowed_channels"], [26, 2, 1, "", "channel"], [26, 2, 1, "", "channel_registry"], [26, 3, 1, "", "copy"], [26, 2, 1, "", "covariance"], [26, 2, 1, "", "default_parameters"], [26, 3, 1, "", "energy_flux"], [26, 3, 1, "", "energy_flux_error"], [26, 3, 1, "", "evaluate"], [26, 3, 1, "", "evaluate_error"], [26, 3, 1, "", "freeze"], [26, 3, 1, "", "from_dict"], [26, 3, 1, "", "from_parameters"], [26, 2, 1, "", "frozen"], [26, 3, 1, "", "integral"], [26, 3, 1, "", "integral_error"], [26, 3, 1, "", "inverse"], [26, 3, 1, "", "inverse_all"], [26, 2, 1, "", "is_norm_spectral_model"], [26, 2, 1, "", "mDM"], [26, 2, 1, "", "map"], [26, 2, 1, "", "parameters"], [26, 2, 1, "", "parameters_unique_names"], [26, 2, 1, "", "pivot_energy"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "plot_error"], [26, 3, 1, "", "reassign"], [26, 3, 1, "", "reference_fluxes"], [26, 3, 1, "", "spectral_index"], [26, 3, 1, "", "spectral_index_error"], [26, 2, 1, "", "table_filename"], [26, 2, 1, "", "tag"], [26, 3, 1, "", "to_dict"], [26, 2, 1, "", "type"], [26, 3, 1, "", "unfreeze"], [26, 3, 1, "", "write"]], "gammapy.astro.darkmatter.ZhaoProfile": [[27, 2, 1, "", "DEFAULT_ALPHA"], [27, 2, 1, "", "DEFAULT_BETA"], [27, 2, 1, "", "DEFAULT_GAMMA"], [27, 2, 1, "", "DEFAULT_SCALE_RADIUS"], [27, 2, 1, "", "DISTANCE_GC"], [27, 2, 1, "", "LOCAL_DENSITY"], [27, 3, 1, "", "__call__"], [27, 3, 1, "", "evaluate"], [27, 3, 1, "", "integral"], [27, 3, 1, "", "integrate_spectrum_separation"], [27, 3, 1, "", "scale_to_local_density"]], "gammapy.astro.population": [[28, 1, 1, "", "CaseBattacharya1998"], [29, 1, 1, "", "Exponential"], [30, 1, 1, "", "FaucherKaspi2006"], [31, 1, 1, "", "FaucherKaspi2006VelocityBimodal"], [32, 1, 1, "", "FaucherKaspi2006VelocityMaxwellian"], [33, 1, 1, "", "FaucherSpiral"], [34, 1, 1, "", "LogSpiral"], [35, 1, 1, "", "Lorimer2006"], [36, 1, 1, "", "Paczynski1990"], [37, 1, 1, "", "Paczynski1990Velocity"], [38, 1, 1, "", "ValleeSpiral"], [39, 1, 1, "", "YusifovKucuk2004"], [40, 1, 1, "", "YusifovKucuk2004B"], [41, 4, 1, "", "add_observed_parameters"], [42, 4, 1, "", "add_pulsar_parameters"], [43, 4, 1, "", "add_pwn_parameters"], [44, 4, 1, "", "add_snr_parameters"], [45, 4, 1, "", "make_base_catalog_galactic"], [46, 4, 1, "", "make_catalog_random_positions_cube"], [47, 4, 1, "", "make_catalog_random_positions_sphere"], [48, 5, 1, "", "radial_distributions"], [49, 5, 1, "", "velocity_distributions"]], "gammapy.astro.population.CaseBattacharya1998": [[28, 3, 1, "", "__call__"], [28, 2, 1, "", "alpha"], [28, 2, 1, "", "amplitude"], [28, 2, 1, "", "bbox_with_units"], [28, 2, 1, "", "beta"], [28, 2, 1, "", "bounding_box"], [28, 2, 1, "", "bounds"], [28, 3, 1, "", "coerce_units"], [28, 2, 1, "", "col_fit_deriv"], [28, 3, 1, "", "copy"], [28, 2, 1, "", "cov_matrix"], [28, 3, 1, "", "deepcopy"], [28, 2, 1, "", "eqcons"], [28, 3, 1, "", "evaluate"], [28, 2, 1, "", "evolved"], [28, 2, 1, "", "fit_deriv"], [28, 2, 1, "", "fittable"], [28, 2, 1, "", "fixed"], [28, 3, 1, "", "get_bounding_box"], [28, 3, 1, "", "has_inverse"], [28, 2, 1, "", "has_user_bounding_box"], [28, 2, 1, "", "has_user_inverse"], [28, 2, 1, "", "ineqcons"], [28, 3, 1, "", "input_shape"], [28, 2, 1, "", "input_units"], [28, 2, 1, "", "input_units_allow_dimensionless"], [28, 2, 1, "", "input_units_equivalencies"], [28, 2, 1, "", "input_units_strict"], [28, 2, 1, "", "inputs"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "linear"], [28, 2, 1, "", "meta"], [28, 2, 1, "", "model_constraints"], [28, 2, 1, "", "model_set_axis"], [28, 2, 1, "", "n_inputs"], [28, 2, 1, "", "n_outputs"], [28, 2, 1, "", "n_submodels"], [28, 2, 1, "", "name"], [28, 3, 1, "", "output_units"], [28, 2, 1, "", "outputs"], [28, 2, 1, "", "param_names"], [28, 2, 1, "", "param_sets"], [28, 2, 1, "", "parameter_constraints"], [28, 2, 1, "", "parameters"], [28, 3, 1, "", "prepare_inputs"], [28, 3, 1, "", "prepare_outputs"], [28, 3, 1, "", "rename"], [28, 3, 1, "", "render"], [28, 2, 1, "", "return_units"], [28, 2, 1, "", "separable"], [28, 3, 1, "", "set_slice_args"], [28, 2, 1, "", "standard_broadcasting"], [28, 2, 1, "", "stds"], [28, 3, 1, "", "strip_units_from_tree"], [28, 3, 1, "", "sum_of_implicit_terms"], [28, 2, 1, "", "sync_constraints"], [28, 2, 1, "", "tied"], [28, 2, 1, "", "uses_quantity"], [28, 3, 1, "", "with_units_from_data"], [28, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Exponential": [[29, 3, 1, "", "__call__"], [29, 2, 1, "", "amplitude"], [29, 2, 1, "", "bbox_with_units"], [29, 2, 1, "", "bounding_box"], [29, 2, 1, "", "bounds"], [29, 3, 1, "", "coerce_units"], [29, 2, 1, "", "col_fit_deriv"], [29, 3, 1, "", "copy"], [29, 2, 1, "", "cov_matrix"], [29, 3, 1, "", "deepcopy"], [29, 2, 1, "", "eqcons"], [29, 3, 1, "", "evaluate"], [29, 2, 1, "", "evolved"], [29, 2, 1, "", "fit_deriv"], [29, 2, 1, "", "fittable"], [29, 2, 1, "", "fixed"], [29, 3, 1, "", "get_bounding_box"], [29, 3, 1, "", "has_inverse"], [29, 2, 1, "", "has_user_bounding_box"], [29, 2, 1, "", "has_user_inverse"], [29, 2, 1, "", "ineqcons"], [29, 3, 1, "", "input_shape"], [29, 2, 1, "", "input_units"], [29, 2, 1, "", "input_units_allow_dimensionless"], [29, 2, 1, "", "input_units_equivalencies"], [29, 2, 1, "", "input_units_strict"], [29, 2, 1, "", "inputs"], [29, 2, 1, "", "inverse"], [29, 2, 1, "", "linear"], [29, 2, 1, "", "meta"], [29, 2, 1, "", "model_constraints"], [29, 2, 1, "", "model_set_axis"], [29, 2, 1, "", "n_inputs"], [29, 2, 1, "", "n_outputs"], [29, 2, 1, "", "n_submodels"], [29, 2, 1, "", "name"], [29, 3, 1, "", "output_units"], [29, 2, 1, "", "outputs"], [29, 2, 1, "", "param_names"], [29, 2, 1, "", "param_sets"], [29, 2, 1, "", "parameter_constraints"], [29, 2, 1, "", "parameters"], [29, 3, 1, "", "prepare_inputs"], [29, 3, 1, "", "prepare_outputs"], [29, 3, 1, "", "rename"], [29, 3, 1, "", "render"], [29, 2, 1, "", "return_units"], [29, 2, 1, "", "separable"], [29, 3, 1, "", "set_slice_args"], [29, 2, 1, "", "standard_broadcasting"], [29, 2, 1, "", "stds"], [29, 3, 1, "", "strip_units_from_tree"], [29, 3, 1, "", "sum_of_implicit_terms"], [29, 2, 1, "", "sync_constraints"], [29, 2, 1, "", "tied"], [29, 2, 1, "", "uses_quantity"], [29, 3, 1, "", "with_units_from_data"], [29, 3, 1, "", "without_units_for_data"], [29, 2, 1, "", "z_0"]], "gammapy.astro.population.FaucherKaspi2006": [[30, 3, 1, "", "__call__"], [30, 2, 1, "", "amplitude"], [30, 2, 1, "", "bbox_with_units"], [30, 2, 1, "", "bounding_box"], [30, 2, 1, "", "bounds"], [30, 3, 1, "", "coerce_units"], [30, 2, 1, "", "col_fit_deriv"], [30, 3, 1, "", "copy"], [30, 2, 1, "", "cov_matrix"], [30, 3, 1, "", "deepcopy"], [30, 2, 1, "", "eqcons"], [30, 3, 1, "", "evaluate"], [30, 2, 1, "", "evolved"], [30, 2, 1, "", "fit_deriv"], [30, 2, 1, "", "fittable"], [30, 2, 1, "", "fixed"], [30, 3, 1, "", "get_bounding_box"], [30, 3, 1, "", "has_inverse"], [30, 2, 1, "", "has_user_bounding_box"], [30, 2, 1, "", "has_user_inverse"], [30, 2, 1, "", "ineqcons"], [30, 3, 1, "", "input_shape"], [30, 2, 1, "", "input_units"], [30, 2, 1, "", "input_units_allow_dimensionless"], [30, 2, 1, "", "input_units_equivalencies"], [30, 2, 1, "", "input_units_strict"], [30, 2, 1, "", "inputs"], [30, 2, 1, "", "inverse"], [30, 2, 1, "", "linear"], [30, 2, 1, "", "meta"], [30, 2, 1, "", "model_constraints"], [30, 2, 1, "", "model_set_axis"], [30, 2, 1, "", "n_inputs"], [30, 2, 1, "", "n_outputs"], [30, 2, 1, "", "n_submodels"], [30, 2, 1, "", "name"], [30, 3, 1, "", "output_units"], [30, 2, 1, "", "outputs"], [30, 2, 1, "", "param_names"], [30, 2, 1, "", "param_sets"], [30, 2, 1, "", "parameter_constraints"], [30, 2, 1, "", "parameters"], [30, 3, 1, "", "prepare_inputs"], [30, 3, 1, "", "prepare_outputs"], [30, 2, 1, "", "r_0"], [30, 3, 1, "", "rename"], [30, 3, 1, "", "render"], [30, 2, 1, "", "return_units"], [30, 2, 1, "", "separable"], [30, 3, 1, "", "set_slice_args"], [30, 2, 1, "", "sigma"], [30, 2, 1, "", "standard_broadcasting"], [30, 2, 1, "", "stds"], [30, 3, 1, "", "strip_units_from_tree"], [30, 3, 1, "", "sum_of_implicit_terms"], [30, 2, 1, "", "sync_constraints"], [30, 2, 1, "", "tied"], [30, 2, 1, "", "uses_quantity"], [30, 3, 1, "", "with_units_from_data"], [30, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityBimodal": [[31, 3, 1, "", "__call__"], [31, 2, 1, "", "amplitude"], [31, 2, 1, "", "bbox_with_units"], [31, 2, 1, "", "bounding_box"], [31, 2, 1, "", "bounds"], [31, 3, 1, "", "coerce_units"], [31, 2, 1, "", "col_fit_deriv"], [31, 3, 1, "", "copy"], [31, 2, 1, "", "cov_matrix"], [31, 3, 1, "", "deepcopy"], [31, 2, 1, "", "eqcons"], [31, 3, 1, "", "evaluate"], [31, 2, 1, "", "fit_deriv"], [31, 2, 1, "", "fittable"], [31, 2, 1, "", "fixed"], [31, 3, 1, "", "get_bounding_box"], [31, 3, 1, "", "has_inverse"], [31, 2, 1, "", "has_user_bounding_box"], [31, 2, 1, "", "has_user_inverse"], [31, 2, 1, "", "ineqcons"], [31, 3, 1, "", "input_shape"], [31, 2, 1, "", "input_units"], [31, 2, 1, "", "input_units_allow_dimensionless"], [31, 2, 1, "", "input_units_equivalencies"], [31, 2, 1, "", "input_units_strict"], [31, 2, 1, "", "inputs"], [31, 2, 1, "", "inverse"], [31, 2, 1, "", "linear"], [31, 2, 1, "", "meta"], [31, 2, 1, "", "model_constraints"], [31, 2, 1, "", "model_set_axis"], [31, 2, 1, "", "n_inputs"], [31, 2, 1, "", "n_outputs"], [31, 2, 1, "", "n_submodels"], [31, 2, 1, "", "name"], [31, 3, 1, "", "output_units"], [31, 2, 1, "", "outputs"], [31, 2, 1, "", "param_names"], [31, 2, 1, "", "param_sets"], [31, 2, 1, "", "parameter_constraints"], [31, 2, 1, "", "parameters"], [31, 3, 1, "", "prepare_inputs"], [31, 3, 1, "", "prepare_outputs"], [31, 3, 1, "", "rename"], [31, 3, 1, "", "render"], [31, 2, 1, "", "return_units"], [31, 2, 1, "", "separable"], [31, 3, 1, "", "set_slice_args"], [31, 2, 1, "", "sigma_1"], [31, 2, 1, "", "sigma_2"], [31, 2, 1, "", "standard_broadcasting"], [31, 2, 1, "", "stds"], [31, 3, 1, "", "strip_units_from_tree"], [31, 3, 1, "", "sum_of_implicit_terms"], [31, 2, 1, "", "sync_constraints"], [31, 2, 1, "", "tied"], [31, 2, 1, "", "uses_quantity"], [31, 2, 1, "", "w"], [31, 3, 1, "", "with_units_from_data"], [31, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherKaspi2006VelocityMaxwellian": [[32, 3, 1, "", "__call__"], [32, 2, 1, "", "amplitude"], [32, 2, 1, "", "bbox_with_units"], [32, 2, 1, "", "bounding_box"], [32, 2, 1, "", "bounds"], [32, 3, 1, "", "coerce_units"], [32, 2, 1, "", "col_fit_deriv"], [32, 3, 1, "", "copy"], [32, 2, 1, "", "cov_matrix"], [32, 3, 1, "", "deepcopy"], [32, 2, 1, "", "eqcons"], [32, 3, 1, "", "evaluate"], [32, 2, 1, "", "fit_deriv"], [32, 2, 1, "", "fittable"], [32, 2, 1, "", "fixed"], [32, 3, 1, "", "get_bounding_box"], [32, 3, 1, "", "has_inverse"], [32, 2, 1, "", "has_user_bounding_box"], [32, 2, 1, "", "has_user_inverse"], [32, 2, 1, "", "ineqcons"], [32, 3, 1, "", "input_shape"], [32, 2, 1, "", "input_units"], [32, 2, 1, "", "input_units_allow_dimensionless"], [32, 2, 1, "", "input_units_equivalencies"], [32, 2, 1, "", "input_units_strict"], [32, 2, 1, "", "inputs"], [32, 2, 1, "", "inverse"], [32, 2, 1, "", "linear"], [32, 2, 1, "", "meta"], [32, 2, 1, "", "model_constraints"], [32, 2, 1, "", "model_set_axis"], [32, 2, 1, "", "n_inputs"], [32, 2, 1, "", "n_outputs"], [32, 2, 1, "", "n_submodels"], [32, 2, 1, "", "name"], [32, 3, 1, "", "output_units"], [32, 2, 1, "", "outputs"], [32, 2, 1, "", "param_names"], [32, 2, 1, "", "param_sets"], [32, 2, 1, "", "parameter_constraints"], [32, 2, 1, "", "parameters"], [32, 3, 1, "", "prepare_inputs"], [32, 3, 1, "", "prepare_outputs"], [32, 3, 1, "", "rename"], [32, 3, 1, "", "render"], [32, 2, 1, "", "return_units"], [32, 2, 1, "", "separable"], [32, 3, 1, "", "set_slice_args"], [32, 2, 1, "", "sigma"], [32, 2, 1, "", "standard_broadcasting"], [32, 2, 1, "", "stds"], [32, 3, 1, "", "strip_units_from_tree"], [32, 3, 1, "", "sum_of_implicit_terms"], [32, 2, 1, "", "sync_constraints"], [32, 2, 1, "", "tied"], [32, 2, 1, "", "uses_quantity"], [32, 3, 1, "", "with_units_from_data"], [32, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.FaucherSpiral": [[33, 3, 1, "", "__call__"], [33, 2, 1, "", "k"], [33, 2, 1, "", "r_0"], [33, 3, 1, "", "radius"], [33, 2, 1, "", "spiralarms"], [33, 3, 1, "", "theta"], [33, 2, 1, "", "theta_0"], [33, 3, 1, "", "xy_position"]], "gammapy.astro.population.LogSpiral": [[34, 3, 1, "", "radius"], [34, 3, 1, "", "theta"], [34, 3, 1, "", "xy_position"]], "gammapy.astro.population.Lorimer2006": [[35, 2, 1, "", "B"], [35, 2, 1, "", "C"], [35, 3, 1, "", "__call__"], [35, 2, 1, "", "amplitude"], [35, 2, 1, "", "bbox_with_units"], [35, 2, 1, "", "bounding_box"], [35, 2, 1, "", "bounds"], [35, 3, 1, "", "coerce_units"], [35, 2, 1, "", "col_fit_deriv"], [35, 3, 1, "", "copy"], [35, 2, 1, "", "cov_matrix"], [35, 3, 1, "", "deepcopy"], [35, 2, 1, "", "eqcons"], [35, 3, 1, "", "evaluate"], [35, 2, 1, "", "evolved"], [35, 2, 1, "", "fit_deriv"], [35, 2, 1, "", "fittable"], [35, 2, 1, "", "fixed"], [35, 3, 1, "", "get_bounding_box"], [35, 3, 1, "", "has_inverse"], [35, 2, 1, "", "has_user_bounding_box"], [35, 2, 1, "", "has_user_inverse"], [35, 2, 1, "", "ineqcons"], [35, 3, 1, "", "input_shape"], [35, 2, 1, "", "input_units"], [35, 2, 1, "", "input_units_allow_dimensionless"], [35, 2, 1, "", "input_units_equivalencies"], [35, 2, 1, "", "input_units_strict"], [35, 2, 1, "", "inputs"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "linear"], [35, 2, 1, "", "meta"], [35, 2, 1, "", "model_constraints"], [35, 2, 1, "", "model_set_axis"], [35, 2, 1, "", "n_inputs"], [35, 2, 1, "", "n_outputs"], [35, 2, 1, "", "n_submodels"], [35, 2, 1, "", "name"], [35, 3, 1, "", "output_units"], [35, 2, 1, "", "outputs"], [35, 2, 1, "", "param_names"], [35, 2, 1, "", "param_sets"], [35, 2, 1, "", "parameter_constraints"], [35, 2, 1, "", "parameters"], [35, 3, 1, "", "prepare_inputs"], [35, 3, 1, "", "prepare_outputs"], [35, 3, 1, "", "rename"], [35, 3, 1, "", "render"], [35, 2, 1, "", "return_units"], [35, 2, 1, "", "separable"], [35, 3, 1, "", "set_slice_args"], [35, 2, 1, "", "standard_broadcasting"], [35, 2, 1, "", "stds"], [35, 3, 1, "", "strip_units_from_tree"], [35, 3, 1, "", "sum_of_implicit_terms"], [35, 2, 1, "", "sync_constraints"], [35, 2, 1, "", "tied"], [35, 2, 1, "", "uses_quantity"], [35, 3, 1, "", "with_units_from_data"], [35, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990": [[36, 3, 1, "", "__call__"], [36, 2, 1, "", "amplitude"], [36, 2, 1, "", "bbox_with_units"], [36, 2, 1, "", "bounding_box"], [36, 2, 1, "", "bounds"], [36, 3, 1, "", "coerce_units"], [36, 2, 1, "", "col_fit_deriv"], [36, 3, 1, "", "copy"], [36, 2, 1, "", "cov_matrix"], [36, 3, 1, "", "deepcopy"], [36, 2, 1, "", "eqcons"], [36, 3, 1, "", "evaluate"], [36, 2, 1, "", "evolved"], [36, 2, 1, "", "fit_deriv"], [36, 2, 1, "", "fittable"], [36, 2, 1, "", "fixed"], [36, 3, 1, "", "get_bounding_box"], [36, 3, 1, "", "has_inverse"], [36, 2, 1, "", "has_user_bounding_box"], [36, 2, 1, "", "has_user_inverse"], [36, 2, 1, "", "ineqcons"], [36, 3, 1, "", "input_shape"], [36, 2, 1, "", "input_units"], [36, 2, 1, "", "input_units_allow_dimensionless"], [36, 2, 1, "", "input_units_equivalencies"], [36, 2, 1, "", "input_units_strict"], [36, 2, 1, "", "inputs"], [36, 2, 1, "", "inverse"], [36, 2, 1, "", "linear"], [36, 2, 1, "", "meta"], [36, 2, 1, "", "model_constraints"], [36, 2, 1, "", "model_set_axis"], [36, 2, 1, "", "n_inputs"], [36, 2, 1, "", "n_outputs"], [36, 2, 1, "", "n_submodels"], [36, 2, 1, "", "name"], [36, 3, 1, "", "output_units"], [36, 2, 1, "", "outputs"], [36, 2, 1, "", "param_names"], [36, 2, 1, "", "param_sets"], [36, 2, 1, "", "parameter_constraints"], [36, 2, 1, "", "parameters"], [36, 3, 1, "", "prepare_inputs"], [36, 3, 1, "", "prepare_outputs"], [36, 2, 1, "", "r_exp"], [36, 3, 1, "", "rename"], [36, 3, 1, "", "render"], [36, 2, 1, "", "return_units"], [36, 2, 1, "", "separable"], [36, 3, 1, "", "set_slice_args"], [36, 2, 1, "", "standard_broadcasting"], [36, 2, 1, "", "stds"], [36, 3, 1, "", "strip_units_from_tree"], [36, 3, 1, "", "sum_of_implicit_terms"], [36, 2, 1, "", "sync_constraints"], [36, 2, 1, "", "tied"], [36, 2, 1, "", "uses_quantity"], [36, 3, 1, "", "with_units_from_data"], [36, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.Paczynski1990Velocity": [[37, 3, 1, "", "__call__"], [37, 2, 1, "", "amplitude"], [37, 2, 1, "", "bbox_with_units"], [37, 2, 1, "", "bounding_box"], [37, 2, 1, "", "bounds"], [37, 3, 1, "", "coerce_units"], [37, 2, 1, "", "col_fit_deriv"], [37, 3, 1, "", "copy"], [37, 2, 1, "", "cov_matrix"], [37, 3, 1, "", "deepcopy"], [37, 2, 1, "", "eqcons"], [37, 3, 1, "", "evaluate"], [37, 2, 1, "", "fit_deriv"], [37, 2, 1, "", "fittable"], [37, 2, 1, "", "fixed"], [37, 3, 1, "", "get_bounding_box"], [37, 3, 1, "", "has_inverse"], [37, 2, 1, "", "has_user_bounding_box"], [37, 2, 1, "", "has_user_inverse"], [37, 2, 1, "", "ineqcons"], [37, 3, 1, "", "input_shape"], [37, 2, 1, "", "input_units"], [37, 2, 1, "", "input_units_allow_dimensionless"], [37, 2, 1, "", "input_units_equivalencies"], [37, 2, 1, "", "input_units_strict"], [37, 2, 1, "", "inputs"], [37, 2, 1, "", "inverse"], [37, 2, 1, "", "linear"], [37, 2, 1, "", "meta"], [37, 2, 1, "", "model_constraints"], [37, 2, 1, "", "model_set_axis"], [37, 2, 1, "", "n_inputs"], [37, 2, 1, "", "n_outputs"], [37, 2, 1, "", "n_submodels"], [37, 2, 1, "", "name"], [37, 3, 1, "", "output_units"], [37, 2, 1, "", "outputs"], [37, 2, 1, "", "param_names"], [37, 2, 1, "", "param_sets"], [37, 2, 1, "", "parameter_constraints"], [37, 2, 1, "", "parameters"], [37, 3, 1, "", "prepare_inputs"], [37, 3, 1, "", "prepare_outputs"], [37, 3, 1, "", "rename"], [37, 3, 1, "", "render"], [37, 2, 1, "", "return_units"], [37, 2, 1, "", "separable"], [37, 3, 1, "", "set_slice_args"], [37, 2, 1, "", "standard_broadcasting"], [37, 2, 1, "", "stds"], [37, 3, 1, "", "strip_units_from_tree"], [37, 3, 1, "", "sum_of_implicit_terms"], [37, 2, 1, "", "sync_constraints"], [37, 2, 1, "", "tied"], [37, 2, 1, "", "uses_quantity"], [37, 2, 1, "", "v_0"], [37, 3, 1, "", "with_units_from_data"], [37, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.ValleeSpiral": [[38, 2, 1, "", "bar_radius"], [38, 2, 1, "", "m"], [38, 2, 1, "", "p"], [38, 2, 1, "", "r_0"], [38, 2, 1, "", "r_sun"], [38, 3, 1, "", "radius"], [38, 2, 1, "", "spiralarms"], [38, 3, 1, "", "theta"], [38, 2, 1, "", "theta_0"], [38, 3, 1, "", "xy_position"]], "gammapy.astro.population.YusifovKucuk2004": [[39, 3, 1, "", "__call__"], [39, 2, 1, "", "a"], [39, 2, 1, "", "amplitude"], [39, 2, 1, "", "b"], [39, 2, 1, "", "bbox_with_units"], [39, 2, 1, "", "bounding_box"], [39, 2, 1, "", "bounds"], [39, 3, 1, "", "coerce_units"], [39, 2, 1, "", "col_fit_deriv"], [39, 3, 1, "", "copy"], [39, 2, 1, "", "cov_matrix"], [39, 3, 1, "", "deepcopy"], [39, 2, 1, "", "eqcons"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "evolved"], [39, 2, 1, "", "fit_deriv"], [39, 2, 1, "", "fittable"], [39, 2, 1, "", "fixed"], [39, 3, 1, "", "get_bounding_box"], [39, 3, 1, "", "has_inverse"], [39, 2, 1, "", "has_user_bounding_box"], [39, 2, 1, "", "has_user_inverse"], [39, 2, 1, "", "ineqcons"], [39, 3, 1, "", "input_shape"], [39, 2, 1, "", "input_units"], [39, 2, 1, "", "input_units_allow_dimensionless"], [39, 2, 1, "", "input_units_equivalencies"], [39, 2, 1, "", "input_units_strict"], [39, 2, 1, "", "inputs"], [39, 2, 1, "", "inverse"], [39, 2, 1, "", "linear"], [39, 2, 1, "", "meta"], [39, 2, 1, "", "model_constraints"], [39, 2, 1, "", "model_set_axis"], [39, 2, 1, "", "n_inputs"], [39, 2, 1, "", "n_outputs"], [39, 2, 1, "", "n_submodels"], [39, 2, 1, "", "name"], [39, 3, 1, "", "output_units"], [39, 2, 1, "", "outputs"], [39, 2, 1, "", "param_names"], [39, 2, 1, "", "param_sets"], [39, 2, 1, "", "parameter_constraints"], [39, 2, 1, "", "parameters"], [39, 3, 1, "", "prepare_inputs"], [39, 3, 1, "", "prepare_outputs"], [39, 2, 1, "", "r_1"], [39, 3, 1, "", "rename"], [39, 3, 1, "", "render"], [39, 2, 1, "", "return_units"], [39, 2, 1, "", "separable"], [39, 3, 1, "", "set_slice_args"], [39, 2, 1, "", "standard_broadcasting"], [39, 2, 1, "", "stds"], [39, 3, 1, "", "strip_units_from_tree"], [39, 3, 1, "", "sum_of_implicit_terms"], [39, 2, 1, "", "sync_constraints"], [39, 2, 1, "", "tied"], [39, 2, 1, "", "uses_quantity"], [39, 3, 1, "", "with_units_from_data"], [39, 3, 1, "", "without_units_for_data"]], "gammapy.astro.population.YusifovKucuk2004B": [[40, 3, 1, "", "__call__"], [40, 2, 1, "", "a"], [40, 2, 1, "", "amplitude"], [40, 2, 1, "", "b"], [40, 2, 1, "", "bbox_with_units"], [40, 2, 1, "", "bounding_box"], [40, 2, 1, "", "bounds"], [40, 3, 1, "", "coerce_units"], [40, 2, 1, "", "col_fit_deriv"], [40, 3, 1, "", "copy"], [40, 2, 1, "", "cov_matrix"], [40, 3, 1, "", "deepcopy"], [40, 2, 1, "", "eqcons"], [40, 3, 1, "", "evaluate"], [40, 2, 1, "", "evolved"], [40, 2, 1, "", "fit_deriv"], [40, 2, 1, "", "fittable"], [40, 2, 1, "", "fixed"], [40, 3, 1, "", "get_bounding_box"], [40, 3, 1, "", "has_inverse"], [40, 2, 1, "", "has_user_bounding_box"], [40, 2, 1, "", "has_user_inverse"], [40, 2, 1, "", "ineqcons"], [40, 3, 1, "", "input_shape"], [40, 2, 1, "", "input_units"], [40, 2, 1, "", "input_units_allow_dimensionless"], [40, 2, 1, "", "input_units_equivalencies"], [40, 2, 1, "", "input_units_strict"], [40, 2, 1, "", "inputs"], [40, 2, 1, "", "inverse"], [40, 2, 1, "", "linear"], [40, 2, 1, "", "meta"], [40, 2, 1, "", "model_constraints"], [40, 2, 1, "", "model_set_axis"], [40, 2, 1, "", "n_inputs"], [40, 2, 1, "", "n_outputs"], [40, 2, 1, "", "n_submodels"], [40, 2, 1, "", "name"], [40, 3, 1, "", "output_units"], [40, 2, 1, "", "outputs"], [40, 2, 1, "", "param_names"], [40, 2, 1, "", "param_sets"], [40, 2, 1, "", "parameter_constraints"], [40, 2, 1, "", "parameters"], [40, 3, 1, "", "prepare_inputs"], [40, 3, 1, "", "prepare_outputs"], [40, 3, 1, "", "rename"], [40, 3, 1, "", "render"], [40, 2, 1, "", "return_units"], [40, 2, 1, "", "separable"], [40, 3, 1, "", "set_slice_args"], [40, 2, 1, "", "standard_broadcasting"], [40, 2, 1, "", "stds"], [40, 3, 1, "", "strip_units_from_tree"], [40, 3, 1, "", "sum_of_implicit_terms"], [40, 2, 1, "", "sync_constraints"], [40, 2, 1, "", "tied"], [40, 2, 1, "", "uses_quantity"], [40, 3, 1, "", "with_units_from_data"], [40, 3, 1, "", "without_units_for_data"]], "gammapy.astro.source": [[50, 1, 1, "", "PWN"], [51, 1, 1, "", "Pulsar"], [52, 1, 1, "", "SNR"], [53, 1, 1, "", "SNRTrueloveMcKee"], [54, 1, 1, "", "SimplePulsar"]], "gammapy.astro.source.PWN": [[50, 3, 1, "", "magnetic_field"], [50, 3, 1, "", "radius"]], "gammapy.astro.source.Pulsar": [[51, 3, 1, "", "energy_integrated"], [51, 3, 1, "", "luminosity_spindown"], [51, 3, 1, "", "magnetic_field"], [51, 3, 1, "", "period"], [51, 3, 1, "", "period_dot"], [51, 3, 1, "", "tau"]], "gammapy.astro.source.SNR": [[52, 3, 1, "", "luminosity_tev"], [52, 3, 1, "", "radius"], [52, 3, 1, "", "radius_inner"], [52, 2, 1, "", "sedov_taylor_begin"], [52, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SNRTrueloveMcKee": [[53, 3, 1, "", "luminosity_tev"], [53, 3, 1, "", "radius"], [53, 3, 1, "", "radius_inner"], [53, 3, 1, "", "radius_reverse_shock"], [53, 2, 1, "", "sedov_taylor_begin"], [53, 2, 1, "", "sedov_taylor_end"]], "gammapy.astro.source.SimplePulsar": [[54, 2, 1, "", "luminosity_spindown"], [54, 2, 1, "", "magnetic_field"], [54, 2, 1, "", "tau"]], "gammapy.catalog": [[55, 5, 1, "", "CATALOG_REGISTRY"], [56, 1, 1, "", "SourceCatalog"], [57, 1, 1, "", "SourceCatalog1LHAASO"], [58, 1, 1, "", "SourceCatalog2FHL"], [59, 1, 1, "", "SourceCatalog2HWC"], [60, 1, 1, "", "SourceCatalog2PC"], [61, 1, 1, "", "SourceCatalog3FGL"], [62, 1, 1, "", "SourceCatalog3FHL"], [63, 1, 1, "", "SourceCatalog3HWC"], [64, 1, 1, "", "SourceCatalog3PC"], [65, 1, 1, "", "SourceCatalog4FGL"], [66, 1, 1, "", "SourceCatalogGammaCat"], [67, 1, 1, "", "SourceCatalogHGPS"], [68, 1, 1, "", "SourceCatalogLargeScaleHGPS"], [69, 1, 1, "", "SourceCatalogObject"], [70, 1, 1, "", "SourceCatalogObject1LHAASO"], [71, 1, 1, "", "SourceCatalogObject2FHL"], [72, 1, 1, "", "SourceCatalogObject2HWC"], [73, 1, 1, "", "SourceCatalogObject2PC"], [74, 1, 1, "", "SourceCatalogObject3FGL"], [75, 1, 1, "", "SourceCatalogObject3FHL"], [76, 1, 1, "", "SourceCatalogObject3HWC"], [77, 1, 1, "", "SourceCatalogObject3PC"], [78, 1, 1, "", "SourceCatalogObject4FGL"], [79, 1, 1, "", "SourceCatalogObjectGammaCat"], [80, 1, 1, "", "SourceCatalogObjectHGPS"], [81, 1, 1, "", "SourceCatalogObjectHGPSComponent"]], "gammapy.catalog.SourceCatalog": [[56, 3, 1, "", "description"], [56, 2, 1, "", "positions"], [56, 3, 1, "", "row_index"], [56, 3, 1, "", "source_name"], [56, 2, 1, "", "tag"], [56, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog1LHAASO": [[57, 2, 1, "", "description"], [57, 2, 1, "", "positions"], [57, 3, 1, "", "row_index"], [57, 3, 1, "", "source_name"], [57, 2, 1, "", "tag"], [57, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2FHL": [[58, 2, 1, "", "description"], [58, 2, 1, "", "positions"], [58, 3, 1, "", "row_index"], [58, 3, 1, "", "source_name"], [58, 2, 1, "", "tag"], [58, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2HWC": [[59, 2, 1, "", "description"], [59, 2, 1, "", "positions"], [59, 3, 1, "", "row_index"], [59, 3, 1, "", "source_name"], [59, 2, 1, "", "tag"], [59, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog2PC": [[60, 2, 1, "", "description"], [60, 2, 1, "", "positions"], [60, 3, 1, "", "row_index"], [60, 3, 1, "", "source_name"], [60, 2, 1, "", "tag"], [60, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FGL": [[61, 2, 1, "", "description"], [61, 2, 1, "", "positions"], [61, 3, 1, "", "row_index"], [61, 3, 1, "", "source_name"], [61, 2, 1, "", "tag"], [61, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3FHL": [[62, 2, 1, "", "description"], [62, 2, 1, "", "positions"], [62, 3, 1, "", "row_index"], [62, 3, 1, "", "source_name"], [62, 2, 1, "", "tag"], [62, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3HWC": [[63, 2, 1, "", "description"], [63, 2, 1, "", "positions"], [63, 3, 1, "", "row_index"], [63, 3, 1, "", "source_name"], [63, 2, 1, "", "tag"], [63, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog3PC": [[64, 2, 1, "", "description"], [64, 2, 1, "", "positions"], [64, 3, 1, "", "row_index"], [64, 3, 1, "", "source_name"], [64, 2, 1, "", "tag"], [64, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalog4FGL": [[65, 2, 1, "", "description"], [65, 2, 1, "", "positions"], [65, 3, 1, "", "row_index"], [65, 3, 1, "", "source_name"], [65, 2, 1, "", "tag"], [65, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogGammaCat": [[66, 2, 1, "", "description"], [66, 2, 1, "", "positions"], [66, 3, 1, "", "row_index"], [66, 3, 1, "", "source_name"], [66, 2, 1, "", "tag"], [66, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogHGPS": [[67, 2, 1, "", "description"], [67, 3, 1, "", "gaussian_component"], [67, 2, 1, "", "large_scale_component"], [67, 2, 1, "", "positions"], [67, 3, 1, "", "row_index"], [67, 3, 1, "", "source_name"], [67, 2, 1, "", "table_associations"], [67, 2, 1, "", "table_components"], [67, 2, 1, "", "table_identifications"], [67, 2, 1, "", "table_large_scale_component"], [67, 2, 1, "", "tag"], [67, 3, 1, "", "to_models"]], "gammapy.catalog.SourceCatalogLargeScaleHGPS": [[68, 3, 1, "", "evaluate"], [68, 3, 1, "", "peak_brightness"], [68, 3, 1, "", "peak_brightness_error"], [68, 3, 1, "", "peak_latitude"], [68, 3, 1, "", "peak_latitude_error"], [68, 3, 1, "", "width"], [68, 3, 1, "", "width_error"]], "gammapy.catalog.SourceCatalogObject": [[69, 2, 1, "", "name"], [69, 2, 1, "", "position"], [69, 2, 1, "", "row_index"]], "gammapy.catalog.SourceCatalogObject1LHAASO": [[70, 2, 1, "", "name"], [70, 2, 1, "", "position"], [70, 2, 1, "", "row_index"], [70, 3, 1, "", "sky_model"], [70, 3, 1, "", "spatial_model"], [70, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2FHL": [[71, 2, 1, "", "asso"], [71, 2, 1, "", "energy_range"], [71, 2, 1, "", "flux_points"], [71, 2, 1, "", "flux_points_meta"], [71, 2, 1, "", "flux_points_table"], [71, 3, 1, "", "info"], [71, 2, 1, "", "is_pointlike"], [71, 2, 1, "", "name"], [71, 2, 1, "", "position"], [71, 2, 1, "", "row_index"], [71, 3, 1, "", "sky_model"], [71, 3, 1, "", "spatial_model"], [71, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2HWC": [[72, 3, 1, "", "info"], [72, 2, 1, "", "n_models"], [72, 2, 1, "", "name"], [72, 2, 1, "", "position"], [72, 2, 1, "", "row_index"], [72, 3, 1, "", "sky_model"], [72, 3, 1, "", "spatial_model"], [72, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject2PC": [[73, 2, 1, "", "flux_points"], [73, 2, 1, "", "flux_points_table"], [73, 3, 1, "", "info"], [73, 2, 1, "", "lightcurve"], [73, 2, 1, "", "name"], [73, 2, 1, "", "position"], [73, 2, 1, "", "row_index"], [73, 3, 1, "", "sky_model"], [73, 3, 1, "", "spatial_model"], [73, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FGL": [[74, 2, 1, "", "asso"], [74, 2, 1, "", "energy_range"], [74, 2, 1, "", "flux_points"], [74, 2, 1, "", "flux_points_meta"], [74, 2, 1, "", "flux_points_table"], [74, 3, 1, "", "info"], [74, 2, 1, "", "is_pointlike"], [74, 3, 1, "", "lightcurve"], [74, 2, 1, "", "name"], [74, 2, 1, "", "position"], [74, 2, 1, "", "row_index"], [74, 3, 1, "", "sky_model"], [74, 3, 1, "", "spatial_model"], [74, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3FHL": [[75, 2, 1, "", "asso"], [75, 2, 1, "", "energy_range"], [75, 2, 1, "", "flux_points"], [75, 2, 1, "", "flux_points_meta"], [75, 2, 1, "", "flux_points_table"], [75, 3, 1, "", "info"], [75, 2, 1, "", "is_pointlike"], [75, 2, 1, "", "name"], [75, 2, 1, "", "position"], [75, 2, 1, "", "row_index"], [75, 3, 1, "", "sky_model"], [75, 3, 1, "", "spatial_model"], [75, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3HWC": [[76, 3, 1, "", "info"], [76, 2, 1, "", "is_pointlike"], [76, 2, 1, "", "n_models"], [76, 2, 1, "", "name"], [76, 2, 1, "", "position"], [76, 2, 1, "", "row_index"], [76, 3, 1, "", "sky_model"], [76, 3, 1, "", "spatial_model"], [76, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject3PC": [[77, 2, 1, "", "asso"], [77, 2, 1, "", "flux_points"], [77, 2, 1, "", "flux_points_table"], [77, 3, 1, "", "info"], [77, 2, 1, "", "lightcurve"], [77, 2, 1, "", "name"], [77, 2, 1, "", "position"], [77, 2, 1, "", "row_index"], [77, 3, 1, "", "sky_model"], [77, 3, 1, "", "spatial_model"], [77, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObject4FGL": [[78, 2, 1, "", "asso"], [78, 2, 1, "", "flux_points"], [78, 2, 1, "", "flux_points_meta"], [78, 2, 1, "", "flux_points_table"], [78, 3, 1, "", "info"], [78, 2, 1, "", "is_pointlike"], [78, 3, 1, "", "lightcurve"], [78, 2, 1, "", "name"], [78, 2, 1, "", "position"], [78, 2, 1, "", "row_index"], [78, 3, 1, "", "sky_model"], [78, 3, 1, "", "spatial_model"], [78, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectGammaCat": [[79, 2, 1, "", "flux_points"], [79, 2, 1, "", "flux_points_table"], [79, 3, 1, "", "info"], [79, 2, 1, "", "name"], [79, 2, 1, "", "position"], [79, 2, 1, "", "row_index"], [79, 3, 1, "", "sky_model"], [79, 3, 1, "", "spatial_model"], [79, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPS": [[80, 3, 1, "", "components_models"], [80, 2, 1, "", "energy_range"], [80, 2, 1, "", "flux_points"], [80, 2, 1, "", "flux_points_table"], [80, 3, 1, "", "info"], [80, 2, 1, "", "name"], [80, 2, 1, "", "position"], [80, 2, 1, "", "row_index"], [80, 3, 1, "", "sky_model"], [80, 3, 1, "", "spatial_model"], [80, 3, 1, "", "spectral_model"]], "gammapy.catalog.SourceCatalogObjectHGPSComponent": [[81, 2, 1, "", "name"], [81, 2, 1, "", "position"], [81, 2, 1, "", "row_index"], [81, 3, 1, "", "spatial_model"]], "gammapy.data": [[82, 1, 1, "", "DataStore"], [83, 1, 1, "", "EventList"], [84, 1, 1, "", "EventListMetaData"], [85, 1, 1, "", "FixedPointingInfo"], [86, 1, 1, "", "GTI"], [87, 1, 1, "", "HDUIndexTable"], [88, 1, 1, "", "Observation"], [89, 1, 1, "", "ObservationFilter"], [90, 1, 1, "", "ObservationMetaData"], [91, 1, 1, "", "ObservationTable"], [92, 1, 1, "", "Observations"], [93, 1, 1, "", "ObservationsEventsSampler"], [94, 1, 1, "", "PointingInfo"], [95, 1, 1, "", "PointingMode"], [96, 4, 1, "", "get_irfs_features"], [97, 5, 1, "", "observatory_locations"]], "gammapy.data.DataStore": [[82, 2, 1, "", "DEFAULT_HDU_TABLE"], [82, 2, 1, "", "DEFAULT_OBS_TABLE"], [82, 3, 1, "", "check"], [82, 3, 1, "", "copy_obs"], [82, 3, 1, "", "from_dir"], [82, 3, 1, "", "from_events_files"], [82, 3, 1, "", "from_file"], [82, 3, 1, "", "get_observations"], [82, 3, 1, "", "info"], [82, 3, 1, "", "obs"], [82, 2, 1, "", "obs_ids"]], "gammapy.data.EventList": [[83, 2, 1, "", "altaz"], [83, 2, 1, "", "altaz_frame"], [83, 2, 1, "", "altaz_from_table"], [83, 3, 1, "", "check"], [83, 3, 1, "", "copy"], [83, 2, 1, "", "energy"], [83, 3, 1, "", "from_stack"], [83, 2, 1, "", "galactic"], [83, 2, 1, "", "galactic_median"], [83, 2, 1, "", "is_pointed_observation"], [83, 3, 1, "", "map_coord"], [83, 2, 1, "", "observation_dead_time_fraction"], [83, 2, 1, "", "observation_live_time_duration"], [83, 2, 1, "", "observation_time_duration"], [83, 2, 1, "", "observation_time_start"], [83, 2, 1, "", "observation_time_stop"], [83, 2, 1, "", "observatory_earth_location"], [83, 2, 1, "", "offset"], [83, 2, 1, "", "offset_from_median"], [83, 3, 1, "", "peek"], [83, 3, 1, "", "plot_energy"], [83, 3, 1, "", "plot_energy_offset"], [83, 3, 1, "", "plot_image"], [83, 3, 1, "", "plot_offset2_distribution"], [83, 3, 1, "", "plot_time"], [83, 2, 1, "", "pointing_radec"], [83, 2, 1, "", "radec"], [83, 3, 1, "", "read"], [83, 3, 1, "", "select_energy"], [83, 3, 1, "", "select_mask"], [83, 3, 1, "", "select_offset"], [83, 3, 1, "", "select_parameter"], [83, 3, 1, "", "select_rad_max"], [83, 3, 1, "", "select_region"], [83, 3, 1, "", "select_row_subset"], [83, 3, 1, "", "select_time"], [83, 3, 1, "", "stack"], [83, 2, 1, "", "time"], [83, 2, 1, "", "time_ref"], [83, 3, 1, "", "to_table_hdu"]], "gammapy.data.EventListMetaData": [[84, 3, 1, "", "construct"], [84, 3, 1, "", "copy"], [84, 3, 1, "", "dict"], [84, 3, 1, "", "from_header"], [84, 3, 1, "", "from_orm"], [84, 3, 1, "", "json"], [84, 2, 1, "", "model_computed_fields"], [84, 2, 1, "", "model_config"], [84, 3, 1, "", "model_construct"], [84, 3, 1, "", "model_copy"], [84, 3, 1, "", "model_dump"], [84, 3, 1, "", "model_dump_json"], [84, 2, 1, "", "model_extra"], [84, 2, 1, "", "model_fields"], [84, 2, 1, "", "model_fields_set"], [84, 3, 1, "", "model_json_schema"], [84, 3, 1, "", "model_parametrized_name"], [84, 3, 1, "", "model_post_init"], [84, 3, 1, "", "model_rebuild"], [84, 3, 1, "", "model_validate"], [84, 3, 1, "", "model_validate_json"], [84, 3, 1, "", "model_validate_strings"], [84, 3, 1, "", "parse_file"], [84, 3, 1, "", "parse_obj"], [84, 3, 1, "", "parse_raw"], [84, 3, 1, "", "schema"], [84, 3, 1, "", "schema_json"], [84, 2, 1, "", "tag"], [84, 3, 1, "", "to_header"], [84, 3, 1, "", "to_yaml"], [84, 3, 1, "", "update_forward_refs"], [84, 3, 1, "", "validate"]], "gammapy.data.FixedPointingInfo": [[85, 2, 1, "", "fixed_altaz"], [85, 2, 1, "", "fixed_icrs"], [85, 3, 1, "", "from_fits_header"], [85, 3, 1, "", "get_altaz"], [85, 3, 1, "", "get_icrs"], [85, 2, 1, "", "mode"], [85, 3, 1, "", "read"], [85, 3, 1, "", "to_fits_header"]], "gammapy.data.GTI": [[86, 3, 1, "", "copy"], [86, 3, 1, "", "create"], [86, 3, 1, "", "delete_interval"], [86, 3, 1, "", "from_stack"], [86, 3, 1, "", "from_table_hdu"], [86, 3, 1, "", "from_time_intervals"], [86, 3, 1, "", "group_table"], [86, 2, 1, "", "met_start"], [86, 2, 1, "", "met_stop"], [86, 3, 1, "", "read"], [86, 3, 1, "", "select_time"], [86, 3, 1, "", "stack"], [86, 2, 1, "", "time_delta"], [86, 2, 1, "", "time_intervals"], [86, 2, 1, "", "time_ref"], [86, 2, 1, "", "time_start"], [86, 2, 1, "", "time_stop"], [86, 2, 1, "", "time_sum"], [86, 3, 1, "", "to_table_hdu"], [86, 3, 1, "", "union"], [86, 3, 1, "", "write"]], "gammapy.data.HDUIndexTable": [[87, 2, 1, "", "ColumnClass"], [87, 2, 1, "", "VALID_HDU_CLASS"], [87, 2, 1, "", "VALID_HDU_TYPE"], [87, 3, 1, "", "add_column"], [87, 3, 1, "", "add_columns"], [87, 3, 1, "", "add_index"], [87, 3, 1, "", "add_row"], [87, 3, 1, "", "argsort"], [87, 3, 1, "", "as_array"], [87, 2, 1, "", "base_dir"], [87, 2, 1, "", "colnames"], [87, 3, 1, "", "convert_bytestring_to_unicode"], [87, 3, 1, "", "convert_unicode_to_bytestring"], [87, 3, 1, "", "copy"], [87, 2, 1, "", "dtype"], [87, 3, 1, "", "field"], [87, 3, 1, "", "filled"], [87, 3, 1, "", "from_pandas"], [87, 3, 1, "", "group_by"], [87, 2, 1, "", "groups"], [87, 2, 1, "", "has_masked_columns"], [87, 2, 1, "", "has_masked_values"], [87, 2, 1, "", "has_mixin_columns"], [87, 2, 1, "", "hdu_class_unique"], [87, 3, 1, "", "hdu_location"], [87, 2, 1, "", "hdu_type_unique"], [87, 2, 1, "", "iloc"], [87, 3, 1, "", "index_column"], [87, 3, 1, "", "index_mode"], [87, 2, 1, "", "indices"], [87, 2, 1, "", "info"], [87, 3, 1, "", "insert_row"], [87, 3, 1, "", "items"], [87, 3, 1, "", "itercols"], [87, 3, 1, "", "iterrows"], [87, 3, 1, "", "keep_columns"], [87, 3, 1, "", "keys"], [87, 2, 1, "", "loc"], [87, 2, 1, "", "loc_indices"], [87, 3, 1, "", "location_info"], [87, 2, 1, "", "mask"], [87, 2, 1, "", "masked"], [87, 2, 1, "", "meta"], [87, 3, 1, "", "more"], [87, 2, 1, "", "obs_id_unique"], [87, 3, 1, "", "pformat"], [87, 3, 1, "", "pformat_all"], [87, 3, 1, "", "pprint"], [87, 3, 1, "", "pprint_all"], [87, 2, 1, "", "pprint_exclude_names"], [87, 2, 1, "", "pprint_include_names"], [87, 3, 1, "", "read"], [87, 3, 1, "", "remove_column"], [87, 3, 1, "", "remove_columns"], [87, 3, 1, "", "remove_indices"], [87, 3, 1, "", "remove_row"], [87, 3, 1, "", "remove_rows"], [87, 3, 1, "", "rename_column"], [87, 3, 1, "", "rename_columns"], [87, 3, 1, "", "replace_column"], [87, 3, 1, "", "reverse"], [87, 3, 1, "", "round"], [87, 3, 1, "", "row_idx"], [87, 3, 1, "", "show_in_browser"], [87, 3, 1, "", "show_in_notebook"], [87, 3, 1, "", "sort"], [87, 3, 1, "", "summary"], [87, 3, 1, "", "to_pandas"], [87, 3, 1, "", "update"], [87, 3, 1, "", "values"], [87, 3, 1, "", "values_equal"], [87, 2, 1, "", "write"]], "gammapy.data.Observation": [[88, 2, 1, "", "aeff"], [88, 2, 1, "", "available_hdus"], [88, 2, 1, "", "available_irfs"], [88, 2, 1, "", "bkg"], [88, 3, 1, "", "check"], [88, 3, 1, "", "copy"], [88, 3, 1, "", "create"], [88, 2, 1, "", "edisp"], [88, 2, 1, "", "events"], [88, 3, 1, "", "get_pointing_altaz"], [88, 3, 1, "", "get_pointing_icrs"], [88, 2, 1, "", "gti"], [88, 2, 1, "", "meta"], [88, 2, 1, "", "observation_dead_time_fraction"], [88, 2, 1, "", "observation_live_time_duration"], [88, 2, 1, "", "observation_time_duration"], [88, 2, 1, "", "observatory_earth_location"], [88, 3, 1, "", "peek"], [88, 2, 1, "", "pointing"], [88, 2, 1, "", "psf"], [88, 2, 1, "", "rad_max"], [88, 3, 1, "", "read"], [88, 3, 1, "", "select_time"], [88, 2, 1, "", "target_radec"], [88, 2, 1, "", "tmid"], [88, 2, 1, "", "tstart"], [88, 2, 1, "", "tstop"], [88, 3, 1, "", "write"]], "gammapy.data.ObservationFilter": [[89, 2, 1, "", "EVENT_FILTER_TYPES"], [89, 3, 1, "", "copy"], [89, 3, 1, "", "filter_events"], [89, 3, 1, "", "filter_gti"], [89, 2, 1, "", "livetime_fraction"]], "gammapy.data.ObservationMetaData": [[90, 3, 1, "", "construct"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "dict"], [90, 3, 1, "", "from_header"], [90, 3, 1, "", "from_orm"], [90, 3, 1, "", "json"], [90, 2, 1, "", "model_computed_fields"], [90, 2, 1, "", "model_config"], [90, 3, 1, "", "model_construct"], [90, 3, 1, "", "model_copy"], [90, 3, 1, "", "model_dump"], [90, 3, 1, "", "model_dump_json"], [90, 2, 1, "", "model_extra"], [90, 2, 1, "", "model_fields"], [90, 2, 1, "", "model_fields_set"], [90, 3, 1, "", "model_json_schema"], [90, 3, 1, "", "model_parametrized_name"], [90, 3, 1, "", "model_post_init"], [90, 3, 1, "", "model_rebuild"], [90, 3, 1, "", "model_validate"], [90, 3, 1, "", "model_validate_json"], [90, 3, 1, "", "model_validate_strings"], [90, 3, 1, "", "parse_file"], [90, 3, 1, "", "parse_obj"], [90, 3, 1, "", "parse_raw"], [90, 3, 1, "", "schema"], [90, 3, 1, "", "schema_json"], [90, 2, 1, "", "tag"], [90, 3, 1, "", "to_header"], [90, 3, 1, "", "to_yaml"], [90, 3, 1, "", "update_forward_refs"], [90, 3, 1, "", "validate"]], "gammapy.data.ObservationTable": [[91, 2, 1, "", "ColumnClass"], [91, 3, 1, "", "add_column"], [91, 3, 1, "", "add_columns"], [91, 3, 1, "", "add_index"], [91, 3, 1, "", "add_row"], [91, 3, 1, "", "argsort"], [91, 3, 1, "", "as_array"], [91, 2, 1, "", "colnames"], [91, 3, 1, "", "convert_bytestring_to_unicode"], [91, 3, 1, "", "convert_unicode_to_bytestring"], [91, 3, 1, "", "copy"], [91, 2, 1, "", "dtype"], [91, 3, 1, "", "field"], [91, 3, 1, "", "filled"], [91, 3, 1, "", "from_pandas"], [91, 3, 1, "", "group_by"], [91, 2, 1, "", "groups"], [91, 2, 1, "", "has_masked_columns"], [91, 2, 1, "", "has_masked_values"], [91, 2, 1, "", "has_mixin_columns"], [91, 2, 1, "", "iloc"], [91, 3, 1, "", "index_column"], [91, 3, 1, "", "index_mode"], [91, 2, 1, "", "indices"], [91, 2, 1, "", "info"], [91, 3, 1, "", "insert_row"], [91, 3, 1, "", "items"], [91, 3, 1, "", "itercols"], [91, 3, 1, "", "iterrows"], [91, 3, 1, "", "keep_columns"], [91, 3, 1, "", "keys"], [91, 2, 1, "", "loc"], [91, 2, 1, "", "loc_indices"], [91, 2, 1, "", "mask"], [91, 2, 1, "", "masked"], [91, 2, 1, "", "meta"], [91, 3, 1, "", "more"], [91, 3, 1, "", "pformat"], [91, 3, 1, "", "pformat_all"], [91, 2, 1, "", "pointing_galactic"], [91, 2, 1, "", "pointing_radec"], [91, 3, 1, "", "pprint"], [91, 3, 1, "", "pprint_all"], [91, 2, 1, "", "pprint_exclude_names"], [91, 2, 1, "", "pprint_include_names"], [91, 3, 1, "", "read"], [91, 3, 1, "", "remove_column"], [91, 3, 1, "", "remove_columns"], [91, 3, 1, "", "remove_indices"], [91, 3, 1, "", "remove_row"], [91, 3, 1, "", "remove_rows"], [91, 3, 1, "", "rename_column"], [91, 3, 1, "", "rename_columns"], [91, 3, 1, "", "replace_column"], [91, 3, 1, "", "reverse"], [91, 3, 1, "", "round"], [91, 3, 1, "", "select_obs_id"], [91, 3, 1, "", "select_observations"], [91, 3, 1, "", "select_range"], [91, 3, 1, "", "select_sky_circle"], [91, 3, 1, "", "select_time_range"], [91, 3, 1, "", "show_in_browser"], [91, 3, 1, "", "show_in_notebook"], [91, 3, 1, "", "sort"], [91, 3, 1, "", "summary"], [91, 2, 1, "", "time_ref"], [91, 2, 1, "", "time_start"], [91, 2, 1, "", "time_stop"], [91, 3, 1, "", "to_pandas"], [91, 3, 1, "", "update"], [91, 3, 1, "", "values"], [91, 3, 1, "", "values_equal"], [91, 2, 1, "", "write"]], "gammapy.data.Observations": [[92, 3, 1, "", "append"], [92, 3, 1, "", "clear"], [92, 3, 1, "", "count"], [92, 3, 1, "", "extend"], [92, 3, 1, "", "from_stack"], [92, 3, 1, "", "group_by_label"], [92, 2, 1, "", "ids"], [92, 3, 1, "", "in_memory_generator"], [92, 3, 1, "", "index"], [92, 3, 1, "", "insert"], [92, 3, 1, "", "pop"], [92, 3, 1, "", "remove"], [92, 3, 1, "", "reverse"], [92, 3, 1, "", "select_time"]], "gammapy.data.ObservationsEventsSampler": [[93, 2, 1, "", "n_jobs"], [93, 2, 1, "", "parallel_backend"], [93, 3, 1, "", "run"], [93, 3, 1, "", "simulate_observation"]], "gammapy.data.PointingInfo": [[94, 2, 1, "", "altaz"], [94, 2, 1, "", "altaz_frame"], [94, 2, 1, "", "altaz_from_table"], [94, 3, 1, "", "altaz_interpolate"], [94, 2, 1, "", "duration"], [94, 3, 1, "", "get_altaz"], [94, 3, 1, "", "get_icrs"], [94, 2, 1, "", "location"], [94, 2, 1, "", "radec"], [94, 3, 1, "", "read"], [94, 2, 1, "", "time"], [94, 2, 1, "", "time_ref"]], "gammapy.data.PointingMode": [[95, 2, 1, "", "DRIFT"], [95, 2, 1, "", "POINTING"]], "gammapy.datasets": [[98, 5, 1, "", "DATASET_REGISTRY"], [99, 1, 1, "", "Dataset"], [100, 1, 1, "", "Datasets"], [101, 1, 1, "", "FermipyDatasetsReader"], [102, 1, 1, "", "FluxPointsDataset"], [103, 1, 1, "", "MapDataset"], [104, 1, 1, "", "MapDatasetEventSampler"], [105, 1, 1, "", "MapDatasetMetaData"], [106, 1, 1, "", "MapDatasetOnOff"], [107, 1, 1, "", "MapDatasetWeighted"], [108, 1, 1, "", "OGIPDatasetReader"], [109, 1, 1, "", "OGIPDatasetWriter"], [110, 1, 1, "", "ObservationEventSampler"], [111, 1, 1, "", "SpectrumDataset"], [112, 1, 1, "", "SpectrumDatasetOnOff"], [113, 4, 1, "", "apply_edisp"], [114, 4, 1, "", "create_empty_map_dataset_from_irfs"], [115, 4, 1, "", "create_map_dataset_from_observation"], [116, 4, 1, "", "create_map_dataset_geoms"], [117, 4, 1, "", "split_dataset"], [4, 0, 0, "-", "utils"]], "gammapy.datasets.Dataset": [[99, 3, 1, "", "copy"], [99, 2, 1, "", "mask"], [99, 2, 1, "", "name"], [99, 3, 1, "", "stat_array"], [99, 3, 1, "", "stat_sum"], [99, 2, 1, "", "tag"], [99, 3, 1, "", "to_dict"]], "gammapy.datasets.Datasets": [[100, 3, 1, "", "append"], [100, 3, 1, "", "clear"], [100, 2, 1, "", "contributes_to_stat"], [100, 3, 1, "", "copy"], [100, 3, 1, "", "count"], [100, 2, 1, "", "energy_axes_are_aligned"], [100, 2, 1, "", "energy_ranges"], [100, 3, 1, "", "extend"], [100, 2, 1, "", "gti"], [100, 3, 1, "", "index"], [100, 3, 1, "", "info_table"], [100, 3, 1, "", "insert"], [100, 2, 1, "", "is_all_same_energy_shape"], [100, 2, 1, "", "is_all_same_shape"], [100, 2, 1, "", "is_all_same_type"], [100, 2, 1, "", "meta_table"], [100, 2, 1, "", "models"], [100, 2, 1, "", "names"], [100, 2, 1, "", "parameters"], [100, 3, 1, "", "pop"], [100, 3, 1, "", "read"], [100, 3, 1, "", "remove"], [100, 3, 1, "", "reverse"], [100, 3, 1, "", "select_time"], [100, 3, 1, "", "slice_by_energy"], [100, 3, 1, "", "stack_reduce"], [100, 3, 1, "", "stat_sum"], [100, 3, 1, "", "to_spectrum_datasets"], [100, 3, 1, "", "write"]], "gammapy.datasets.FermipyDatasetsReader": [[101, 3, 1, "", "create_dataset"], [101, 3, 1, "", "read"], [101, 2, 1, "", "tag"]], "gammapy.datasets.FluxPointsDataset": [[102, 2, 1, "", "available_stat_type"], [102, 3, 1, "", "copy"], [102, 3, 1, "", "data_shape"], [102, 3, 1, "", "flux_pred"], [102, 3, 1, "", "from_dict"], [102, 2, 1, "", "gti"], [102, 2, 1, "", "mask"], [102, 2, 1, "", "mask_safe"], [102, 2, 1, "", "mask_valid"], [102, 2, 1, "", "models"], [102, 2, 1, "", "name"], [102, 3, 1, "", "plot_fit"], [102, 3, 1, "", "plot_residuals"], [102, 3, 1, "", "plot_spectrum"], [102, 3, 1, "", "read"], [102, 3, 1, "", "residuals"], [102, 3, 1, "", "stat_array"], [102, 3, 1, "", "stat_sum"], [102, 2, 1, "", "stat_type"], [102, 2, 1, "", "tag"], [102, 3, 1, "", "to_dict"], [102, 3, 1, "", "write"]], "gammapy.datasets.MapDataset": [[103, 2, 1, "", "background"], [103, 2, 1, "", "background_model"], [103, 3, 1, "", "copy"], [103, 2, 1, "", "counts"], [103, 3, 1, "", "create"], [103, 3, 1, "", "cutout"], [103, 2, 1, "", "data_shape"], [103, 3, 1, "", "downsample"], [103, 2, 1, "", "edisp"], [103, 2, 1, "", "energy_range"], [103, 2, 1, "", "energy_range_fit"], [103, 2, 1, "", "energy_range_safe"], [103, 2, 1, "", "energy_range_total"], [103, 2, 1, "", "evaluators"], [103, 2, 1, "", "excess"], [103, 2, 1, "", "exposure"], [103, 3, 1, "", "fake"], [103, 3, 1, "", "from_dict"], [103, 3, 1, "", "from_geoms"], [103, 3, 1, "", "from_hdulist"], [103, 2, 1, "", "geoms"], [103, 2, 1, "", "gti"], [103, 3, 1, "", "info_dict"], [103, 2, 1, "", "mask"], [103, 2, 1, "", "mask_fit"], [103, 2, 1, "", "mask_fit_image"], [103, 2, 1, "", "mask_image"], [103, 2, 1, "", "mask_safe"], [103, 2, 1, "", "mask_safe_edisp"], [103, 2, 1, "", "mask_safe_image"], [103, 2, 1, "", "mask_safe_psf"], [103, 2, 1, "", "meta"], [103, 2, 1, "", "meta_table"], [103, 2, 1, "", "models"], [103, 2, 1, "", "name"], [103, 3, 1, "", "npred"], [103, 3, 1, "", "npred_background"], [103, 3, 1, "", "npred_signal"], [103, 3, 1, "", "pad"], [103, 3, 1, "", "peek"], [103, 3, 1, "", "plot_residuals"], [103, 3, 1, "", "plot_residuals_spatial"], [103, 3, 1, "", "plot_residuals_spectral"], [103, 2, 1, "", "psf"], [103, 3, 1, "", "read"], [103, 3, 1, "", "resample_energy_axis"], [103, 3, 1, "", "reset_data_cache"], [103, 3, 1, "", "residuals"], [103, 3, 1, "", "slice_by_energy"], [103, 3, 1, "", "slice_by_idx"], [103, 3, 1, "", "stack"], [103, 3, 1, "", "stat_array"], [103, 3, 1, "", "stat_sum"], [103, 2, 1, "", "stat_type"], [103, 2, 1, "", "tag"], [103, 3, 1, "", "to_dict"], [103, 3, 1, "", "to_hdulist"], [103, 3, 1, "", "to_image"], [103, 3, 1, "", "to_masked"], [103, 3, 1, "", "to_region_map_dataset"], [103, 3, 1, "", "to_spectrum_dataset"], [103, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetEventSampler": [[104, 3, 1, "", "event_det_coords"], [104, 3, 1, "", "event_list_meta"], [104, 3, 1, "", "run"], [104, 3, 1, "", "sample_background"], [104, 3, 1, "", "sample_edisp"], [104, 3, 1, "", "sample_psf"], [104, 3, 1, "", "sample_sources"]], "gammapy.datasets.MapDatasetMetaData": [[105, 3, 1, "", "construct"], [105, 3, 1, "", "copy"], [105, 3, 1, "", "dict"], [105, 3, 1, "", "from_header"], [105, 3, 1, "", "from_orm"], [105, 3, 1, "", "json"], [105, 2, 1, "", "model_computed_fields"], [105, 2, 1, "", "model_config"], [105, 3, 1, "", "model_construct"], [105, 3, 1, "", "model_copy"], [105, 3, 1, "", "model_dump"], [105, 3, 1, "", "model_dump_json"], [105, 2, 1, "", "model_extra"], [105, 2, 1, "", "model_fields"], [105, 2, 1, "", "model_fields_set"], [105, 3, 1, "", "model_json_schema"], [105, 3, 1, "", "model_parametrized_name"], [105, 3, 1, "", "model_post_init"], [105, 3, 1, "", "model_rebuild"], [105, 3, 1, "", "model_validate"], [105, 3, 1, "", "model_validate_json"], [105, 3, 1, "", "model_validate_strings"], [105, 3, 1, "", "parse_file"], [105, 3, 1, "", "parse_obj"], [105, 3, 1, "", "parse_raw"], [105, 3, 1, "", "schema"], [105, 3, 1, "", "schema_json"], [105, 3, 1, "", "stack"], [105, 2, 1, "", "tag"], [105, 3, 1, "", "to_header"], [105, 3, 1, "", "to_yaml"], [105, 3, 1, "", "update_forward_refs"], [105, 3, 1, "", "validate"]], "gammapy.datasets.MapDatasetOnOff": [[106, 2, 1, "", "alpha"], [106, 2, 1, "", "background"], [106, 2, 1, "", "background_model"], [106, 3, 1, "", "copy"], [106, 2, 1, "", "counts"], [106, 3, 1, "", "create"], [106, 3, 1, "", "cutout"], [106, 2, 1, "", "data_shape"], [106, 3, 1, "", "downsample"], [106, 2, 1, "", "edisp"], [106, 2, 1, "", "energy_range"], [106, 2, 1, "", "energy_range_fit"], [106, 2, 1, "", "energy_range_safe"], [106, 2, 1, "", "energy_range_total"], [106, 2, 1, "", "evaluators"], [106, 2, 1, "", "excess"], [106, 2, 1, "", "exposure"], [106, 3, 1, "", "fake"], [106, 3, 1, "", "from_dict"], [106, 3, 1, "", "from_geoms"], [106, 3, 1, "", "from_hdulist"], [106, 3, 1, "", "from_map_dataset"], [106, 2, 1, "", "geoms"], [106, 2, 1, "", "gti"], [106, 3, 1, "", "info_dict"], [106, 2, 1, "", "mask"], [106, 2, 1, "", "mask_fit"], [106, 2, 1, "", "mask_fit_image"], [106, 2, 1, "", "mask_image"], [106, 2, 1, "", "mask_safe"], [106, 2, 1, "", "mask_safe_edisp"], [106, 2, 1, "", "mask_safe_image"], [106, 2, 1, "", "mask_safe_psf"], [106, 2, 1, "", "meta"], [106, 2, 1, "", "meta_table"], [106, 2, 1, "", "models"], [106, 2, 1, "", "name"], [106, 3, 1, "", "npred"], [106, 3, 1, "", "npred_background"], [106, 3, 1, "", "npred_off"], [106, 3, 1, "", "npred_signal"], [106, 3, 1, "", "pad"], [106, 3, 1, "", "peek"], [106, 3, 1, "", "plot_residuals"], [106, 3, 1, "", "plot_residuals_spatial"], [106, 3, 1, "", "plot_residuals_spectral"], [106, 2, 1, "", "psf"], [106, 3, 1, "", "read"], [106, 3, 1, "", "resample_energy_axis"], [106, 3, 1, "", "reset_data_cache"], [106, 3, 1, "", "residuals"], [106, 3, 1, "", "slice_by_energy"], [106, 3, 1, "", "slice_by_idx"], [106, 3, 1, "", "stack"], [106, 3, 1, "", "stat_array"], [106, 3, 1, "", "stat_sum"], [106, 2, 1, "", "stat_type"], [106, 2, 1, "", "tag"], [106, 3, 1, "", "to_dict"], [106, 3, 1, "", "to_hdulist"], [106, 3, 1, "", "to_image"], [106, 3, 1, "", "to_map_dataset"], [106, 3, 1, "", "to_masked"], [106, 3, 1, "", "to_region_map_dataset"], [106, 3, 1, "", "to_spectrum_dataset"], [106, 3, 1, "", "write"]], "gammapy.datasets.MapDatasetWeighted": [[107, 2, 1, "", "background"], [107, 2, 1, "", "background_model"], [107, 3, 1, "", "copy"], [107, 2, 1, "", "counts"], [107, 3, 1, "", "create"], [107, 3, 1, "", "cutout"], [107, 2, 1, "", "data_shape"], [107, 3, 1, "", "downsample"], [107, 2, 1, "", "edisp"], [107, 2, 1, "", "energy_range"], [107, 2, 1, "", "energy_range_fit"], [107, 2, 1, "", "energy_range_safe"], [107, 2, 1, "", "energy_range_total"], [107, 2, 1, "", "evaluators"], [107, 2, 1, "", "excess"], [107, 2, 1, "", "exposure"], [107, 3, 1, "", "fake"], [107, 3, 1, "", "from_dict"], [107, 3, 1, "", "from_geoms"], [107, 3, 1, "", "from_hdulist"], [107, 2, 1, "", "geoms"], [107, 2, 1, "", "gti"], [107, 3, 1, "", "info_dict"], [107, 2, 1, "", "mask"], [107, 2, 1, "", "mask_fit"], [107, 2, 1, "", "mask_fit_image"], [107, 2, 1, "", "mask_image"], [107, 2, 1, "", "mask_safe"], [107, 2, 1, "", "mask_safe_edisp"], [107, 2, 1, "", "mask_safe_image"], [107, 2, 1, "", "mask_safe_psf"], [107, 2, 1, "", "meta"], [107, 2, 1, "", "meta_table"], [107, 2, 1, "", "models"], [107, 2, 1, "", "name"], [107, 3, 1, "", "npred"], [107, 3, 1, "", "npred_background"], [107, 3, 1, "", "npred_signal"], [107, 3, 1, "", "pad"], [107, 3, 1, "", "peek"], [107, 3, 1, "", "plot_residuals"], [107, 3, 1, "", "plot_residuals_spatial"], [107, 3, 1, "", "plot_residuals_spectral"], [107, 2, 1, "", "psf"], [107, 3, 1, "", "read"], [107, 3, 1, "", "resample_energy_axis"], [107, 3, 1, "", "reset_data_cache"], [107, 3, 1, "", "residuals"], [107, 3, 1, "", "slice_by_energy"], [107, 3, 1, "", "slice_by_idx"], [107, 3, 1, "", "stack"], [107, 3, 1, "", "stat_array"], [107, 3, 1, "", "stat_sum"], [107, 2, 1, "", "stat_type"], [107, 2, 1, "", "tag"], [107, 3, 1, "", "to_dict"], [107, 3, 1, "", "to_hdulist"], [107, 3, 1, "", "to_image"], [107, 3, 1, "", "to_masked"], [107, 3, 1, "", "to_region_map_dataset"], [107, 3, 1, "", "to_spectrum_dataset"], [107, 3, 1, "", "write"]], "gammapy.datasets.OGIPDatasetReader": [[108, 3, 1, "", "get_filenames"], [108, 3, 1, "", "get_valid_path"], [108, 3, 1, "", "read"], [108, 3, 1, "", "read_arf"], [108, 3, 1, "", "read_bkg"], [108, 3, 1, "", "read_pha"], [108, 3, 1, "", "read_rmf"], [108, 2, 1, "", "tag"]], "gammapy.datasets.OGIPDatasetWriter": [[109, 3, 1, "", "get_filenames"], [109, 3, 1, "", "get_ogip_meta"], [109, 2, 1, "", "tag"], [109, 3, 1, "", "to_counts_hdulist"], [109, 3, 1, "", "write"], [109, 3, 1, "", "write_arf"], [109, 3, 1, "", "write_bkg"], [109, 3, 1, "", "write_pha"], [109, 3, 1, "", "write_rmf"]], "gammapy.datasets.ObservationEventSampler": [[110, 3, 1, "", "event_det_coords"], [110, 3, 1, "", "event_list_meta"], [110, 3, 1, "", "run"], [110, 3, 1, "", "sample_background"], [110, 3, 1, "", "sample_edisp"], [110, 3, 1, "", "sample_psf"], [110, 3, 1, "", "sample_sources"]], "gammapy.datasets.SpectrumDataset": [[111, 2, 1, "", "background"], [111, 2, 1, "", "background_model"], [111, 3, 1, "", "copy"], [111, 2, 1, "", "counts"], [111, 3, 1, "", "create"], [111, 3, 1, "", "cutout"], [111, 2, 1, "", "data_shape"], [111, 3, 1, "", "downsample"], [111, 2, 1, "", "edisp"], [111, 2, 1, "", "energy_range"], [111, 2, 1, "", "energy_range_fit"], [111, 2, 1, "", "energy_range_safe"], [111, 2, 1, "", "energy_range_total"], [111, 2, 1, "", "evaluators"], [111, 2, 1, "", "excess"], [111, 2, 1, "", "exposure"], [111, 3, 1, "", "fake"], [111, 3, 1, "", "from_dict"], [111, 3, 1, "", "from_geoms"], [111, 3, 1, "", "from_hdulist"], [111, 2, 1, "", "geoms"], [111, 2, 1, "", "gti"], [111, 3, 1, "", "info_dict"], [111, 2, 1, "", "mask"], [111, 2, 1, "", "mask_fit"], [111, 2, 1, "", "mask_fit_image"], [111, 2, 1, "", "mask_image"], [111, 2, 1, "", "mask_safe"], [111, 2, 1, "", "mask_safe_edisp"], [111, 2, 1, "", "mask_safe_image"], [111, 2, 1, "", "mask_safe_psf"], [111, 2, 1, "", "meta"], [111, 2, 1, "", "meta_table"], [111, 2, 1, "", "models"], [111, 2, 1, "", "name"], [111, 3, 1, "", "npred"], [111, 3, 1, "", "npred_background"], [111, 3, 1, "", "npred_signal"], [111, 3, 1, "", "pad"], [111, 3, 1, "", "peek"], [111, 3, 1, "", "plot_counts"], [111, 3, 1, "", "plot_excess"], [111, 3, 1, "", "plot_fit"], [111, 3, 1, "", "plot_masks"], [111, 3, 1, "", "plot_residuals"], [111, 3, 1, "", "plot_residuals_spatial"], [111, 3, 1, "", "plot_residuals_spectral"], [111, 2, 1, "", "psf"], [111, 3, 1, "", "read"], [111, 3, 1, "", "resample_energy_axis"], [111, 3, 1, "", "reset_data_cache"], [111, 3, 1, "", "residuals"], [111, 3, 1, "", "slice_by_energy"], [111, 3, 1, "", "slice_by_idx"], [111, 3, 1, "", "stack"], [111, 3, 1, "", "stat_array"], [111, 3, 1, "", "stat_sum"], [111, 2, 1, "", "stat_type"], [111, 2, 1, "", "tag"], [111, 3, 1, "", "to_dict"], [111, 3, 1, "", "to_hdulist"], [111, 3, 1, "", "to_image"], [111, 3, 1, "", "to_masked"], [111, 3, 1, "", "to_region_map_dataset"], [111, 3, 1, "", "to_spectrum_dataset"], [111, 3, 1, "", "write"]], "gammapy.datasets.SpectrumDatasetOnOff": [[112, 2, 1, "", "alpha"], [112, 2, 1, "", "background"], [112, 2, 1, "", "background_model"], [112, 3, 1, "", "copy"], [112, 2, 1, "", "counts"], [112, 3, 1, "", "create"], [112, 3, 1, "", "cutout"], [112, 2, 1, "", "data_shape"], [112, 3, 1, "", "downsample"], [112, 2, 1, "", "edisp"], [112, 2, 1, "", "energy_range"], [112, 2, 1, "", "energy_range_fit"], [112, 2, 1, "", "energy_range_safe"], [112, 2, 1, "", "energy_range_total"], [112, 2, 1, "", "evaluators"], [112, 2, 1, "", "excess"], [112, 2, 1, "", "exposure"], [112, 3, 1, "", "fake"], [112, 3, 1, "", "from_dict"], [112, 3, 1, "", "from_geoms"], [112, 3, 1, "", "from_hdulist"], [112, 3, 1, "", "from_map_dataset"], [112, 3, 1, "", "from_spectrum_dataset"], [112, 2, 1, "", "geoms"], [112, 2, 1, "", "gti"], [112, 3, 1, "", "info_dict"], [112, 2, 1, "", "mask"], [112, 2, 1, "", "mask_fit"], [112, 2, 1, "", "mask_fit_image"], [112, 2, 1, "", "mask_image"], [112, 2, 1, "", "mask_safe"], [112, 2, 1, "", "mask_safe_edisp"], [112, 2, 1, "", "mask_safe_image"], [112, 2, 1, "", "mask_safe_psf"], [112, 2, 1, "", "meta"], [112, 2, 1, "", "meta_table"], [112, 2, 1, "", "models"], [112, 2, 1, "", "name"], [112, 3, 1, "", "npred"], [112, 3, 1, "", "npred_background"], [112, 3, 1, "", "npred_off"], [112, 3, 1, "", "npred_signal"], [112, 3, 1, "", "pad"], [112, 3, 1, "", "peek"], [112, 3, 1, "", "plot_counts"], [112, 3, 1, "", "plot_excess"], [112, 3, 1, "", "plot_fit"], [112, 3, 1, "", "plot_masks"], [112, 3, 1, "", "plot_residuals"], [112, 3, 1, "", "plot_residuals_spatial"], [112, 3, 1, "", "plot_residuals_spectral"], [112, 2, 1, "", "psf"], [112, 3, 1, "", "read"], [112, 3, 1, "", "resample_energy_axis"], [112, 3, 1, "", "reset_data_cache"], [112, 3, 1, "", "residuals"], [112, 3, 1, "", "slice_by_energy"], [112, 3, 1, "", "slice_by_idx"], [112, 3, 1, "", "stack"], [112, 3, 1, "", "stat_array"], [112, 3, 1, "", "stat_sum"], [112, 2, 1, "", "stat_type"], [112, 2, 1, "", "tag"], [112, 3, 1, "", "to_dict"], [112, 3, 1, "", "to_hdulist"], [112, 3, 1, "", "to_image"], [112, 3, 1, "", "to_map_dataset"], [112, 3, 1, "", "to_masked"], [112, 3, 1, "", "to_region_map_dataset"], [112, 3, 1, "", "to_spectrum_dataset"], [112, 3, 1, "", "write"]], "gammapy.datasets.utils": [[118, 4, 1, "", "apply_edisp"], [119, 4, 1, "", "create_map_dataset_from_dl4"], [120, 4, 1, "", "split_dataset"]], "gammapy.estimators": [[121, 1, 1, "", "ASmoothMapEstimator"], [122, 5, 1, "", "ESTIMATOR_REGISTRY"], [123, 1, 1, "", "EnergyDependentMorphologyEstimator"], [124, 1, 1, "", "Estimator"], [125, 1, 1, "", "ExcessMapEstimator"], [126, 1, 1, "", "FluxMaps"], [127, 1, 1, "", "FluxMetaData"], [128, 1, 1, "", "FluxPoints"], [129, 1, 1, "", "FluxPointsEstimator"], [130, 1, 1, "", "FluxProfileEstimator"], [131, 1, 1, "", "ImageProfile"], [132, 1, 1, "", "ImageProfileEstimator"], [133, 1, 1, "", "LightCurveEstimator"], [134, 1, 1, "", "ParameterEstimator"], [135, 1, 1, "", "ParameterSensitivityEstimator"], [136, 1, 1, "", "SensitivityEstimator"], [137, 1, 1, "", "TSMapEstimator"], [5, 0, 0, "-", "utils"]], "gammapy.estimators.ASmoothMapEstimator": [[121, 2, 1, "", "config_parameters"], [121, 3, 1, "", "copy"], [121, 3, 1, "", "estimate_maps"], [121, 3, 1, "", "get_kernels"], [121, 3, 1, "", "get_scales"], [121, 3, 1, "", "run"], [121, 3, 1, "", "selection_all"], [121, 2, 1, "", "selection_optional"], [121, 2, 1, "", "tag"]], "gammapy.estimators.EnergyDependentMorphologyEstimator": [[123, 2, 1, "", "config_parameters"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "estimate_energy_dependence"], [123, 3, 1, "", "run"], [123, 2, 1, "", "selection_optional"], [123, 2, 1, "", "tag"]], "gammapy.estimators.Estimator": [[124, 2, 1, "", "config_parameters"], [124, 3, 1, "", "copy"], [124, 3, 1, "", "run"], [124, 2, 1, "", "selection_optional"], [124, 2, 1, "", "tag"]], "gammapy.estimators.ExcessMapEstimator": [[125, 2, 1, "", "config_parameters"], [125, 3, 1, "", "copy"], [125, 2, 1, "", "correlation_radius"], [125, 3, 1, "", "estimate_excess_map"], [125, 3, 1, "", "estimate_exposure_reco_energy"], [125, 3, 1, "", "estimate_kernel"], [125, 3, 1, "", "estimate_mask_default"], [125, 3, 1, "", "run"], [125, 2, 1, "", "selection_optional"], [125, 2, 1, "", "tag"]], "gammapy.estimators.FluxMaps": [[126, 2, 1, "", "acceptance_off"], [126, 2, 1, "", "acceptance_on"], [126, 3, 1, "", "all_quantities"], [126, 2, 1, "", "alpha"], [126, 2, 1, "", "available_quantities"], [126, 3, 1, "", "copy"], [126, 2, 1, "", "counts"], [126, 2, 1, "", "dnde"], [126, 2, 1, "", "dnde_err"], [126, 2, 1, "", "dnde_errn"], [126, 2, 1, "", "dnde_errp"], [126, 2, 1, "", "dnde_ref"], [126, 2, 1, "", "dnde_scan_values"], [126, 2, 1, "", "dnde_ul"], [126, 2, 1, "", "e2dnde"], [126, 2, 1, "", "e2dnde_err"], [126, 2, 1, "", "e2dnde_errn"], [126, 2, 1, "", "e2dnde_errp"], [126, 2, 1, "", "e2dnde_ref"], [126, 2, 1, "", "e2dnde_ul"], [126, 2, 1, "", "eflux"], [126, 2, 1, "", "eflux_err"], [126, 2, 1, "", "eflux_errn"], [126, 2, 1, "", "eflux_errp"], [126, 2, 1, "", "eflux_ref"], [126, 2, 1, "", "eflux_ul"], [126, 2, 1, "", "energy_axis"], [126, 2, 1, "", "energy_max"], [126, 2, 1, "", "energy_min"], [126, 2, 1, "", "energy_ref"], [126, 2, 1, "", "filter_success_nan"], [126, 2, 1, "", "flux"], [126, 2, 1, "", "flux_err"], [126, 2, 1, "", "flux_errn"], [126, 2, 1, "", "flux_errp"], [126, 2, 1, "", "flux_ref"], [126, 2, 1, "", "flux_sensitivity"], [126, 2, 1, "", "flux_ul"], [126, 3, 1, "", "from_hdulist"], [126, 3, 1, "", "from_maps"], [126, 3, 1, "", "from_stack"], [126, 2, 1, "", "geom"], [126, 3, 1, "", "get_flux_points"], [126, 2, 1, "", "has_any_ts"], [126, 2, 1, "", "has_stat_profiles"], [126, 2, 1, "", "has_success"], [126, 2, 1, "", "has_ul"], [126, 2, 1, "", "is_convertible_to_flux_sed_type"], [126, 2, 1, "", "is_ul"], [126, 3, 1, "", "iter_by_axis"], [126, 2, 1, "", "n_dof"], [126, 2, 1, "", "n_sigma"], [126, 2, 1, "", "n_sigma_ul"], [126, 2, 1, "", "niter"], [126, 2, 1, "", "norm"], [126, 2, 1, "", "norm_err"], [126, 2, 1, "", "norm_errn"], [126, 2, 1, "", "norm_errp"], [126, 2, 1, "", "norm_sensitivity"], [126, 2, 1, "", "norm_ul"], [126, 2, 1, "", "npred"], [126, 2, 1, "", "npred_background"], [126, 2, 1, "", "npred_excess"], [126, 2, 1, "", "npred_excess_err"], [126, 2, 1, "", "npred_excess_errn"], [126, 2, 1, "", "npred_excess_errp"], [126, 2, 1, "", "npred_excess_ref"], [126, 2, 1, "", "npred_excess_ul"], [126, 3, 1, "", "read"], [126, 2, 1, "", "reference_model"], [126, 2, 1, "", "reference_model_default"], [126, 2, 1, "", "reference_spectral_model"], [126, 2, 1, "", "sed_type_init"], [126, 2, 1, "", "sed_type_plot_default"], [126, 3, 1, "", "slice_by_coord"], [126, 3, 1, "", "slice_by_energy"], [126, 3, 1, "", "slice_by_idx"], [126, 3, 1, "", "slice_by_time"], [126, 2, 1, "", "sqrt_ts"], [126, 2, 1, "", "sqrt_ts_threshold_ul"], [126, 2, 1, "", "stat"], [126, 2, 1, "", "stat_null"], [126, 2, 1, "", "stat_scan"], [126, 2, 1, "", "success"], [126, 3, 1, "", "to_hdulist"], [126, 3, 1, "", "to_maps"], [126, 2, 1, "", "ts"], [126, 2, 1, "", "ts_scan"], [126, 3, 1, "", "write"]], "gammapy.estimators.FluxMetaData": [[127, 3, 1, "", "construct"], [127, 3, 1, "", "copy"], [127, 3, 1, "", "dict"], [127, 3, 1, "", "from_header"], [127, 3, 1, "", "from_orm"], [127, 3, 1, "", "json"], [127, 2, 1, "", "model_computed_fields"], [127, 2, 1, "", "model_config"], [127, 3, 1, "", "model_construct"], [127, 3, 1, "", "model_copy"], [127, 3, 1, "", "model_dump"], [127, 3, 1, "", "model_dump_json"], [127, 2, 1, "", "model_extra"], [127, 2, 1, "", "model_fields"], [127, 2, 1, "", "model_fields_set"], [127, 3, 1, "", "model_json_schema"], [127, 3, 1, "", "model_parametrized_name"], [127, 3, 1, "", "model_post_init"], [127, 3, 1, "", "model_rebuild"], [127, 3, 1, "", "model_validate"], [127, 3, 1, "", "model_validate_json"], [127, 3, 1, "", "model_validate_strings"], [127, 3, 1, "", "parse_file"], [127, 3, 1, "", "parse_obj"], [127, 3, 1, "", "parse_raw"], [127, 3, 1, "", "schema"], [127, 3, 1, "", "schema_json"], [127, 2, 1, "", "tag"], [127, 3, 1, "", "to_header"], [127, 3, 1, "", "to_yaml"], [127, 3, 1, "", "update_forward_refs"], [127, 3, 1, "", "validate"]], "gammapy.estimators.FluxPoints": [[128, 2, 1, "", "acceptance_off"], [128, 2, 1, "", "acceptance_on"], [128, 3, 1, "", "all_quantities"], [128, 2, 1, "", "alpha"], [128, 2, 1, "", "available_quantities"], [128, 3, 1, "", "copy"], [128, 2, 1, "", "counts"], [128, 2, 1, "", "dnde"], [128, 2, 1, "", "dnde_err"], [128, 2, 1, "", "dnde_errn"], [128, 2, 1, "", "dnde_errp"], [128, 2, 1, "", "dnde_ref"], [128, 2, 1, "", "dnde_scan_values"], [128, 2, 1, "", "dnde_ul"], [128, 2, 1, "", "e2dnde"], [128, 2, 1, "", "e2dnde_err"], [128, 2, 1, "", "e2dnde_errn"], [128, 2, 1, "", "e2dnde_errp"], [128, 2, 1, "", "e2dnde_ref"], [128, 2, 1, "", "e2dnde_ul"], [128, 2, 1, "", "eflux"], [128, 2, 1, "", "eflux_err"], [128, 2, 1, "", "eflux_errn"], [128, 2, 1, "", "eflux_errp"], [128, 2, 1, "", "eflux_ref"], [128, 2, 1, "", "eflux_ul"], [128, 2, 1, "", "energy_axis"], [128, 2, 1, "", "energy_max"], [128, 2, 1, "", "energy_min"], [128, 2, 1, "", "energy_ref"], [128, 2, 1, "", "filter_success_nan"], [128, 2, 1, "", "flux"], [128, 2, 1, "", "flux_err"], [128, 2, 1, "", "flux_errn"], [128, 2, 1, "", "flux_errp"], [128, 2, 1, "", "flux_ref"], [128, 2, 1, "", "flux_sensitivity"], [128, 2, 1, "", "flux_ul"], [128, 3, 1, "", "from_hdulist"], [128, 3, 1, "", "from_maps"], [128, 3, 1, "", "from_stack"], [128, 3, 1, "", "from_table"], [128, 2, 1, "", "geom"], [128, 3, 1, "", "get_flux_points"], [128, 2, 1, "", "has_any_ts"], [128, 2, 1, "", "has_stat_profiles"], [128, 2, 1, "", "has_success"], [128, 2, 1, "", "has_ul"], [128, 2, 1, "", "is_convertible_to_flux_sed_type"], [128, 2, 1, "", "is_ul"], [128, 3, 1, "", "iter_by_axis"], [128, 2, 1, "", "n_dof"], [128, 2, 1, "", "n_sigma"], [128, 2, 1, "", "n_sigma_ul"], [128, 2, 1, "", "niter"], [128, 2, 1, "", "norm"], [128, 2, 1, "", "norm_err"], [128, 2, 1, "", "norm_errn"], [128, 2, 1, "", "norm_errp"], [128, 2, 1, "", "norm_sensitivity"], [128, 2, 1, "", "norm_ul"], [128, 2, 1, "", "npred"], [128, 2, 1, "", "npred_background"], [128, 2, 1, "", "npred_excess"], [128, 2, 1, "", "npred_excess_err"], [128, 2, 1, "", "npred_excess_errn"], [128, 2, 1, "", "npred_excess_errp"], [128, 2, 1, "", "npred_excess_ref"], [128, 2, 1, "", "npred_excess_ul"], [128, 3, 1, "", "plot"], [128, 3, 1, "", "plot_ts_profiles"], [128, 3, 1, "", "read"], [128, 3, 1, "", "recompute_ul"], [128, 2, 1, "", "reference_model"], [128, 2, 1, "", "reference_model_default"], [128, 2, 1, "", "reference_spectral_model"], [128, 3, 1, "", "resample_axis"], [128, 2, 1, "", "sed_type_init"], [128, 2, 1, "", "sed_type_plot_default"], [128, 3, 1, "", "slice_by_coord"], [128, 3, 1, "", "slice_by_energy"], [128, 3, 1, "", "slice_by_idx"], [128, 3, 1, "", "slice_by_time"], [128, 2, 1, "", "sqrt_ts"], [128, 2, 1, "", "sqrt_ts_threshold_ul"], [128, 2, 1, "", "stat"], [128, 2, 1, "", "stat_null"], [128, 2, 1, "", "stat_scan"], [128, 2, 1, "", "success"], [128, 3, 1, "", "to_hdulist"], [128, 3, 1, "", "to_maps"], [128, 3, 1, "", "to_table"], [128, 2, 1, "", "ts"], [128, 2, 1, "", "ts_scan"], [128, 3, 1, "", "write"]], "gammapy.estimators.FluxPointsEstimator": [[129, 2, 1, "", "config_parameters"], [129, 3, 1, "", "copy"], [129, 3, 1, "", "estimate_best_fit"], [129, 3, 1, "", "estimate_counts"], [129, 3, 1, "", "estimate_errn_errp"], [129, 3, 1, "", "estimate_flux_point"], [129, 3, 1, "", "estimate_npred"], [129, 3, 1, "", "estimate_npred_excess"], [129, 3, 1, "", "estimate_scan"], [129, 3, 1, "", "estimate_sensitivity"], [129, 3, 1, "", "estimate_ts"], [129, 3, 1, "", "estimate_ul"], [129, 3, 1, "", "get_scale_model"], [129, 2, 1, "", "n_jobs"], [129, 2, 1, "", "parallel_backend"], [129, 3, 1, "", "run"], [129, 2, 1, "", "selection_optional"], [129, 2, 1, "", "tag"]], "gammapy.estimators.FluxProfileEstimator": [[130, 2, 1, "", "config_parameters"], [130, 3, 1, "", "copy"], [130, 3, 1, "", "estimate_best_fit"], [130, 3, 1, "", "estimate_counts"], [130, 3, 1, "", "estimate_errn_errp"], [130, 3, 1, "", "estimate_flux_point"], [130, 3, 1, "", "estimate_npred"], [130, 3, 1, "", "estimate_npred_excess"], [130, 3, 1, "", "estimate_scan"], [130, 3, 1, "", "estimate_sensitivity"], [130, 3, 1, "", "estimate_ts"], [130, 3, 1, "", "estimate_ul"], [130, 3, 1, "", "get_scale_model"], [130, 2, 1, "", "n_jobs"], [130, 2, 1, "", "parallel_backend"], [130, 2, 1, "", "projected_distance_axis"], [130, 3, 1, "", "run"], [130, 2, 1, "", "selection_optional"], [130, 2, 1, "", "tag"]], "gammapy.estimators.ImageProfile": [[131, 3, 1, "", "normalize"], [131, 3, 1, "", "peek"], [131, 3, 1, "", "plot"], [131, 3, 1, "", "plot_err"], [131, 2, 1, "", "profile"], [131, 2, 1, "", "profile_err"], [131, 3, 1, "", "smooth"], [131, 2, 1, "", "x_max"], [131, 2, 1, "", "x_min"], [131, 2, 1, "", "x_ref"]], "gammapy.estimators.ImageProfileEstimator": [[132, 2, 1, "", "config_parameters"], [132, 3, 1, "", "copy"], [132, 3, 1, "", "run"], [132, 2, 1, "", "selection_optional"], [132, 2, 1, "", "tag"]], "gammapy.estimators.LightCurveEstimator": [[133, 2, 1, "", "config_parameters"], [133, 3, 1, "", "copy"], [133, 3, 1, "", "estimate_best_fit"], [133, 3, 1, "", "estimate_counts"], [133, 3, 1, "", "estimate_errn_errp"], [133, 3, 1, "", "estimate_flux_point"], [133, 3, 1, "", "estimate_npred"], [133, 3, 1, "", "estimate_npred_excess"], [133, 3, 1, "", "estimate_scan"], [133, 3, 1, "", "estimate_sensitivity"], [133, 3, 1, "", "estimate_time_bin_flux"], [133, 3, 1, "", "estimate_ts"], [133, 3, 1, "", "estimate_ul"], [133, 3, 1, "", "expand_map"], [133, 3, 1, "", "get_scale_model"], [133, 2, 1, "", "n_jobs"], [133, 2, 1, "", "parallel_backend"], [133, 3, 1, "", "run"], [133, 2, 1, "", "selection_optional"], [133, 2, 1, "", "tag"]], "gammapy.estimators.ParameterEstimator": [[134, 2, 1, "", "config_parameters"], [134, 3, 1, "", "copy"], [134, 3, 1, "", "estimate_best_fit"], [134, 3, 1, "", "estimate_counts"], [134, 3, 1, "", "estimate_errn_errp"], [134, 3, 1, "", "estimate_npred"], [134, 3, 1, "", "estimate_scan"], [134, 3, 1, "", "estimate_sensitivity"], [134, 3, 1, "", "estimate_ts"], [134, 3, 1, "", "estimate_ul"], [134, 3, 1, "", "run"], [134, 2, 1, "", "selection_optional"], [134, 2, 1, "", "tag"]], "gammapy.estimators.ParameterSensitivityEstimator": [[135, 3, 1, "", "parameter_matching_significance"], [135, 3, 1, "", "run"], [135, 2, 1, "", "tag"]], "gammapy.estimators.SensitivityEstimator": [[136, 2, 1, "", "config_parameters"], [136, 3, 1, "", "copy"], [136, 3, 1, "", "estimate_min_e2dnde"], [136, 3, 1, "", "estimate_min_excess"], [136, 3, 1, "", "run"], [136, 2, 1, "", "selection_optional"], [136, 2, 1, "", "tag"]], "gammapy.estimators.TSMapEstimator": [[137, 2, 1, "", "config_parameters"], [137, 3, 1, "", "copy"], [137, 3, 1, "", "estimate_fit_input_maps"], [137, 3, 1, "", "estimate_flux_default"], [137, 3, 1, "", "estimate_flux_map"], [137, 3, 1, "", "estimate_kernel"], [137, 3, 1, "", "estimate_mask_default"], [137, 3, 1, "", "estimate_pad_width"], [137, 2, 1, "", "n_jobs"], [137, 2, 1, "", "parallel_backend"], [137, 3, 1, "", "run"], [137, 2, 1, "", "selection_all"], [137, 2, 1, "", "selection_optional"], [137, 2, 1, "", "tag"]], "gammapy.estimators.utils": [[138, 4, 1, "", "combine_flux_maps"], [139, 4, 1, "", "combine_significance_maps"], [140, 4, 1, "", "compute_lightcurve_discrete_correlation"], [141, 4, 1, "", "compute_lightcurve_doublingtime"], [142, 4, 1, "", "compute_lightcurve_fpp"], [143, 4, 1, "", "compute_lightcurve_fvar"], [144, 4, 1, "", "estimate_exposure_reco_energy"], [145, 4, 1, "", "find_peaks"], [146, 4, 1, "", "find_peaks_in_flux_map"], [147, 4, 1, "", "get_combined_flux_maps"], [148, 4, 1, "", "get_combined_significance_maps"], [149, 4, 1, "", "get_rebinned_axis"], [150, 4, 1, "", "resample_energy_edges"]], "gammapy.irf": [[151, 1, 1, "", "Background2D"], [152, 1, 1, "", "Background3D"], [153, 1, 1, "", "BackgroundIRF"], [154, 1, 1, "", "EDispKernel"], [155, 1, 1, "", "EDispKernelMap"], [156, 1, 1, "", "EDispMap"], [157, 1, 1, "", "EffectiveAreaTable2D"], [158, 1, 1, "", "EnergyDependentMultiGaussPSF"], [159, 1, 1, "", "EnergyDispersion2D"], [160, 1, 1, "", "FoVAlignment"], [161, 1, 1, "", "IRF"], [162, 1, 1, "", "IRFMap"], [163, 5, 1, "", "IRF_REGISTRY"], [164, 1, 1, "", "PSF3D"], [165, 1, 1, "", "PSFKernel"], [166, 1, 1, "", "PSFKing"], [167, 1, 1, "", "PSFMap"], [168, 1, 1, "", "ParametricPSF"], [169, 1, 1, "", "RadMax2D"], [170, 1, 1, "", "RecoPSFMap"], [171, 4, 1, "", "load_irf_dict_from_file"]], "gammapy.irf.Background2D": [[151, 2, 1, "", "axes"], [151, 3, 1, "", "cumsum"], [151, 2, 1, "", "data"], [151, 2, 1, "", "default_interp_kwargs"], [151, 2, 1, "", "default_unit"], [151, 3, 1, "", "evaluate"], [151, 2, 1, "", "fov_alignment"], [151, 3, 1, "", "from_hdulist"], [151, 3, 1, "", "from_table"], [151, 2, 1, "", "has_offset_axis"], [151, 3, 1, "", "integral"], [151, 3, 1, "", "integrate_log_log"], [151, 3, 1, "", "interp_missing_data"], [151, 3, 1, "", "is_allclose"], [151, 2, 1, "", "is_pointlike"], [151, 3, 1, "", "normalize"], [151, 3, 1, "", "pad"], [151, 3, 1, "", "peek"], [151, 3, 1, "", "plot"], [151, 3, 1, "", "plot_at_energy"], [151, 3, 1, "", "plot_energy_dependence"], [151, 3, 1, "", "plot_offset_dependence"], [151, 3, 1, "", "plot_spectrum"], [151, 2, 1, "", "quantity"], [151, 3, 1, "", "read"], [151, 2, 1, "", "required_axes"], [151, 3, 1, "", "slice_by_idx"], [151, 2, 1, "", "tag"], [151, 3, 1, "", "to_3d"], [151, 3, 1, "", "to_hdulist"], [151, 3, 1, "", "to_table"], [151, 3, 1, "", "to_table_hdu"], [151, 3, 1, "", "to_unit"], [151, 2, 1, "", "unit"], [151, 3, 1, "", "write"]], "gammapy.irf.Background3D": [[152, 2, 1, "", "axes"], [152, 3, 1, "", "cumsum"], [152, 2, 1, "", "data"], [152, 2, 1, "", "default_interp_kwargs"], [152, 2, 1, "", "default_unit"], [152, 3, 1, "", "evaluate"], [152, 2, 1, "", "fov_alignment"], [152, 3, 1, "", "from_hdulist"], [152, 3, 1, "", "from_table"], [152, 2, 1, "", "has_offset_axis"], [152, 3, 1, "", "integral"], [152, 3, 1, "", "integrate_log_log"], [152, 3, 1, "", "interp_missing_data"], [152, 3, 1, "", "is_allclose"], [152, 2, 1, "", "is_pointlike"], [152, 3, 1, "", "normalize"], [152, 3, 1, "", "pad"], [152, 3, 1, "", "peek"], [152, 3, 1, "", "plot_at_energy"], [152, 2, 1, "", "quantity"], [152, 3, 1, "", "read"], [152, 2, 1, "", "required_axes"], [152, 3, 1, "", "slice_by_idx"], [152, 2, 1, "", "tag"], [152, 3, 1, "", "to_2d"], [152, 3, 1, "", "to_hdulist"], [152, 3, 1, "", "to_table"], [152, 3, 1, "", "to_table_hdu"], [152, 3, 1, "", "to_unit"], [152, 2, 1, "", "unit"], [152, 3, 1, "", "write"]], "gammapy.irf.BackgroundIRF": [[153, 2, 1, "", "axes"], [153, 3, 1, "", "cumsum"], [153, 2, 1, "", "data"], [153, 2, 1, "", "default_interp_kwargs"], [153, 3, 1, "", "evaluate"], [153, 2, 1, "", "fov_alignment"], [153, 3, 1, "", "from_hdulist"], [153, 3, 1, "", "from_table"], [153, 2, 1, "", "has_offset_axis"], [153, 3, 1, "", "integral"], [153, 3, 1, "", "integrate_log_log"], [153, 3, 1, "", "interp_missing_data"], [153, 3, 1, "", "is_allclose"], [153, 2, 1, "", "is_pointlike"], [153, 3, 1, "", "normalize"], [153, 3, 1, "", "pad"], [153, 2, 1, "", "quantity"], [153, 3, 1, "", "read"], [153, 2, 1, "", "required_axes"], [153, 3, 1, "", "slice_by_idx"], [153, 2, 1, "", "tag"], [153, 3, 1, "", "to_hdulist"], [153, 3, 1, "", "to_table"], [153, 3, 1, "", "to_table_hdu"], [153, 3, 1, "", "to_unit"], [153, 2, 1, "", "unit"], [153, 3, 1, "", "write"]], "gammapy.irf.EDispKernel": [[154, 2, 1, "", "axes"], [154, 3, 1, "", "cumsum"], [154, 2, 1, "", "data"], [154, 2, 1, "", "default_interp_kwargs"], [154, 3, 1, "", "evaluate"], [154, 2, 1, "", "fov_alignment"], [154, 3, 1, "", "from_diagonal_response"], [154, 3, 1, "", "from_gauss"], [154, 3, 1, "", "from_hdulist"], [154, 3, 1, "", "from_table"], [154, 3, 1, "", "get_bias"], [154, 3, 1, "", "get_bias_energy"], [154, 3, 1, "", "get_mean"], [154, 3, 1, "", "get_resolution"], [154, 2, 1, "", "has_offset_axis"], [154, 3, 1, "", "integral"], [154, 3, 1, "", "integrate_log_log"], [154, 3, 1, "", "interp_missing_data"], [154, 3, 1, "", "is_allclose"], [154, 2, 1, "", "is_pointlike"], [154, 3, 1, "", "normalize"], [154, 3, 1, "", "pad"], [154, 3, 1, "", "pdf_in_safe_range"], [154, 2, 1, "", "pdf_matrix"], [154, 3, 1, "", "peek"], [154, 3, 1, "", "plot_bias"], [154, 3, 1, "", "plot_matrix"], [154, 2, 1, "", "quantity"], [154, 3, 1, "", "read"], [154, 2, 1, "", "required_axes"], [154, 3, 1, "", "slice_by_idx"], [154, 2, 1, "", "tag"], [154, 3, 1, "", "to_hdulist"], [154, 3, 1, "", "to_image"], [154, 3, 1, "", "to_table"], [154, 3, 1, "", "to_table_hdu"], [154, 3, 1, "", "to_unit"], [154, 2, 1, "", "unit"], [154, 3, 1, "", "write"]], "gammapy.irf.EDispKernelMap": [[155, 3, 1, "", "copy"], [155, 3, 1, "", "cutout"], [155, 3, 1, "", "downsample"], [155, 2, 1, "", "edisp_map"], [155, 3, 1, "", "from_diagonal_response"], [155, 3, 1, "", "from_edisp_kernel"], [155, 3, 1, "", "from_gauss"], [155, 3, 1, "", "from_geom"], [155, 3, 1, "", "from_hdulist"], [155, 3, 1, "", "get_edisp_kernel"], [155, 2, 1, "", "has_single_spatial_bin"], [155, 2, 1, "", "mask_safe_image"], [155, 3, 1, "", "peek"], [155, 3, 1, "", "read"], [155, 2, 1, "", "required_axes"], [155, 3, 1, "", "resample_energy_axis"], [155, 3, 1, "", "slice_by_idx"], [155, 3, 1, "", "stack"], [155, 2, 1, "", "tag"], [155, 3, 1, "", "to_hdulist"], [155, 3, 1, "", "to_image"], [155, 3, 1, "", "to_region_nd_map"], [155, 3, 1, "", "write"]], "gammapy.irf.EDispMap": [[156, 3, 1, "", "copy"], [156, 3, 1, "", "cutout"], [156, 3, 1, "", "downsample"], [156, 2, 1, "", "edisp_map"], [156, 3, 1, "", "from_diagonal_response"], [156, 3, 1, "", "from_geom"], [156, 3, 1, "", "from_hdulist"], [156, 3, 1, "", "get_edisp_kernel"], [156, 2, 1, "", "has_single_spatial_bin"], [156, 2, 1, "", "mask_safe_image"], [156, 3, 1, "", "normalize"], [156, 3, 1, "", "peek"], [156, 3, 1, "", "read"], [156, 2, 1, "", "required_axes"], [156, 3, 1, "", "sample_coord"], [156, 3, 1, "", "slice_by_idx"], [156, 3, 1, "", "stack"], [156, 2, 1, "", "tag"], [156, 3, 1, "", "to_edisp_kernel_map"], [156, 3, 1, "", "to_hdulist"], [156, 3, 1, "", "to_region_nd_map"], [156, 3, 1, "", "write"]], "gammapy.irf.EffectiveAreaTable2D": [[157, 2, 1, "", "axes"], [157, 3, 1, "", "cumsum"], [157, 2, 1, "", "data"], [157, 2, 1, "", "default_interp_kwargs"], [157, 2, 1, "", "default_unit"], [157, 3, 1, "", "evaluate"], [157, 2, 1, "", "fov_alignment"], [157, 3, 1, "", "from_hdulist"], [157, 3, 1, "", "from_parametrization"], [157, 3, 1, "", "from_table"], [157, 2, 1, "", "has_offset_axis"], [157, 3, 1, "", "integral"], [157, 3, 1, "", "integrate_log_log"], [157, 3, 1, "", "interp_missing_data"], [157, 3, 1, "", "is_allclose"], [157, 2, 1, "", "is_pointlike"], [157, 3, 1, "", "normalize"], [157, 3, 1, "", "pad"], [157, 3, 1, "", "peek"], [157, 3, 1, "", "plot"], [157, 3, 1, "", "plot_energy_dependence"], [157, 3, 1, "", "plot_offset_dependence"], [157, 2, 1, "", "quantity"], [157, 3, 1, "", "read"], [157, 2, 1, "", "required_axes"], [157, 3, 1, "", "slice_by_idx"], [157, 2, 1, "", "tag"], [157, 3, 1, "", "to_hdulist"], [157, 3, 1, "", "to_table"], [157, 3, 1, "", "to_table_hdu"], [157, 3, 1, "", "to_unit"], [157, 2, 1, "", "unit"], [157, 3, 1, "", "write"]], "gammapy.irf.EnergyDependentMultiGaussPSF": [[158, 2, 1, "", "axes"], [158, 3, 1, "", "containment"], [158, 3, 1, "", "containment_radius"], [158, 3, 1, "", "cumsum"], [158, 2, 1, "", "data"], [158, 2, 1, "", "default_interp_kwargs"], [158, 3, 1, "", "evaluate"], [158, 3, 1, "", "evaluate_containment"], [158, 3, 1, "", "evaluate_direct"], [158, 3, 1, "", "evaluate_parameters"], [158, 2, 1, "", "fov_alignment"], [158, 3, 1, "", "from_hdulist"], [158, 3, 1, "", "from_table"], [158, 2, 1, "", "has_offset_axis"], [158, 3, 1, "", "info"], [158, 3, 1, "", "integral"], [158, 3, 1, "", "integrate_log_log"], [158, 3, 1, "", "interp_missing_data"], [158, 3, 1, "", "is_allclose"], [158, 2, 1, "", "is_pointlike"], [158, 3, 1, "", "normalize"], [158, 3, 1, "", "pad"], [158, 3, 1, "", "peek"], [158, 3, 1, "", "plot_containment_radius"], [158, 3, 1, "", "plot_containment_radius_vs_energy"], [158, 3, 1, "", "plot_psf_vs_rad"], [158, 2, 1, "", "quantity"], [158, 3, 1, "", "read"], [158, 2, 1, "", "required_axes"], [158, 2, 1, "", "required_parameters"], [158, 3, 1, "", "slice_by_idx"], [158, 2, 1, "", "tag"], [158, 3, 1, "", "to_hdulist"], [158, 3, 1, "", "to_psf3d"], [158, 3, 1, "", "to_table"], [158, 3, 1, "", "to_table_hdu"], [158, 3, 1, "", "to_unit"], [158, 2, 1, "", "unit"], [158, 3, 1, "", "write"]], "gammapy.irf.EnergyDispersion2D": [[159, 2, 1, "", "axes"], [159, 3, 1, "", "cumsum"], [159, 2, 1, "", "data"], [159, 2, 1, "", "default_interp_kwargs"], [159, 2, 1, "", "default_unit"], [159, 3, 1, "", "evaluate"], [159, 2, 1, "", "fov_alignment"], [159, 3, 1, "", "from_gauss"], [159, 3, 1, "", "from_hdulist"], [159, 3, 1, "", "from_table"], [159, 2, 1, "", "has_offset_axis"], [159, 3, 1, "", "integral"], [159, 3, 1, "", "integrate_log_log"], [159, 3, 1, "", "interp_missing_data"], [159, 3, 1, "", "is_allclose"], [159, 2, 1, "", "is_pointlike"], [159, 3, 1, "", "normalize"], [159, 3, 1, "", "pad"], [159, 3, 1, "", "peek"], [159, 3, 1, "", "plot_bias"], [159, 3, 1, "", "plot_migration"], [159, 2, 1, "", "quantity"], [159, 3, 1, "", "read"], [159, 2, 1, "", "required_axes"], [159, 3, 1, "", "slice_by_idx"], [159, 2, 1, "", "tag"], [159, 3, 1, "", "to_edisp_kernel"], [159, 3, 1, "", "to_hdulist"], [159, 3, 1, "", "to_table"], [159, 3, 1, "", "to_table_hdu"], [159, 3, 1, "", "to_unit"], [159, 2, 1, "", "unit"], [159, 3, 1, "", "write"]], "gammapy.irf.FoVAlignment": [[160, 2, 1, "", "ALTAZ"], [160, 2, 1, "", "RADEC"], [160, 2, 1, "", "REVERSE_LON_RADEC"]], "gammapy.irf.IRF": [[161, 2, 1, "", "axes"], [161, 3, 1, "", "cumsum"], [161, 2, 1, "", "data"], [161, 2, 1, "", "default_interp_kwargs"], [161, 3, 1, "", "evaluate"], [161, 2, 1, "", "fov_alignment"], [161, 3, 1, "", "from_hdulist"], [161, 3, 1, "", "from_table"], [161, 2, 1, "", "has_offset_axis"], [161, 3, 1, "", "integral"], [161, 3, 1, "", "integrate_log_log"], [161, 3, 1, "", "interp_missing_data"], [161, 3, 1, "", "is_allclose"], [161, 2, 1, "", "is_pointlike"], [161, 3, 1, "", "normalize"], [161, 3, 1, "", "pad"], [161, 2, 1, "", "quantity"], [161, 3, 1, "", "read"], [161, 2, 1, "", "required_axes"], [161, 3, 1, "", "slice_by_idx"], [161, 2, 1, "", "tag"], [161, 3, 1, "", "to_hdulist"], [161, 3, 1, "", "to_table"], [161, 3, 1, "", "to_table_hdu"], [161, 3, 1, "", "to_unit"], [161, 2, 1, "", "unit"], [161, 3, 1, "", "write"]], "gammapy.irf.IRFMap": [[162, 3, 1, "", "copy"], [162, 3, 1, "", "cutout"], [162, 3, 1, "", "downsample"], [162, 3, 1, "", "from_hdulist"], [162, 2, 1, "", "has_single_spatial_bin"], [162, 2, 1, "", "mask_safe_image"], [162, 3, 1, "", "read"], [162, 2, 1, "", "required_axes"], [162, 3, 1, "", "slice_by_idx"], [162, 3, 1, "", "stack"], [162, 2, 1, "", "tag"], [162, 3, 1, "", "to_hdulist"], [162, 3, 1, "", "to_region_nd_map"], [162, 3, 1, "", "write"]], "gammapy.irf.PSF3D": [[164, 2, 1, "", "axes"], [164, 3, 1, "", "containment"], [164, 3, 1, "", "containment_radius"], [164, 3, 1, "", "cumsum"], [164, 2, 1, "", "data"], [164, 2, 1, "", "default_interp_kwargs"], [164, 2, 1, "", "default_unit"], [164, 3, 1, "", "evaluate"], [164, 2, 1, "", "fov_alignment"], [164, 3, 1, "", "from_hdulist"], [164, 3, 1, "", "from_table"], [164, 2, 1, "", "has_offset_axis"], [164, 3, 1, "", "info"], [164, 3, 1, "", "integral"], [164, 3, 1, "", "integrate_log_log"], [164, 3, 1, "", "interp_missing_data"], [164, 3, 1, "", "is_allclose"], [164, 2, 1, "", "is_pointlike"], [164, 3, 1, "", "normalize"], [164, 3, 1, "", "pad"], [164, 3, 1, "", "peek"], [164, 3, 1, "", "plot_containment_radius"], [164, 3, 1, "", "plot_containment_radius_vs_energy"], [164, 3, 1, "", "plot_psf_vs_rad"], [164, 2, 1, "", "quantity"], [164, 3, 1, "", "read"], [164, 2, 1, "", "required_axes"], [164, 3, 1, "", "slice_by_idx"], [164, 2, 1, "", "tag"], [164, 3, 1, "", "to_hdulist"], [164, 3, 1, "", "to_table"], [164, 3, 1, "", "to_table_hdu"], [164, 3, 1, "", "to_unit"], [164, 2, 1, "", "unit"], [164, 3, 1, "", "write"]], "gammapy.irf.PSFKernel": [[165, 2, 1, "", "data"], [165, 3, 1, "", "from_gauss"], [165, 3, 1, "", "from_spatial_model"], [165, 3, 1, "", "normalize"], [165, 3, 1, "", "peek"], [165, 3, 1, "", "plot_kernel"], [165, 2, 1, "", "psf_kernel_map"], [165, 3, 1, "", "read"], [165, 3, 1, "", "slice_by_idx"], [165, 3, 1, "", "to_image"], [165, 3, 1, "", "write"]], "gammapy.irf.PSFKing": [[166, 2, 1, "", "axes"], [166, 3, 1, "", "containment"], [166, 3, 1, "", "containment_radius"], [166, 3, 1, "", "cumsum"], [166, 2, 1, "", "data"], [166, 2, 1, "", "default_interp_kwargs"], [166, 3, 1, "", "evaluate"], [166, 3, 1, "", "evaluate_containment"], [166, 3, 1, "", "evaluate_direct"], [166, 3, 1, "", "evaluate_parameters"], [166, 2, 1, "", "fov_alignment"], [166, 3, 1, "", "from_hdulist"], [166, 3, 1, "", "from_table"], [166, 2, 1, "", "has_offset_axis"], [166, 3, 1, "", "info"], [166, 3, 1, "", "integral"], [166, 3, 1, "", "integrate_log_log"], [166, 3, 1, "", "interp_missing_data"], [166, 3, 1, "", "is_allclose"], [166, 2, 1, "", "is_pointlike"], [166, 3, 1, "", "normalize"], [166, 3, 1, "", "pad"], [166, 3, 1, "", "peek"], [166, 3, 1, "", "plot_containment_radius"], [166, 3, 1, "", "plot_containment_radius_vs_energy"], [166, 3, 1, "", "plot_psf_vs_rad"], [166, 2, 1, "", "quantity"], [166, 3, 1, "", "read"], [166, 2, 1, "", "required_axes"], [166, 2, 1, "", "required_parameters"], [166, 3, 1, "", "slice_by_idx"], [166, 2, 1, "", "tag"], [166, 3, 1, "", "to_hdulist"], [166, 3, 1, "", "to_psf3d"], [166, 3, 1, "", "to_table"], [166, 3, 1, "", "to_table_hdu"], [166, 3, 1, "", "to_unit"], [166, 2, 1, "", "unit"], [166, 3, 1, "", "write"]], "gammapy.irf.PSFMap": [[167, 3, 1, "", "containment"], [167, 3, 1, "", "containment_radius"], [167, 3, 1, "", "containment_radius_map"], [167, 3, 1, "", "copy"], [167, 3, 1, "", "cutout"], [167, 3, 1, "", "downsample"], [167, 2, 1, "", "energy_name"], [167, 3, 1, "", "from_gauss"], [167, 3, 1, "", "from_geom"], [167, 3, 1, "", "from_hdulist"], [167, 3, 1, "", "get_psf_kernel"], [167, 2, 1, "", "has_single_spatial_bin"], [167, 2, 1, "", "mask_safe_image"], [167, 3, 1, "", "normalize"], [167, 3, 1, "", "peek"], [167, 3, 1, "", "plot_containment_radius_vs_energy"], [167, 3, 1, "", "plot_psf_vs_rad"], [167, 2, 1, "", "psf_map"], [167, 3, 1, "", "read"], [167, 2, 1, "", "required_axes"], [167, 3, 1, "", "sample_coord"], [167, 3, 1, "", "slice_by_idx"], [167, 3, 1, "", "stack"], [167, 2, 1, "", "tag"], [167, 3, 1, "", "to_hdulist"], [167, 3, 1, "", "to_image"], [167, 3, 1, "", "to_region_nd_map"], [167, 3, 1, "", "write"]], "gammapy.irf.ParametricPSF": [[168, 2, 1, "", "axes"], [168, 3, 1, "", "containment"], [168, 3, 1, "", "containment_radius"], [168, 3, 1, "", "cumsum"], [168, 2, 1, "", "data"], [168, 2, 1, "", "default_interp_kwargs"], [168, 3, 1, "", "evaluate"], [168, 3, 1, "", "evaluate_containment"], [168, 3, 1, "", "evaluate_direct"], [168, 3, 1, "", "evaluate_parameters"], [168, 2, 1, "", "fov_alignment"], [168, 3, 1, "", "from_hdulist"], [168, 3, 1, "", "from_table"], [168, 2, 1, "", "has_offset_axis"], [168, 3, 1, "", "info"], [168, 3, 1, "", "integral"], [168, 3, 1, "", "integrate_log_log"], [168, 3, 1, "", "interp_missing_data"], [168, 3, 1, "", "is_allclose"], [168, 2, 1, "", "is_pointlike"], [168, 3, 1, "", "normalize"], [168, 3, 1, "", "pad"], [168, 3, 1, "", "peek"], [168, 3, 1, "", "plot_containment_radius"], [168, 3, 1, "", "plot_containment_radius_vs_energy"], [168, 3, 1, "", "plot_psf_vs_rad"], [168, 2, 1, "", "quantity"], [168, 3, 1, "", "read"], [168, 2, 1, "", "required_axes"], [168, 2, 1, "", "required_parameters"], [168, 3, 1, "", "slice_by_idx"], [168, 2, 1, "", "tag"], [168, 3, 1, "", "to_hdulist"], [168, 3, 1, "", "to_psf3d"], [168, 3, 1, "", "to_table"], [168, 3, 1, "", "to_table_hdu"], [168, 3, 1, "", "to_unit"], [168, 2, 1, "", "unit"], [168, 3, 1, "", "write"]], "gammapy.irf.RadMax2D": [[169, 2, 1, "", "axes"], [169, 3, 1, "", "cumsum"], [169, 2, 1, "", "data"], [169, 2, 1, "", "default_interp_kwargs"], [169, 2, 1, "", "default_unit"], [169, 3, 1, "", "evaluate"], [169, 2, 1, "", "fov_alignment"], [169, 3, 1, "", "from_hdulist"], [169, 3, 1, "", "from_irf"], [169, 3, 1, "", "from_table"], [169, 2, 1, "", "has_offset_axis"], [169, 3, 1, "", "integral"], [169, 3, 1, "", "integrate_log_log"], [169, 3, 1, "", "interp_missing_data"], [169, 3, 1, "", "is_allclose"], [169, 2, 1, "", "is_fixed_rad_max"], [169, 2, 1, "", "is_pointlike"], [169, 3, 1, "", "normalize"], [169, 3, 1, "", "pad"], [169, 3, 1, "", "plot_rad_max_vs_energy"], [169, 2, 1, "", "quantity"], [169, 3, 1, "", "read"], [169, 2, 1, "", "required_axes"], [169, 3, 1, "", "slice_by_idx"], [169, 2, 1, "", "tag"], [169, 3, 1, "", "to_hdulist"], [169, 3, 1, "", "to_table"], [169, 3, 1, "", "to_table_hdu"], [169, 3, 1, "", "to_unit"], [169, 2, 1, "", "unit"], [169, 3, 1, "", "write"]], "gammapy.irf.RecoPSFMap": [[170, 3, 1, "", "containment"], [170, 3, 1, "", "containment_radius"], [170, 3, 1, "", "containment_radius_map"], [170, 3, 1, "", "copy"], [170, 3, 1, "", "cutout"], [170, 3, 1, "", "downsample"], [170, 2, 1, "", "energy_name"], [170, 3, 1, "", "from_gauss"], [170, 3, 1, "", "from_geom"], [170, 3, 1, "", "from_hdulist"], [170, 3, 1, "", "get_psf_kernel"], [170, 2, 1, "", "has_single_spatial_bin"], [170, 2, 1, "", "mask_safe_image"], [170, 3, 1, "", "normalize"], [170, 3, 1, "", "peek"], [170, 3, 1, "", "plot_containment_radius_vs_energy"], [170, 3, 1, "", "plot_psf_vs_rad"], [170, 2, 1, "", "psf_map"], [170, 3, 1, "", "read"], [170, 2, 1, "", "required_axes"], [170, 3, 1, "", "sample_coord"], [170, 3, 1, "", "slice_by_idx"], [170, 3, 1, "", "stack"], [170, 2, 1, "", "tag"], [170, 3, 1, "", "to_hdulist"], [170, 3, 1, "", "to_image"], [170, 3, 1, "", "to_region_nd_map"], [170, 3, 1, "", "write"]], "gammapy.makers": [[172, 1, 1, "", "AdaptiveRingBackgroundMaker"], [173, 1, 1, "", "DatasetsMaker"], [174, 1, 1, "", "FoVBackgroundMaker"], [175, 5, 1, "", "MAKER_REGISTRY"], [176, 1, 1, "", "Maker"], [177, 1, 1, "", "MapDatasetMaker"], [178, 1, 1, "", "PhaseBackgroundMaker"], [179, 1, 1, "", "ReflectedRegionsBackgroundMaker"], [180, 1, 1, "", "ReflectedRegionsFinder"], [181, 1, 1, "", "RegionsFinder"], [182, 1, 1, "", "RingBackgroundMaker"], [183, 1, 1, "", "SafeMaskMaker"], [184, 1, 1, "", "SpectrumDatasetMaker"], [185, 1, 1, "", "WobbleRegionsFinder"], [8, 0, 0, "-", "utils"]], "gammapy.makers.AdaptiveRingBackgroundMaker": [[172, 3, 1, "", "kernels"], [172, 3, 1, "", "make_cubes"], [172, 3, 1, "", "run"], [172, 2, 1, "", "tag"]], "gammapy.makers.DatasetsMaker": [[173, 3, 1, "", "callback"], [173, 3, 1, "", "error_callback"], [173, 3, 1, "", "make_dataset"], [173, 2, 1, "", "n_jobs"], [173, 2, 1, "", "offset_max"], [173, 2, 1, "", "parallel_backend"], [173, 3, 1, "", "run"], [173, 2, 1, "", "safe_mask_maker"], [173, 2, 1, "", "tag"]], "gammapy.makers.FoVBackgroundMaker": [[174, 2, 1, "", "available_methods"], [174, 3, 1, "", "make_background_fit"], [174, 3, 1, "", "make_background_scale"], [174, 3, 1, "", "make_default_fov_background_model"], [174, 3, 1, "", "make_exclusion_mask"], [174, 2, 1, "", "method"], [174, 3, 1, "", "run"], [174, 2, 1, "", "tag"]], "gammapy.makers.Maker": [[176, 3, 1, "", "run"], [176, 2, 1, "", "tag"]], "gammapy.makers.MapDatasetMaker": [[177, 2, 1, "", "available_selection"], [177, 3, 1, "", "make_background"], [177, 3, 1, "", "make_counts"], [177, 3, 1, "", "make_edisp"], [177, 3, 1, "", "make_edisp_kernel"], [177, 3, 1, "", "make_exposure"], [177, 3, 1, "", "make_exposure_irf"], [177, 3, 1, "", "make_meta_table"], [177, 3, 1, "", "make_psf"], [177, 3, 1, "", "run"], [177, 2, 1, "", "tag"]], "gammapy.makers.PhaseBackgroundMaker": [[178, 3, 1, "", "make_counts"], [178, 3, 1, "", "make_counts_off"], [178, 3, 1, "", "run"], [178, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsBackgroundMaker": [[179, 3, 1, "", "make_counts_off"], [179, 3, 1, "", "run"], [179, 2, 1, "", "tag"]], "gammapy.makers.ReflectedRegionsFinder": [[180, 3, 1, "", "run"]], "gammapy.makers.RegionsFinder": [[181, 3, 1, "", "run"]], "gammapy.makers.RingBackgroundMaker": [[182, 3, 1, "", "kernel"], [182, 3, 1, "", "make_maps_off"], [182, 3, 1, "", "run"], [182, 2, 1, "", "tag"]], "gammapy.makers.SafeMaskMaker": [[183, 2, 1, "", "available_methods"], [183, 3, 1, "", "make_mask_bkg_invalid"], [183, 3, 1, "", "make_mask_energy_aeff_default"], [183, 3, 1, "", "make_mask_energy_aeff_max"], [183, 3, 1, "", "make_mask_energy_bkg_peak"], [183, 3, 1, "", "make_mask_energy_edisp_bias"], [183, 3, 1, "", "make_mask_offset_max"], [183, 3, 1, "", "run"], [183, 2, 1, "", "tag"]], "gammapy.makers.SpectrumDatasetMaker": [[184, 2, 1, "", "available_selection"], [184, 3, 1, "", "make_background"], [184, 3, 1, "", "make_counts"], [184, 3, 1, "", "make_edisp"], [184, 3, 1, "", "make_edisp_kernel"], [184, 3, 1, "", "make_exposure"], [184, 3, 1, "", "make_exposure_irf"], [184, 3, 1, "", "make_meta_table"], [184, 3, 1, "", "make_psf"], [184, 3, 1, "", "run"], [184, 2, 1, "", "tag"]], "gammapy.makers.WobbleRegionsFinder": [[185, 3, 1, "", "run"]], "gammapy.makers.utils": [[186, 4, 1, "", "make_counts_rad_max"], [187, 4, 1, "", "make_edisp_kernel_map"], [188, 4, 1, "", "make_edisp_map"], [189, 4, 1, "", "make_effective_livetime_map"], [190, 4, 1, "", "make_map_background_irf"], [191, 4, 1, "", "make_map_exposure_true_energy"], [192, 4, 1, "", "make_observation_time_map"], [193, 4, 1, "", "make_psf_map"], [194, 4, 1, "", "make_theta_squared_table"]], "gammapy.maps": [[195, 1, 1, "", "Geom"], [196, 1, 1, "", "HpxGeom"], [197, 1, 1, "", "HpxMap"], [198, 1, 1, "", "HpxNDMap"], [199, 1, 1, "", "LabelMapAxis"], [200, 1, 1, "", "Map"], [201, 1, 1, "", "MapAxes"], [202, 1, 1, "", "MapAxis"], [203, 1, 1, "", "MapCoord"], [204, 1, 1, "", "Maps"], [205, 1, 1, "", "RegionGeom"], [206, 1, 1, "", "RegionNDMap"], [207, 1, 1, "", "TimeMapAxis"], [208, 1, 1, "", "WcsGeom"], [209, 1, 1, "", "WcsMap"], [210, 1, 1, "", "WcsNDMap"], [211, 4, 1, "", "containment_radius"], [212, 4, 1, "", "containment_region"]], "gammapy.maps.Geom": [[195, 2, 1, "", "as_energy_true"], [195, 2, 1, "", "center_coord"], [195, 2, 1, "", "center_pix"], [195, 2, 1, "", "center_skydir"], [195, 3, 1, "", "contains"], [195, 3, 1, "", "contains_pix"], [195, 3, 1, "", "coord_to_idx"], [195, 3, 1, "", "coord_to_pix"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "create_mask"], [195, 3, 1, "", "crop"], [195, 3, 1, "", "data_nbytes"], [195, 2, 1, "", "data_shape"], [195, 3, 1, "", "downsample"], [195, 3, 1, "", "drop"], [195, 3, 1, "", "energy_mask"], [195, 3, 1, "", "from_hdulist"], [195, 3, 1, "", "get_coord"], [195, 3, 1, "", "get_idx"], [195, 2, 1, "", "has_energy_axis"], [195, 2, 1, "", "is_allsky"], [195, 2, 1, "", "is_flat"], [195, 2, 1, "", "is_image"], [195, 3, 1, "", "pad"], [195, 3, 1, "", "pix_to_coord"], [195, 3, 1, "", "pix_to_idx"], [195, 3, 1, "", "rename_axes"], [195, 3, 1, "", "replace_axis"], [195, 3, 1, "", "resample_axis"], [195, 3, 1, "", "slice_by_idx"], [195, 3, 1, "", "solid_angle"], [195, 3, 1, "", "squash"], [195, 3, 1, "", "to_bands_hdu"], [195, 3, 1, "", "to_cube"], [195, 3, 1, "", "to_image"], [195, 3, 1, "", "upsample"]], "gammapy.maps.HpxGeom": [[196, 2, 1, "", "as_energy_true"], [196, 2, 1, "", "axes"], [196, 2, 1, "", "axes_names"], [196, 2, 1, "", "center_coord"], [196, 2, 1, "", "center_pix"], [196, 2, 1, "", "center_skydir"], [196, 3, 1, "", "contains"], [196, 3, 1, "", "contains_pix"], [196, 3, 1, "", "coord_to_idx"], [196, 3, 1, "", "coord_to_pix"], [196, 3, 1, "", "copy"], [196, 3, 1, "", "create"], [196, 3, 1, "", "create_mask"], [196, 3, 1, "", "crop"], [196, 3, 1, "", "cutout"], [196, 3, 1, "", "data_nbytes"], [196, 2, 1, "", "data_shape"], [196, 2, 1, "", "data_shape_axes"], [196, 3, 1, "", "downsample"], [196, 3, 1, "", "drop"], [196, 3, 1, "", "energy_mask"], [196, 2, 1, "", "frame"], [196, 3, 1, "", "from_hdu"], [196, 3, 1, "", "from_hdulist"], [196, 3, 1, "", "from_header"], [196, 3, 1, "", "get_coord"], [196, 3, 1, "", "get_idx"], [196, 3, 1, "", "get_index_list"], [196, 3, 1, "", "global_to_local"], [196, 2, 1, "", "has_energy_axis"], [196, 3, 1, "", "interp_weights"], [196, 2, 1, "", "ipix"], [196, 3, 1, "", "is_aligned"], [196, 3, 1, "", "is_allclose"], [196, 2, 1, "", "is_allsky"], [196, 2, 1, "", "is_flat"], [196, 2, 1, "", "is_hpx"], [196, 2, 1, "", "is_image"], [196, 2, 1, "", "is_region"], [196, 2, 1, "", "is_regular"], [196, 3, 1, "", "local_to_global"], [196, 2, 1, "", "ndim"], [196, 2, 1, "", "nest"], [196, 2, 1, "", "npix"], [196, 2, 1, "", "npix_max"], [196, 2, 1, "", "nside"], [196, 2, 1, "", "order"], [196, 2, 1, "", "ordering"], [196, 3, 1, "", "pad"], [196, 3, 1, "", "pix_to_coord"], [196, 3, 1, "", "pix_to_idx"], [196, 2, 1, "", "pixel_scales"], [196, 2, 1, "", "projection"], [196, 2, 1, "", "region"], [196, 3, 1, "", "region_mask"], [196, 3, 1, "", "rename_axes"], [196, 3, 1, "", "replace_axis"], [196, 3, 1, "", "resample_axis"], [196, 3, 1, "", "separation"], [196, 2, 1, "", "shape_axes"], [196, 3, 1, "", "slice_by_idx"], [196, 3, 1, "", "solid_angle"], [196, 3, 1, "", "squash"], [196, 3, 1, "", "to_bands_hdu"], [196, 3, 1, "", "to_binsz"], [196, 3, 1, "", "to_cube"], [196, 3, 1, "", "to_header"], [196, 3, 1, "", "to_image"], [196, 3, 1, "", "to_nside"], [196, 3, 1, "", "to_swapped"], [196, 3, 1, "", "to_wcs_geom"], [196, 3, 1, "", "to_wcs_tiles"], [196, 3, 1, "", "upsample"], [196, 2, 1, "", "width"]], "gammapy.maps.HpxMap": [[197, 3, 1, "", "coadd"], [197, 3, 1, "", "copy"], [197, 3, 1, "", "create"], [197, 3, 1, "", "crop"], [197, 3, 1, "", "cumsum"], [197, 2, 1, "", "data"], [197, 3, 1, "", "dot"], [197, 3, 1, "", "downsample"], [197, 3, 1, "", "fill_by_coord"], [197, 3, 1, "", "fill_by_idx"], [197, 3, 1, "", "fill_by_pix"], [197, 3, 1, "", "fill_events"], [197, 3, 1, "", "from_geom"], [197, 3, 1, "", "from_hdulist"], [197, 3, 1, "", "from_stack"], [197, 2, 1, "", "geom"], [197, 3, 1, "", "get_by_coord"], [197, 3, 1, "", "get_by_idx"], [197, 3, 1, "", "get_by_pix"], [197, 3, 1, "", "get_image_by_coord"], [197, 3, 1, "", "get_image_by_idx"], [197, 3, 1, "", "get_image_by_pix"], [197, 3, 1, "", "get_spectrum"], [197, 3, 1, "", "integral"], [197, 3, 1, "", "interp_by_coord"], [197, 3, 1, "", "interp_by_pix"], [197, 3, 1, "", "interp_to_geom"], [197, 3, 1, "", "is_allclose"], [197, 2, 1, "", "is_mask"], [197, 3, 1, "", "iter_by_axis"], [197, 3, 1, "", "iter_by_image"], [197, 3, 1, "", "iter_by_image_data"], [197, 3, 1, "", "iter_by_image_index"], [197, 3, 1, "", "mask_nearest_position"], [197, 2, 1, "", "meta"], [197, 3, 1, "", "normalize"], [197, 3, 1, "", "pad"], [197, 3, 1, "", "plot_grid"], [197, 3, 1, "", "plot_interactive"], [197, 2, 1, "", "quantity"], [197, 3, 1, "", "read"], [197, 3, 1, "", "reduce"], [197, 3, 1, "", "reduce_over_axes"], [197, 3, 1, "", "rename_axes"], [197, 3, 1, "", "reorder_axes"], [197, 3, 1, "", "reproject_by_image"], [197, 3, 1, "", "reproject_to_geom"], [197, 3, 1, "", "resample"], [197, 3, 1, "", "resample_axis"], [197, 3, 1, "", "sample_coord"], [197, 3, 1, "", "set_by_coord"], [197, 3, 1, "", "set_by_idx"], [197, 3, 1, "", "set_by_pix"], [197, 3, 1, "", "slice_by_idx"], [197, 3, 1, "", "split_by_axis"], [197, 3, 1, "", "sum_over_axes"], [197, 2, 1, "", "tag"], [197, 3, 1, "", "to_cube"], [197, 3, 1, "", "to_hdu"], [197, 3, 1, "", "to_hdulist"], [197, 3, 1, "", "to_swapped"], [197, 3, 1, "", "to_unit"], [197, 3, 1, "", "to_wcs"], [197, 2, 1, "", "unit"], [197, 3, 1, "", "upsample"], [197, 3, 1, "", "write"]], "gammapy.maps.HpxNDMap": [[198, 3, 1, "", "coadd"], [198, 3, 1, "", "convolve"], [198, 3, 1, "", "convolve_full"], [198, 3, 1, "", "convolve_wcs"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "create"], [198, 3, 1, "", "crop"], [198, 3, 1, "", "cumsum"], [198, 3, 1, "", "cutout"], [198, 2, 1, "", "data"], [198, 3, 1, "", "dot"], [198, 3, 1, "", "downsample"], [198, 3, 1, "", "fill_by_coord"], [198, 3, 1, "", "fill_by_idx"], [198, 3, 1, "", "fill_by_pix"], [198, 3, 1, "", "fill_events"], [198, 3, 1, "", "from_geom"], [198, 3, 1, "", "from_hdu"], [198, 3, 1, "", "from_hdulist"], [198, 3, 1, "", "from_stack"], [198, 3, 1, "", "from_wcs_tiles"], [198, 2, 1, "", "geom"], [198, 3, 1, "", "get_by_coord"], [198, 3, 1, "", "get_by_idx"], [198, 3, 1, "", "get_by_pix"], [198, 3, 1, "", "get_image_by_coord"], [198, 3, 1, "", "get_image_by_idx"], [198, 3, 1, "", "get_image_by_pix"], [198, 3, 1, "", "get_spectrum"], [198, 3, 1, "", "integral"], [198, 3, 1, "", "interp_by_coord"], [198, 3, 1, "", "interp_by_pix"], [198, 3, 1, "", "interp_to_geom"], [198, 3, 1, "", "is_allclose"], [198, 2, 1, "", "is_mask"], [198, 3, 1, "", "iter_by_axis"], [198, 3, 1, "", "iter_by_image"], [198, 3, 1, "", "iter_by_image_data"], [198, 3, 1, "", "iter_by_image_index"], [198, 3, 1, "", "mask_nearest_position"], [198, 2, 1, "", "meta"], [198, 3, 1, "", "normalize"], [198, 3, 1, "", "pad"], [198, 3, 1, "", "plot"], [198, 3, 1, "", "plot_grid"], [198, 3, 1, "", "plot_interactive"], [198, 3, 1, "", "plot_mask"], [198, 2, 1, "", "quantity"], [198, 3, 1, "", "read"], [198, 3, 1, "", "reduce"], [198, 3, 1, "", "reduce_over_axes"], [198, 3, 1, "", "rename_axes"], [198, 3, 1, "", "reorder_axes"], [198, 3, 1, "", "reproject_by_image"], [198, 3, 1, "", "reproject_to_geom"], [198, 3, 1, "", "resample"], [198, 3, 1, "", "resample_axis"], [198, 3, 1, "", "sample_coord"], [198, 3, 1, "", "set_by_coord"], [198, 3, 1, "", "set_by_idx"], [198, 3, 1, "", "set_by_pix"], [198, 3, 1, "", "slice_by_idx"], [198, 3, 1, "", "smooth"], [198, 3, 1, "", "split_by_axis"], [198, 3, 1, "", "stack"], [198, 3, 1, "", "sum_over_axes"], [198, 2, 1, "", "tag"], [198, 3, 1, "", "to_cube"], [198, 3, 1, "", "to_hdu"], [198, 3, 1, "", "to_hdulist"], [198, 3, 1, "", "to_nside"], [198, 3, 1, "", "to_region_nd_map"], [198, 3, 1, "", "to_swapped"], [198, 3, 1, "", "to_unit"], [198, 3, 1, "", "to_wcs"], [198, 3, 1, "", "to_wcs_tiles"], [198, 2, 1, "", "unit"], [198, 3, 1, "", "upsample"], [198, 3, 1, "", "write"]], "gammapy.maps.LabelMapAxis": [[199, 2, 1, "", "as_plot_center"], [199, 2, 1, "", "as_plot_edges"], [199, 2, 1, "", "as_plot_labels"], [199, 2, 1, "", "as_plot_xerr"], [199, 3, 1, "", "assert_name"], [199, 2, 1, "", "bin_width"], [199, 2, 1, "", "center"], [199, 3, 1, "", "concatenate"], [199, 3, 1, "", "coord_to_idx"], [199, 3, 1, "", "coord_to_pix"], [199, 3, 1, "", "copy"], [199, 3, 1, "", "downsample"], [199, 2, 1, "", "edges"], [199, 2, 1, "", "edges_max"], [199, 2, 1, "", "edges_min"], [199, 3, 1, "", "format_plot_xaxis"], [199, 3, 1, "", "from_stack"], [199, 3, 1, "", "from_table"], [199, 3, 1, "", "is_allclose"], [199, 2, 1, "", "name"], [199, 2, 1, "", "nbin"], [199, 2, 1, "", "node_type"], [199, 3, 1, "", "pad"], [199, 3, 1, "", "pix_to_coord"], [199, 3, 1, "", "pix_to_idx"], [199, 3, 1, "", "resample"], [199, 3, 1, "", "slice"], [199, 3, 1, "", "squash"], [199, 3, 1, "", "to_header"], [199, 2, 1, "", "unit"], [199, 3, 1, "", "upsample"]], "gammapy.maps.Map": [[200, 3, 1, "", "coadd"], [200, 3, 1, "", "copy"], [200, 3, 1, "", "create"], [200, 3, 1, "", "crop"], [200, 3, 1, "", "cumsum"], [200, 2, 1, "", "data"], [200, 3, 1, "", "dot"], [200, 3, 1, "", "downsample"], [200, 3, 1, "", "fill_by_coord"], [200, 3, 1, "", "fill_by_idx"], [200, 3, 1, "", "fill_by_pix"], [200, 3, 1, "", "fill_events"], [200, 3, 1, "", "from_geom"], [200, 3, 1, "", "from_hdulist"], [200, 3, 1, "", "from_stack"], [200, 2, 1, "", "geom"], [200, 3, 1, "", "get_by_coord"], [200, 3, 1, "", "get_by_idx"], [200, 3, 1, "", "get_by_pix"], [200, 3, 1, "", "get_image_by_coord"], [200, 3, 1, "", "get_image_by_idx"], [200, 3, 1, "", "get_image_by_pix"], [200, 3, 1, "", "get_spectrum"], [200, 3, 1, "", "integral"], [200, 3, 1, "", "interp_by_coord"], [200, 3, 1, "", "interp_by_pix"], [200, 3, 1, "", "interp_to_geom"], [200, 3, 1, "", "is_allclose"], [200, 2, 1, "", "is_mask"], [200, 3, 1, "", "iter_by_axis"], [200, 3, 1, "", "iter_by_image"], [200, 3, 1, "", "iter_by_image_data"], [200, 3, 1, "", "iter_by_image_index"], [200, 3, 1, "", "mask_nearest_position"], [200, 2, 1, "", "meta"], [200, 3, 1, "", "normalize"], [200, 3, 1, "", "pad"], [200, 3, 1, "", "plot_grid"], [200, 3, 1, "", "plot_interactive"], [200, 2, 1, "", "quantity"], [200, 3, 1, "", "read"], [200, 3, 1, "", "reduce"], [200, 3, 1, "", "reduce_over_axes"], [200, 3, 1, "", "rename_axes"], [200, 3, 1, "", "reorder_axes"], [200, 3, 1, "", "reproject_by_image"], [200, 3, 1, "", "reproject_to_geom"], [200, 3, 1, "", "resample"], [200, 3, 1, "", "resample_axis"], [200, 3, 1, "", "sample_coord"], [200, 3, 1, "", "set_by_coord"], [200, 3, 1, "", "set_by_idx"], [200, 3, 1, "", "set_by_pix"], [200, 3, 1, "", "slice_by_idx"], [200, 3, 1, "", "split_by_axis"], [200, 3, 1, "", "sum_over_axes"], [200, 2, 1, "", "tag"], [200, 3, 1, "", "to_cube"], [200, 3, 1, "", "to_unit"], [200, 2, 1, "", "unit"], [200, 3, 1, "", "upsample"], [200, 3, 1, "", "write"]], "gammapy.maps.MapAxes": [[201, 3, 1, "", "assert_names"], [201, 3, 1, "", "bin_volume"], [201, 2, 1, "", "center_coord"], [201, 3, 1, "", "coord_to_idx"], [201, 3, 1, "", "coord_to_pix"], [201, 3, 1, "", "copy"], [201, 3, 1, "", "count"], [201, 3, 1, "", "downsample"], [201, 3, 1, "", "drop"], [201, 3, 1, "", "from_default"], [201, 3, 1, "", "from_table"], [201, 3, 1, "", "from_table_hdu"], [201, 3, 1, "", "get_coord"], [201, 3, 1, "", "index"], [201, 3, 1, "", "index_data"], [201, 3, 1, "", "is_allclose"], [201, 2, 1, "", "is_flat"], [201, 2, 1, "", "is_unidimensional"], [201, 2, 1, "", "iter_with_reshape"], [201, 2, 1, "", "names"], [201, 3, 1, "", "pad"], [201, 3, 1, "", "pix_to_coord"], [201, 3, 1, "", "pix_to_idx"], [201, 2, 1, "", "primary_axis"], [201, 3, 1, "", "rename_axes"], [201, 3, 1, "", "replace"], [201, 3, 1, "", "resample"], [201, 2, 1, "", "reverse"], [201, 2, 1, "", "shape"], [201, 3, 1, "", "slice_by_idx"], [201, 3, 1, "", "squash"], [201, 3, 1, "", "to_header"], [201, 3, 1, "", "to_table"], [201, 3, 1, "", "to_table_hdu"], [201, 3, 1, "", "upsample"]], "gammapy.maps.MapAxis": [[202, 2, 1, "", "as_plot_center"], [202, 2, 1, "", "as_plot_edges"], [202, 2, 1, "", "as_plot_labels"], [202, 2, 1, "", "as_plot_scale"], [202, 2, 1, "", "as_plot_xerr"], [202, 3, 1, "", "assert_name"], [202, 2, 1, "", "bin_width"], [202, 2, 1, "", "bounds"], [202, 2, 1, "", "center"], [202, 3, 1, "", "concatenate"], [202, 3, 1, "", "coord_to_idx"], [202, 3, 1, "", "coord_to_pix"], [202, 3, 1, "", "copy"], [202, 3, 1, "", "downsample"], [202, 2, 1, "", "edges"], [202, 2, 1, "", "edges_max"], [202, 2, 1, "", "edges_min"], [202, 3, 1, "", "format_plot_xaxis"], [202, 3, 1, "", "format_plot_yaxis"], [202, 3, 1, "", "from_bounds"], [202, 3, 1, "", "from_edges"], [202, 3, 1, "", "from_energy_bounds"], [202, 3, 1, "", "from_energy_edges"], [202, 3, 1, "", "from_nodes"], [202, 3, 1, "", "from_stack"], [202, 3, 1, "", "from_table"], [202, 3, 1, "", "from_table_hdu"], [202, 3, 1, "", "group_table"], [202, 2, 1, "", "interp"], [202, 3, 1, "", "is_aligned"], [202, 3, 1, "", "is_allclose"], [202, 2, 1, "", "is_energy_axis"], [202, 2, 1, "", "iter_by_edges"], [202, 2, 1, "", "name"], [202, 2, 1, "", "nbin"], [202, 2, 1, "", "nbin_per_decade"], [202, 2, 1, "", "node_type"], [202, 3, 1, "", "pad"], [202, 3, 1, "", "pix_to_coord"], [202, 3, 1, "", "pix_to_idx"], [202, 3, 1, "", "rename"], [202, 3, 1, "", "round"], [202, 3, 1, "", "slice"], [202, 3, 1, "", "squash"], [202, 3, 1, "", "to_header"], [202, 3, 1, "", "to_node_type"], [202, 3, 1, "", "to_table"], [202, 3, 1, "", "to_table_hdu"], [202, 2, 1, "", "unit"], [202, 3, 1, "", "upsample"], [202, 2, 1, "", "use_center_as_plot_labels"], [202, 3, 1, "", "wrap_coord"]], "gammapy.maps.MapCoord": [[203, 3, 1, "", "apply_mask"], [203, 2, 1, "", "axis_names"], [203, 2, 1, "", "broadcasted"], [203, 3, 1, "", "copy"], [203, 3, 1, "", "create"], [203, 2, 1, "", "flat"], [203, 2, 1, "", "frame"], [203, 2, 1, "", "lat"], [203, 2, 1, "", "lon"], [203, 2, 1, "", "match_by_name"], [203, 2, 1, "", "ndim"], [203, 2, 1, "", "phi"], [203, 2, 1, "", "shape"], [203, 2, 1, "", "size"], [203, 2, 1, "", "skycoord"], [203, 2, 1, "", "theta"], [203, 3, 1, "", "to_frame"]], "gammapy.maps.Maps": [[204, 3, 1, "", "clear"], [204, 3, 1, "", "from_geom"], [204, 3, 1, "", "from_hdulist"], [204, 2, 1, "", "geom"], [204, 3, 1, "", "get"], [204, 3, 1, "", "items"], [204, 3, 1, "", "keys"], [204, 3, 1, "", "pop"], [204, 3, 1, "", "popitem"], [204, 3, 1, "", "read"], [204, 3, 1, "", "setdefault"], [204, 3, 1, "", "to_hdulist"], [204, 3, 1, "", "update"], [204, 3, 1, "", "values"], [204, 3, 1, "", "write"]], "gammapy.maps.RegionGeom": [[205, 2, 1, "", "as_energy_true"], [205, 2, 1, "", "axes"], [205, 2, 1, "", "axes_names"], [205, 3, 1, "", "bin_volume"], [205, 2, 1, "", "binsz_wcs"], [205, 2, 1, "", "center_coord"], [205, 2, 1, "", "center_pix"], [205, 2, 1, "", "center_skydir"], [205, 3, 1, "", "contains"], [205, 3, 1, "", "contains_pix"], [205, 3, 1, "", "contains_wcs_pix"], [205, 3, 1, "", "coord_to_idx"], [205, 3, 1, "", "coord_to_pix"], [205, 3, 1, "", "copy"], [205, 3, 1, "", "create"], [205, 3, 1, "", "create_mask"], [205, 3, 1, "", "crop"], [205, 3, 1, "", "data_nbytes"], [205, 2, 1, "", "data_shape"], [205, 2, 1, "", "data_shape_axes"], [205, 3, 1, "", "downsample"], [205, 3, 1, "", "drop"], [205, 3, 1, "", "energy_mask"], [205, 2, 1, "", "frame"], [205, 3, 1, "", "from_hdulist"], [205, 3, 1, "", "from_regions"], [205, 3, 1, "", "get_coord"], [205, 3, 1, "", "get_idx"], [205, 3, 1, "", "get_wcs_coord_and_weights"], [205, 2, 1, "", "has_energy_axis"], [205, 2, 1, "", "is_all_point_sky_regions"], [205, 3, 1, "", "is_allclose"], [205, 2, 1, "", "is_allsky"], [205, 2, 1, "", "is_flat"], [205, 2, 1, "", "is_hpx"], [205, 2, 1, "", "is_image"], [205, 2, 1, "", "is_region"], [205, 2, 1, "", "is_regular"], [205, 2, 1, "", "npix"], [205, 3, 1, "", "pad"], [205, 3, 1, "", "pix_to_coord"], [205, 3, 1, "", "pix_to_idx"], [205, 3, 1, "", "plot_region"], [205, 2, 1, "", "projection"], [205, 2, 1, "", "region"], [205, 3, 1, "", "rename_axes"], [205, 3, 1, "", "replace_axis"], [205, 3, 1, "", "resample_axis"], [205, 3, 1, "", "separation"], [205, 3, 1, "", "slice_by_idx"], [205, 3, 1, "", "solid_angle"], [205, 3, 1, "", "squash"], [205, 3, 1, "", "to_bands_hdu"], [205, 3, 1, "", "to_binsz"], [205, 3, 1, "", "to_binsz_wcs"], [205, 3, 1, "", "to_cube"], [205, 3, 1, "", "to_hdulist"], [205, 3, 1, "", "to_image"], [205, 3, 1, "", "to_wcs_geom"], [205, 3, 1, "", "union"], [205, 3, 1, "", "upsample"], [205, 2, 1, "", "wcs"], [205, 2, 1, "", "width"]], "gammapy.maps.RegionNDMap": [[206, 3, 1, "", "coadd"], [206, 3, 1, "", "copy"], [206, 3, 1, "", "create"], [206, 3, 1, "", "crop"], [206, 3, 1, "", "cumsum"], [206, 3, 1, "", "cutout"], [206, 2, 1, "", "data"], [206, 3, 1, "", "dot"], [206, 3, 1, "", "downsample"], [206, 3, 1, "", "fill_by_coord"], [206, 3, 1, "", "fill_by_idx"], [206, 3, 1, "", "fill_by_pix"], [206, 3, 1, "", "fill_events"], [206, 3, 1, "", "from_geom"], [206, 3, 1, "", "from_hdulist"], [206, 3, 1, "", "from_stack"], [206, 3, 1, "", "from_table"], [206, 2, 1, "", "geom"], [206, 3, 1, "", "get_by_coord"], [206, 3, 1, "", "get_by_idx"], [206, 3, 1, "", "get_by_pix"], [206, 3, 1, "", "get_image_by_coord"], [206, 3, 1, "", "get_image_by_idx"], [206, 3, 1, "", "get_image_by_pix"], [206, 3, 1, "", "get_spectrum"], [206, 3, 1, "", "integral"], [206, 3, 1, "", "interp_by_coord"], [206, 3, 1, "", "interp_by_pix"], [206, 3, 1, "", "interp_to_geom"], [206, 3, 1, "", "is_allclose"], [206, 2, 1, "", "is_mask"], [206, 3, 1, "", "iter_by_axis"], [206, 3, 1, "", "iter_by_axis_data"], [206, 3, 1, "", "iter_by_image"], [206, 3, 1, "", "iter_by_image_data"], [206, 3, 1, "", "iter_by_image_index"], [206, 3, 1, "", "mask_nearest_position"], [206, 2, 1, "", "meta"], [206, 3, 1, "", "normalize"], [206, 3, 1, "", "pad"], [206, 3, 1, "", "plot"], [206, 3, 1, "", "plot_grid"], [206, 3, 1, "", "plot_hist"], [206, 3, 1, "", "plot_interactive"], [206, 3, 1, "", "plot_mask"], [206, 3, 1, "", "plot_region"], [206, 2, 1, "", "quantity"], [206, 3, 1, "", "read"], [206, 3, 1, "", "reduce"], [206, 3, 1, "", "reduce_over_axes"], [206, 3, 1, "", "rename_axes"], [206, 3, 1, "", "reorder_axes"], [206, 3, 1, "", "reproject_by_image"], [206, 3, 1, "", "reproject_to_geom"], [206, 3, 1, "", "resample"], [206, 3, 1, "", "resample_axis"], [206, 3, 1, "", "sample_coord"], [206, 3, 1, "", "set_by_coord"], [206, 3, 1, "", "set_by_idx"], [206, 3, 1, "", "set_by_pix"], [206, 3, 1, "", "slice_by_idx"], [206, 3, 1, "", "split_by_axis"], [206, 3, 1, "", "stack"], [206, 3, 1, "", "sum_over_axes"], [206, 2, 1, "", "tag"], [206, 3, 1, "", "to_cube"], [206, 3, 1, "", "to_hdulist"], [206, 3, 1, "", "to_region_nd_map"], [206, 3, 1, "", "to_table"], [206, 3, 1, "", "to_unit"], [206, 2, 1, "", "unit"], [206, 3, 1, "", "upsample"], [206, 3, 1, "", "write"]], "gammapy.maps.TimeMapAxis": [[207, 2, 1, "", "as_plot_center"], [207, 2, 1, "", "as_plot_edges"], [207, 2, 1, "", "as_plot_labels"], [207, 2, 1, "", "as_plot_xerr"], [207, 3, 1, "", "assert_name"], [207, 2, 1, "", "bin_width"], [207, 2, 1, "", "bounds"], [207, 2, 1, "", "center"], [207, 3, 1, "", "coord_to_idx"], [207, 3, 1, "", "coord_to_pix"], [207, 3, 1, "", "copy"], [207, 3, 1, "", "downsample"], [207, 2, 1, "", "edges"], [207, 2, 1, "", "edges_max"], [207, 2, 1, "", "edges_min"], [207, 3, 1, "", "format_plot_xaxis"], [207, 3, 1, "", "from_gti"], [207, 3, 1, "", "from_gti_bounds"], [207, 3, 1, "", "from_table"], [207, 3, 1, "", "from_time_bounds"], [207, 3, 1, "", "from_time_edges"], [207, 3, 1, "", "group_table"], [207, 2, 1, "", "interp"], [207, 3, 1, "", "is_aligned"], [207, 3, 1, "", "is_allclose"], [207, 2, 1, "", "is_contiguous"], [207, 2, 1, "", "iter_by_edges"], [207, 2, 1, "", "name"], [207, 2, 1, "", "nbin"], [207, 2, 1, "", "node_type"], [207, 3, 1, "", "pix_to_coord"], [207, 3, 1, "", "pix_to_idx"], [207, 2, 1, "", "reference_time"], [207, 3, 1, "", "slice"], [207, 3, 1, "", "squash"], [207, 2, 1, "", "time_bounds"], [207, 2, 1, "", "time_delta"], [207, 2, 1, "", "time_edges"], [207, 2, 1, "", "time_format"], [207, 2, 1, "", "time_max"], [207, 2, 1, "", "time_mid"], [207, 2, 1, "", "time_min"], [207, 3, 1, "", "to_contiguous"], [207, 3, 1, "", "to_gti"], [207, 3, 1, "", "to_header"], [207, 3, 1, "", "to_table"], [207, 2, 1, "", "unit"], [207, 3, 1, "", "upsample"]], "gammapy.maps.WcsGeom": [[208, 2, 1, "", "as_energy_true"], [208, 2, 1, "", "axes"], [208, 2, 1, "", "axes_names"], [208, 3, 1, "", "bin_volume"], [208, 3, 1, "", "binary_structure"], [208, 3, 1, "", "boundary_mask"], [208, 2, 1, "", "center_coord"], [208, 2, 1, "", "center_pix"], [208, 2, 1, "", "center_skydir"], [208, 3, 1, "", "contains"], [208, 3, 1, "", "contains_pix"], [208, 3, 1, "", "coord_to_idx"], [208, 3, 1, "", "coord_to_pix"], [208, 3, 1, "", "copy"], [208, 3, 1, "", "create"], [208, 3, 1, "", "create_mask"], [208, 3, 1, "", "crop"], [208, 3, 1, "", "cutout"], [208, 3, 1, "", "cutout_slices"], [208, 3, 1, "", "data_nbytes"], [208, 2, 1, "", "data_shape"], [208, 2, 1, "", "data_shape_axes"], [208, 2, 1, "", "data_shape_image"], [208, 3, 1, "", "downsample"], [208, 3, 1, "", "drop"], [208, 3, 1, "", "energy_mask"], [208, 2, 1, "", "footprint"], [208, 2, 1, "", "footprint_rectangle_sky_region"], [208, 2, 1, "", "frame"], [208, 3, 1, "", "from_aligned"], [208, 3, 1, "", "from_hdulist"], [208, 3, 1, "", "from_header"], [208, 3, 1, "", "get_coord"], [208, 3, 1, "", "get_idx"], [208, 3, 1, "", "get_pix"], [208, 2, 1, "", "has_energy_axis"], [208, 3, 1, "", "is_aligned"], [208, 3, 1, "", "is_allclose"], [208, 2, 1, "", "is_allsky"], [208, 2, 1, "", "is_flat"], [208, 2, 1, "", "is_hpx"], [208, 2, 1, "", "is_image"], [208, 2, 1, "", "is_region"], [208, 2, 1, "", "is_regular"], [208, 2, 1, "", "ndim"], [208, 2, 1, "", "npix"], [208, 3, 1, "", "pad"], [208, 3, 1, "", "pix_to_coord"], [208, 3, 1, "", "pix_to_idx"], [208, 2, 1, "", "pixel_area"], [208, 2, 1, "", "pixel_scales"], [208, 2, 1, "", "projection"], [208, 3, 1, "", "region_mask"], [208, 3, 1, "", "region_weights"], [208, 3, 1, "", "rename_axes"], [208, 3, 1, "", "replace_axis"], [208, 3, 1, "", "resample_axis"], [208, 3, 1, "", "separation"], [208, 2, 1, "", "shape_axes"], [208, 3, 1, "", "slice_by_idx"], [208, 3, 1, "", "solid_angle"], [208, 3, 1, "", "squash"], [208, 3, 1, "", "to_bands_hdu"], [208, 3, 1, "", "to_binsz"], [208, 3, 1, "", "to_cube"], [208, 3, 1, "", "to_even_npix"], [208, 3, 1, "", "to_header"], [208, 3, 1, "", "to_image"], [208, 3, 1, "", "to_odd_npix"], [208, 3, 1, "", "upsample"], [208, 2, 1, "", "wcs"], [208, 2, 1, "", "width"]], "gammapy.maps.WcsMap": [[209, 3, 1, "", "coadd"], [209, 3, 1, "", "copy"], [209, 3, 1, "", "create"], [209, 3, 1, "", "crop"], [209, 3, 1, "", "cumsum"], [209, 2, 1, "", "data"], [209, 3, 1, "", "dot"], [209, 3, 1, "", "downsample"], [209, 3, 1, "", "fill_by_coord"], [209, 3, 1, "", "fill_by_idx"], [209, 3, 1, "", "fill_by_pix"], [209, 3, 1, "", "fill_events"], [209, 3, 1, "", "from_geom"], [209, 3, 1, "", "from_hdulist"], [209, 3, 1, "", "from_stack"], [209, 2, 1, "", "geom"], [209, 3, 1, "", "get_by_coord"], [209, 3, 1, "", "get_by_idx"], [209, 3, 1, "", "get_by_pix"], [209, 3, 1, "", "get_image_by_coord"], [209, 3, 1, "", "get_image_by_idx"], [209, 3, 1, "", "get_image_by_pix"], [209, 3, 1, "", "get_spectrum"], [209, 3, 1, "", "integral"], [209, 3, 1, "", "interp_by_coord"], [209, 3, 1, "", "interp_by_pix"], [209, 3, 1, "", "interp_to_geom"], [209, 3, 1, "", "is_allclose"], [209, 2, 1, "", "is_mask"], [209, 3, 1, "", "iter_by_axis"], [209, 3, 1, "", "iter_by_image"], [209, 3, 1, "", "iter_by_image_data"], [209, 3, 1, "", "iter_by_image_index"], [209, 3, 1, "", "mask_nearest_position"], [209, 2, 1, "", "meta"], [209, 3, 1, "", "normalize"], [209, 3, 1, "", "pad"], [209, 3, 1, "", "plot_grid"], [209, 3, 1, "", "plot_interactive"], [209, 2, 1, "", "quantity"], [209, 3, 1, "", "read"], [209, 3, 1, "", "reduce"], [209, 3, 1, "", "reduce_over_axes"], [209, 3, 1, "", "rename_axes"], [209, 3, 1, "", "reorder_axes"], [209, 3, 1, "", "reproject_by_image"], [209, 3, 1, "", "reproject_to_geom"], [209, 3, 1, "", "resample"], [209, 3, 1, "", "resample_axis"], [209, 3, 1, "", "sample_coord"], [209, 3, 1, "", "set_by_coord"], [209, 3, 1, "", "set_by_idx"], [209, 3, 1, "", "set_by_pix"], [209, 3, 1, "", "slice_by_idx"], [209, 3, 1, "", "split_by_axis"], [209, 3, 1, "", "sum_over_axes"], [209, 2, 1, "", "tag"], [209, 3, 1, "", "to_cube"], [209, 3, 1, "", "to_hdu"], [209, 3, 1, "", "to_hdulist"], [209, 3, 1, "", "to_unit"], [209, 2, 1, "", "unit"], [209, 3, 1, "", "upsample"], [209, 3, 1, "", "write"]], "gammapy.maps.WcsNDMap": [[210, 3, 1, "", "binary_dilate"], [210, 3, 1, "", "binary_erode"], [210, 3, 1, "", "coadd"], [210, 3, 1, "", "convolve"], [210, 3, 1, "", "copy"], [210, 3, 1, "", "create"], [210, 3, 1, "", "crop"], [210, 3, 1, "", "cumsum"], [210, 3, 1, "", "cutout"], [210, 3, 1, "", "cutout_and_mask_region"], [210, 2, 1, "", "data"], [210, 3, 1, "", "dot"], [210, 3, 1, "", "downsample"], [210, 3, 1, "", "fill_by_coord"], [210, 3, 1, "", "fill_by_idx"], [210, 3, 1, "", "fill_by_pix"], [210, 3, 1, "", "fill_events"], [210, 3, 1, "", "from_geom"], [210, 3, 1, "", "from_hdu"], [210, 3, 1, "", "from_hdulist"], [210, 3, 1, "", "from_stack"], [210, 2, 1, "", "geom"], [210, 3, 1, "", "get_by_coord"], [210, 3, 1, "", "get_by_idx"], [210, 3, 1, "", "get_by_pix"], [210, 3, 1, "", "get_image_by_coord"], [210, 3, 1, "", "get_image_by_idx"], [210, 3, 1, "", "get_image_by_pix"], [210, 3, 1, "", "get_spectrum"], [210, 3, 1, "", "integral"], [210, 3, 1, "", "interp_by_coord"], [210, 3, 1, "", "interp_by_pix"], [210, 3, 1, "", "interp_to_geom"], [210, 3, 1, "", "is_allclose"], [210, 2, 1, "", "is_mask"], [210, 3, 1, "", "iter_by_axis"], [210, 3, 1, "", "iter_by_image"], [210, 3, 1, "", "iter_by_image_data"], [210, 3, 1, "", "iter_by_image_index"], [210, 3, 1, "", "mask_contains_region"], [210, 3, 1, "", "mask_nearest_position"], [210, 2, 1, "", "meta"], [210, 3, 1, "", "normalize"], [210, 3, 1, "", "pad"], [210, 3, 1, "", "plot"], [210, 3, 1, "", "plot_grid"], [210, 3, 1, "", "plot_interactive"], [210, 3, 1, "", "plot_mask"], [210, 2, 1, "", "quantity"], [210, 3, 1, "", "read"], [210, 3, 1, "", "reduce"], [210, 3, 1, "", "reduce_over_axes"], [210, 3, 1, "", "rename_axes"], [210, 3, 1, "", "reorder_axes"], [210, 3, 1, "", "reproject_by_image"], [210, 3, 1, "", "reproject_to_geom"], [210, 3, 1, "", "resample"], [210, 3, 1, "", "resample_axis"], [210, 3, 1, "", "sample_coord"], [210, 3, 1, "", "set_by_coord"], [210, 3, 1, "", "set_by_idx"], [210, 3, 1, "", "set_by_pix"], [210, 3, 1, "", "slice_by_idx"], [210, 3, 1, "", "smooth"], [210, 3, 1, "", "split_by_axis"], [210, 3, 1, "", "stack"], [210, 3, 1, "", "sum_over_axes"], [210, 2, 1, "", "tag"], [210, 3, 1, "", "to_cube"], [210, 3, 1, "", "to_hdu"], [210, 3, 1, "", "to_hdulist"], [210, 3, 1, "", "to_region_nd_map"], [210, 3, 1, "", "to_region_nd_map_histogram"], [210, 3, 1, "", "to_unit"], [210, 2, 1, "", "unit"], [210, 3, 1, "", "upsample"], [210, 3, 1, "", "write"]], "gammapy.modeling": [[213, 1, 1, "", "Covariance"], [214, 1, 1, "", "CovarianceResult"], [215, 1, 1, "", "Fit"], [216, 1, 1, "", "FitResult"], [217, 1, 1, "", "OptimizeResult"], [218, 1, 1, "", "Parameter"], [219, 1, 1, "", "Parameters"], [220, 1, 1, "", "PriorParameter"], [221, 1, 1, "", "PriorParameters"], [10, 0, 0, "-", "models"], [291, 4, 1, "", "select_nested_models"], [292, 4, 1, "", "stat_profile_ul_scipy"]], "gammapy.modeling.Covariance": [[213, 2, 1, "", "correlation"], [213, 2, 1, "", "data"], [213, 3, 1, "", "from_factor_matrix"], [213, 3, 1, "", "from_stack"], [213, 3, 1, "", "get_subcovariance"], [213, 3, 1, "", "plot_correlation"], [213, 2, 1, "", "scipy_mvn"], [213, 3, 1, "", "set_subcovariance"], [213, 2, 1, "", "shape"]], "gammapy.modeling.CovarianceResult": [[214, 2, 1, "", "backend"], [214, 2, 1, "", "matrix"], [214, 2, 1, "", "message"], [214, 2, 1, "", "method"], [214, 2, 1, "", "success"], [214, 3, 1, "", "to_dict"]], "gammapy.modeling.Fit": [[215, 3, 1, "", "confidence"], [215, 3, 1, "", "covariance"], [215, 3, 1, "", "optimize"], [215, 3, 1, "", "run"], [215, 3, 1, "", "stat_contour"], [215, 3, 1, "", "stat_profile"], [215, 3, 1, "", "stat_surface"]], "gammapy.modeling.FitResult": [[216, 2, 1, "", "backend"], [216, 2, 1, "", "covariance_result"], [216, 2, 1, "", "message"], [216, 2, 1, "", "method"], [216, 2, 1, "", "minuit"], [216, 2, 1, "", "models"], [216, 2, 1, "", "nfev"], [216, 2, 1, "", "optimize_result"], [216, 2, 1, "", "parameters"], [216, 2, 1, "", "success"], [216, 2, 1, "", "total_stat"], [216, 2, 1, "", "trace"], [216, 3, 1, "", "write"]], "gammapy.modeling.OptimizeResult": [[217, 2, 1, "", "backend"], [217, 2, 1, "", "message"], [217, 2, 1, "", "method"], [217, 2, 1, "", "minuit"], [217, 2, 1, "", "models"], [217, 2, 1, "", "nfev"], [217, 2, 1, "", "parameters"], [217, 2, 1, "", "success"], [217, 3, 1, "", "to_dict"], [217, 2, 1, "", "total_stat"], [217, 2, 1, "", "trace"]], "gammapy.modeling.Parameter": [[218, 3, 1, "", "autoscale"], [218, 3, 1, "", "check_limits"], [218, 2, 1, "", "conf_max"], [218, 2, 1, "", "conf_min"], [218, 3, 1, "", "copy"], [218, 2, 1, "", "error"], [218, 2, 1, "", "factor"], [218, 2, 1, "", "factor_max"], [218, 2, 1, "", "factor_min"], [218, 2, 1, "", "frozen"], [218, 2, 1, "", "max"], [218, 2, 1, "", "min"], [218, 2, 1, "", "name"], [218, 2, 1, "", "prior"], [218, 3, 1, "", "prior_stat_sum"], [218, 2, 1, "", "quantity"], [218, 2, 1, "", "scale"], [218, 2, 1, "", "scale_method"], [218, 2, 1, "", "scan_max"], [218, 2, 1, "", "scan_min"], [218, 2, 1, "", "scan_n_sigma"], [218, 2, 1, "", "scan_values"], [218, 3, 1, "", "set_lim"], [218, 3, 1, "", "to_dict"], [218, 2, 1, "", "type"], [218, 2, 1, "", "unit"], [218, 3, 1, "", "update_from_dict"], [218, 2, 1, "", "value"]], "gammapy.modeling.Parameters": [[219, 3, 1, "", "autoscale"], [219, 3, 1, "", "check_limits"], [219, 3, 1, "", "copy"], [219, 3, 1, "", "count"], [219, 2, 1, "", "free_parameters"], [219, 3, 1, "", "freeze_all"], [219, 3, 1, "", "from_dict"], [219, 3, 1, "", "from_stack"], [219, 3, 1, "", "index"], [219, 2, 1, "", "max"], [219, 2, 1, "", "min"], [219, 2, 1, "", "names"], [219, 2, 1, "", "prior"], [219, 3, 1, "", "prior_stat_sum"], [219, 3, 1, "", "restore_status"], [219, 3, 1, "", "select"], [219, 3, 1, "", "set_parameter_factors"], [219, 3, 1, "", "to_dict"], [219, 3, 1, "", "to_table"], [219, 2, 1, "", "types"], [219, 3, 1, "", "unfreeze_all"], [219, 2, 1, "", "unique_parameters"], [219, 2, 1, "", "value"]], "gammapy.modeling.PriorParameter": [[220, 3, 1, "", "autoscale"], [220, 3, 1, "", "check_limits"], [220, 2, 1, "", "conf_max"], [220, 2, 1, "", "conf_min"], [220, 3, 1, "", "copy"], [220, 2, 1, "", "error"], [220, 2, 1, "", "factor"], [220, 2, 1, "", "factor_max"], [220, 2, 1, "", "factor_min"], [220, 2, 1, "", "frozen"], [220, 2, 1, "", "max"], [220, 2, 1, "", "min"], [220, 2, 1, "", "name"], [220, 2, 1, "", "prior"], [220, 3, 1, "", "prior_stat_sum"], [220, 2, 1, "", "quantity"], [220, 2, 1, "", "scale"], [220, 2, 1, "", "scale_method"], [220, 2, 1, "", "scan_max"], [220, 2, 1, "", "scan_min"], [220, 2, 1, "", "scan_n_sigma"], [220, 2, 1, "", "scan_values"], [220, 3, 1, "", "set_lim"], [220, 3, 1, "", "to_dict"], [220, 2, 1, "", "type"], [220, 2, 1, "", "unit"], [220, 3, 1, "", "update_from_dict"], [220, 2, 1, "", "value"]], "gammapy.modeling.PriorParameters": [[221, 3, 1, "", "autoscale"], [221, 3, 1, "", "check_limits"], [221, 3, 1, "", "copy"], [221, 3, 1, "", "count"], [221, 2, 1, "", "free_parameters"], [221, 3, 1, "", "freeze_all"], [221, 3, 1, "", "from_dict"], [221, 3, 1, "", "from_stack"], [221, 3, 1, "", "index"], [221, 2, 1, "", "max"], [221, 2, 1, "", "min"], [221, 2, 1, "", "names"], [221, 2, 1, "", "prior"], [221, 3, 1, "", "prior_stat_sum"], [221, 3, 1, "", "restore_status"], [221, 3, 1, "", "select"], [221, 3, 1, "", "set_parameter_factors"], [221, 3, 1, "", "to_dict"], [221, 3, 1, "", "to_table"], [221, 2, 1, "", "types"], [221, 3, 1, "", "unfreeze_all"], [221, 2, 1, "", "unique_parameters"], [221, 2, 1, "", "value"]], "gammapy.modeling.models": [[222, 1, 1, "", "BrokenPowerLawSpectralModel"], [223, 1, 1, "", "CompoundSpectralModel"], [224, 1, 1, "", "ConstantFluxSpatialModel"], [225, 1, 1, "", "ConstantSpatialModel"], [226, 1, 1, "", "ConstantSpectralModel"], [227, 1, 1, "", "ConstantTemporalModel"], [228, 1, 1, "", "DatasetModels"], [229, 1, 1, "", "DiskSpatialModel"], [230, 1, 1, "", "EBLAbsorptionNormSpectralModel"], [231, 5, 1, "", "EBL_DATA_BUILTIN"], [232, 1, 1, "", "ExpCutoffPowerLaw3FGLSpectralModel"], [233, 1, 1, "", "ExpCutoffPowerLawNormSpectralModel"], [234, 1, 1, "", "ExpCutoffPowerLawSpectralModel"], [235, 1, 1, "", "ExpDecayTemporalModel"], [236, 1, 1, "", "FoVBackgroundModel"], [237, 1, 1, "", "GaussianPrior"], [238, 1, 1, "", "GaussianSpatialModel"], [239, 1, 1, "", "GaussianSpectralModel"], [240, 1, 1, "", "GaussianTemporalModel"], [241, 1, 1, "", "GeneralizedGaussianSpatialModel"], [242, 1, 1, "", "GeneralizedGaussianTemporalModel"], [243, 1, 1, "", "LightCurveTemplateTemporalModel"], [244, 1, 1, "", "LinearTemporalModel"], [245, 1, 1, "", "LogParabolaNormSpectralModel"], [246, 1, 1, "", "LogParabolaSpectralModel"], [247, 1, 1, "", "LogUniformPrior"], [248, 5, 1, "", "MODEL_REGISTRY"], [249, 1, 1, "", "MeyerCrabSpectralModel"], [250, 1, 1, "", "Model"], [251, 1, 1, "", "ModelBase"], [252, 1, 1, "", "Models"], [253, 1, 1, "", "NaimaSpectralModel"], [254, 1, 1, "", "PiecewiseNormSpatialModel"], [255, 1, 1, "", "PiecewiseNormSpectralModel"], [256, 1, 1, "", "PointSpatialModel"], [257, 1, 1, "", "PowerLaw2SpectralModel"], [258, 1, 1, "", "PowerLawNormSpectralModel"], [259, 1, 1, "", "PowerLawSpectralModel"], [260, 1, 1, "", "PowerLawTemporalModel"], [261, 1, 1, "", "Prior"], [262, 5, 1, "", "SPATIAL_MODEL_REGISTRY"], [263, 5, 1, "", "SPECTRAL_MODEL_REGISTRY"], [264, 1, 1, "", "ScaleSpectralModel"], [265, 1, 1, "", "Shell2SpatialModel"], [266, 1, 1, "", "ShellSpatialModel"], [267, 1, 1, "", "SineTemporalModel"], [268, 1, 1, "", "SkyModel"], [269, 1, 1, "", "SmoothBrokenPowerLawSpectralModel"], [270, 1, 1, "", "SpatialModel"], [271, 1, 1, "", "SpectralModel"], [272, 1, 1, "", "SuperExpCutoffPowerLaw3FGLSpectralModel"], [273, 1, 1, "", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel"], [274, 1, 1, "", "SuperExpCutoffPowerLaw4FGLSpectralModel"], [275, 5, 1, "", "TEMPORAL_MODEL_REGISTRY"], [276, 1, 1, "", "TemplateNDSpatialModel"], [277, 1, 1, "", "TemplateNDSpectralModel"], [278, 1, 1, "", "TemplateNPredModel"], [279, 1, 1, "", "TemplatePhaseCurveTemporalModel"], [280, 1, 1, "", "TemplateSpatialModel"], [281, 1, 1, "", "TemplateSpectralModel"], [282, 1, 1, "", "TemporalModel"], [283, 1, 1, "", "UniformPrior"], [284, 4, 1, "", "create_cosmic_ray_spectral_model"], [285, 4, 1, "", "create_crab_spectral_model"], [286, 4, 1, "", "create_fermi_isotropic_diffuse_model"], [287, 4, 1, "", "integrate_spectrum"], [288, 4, 1, "", "read_hermes_cube"], [289, 4, 1, "", "scale_plot_flux"], [10, 0, 0, "-", "utils"]], "gammapy.modeling.models.BrokenPowerLawSpectralModel": [[222, 3, 1, "", "__call__"], [222, 2, 1, "", "amplitude"], [222, 3, 1, "", "copy"], [222, 2, 1, "", "covariance"], [222, 2, 1, "", "default_parameters"], [222, 2, 1, "", "ebreak"], [222, 3, 1, "", "energy_flux"], [222, 3, 1, "", "energy_flux_error"], [222, 3, 1, "", "evaluate"], [222, 3, 1, "", "evaluate_error"], [222, 3, 1, "", "freeze"], [222, 3, 1, "", "from_dict"], [222, 3, 1, "", "from_parameters"], [222, 2, 1, "", "frozen"], [222, 2, 1, "", "index1"], [222, 2, 1, "", "index2"], [222, 3, 1, "", "integral"], [222, 3, 1, "", "integral_error"], [222, 3, 1, "", "inverse"], [222, 3, 1, "", "inverse_all"], [222, 2, 1, "", "is_norm_spectral_model"], [222, 2, 1, "", "parameters"], [222, 2, 1, "", "parameters_unique_names"], [222, 2, 1, "", "pivot_energy"], [222, 3, 1, "", "plot"], [222, 3, 1, "", "plot_error"], [222, 3, 1, "", "reassign"], [222, 3, 1, "", "reference_fluxes"], [222, 3, 1, "", "spectral_index"], [222, 3, 1, "", "spectral_index_error"], [222, 2, 1, "", "tag"], [222, 3, 1, "", "to_dict"], [222, 2, 1, "", "type"], [222, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.CompoundSpectralModel": [[223, 3, 1, "", "__call__"], [223, 3, 1, "", "copy"], [223, 2, 1, "", "covariance"], [223, 2, 1, "", "default_parameters"], [223, 3, 1, "", "energy_flux"], [223, 3, 1, "", "energy_flux_error"], [223, 3, 1, "", "evaluate"], [223, 3, 1, "", "evaluate_error"], [223, 3, 1, "", "freeze"], [223, 3, 1, "", "from_dict"], [223, 3, 1, "", "from_parameters"], [223, 2, 1, "", "frozen"], [223, 3, 1, "", "integral"], [223, 3, 1, "", "integral_error"], [223, 3, 1, "", "inverse"], [223, 3, 1, "", "inverse_all"], [223, 2, 1, "", "is_norm_spectral_model"], [223, 2, 1, "", "parameters"], [223, 2, 1, "", "parameters_unique_names"], [223, 2, 1, "", "pivot_energy"], [223, 3, 1, "", "plot"], [223, 3, 1, "", "plot_error"], [223, 3, 1, "", "reassign"], [223, 3, 1, "", "reference_fluxes"], [223, 3, 1, "", "spectral_index"], [223, 3, 1, "", "spectral_index_error"], [223, 2, 1, "", "tag"], [223, 3, 1, "", "to_dict"], [223, 2, 1, "", "type"], [223, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantFluxSpatialModel": [[224, 3, 1, "", "__call__"], [224, 3, 1, "", "copy"], [224, 2, 1, "", "covariance"], [224, 2, 1, "", "default_parameters"], [224, 3, 1, "", "evaluate"], [224, 3, 1, "", "evaluate_geom"], [224, 2, 1, "", "evaluation_bin_size_min"], [224, 2, 1, "", "evaluation_radius"], [224, 2, 1, "", "evaluation_region"], [224, 2, 1, "", "frame"], [224, 3, 1, "", "freeze"], [224, 3, 1, "", "from_dict"], [224, 3, 1, "", "from_parameters"], [224, 3, 1, "", "from_position"], [224, 2, 1, "", "frozen"], [224, 3, 1, "", "integrate_geom"], [224, 2, 1, "", "is_energy_dependent"], [224, 2, 1, "", "parameters"], [224, 2, 1, "", "parameters_unique_names"], [224, 2, 1, "", "phi_0"], [224, 3, 1, "", "plot"], [224, 3, 1, "", "plot_error"], [224, 3, 1, "", "plot_grid"], [224, 3, 1, "", "plot_interactive"], [224, 3, 1, "", "plot_position_error"], [224, 2, 1, "", "position"], [224, 2, 1, "", "position_error"], [224, 2, 1, "", "position_lonlat"], [224, 3, 1, "", "reassign"], [224, 2, 1, "", "tag"], [224, 3, 1, "", "to_dict"], [224, 3, 1, "", "to_region"], [224, 2, 1, "", "type"], [224, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantSpatialModel": [[225, 3, 1, "", "__call__"], [225, 3, 1, "", "copy"], [225, 2, 1, "", "covariance"], [225, 2, 1, "", "default_parameters"], [225, 3, 1, "", "evaluate"], [225, 3, 1, "", "evaluate_geom"], [225, 2, 1, "", "evaluation_bin_size_min"], [225, 2, 1, "", "evaluation_radius"], [225, 2, 1, "", "evaluation_region"], [225, 2, 1, "", "frame"], [225, 3, 1, "", "freeze"], [225, 3, 1, "", "from_dict"], [225, 3, 1, "", "from_parameters"], [225, 3, 1, "", "from_position"], [225, 2, 1, "", "frozen"], [225, 3, 1, "", "integrate_geom"], [225, 2, 1, "", "is_energy_dependent"], [225, 2, 1, "", "parameters"], [225, 2, 1, "", "parameters_unique_names"], [225, 2, 1, "", "phi_0"], [225, 3, 1, "", "plot"], [225, 3, 1, "", "plot_error"], [225, 3, 1, "", "plot_grid"], [225, 3, 1, "", "plot_interactive"], [225, 3, 1, "", "plot_position_error"], [225, 2, 1, "", "position"], [225, 2, 1, "", "position_error"], [225, 2, 1, "", "position_lonlat"], [225, 3, 1, "", "reassign"], [225, 2, 1, "", "tag"], [225, 3, 1, "", "to_dict"], [225, 3, 1, "", "to_region"], [225, 2, 1, "", "type"], [225, 3, 1, "", "unfreeze"], [225, 2, 1, "", "value"]], "gammapy.modeling.models.ConstantSpectralModel": [[226, 3, 1, "", "__call__"], [226, 2, 1, "", "const"], [226, 3, 1, "", "copy"], [226, 2, 1, "", "covariance"], [226, 2, 1, "", "default_parameters"], [226, 3, 1, "", "energy_flux"], [226, 3, 1, "", "energy_flux_error"], [226, 3, 1, "", "evaluate"], [226, 3, 1, "", "evaluate_error"], [226, 3, 1, "", "freeze"], [226, 3, 1, "", "from_dict"], [226, 3, 1, "", "from_parameters"], [226, 2, 1, "", "frozen"], [226, 3, 1, "", "integral"], [226, 3, 1, "", "integral_error"], [226, 3, 1, "", "inverse"], [226, 3, 1, "", "inverse_all"], [226, 2, 1, "", "is_norm_spectral_model"], [226, 2, 1, "", "parameters"], [226, 2, 1, "", "parameters_unique_names"], [226, 2, 1, "", "pivot_energy"], [226, 3, 1, "", "plot"], [226, 3, 1, "", "plot_error"], [226, 3, 1, "", "reassign"], [226, 3, 1, "", "reference_fluxes"], [226, 3, 1, "", "spectral_index"], [226, 3, 1, "", "spectral_index_error"], [226, 2, 1, "", "tag"], [226, 3, 1, "", "to_dict"], [226, 2, 1, "", "type"], [226, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ConstantTemporalModel": [[227, 3, 1, "", "__call__"], [227, 3, 1, "", "copy"], [227, 2, 1, "", "covariance"], [227, 2, 1, "", "default_parameters"], [227, 3, 1, "", "evaluate"], [227, 3, 1, "", "freeze"], [227, 3, 1, "", "from_dict"], [227, 3, 1, "", "from_parameters"], [227, 2, 1, "", "frozen"], [227, 3, 1, "", "integral"], [227, 2, 1, "", "is_energy_dependent"], [227, 2, 1, "", "parameters"], [227, 2, 1, "", "parameters_unique_names"], [227, 3, 1, "", "plot"], [227, 3, 1, "", "reassign"], [227, 2, 1, "", "reference_time"], [227, 3, 1, "", "sample_time"], [227, 2, 1, "", "tag"], [227, 3, 1, "", "time_sum"], [227, 3, 1, "", "to_dict"], [227, 2, 1, "", "type"], [227, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.DatasetModels": [[228, 3, 1, "", "copy"], [228, 3, 1, "", "count"], [228, 2, 1, "", "covariance"], [228, 3, 1, "", "freeze"], [228, 3, 1, "", "from_dict"], [228, 3, 1, "", "from_yaml"], [228, 2, 1, "", "frozen"], [228, 3, 1, "", "index"], [228, 2, 1, "", "names"], [228, 2, 1, "", "parameters"], [228, 2, 1, "", "parameters_unique_names"], [228, 3, 1, "", "plot_positions"], [228, 3, 1, "", "plot_regions"], [228, 2, 1, "", "positions"], [228, 3, 1, "", "read"], [228, 3, 1, "", "read_covariance"], [228, 3, 1, "", "reassign"], [228, 3, 1, "", "restore_status"], [228, 3, 1, "", "select"], [228, 3, 1, "", "select_from_geom"], [228, 3, 1, "", "select_mask"], [228, 3, 1, "", "select_region"], [228, 3, 1, "", "selection_mask"], [228, 3, 1, "", "set_parameters_bounds"], [228, 3, 1, "", "to_dict"], [228, 3, 1, "", "to_parameters_table"], [228, 3, 1, "", "to_regions"], [228, 3, 1, "", "to_template_sky_model"], [228, 3, 1, "", "to_template_spectral_model"], [228, 3, 1, "", "to_yaml"], [228, 3, 1, "", "unfreeze"], [228, 3, 1, "", "update_link_label"], [228, 3, 1, "", "update_parameters_from_table"], [228, 2, 1, "", "wcs_geom"], [228, 3, 1, "", "write"], [228, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.DiskSpatialModel": [[229, 3, 1, "", "__call__"], [229, 3, 1, "", "copy"], [229, 2, 1, "", "covariance"], [229, 2, 1, "", "default_parameters"], [229, 2, 1, "", "e"], [229, 2, 1, "", "edge_width"], [229, 3, 1, "", "evaluate"], [229, 3, 1, "", "evaluate_geom"], [229, 2, 1, "", "evaluation_bin_size_min"], [229, 2, 1, "", "evaluation_radius"], [229, 2, 1, "", "evaluation_region"], [229, 3, 1, "", "freeze"], [229, 3, 1, "", "from_dict"], [229, 3, 1, "", "from_parameters"], [229, 3, 1, "", "from_position"], [229, 3, 1, "", "from_region"], [229, 2, 1, "", "frozen"], [229, 3, 1, "", "integrate_geom"], [229, 2, 1, "", "is_energy_dependent"], [229, 2, 1, "", "lat_0"], [229, 2, 1, "", "lon_0"], [229, 2, 1, "", "parameters"], [229, 2, 1, "", "parameters_unique_names"], [229, 2, 1, "", "phi"], [229, 2, 1, "", "phi_0"], [229, 3, 1, "", "plot"], [229, 3, 1, "", "plot_error"], [229, 3, 1, "", "plot_grid"], [229, 3, 1, "", "plot_interactive"], [229, 3, 1, "", "plot_position_error"], [229, 2, 1, "", "position"], [229, 2, 1, "", "position_error"], [229, 2, 1, "", "position_lonlat"], [229, 2, 1, "", "r_0"], [229, 3, 1, "", "reassign"], [229, 2, 1, "", "tag"], [229, 3, 1, "", "to_dict"], [229, 3, 1, "", "to_region"], [229, 2, 1, "", "type"], [229, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.EBLAbsorptionNormSpectralModel": [[230, 3, 1, "", "__call__"], [230, 2, 1, "", "alpha_norm"], [230, 3, 1, "", "copy"], [230, 2, 1, "", "covariance"], [230, 2, 1, "", "default_parameters"], [230, 3, 1, "", "energy_flux"], [230, 3, 1, "", "energy_flux_error"], [230, 3, 1, "", "evaluate"], [230, 3, 1, "", "evaluate_error"], [230, 3, 1, "", "freeze"], [230, 3, 1, "", "from_dict"], [230, 3, 1, "", "from_parameters"], [230, 2, 1, "", "frozen"], [230, 3, 1, "", "integral"], [230, 3, 1, "", "integral_error"], [230, 3, 1, "", "inverse"], [230, 3, 1, "", "inverse_all"], [230, 2, 1, "", "is_norm_spectral_model"], [230, 2, 1, "", "parameters"], [230, 2, 1, "", "parameters_unique_names"], [230, 2, 1, "", "pivot_energy"], [230, 3, 1, "", "plot"], [230, 3, 1, "", "plot_error"], [230, 3, 1, "", "read"], [230, 3, 1, "", "read_builtin"], [230, 3, 1, "", "reassign"], [230, 2, 1, "", "redshift"], [230, 3, 1, "", "reference_fluxes"], [230, 3, 1, "", "spectral_index"], [230, 3, 1, "", "spectral_index_error"], [230, 2, 1, "", "tag"], [230, 3, 1, "", "to_dict"], [230, 2, 1, "", "type"], [230, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLaw3FGLSpectralModel": [[232, 3, 1, "", "__call__"], [232, 2, 1, "", "amplitude"], [232, 3, 1, "", "copy"], [232, 2, 1, "", "covariance"], [232, 2, 1, "", "default_parameters"], [232, 2, 1, "", "ecut"], [232, 3, 1, "", "energy_flux"], [232, 3, 1, "", "energy_flux_error"], [232, 3, 1, "", "evaluate"], [232, 3, 1, "", "evaluate_error"], [232, 3, 1, "", "freeze"], [232, 3, 1, "", "from_dict"], [232, 3, 1, "", "from_parameters"], [232, 2, 1, "", "frozen"], [232, 2, 1, "", "index"], [232, 3, 1, "", "integral"], [232, 3, 1, "", "integral_error"], [232, 3, 1, "", "inverse"], [232, 3, 1, "", "inverse_all"], [232, 2, 1, "", "is_norm_spectral_model"], [232, 2, 1, "", "parameters"], [232, 2, 1, "", "parameters_unique_names"], [232, 2, 1, "", "pivot_energy"], [232, 3, 1, "", "plot"], [232, 3, 1, "", "plot_error"], [232, 3, 1, "", "reassign"], [232, 2, 1, "", "reference"], [232, 3, 1, "", "reference_fluxes"], [232, 3, 1, "", "spectral_index"], [232, 3, 1, "", "spectral_index_error"], [232, 2, 1, "", "tag"], [232, 3, 1, "", "to_dict"], [232, 2, 1, "", "type"], [232, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawNormSpectralModel": [[233, 3, 1, "", "__call__"], [233, 2, 1, "", "alpha"], [233, 3, 1, "", "copy"], [233, 2, 1, "", "covariance"], [233, 2, 1, "", "default_parameters"], [233, 3, 1, "", "energy_flux"], [233, 3, 1, "", "energy_flux_error"], [233, 3, 1, "", "evaluate"], [233, 3, 1, "", "evaluate_error"], [233, 3, 1, "", "freeze"], [233, 3, 1, "", "from_dict"], [233, 3, 1, "", "from_parameters"], [233, 2, 1, "", "frozen"], [233, 2, 1, "", "index"], [233, 3, 1, "", "integral"], [233, 3, 1, "", "integral_error"], [233, 3, 1, "", "inverse"], [233, 3, 1, "", "inverse_all"], [233, 2, 1, "", "is_norm_spectral_model"], [233, 2, 1, "", "lambda_"], [233, 2, 1, "", "norm"], [233, 2, 1, "", "parameters"], [233, 2, 1, "", "parameters_unique_names"], [233, 2, 1, "", "pivot_energy"], [233, 3, 1, "", "plot"], [233, 3, 1, "", "plot_error"], [233, 3, 1, "", "reassign"], [233, 2, 1, "", "reference"], [233, 3, 1, "", "reference_fluxes"], [233, 3, 1, "", "spectral_index"], [233, 3, 1, "", "spectral_index_error"], [233, 2, 1, "", "tag"], [233, 3, 1, "", "to_dict"], [233, 2, 1, "", "type"], [233, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpCutoffPowerLawSpectralModel": [[234, 3, 1, "", "__call__"], [234, 2, 1, "", "alpha"], [234, 2, 1, "", "amplitude"], [234, 3, 1, "", "copy"], [234, 2, 1, "", "covariance"], [234, 2, 1, "", "default_parameters"], [234, 2, 1, "", "e_peak"], [234, 3, 1, "", "energy_flux"], [234, 3, 1, "", "energy_flux_error"], [234, 3, 1, "", "evaluate"], [234, 3, 1, "", "evaluate_error"], [234, 3, 1, "", "freeze"], [234, 3, 1, "", "from_dict"], [234, 3, 1, "", "from_parameters"], [234, 2, 1, "", "frozen"], [234, 2, 1, "", "index"], [234, 3, 1, "", "integral"], [234, 3, 1, "", "integral_error"], [234, 3, 1, "", "inverse"], [234, 3, 1, "", "inverse_all"], [234, 2, 1, "", "is_norm_spectral_model"], [234, 2, 1, "", "lambda_"], [234, 2, 1, "", "parameters"], [234, 2, 1, "", "parameters_unique_names"], [234, 2, 1, "", "pivot_energy"], [234, 3, 1, "", "plot"], [234, 3, 1, "", "plot_error"], [234, 3, 1, "", "reassign"], [234, 2, 1, "", "reference"], [234, 3, 1, "", "reference_fluxes"], [234, 3, 1, "", "spectral_index"], [234, 3, 1, "", "spectral_index_error"], [234, 2, 1, "", "tag"], [234, 3, 1, "", "to_dict"], [234, 2, 1, "", "type"], [234, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ExpDecayTemporalModel": [[235, 3, 1, "", "__call__"], [235, 3, 1, "", "copy"], [235, 2, 1, "", "covariance"], [235, 2, 1, "", "default_parameters"], [235, 3, 1, "", "evaluate"], [235, 3, 1, "", "freeze"], [235, 3, 1, "", "from_dict"], [235, 3, 1, "", "from_parameters"], [235, 2, 1, "", "frozen"], [235, 3, 1, "", "integral"], [235, 2, 1, "", "is_energy_dependent"], [235, 2, 1, "", "parameters"], [235, 2, 1, "", "parameters_unique_names"], [235, 3, 1, "", "plot"], [235, 3, 1, "", "reassign"], [235, 2, 1, "", "reference_time"], [235, 3, 1, "", "sample_time"], [235, 2, 1, "", "t0"], [235, 2, 1, "", "t_ref"], [235, 2, 1, "", "tag"], [235, 3, 1, "", "time_sum"], [235, 3, 1, "", "to_dict"], [235, 2, 1, "", "type"], [235, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.FoVBackgroundModel": [[236, 3, 1, "", "contributes"], [236, 3, 1, "", "copy"], [236, 2, 1, "", "covariance"], [236, 2, 1, "", "default_parameters"], [236, 3, 1, "", "evaluate"], [236, 3, 1, "", "evaluate_geom"], [236, 3, 1, "", "freeze"], [236, 3, 1, "", "from_dict"], [236, 3, 1, "", "from_parameters"], [236, 2, 1, "", "frozen"], [236, 2, 1, "", "name"], [236, 2, 1, "", "parameters"], [236, 2, 1, "", "parameters_unique_names"], [236, 3, 1, "", "reassign"], [236, 3, 1, "", "reset_to_default"], [236, 2, 1, "", "spatial_model"], [236, 2, 1, "", "spectral_model"], [236, 2, 1, "", "tag"], [236, 3, 1, "", "to_dict"], [236, 2, 1, "", "type"], [236, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianPrior": [[237, 3, 1, "", "__call__"], [237, 3, 1, "", "copy"], [237, 2, 1, "", "covariance"], [237, 2, 1, "", "default_parameters"], [237, 3, 1, "", "evaluate"], [237, 3, 1, "", "freeze"], [237, 3, 1, "", "from_dict"], [237, 3, 1, "", "from_parameters"], [237, 2, 1, "", "frozen"], [237, 2, 1, "", "mu"], [237, 2, 1, "", "parameters"], [237, 2, 1, "", "parameters_unique_names"], [237, 3, 1, "", "reassign"], [237, 2, 1, "", "sigma"], [237, 2, 1, "", "tag"], [237, 3, 1, "", "to_dict"], [237, 2, 1, "", "type"], [237, 3, 1, "", "unfreeze"], [237, 2, 1, "", "weight"]], "gammapy.modeling.models.GaussianSpatialModel": [[238, 3, 1, "", "__call__"], [238, 3, 1, "", "copy"], [238, 2, 1, "", "covariance"], [238, 2, 1, "", "default_parameters"], [238, 2, 1, "", "e"], [238, 3, 1, "", "evaluate"], [238, 3, 1, "", "evaluate_geom"], [238, 2, 1, "", "evaluation_bin_size_min"], [238, 2, 1, "", "evaluation_radius"], [238, 2, 1, "", "evaluation_region"], [238, 3, 1, "", "freeze"], [238, 3, 1, "", "from_dict"], [238, 3, 1, "", "from_parameters"], [238, 3, 1, "", "from_position"], [238, 2, 1, "", "frozen"], [238, 3, 1, "", "integrate_geom"], [238, 2, 1, "", "is_energy_dependent"], [238, 2, 1, "", "lat_0"], [238, 2, 1, "", "lon_0"], [238, 2, 1, "", "parameters"], [238, 2, 1, "", "parameters_unique_names"], [238, 2, 1, "", "phi"], [238, 2, 1, "", "phi_0"], [238, 3, 1, "", "plot"], [238, 3, 1, "", "plot_error"], [238, 3, 1, "", "plot_grid"], [238, 3, 1, "", "plot_interactive"], [238, 3, 1, "", "plot_position_error"], [238, 2, 1, "", "position"], [238, 2, 1, "", "position_error"], [238, 2, 1, "", "position_lonlat"], [238, 3, 1, "", "reassign"], [238, 2, 1, "", "sigma"], [238, 2, 1, "", "tag"], [238, 3, 1, "", "to_dict"], [238, 3, 1, "", "to_region"], [238, 2, 1, "", "type"], [238, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianSpectralModel": [[239, 3, 1, "", "__call__"], [239, 2, 1, "", "amplitude"], [239, 3, 1, "", "copy"], [239, 2, 1, "", "covariance"], [239, 2, 1, "", "default_parameters"], [239, 3, 1, "", "energy_flux"], [239, 3, 1, "", "energy_flux_error"], [239, 3, 1, "", "evaluate"], [239, 3, 1, "", "evaluate_error"], [239, 3, 1, "", "freeze"], [239, 3, 1, "", "from_dict"], [239, 3, 1, "", "from_parameters"], [239, 2, 1, "", "frozen"], [239, 3, 1, "", "integral"], [239, 3, 1, "", "integral_error"], [239, 3, 1, "", "inverse"], [239, 3, 1, "", "inverse_all"], [239, 2, 1, "", "is_norm_spectral_model"], [239, 2, 1, "", "mean"], [239, 2, 1, "", "parameters"], [239, 2, 1, "", "parameters_unique_names"], [239, 2, 1, "", "pivot_energy"], [239, 3, 1, "", "plot"], [239, 3, 1, "", "plot_error"], [239, 3, 1, "", "reassign"], [239, 3, 1, "", "reference_fluxes"], [239, 2, 1, "", "sigma"], [239, 3, 1, "", "spectral_index"], [239, 3, 1, "", "spectral_index_error"], [239, 2, 1, "", "tag"], [239, 3, 1, "", "to_dict"], [239, 2, 1, "", "type"], [239, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GaussianTemporalModel": [[240, 3, 1, "", "__call__"], [240, 3, 1, "", "copy"], [240, 2, 1, "", "covariance"], [240, 2, 1, "", "default_parameters"], [240, 3, 1, "", "evaluate"], [240, 3, 1, "", "freeze"], [240, 3, 1, "", "from_dict"], [240, 3, 1, "", "from_parameters"], [240, 2, 1, "", "frozen"], [240, 3, 1, "", "integral"], [240, 2, 1, "", "is_energy_dependent"], [240, 2, 1, "", "parameters"], [240, 2, 1, "", "parameters_unique_names"], [240, 3, 1, "", "plot"], [240, 3, 1, "", "reassign"], [240, 2, 1, "", "reference_time"], [240, 3, 1, "", "sample_time"], [240, 2, 1, "", "sigma"], [240, 2, 1, "", "t_ref"], [240, 2, 1, "", "tag"], [240, 3, 1, "", "time_sum"], [240, 3, 1, "", "to_dict"], [240, 2, 1, "", "type"], [240, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianSpatialModel": [[241, 3, 1, "", "__call__"], [241, 3, 1, "", "copy"], [241, 2, 1, "", "covariance"], [241, 2, 1, "", "default_parameters"], [241, 2, 1, "", "e"], [241, 2, 1, "", "eta"], [241, 3, 1, "", "evaluate"], [241, 3, 1, "", "evaluate_geom"], [241, 2, 1, "", "evaluation_bin_size_min"], [241, 2, 1, "", "evaluation_radius"], [241, 2, 1, "", "evaluation_region"], [241, 3, 1, "", "freeze"], [241, 3, 1, "", "from_dict"], [241, 3, 1, "", "from_parameters"], [241, 3, 1, "", "from_position"], [241, 2, 1, "", "frozen"], [241, 3, 1, "", "integrate_geom"], [241, 2, 1, "", "is_energy_dependent"], [241, 2, 1, "", "lat_0"], [241, 2, 1, "", "lon_0"], [241, 2, 1, "", "parameters"], [241, 2, 1, "", "parameters_unique_names"], [241, 2, 1, "", "phi"], [241, 2, 1, "", "phi_0"], [241, 3, 1, "", "plot"], [241, 3, 1, "", "plot_error"], [241, 3, 1, "", "plot_grid"], [241, 3, 1, "", "plot_interactive"], [241, 3, 1, "", "plot_position_error"], [241, 2, 1, "", "position"], [241, 2, 1, "", "position_error"], [241, 2, 1, "", "position_lonlat"], [241, 2, 1, "", "r_0"], [241, 3, 1, "", "reassign"], [241, 2, 1, "", "tag"], [241, 3, 1, "", "to_dict"], [241, 3, 1, "", "to_region"], [241, 2, 1, "", "type"], [241, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.GeneralizedGaussianTemporalModel": [[242, 3, 1, "", "__call__"], [242, 3, 1, "", "copy"], [242, 2, 1, "", "covariance"], [242, 2, 1, "", "default_parameters"], [242, 2, 1, "", "eta"], [242, 3, 1, "", "evaluate"], [242, 3, 1, "", "freeze"], [242, 3, 1, "", "from_dict"], [242, 3, 1, "", "from_parameters"], [242, 2, 1, "", "frozen"], [242, 3, 1, "", "integral"], [242, 2, 1, "", "is_energy_dependent"], [242, 2, 1, "", "parameters"], [242, 2, 1, "", "parameters_unique_names"], [242, 3, 1, "", "plot"], [242, 3, 1, "", "reassign"], [242, 2, 1, "", "reference_time"], [242, 3, 1, "", "sample_time"], [242, 2, 1, "", "t_decay"], [242, 2, 1, "", "t_ref"], [242, 2, 1, "", "t_rise"], [242, 2, 1, "", "tag"], [242, 3, 1, "", "time_sum"], [242, 3, 1, "", "to_dict"], [242, 2, 1, "", "type"], [242, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LightCurveTemplateTemporalModel": [[243, 3, 1, "", "__call__"], [243, 3, 1, "", "copy"], [243, 2, 1, "", "covariance"], [243, 2, 1, "", "default_parameters"], [243, 3, 1, "", "evaluate"], [243, 3, 1, "", "freeze"], [243, 3, 1, "", "from_dict"], [243, 3, 1, "", "from_parameters"], [243, 3, 1, "", "from_table"], [243, 2, 1, "", "frozen"], [243, 3, 1, "", "integral"], [243, 2, 1, "", "is_energy_dependent"], [243, 2, 1, "", "parameters"], [243, 2, 1, "", "parameters_unique_names"], [243, 3, 1, "", "plot"], [243, 3, 1, "", "read"], [243, 3, 1, "", "reassign"], [243, 2, 1, "", "reference_time"], [243, 3, 1, "", "sample_time"], [243, 2, 1, "", "t_ref"], [243, 2, 1, "", "tag"], [243, 3, 1, "", "time_sum"], [243, 3, 1, "", "to_dict"], [243, 3, 1, "", "to_table"], [243, 2, 1, "", "type"], [243, 3, 1, "", "unfreeze"], [243, 3, 1, "", "write"]], "gammapy.modeling.models.LinearTemporalModel": [[244, 3, 1, "", "__call__"], [244, 2, 1, "", "alpha"], [244, 2, 1, "", "beta"], [244, 3, 1, "", "copy"], [244, 2, 1, "", "covariance"], [244, 2, 1, "", "default_parameters"], [244, 3, 1, "", "evaluate"], [244, 3, 1, "", "freeze"], [244, 3, 1, "", "from_dict"], [244, 3, 1, "", "from_parameters"], [244, 2, 1, "", "frozen"], [244, 3, 1, "", "integral"], [244, 2, 1, "", "is_energy_dependent"], [244, 2, 1, "", "parameters"], [244, 2, 1, "", "parameters_unique_names"], [244, 3, 1, "", "plot"], [244, 3, 1, "", "reassign"], [244, 2, 1, "", "reference_time"], [244, 3, 1, "", "sample_time"], [244, 2, 1, "", "t_ref"], [244, 2, 1, "", "tag"], [244, 3, 1, "", "time_sum"], [244, 3, 1, "", "to_dict"], [244, 2, 1, "", "type"], [244, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaNormSpectralModel": [[245, 3, 1, "", "__call__"], [245, 2, 1, "", "alpha"], [245, 2, 1, "", "beta"], [245, 3, 1, "", "copy"], [245, 2, 1, "", "covariance"], [245, 2, 1, "", "default_parameters"], [245, 3, 1, "", "energy_flux"], [245, 3, 1, "", "energy_flux_error"], [245, 3, 1, "", "evaluate"], [245, 3, 1, "", "evaluate_error"], [245, 3, 1, "", "freeze"], [245, 3, 1, "", "from_dict"], [245, 3, 1, "", "from_log10"], [245, 3, 1, "", "from_parameters"], [245, 2, 1, "", "frozen"], [245, 3, 1, "", "integral"], [245, 3, 1, "", "integral_error"], [245, 3, 1, "", "inverse"], [245, 3, 1, "", "inverse_all"], [245, 2, 1, "", "is_norm_spectral_model"], [245, 2, 1, "", "norm"], [245, 2, 1, "", "parameters"], [245, 2, 1, "", "parameters_unique_names"], [245, 2, 1, "", "pivot_energy"], [245, 3, 1, "", "plot"], [245, 3, 1, "", "plot_error"], [245, 3, 1, "", "reassign"], [245, 2, 1, "", "reference"], [245, 3, 1, "", "reference_fluxes"], [245, 3, 1, "", "spectral_index"], [245, 3, 1, "", "spectral_index_error"], [245, 2, 1, "", "tag"], [245, 3, 1, "", "to_dict"], [245, 2, 1, "", "type"], [245, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogParabolaSpectralModel": [[246, 3, 1, "", "__call__"], [246, 2, 1, "", "alpha"], [246, 2, 1, "", "amplitude"], [246, 2, 1, "", "beta"], [246, 3, 1, "", "copy"], [246, 2, 1, "", "covariance"], [246, 2, 1, "", "default_parameters"], [246, 2, 1, "", "e_peak"], [246, 3, 1, "", "energy_flux"], [246, 3, 1, "", "energy_flux_error"], [246, 3, 1, "", "evaluate"], [246, 3, 1, "", "evaluate_error"], [246, 3, 1, "", "freeze"], [246, 3, 1, "", "from_dict"], [246, 3, 1, "", "from_log10"], [246, 3, 1, "", "from_parameters"], [246, 2, 1, "", "frozen"], [246, 3, 1, "", "integral"], [246, 3, 1, "", "integral_error"], [246, 3, 1, "", "inverse"], [246, 3, 1, "", "inverse_all"], [246, 2, 1, "", "is_norm_spectral_model"], [246, 2, 1, "", "parameters"], [246, 2, 1, "", "parameters_unique_names"], [246, 2, 1, "", "pivot_energy"], [246, 3, 1, "", "plot"], [246, 3, 1, "", "plot_error"], [246, 3, 1, "", "reassign"], [246, 2, 1, "", "reference"], [246, 3, 1, "", "reference_fluxes"], [246, 3, 1, "", "spectral_index"], [246, 3, 1, "", "spectral_index_error"], [246, 2, 1, "", "tag"], [246, 3, 1, "", "to_dict"], [246, 2, 1, "", "type"], [246, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.LogUniformPrior": [[247, 3, 1, "", "__call__"], [247, 3, 1, "", "copy"], [247, 2, 1, "", "covariance"], [247, 2, 1, "", "default_parameters"], [247, 3, 1, "", "evaluate"], [247, 3, 1, "", "freeze"], [247, 3, 1, "", "from_dict"], [247, 3, 1, "", "from_parameters"], [247, 2, 1, "", "frozen"], [247, 2, 1, "", "max"], [247, 2, 1, "", "min"], [247, 2, 1, "", "parameters"], [247, 2, 1, "", "parameters_unique_names"], [247, 3, 1, "", "reassign"], [247, 2, 1, "", "tag"], [247, 3, 1, "", "to_dict"], [247, 2, 1, "", "type"], [247, 3, 1, "", "unfreeze"], [247, 2, 1, "", "weight"]], "gammapy.modeling.models.MeyerCrabSpectralModel": [[249, 3, 1, "", "__call__"], [249, 2, 1, "", "coefficients"], [249, 3, 1, "", "copy"], [249, 2, 1, "", "covariance"], [249, 2, 1, "", "default_parameters"], [249, 3, 1, "", "energy_flux"], [249, 3, 1, "", "energy_flux_error"], [249, 3, 1, "", "evaluate"], [249, 3, 1, "", "evaluate_error"], [249, 3, 1, "", "freeze"], [249, 3, 1, "", "from_dict"], [249, 3, 1, "", "from_parameters"], [249, 2, 1, "", "frozen"], [249, 3, 1, "", "integral"], [249, 3, 1, "", "integral_error"], [249, 3, 1, "", "inverse"], [249, 3, 1, "", "inverse_all"], [249, 2, 1, "", "is_norm_spectral_model"], [249, 2, 1, "", "norm"], [249, 2, 1, "", "parameters"], [249, 2, 1, "", "parameters_unique_names"], [249, 2, 1, "", "pivot_energy"], [249, 3, 1, "", "plot"], [249, 3, 1, "", "plot_error"], [249, 3, 1, "", "reassign"], [249, 3, 1, "", "reference_fluxes"], [249, 3, 1, "", "spectral_index"], [249, 3, 1, "", "spectral_index_error"], [249, 3, 1, "", "to_dict"], [249, 2, 1, "", "type"], [249, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Model": [[250, 3, 1, "", "create"], [250, 3, 1, "", "from_dict"]], "gammapy.modeling.models.ModelBase": [[251, 3, 1, "", "copy"], [251, 2, 1, "", "covariance"], [251, 3, 1, "", "freeze"], [251, 3, 1, "", "from_dict"], [251, 3, 1, "", "from_parameters"], [251, 2, 1, "", "frozen"], [251, 2, 1, "", "parameters"], [251, 2, 1, "", "parameters_unique_names"], [251, 3, 1, "", "reassign"], [251, 3, 1, "", "to_dict"], [251, 2, 1, "", "type"], [251, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Models": [[252, 3, 1, "", "append"], [252, 3, 1, "", "clear"], [252, 3, 1, "", "copy"], [252, 3, 1, "", "count"], [252, 2, 1, "", "covariance"], [252, 3, 1, "", "extend"], [252, 3, 1, "", "freeze"], [252, 3, 1, "", "from_dict"], [252, 3, 1, "", "from_yaml"], [252, 2, 1, "", "frozen"], [252, 3, 1, "", "index"], [252, 3, 1, "", "insert"], [252, 2, 1, "", "names"], [252, 2, 1, "", "parameters"], [252, 2, 1, "", "parameters_unique_names"], [252, 3, 1, "", "plot_positions"], [252, 3, 1, "", "plot_regions"], [252, 3, 1, "", "pop"], [252, 2, 1, "", "positions"], [252, 3, 1, "", "read"], [252, 3, 1, "", "read_covariance"], [252, 3, 1, "", "reassign"], [252, 3, 1, "", "remove"], [252, 3, 1, "", "restore_status"], [252, 3, 1, "", "reverse"], [252, 3, 1, "", "select"], [252, 3, 1, "", "select_from_geom"], [252, 3, 1, "", "select_mask"], [252, 3, 1, "", "select_region"], [252, 3, 1, "", "selection_mask"], [252, 3, 1, "", "set_parameters_bounds"], [252, 3, 1, "", "set_prior"], [252, 3, 1, "", "to_dict"], [252, 3, 1, "", "to_parameters_table"], [252, 3, 1, "", "to_regions"], [252, 3, 1, "", "to_template_sky_model"], [252, 3, 1, "", "to_template_spectral_model"], [252, 3, 1, "", "to_yaml"], [252, 3, 1, "", "unfreeze"], [252, 3, 1, "", "update_link_label"], [252, 3, 1, "", "update_parameters_from_table"], [252, 2, 1, "", "wcs_geom"], [252, 3, 1, "", "write"], [252, 3, 1, "", "write_covariance"]], "gammapy.modeling.models.NaimaSpectralModel": [[253, 3, 1, "", "__call__"], [253, 3, 1, "", "copy"], [253, 2, 1, "", "covariance"], [253, 2, 1, "", "default_parameters"], [253, 3, 1, "", "energy_flux"], [253, 3, 1, "", "energy_flux_error"], [253, 3, 1, "", "evaluate"], [253, 3, 1, "", "evaluate_error"], [253, 3, 1, "", "freeze"], [253, 3, 1, "", "from_dict"], [253, 3, 1, "", "from_parameters"], [253, 2, 1, "", "frozen"], [253, 2, 1, "", "include_ssc"], [253, 3, 1, "", "integral"], [253, 3, 1, "", "integral_error"], [253, 3, 1, "", "inverse"], [253, 3, 1, "", "inverse_all"], [253, 2, 1, "", "is_norm_spectral_model"], [253, 2, 1, "", "parameters"], [253, 2, 1, "", "parameters_unique_names"], [253, 2, 1, "", "particle_distribution"], [253, 2, 1, "", "pivot_energy"], [253, 3, 1, "", "plot"], [253, 3, 1, "", "plot_error"], [253, 3, 1, "", "reassign"], [253, 3, 1, "", "reference_fluxes"], [253, 3, 1, "", "spectral_index"], [253, 3, 1, "", "spectral_index_error"], [253, 2, 1, "", "ssc_model"], [253, 2, 1, "", "tag"], [253, 3, 1, "", "to_dict"], [253, 2, 1, "", "type"], [253, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpatialModel": [[254, 3, 1, "", "__call__"], [254, 2, 1, "", "coords"], [254, 3, 1, "", "copy"], [254, 2, 1, "", "covariance"], [254, 2, 1, "", "default_parameters"], [254, 3, 1, "", "evaluate"], [254, 3, 1, "", "evaluate_geom"], [254, 2, 1, "", "evaluation_bin_size_min"], [254, 2, 1, "", "evaluation_radius"], [254, 2, 1, "", "evaluation_region"], [254, 3, 1, "", "freeze"], [254, 3, 1, "", "from_dict"], [254, 3, 1, "", "from_parameters"], [254, 3, 1, "", "from_position"], [254, 2, 1, "", "frozen"], [254, 3, 1, "", "integrate_geom"], [254, 2, 1, "", "is_energy_dependent"], [254, 2, 1, "", "norms"], [254, 2, 1, "", "parameters"], [254, 2, 1, "", "parameters_unique_names"], [254, 2, 1, "", "phi_0"], [254, 3, 1, "", "plot"], [254, 3, 1, "", "plot_error"], [254, 3, 1, "", "plot_grid"], [254, 3, 1, "", "plot_interactive"], [254, 3, 1, "", "plot_position_error"], [254, 2, 1, "", "position"], [254, 2, 1, "", "position_error"], [254, 2, 1, "", "position_lonlat"], [254, 3, 1, "", "reassign"], [254, 2, 1, "", "tag"], [254, 3, 1, "", "to_dict"], [254, 2, 1, "", "type"], [254, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PiecewiseNormSpectralModel": [[255, 3, 1, "", "__call__"], [255, 3, 1, "", "copy"], [255, 2, 1, "", "covariance"], [255, 2, 1, "", "default_parameters"], [255, 2, 1, "", "energy"], [255, 3, 1, "", "energy_flux"], [255, 3, 1, "", "energy_flux_error"], [255, 3, 1, "", "evaluate"], [255, 3, 1, "", "evaluate_error"], [255, 3, 1, "", "freeze"], [255, 3, 1, "", "from_dict"], [255, 3, 1, "", "from_parameters"], [255, 2, 1, "", "frozen"], [255, 3, 1, "", "integral"], [255, 3, 1, "", "integral_error"], [255, 3, 1, "", "inverse"], [255, 3, 1, "", "inverse_all"], [255, 2, 1, "", "is_norm_spectral_model"], [255, 2, 1, "", "norms"], [255, 2, 1, "", "parameters"], [255, 2, 1, "", "parameters_unique_names"], [255, 2, 1, "", "pivot_energy"], [255, 3, 1, "", "plot"], [255, 3, 1, "", "plot_error"], [255, 3, 1, "", "reassign"], [255, 3, 1, "", "reference_fluxes"], [255, 3, 1, "", "spectral_index"], [255, 3, 1, "", "spectral_index_error"], [255, 2, 1, "", "tag"], [255, 3, 1, "", "to_dict"], [255, 2, 1, "", "type"], [255, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PointSpatialModel": [[256, 3, 1, "", "__call__"], [256, 3, 1, "", "copy"], [256, 2, 1, "", "covariance"], [256, 2, 1, "", "default_parameters"], [256, 3, 1, "", "evaluate_geom"], [256, 2, 1, "", "evaluation_bin_size_min"], [256, 2, 1, "", "evaluation_radius"], [256, 2, 1, "", "evaluation_region"], [256, 3, 1, "", "freeze"], [256, 3, 1, "", "from_dict"], [256, 3, 1, "", "from_parameters"], [256, 3, 1, "", "from_position"], [256, 2, 1, "", "frozen"], [256, 3, 1, "", "integrate_geom"], [256, 2, 1, "", "is_energy_dependent"], [256, 2, 1, "", "lat_0"], [256, 2, 1, "", "lon_0"], [256, 2, 1, "", "parameters"], [256, 2, 1, "", "parameters_unique_names"], [256, 2, 1, "", "phi_0"], [256, 3, 1, "", "plot"], [256, 3, 1, "", "plot_error"], [256, 3, 1, "", "plot_grid"], [256, 3, 1, "", "plot_interactive"], [256, 3, 1, "", "plot_position_error"], [256, 2, 1, "", "position"], [256, 2, 1, "", "position_error"], [256, 2, 1, "", "position_lonlat"], [256, 3, 1, "", "reassign"], [256, 2, 1, "", "tag"], [256, 3, 1, "", "to_dict"], [256, 3, 1, "", "to_region"], [256, 2, 1, "", "type"], [256, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLaw2SpectralModel": [[257, 3, 1, "", "__call__"], [257, 2, 1, "", "amplitude"], [257, 3, 1, "", "copy"], [257, 2, 1, "", "covariance"], [257, 2, 1, "", "default_parameters"], [257, 2, 1, "", "emax"], [257, 2, 1, "", "emin"], [257, 3, 1, "", "energy_flux"], [257, 3, 1, "", "energy_flux_error"], [257, 3, 1, "", "evaluate"], [257, 3, 1, "", "evaluate_error"], [257, 3, 1, "", "evaluate_integral"], [257, 3, 1, "", "freeze"], [257, 3, 1, "", "from_dict"], [257, 3, 1, "", "from_parameters"], [257, 2, 1, "", "frozen"], [257, 2, 1, "", "index"], [257, 3, 1, "", "integral"], [257, 3, 1, "", "integral_error"], [257, 3, 1, "", "inverse"], [257, 3, 1, "", "inverse_all"], [257, 2, 1, "", "is_norm_spectral_model"], [257, 2, 1, "", "parameters"], [257, 2, 1, "", "parameters_unique_names"], [257, 2, 1, "", "pivot_energy"], [257, 3, 1, "", "plot"], [257, 3, 1, "", "plot_error"], [257, 3, 1, "", "reassign"], [257, 3, 1, "", "reference_fluxes"], [257, 3, 1, "", "spectral_index"], [257, 3, 1, "", "spectral_index_error"], [257, 2, 1, "", "tag"], [257, 3, 1, "", "to_dict"], [257, 2, 1, "", "type"], [257, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawNormSpectralModel": [[258, 3, 1, "", "__call__"], [258, 3, 1, "", "copy"], [258, 2, 1, "", "covariance"], [258, 2, 1, "", "default_parameters"], [258, 3, 1, "", "energy_flux"], [258, 3, 1, "", "energy_flux_error"], [258, 3, 1, "", "evaluate"], [258, 3, 1, "", "evaluate_energy_flux"], [258, 3, 1, "", "evaluate_error"], [258, 3, 1, "", "evaluate_integral"], [258, 3, 1, "", "freeze"], [258, 3, 1, "", "from_dict"], [258, 3, 1, "", "from_parameters"], [258, 2, 1, "", "frozen"], [258, 3, 1, "", "integral"], [258, 3, 1, "", "integral_error"], [258, 3, 1, "", "inverse"], [258, 3, 1, "", "inverse_all"], [258, 2, 1, "", "is_norm_spectral_model"], [258, 2, 1, "", "norm"], [258, 2, 1, "", "parameters"], [258, 2, 1, "", "parameters_unique_names"], [258, 2, 1, "", "pivot_energy"], [258, 3, 1, "", "plot"], [258, 3, 1, "", "plot_error"], [258, 3, 1, "", "reassign"], [258, 2, 1, "", "reference"], [258, 3, 1, "", "reference_fluxes"], [258, 3, 1, "", "spectral_index"], [258, 3, 1, "", "spectral_index_error"], [258, 2, 1, "", "tag"], [258, 2, 1, "", "tilt"], [258, 3, 1, "", "to_dict"], [258, 2, 1, "", "type"], [258, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawSpectralModel": [[259, 3, 1, "", "__call__"], [259, 2, 1, "", "amplitude"], [259, 3, 1, "", "copy"], [259, 2, 1, "", "covariance"], [259, 2, 1, "", "default_parameters"], [259, 3, 1, "", "energy_flux"], [259, 3, 1, "", "energy_flux_error"], [259, 3, 1, "", "evaluate"], [259, 3, 1, "", "evaluate_energy_flux"], [259, 3, 1, "", "evaluate_error"], [259, 3, 1, "", "evaluate_integral"], [259, 3, 1, "", "freeze"], [259, 3, 1, "", "from_dict"], [259, 3, 1, "", "from_parameters"], [259, 2, 1, "", "frozen"], [259, 2, 1, "", "index"], [259, 3, 1, "", "integral"], [259, 3, 1, "", "integral_error"], [259, 3, 1, "", "inverse"], [259, 3, 1, "", "inverse_all"], [259, 2, 1, "", "is_norm_spectral_model"], [259, 2, 1, "", "parameters"], [259, 2, 1, "", "parameters_unique_names"], [259, 2, 1, "", "pivot_energy"], [259, 3, 1, "", "plot"], [259, 3, 1, "", "plot_error"], [259, 3, 1, "", "reassign"], [259, 2, 1, "", "reference"], [259, 3, 1, "", "reference_fluxes"], [259, 3, 1, "", "spectral_index"], [259, 3, 1, "", "spectral_index_error"], [259, 2, 1, "", "tag"], [259, 3, 1, "", "to_dict"], [259, 2, 1, "", "type"], [259, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.PowerLawTemporalModel": [[260, 3, 1, "", "__call__"], [260, 2, 1, "", "alpha"], [260, 3, 1, "", "copy"], [260, 2, 1, "", "covariance"], [260, 2, 1, "", "default_parameters"], [260, 3, 1, "", "evaluate"], [260, 3, 1, "", "freeze"], [260, 3, 1, "", "from_dict"], [260, 3, 1, "", "from_parameters"], [260, 2, 1, "", "frozen"], [260, 3, 1, "", "integral"], [260, 2, 1, "", "is_energy_dependent"], [260, 2, 1, "", "parameters"], [260, 2, 1, "", "parameters_unique_names"], [260, 3, 1, "", "plot"], [260, 3, 1, "", "reassign"], [260, 2, 1, "", "reference_time"], [260, 3, 1, "", "sample_time"], [260, 2, 1, "", "t0"], [260, 2, 1, "", "t_ref"], [260, 2, 1, "", "tag"], [260, 3, 1, "", "time_sum"], [260, 3, 1, "", "to_dict"], [260, 2, 1, "", "type"], [260, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Prior": [[261, 3, 1, "", "__call__"], [261, 3, 1, "", "copy"], [261, 2, 1, "", "covariance"], [261, 2, 1, "", "default_parameters"], [261, 3, 1, "", "freeze"], [261, 3, 1, "", "from_dict"], [261, 3, 1, "", "from_parameters"], [261, 2, 1, "", "frozen"], [261, 2, 1, "", "parameters"], [261, 2, 1, "", "parameters_unique_names"], [261, 3, 1, "", "reassign"], [261, 3, 1, "", "to_dict"], [261, 2, 1, "", "type"], [261, 3, 1, "", "unfreeze"], [261, 2, 1, "", "weight"]], "gammapy.modeling.models.ScaleSpectralModel": [[264, 3, 1, "", "__call__"], [264, 3, 1, "", "copy"], [264, 2, 1, "", "covariance"], [264, 2, 1, "", "default_parameters"], [264, 3, 1, "", "energy_flux"], [264, 3, 1, "", "energy_flux_error"], [264, 3, 1, "", "evaluate"], [264, 3, 1, "", "evaluate_error"], [264, 3, 1, "", "freeze"], [264, 3, 1, "", "from_dict"], [264, 3, 1, "", "from_parameters"], [264, 2, 1, "", "frozen"], [264, 3, 1, "", "integral"], [264, 3, 1, "", "integral_error"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "inverse_all"], [264, 2, 1, "", "is_norm_spectral_model"], [264, 2, 1, "", "norm"], [264, 2, 1, "", "parameters"], [264, 2, 1, "", "parameters_unique_names"], [264, 2, 1, "", "pivot_energy"], [264, 3, 1, "", "plot"], [264, 3, 1, "", "plot_error"], [264, 3, 1, "", "reassign"], [264, 3, 1, "", "reference_fluxes"], [264, 3, 1, "", "spectral_index"], [264, 3, 1, "", "spectral_index_error"], [264, 2, 1, "", "tag"], [264, 3, 1, "", "to_dict"], [264, 2, 1, "", "type"], [264, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.Shell2SpatialModel": [[265, 3, 1, "", "__call__"], [265, 3, 1, "", "copy"], [265, 2, 1, "", "covariance"], [265, 2, 1, "", "default_parameters"], [265, 2, 1, "", "eta"], [265, 3, 1, "", "evaluate"], [265, 3, 1, "", "evaluate_geom"], [265, 2, 1, "", "evaluation_bin_size_min"], [265, 2, 1, "", "evaluation_radius"], [265, 2, 1, "", "evaluation_region"], [265, 3, 1, "", "freeze"], [265, 3, 1, "", "from_dict"], [265, 3, 1, "", "from_parameters"], [265, 3, 1, "", "from_position"], [265, 2, 1, "", "frozen"], [265, 3, 1, "", "integrate_geom"], [265, 2, 1, "", "is_energy_dependent"], [265, 2, 1, "", "lat_0"], [265, 2, 1, "", "lon_0"], [265, 2, 1, "", "parameters"], [265, 2, 1, "", "parameters_unique_names"], [265, 2, 1, "", "phi_0"], [265, 3, 1, "", "plot"], [265, 3, 1, "", "plot_error"], [265, 3, 1, "", "plot_grid"], [265, 3, 1, "", "plot_interactive"], [265, 3, 1, "", "plot_position_error"], [265, 2, 1, "", "position"], [265, 2, 1, "", "position_error"], [265, 2, 1, "", "position_lonlat"], [265, 2, 1, "", "r_0"], [265, 2, 1, "", "r_in"], [265, 3, 1, "", "reassign"], [265, 2, 1, "", "tag"], [265, 3, 1, "", "to_dict"], [265, 3, 1, "", "to_region"], [265, 2, 1, "", "type"], [265, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.ShellSpatialModel": [[266, 3, 1, "", "__call__"], [266, 3, 1, "", "copy"], [266, 2, 1, "", "covariance"], [266, 2, 1, "", "default_parameters"], [266, 3, 1, "", "evaluate"], [266, 3, 1, "", "evaluate_geom"], [266, 2, 1, "", "evaluation_bin_size_min"], [266, 2, 1, "", "evaluation_radius"], [266, 2, 1, "", "evaluation_region"], [266, 3, 1, "", "freeze"], [266, 3, 1, "", "from_dict"], [266, 3, 1, "", "from_parameters"], [266, 3, 1, "", "from_position"], [266, 2, 1, "", "frozen"], [266, 3, 1, "", "integrate_geom"], [266, 2, 1, "", "is_energy_dependent"], [266, 2, 1, "", "lat_0"], [266, 2, 1, "", "lon_0"], [266, 2, 1, "", "parameters"], [266, 2, 1, "", "parameters_unique_names"], [266, 2, 1, "", "phi_0"], [266, 3, 1, "", "plot"], [266, 3, 1, "", "plot_error"], [266, 3, 1, "", "plot_grid"], [266, 3, 1, "", "plot_interactive"], [266, 3, 1, "", "plot_position_error"], [266, 2, 1, "", "position"], [266, 2, 1, "", "position_error"], [266, 2, 1, "", "position_lonlat"], [266, 2, 1, "", "radius"], [266, 3, 1, "", "reassign"], [266, 2, 1, "", "tag"], [266, 3, 1, "", "to_dict"], [266, 3, 1, "", "to_region"], [266, 2, 1, "", "type"], [266, 3, 1, "", "unfreeze"], [266, 2, 1, "", "width"]], "gammapy.modeling.models.SineTemporalModel": [[267, 3, 1, "", "__call__"], [267, 2, 1, "", "amp"], [267, 3, 1, "", "copy"], [267, 2, 1, "", "covariance"], [267, 2, 1, "", "default_parameters"], [267, 3, 1, "", "evaluate"], [267, 3, 1, "", "freeze"], [267, 3, 1, "", "from_dict"], [267, 3, 1, "", "from_parameters"], [267, 2, 1, "", "frozen"], [267, 3, 1, "", "integral"], [267, 2, 1, "", "is_energy_dependent"], [267, 2, 1, "", "omega"], [267, 2, 1, "", "parameters"], [267, 2, 1, "", "parameters_unique_names"], [267, 3, 1, "", "plot"], [267, 3, 1, "", "reassign"], [267, 2, 1, "", "reference_time"], [267, 3, 1, "", "sample_time"], [267, 2, 1, "", "t_ref"], [267, 2, 1, "", "tag"], [267, 3, 1, "", "time_sum"], [267, 3, 1, "", "to_dict"], [267, 2, 1, "", "type"], [267, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SkyModel": [[268, 3, 1, "", "__call__"], [268, 3, 1, "", "contributes"], [268, 3, 1, "", "copy"], [268, 2, 1, "", "covariance"], [268, 3, 1, "", "create"], [268, 2, 1, "", "default_parameters"], [268, 3, 1, "", "evaluate"], [268, 3, 1, "", "evaluate_geom"], [268, 2, 1, "", "evaluation_bin_size_min"], [268, 2, 1, "", "evaluation_radius"], [268, 2, 1, "", "evaluation_region"], [268, 2, 1, "", "frame"], [268, 3, 1, "", "freeze"], [268, 3, 1, "", "from_dict"], [268, 3, 1, "", "from_parameters"], [268, 2, 1, "", "frozen"], [268, 3, 1, "", "integrate_geom"], [268, 2, 1, "", "name"], [268, 2, 1, "", "parameters"], [268, 2, 1, "", "parameters_unique_names"], [268, 2, 1, "", "position"], [268, 2, 1, "", "position_lonlat"], [268, 3, 1, "", "reassign"], [268, 2, 1, "", "spatial_model"], [268, 2, 1, "", "spectral_model"], [268, 2, 1, "", "tag"], [268, 2, 1, "", "temporal_model"], [268, 3, 1, "", "to_dict"], [268, 2, 1, "", "type"], [268, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SmoothBrokenPowerLawSpectralModel": [[269, 3, 1, "", "__call__"], [269, 2, 1, "", "amplitude"], [269, 2, 1, "", "beta"], [269, 3, 1, "", "copy"], [269, 2, 1, "", "covariance"], [269, 2, 1, "", "default_parameters"], [269, 2, 1, "", "ebreak"], [269, 3, 1, "", "energy_flux"], [269, 3, 1, "", "energy_flux_error"], [269, 3, 1, "", "evaluate"], [269, 3, 1, "", "evaluate_error"], [269, 3, 1, "", "freeze"], [269, 3, 1, "", "from_dict"], [269, 3, 1, "", "from_parameters"], [269, 2, 1, "", "frozen"], [269, 2, 1, "", "index1"], [269, 2, 1, "", "index2"], [269, 3, 1, "", "integral"], [269, 3, 1, "", "integral_error"], [269, 3, 1, "", "inverse"], [269, 3, 1, "", "inverse_all"], [269, 2, 1, "", "is_norm_spectral_model"], [269, 2, 1, "", "parameters"], [269, 2, 1, "", "parameters_unique_names"], [269, 2, 1, "", "pivot_energy"], [269, 3, 1, "", "plot"], [269, 3, 1, "", "plot_error"], [269, 3, 1, "", "reassign"], [269, 2, 1, "", "reference"], [269, 3, 1, "", "reference_fluxes"], [269, 3, 1, "", "spectral_index"], [269, 3, 1, "", "spectral_index_error"], [269, 2, 1, "", "tag"], [269, 3, 1, "", "to_dict"], [269, 2, 1, "", "type"], [269, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpatialModel": [[270, 3, 1, "", "__call__"], [270, 3, 1, "", "copy"], [270, 2, 1, "", "covariance"], [270, 2, 1, "", "default_parameters"], [270, 3, 1, "", "evaluate_geom"], [270, 2, 1, "", "evaluation_bin_size_min"], [270, 2, 1, "", "evaluation_radius"], [270, 2, 1, "", "evaluation_region"], [270, 3, 1, "", "freeze"], [270, 3, 1, "", "from_dict"], [270, 3, 1, "", "from_parameters"], [270, 3, 1, "", "from_position"], [270, 2, 1, "", "frozen"], [270, 3, 1, "", "integrate_geom"], [270, 2, 1, "", "is_energy_dependent"], [270, 2, 1, "", "parameters"], [270, 2, 1, "", "parameters_unique_names"], [270, 2, 1, "", "phi_0"], [270, 3, 1, "", "plot"], [270, 3, 1, "", "plot_error"], [270, 3, 1, "", "plot_grid"], [270, 3, 1, "", "plot_interactive"], [270, 3, 1, "", "plot_position_error"], [270, 2, 1, "", "position"], [270, 2, 1, "", "position_error"], [270, 2, 1, "", "position_lonlat"], [270, 3, 1, "", "reassign"], [270, 3, 1, "", "to_dict"], [270, 2, 1, "", "type"], [270, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SpectralModel": [[271, 3, 1, "", "__call__"], [271, 3, 1, "", "copy"], [271, 2, 1, "", "covariance"], [271, 2, 1, "", "default_parameters"], [271, 3, 1, "", "energy_flux"], [271, 3, 1, "", "energy_flux_error"], [271, 3, 1, "", "evaluate_error"], [271, 3, 1, "", "freeze"], [271, 3, 1, "", "from_dict"], [271, 3, 1, "", "from_parameters"], [271, 2, 1, "", "frozen"], [271, 3, 1, "", "integral"], [271, 3, 1, "", "integral_error"], [271, 3, 1, "", "inverse"], [271, 3, 1, "", "inverse_all"], [271, 2, 1, "", "is_norm_spectral_model"], [271, 2, 1, "", "parameters"], [271, 2, 1, "", "parameters_unique_names"], [271, 2, 1, "", "pivot_energy"], [271, 3, 1, "", "plot"], [271, 3, 1, "", "plot_error"], [271, 3, 1, "", "reassign"], [271, 3, 1, "", "reference_fluxes"], [271, 3, 1, "", "spectral_index"], [271, 3, 1, "", "spectral_index_error"], [271, 3, 1, "", "to_dict"], [271, 2, 1, "", "type"], [271, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw3FGLSpectralModel": [[272, 3, 1, "", "__call__"], [272, 2, 1, "", "amplitude"], [272, 3, 1, "", "copy"], [272, 2, 1, "", "covariance"], [272, 2, 1, "", "default_parameters"], [272, 2, 1, "", "ecut"], [272, 3, 1, "", "energy_flux"], [272, 3, 1, "", "energy_flux_error"], [272, 3, 1, "", "evaluate"], [272, 3, 1, "", "evaluate_error"], [272, 3, 1, "", "freeze"], [272, 3, 1, "", "from_dict"], [272, 3, 1, "", "from_parameters"], [272, 2, 1, "", "frozen"], [272, 2, 1, "", "index_1"], [272, 2, 1, "", "index_2"], [272, 3, 1, "", "integral"], [272, 3, 1, "", "integral_error"], [272, 3, 1, "", "inverse"], [272, 3, 1, "", "inverse_all"], [272, 2, 1, "", "is_norm_spectral_model"], [272, 2, 1, "", "parameters"], [272, 2, 1, "", "parameters_unique_names"], [272, 2, 1, "", "pivot_energy"], [272, 3, 1, "", "plot"], [272, 3, 1, "", "plot_error"], [272, 3, 1, "", "reassign"], [272, 2, 1, "", "reference"], [272, 3, 1, "", "reference_fluxes"], [272, 3, 1, "", "spectral_index"], [272, 3, 1, "", "spectral_index_error"], [272, 2, 1, "", "tag"], [272, 3, 1, "", "to_dict"], [272, 2, 1, "", "type"], [272, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLDR3SpectralModel": [[273, 3, 1, "", "__call__"], [273, 2, 1, "", "amplitude"], [273, 3, 1, "", "copy"], [273, 2, 1, "", "covariance"], [273, 2, 1, "", "default_parameters"], [273, 2, 1, "", "e_peak"], [273, 3, 1, "", "energy_flux"], [273, 3, 1, "", "energy_flux_error"], [273, 3, 1, "", "evaluate"], [273, 3, 1, "", "evaluate_error"], [273, 2, 1, "", "expfactor"], [273, 3, 1, "", "freeze"], [273, 3, 1, "", "from_dict"], [273, 3, 1, "", "from_parameters"], [273, 2, 1, "", "frozen"], [273, 2, 1, "", "index_1"], [273, 2, 1, "", "index_2"], [273, 3, 1, "", "integral"], [273, 3, 1, "", "integral_error"], [273, 3, 1, "", "inverse"], [273, 3, 1, "", "inverse_all"], [273, 2, 1, "", "is_norm_spectral_model"], [273, 2, 1, "", "parameters"], [273, 2, 1, "", "parameters_unique_names"], [273, 2, 1, "", "pivot_energy"], [273, 3, 1, "", "plot"], [273, 3, 1, "", "plot_error"], [273, 3, 1, "", "reassign"], [273, 2, 1, "", "reference"], [273, 3, 1, "", "reference_fluxes"], [273, 3, 1, "", "spectral_index"], [273, 3, 1, "", "spectral_index_error"], [273, 2, 1, "", "tag"], [273, 3, 1, "", "to_dict"], [273, 2, 1, "", "type"], [273, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.SuperExpCutoffPowerLaw4FGLSpectralModel": [[274, 3, 1, "", "__call__"], [274, 2, 1, "", "amplitude"], [274, 3, 1, "", "copy"], [274, 2, 1, "", "covariance"], [274, 2, 1, "", "default_parameters"], [274, 3, 1, "", "energy_flux"], [274, 3, 1, "", "energy_flux_error"], [274, 3, 1, "", "evaluate"], [274, 3, 1, "", "evaluate_error"], [274, 2, 1, "", "expfactor"], [274, 3, 1, "", "freeze"], [274, 3, 1, "", "from_dict"], [274, 3, 1, "", "from_parameters"], [274, 2, 1, "", "frozen"], [274, 2, 1, "", "index_1"], [274, 2, 1, "", "index_2"], [274, 3, 1, "", "integral"], [274, 3, 1, "", "integral_error"], [274, 3, 1, "", "inverse"], [274, 3, 1, "", "inverse_all"], [274, 2, 1, "", "is_norm_spectral_model"], [274, 2, 1, "", "parameters"], [274, 2, 1, "", "parameters_unique_names"], [274, 2, 1, "", "pivot_energy"], [274, 3, 1, "", "plot"], [274, 3, 1, "", "plot_error"], [274, 3, 1, "", "reassign"], [274, 2, 1, "", "reference"], [274, 3, 1, "", "reference_fluxes"], [274, 3, 1, "", "spectral_index"], [274, 3, 1, "", "spectral_index_error"], [274, 2, 1, "", "tag"], [274, 3, 1, "", "to_dict"], [274, 2, 1, "", "type"], [274, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemplateNDSpatialModel": [[276, 3, 1, "", "__call__"], [276, 3, 1, "", "copy"], [276, 2, 1, "", "covariance"], [276, 2, 1, "", "default_parameters"], [276, 3, 1, "", "evaluate"], [276, 3, 1, "", "evaluate_geom"], [276, 2, 1, "", "evaluation_bin_size_min"], [276, 2, 1, "", "evaluation_radius"], [276, 2, 1, "", "evaluation_region"], [276, 3, 1, "", "freeze"], [276, 3, 1, "", "from_dict"], [276, 3, 1, "", "from_parameters"], [276, 3, 1, "", "from_position"], [276, 2, 1, "", "frozen"], [276, 3, 1, "", "integrate_geom"], [276, 2, 1, "", "is_energy_dependent"], [276, 2, 1, "", "map"], [276, 2, 1, "", "parameters"], [276, 2, 1, "", "parameters_unique_names"], [276, 2, 1, "", "phi_0"], [276, 3, 1, "", "plot"], [276, 3, 1, "", "plot_error"], [276, 3, 1, "", "plot_grid"], [276, 3, 1, "", "plot_interactive"], [276, 3, 1, "", "plot_position_error"], [276, 2, 1, "", "position"], [276, 2, 1, "", "position_error"], [276, 2, 1, "", "position_lonlat"], [276, 3, 1, "", "reassign"], [276, 2, 1, "", "tag"], [276, 3, 1, "", "to_dict"], [276, 2, 1, "", "type"], [276, 3, 1, "", "unfreeze"], [276, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNDSpectralModel": [[277, 3, 1, "", "__call__"], [277, 3, 1, "", "copy"], [277, 2, 1, "", "covariance"], [277, 2, 1, "", "default_parameters"], [277, 3, 1, "", "energy_flux"], [277, 3, 1, "", "energy_flux_error"], [277, 3, 1, "", "evaluate"], [277, 3, 1, "", "evaluate_error"], [277, 3, 1, "", "freeze"], [277, 3, 1, "", "from_dict"], [277, 3, 1, "", "from_parameters"], [277, 2, 1, "", "frozen"], [277, 3, 1, "", "integral"], [277, 3, 1, "", "integral_error"], [277, 3, 1, "", "inverse"], [277, 3, 1, "", "inverse_all"], [277, 2, 1, "", "is_norm_spectral_model"], [277, 2, 1, "", "map"], [277, 2, 1, "", "parameters"], [277, 2, 1, "", "parameters_unique_names"], [277, 2, 1, "", "pivot_energy"], [277, 3, 1, "", "plot"], [277, 3, 1, "", "plot_error"], [277, 3, 1, "", "reassign"], [277, 3, 1, "", "reference_fluxes"], [277, 3, 1, "", "spectral_index"], [277, 3, 1, "", "spectral_index_error"], [277, 2, 1, "", "tag"], [277, 3, 1, "", "to_dict"], [277, 2, 1, "", "type"], [277, 3, 1, "", "unfreeze"], [277, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateNPredModel": [[278, 3, 1, "", "copy"], [278, 2, 1, "", "covariance"], [278, 3, 1, "", "cutout"], [278, 2, 1, "", "default_parameters"], [278, 2, 1, "", "energy_center"], [278, 3, 1, "", "evaluate"], [278, 2, 1, "", "evaluation_radius"], [278, 3, 1, "", "freeze"], [278, 3, 1, "", "from_dict"], [278, 3, 1, "", "from_parameters"], [278, 2, 1, "", "frozen"], [278, 2, 1, "", "map"], [278, 2, 1, "", "name"], [278, 2, 1, "", "parameters"], [278, 2, 1, "", "parameters_unique_names"], [278, 2, 1, "", "position"], [278, 3, 1, "", "reassign"], [278, 3, 1, "", "slice_by_energy"], [278, 2, 1, "", "spectral_model"], [278, 3, 1, "", "stack"], [278, 2, 1, "", "tag"], [278, 3, 1, "", "to_dict"], [278, 2, 1, "", "type"], [278, 3, 1, "", "unfreeze"], [278, 3, 1, "", "write"]], "gammapy.modeling.models.TemplatePhaseCurveTemporalModel": [[279, 3, 1, "", "__call__"], [279, 3, 1, "", "copy"], [279, 2, 1, "", "covariance"], [279, 2, 1, "", "default_parameters"], [279, 3, 1, "", "evaluate"], [279, 2, 1, "", "f0"], [279, 2, 1, "", "f1"], [279, 2, 1, "", "f2"], [279, 3, 1, "", "freeze"], [279, 3, 1, "", "from_dict"], [279, 3, 1, "", "from_parameters"], [279, 2, 1, "", "frozen"], [279, 3, 1, "", "integral"], [279, 2, 1, "", "is_energy_dependent"], [279, 2, 1, "", "parameters"], [279, 2, 1, "", "parameters_unique_names"], [279, 2, 1, "", "phi_ref"], [279, 3, 1, "", "plot"], [279, 3, 1, "", "plot_phasogram"], [279, 3, 1, "", "read"], [279, 3, 1, "", "reassign"], [279, 2, 1, "", "reference_time"], [279, 3, 1, "", "sample_time"], [279, 2, 1, "", "t_ref"], [279, 2, 1, "", "tag"], [279, 3, 1, "", "time_sum"], [279, 3, 1, "", "to_dict"], [279, 2, 1, "", "type"], [279, 3, 1, "", "unfreeze"], [279, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpatialModel": [[280, 3, 1, "", "__call__"], [280, 3, 1, "", "copy"], [280, 2, 1, "", "covariance"], [280, 2, 1, "", "default_parameters"], [280, 3, 1, "", "evaluate"], [280, 3, 1, "", "evaluate_geom"], [280, 2, 1, "", "evaluation_bin_size_min"], [280, 2, 1, "", "evaluation_radius"], [280, 2, 1, "", "evaluation_region"], [280, 3, 1, "", "freeze"], [280, 3, 1, "", "from_dict"], [280, 3, 1, "", "from_parameters"], [280, 3, 1, "", "from_position"], [280, 2, 1, "", "frozen"], [280, 3, 1, "", "integrate_geom"], [280, 2, 1, "", "is_energy_dependent"], [280, 2, 1, "", "lat_0"], [280, 2, 1, "", "lon_0"], [280, 2, 1, "", "map"], [280, 2, 1, "", "map_center"], [280, 2, 1, "", "parameters"], [280, 2, 1, "", "parameters_unique_names"], [280, 2, 1, "", "phi_0"], [280, 3, 1, "", "plot"], [280, 3, 1, "", "plot_error"], [280, 3, 1, "", "plot_grid"], [280, 3, 1, "", "plot_interactive"], [280, 3, 1, "", "plot_position_error"], [280, 2, 1, "", "position"], [280, 2, 1, "", "position_error"], [280, 2, 1, "", "position_lonlat"], [280, 3, 1, "", "read"], [280, 3, 1, "", "reassign"], [280, 2, 1, "", "tag"], [280, 3, 1, "", "to_dict"], [280, 3, 1, "", "to_region"], [280, 2, 1, "", "type"], [280, 3, 1, "", "unfreeze"], [280, 3, 1, "", "write"]], "gammapy.modeling.models.TemplateSpectralModel": [[281, 3, 1, "", "__call__"], [281, 3, 1, "", "copy"], [281, 2, 1, "", "covariance"], [281, 2, 1, "", "default_parameters"], [281, 3, 1, "", "energy_flux"], [281, 3, 1, "", "energy_flux_error"], [281, 3, 1, "", "evaluate"], [281, 3, 1, "", "evaluate_error"], [281, 3, 1, "", "freeze"], [281, 3, 1, "", "from_dict"], [281, 3, 1, "", "from_parameters"], [281, 3, 1, "", "from_region_map"], [281, 2, 1, "", "frozen"], [281, 3, 1, "", "integral"], [281, 3, 1, "", "integral_error"], [281, 3, 1, "", "inverse"], [281, 3, 1, "", "inverse_all"], [281, 2, 1, "", "is_norm_spectral_model"], [281, 2, 1, "", "parameters"], [281, 2, 1, "", "parameters_unique_names"], [281, 2, 1, "", "pivot_energy"], [281, 3, 1, "", "plot"], [281, 3, 1, "", "plot_error"], [281, 3, 1, "", "read_xspec_model"], [281, 3, 1, "", "reassign"], [281, 3, 1, "", "reference_fluxes"], [281, 3, 1, "", "spectral_index"], [281, 3, 1, "", "spectral_index_error"], [281, 2, 1, "", "tag"], [281, 3, 1, "", "to_dict"], [281, 2, 1, "", "type"], [281, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.TemporalModel": [[282, 3, 1, "", "__call__"], [282, 3, 1, "", "copy"], [282, 2, 1, "", "covariance"], [282, 2, 1, "", "default_parameters"], [282, 3, 1, "", "freeze"], [282, 3, 1, "", "from_dict"], [282, 3, 1, "", "from_parameters"], [282, 2, 1, "", "frozen"], [282, 3, 1, "", "integral"], [282, 2, 1, "", "is_energy_dependent"], [282, 2, 1, "", "parameters"], [282, 2, 1, "", "parameters_unique_names"], [282, 3, 1, "", "plot"], [282, 3, 1, "", "reassign"], [282, 2, 1, "", "reference_time"], [282, 3, 1, "", "sample_time"], [282, 3, 1, "", "time_sum"], [282, 3, 1, "", "to_dict"], [282, 2, 1, "", "type"], [282, 3, 1, "", "unfreeze"]], "gammapy.modeling.models.UniformPrior": [[283, 3, 1, "", "__call__"], [283, 3, 1, "", "copy"], [283, 2, 1, "", "covariance"], [283, 2, 1, "", "default_parameters"], [283, 3, 1, "", "evaluate"], [283, 3, 1, "", "freeze"], [283, 3, 1, "", "from_dict"], [283, 3, 1, "", "from_parameters"], [283, 2, 1, "", "frozen"], [283, 2, 1, "", "max"], [283, 2, 1, "", "min"], [283, 2, 1, "", "parameters"], [283, 2, 1, "", "parameters_unique_names"], [283, 3, 1, "", "reassign"], [283, 2, 1, "", "tag"], [283, 3, 1, "", "to_dict"], [283, 2, 1, "", "type"], [283, 3, 1, "", "unfreeze"], [283, 2, 1, "", "weight"]], "gammapy.modeling.models.utils": [[290, 4, 1, "", "read_hermes_cube"]], "gammapy.stats": [[293, 1, 1, "", "CashCountsStatistic"], [294, 4, 1, "", "TimmerKonig_lightcurve_simulator"], [295, 1, 1, "", "WStatCountsStatistic"], [296, 4, 1, "", "cash"], [297, 4, 1, "", "cash_sum_cython"], [298, 4, 1, "", "compute_chisq"], [299, 4, 1, "", "compute_flux_doubling"], [300, 4, 1, "", "compute_fpp"], [301, 4, 1, "", "compute_fvar"], [302, 4, 1, "", "cstat"], [303, 4, 1, "", "discrete_correlation"], [304, 4, 1, "", "f_cash_root_cython"], [305, 4, 1, "", "get_wstat_gof_terms"], [306, 4, 1, "", "get_wstat_mu_bkg"], [307, 4, 1, "", "norm_bounds_cython"], [308, 4, 1, "", "structure_function"], [309, 4, 1, "", "weighted_cash_sum_cython"], [310, 4, 1, "", "wstat"]], "gammapy.stats.CashCountsStatistic": [[293, 3, 1, "", "compute_errn"], [293, 3, 1, "", "compute_errp"], [293, 3, 1, "", "compute_upper_limit"], [293, 2, 1, "", "error"], [293, 3, 1, "", "info_dict"], [293, 2, 1, "", "n_bkg"], [293, 2, 1, "", "n_sig"], [293, 3, 1, "", "n_sig_matching_significance"], [293, 2, 1, "", "p_value"], [293, 2, 1, "", "sqrt_ts"], [293, 2, 1, "", "stat_max"], [293, 2, 1, "", "stat_null"], [293, 3, 1, "", "sum"], [293, 2, 1, "", "ts"]], "gammapy.stats.WStatCountsStatistic": [[295, 3, 1, "", "compute_errn"], [295, 3, 1, "", "compute_errp"], [295, 3, 1, "", "compute_upper_limit"], [295, 2, 1, "", "error"], [295, 3, 1, "", "info_dict"], [295, 2, 1, "", "n_bkg"], [295, 2, 1, "", "n_sig"], [295, 3, 1, "", "n_sig_matching_significance"], [295, 2, 1, "", "p_value"], [295, 2, 1, "", "sqrt_ts"], [295, 2, 1, "", "stat_max"], [295, 2, 1, "", "stat_null"], [295, 3, 1, "", "sum"], [295, 2, 1, "", "ts"]], "gammapy.utils": [[13, 0, 0, "-", "cluster"], [13, 0, 0, "-", "coordinates"], [13, 0, 0, "-", "fits"], [13, 0, 0, "-", "integrate"], [13, 0, 0, "-", "interpolation"], [13, 0, 0, "-", "parallel"], [13, 0, 0, "-", "random"], [13, 0, 0, "-", "regions"], [13, 0, 0, "-", "scripts"], [13, 0, 0, "-", "table"], [13, 0, 0, "-", "testing"], [13, 0, 0, "-", "time"], [13, 0, 0, "-", "units"]], "gammapy.utils.cluster": [[311, 4, 1, "", "hierarchical_clustering"], [312, 4, 1, "", "standard_scaler"]], "gammapy.utils.coordinates": [[313, 5, 1, "", "D_SUN_TO_GALACTIC_CENTER"], [314, 4, 1, "", "cartesian"], [315, 4, 1, "", "fov_to_sky"], [316, 4, 1, "", "galactic"], [317, 4, 1, "", "motion_since_birth"], [318, 4, 1, "", "polar"], [319, 4, 1, "", "sky_to_fov"], [320, 4, 1, "", "velocity_glon_glat"]], "gammapy.utils.fits": [[321, 1, 1, "", "HDULocation"], [322, 1, 1, "", "LazyFitsData"], [323, 4, 1, "", "earth_location_from_dict"]], "gammapy.utils.fits.HDULocation": [[321, 3, 1, "", "get_hdu"], [321, 3, 1, "", "info"], [321, 3, 1, "", "load"], [321, 3, 1, "", "path"]], "gammapy.utils.integrate": [[324, 4, 1, "", "trapz_loglog"]], "gammapy.utils.interpolation": [[325, 1, 1, "", "ScaledRegularGridInterpolator"], [326, 4, 1, "", "interpolate_profile"], [327, 4, 1, "", "interpolation_scale"]], "gammapy.utils.interpolation.ScaledRegularGridInterpolator": [[325, 3, 1, "", "__call__"]], "gammapy.utils.parallel": [[328, 5, 1, "", "BACKEND_DEFAULT"], [329, 5, 1, "", "METHOD_DEFAULT"], [330, 5, 1, "", "METHOD_KWARGS_DEFAULT"], [331, 5, 1, "", "N_JOBS_DEFAULT"], [332, 5, 1, "", "POOL_KWARGS_DEFAULT"], [333, 1, 1, "", "multiprocessing_manager"], [334, 4, 1, "", "run_multiprocessing"]], "gammapy.utils.random": [[335, 1, 1, "", "InverseCDFSampler"], [336, 4, 1, "", "draw"], [337, 4, 1, "", "get_random_state"], [338, 4, 1, "", "normalize"], [339, 4, 1, "", "pdf"], [340, 4, 1, "", "sample_powerlaw"], [341, 4, 1, "", "sample_sphere"], [342, 4, 1, "", "sample_sphere_distance"], [343, 4, 1, "", "sample_times"]], "gammapy.utils.random.InverseCDFSampler": [[335, 3, 1, "", "sample"], [335, 3, 1, "", "sample_axis"]], "gammapy.utils.regions": [[344, 4, 1, "", "compound_region_to_regions"], [345, 4, 1, "", "make_concentric_annulus_sky_regions"], [346, 4, 1, "", "make_orthogonal_rectangle_sky_regions"], [347, 4, 1, "", "region_to_frame"], [348, 4, 1, "", "regions_to_compound_region"]], "gammapy.utils.scripts": [[349, 4, 1, "", "from_yaml"], [350, 4, 1, "", "get_images_paths"], [351, 4, 1, "", "make_path"], [352, 4, 1, "", "read_yaml"], [353, 4, 1, "", "recursive_merge_dicts"], [354, 4, 1, "", "to_yaml"], [355, 4, 1, "", "write_yaml"]], "gammapy.utils.table": [[356, 4, 1, "", "hstack_columns"], [357, 4, 1, "", "table_row_to_dict"], [358, 4, 1, "", "table_standardise_units_copy"], [359, 4, 1, "", "table_standardise_units_inplace"]], "gammapy.utils.testing": [[360, 1, 1, "", "Checker"], [361, 4, 1, "", "assert_quantity_allclose"], [362, 4, 1, "", "assert_skycoord_allclose"], [363, 4, 1, "", "assert_time_allclose"], [364, 4, 1, "", "mpl_plot_check"], [365, 4, 1, "", "requires_data"], [366, 4, 1, "", "requires_dependency"]], "gammapy.utils.testing.Checker": [[360, 3, 1, "", "run"]], "gammapy.utils.time": [[367, 4, 1, "", "absolute_time"], [368, 4, 1, "", "time_ref_from_dict"], [369, 4, 1, "", "time_ref_to_dict"], [370, 4, 1, "", "time_relative_to_ref"]], "gammapy.utils.units": [[371, 4, 1, "", "standardise_unit"], [372, 4, 1, "", "unit_from_fits_image_hdu"]], "gammapy.visualization": [[373, 1, 1, "", "MapPanelPlotter"], [374, 4, 1, "", "add_colorbar"], [375, 4, 1, "", "annotate_heatmap"], [376, 4, 1, "", "colormap_hess"], [377, 4, 1, "", "colormap_milagro"], [378, 4, 1, "", "plot_contour_line"], [379, 4, 1, "", "plot_distribution"], [380, 4, 1, "", "plot_heatmap"], [381, 4, 1, "", "plot_map_rgb"], [382, 4, 1, "", "plot_npred_signal"], [383, 4, 1, "", "plot_spectrum_datasets_off_regions"], [384, 4, 1, "", "plot_theta_squared_table"]], "gammapy.visualization.MapPanelPlotter": [[373, 3, 1, "", "plot"], [373, 3, 1, "", "plot_panel"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:data", "6": "std:cmdoption"}, "terms": {"": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 51, 52, 53, 67, 82, 83, 84, 86, 87, 90, 91, 92, 95, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 127, 128, 129, 133, 137, 145, 151, 152, 153, 157, 177, 183, 204, 210, 222, 226, 227, 232, 234, 235, 239, 240, 242, 243, 244, 246, 250, 252, 253, 257, 259, 260, 267, 268, 269, 272, 273, 274, 279, 282, 284, 285, 291, 301, 321, 371, 375, 376, 383, 386, 387, 389, 391, 396, 397, 398, 400, 402, 403, 404, 405, 406, 409, 412, 416, 417, 419, 420, 422, 423, 424, 425, 453, 454, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 507, 510, 511, 517, 518, 519, 520, 523, 525, 530, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584, 585, 586, 587, 589], "0": [11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 42, 47, 50, 51, 52, 53, 67, 71, 75, 83, 85, 87, 88, 89, 90, 91, 94, 96, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 145, 146, 148, 151, 152, 153, 154, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 172, 174, 177, 180, 181, 185, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 220, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 289, 291, 293, 294, 295, 296, 299, 300, 301, 302, 303, 311, 312, 331, 335, 342, 343, 363, 374, 376, 377, 381, 383, 386, 387, 389, 390, 393, 397, 398, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 420, 423, 424, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 508, 509, 510, 511, 512, 513, 517, 519, 523, 527, 529, 532, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 585, 586, 587, 588], "00": [67, 87, 88, 89, 91, 102, 201, 387, 401, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 474, 475, 477, 478, 480, 481, 483, 484, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 502, 504, 506, 508, 509, 510, 511, 512, 540, 550, 570, 571, 581, 589], "000": [67, 87, 88, 91, 128, 401, 456, 458, 460, 462, 463, 465, 466, 468, 469, 470, 471, 472, 474, 475, 478, 480, 481, 484, 487, 488, 489, 493, 495, 496, 501, 508, 509, 511, 540], "0000": 412, "000000": 487, "000000000000002": 493, "00000000000001": 465, "00000000000003": 482, "00000000000004": 487, "0000000000016": 86, "0000000000018": 94, "000000000002": 474, "0000000000064": 474, "000000000007": 487, "00000000001": 487, "00000000e": [490, 491], "00000001": 86, "0000000e": 491, "00000143": [387, 589], "0000e": [102, 458, 459, 462, 463, 464, 465, 467, 470, 478, 480, 481, 490, 496, 498, 510, 570], "0001": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 377, 472], "00010298": 488, "00015": 489, "000150": 460, "0002": [460, 511], "00020": 460, "0002000": 460, "0003": 472, "00050": 460, "000500": 460, "0006": 460, "00074287037": [94, 475], "000742870370370241": 94, "0008": 487, "0009": 460, "000e": [458, 462, 465, 467, 470, 471, 478, 481, 487, 490, 496, 498, 510, 511, 570], "000true": 460, "001": [50, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210, 363, 474, 490, 548], "0016288e": 491, "001e": 67, "002018": 501, "0025508e": 491, "0028272e": 491, "0029": 411, "0029202684427718766": 509, "002e": [67, 463], "003": [482, 495, 501], "003026327991562108": 471, "0031052863692021915": 509, "0033": 587, "00336861061002e": 484, "0036925550381217": 465, "00375698": 243, "003930": 573, "004": 67, "00422666667": 485, "00449161": 249, "00472179200096": 415, "00490": 472, "00490483": 472, "0049409": 500, "005": 487, "00521472221220211": 471, "005909017160171437": 473, "0064830e": 491, "00688029": 243, "007": 487, "0076540e": 491, "008": [487, 586], "008166963876141447": 473, "008891944789387447": 473, "00894": 511, "009": [484, 487], "00931e": 457, "009433226692021113": 473, "00e": [83, 457, 463, 466, 474, 478, 481, 482, 484, 488, 491, 492, 501, 509], "01": [39, 52, 75, 83, 87, 88, 91, 94, 103, 106, 107, 111, 112, 114, 115, 130, 135, 137, 180, 181, 185, 195, 196, 201, 205, 208, 229, 235, 240, 242, 244, 260, 267, 387, 415, 423, 456, 457, 458, 461, 462, 464, 466, 467, 470, 471, 474, 478, 481, 482, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 499, 501, 502, 503, 509, 510, 511, 512, 517, 522, 532, 534, 535, 538, 542, 544, 546, 550, 558, 568, 573, 574, 575, 581, 586, 589], "010": 495, "010066705375548107": 415, "010e": 67, "011": 495, "011872336272724": 509, "012": 495, "0122385e": 491, "01235137e": 491, "012733796525585": 497, "0130e": 481, "0139252e": 491, "014": [85, 103, 106, 107, 111, 112, 177, 463, 470, 487, 492, 509, 510, 534], "0143724": 243, "0143764": 500, "01449": 83, "0145": 494, "01450": [479, 510], "0148015517529894": 415, "014811633859834": 415, "0149044e": 491, "015": 487, "01551196351647377": 243, "0163": 472, "01648855015875024": 585, "016753": 572, "01700709977114979": 485, "017442925431194484": 485, "0175e": 478, "018": 67, "018182745349064267": 471, "0183519e": 491, "01960784313726": 476, "019672": 489, "019899368286133": 471, "01e": [177, 423, 457, 487], "01t00": [87, 91, 94, 201, 387, 466, 474, 589], "01t01": 91, "01t02": 91, "02": [16, 67, 83, 94, 103, 105, 106, 107, 111, 112, 113, 118, 127, 165, 172, 177, 195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 423, 456, 457, 458, 460, 461, 462, 463, 467, 468, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 487, 490, 491, 492, 493, 494, 495, 496, 499, 501, 506, 509, 510, 511, 532, 534, 535, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "020": [471, 487, 489], "020420144596410953": 497, "021": [67, 487], "0211e": 481, "0225e": 487, "02288737": 243, "023": 487, "023472814714293713": 509, "024": 487, "02432": 487, "024715584699834": 509, "024897178551308": 415, "024e": 511, "025": [487, 501], "0251191207999763": 472, "026": [53, 67, 487], "02653": [466, 472], "026891": 487, "026914": 487, "027": 67, "027383": 567, "028549898215494e": 415, "028854": 494, "029e": [458, 487], "02e": [83, 484], "02t23": 86, "03": [67, 87, 89, 91, 105, 127, 207, 399, 414, 456, 457, 458, 460, 463, 467, 468, 470, 471, 472, 474, 481, 487, 491, 493, 495, 496, 497, 498, 499, 503, 504, 509, 510, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "03034567e": 489, "032": 487, "0322": 67, "0322775e": 491, "033": [67, 487], "033176650892097": 96, "03383": 500, "034": 586, "0344": 67, "03447394e": 489, "03493": 489, "034e": 460, "035": 489, "0354700e": 491, "0356": 457, "0356551": 457, "036": 67, "036e": 487, "037": 495, "03745318352059925": 579, "0375512e": 491, "0376213e": 491, "03893": 489, "039": [470, 471, 489], "039215686274545": 476, "03921700077803329": 471, "0395135e": 491, "03978226e": 496, "04": [30, 67, 94, 456, 461, 463, 465, 466, 468, 471, 474, 477, 481, 482, 487, 491, 493, 496, 501], "040": 462, "040e": 466, "041": 501, "0414": 466, "0415": 511, "0415805201155": 481, "041882": 487, "042": 487, "0423761": 457, "042e": 487, "043": 67, "04357249662280083": 462, "04454": 501, "0454683": 500, "046": 67, "0462798e": 491, "047": 67, "0473174": 249, "0474750e": 491, "048": [470, 501], "0482342e": 491, "048257": 463, "04897634344908595": 96, "048e": 67, "049": [460, 470], "04939e": 457, "049676": 487, "04d": 474, "04e": 492, "04t15": 86, "04t22": 86, "05": [19, 20, 26, 29, 42, 67, 71, 87, 91, 125, 126, 128, 136, 208, 215, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 345, 414, 456, 457, 458, 459, 460, 461, 462, 463, 466, 469, 470, 471, 472, 475, 478, 480, 486, 487, 488, 490, 491, 492, 495, 498, 499, 500, 502, 504, 509, 510, 537, 542], "050": 495, "0503641": 457, "0505949e": 491, "05075": 491, "0508075688763": 487, "05088486522436142": 462, "050e": 466, "051": 495, "052": 487, "0520119e": 491, "0521419985089": 473, "05227": 487, "053": 470, "053212009682775": 497, "054473": 562, "054833602905273e": 471, "0548e": 471, "054e": 67, "055": 487, "055e": 460, "0560": 511, "056130": 487, "05628243": 511, "05637e": 457, "05673": 511, "057": 487, "05762513693893088": 471, "058": 67, "058201": 487, "05853": 466, "058823529411775": 476, "059": 67, "05901956e": 491, "0598579": 457, "05deg": 208, "06": [151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210, 456, 468, 470, 471, 472, 477, 487, 488, 490, 491, 492, 493, 501, 504, 571], "061": 511, "062": [474, 495, 496, 501], "0625": 496, "0628": 511, "063": 67, "0631757e": 491, "06334488877417636": 497, "064108e": 487, "06430": 472, "0643032": 472, "065071": 487, "065119": 511, "066": 462, "066442": 487, "067": 466, "067268": 559, "068245": 487, "0689": 490, "068e": 460, "069": 67, "07": [103, 177, 361, 401, 423, 456, 460, 461, 463, 467, 470, 472, 480, 482, 484, 487, 488, 491, 493, 495, 501, 504, 512], "070483": 487, "071": 581, "0711412": 457, "072": 67, "072500": 463, "073": 67, "0739282e": 491, "074": [456, 479, 483, 487, 501], "07454639": 472, "07455": 472, "0746": 511, "0748": [487, 511], "075": 67, "07512322002655547": 471, "075434": 105, "0756e": 457, "076": 511, "077": 457, "078": 460, "07843137254903": 476, "07871368968": 488, "07943648658692837": 497, "07944657408": 487, "079464e": 511, "0799109224230051": 497, "07e": 482, "08": [86, 381, 423, 464, 465, 467, 468, 470, 471, 478, 483, 487, 488, 490, 492, 501, 509, 510, 551], "0800792e": 491, "08075": 491, "08081469527619482": 465, "08088": 183, "080e": 466, "0811551760882139": 497, "08142": 486, "08191603310406206": 497, "08192": 472, "08192101": 472, "082": 487, "082691868487906": 485, "08269984": 511, "082e": 128, "083": [67, 487], "08328557573258877": 497, "0833333358168602": 462, "0833333432674408": 462, "08388624433428049": 497, "084": 67, "08447355125099419": 497, "0845515": 457, "085": 487, "08529426": 97, "0855013383552432": 497, "0859117235629056e": 484, "08675": 488, "086e": [481, 487], "087": 511, "08795162606984375": 497, "087e": 487, "088": [456, 504], "088742": 487, "08880368117243051": 497, "08894569035619496": 497, "089": 141, "0894640e": 491, "0897868126630783": 497, "089881": 487, "08e": [478, 495], "09": [33, 128, 177, 456, 458, 463, 466, 468, 470, 477, 487, 488, 491, 492, 509, 510, 511, 587], "0902437e": 491, "0907128e": 491, "0910": [258, 259], "0914": [52, 53], "093477": 472, "09348": 472, "09375": 484, "09426693227142095": 497, "094834": 487, "095232": 487, "09562941": 511, "095707": 511, "096": [456, 463, 581], "0960": 511, "09607": 511, "09610314778983592": 497, "09623312838375568": 497, "09740295372903346": 497, "097e": 67, "098903": 487, "099": 478, "09907043184188653": 497, "09e": 492, "0b100": 331, "0d": [130, 476, 488, 546], "0e": [409, 463, 465, 466, 467, 471, 474, 478, 481, 484, 488, 489, 491, 493, 495, 496, 501, 509, 541, 542, 543, 544, 546, 547, 548, 549, 552, 553, 555, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "0f": [490, 501, 511], "0ps4ieab": 484, "0rc": 416, "0rc1": 416, "0true": 472, "0x105fd0cf8": 386, "0x105fe3b70": 386, "0x129602550": 386, "0x7f5b638b8df0": 488, "0x7f5b681cbfd0": 497, "0x7f5b686c0f40": 496, "0x7f5b686d08b0": 497, "0x7f5b6baa6490": 488, "0x7f5b6bf10250": 497, "0x7f5b6bf10280": 497, "0x7f5b6bf6a4f0": 500, "0x7f5b6c0749d0": 500, "0x7f5b6c077790": 476, "0x7f5b6c077970": 476, "0x7f5b6c3c7ee0": 485, "0x7f5b6d5aa580": 500, "0x7f5b70098e80": 498, "0x7f5b7c129d30": 500, "0x7f5b7cac7a00": 488, "0x7f5b7ec09640": 488, "0x7f5b89086730": 570, "1": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 63, 66, 67, 71, 72, 74, 75, 78, 83, 86, 87, 88, 90, 91, 95, 96, 101, 102, 103, 106, 107, 111, 112, 113, 117, 118, 120, 121, 125, 128, 129, 130, 131, 133, 134, 137, 145, 146, 151, 152, 153, 154, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 172, 177, 180, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 255, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 291, 293, 294, 295, 299, 300, 311, 312, 324, 325, 331, 332, 333, 342, 343, 345, 346, 371, 373, 376, 377, 381, 383, 386, 387, 389, 390, 393, 394, 396, 397, 398, 400, 401, 403, 406, 408, 409, 410, 411, 412, 413, 416, 417, 420, 423, 427, 428, 430, 431, 435, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 506, 509, 510, 511, 513, 517, 518, 519, 522, 523, 525, 527, 528, 529, 530, 531, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 586, 587, 588], "10": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 66, 67, 84, 86, 87, 88, 89, 90, 91, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 118, 121, 125, 126, 127, 128, 129, 130, 134, 136, 137, 139, 145, 146, 151, 152, 154, 156, 158, 159, 164, 165, 166, 167, 168, 170, 177, 183, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 215, 218, 220, 229, 232, 245, 246, 249, 250, 272, 273, 285, 294, 331, 333, 343, 374, 379, 381, 383, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 403, 408, 409, 410, 414, 415, 417, 423, 428, 430, 441, 443, 446, 450, 452, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 509, 510, 511, 513, 519, 523, 529, 532, 534, 535, 536, 537, 547, 548, 551, 553, 556, 557, 559, 560, 561, 562, 564, 565, 567, 568, 569, 570, 573, 574, 575, 585, 586, 589], "100": [19, 20, 26, 46, 47, 74, 94, 128, 135, 137, 156, 157, 167, 208, 210, 222, 223, 226, 227, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 253, 255, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 277, 279, 281, 282, 285, 287, 343, 386, 387, 389, 394, 405, 415, 426, 457, 459, 462, 465, 470, 471, 472, 474, 475, 476, 478, 482, 485, 486, 487, 488, 489, 491, 492, 493, 496, 498, 500, 501, 502, 511, 515, 517, 518, 519, 523, 534, 537, 538, 541, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 586], "1000": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 198, 203, 386, 389, 460, 487, 488, 491, 498, 501, 511, 537], "10000": [17, 18, 21, 22, 23, 24, 25, 27, 104, 110, 156, 167, 170, 180, 487, 501], "100000": [74, 487, 509], "1000000": [51, 52, 54, 487, 570], "10000000": 570, "100000000000": 489, "1000e": 498, "1001": [445, 474, 475], "1002": 445, "10045": [65, 274, 569], "10049": 457, "1006": 445, "101": [431, 470, 482, 487], "1012": 486, "1013": 446, "1014": 446, "101430": 482, "10172": 496, "102": [177, 463, 466, 586, 587], "1021": 446, "1025": 446, "1026": 446, "10262943822890519": [96, 497], "1027": 446, "102877228833871": 497, "1029": 446, "10295505": 511, "102e": 487, "103": [426, 449, 456, 581], "103000133": 502, "1031": 446, "1032": 446, "1032531953505502": 509, "1034": 511, "1035": 446, "1035002116788955": 463, "1036": 466, "1038": 446, "104": [470, 472], "1040": 446, "10409": 472, "10409446": 472, "10416667": 484, "1043": 446, "104317": [103, 488, 495], "1044": 466, "1045": 446, "1046": 404, "10470702368766069": 497, "10477": 511, "105": [82, 456, 465, 503, 581], "1051": 446, "1052": 487, "1053": 446, "1054": 446, "1057": 446, "10592": 589, "105953": 511, "105e": 466, "106": [456, 581], "1061971e": 491, "106217": 83, "1062535e": 491, "1064": 487, "1065": 446, "1067": 446, "1069": 446, "107": [457, 493], "1070": [446, 511], "1072542e": 491, "1073": 446, "10752883769757363": 497, "1076": 446, "1078": 446, "107e": [466, 487], "108": [443, 456, 581], "108034597491956e": 496, "108043": 470, "1082": 446, "1083": 446, "1084": 446, "1085": 446, "1085000": 470, "1087": 446, "1088": 446, "1089": 446, "109": [426, 456, 458, 493, 581], "1090": 446, "1092": [446, 466], "1093": [446, 466], "1098": 446, "1099306e": 491, "109e": 472, "10d": 476, "10e": [177, 487, 491], "10k": 198, "10th": [413, 425], "11": [67, 87, 91, 94, 128, 129, 133, 134, 218, 345, 390, 393, 395, 403, 410, 414, 426, 427, 448, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 472, 474, 475, 476, 478, 479, 480, 481, 482, 484, 487, 488, 489, 490, 492, 494, 495, 496, 498, 501, 509, 510, 511, 534, 536, 587], "110": [487, 501], "1100": [446, 462], "110000": [488, 492], "1102": 446, "1102e": 459, "1103": 446, "110380": [83, 402, 467, 470, 472, 500], "1104": 446, "1105": 446, "1107": 446, "1108": 446, "111": [374, 393, 446, 470, 487], "1110": 446, "1111": [139, 487, 511], "111140": [402, 467, 470, 472], "111159": [402, 467, 470, 472, 500], "11132": 64, "1115": 446, "111507416": 482, "111630": [89, 482, 500], "111797": 487, "11184": [65, 273, 568], "112": [457, 462], "11208": 65, "11220184543": 489, "1127": 446, "11291820875721864": 497, "113": 511, "113009": 549, "1131": [394, 468], "1133": 446, "1134": 446, "1136": 446, "114416978060042": 481, "115": 67, "1150": 446, "11517": 511, "11553325504064559": [96, 497], "11587179071752986": 96, "116": [426, 458, 459], "1160": 487, "11610": 511, "1162": 446, "1162290917256776e": 479, "1166": 446, "1167": [393, 400], "1169": 446, "116e": 67, "117": [426, 551], "1170": 446, "1172": 400, "1173775": 487, "1176": 446, "1178120592303": 481, "117877e": 487, "1179": 446, "118": 470, "1183": 446, "118355": 487, "119": [456, 458, 466, 470, 581], "1190": 446, "119432": 457, "1195": 446, "119e": 462, "11af4c": 426, "11e": 487, "12": [17, 38, 42, 67, 86, 87, 91, 103, 106, 107, 114, 115, 128, 167, 170, 196, 197, 198, 200, 206, 209, 210, 222, 226, 232, 234, 239, 246, 257, 259, 269, 272, 273, 274, 285, 390, 392, 393, 394, 395, 397, 398, 403, 406, 409, 415, 426, 430, 431, 432, 444, 449, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 478, 479, 480, 481, 484, 485, 487, 488, 489, 490, 493, 495, 496, 498, 499, 501, 509, 511, 523, 534, 537, 538, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 555, 559, 562, 563, 564, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580], "120": [53, 401, 464, 501, 545], "120000": 467, "120154": 487, "1204": 446, "120442": 569, "1206761393325": 481, "1207": 446, "120e": [67, 511], "121": [67, 472, 495], "1210": 446, "1211": [446, 487], "121241": 470, "12148": 466, "1215": 446, "1216": 459, "12186": 511, "1219": 487, "122": [67, 426, 460, 495], "1220": 446, "122015": 127, "1226": 446, "1227": 446, "12276676166802643": 497, "122e": 471, "123": [87, 91, 398, 466], "1231": 447, "1233": 481, "1234": 88, "123456789": [201, 387, 589], "1235": 446, "1237": 394, "1238": 446, "123890826": 86, "123892513": 86, "1239": 391, "123944": 83, "123e": 466, "124": [398, 466, 487, 495], "1240": 446, "12423250e": 491, "1243": 511, "1244969200533408": 312, "1246": 446, "12493874": 491, "124e": 67, "125": [67, 128, 462, 472, 493, 501, 511, 586], "12518": 471, "12525306": 485, "12546": 65, "1258925411": 489, "126": [67, 460, 487, 490], "1264500e": 491, "126585": 457, "1266": 446, "1268": 446, "12688": 83, "1269263e": 491, "12697": 471, "127": 466, "12751": 457, "1277": 392, "1278": 393, "12794487": 496, "128": [426, 482, 513], "12809": [103, 488, 495], "1281": 446, "12816": 511, "12856": 501, "1287": 446, "1289": 446, "128e": 460, "129": [452, 456, 510, 581], "1290": 446, "1291": 446, "1294": 446, "1299": 487, "12nan5": 460, "12r_": 53, "12th": [411, 425], "13": [67, 102, 105, 127, 128, 207, 311, 390, 391, 395, 400, 405, 414, 431, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 509, 510, 511, 519, 587], "130": 534, "1300": 446, "1301v": 38, "13030": 511, "1305": 446, "13061": 496, "131": 460, "1310": 511, "1312": 446, "13133": 511, "13152": 472, "1316": 446, "1317": 447, "1318": 446, "1319": [94, 446], "13197": 470, "132": 466, "13226": 511, "1323e": 471, "132472": 472, "132e": 462, "1331": 447, "1334": 447, "1337": 447, "1339": 447, "133e": 460, "134": [463, 466, 472], "1341": 447, "1342a": 157, "1343": 447, "1344": 487, "1345": 447, "1346": 447, "1347": 447, "13499879586502125": 473, "135": [38, 102, 460, 487, 490], "13500212963": 487, "1351e": 487, "1354": 447, "135498046875": 462, "1357": 447, "1359316": 511, "135e": 128, "136": 487, "1360": 447, "1361": 487, "1362": 447, "1367": 447, "136733": 547, "1369": [394, 447], "137": [466, 473], "1372": 447, "137254901960785": 476, "1373": 447, "1374": 447, "137521287529426e": 509, "1376": 447, "1376407570489014e": 479, "1377": 447, "1378": 447, "1379190199428797": 312, "137990": 487, "138": [426, 460, 474, 511], "1381": 447, "1386": 447, "1387": 447, "138e": 472, "139": [462, 466, 501], "13911": 511, "1393881668086242e": 484, "1394": 557, "13944023e": 489, "1395": 447, "1396": [386, 463], "13960": 511, "1397": 447, "1397412321592923": 497, "13e": 488, "13nan6": 460, "13th": 425, "14": [28, 65, 67, 86, 274, 387, 390, 395, 398, 403, 405, 406, 415, 445, 456, 457, 460, 462, 463, 466, 470, 482, 483, 484, 487, 488, 489, 490, 492, 494, 495, 496, 499, 510, 511, 569, 586], "140": 502, "1401": 447, "1406": 447, "1408": [447, 511], "141": [310, 472, 487], "1411180": 470, "1412": 447, "14121": 472, "1412536400000000": 511, "14149953611195087": [96, 497], "14150": 472, "1419": [394, 448], "141945": 457, "142": [35, 67, 426, 460, 487, 511], "1421": 447, "14210": 460, "1426": 447, "142e": 487, "1432": 447, "1433": 447, "1435": 447, "1438": 180, "1438465e": 491, "1439110308062257": 497, "144": [456, 460, 495, 511, 550], "14419991": 97, "1442739329466746e": 496, "1443": 447, "1444": 447, "1445": 400, "14457": 511, "1446": 447, "1447": 447, "145": 487, "1451": 401, "14531053887243": 472, "1456": 447, "1456479e": 491, "146": 511, "14610": 589, "146472": 487, "1467": 139, "147": [445, 487, 493], "1470": [447, 511], "1471e": 464, "1474": 447, "1475": 447, "1476": 447, "14773": 501, "147e": 487, "148": 466, "1482": 487, "1485314": 97, "1486415e": 491, "1487e": 498, "1489": [447, 472], "149": [462, 492, 495], "1492": 447, "1494": 472, "149445429667434": 473, "1495": 447, "1499472780781963": 312, "149e": 487, "14e": [467, 486], "14msts37sst": [474, 475, 500], "14nan3": 460, "14nan5": 460, "14th": [410, 413, 425], "14yr_catalog": 65, "15": [39, 42, 67, 87, 88, 91, 154, 155, 156, 157, 158, 159, 164, 165, 166, 168, 207, 376, 377, 381, 395, 403, 426, 430, 435, 440, 443, 444, 445, 447, 456, 457, 462, 466, 468, 470, 471, 472, 474, 475, 476, 477, 478, 482, 484, 485, 487, 488, 489, 490, 492, 493, 495, 496, 501, 511, 534, 542], "150": [134, 426, 460, 462, 474, 475, 493, 511], "1501": 481, "1505": 447, "15076259": 97, "151": [426, 495], "1510": 141, "1510240e": 491, "15140": 466, "1515": 447, "15154854": 97, "1517": 447, "152": [466, 472], "1521": 472, "1523": 474, "15246": 474, "152477": 501, "1527": 447, "153": 487, "1530": 488, "15319": 474, "153600": 488, "1538": 273, "154": [426, 457, 487], "1543": 447, "154e": 472, "155": 426, "15518": 511, "1552": 468, "1553": [487, 511], "1554": 447, "1554106e": 491, "1556": [447, 487, 511], "1556008e": 491, "1558": 447, "156": [426, 462, 463, 466, 472, 489, 495], "1562": 447, "15621": 511, "1564": 447, "156525": 487, "1567629e": 491, "1568": 447, "15686274509804": 476, "157": [426, 511], "1573": 447, "1576": 447, "158": [457, 463, 470], "1582": 447, "15848931924": 489, "1586": 94, "15899": 466, "1594": 447, "1597317": 97, "159t": 52, "15e": 468, "15h14m00": 487, "15nan8": 460, "16": [16, 24, 53, 67, 94, 111, 112, 196, 390, 394, 403, 406, 407, 415, 431, 446, 451, 453, 454, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 536, 578, 586, 587], "160": [31, 128, 426, 435, 476, 495], "1600": 475, "1600e": 458, "1605": 447, "16056": 466, "1606": 447, "1607": 486, "160e": 67, "161": [394, 462, 472, 487], "1610e": [458, 487], "161250": 478, "1613279491744304": 497, "1616": 447, "1618850e": 491, "1619e": 102, "162": 67, "16227766": 493, "1622776601683795": [492, 493, 509], "16240": 510, "1626e": 467, "16287": 511, "1629219e": 491, "163": [476, 586], "1630": [447, 511], "16303": 472, "16303044": 472, "1634": 447, "164": 487, "1642": 457, "165": 495, "1650": 511, "16506": 457, "16511": 472, "16511148": 472, "165444": 468, "1658": 447, "165e": 466, "166": [426, 472, 487], "1660": 447, "166015625": 459, "1661916367760008e": 484, "1665478": 97, "166871893629602e": 484, "167": [426, 472, 478], "167219": 487, "1675": 447, "168": [487, 488, 511], "1681": 447, "1685": 447, "1686": 487, "1687": 86, "168702": 457, "169": 472, "1691": 457, "1695": 447, "169576": 478, "1696": 447, "1697": 447, "1698": 462, "169871": 478, "16th": 425, "17": [20, 21, 40, 67, 86, 397, 400, 403, 435, 452, 456, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 509, 510, 511, 587], "170": 459, "17016482e": 490, "1702": 447, "17020": 466, "1710": 448, "1711": 447, "1713": 459, "1715": 400, "1717": 511, "171749": 511, "1719502": 97, "1719610": 97, "1719670": 97, "171b": 284, "172": 476, "17229679": 97, "173": 487, "1731": [447, 495], "1732": 487, "17320": 487, "1736": 466, "1737799900000000": 511, "174": [462, 481], "1742": 67, "17445": 511, "1746": [447, 511], "1748": [447, 495], "1750": 447, "1751": 447, "1753": 511, "1755": 447, "1756": 463, "1759": 447, "175e": 487, "176": [426, 482, 487], "1760": 447, "1761": 447, "1762": 513, "1763": [448, 487], "1764": [447, 472], "176470588235294": 476, "1766": 448, "1768896e": 491, "177": [426, 501, 502], "17776": 457, "1778279410": 489, "177e": 487, "178": 446, "178442": 67, "1785": [447, 457], "1791": 447, "179236": 470, "179475": 249, "1799": 447, "17a": [60, 487], "17e": 495, "17g": 50, "17th": 441, "18": [11, 87, 91, 207, 390, 405, 411, 432, 438, 456, 457, 459, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "180": [400, 419, 421, 426, 487, 493], "1800": [447, 475, 493, 500], "180000": [474, 475, 500], "1804": 487, "180458": 470, "18046952655570045": 312, "1805": 400, "1807": 448, "1808": [447, 487, 511], "181": 466, "1811": 465, "1812": 447, "1813": 487, "1818": 447, "1821": 447, "1822": 447, "1825": 487, "18257": 466, "183": 462, "1830e": 462, "183139597": 86, "1834": [459, 481], "1835": 94, "1836": 448, "1836544903987521": 497, "1837": 448, "18385658": 472, "18386": 472, "18392464": 525, "184": [86, 94, 440, 444, 466, 470, 474, 480, 484, 494, 495], "18400002": 480, "1841": 395, "1845": 448, "1846": 448, "18465": 511, "1849": 448, "184989894219835": 485, "185": 494, "1854": [448, 487], "1855": 448, "1857": 448, "1859": 448, "186": [439, 472, 487], "1861": 448, "1862": 448, "186484131475074": 343, "186579": 561, "1866": 492, "186643": 511, "187": [432, 439, 472], "1871": 448, "187249": 470, "1877": 396, "188": [439, 456, 457, 487, 550], "1883": 448, "1884": 448, "18842984749525210": 472, "1888": 448, "188e": 460, "189": [462, 491], "1890": 448, "1891": 448, "18921591": 491, "1893": 448, "1893e": [458, 487], "1894": 448, "1895": 448, "1896": 481, "1896e": 458, "1898": 448, "18988": 511, "1899070e": 491, "18a": 62, "18h43m48": 67, "19": [51, 53, 54, 67, 207, 390, 402, 404, 406, 426, 434, 435, 437, 449, 456, 463, 466, 473, 476, 477, 481, 482, 484, 485, 487, 488, 493, 495, 499], "190": 487, "1902": [65, 274, 569], "1903": 448, "1904": 448, "1905": 471, "1908": 448, "1909": 448, "190e": 462, "191": 439, "1910": 183, "1912": 448, "1917": 511, "1918": 448, "1919": 448, "191e": 481, "192": 499, "1920": 511, "1921": 448, "19214093": 97, "1922": 448, "1926": 448, "1926520e": 491, "1927": 448, "1928": 487, "1929": 448, "193": [466, 481], "1930": 448, "1933": 448, "1934": 448, "193464": 546, "19354": 472, "1936925": 97, "1937": [448, 487], "193e": 463, "194": [439, 466], "1943186": 97, "1947565": 97, "1949": 448, "195": [243, 456, 462, 550, 581], "1950rspsa": 52, "1951": 427, "1953": 415, "1953830": 97, "1955810e": 491, "1958e": 490, "196": [67, 457, 495], "1960784313725492": 476, "1961": [139, 148], "1962": 427, "1963": 487, "19644": 501, "1965": 21, "1966": 427, "1969": 427, "196991563774588": 285, "197": [67, 472, 501], "1971": 397, "19736017641361556": 473, "1975": 427, "1976572e": 491, "1978": 487, "1979": [296, 302, 427, 584], "1979892": 472, "1980": 487, "1982": 37, "1983": 584, "1986": 398, "1986027": 511, "1987": 472, "19879005": 180, "1988": [140, 303, 427], "1989": 427, "199": [472, 478, 495], "1990": [36, 37, 427], "1991": [22, 427], "19932878": 491, "1994": [427, 584], "1994a": [52, 53], "1995": [17, 294, 426, 427], "1996": [27, 466, 485, 584], "1997": [25, 509], "1998": [28, 87, 91, 427, 584], "1999": [53, 201, 387, 589], "19991": 509, "199999809265137": 487, "19999999999999998": 465, "1999apj": 53, "19e": 492, "19th": 425, "1d": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 111, 112, 130, 155, 156, 165, 179, 196, 198, 338, 379, 392, 396, 397, 399, 400, 401, 402, 405, 406, 407, 419, 429, 431, 432, 433, 434, 438, 440, 443, 447, 449, 450, 453, 456, 457, 459, 460, 461, 462, 464, 466, 470, 477, 481, 484, 488, 490, 492, 494, 496, 497, 498, 500, 501, 509, 521, 523, 525, 538, 584], "1dc": [82, 83, 89, 103, 106, 107, 111, 112, 117, 120, 121, 125, 145, 146, 152, 156, 157, 158, 167, 374, 379, 381, 394, 396, 402, 406, 428, 457, 465, 467, 470, 472, 478, 481, 482, 488, 489, 491, 495, 523], "1deg": 208, "1e": [19, 20, 26, 86, 100, 133, 134, 137, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 250, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 285, 296, 302, 345, 361, 363, 386, 397, 458, 460, 462, 464, 466, 468, 470, 472, 474, 475, 478, 479, 480, 481, 482, 487, 490, 496, 498, 501, 502, 519, 523, 527, 551, 552, 553, 555, 558, 559, 563, 564, 566, 567, 568, 569], "1e0": 517, "1e10": [51, 157], "1e12": [517, 527], "1e2": [460, 517, 519], "1e3": [501, 527], "1e30": 561, "1e4": [490, 501, 502], "1e40": 518, "1e5": [464, 501, 519, 537, 538], "1e51": 52, "1e6": [45, 501, 515, 570], "1e7": [130, 570], "1f": 463, "1fhl": [432, 445], "1fhl_name": 71, "1h": 167, "1k": [103, 107, 111], "1kpc": 519, "1lhaaso": [57, 70, 453, 487], "1lhaaso_catalog": 57, "1rc1": 416, "1tev": [52, 53, 134, 475], "1v9lrb": 484, "2": [11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 46, 50, 51, 52, 53, 54, 59, 63, 67, 68, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 101, 102, 103, 105, 106, 107, 111, 112, 116, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 144, 148, 149, 150, 154, 155, 156, 157, 159, 165, 167, 170, 177, 180, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 210, 215, 218, 219, 221, 222, 226, 228, 232, 234, 239, 241, 242, 246, 247, 250, 252, 257, 258, 259, 265, 266, 268, 269, 272, 273, 274, 279, 284, 285, 291, 293, 294, 295, 296, 301, 302, 311, 331, 333, 371, 374, 379, 381, 383, 386, 387, 390, 391, 395, 397, 398, 400, 401, 402, 403, 406, 409, 410, 411, 412, 413, 416, 423, 424, 426, 427, 428, 429, 430, 431, 438, 443, 444, 445, 446, 447, 448, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 509, 510, 511, 519, 522, 523, 525, 530, 531, 532, 534, 535, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584, 585, 586, 587, 588], "20": [16, 38, 83, 87, 89, 91, 103, 106, 107, 111, 112, 158, 159, 164, 166, 168, 177, 197, 198, 200, 206, 209, 210, 215, 294, 311, 387, 390, 391, 392, 394, 399, 401, 404, 406, 411, 449, 456, 457, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 492, 493, 495, 496, 498, 499, 500, 503, 509, 510, 511, 513, 532, 534, 535, 536, 542, 543, 544, 547, 548, 557, 560, 565, 570, 571, 586], "200": [52, 87, 91, 137, 208, 410, 439, 462, 463, 466, 472, 476, 478, 487, 493, 496, 511, 586], "2000": [88, 103, 106, 107, 111, 112, 130, 235, 240, 242, 244, 260, 267, 427, 474, 475, 476, 492, 501, 511, 584], "2000000": 470, "20000000000000004": 465, "20009124": 491, "2000apj": 285, "2000e": 496, "2001": [94, 427, 466, 584], "20016447648031e": 484, "2002": [87, 91, 300, 485], "2003": [301, 485], "2004": [24, 39, 40, 86, 94, 415, 485, 503], "2004aph": [83, 88], "2005": [65, 584], "200503": 457, "2005a": 487, "2006": [30, 31, 32, 33, 35, 121, 401, 466, 473, 480, 484], "200638": 511, "2006a": 285, "2006apj": 33, "2006ara": 50, "2007": [404, 584], "20072608": 491, "2008": [38, 86, 230, 281, 458, 501, 513, 551], "2008aj": 38, "2009": [137, 304, 428, 466, 584], "20097159": 491, "2009851": 491, "20099855": 491, "201": [52, 493], "2010": [130, 157, 230, 249, 308, 387, 454, 551, 584, 589], "2010a": [249, 285], "2010mnra": 157, "2011": [17, 19, 20, 21, 22, 24, 25, 26, 27, 230, 458, 513, 551], "2012": [91, 428, 584], "2013": [102, 141, 406, 412, 417, 426, 485], "20136": [82, 312, 503], "20137": [312, 503], "2013aph": 284, "2013apj": 60, "2014": [139, 148, 425, 513], "2015": [52, 86, 400, 403, 425, 501], "20151": 312, "2015apj": 61, "2015jheap": 285, "2016": [26, 400, 403, 425, 428, 485, 492, 500], "2016apj": 58, "2017": [59, 230, 391, 393, 403, 406, 423, 425, 428, 472, 500, 551], "2017apj": 62, "2017icrc": 500, "2018": [52, 391, 392, 393, 394, 395, 396, 397, 401, 403, 405, 406, 425, 452, 500, 503, 584], "2019": [393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 425, 447, 448, 473, 584], "202": 472, "2020": [207, 395, 406, 407, 408, 409, 410, 425, 473, 474, 481, 493, 573, 574, 575], "2021": [63, 89, 230, 408, 410, 425, 452, 496, 500, 551], "2021345e": 491, "2022": [387, 411, 412, 415, 425, 428, 502], "2023": [57, 387, 398, 413, 414, 415, 425, 428], "2024": [415, 425, 500], "2024e": 510, "2025": [105, 127, 415, 424, 463, 467, 468, 470, 496, 509, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "2026": [398, 428], "2028": 428, "203": [456, 571], "2030": [398, 428], "2031": 428, "20326": [311, 459], "20327": [311, 459], "2033": 428, "20339": 311, "2034": 428, "20343": 311, "20344": 311, "20345": 311, "20346": 311, "20349": 459, "2035": [126, 128, 428], "20350": 459, "2036": [126, 128], "2037": 428, "20372": 500, "2038": 428, "2039": 428, "20396": 459, "20397": 459, "2040469e": 491, "2041222e": 491, "20421": 459, "20422": 459, "2045": 398, "2046": 428, "2049": [428, 487, 511], "205": [439, 456, 472, 481, 493, 550, 571], "2050": 428, "20508075688775": 487, "2051": 428, "20517": 459, "20518": 459, "20519": 459, "205192": 487, "20521": 459, "2053315944536949e": 500, "205357": 487, "2054": 428, "20559": 511, "2058705e": 491, "206": 487, "2061": 487, "2062580e": 491, "2064": 428, "2064335": 97, "2065": 428, "2066": 428, "2068682e": 491, "2069": 428, "207": [468, 472, 476, 495], "2071": [398, 428], "2075": 414, "207520865": 480, "207521165": 484, "207521465": 480, "207521627": 484, "2076": 428, "2077": 428, "2079930e": 491, "207e": 466, "208": [60, 468], "2085": 428, "2089": [400, 430], "20898": 459, "20899": 459, "209": 472, "20900": 459, "2093": 428, "2095": 472, "2097": 428, "2097e": 462, "2098": 428, "20deg": [474, 475], "20e": 491, "20th": 412, "21": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 102, 105, 127, 130, 152, 273, 389, 390, 424, 435, 441, 450, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 538, 586], "210": [439, 487], "2103": 487, "2104": 429, "2104353e": 491, "2106": 429, "2108": 429, "210e": 481, "211": [487, 488], "2111": 429, "2112": [429, 510], "211273": 560, "21134890398": 489, "2114": 429, "2115": 429, "211770556360534": 482, "2118": 429, "2119": 429, "211e": 487, "212": [67, 439, 454, 462, 487], "2121": 429, "2121164e": 491, "2123": 429, "21236e": 457, "2124": 429, "2126": [429, 457, 465, 467, 470, 472, 478, 481, 500], "2128": 429, "2129": [400, 430], "2129e": 481, "213": [456, 461, 464], "2130": 429, "2131": [429, 487], "2132": 429, "21325": 501, "2133": 429, "2136": [399, 431], "2139": 429, "214": [460, 466], "2140": 429, "2141": 429, "2142": 429, "2145": 429, "2146": 429, "21464892": 511, "214e": 462, "215": [67, 439, 453, 487], "21500000000003": 545, "2151": 429, "2152": 429, "21525804550772332": 473, "2153": [429, 487], "2154": [429, 487], "2155": [433, 458, 480, 481, 484, 485, 487, 497, 511, 551], "215686274509824": 476, "2157": 429, "2159e": 102, "215e": 487, "216": [243, 462, 493, 495, 580], "2160": 429, "2162670e": 491, "2163": 429, "2164425e": 491, "2166": 429, "2169": 429, "217": [462, 487], "2171": 429, "21731921e": 493, "21733761e": 493, "21735587e": 493, "218": 61, "219": [456, 550], "2190": 404, "2192": 430, "2197": 472, "21t13": [463, 467, 468, 470, 496, 509, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "21t19": 94, "21t20": 94, "22": [67, 83, 85, 88, 103, 106, 107, 111, 112, 137, 172, 177, 180, 195, 196, 205, 208, 390, 425, 438, 462, 463, 464, 465, 466, 471, 479, 481, 484, 487, 488, 492, 493, 494, 502, 503, 504, 509, 510, 511, 522, 529, 532, 534, 535, 538], "220": [456, 481, 487, 495, 571, 586, 587], "2200": 430, "2201": [65, 273, 487, 511, 568], "2202e": 511, "2204": 430, "2206": 430, "220e": 487, "221": [400, 439, 456, 571], "22149": 466, "2217": 430, "2217412e": 491, "2218": [403, 431], "2219": [402, 431], "222": [58, 487, 495], "2221": 487, "22245374e": 128, "2227134679628": 481, "22271346796282": 481, "222713467962826": 481, "2229": [399, 430], "223": [456, 495, 571], "2230": 430, "2231": 487, "2234": 481, "2235": 430, "2237": [430, 511], "2238": 430, "2239": 430, "223905": 468, "2240": 430, "2243": 430, "2244": 430, "224436": 511, "225": [96, 311, 312, 410, 439, 456, 487, 571], "2250": 430, "22500": 468, "2254": 430, "2255": [404, 497], "225575051666": 487, "2255890": [480, 484, 497], "2257": 430, "2259": 430, "226": [456, 472, 501, 550], "22608": 488, "2262": 430, "22635140877790516": 490, "2264": [398, 430], "22646133647326874": 490, "2264827111476982": 490, "22648881839710966": 490, "2265163003209506": 490, "22662622801631419": 490, "2270": 403, "2272": 430, "2274": [405, 431, 457], "2276": 430, "2277": 430, "2278": 430, "2278975306934438": 490, "2279": [403, 431], "227e": 487, "228": [296, 302, 394, 400, 463, 468, 487, 492, 503], "2287": 430, "2289": 430, "22891063541381": 481, "229": [67, 487], "2290": 405, "2292": 431, "2294": 430, "2296": 430, "2297": 430, "22974080e": 501, "2298": 430, "22e": 492, "22nd": 425, "23": [77, 94, 180, 386, 390, 412, 425, 449, 456, 459, 462, 464, 466, 471, 481, 484, 487, 490, 493, 495, 497, 509, 511, 512, 534], "230": [439, 466], "2300": 430, "2304": 404, "2305": 430, "230542e": 487, "2307": [64, 65], "2308": 431, "231": 439, "2310": 430, "2313": 431, "2314": 431, "232": 62, "2320": [431, 487, 488], "2321": 431, "2323": 431, "2326": 431, "2327": [487, 495], "23273": 501, "233": 463, "2330": 431, "23306": 466, "2332": 495, "233204": 564, "233303": 576, "2334": 431, "2335": 431, "2338": 431, "2339": [459, 487, 511], "234": [439, 482], "234132519034915": 493, "23413252": 493, "234191": 575, "2342": 431, "2343": 431, "234359264373779": 492, "2343e": 495, "2344": 431, "2345": 431, "2346": 431, "2347": 431, "235": 439, "2350": 432, "2351": 431, "23523": [150, 177, 215, 423, 462, 463, 471, 479, 488, 490, 492, 503, 509, 510, 522, 525, 585], "23526": [150, 215, 462, 463, 471, 479, 488, 490, 492, 503, 509, 510, 585], "235294117647083": 476, "2354": 431, "23559": [462, 463, 479, 488, 492, 509, 510, 532, 534, 535, 585], "2356": 431, "2357": 495, "2358": 431, "2359": 431, "23592": [462, 463, 479, 488, 492, 509, 510, 532, 534, 535, 585], "236": [439, 456, 487, 550], "2360": 431, "2362506e": 491, "23628": 501, "2365": 431, "2366": 431, "2367": 431, "2368": 431, "237": [456, 457, 571], "23734": 511, "2375": 431, "2377": 431, "2378": 431, "2379": 431, "238": 470, "2381": 431, "238298": 457, "2384": 457, "2385": 431, "239": [67, 472], "23905561": 491, "239439": 511, "239557417": 86, "2399": 487, "239e": 487, "23a": 61, "24": [25, 27, 52, 53, 86, 87, 91, 94, 389, 390, 403, 407, 442, 447, 457, 463, 466, 481, 484, 487, 488, 493, 495, 500, 501, 509, 534, 551, 558, 567, 568, 569], "240": [103, 106, 107, 111, 112, 125, 487, 488, 489, 523], "2400": 431, "2401": 431, "2404": 431, "2404372662198": 481, "2405": 432, "240e": 462, "241": [456, 458, 461, 487], "2412": 431, "2414": 487, "2419": 457, "2428255": 489, "242835": 67, "243": [462, 489], "2431": 487, "2432": 466, "2433": 432, "2435": 432, "243742672227972e": 484, "244": [67, 439, 462], "2440": 487, "2441": 432, "244140625": 495, "2443672e": 491, "2444": 432, "2446": [432, 495], "2448": 432, "2449": 432, "245": 439, "2450": [432, 495], "245152": 472, "2454": 432, "2455": 432, "24579": 489, "2459": 432, "246": [439, 456, 472, 477, 489], "2461": 432, "24611324074": 487, "2463": [406, 432], "2464": 432, "2465055e": 491, "2468": 432, "24685677e": 491, "247": [67, 439], "2470": 432, "2470e": 498, "2471938975366008": 311, "2472": 432, "2475": 432, "2476": 432, "2477": 432, "2478": 432, "2479": [432, 510], "248": 439, "2481": 432, "248122": 487, "2483": 432, "2485": 509, "2486": 432, "249": 439, "2490": 432, "2491": 432, "2492": 432, "2493": 432, "2496": 432, "24968": 457, "2497": 432, "2498": 432, "2499": 432, "249965667724609": 492, "24e": [487, 495], "25": [33, 52, 87, 91, 102, 145, 156, 167, 180, 296, 302, 390, 403, 410, 425, 446, 453, 454, 457, 458, 462, 463, 466, 472, 481, 482, 484, 487, 491, 493, 495, 511, 543, 548], "250": [493, 584], "2501": 432, "250185": 492, "2502": [432, 472], "2505": 432, "2505121": 97, "2505703": 482, "2509": 487, "251": [466, 470], "2510": 432, "251185": 511, "2511884200000000": 511, "2511886431": 489, "25162e": 457, "2518": 487, "251932": 487, "252": [439, 472, 487], "2520": 432, "2521": 432, "2523": 432, "2525": 432, "2528": 432, "253": [465, 495], "2535": 432, "2536": [432, 495], "2537": 495, "2538": 432, "254": 439, "2540": 432, "2546": 432, "254901960784338": 476, "25496": 511, "255": [456, 495, 499], "2551": 432, "2552": [432, 487], "2553": 432, "2555": 407, "2557": 432, "255750516626": 487, "2558": 432, "2559": 432, "256": [67, 442], "2560538e": 491, "2561": 432, "2562": 432, "2563": 432, "2564": 432, "2567": 432, "2568710719919036": 473, "257": 465, "2574": 432, "25743553e": 490, "25763": 466, "257642": 487, "2579999": 500, "258": [465, 549], "2580": 432, "25823909e": 489, "2585": 432, "2587": 432, "2589254117941673": 509, "259": [465, 511], "2591e": [458, 487], "2594": 432, "2595": 432, "2595e": 470, "259e": 466, "25e": 495, "25t_": 53, "25th": 412, "26": [19, 87, 91, 390, 425, 453, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 513, 561, 579], "260": [442, 511], "2604": 432, "2609": 495, "261": [442, 511], "2616": 432, "26173": 466, "2619": 432, "262": [442, 466, 495, 511], "2620": 432, "262554796103245": 509, "2625818241224747": 490, "2627": 432, "262728": 500, "26272868097919794": 497, "2628525e": 491, "263": [466, 495], "2633e": 471, "2635": 432, "2635108e": 491, "2637": 432, "2639554729438709": 497, "264": [442, 472], "2645": 432, "26475": 468, "2648150": 97, "2649e": 490, "265": [32, 400, 457, 466, 472, 495, 511], "2651": 432, "2654": 432, "266": [400, 465, 466, 472, 474, 478, 493, 495, 511], "2660": 432, "266192": 457, "26665050077722524": 497, "2667": 433, "267": [67, 465, 466, 472, 495, 500], "2672": 433, "2673": 433, "26739753": 97, "2674": 433, "268": [412, 466, 472, 487, 495, 509, 511], "2681": 433, "2684": 433, "2685": 433, "268663733018811": 497, "2687": 433, "26883694": 511, "26887783978974283": 497, "2689": 472, "269": [476, 511], "2692": 433, "269385": 487, "269627": 500, "2697": 433, "2699878e": 491, "26a": [50, 52, 53, 249, 285, 487], "26e": [487, 495], "26th": [408, 425], "27": [390, 392, 453, 456, 462, 466, 472, 484, 486, 488, 499, 511, 586], "270": [459, 466, 487, 495, 511], "2703": 433, "2705": 433, "27057337686547633": 497, "2707": 433, "2708": 249, "2709": 433, "27093776e": 491, "271": [456, 462, 465, 466, 470, 511, 571], "2711": 433, "2712": 433, "2713": 433, "2715": 433, "271777777777796": 459, "27177778": 94, "2718": 433, "2719": 433, "272": [465, 466, 487, 495], "2720": [407, 434], "27209": 511, "2723": 433, "2725": 433, "2726": 433, "2726e": 511, "2727": 433, "2727693": 500, "2727e": 462, "2728": 433, "2729": 433, "273": [83, 442, 460, 465, 466, 511], "2730": 433, "2731": 433, "2733": 433, "2734": 128, "2735": 433, "2737": 433, "2738": 433, "2739": 433, "274": 493, "27409496735322464": 497, "2741": 433, "2742": 433, "2743": 433, "274509803921596": 476, "2746": 433, "2747": 433, "27473": 472, "275": [456, 465, 487, 550, 571, 579], "2750": 433, "2751": 433, "2752": 433, "2753": 433, "2755": 433, "2756": 433, "2759": 434, "276": 442, "2761": 434, "2762": 434, "2764": 434, "2765": 434, "2767": 434, "2768": 434, "277": 465, "2771": 434, "2772": 434, "27727": 495, "2775": 434, "277522283785622": 473, "2776": 434, "2777": 434, "2777074437073429": 497, "2778": 434, "2779": 434, "278": [442, 465, 478, 487, 495], "2781": 434, "2782": 434, "2783": 434, "2784": 434, "2785": 434, "2785e": 462, "2787": 434, "2788": 434, "2789": 434, "278e": 466, "279": 442, "2790": 434, "2791": 434, "2792": 434, "2793": 434, "2794": 434, "2796": 434, "2797": 434, "2798": 434, "2799": 434, "27e": 487, "27t20": 89, "28": [21, 24, 67, 94, 395, 425, 460, 462, 464, 465, 466, 472, 474, 478, 484, 487, 489, 492, 493, 495, 500, 511], "280": [67, 442, 462, 465, 493], "2800": [474, 495, 511], "2801": 434, "2802": 434, "2803": 434, "2804": 434, "2805": 434, "2808": 434, "2809": 434, "281": [465, 487], "2810": 434, "2811": 434, "28118133544922": 487, "2812": 434, "28120079": 487, "2815": 434, "2816": [434, 495], "2817": 434, "2818": 434, "2818047723094509": 497, "28183829312": 489, "2820": 434, "2822": [434, 495], "2823": 434, "2825456e": 491, "2827": 434, "28275990e": 489, "2827988e": 491, "2828": 434, "2829": 434, "282951078740491e": 484, "282e": 487, "283": [442, 465], "2832": 434, "283218": 457, "283487": 487, "2837": 434, "28382603": 491, "2838398": 500, "28385358839966657": 497, "2839": 434, "284": [465, 487, 589], "2841": 434, "2842": 434, "28429": 472, "2845": 434, "2846": [434, 472], "285": [442, 465], "2852": 495, "2859229": 489, "285f": [83, 88], "286": [442, 465, 489], "2861432787940619": 497, "286e": [466, 487], "287": [52, 53], "2872": 435, "28720322": 97, "2874": [435, 511], "28755283551095173": 497, "2878662980210884": 312, "288": 128, "2880470e": 491, "288121": 563, "2885": 435, "288e": 460, "289": [442, 465], "28905": 501, "2891": 435, "28958": 466, "2896": 435, "2897": 435, "28e": [103, 460, 470, 472, 488, 501], "29": [67, 279, 401, 411, 415, 425, 453, 457, 460, 463, 465, 466, 472, 478, 480, 484, 487, 493, 495, 496, 500, 511], "290": [443, 465, 473, 489], "2900": 495, "290098": 489, "2903": [435, 495], "2903e": 464, "2907": 435, "291": [442, 481], "2912": 435, "29170324": 488, "291e": 511, "2922477": 97, "2923272203680937e": 484, "2924": 435, "2927": 435, "2929": 435, "293": 465, "2930": 487, "2931": 435, "2932": 435, "29355238360800506": 497, "2938": 435, "2939": 435, "294": 465, "2942": 408, "2943": 435, "2944": [409, 435], "2945": 435, "2947": 435, "2948": 435, "295": [442, 456, 481, 550], "2950": 435, "2951": 435, "2953": 472, "2956": 435, "29585273e": 501, "2959": 495, "295e": 487, "296": 442, "2965": 435, "2966": 435, "2967": 435, "297": 457, "2971e": 487, "2974": 435, "2976": 435, "2978e": 458, "298": [465, 472, 487], "2981": 435, "2984": 435, "29882214027996945": 497, "299": [442, 465, 487], "2990": 435, "2991": 435, "2992": 435, "2993": 435, "2995484265169": 485, "2996": 511, "2998": 435, "2999": [435, 487], "299940468335294": 472, "299995937905366": 472, "299e": 487, "299t": 53, "29t20": [480, 484], "29t21": 484, "29t22": 484, "29t23": 484, "29th": 425, "2_": 19, "2ax83kk6": 484, "2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 145, 146, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 177, 187, 188, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 215, 238, 379, 392, 397, 402, 405, 406, 407, 419, 427, 433, 446, 447, 448, 456, 466, 468, 469, 472, 493, 494, 511, 521, 524, 535, 536, 537, 549], "2degx2deg": 474, "2e": [202, 457, 459, 460, 474, 475, 484, 487, 490, 495], "2e3": [202, 493], "2e6": 501, "2f": [375, 457, 463, 497, 510, 587], "2fhl": [58, 71, 432, 444, 445, 487, 511, 520], "2hwc": [59, 72, 432, 438, 446, 487, 520], "2k": [103, 107, 111], "2m": [249, 285], "2nd": [60, 411], "2nd_psr_catalog": 60, "2pc": [60, 69, 73, 454, 487], "2pc_catalog_v04": 60, "3": [19, 20, 27, 28, 31, 32, 33, 37, 38, 42, 45, 46, 50, 51, 52, 53, 54, 59, 63, 67, 77, 80, 83, 85, 86, 87, 91, 94, 96, 101, 103, 106, 107, 111, 112, 113, 118, 121, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 180, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 219, 221, 238, 241, 250, 273, 279, 281, 284, 285, 293, 294, 295, 300, 311, 312, 333, 342, 363, 374, 379, 381, 383, 386, 387, 389, 390, 392, 397, 398, 400, 401, 402, 403, 405, 410, 411, 412, 416, 418, 423, 426, 427, 428, 430, 431, 436, 438, 440, 443, 444, 445, 446, 447, 448, 449, 451, 452, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 512, 513, 515, 518, 519, 522, 523, 527, 529, 531, 532, 534, 535, 538, 542, 544, 545, 547, 548, 551, 556, 557, 559, 560, 561, 562, 564, 565, 568, 570, 574, 575, 579, 583, 584, 586, 587], "30": [24, 52, 67, 83, 96, 103, 114, 115, 157, 196, 311, 312, 393, 394, 399, 406, 413, 425, 427, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 523, 529, 534, 535, 542, 543, 557, 560, 561, 562, 565, 570], "300": [74, 87, 91, 465, 467, 471, 474, 475, 478, 481, 487, 501], "3000": [396, 487, 537], "30000": 487, "3000000": 570, "30000000": 570, "3000020211954284": 472, "3000e": 458, "3001": 435, "30015e": 457, "3002": 435, "3003": 495, "3004625872247901": 471, "3005": 435, "3006": 511, "3006942": 97, "3007": 435, "301": [442, 465, 481], "3011061699260256": 497, "3012": 435, "3013": 487, "301668796295": 487, "302": [465, 478], "3020791585772495": 311, "30287": 466, "3028e": 495, "302e": 487, "303": [462, 465, 487], "3030": 435, "3032": 435, "3034": 487, "3035": 435, "3037": 435, "3037632e": 491, "3038": [435, 511], "3039": 435, "304": [458, 480, 481, 484, 485, 487, 497, 511, 551], "3041": 435, "3042": 435, "3043": 495, "3045": 435, "3046875": [488, 495], "3049664466089965": 312, "304_steadi": 458, "305": [67, 465], "3051": 435, "3051827": 97, "3051852": 97, "3051856": 97, "3052": 435, "3053": 435, "30535345877453707": 497, "3054": 435, "3054538213469855": 473, "3058": 435, "3058422e": 491, "305e": 487, "306": [442, 586], "3060": 435, "306196370000000": 511, "3063": 435, "3069": 435, "306e": 487, "307": [465, 571], "3070": 435, "3071": 487, "3072": 435, "3074": 435, "3075": 410, "3076": 435, "307e": 487, "308": [465, 472, 545], "3080": 435, "3081": 435, "3083": 435, "3085": 435, "3086": 435, "3088": 435, "3089": 435, "3091": 435, "3092": 435, "30997": 511, "30a": 285, "30d00m00": 413, "30e": [458, 491, 495], "30t00": 484, "30t01": 484, "30t02": 484, "30th": 398, "31": [395, 396, 409, 410, 423, 450, 458, 460, 463, 465, 466, 470, 473, 476, 480, 481, 484, 487, 488, 489, 492, 493, 495, 498, 502, 509, 511], "310": 481, "3100": 435, "3106": 435, "31067517": 487, "3107": [487, 511], "311": [545, 587], "3110": 436, "3111": 436, "3112": 436, "3113": 436, "31139074e": 490, "3114": 436, "311489174710791e": 511, "3116": 436, "3117988e": 491, "31186857659616535": 497, "3119611261122878": 497, "312": 442, "3122": 437, "3123": 437, "3124": 437, "3125": 437, "3126": 437, "3127": 437, "3129": 437, "313": [465, 471], "3130": 437, "3131": [438, 495], "3135914081482271": 497, "3136": 438, "313714614138": 488, "3138": 438, "314": [447, 456, 499], "3140": 438, "3141": 438, "3145": 438, "3148": 438, "315": 487, "3152": 438, "3153": 438, "3155": 438, "315767542862533": 509, "3158": 438, "316": [465, 501, 502], "3162": 438, "316227": 487, "316227766016838": 492, "3165": 438, "3168": 438, "3169": 438, "317": [442, 465], "3173": 438, "3178": 438, "317a": 285, "317e": [458, 487], "318": [442, 456, 571], "3180": 438, "3182": 438, "3185": 438, "3189697265625": 462, "319": [443, 501], "3191": 438, "3195": 511, "3197": 438, "319725": 500, "3199": 438, "32": [83, 196, 456, 462, 466, 468, 470, 477, 484, 492, 493, 511, 512], "320": [103, 106, 107, 111, 112, 125, 487, 488, 489, 495, 523], "3202": 438, "3207": 438, "3208": 438, "32095": 511, "321": 476, "3211": 438, "3216": 438, "3217": 438, "3219": 438, "322": 465, "3222": 438, "3228": 438, "3229": 472, "323": [456, 465, 571], "3230": 438, "3232943": 353, "3233356": 353, "32377509405904137": 96, "3237948931463171": 497, "3238": 438, "3241": 438, "3243": 438, "3246": 438, "32465247": 496, "3254": 438, "3257": 438, "3258": 438, "325e": 463, "326": [442, 456, 571], "3262": 438, "32684": 511, "32684833": 500, "327": 472, "3272": 438, "3276": 438, "3277": 438, "3278": 438, "3279": 438, "3279955e": 491, "328": 472, "3281": 438, "3283": 438, "3284": 438, "32843": 511, "32847": 457, "3285": 438, "329": [96, 311, 312, 480, 484, 487, 497, 525], "3293": 438, "3299": 487, "329e": [462, 481, 487], "33": [484, 485, 486, 490, 493, 511, 525], "330": [443, 465, 495], "3301": 438, "33013e": 457, "3302": 438, "3302565e": 491, "3303": 438, "330376": 67, "3304": 438, "3305": 438, "330505": 500, "33055e": 457, "3306": 438, "3307": 438, "3308": 438, "3309": 438, "3310": 438, "3314": 438, "33164865722698683": 497, "3319": 438, "3319831545301117": 311, "332": [67, 443, 456, 473, 477, 501], "3320": 438, "3323": [438, 488], "332525": 487, "3328": 438, "332e": [466, 472], "332f": 33, "3330487": 97, "3331": 511, "3331761": 97, "3333": 438, "33333333": 386, "3333333333333344": 476, "3335": 438, "33368e": 457, "3337": 438, "3338": 438, "334": [128, 501], "3342": 438, "3343": 438, "3346": 438, "3347": 438, "33484": 457, "3349": 438, "3349654391": 489, "334e": 487, "335": 443, "3353": 438, "3357": 438, "3358": 438, "335e": 460, "336": [476, 487], "3361689163045": 481, "3363": 438, "3364130e": 491, "336444e": 487, "336606": 457, "3368855e": 491, "3369": 438, "337": [443, 465], "3374": 438, "3377": 438, "33787": [96, 497], "33788": [96, 497], "33789": [96, 497], "3379": 438, "33790": 497, "33791": 497, "33792": 497, "33793": 497, "33794": 497, "33795": 497, "33796": 497, "33797": 497, "33798": 497, "33799": 497, "338": [443, 487], "33800": 497, "33800122": 97, "33801": 497, "3380311e": 491, "3381": 438, "339": [443, 462, 476], "3390": 438, "3392": 438, "3393": 438, "3395": 438, "3397": 438, "339835555384604": 497, "3398360": 491, "33983991887701287": 96, "3399": 438, "33e": [468, 482], "34": [52, 53, 67, 426, 457, 472, 480, 484, 488, 493, 495, 511], "34005": 457, "3402": 438, "3403": 438, "340391": 511, "3404": 438, "34047": 457, "3406": 438, "3409": [94, 438], "341": [457, 481], "3413": 438, "3416": 438, "3418": 438, "342": [443, 469], "3420": 438, "3423": 438, "3426": 438, "3428": 438, "343": [456, 571], "3434": 438, "3438": 438, "3439": 438, "343e": 460, "344": 487, "344238": 511, "3443842": 500, "3445": 438, "3446": 438, "3447": 438, "3449": 438, "344e": 67, "345": [456, 457, 495, 571], "3453": 438, "3454": 438, "345692": 511, "3458": 438, "346": 495, "34613054105945": 473, "346488e": 487, "3466": 438, "3468": 438, "347": [443, 459], "3471": 438, "3474": 438, "348": [443, 462], "3480": 438, "3481e": 470, "3488": 438, "348887": 467, "348e": [67, 487], "3491": [438, 466], "349530550405035": 490, "349530725254468": 490, "34953073943366": 490, "34953075819191": 490, "34953077463306": 490, "34953079334042": 490, "349530807529028": 490, "349535814693404": 490, "349536723056637": 490, "349537158300407": 490, "349537804239922": 490, "34953807814367": 490, "34953910575007": 490, "34953932636892": 490, "349542158419318": 490, "349559366703698": 490, "349655": 489, "34971209244579": 490, "349724940685938": 490, "3499075e": 491, "349e": 466, "34e": [487, 495], "35": [67, 403, 410, 423, 462, 480, 481, 484, 487, 490, 496, 498, 500], "350": [476, 482, 489], "350105": 472, "3502": 487, "35030398537787": 490, "3503706026275275": 497, "3504": 511, "35052105086856": 490, "350556388466543": 490, "350d": 476, "351": [443, 481, 487, 511], "3514e": 510, "3515": 438, "352": [443, 487], "3521": 459, "3523": 438, "3529": 438, "3529411764705888": 476, "353": [443, 511], "3535": 440, "353592500058824e": 509, "3536": 457, "353e": 472, "354": 476, "3544": 438, "355": 483, "35569283": 491, "355804": 511, "3559": 438, "356": 511, "3561": 438, "3568": 438, "357": [487, 511], "35722435185": 487, "3576e": 459, "358": [472, 487, 511], "3583": 472, "3584": 438, "359": [443, 472, 487, 511], "3590188e": 491, "3592": 438, "3599": 474, "359e": 511, "36": [67, 86, 152, 331, 459, 472, 474, 481, 487, 488, 491, 511], "360": [400, 493, 513], "3600": [465, 474, 475, 493], "36014": 470, "36073833513766157": 497, "361": [67, 443], "3619e": 510, "36228879": 511, "36273": 511, "363472509034498": 497, "3639946": 482, "364": 443, "3659253e": 491, "366": [489, 510], "366461": 579, "366486": 489, "36669663417038234": 497, "3669": 440, "367": [443, 476, 495], "3674884": 487, "36834038301420274": 497, "368346217294295": 96, "3684": 440, "3689322e": 491, "369": [443, 456, 480, 483], "3690": 511, "3699": 440, "36e": [486, 487], "37": [457, 458, 463, 465, 468, 489, 490, 501, 587], "370": [476, 487, 495], "371": 443, "3710784e": 491, "3712": 440, "3713": 440, "3715810e": 491, "3718745": 97, "372": [128, 511], "3720": 440, "3722": 440, "3725490196078436": 476, "3728": 440, "373": 472, "3733": 440, "373685": 509, "373892759762174e": 484, "3739292e": 491, "374": 476, "3740": 440, "37455141": 511, "3748": 440, "375": [443, 493], "3750": 472, "37506": 511, "37517": 466, "3752": 440, "3759377929871826": 497, "376": 67, "3760": 440, "3761": 440, "3765": 457, "3777": 440, "37773": 466, "3779": 511, "3783": 440, "379": [443, 462], "3792": 495, "3796": 440, "3797": 440, "38": [22, 67, 457, 459, 469, 487, 493, 495, 511, 570], "3802": 440, "3804": 440, "3806": 440, "381": [456, 461, 495], "3810": 440, "3812": [487, 511], "3812120e": 491, "3812160e": 491, "38143003": 97, "3817": 440, "38258165e": 489, "3829": 511, "382e": 462, "383": [67, 443, 487, 493], "3833": 440, "3837": 440, "383e": 67, "384": 489, "3841385": 489, "3842": 440, "3846": 440, "3847": 273, "3848912826152664e": 511, "3856": 440, "3860": 440, "3862": 449, "387": [443, 511], "3872": 487, "3873": 440, "3874": 440, "3876": 440, "387834": 511, "388": 549, "388405": 511, "3885947175689592": 497, "3886270e": 491, "3887": 440, "389": 391, "3892": 440, "3895": 440, "3898": 440, "389e": 511, "39": [17, 18, 21, 22, 24, 25, 27, 59, 481, 486, 487, 493, 501, 549, 570], "390": 438, "3904": 440, "39042": 86, "3905": 440, "3906": 440, "391": 487, "3915": 440, "3918": 440, "392": [443, 463], "39200283e": 484, "392156862745098": 476, "39224": 466, "3925": 449, "393": [211, 212], "3933": 440, "3935": 459, "3936": 440, "393634": 509, "394": 443, "3941": 440, "3945": [459, 487], "3947637541758": 481, "394765638937866": 509, "3948": 441, "395": 443, "3950": [411, 449], "395004": 511, "3956": 449, "3959": 441, "396": 443, "3962942e": 491, "3966": 441, "397": 462, "3970": 412, "397035933646679e": 484, "39728": 511, "3975": 441, "3979": [441, 585], "397918129147546": [423, 585], "39791813": [423, 585], "398": [443, 468, 470], "3981": 511, "39810717055": 489, "3981075200000000": 511, "3983": 441, "3986": 441, "3987": 441, "3988": 441, "398e": 487, "3990": 441, "39e": 487, "3c_r": 484, "3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 152, 158, 165, 166, 168, 177, 288, 290, 392, 395, 396, 397, 401, 402, 405, 406, 407, 419, 427, 428, 429, 431, 432, 433, 434, 445, 446, 447, 454, 456, 457, 458, 460, 462, 463, 466, 467, 468, 472, 473, 474, 475, 476, 477, 480, 481, 484, 488, 490, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 509, 510, 521, 523, 524, 525, 532, 537, 582, 584], "3d33m15": 67, "3dataset": 471, "3e": [20, 128, 134, 472, 475, 478, 479, 482, 484, 487, 495], "3e4": 501, "3e5": 501, "3e6": 570, "3e7": 570, "3f": [128, 473, 586, 587], "3fgl": [61, 67, 74, 232, 272, 409, 439, 442, 444, 445, 446, 456, 460, 487, 496, 511, 520, 539, 571], "3fgl_name": 71, "3fhl": [62, 75, 86, 130, 132, 137, 228, 252, 291, 406, 445, 446, 460, 466, 474, 476, 487, 493, 494, 495, 496, 501, 511, 520, 522], "3fhl_data_fermi": 471, "3fhl_dataset": [291, 471, 494], "3fhl_model": [291, 471, 495], "3g": [486, 487], "3hwc": [63, 76, 438, 449, 487, 520], "3ml": [404, 501], "3pc": [64, 69, 77, 454, 487], "3pc_catalog": 64, "3rd": 64, "3rd_psr_catalog": 64, "4": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 54, 61, 67, 83, 87, 91, 102, 103, 106, 107, 111, 112, 117, 120, 131, 137, 149, 154, 157, 165, 177, 180, 196, 197, 198, 199, 200, 201, 206, 209, 210, 222, 223, 226, 230, 232, 233, 234, 239, 243, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 284, 291, 292, 331, 373, 386, 387, 389, 390, 398, 400, 403, 406, 410, 411, 423, 426, 435, 437, 438, 439, 442, 444, 445, 448, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 504, 509, 510, 511, 513, 518, 519, 520, 534, 537, 538, 542, 543, 546, 551, 556, 569, 570, 578, 584, 585, 586, 587, 588], "40": [59, 105, 111, 112, 127, 393, 439, 459, 460, 462, 463, 470, 472, 480, 481, 484, 493, 496, 500, 511, 534, 548, 557, 560, 565, 570, 586], "400": [137, 466, 467, 472, 476, 487, 493, 511, 579], "4000": 449, "40000": [177, 510], "400056": 457, "40050506591797": 487, "40051035": 487, "40071076": 97, "400x200": 476, "401": [456, 463, 470, 477], "40112": 511, "4013": 449, "4014": 449, "4015": 449, "4017": 449, "4018": 449, "401e": 466, "402": 157, "4022": 449, "40235": 470, "4024": 449, "4025": 449, "4026": 449, "402712": 487, "403": [443, 472, 495], "4035": 511, "4037": 449, "4043": 449, "4044": 449, "40481": 470, "405": 394, "4051": 449, "40525": 470, "4054": 449, "4058": 449, "406": 511, "40611": 511, "4067": 449, "40671": 468, "40672": 468, "407": 487, "4071": 449, "4073": 449, "4073799600000000": 511, "4075": 449, "4076": 449, "4079": 449, "408": [462, 493], "4080": 449, "4080942e": 491, "40822469e": 496, "4083": 449, "4084": 449, "4088": 449, "4089": 449, "40919": 466, "4093": 449, "409416": 511, "4095": 449, "4098": 449, "40deg": 500, "41": [67, 86, 94, 400, 461, 463, 481, 487, 488, 493, 501, 511, 543, 544, 547], "410": 476, "41009347393684": 488, "4103": 449, "4105": 449, "4106": 449, "4107": 449, "4108": 449, "411": 511, "4110e": 487, "4112": [128, 449], "4113": 449, "4115": 449, "41176470588239": 476, "4119": 449, "411e": 460, "4120719e": 491, "412165": 472, "412779907405": 487, "413": 472, "4131e": 481, "414": 443, "4140541880588": 473, "41415047": 97, "4142135623730951": 121, "41449": 466, "414e": 466, "415": [443, 561], "4151e": 470, "4155": [487, 511], "41584196": 485, "416": [67, 470, 487, 492], "4161e": 470, "417": [456, 461, 487], "418007850646973": 423, "41803": 468, "4185e": 481, "41866": 501, "419": 495, "4191": 452, "4198250e": 491, "41995": 466, "419e": 487, "41e19": [19, 20], "42": [25, 27, 94, 157, 353, 400, 465, 472, 487, 491, 492, 493, 497, 500, 538, 541, 542, 549], "42050348": 488, "420600": 509, "4208": 452, "4209": [452, 466], "421": [443, 476, 511, 584], "4210": 452, "4212": 452, "4212028e": 491, "4213": 452, "4215": 452, "4216": 452, "4217": 453, "4219": 452, "4220": 470, "4221": 450, "4225498e": 491, "4225631e": 491, "42267": 472, "4226731": 472, "423": 462, "4231": [450, 452], "42361": 466, "42399798": 472, "423e": 128, "42400": 472, "4242": 452, "4243": 452, "4245": 452, "42463": 501, "424650": 488, "42474": 511, "425": 511, "4252": 452, "426": 487, "4264": 452, "4268": 450, "427": 463, "4275": [450, 452], "4277": 452, "4280": 452, "4281": 487, "4282": 452, "4288": 452, "429": 462, "4294": 452, "42e": [490, 495], "43": [284, 353, 400, 463, 465, 472, 481, 488, 493, 511, 538, 545, 546], "430": 487, "43000": [52, 53], "4301": [450, 452], "4303606e": 491, "4305": 452, "431": [394, 476, 488], "431023787974766e": 509, "43113": 457, "43137254901962": 476, "4313847458879893": 497, "4319": 511, "43197": 466, "4324": [450, 452], "4326": 452, "432878": 487, "432e": 487, "433": 466, "4336": [450, 452], "43366": 579, "4338e": 458, "434": 487, "43416595": 482, "4344": 450, "4346": 452, "435": 443, "4350": 452, "4351637481047363": 497, "4352": 452, "4357": 273, "4359": [450, 452], "435e": 462, "435l": 487, "436": 443, "4360750e": 491, "4369": 452, "437": [456, 477, 487, 495], "4370": 452, "4373240195300975": 497, "437396": 545, "438": [477, 495], "4380": [451, 452], "4381": [414, 453], "4382": 451, "439": 462, "4393": [451, 452], "4394": 451, "4395": 452, "4397": [451, 452], "439e": 487, "43e": 495, "44": [21, 50, 86, 353, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 561, 570], "4402": 452, "44055555555555603": 94, "4406": 452, "4408": 453, "4409": 452, "4412": [451, 452], "4417": 452, "4418": 452, "4420073e": 491, "4420222e": 491, "4428": 452, "4428634e": 491, "443": 462, "4430": 452, "44319": 488, "4432": 453, "4433": 454, "4435": [451, 452], "443665521576": 578, "44367051435": 576, "443673122616": 577, "4444": 452, "444e": 471, "445": 466, "4450": 511, "44528685": 511, "4453": [451, 452], "44573": 94, "4458": 452, "4459": 452, "446": [495, 587], "4466": [452, 470], "4466832000000000": 511, "4466835921": 489, "447": [443, 456, 571], "44742": 511, "44749e": 457, "44755": 468, "447552": 457, "447e": [472, 487], "448": 476, "4480056e": 491, "44802852": 511, "4481": 487, "4485": 453, "4486": [451, 452], "4491": [413, 453], "4495": 452, "4497": 488, "44e": 423, "45": [51, 54, 465, 471, 482, 484, 488, 493, 494, 496, 513, 538, 543, 544, 553, 559, 568], "450": 495, "4500": [451, 452], "4501": 453, "4504": 452, "4506": 452, "4508": 452, "4509803921569": 476, "4510": [452, 470, 511], "4515": 486, "4517490659800822": 479, "4520": 451, "4521": 452, "4524": 451, "453": [458, 495], "454": 462, "4540": 453, "4545": 452, "4546": 453, "455": [443, 460], "45515263080596924": 459, "45517415e": 489, "455870": 472, "455e": 67, "456": 443, "4561": 453, "45646095": 482, "4567": 453, "457": [285, 443, 495], "457251": 511, "4574": [451, 453], "4575": 94, "4578": 451, "4579e": 457, "458": [476, 487], "4584": 453, "45856": 511, "4586649826004114": 311, "459": [443, 488, 495], "4593": 451, "45935": 511, "4595": 453, "4599": 453, "45\u00ba": 502, "46": [53, 67, 111, 112, 400, 487, 493, 554, 555, 560], "460249999": 86, "4608": 453, "461": [443, 484], "461416": 552, "4615": 453, "46186956763267517": 459, "4619": 451, "462": [443, 462], "4620": [414, 453], "4620e": 487, "46225": 466, "4628": 453, "463": 511, "4631": 451, "4635": 453, "4638": 453, "4638e": 467, "464": 478, "4642048e": 491, "4647544e": 491, "465": [462, 487, 495], "4653": 451, "4657": [451, 453], "465784": 511, "4660": 453, "4664": 453, "466656": 544, "4668": 453, "4669": 453, "4671": 453, "46711": 466, "4675e": 480, "4677": [451, 453], "468": [482, 487], "4681": 451, "4684": 459, "468805426856864e": 52, "468e": 67, "4697": 453, "46e": [83, 467, 472], "47": [67, 456, 461, 462, 481, 484, 487, 493, 511, 563, 565], "4703": 453, "470588235294144": 476, "4711": 511, "4712": 466, "4714": 453, "4721": 451, "4726": 453, "4728": 451, "4729": 453, "473": [443, 456, 462, 512], "4738": 453, "474": 443, "4740": 453, "4741": 453, "474e": 487, "475": [443, 495], "4750": 453, "4753": [451, 453], "475468": 457, "4755": 451, "4759": 453, "4770": 453, "4772": 451, "47797": 466, "477e": 487, "478": 443, "47802": 497, "47803": 497, "47804": 497, "47827": 497, "47828": 497, "47829": [82, 497, 503], "4783": 453, "4785": 453, "47e": 487, "48": [33, 177, 426, 470, 471, 493, 495, 501, 552, 558, 567], "480": [459, 487, 495], "4802": 453, "4805": 453, "480554966154": 470, "48068": 466, "4808": 453, "480e": 487, "481": [391, 443], "4810": 453, "4814": [453, 511], "4817": 453, "48180882997916e": 509, "4819444e": 491, "482": 457, "48215685": 97, "4822": 453, "48248": 487, "4825": [487, 511], "4828": 453, "4829": 453, "483": [456, 506], "4834": 453, "4834488e": 491, "4835": 453, "4837": 453, "484": 443, "48442": 279, "4845": 453, "4847": 453, "4848653": 487, "4849": [453, 487, 511], "485": 443, "4850": 453, "4851": 453, "4854": 453, "487": [443, 509], "4875723e": 491, "4876": 451, "4879": 453, "4881": [258, 259], "4886": 453, "48871": 457, "489e": 487, "48e": [487, 495, 510], "49": [53, 466, 470, 481, 487, 495, 501, 509, 537, 556, 566, 569], "4902": 453, "4904": 453, "4904078e": 491, "49078e": 457, "4913": 451, "49152": 501, "4917": 453, "492e": 481, "493043594026": 470, "4933657e": 491, "4936": [451, 453], "4937": [451, 453], "4940": 453, "494037": 553, "49417615": 86, "4942": 453, "494e": 462, "4958277": 97, "496021": 500, "4963": 511, "496566": 541, "4966": 511, "4968236e": 491, "4970": 453, "4971": 453, "49716789e": 489, "4971704e": 491, "4973": 453, "4975": 453, "4978": 453, "498": 511, "4983": 454, "498784": 487, "4989": 453, "498e": [487, 511], "499": [67, 487], "49919925926": [243, 580], "4992": 453, "4994": 453, "4996": 454, "49972277488662115": 497, "4999833830074": 472, "4achjh": 484, "4d": 405, "4e": [482, 487, 495, 570], "4f": [585, 586, 587], "4fgl": [65, 78, 273, 274, 409, 430, 432, 438, 440, 453, 456, 458, 471, 487, 494, 496, 520, 539, 571], "4th": [398, 425], "4yr_catalog": 61, "5": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 67, 83, 87, 91, 103, 104, 106, 107, 110, 111, 112, 121, 125, 128, 129, 131, 133, 134, 135, 136, 137, 145, 146, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 177, 180, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 222, 223, 226, 228, 229, 230, 232, 233, 234, 238, 239, 241, 243, 245, 246, 249, 252, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 279, 281, 285, 308, 313, 345, 376, 377, 381, 383, 386, 387, 390, 391, 393, 397, 398, 400, 401, 402, 403, 405, 409, 410, 411, 415, 418, 423, 426, 428, 430, 431, 438, 440, 442, 443, 445, 446, 447, 451, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 513, 518, 519, 522, 529, 532, 534, 535, 536, 537, 538, 542, 543, 544, 545, 547, 551, 552, 557, 559, 560, 561, 565, 566, 570, 573, 574, 575, 576, 578, 584, 586, 587], "50": [87, 91, 94, 113, 118, 135, 353, 393, 413, 457, 463, 464, 468, 470, 478, 480, 481, 482, 487, 488, 491, 493, 495, 496, 497, 500, 501, 503, 509, 510, 511, 534, 537, 545, 551, 587], "500": [197, 198, 200, 206, 209, 210, 466, 472, 474, 475, 493, 500, 501, 511, 537, 542], "5000": [19, 20, 87, 91, 513, 537], "5000056568267741": 472, "5000e": 465, "50022222": 94, "500249": 487, "5004": 472, "5015": 453, "502": 443, "5029747": 464, "503": 443, "5030": 511, "5040": 453, "5044": 453, "5049": 511, "505": [67, 487, 488], "505523195905": 470, "5057": 454, "5058": 454, "506": 443, "5066": 487, "507": 443, "5074834": 97, "5078068": 97, "50807568877": 487, "509587": 489, "509632": 489, "509e": 487, "50e": [465, 495], "51": [52, 53, 67, 468, 470, 476, 509, 557, 564], "510": [443, 489], "5106": 511, "51095676": 482, "511": [67, 443], "5115": 454, "51179": [387, 589], "5118": 454, "512": 462, "5125": 454, "5126": 67, "5129": 454, "513": [423, 493], "51312": 472, "5135": 454, "5144": [94, 457], "5145": 454, "514854": 500, "51544": [465, 474, 475, 478], "5156": 454, "5160": 454, "5161": 454, "5162628e": 491, "5163273": 500, "5169": 454, "5176": 454, "518": [443, 495], "5180": 454, "5184": 454, "5186": 454, "5188": 454, "5188338e": 491, "51910": 94, "5192420e": 491, "5194769e": 491, "51948705e": 496, "51958055e": 489, "52": [53, 128, 177, 457, 459, 466, 468, 470, 478, 481, 487, 500, 503, 511, 562, 574, 578, 579], "5200": 454, "5205": [454, 501], "5206": 454, "5207": 454, "52074074074": 83, "521": 444, "5222": 454, "523": [444, 493], "5230376e": 491, "52318414": 97, "523681640625": 462, "5237647004325865": 497, "52389101852": 487, "523a": [249, 285], "523e": 463, "524": [444, 487, 495], "5248": 511, "524807800000000": 511, "5254": 454, "5255": 454, "5258": 454, "52587": 466, "526": 444, "52607": 511, "526310": 555, "5269": 454, "527": [444, 501], "5270": 454, "5271": 454, "5275": 454, "5279": 454, "527e": 463, "528": [462, 495], "5280": 454, "52826166": 487, "5283": [487, 511], "52839183495354": 481, "5285": 454, "5289": 454, "529": 444, "5292": 488, "529411764705883": 476, "5297": 454, "5297030e": 491, "5298": 454, "52e": [482, 509], "53": [28, 472, 484, 498, 542, 551, 572, 576, 577, 580], "530": 444, "5300": 454, "53025": 94, "5303": 454, "5304": 454, "531": [444, 476], "5312": 454, "5314": 454, "5316": 454, "5320": 454, "53213": 472, "5324402": 97, "5326744": 97, "5326841": 97, "5326859": 97, "533": 487, "53343": [423, 479], "53344": 479, "53345": 479, "53346": 479, "53347": 479, "53348": 479, "5342": 454, "5345275e": 491, "5346": 454, "53482e": 457, "535": [444, 487], "5350": 454, "535058216604496": 285, "5353": 454, "5356": 454, "53566": 457, "53616": 249, "5366": 454, "5370": 454, "5378": 454, "5380": 454, "5381": 454, "5382": 454, "53849342472254e": 484, "5385": 454, "5389": 454, "539": [285, 495, 549], "5390": 454, "5390438": 97, "5392e": 480, "539397": 487, "53945": 480, "53946": [484, 485], "539e": 487, "53e": [423, 465], "54": [67, 459, 462, 487, 491, 573, 575], "5400": 488, "5405": 454, "5407": 454, "5407363826067": 522, "5407363826070": 522, "5408": 454, "5409": 454, "541": 444, "5411": 457, "5423": 454, "5427": 454, "5427520e": 491, "54282": 466, "5433": 454, "5437": 454, "5438": 454, "5438860e": 491, "544": [444, 487, 501], "5445": 454, "5448": 454, "5449": 454, "545": 444, "5453": 454, "54566271": 586, "546": 444, "5461745": 97, "5462": 454, "5466": 454, "54676837e": 490, "54682": [466, 487, 501, 511], "547": [444, 457, 487], "5472": 454, "54721e": 457, "5477": 487, "54772": 487, "54892": 466, "548e": 487, "549": 444, "549007644529844e": 509, "549019607843138": 476, "5499840": 500, "54e": 495, "55": [39, 42, 87, 91, 215, 481, 482, 490, 494, 498], "550": 462, "55045": 487, "551": 487, "551531": 577, "55197": [387, 589], "552": 487, "5525": 454, "55275": 501, "553": [458, 487], "5531e": 458, "553337": 511, "5538": 511, "5538942e": 491, "553e": 466, "554": 67, "55410": 487, "5545": 454, "5545130e": 491, "55461982e": 489, "554e": 460, "556": [444, 462, 587], "5561760e": 491, "557": [444, 456, 495, 509, 512], "557726": 566, "55775": 487, "558": 444, "558338072878877": 509, "559": 444, "5594": 83, "56": [457, 463, 468, 482, 493, 502, 509], "560": [37, 487], "5606985": 482, "5607778e": 491, "56093766": 97, "561": [456, 504], "56141": 487, "562": 487, "5622482": 97, "56234132519": 489, "56353481": 586, "563570": 478, "563e": [462, 472], "564": [300, 444, 462, 495], "564139576925786": 473, "5644": 488, "565": 444, "56506": 487, "565095": 457, "566e": 462, "56711": 511, "5686274509803928": 476, "56871": 487, "569": 444, "56922612": 586, "5692809e": 491, "56973": 511, "57": [33, 466, 472, 481, 482, 493], "57011": 472, "571": 487, "57185": 522, "5719922e": 491, "571e": 487, "572": 463, "57233": 511, "57236": [466, 487, 501, 511], "572e": [460, 466], "573": [67, 462, 511], "57300957": 180, "5754970e": 491, "576": 495, "5760": 511, "57602": 487, "5763635e": 491, "5768262e": 491, "576e": 466, "577398": 501, "5779092e": 491, "578": [487, 489, 586], "5782814": 489, "579": 487, "579178801616083e": 484, "57944657408": 487, "57967": 487, "57e": 487, "58": [423, 426, 465, 470, 473, 487, 492, 493, 495, 503, 509], "580": 587, "581": 463, "5819e": 464, "582": 444, "58332": 487, "5833e": 487, "5835918e": 491, "583e": 466, "584": [456, 482, 483], "5842497e": 491, "584885": 574, "585": 487, "58540702": 97, "5867488e": 491, "58693695": 482, "58698": 487, "587": [456, 504], "5882352941176467": 476, "588e": 487, "58909": 481, "58926": 466, "5892966e": 491, "5895": 459, "58999": 243, "58e": [478, 487, 489], "59": [83, 456, 468, 478, 479, 480, 483, 487, 492, 503, 511], "590": 462, "59000": [243, 580], "59001": 243, "59063": 487, "5908": 487, "590835686434463": 497, "591": [444, 487], "59100": [579, 580], "59123": [573, 574, 575], "5915030546513255": 485, "5915e": 487, "59200": 579, "59233": 496, "59235": [83, 500], "59240": 496, "5924e": 510, "59250": 496, "59254e": 457, "59265": 457, "593": 444, "59300": 482, "59344": 511, "59348": 511, "59365": 580, "594": 444, "59400008": 97, "59428": 487, "59451": 466, "59497703e": 484, "5951631e": 491, "5956621435": 489, "596": 495, "59696": 466, "596e": 487, "597194451442478e": 484, "597774": 491, "59793": 487, "598": 511, "5985": 511, "5987726": 97, "599": [444, 476, 480, 495], "599625": 500, "59976": 487, "599999904632568": 487, "59d09m41": 487, "59e": [487, 495, 501], "5a": 58, "5e": [465, 475, 487, 489, 495], "5u88sch5": 492, "6": [28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 52, 53, 67, 86, 87, 91, 100, 103, 107, 111, 113, 118, 128, 133, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 168, 169, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 243, 285, 374, 377, 390, 393, 398, 402, 403, 406, 411, 420, 423, 436, 438, 440, 446, 447, 451, 453, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 517, 534, 538, 544, 548, 568, 584, 586], "60": [67, 91, 159, 451, 463, 466, 487, 490, 501], "600": [456, 463, 466, 471, 571], "6000": 537, "6000000000000001": 496, "600661": 491, "60075": 491, "60090769e": 496, "600e": 462, "6018166e": 491, "601e": 487, "6024e": 510, "603": [495, 511], "6033": 457, "60350": 460, "603625": 491, "604": 462, "6046689e": 491, "60603928": 496, "60755": [576, 577, 578], "607843137254942": 476, "609352": 496, "60e": 487, "61": [67, 433, 470, 487, 495, 501, 587], "610": 495, "61051": 501, "6105760e": 491, "611": [466, 489, 586], "611168": 489, "6116853": 487, "611e": 487, "6125": 503, "612e": 466, "613114": 485, "61422433": 97, "61453755944866": 473, "61489": 491, "615316": 511, "617835": 491, "6181862e": 491, "61862": 243, "619": 487, "6194453e": 491, "61975454954816": 509, "62": [487, 502, 510], "620": 487, "620398": 491, "6205": 511, "62111": 466, "621499": 511, "6218742e": 491, "6219": 460, "622": [444, 460], "62258": 487, "6227766": 493, "62277660168379": 493, "6228e": 460, "623": [487, 511], "62320": 460, "623286": 463, "623397": 491, "62341325": 493, "623413251903492": 493, "6238": 481, "624": 495, "624122": 472, "624e": 462, "625": [456, 488, 499], "62503": 487, "62514628": 491, "6253652e": 491, "6259962e": 491, "6266": 511, "6267247": 511, "627450980392158": 476, "628": 444, "62842028": 488, "63": [195, 196, 205, 208, 457, 462, 464, 488, 492, 502, 503, 509, 510, 532, 534, 535, 538], "630": [82, 495, 503, 509], "6309576500000000": 511, "630e": 67, "631": [444, 470], "631155605": 474, "631159205": 474, "631170005": 474, "631173605": 474, "631177205": 474, "631180805": 474, "6318811e": 491, "632627": 511, "633": [85, 103, 106, 107, 111, 112, 177, 463, 471, 492, 509, 510, 534], "63307": 83, "63308": [479, 510], "633083": 494, "63310241699219": 471, "63326": 466, "6333": 94, "63342": 511, "633600": 495, "635": [444, 456, 477], "63500212963": 487, "6354": 511, "63541": 500, "63595333784091": 481, "63668832485633": 481, "638": 495, "639": 487, "6390": 457, "63902": 457, "6395e": 467, "6397": 511, "63e": 488, "64": [39, 67, 83, 128, 196, 426, 478, 487, 501], "640": [444, 456, 469], "6402822e": 491, "641": [444, 511], "64103": 500, "6413": 472, "6417": 472, "6419578e": 491, "642": 511, "6423836025257211": 473, "6429005895278312": 497, "642e": 462, "643": 33, "64323": 466, "64438": 501, "6444": 457, "644527": 489, "645": [488, 489], "6451": 472, "6464": 457, "647": 444, "647058823529452": 476, "6471115e": 491, "64794383e": 496, "648": 444, "648e": 67, "649": 444, "64987376": 97, "64e": 463, "65": [63, 410, 426, 428, 488], "650": 488, "6509": 457, "651": 487, "651058": 511, "6514": 511, "652": 471, "6522806": 511, "652368617859867": 471, "653": [444, 459], "65357608e": 491, "654": [457, 487], "65412": 472, "654e": 487, "655": 466, "655283": 466, "6554088e": 491, "6556248e": 491, "6557": 466, "655e": [67, 463], "656": 586, "65603222222": 501, "65603794185": 487, "6561e": 470, "6577182894355391": 497, "658": 495, "658909145253801e": 511, "6589622747787678": 497, "659": [462, 466], "66": [52, 53, 426, 429, 465, 471, 488, 490, 495, 498, 501, 509], "660": 444, "6604475": 472, "660e": 511, "660fals": 460, "661": 444, "66104": 457, "662": 487, "663": [462, 586], "663742400000000": 511, "664502403": 500, "664502405": 500, "664502408": 500, "664502409": 500, "664502414": 500, "664e": 466, "665": [456, 483], "6652219e": 491, "6656409356335768": 473, "66650390625": 459, "6666666666583865": 480, "6666666666666666": 575, "666666666666696": 476, "6678": 466, "66813": 472, "66984341": 491, "669e": 466, "66e": [470, 488], "67": [17, 426, 487, 511], "670": [456, 474, 477, 487], "6705024680435898": 311, "671": [464, 474, 503, 573], "671616": 457, "6728": [487, 511], "67304": 97, "67375": 457, "67457342435522e": 511, "6748e": 481, "675": 462, "6768369882260035": 463, "6768e": 463, "677": 444, "6772235e": 491, "67759236e": 491, "678": [86, 473], "67824": 488, "6784": 586, "67861": 491, "678683717532289e": 463, "679": 444, "679478008080033e": 463, "6795e": 463, "67992517": 97, "67e21": 486, "68": [67, 83, 96, 158, 164, 166, 167, 168, 170, 238, 426, 457, 487, 490, 491, 493, 500, 511, 587], "680": 495, "6803": 511, "6812310184489": 481, "68125": 491, "682130": 565, "6823": 457, "683535101178161e": 484, "684": 177, "68542112": 97, "68588096384626e": 484, "68628538586": 488, "687": 495, "687214": 492, "687500": 492, "687685": 487, "68e": [458, 470, 487], "69": [103, 453, 466, 478, 487, 488], "690": 67, "690557685186": 487, "6909290e": 491, "691": 487, "691299354164691": 473, "69138": 466, "691680": [103, 488, 495], "692": 466, "692e": 463, "69314486": 494, "693940": 470, "6953125": 488, "69543812": 97, "6959369197218669": 497, "695e": 466, "697317": 501, "69735": 491, "697e": 460, "697fals": 460, "6985": 459, "6992": 472, "6995e": 464, "6d0sbzyi": 484, "6e": [460, 487, 495], "6h": 502, "6th": 425, "6wnnydd": 484, "7": [30, 31, 38, 52, 53, 67, 87, 91, 128, 134, 177, 180, 207, 213, 215, 241, 376, 377, 386, 390, 391, 398, 402, 403, 406, 423, 427, 428, 430, 431, 437, 438, 443, 444, 445, 447, 448, 457, 462, 463, 465, 466, 471, 473, 474, 479, 480, 481, 482, 484, 485, 487, 489, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 509, 511, 538, 542, 543, 579, 586, 587], "70": [67, 91, 103, 463, 472, 487, 488, 586], "700": [394, 475, 489, 494], "70000000e": 496, "7000e": 496, "70016": 472, "7007": 472, "701": [456, 466, 469, 534], "702": [479, 487, 501, 510], "702e": 466, "703": 423, "70358483e": 496, "703903": 557, "704": 495, "70428": 511, "70437": 491, "705": 511, "70546": 466, "70634e": 457, "706e": [471, 487], "707945784": 489, "708": [462, 463], "709": 444, "7097381e": 491, "70e": 496, "71": [33, 463, 465, 495, 587], "710": 444, "71067811865478": 487, "7115414505410296e": 484, "7116851": 496, "711e": 466, "712": 473, "71220672": 488, "7123895e": 491, "712e": [479, 510], "713": [444, 487], "7132e": 511, "71387207e": 489, "714": 487, "715": 511, "716": [96, 311, 312, 493], "716062": 500, "71693826": [480, 484, 497, 525], "717": 487, "71795506": 511, "7184": 511, "719": [444, 495], "7190994e": 491, "71944e": 457, "7195": 487, "719e": 487, "72": [430, 459, 487, 492, 511], "720": [475, 487], "7200": 478, "722": [456, 483, 484, 495], "72217": 511, "722557505166": 487, "723": 466, "723e": 487, "7240965e": 491, "72411791e": 489, "725": 487, "725490196078432": 476, "726e": 462, "727": 495, "72775": 511, "7284447e": 491, "729e": 466, "73": [457, 481, 511], "7303": 511, "731": 444, "731589446928548e": 509, "732e": [67, 487], "733": [67, 444], "734": 511, "7350250533013533": 497, "7350380e": 491, "7351418e": 491, "735e": 487, "736": [462, 586, 587], "737": 462, "738": [444, 487], "7385727e": 491, "739": 444, "7395744e": 491, "739770898783367e": 415, "739e": 67, "73e": [487, 509], "74": [457, 511], "740": 444, "742": 495, "743e": [458, 487], "74427": 472, "74465974e": 491, "74479": 466, "745": [456, 504], "745098039215687": 476, "74542e": 457, "746": 444, "7471700e": 491, "7479085e": 491, "748": 487, "748259": 470, "74989420933": 489, "75": [67, 379, 454, 458, 462, 511], "750": 587, "751643891117176": 509, "75267735": 511, "753": [444, 463], "753522": 570, "7537086e": 491, "754": [444, 501], "75408483": 511, "7555": 492, "7559": 511, "756": 487, "7567": 457, "7580410e": 491, "759": 444, "7596682e": 491, "759958": 551, "75e": [487, 510], "76": [473, 484, 493], "7613": 423, "762": [444, 456, 499], "762199399999986": 549, "763": 444, "7637308880733709": 497, "7638": 466, "763e": 466, "764": 481, "76419591747674": 481, "7647": 511, "764705882352942": 476, "76473": 466, "7652512e": 491, "766": [444, 466], "7660168382": 487, "766d": 500, "767": 444, "76739": 487, "768000": [103, 488], "768048": 97, "7681656e": 491, "76837444": 482, "7684028": 511, "7692170e": 491, "76e": 495, "770": 67, "771667": 503, "77174": 466, "7718272408581743": 311, "771992": 543, "771e": 487, "772": [444, 457], "77206": 511, "77218": 466, "773": 487, "7733e": [458, 487], "77351": 466, "774": [444, 478], "7743835449219": 462, "774e": 487, "775": [67, 495], "7752246942468283": 472, "7755386e": 491, "776": [456, 571], "7760": 511, "7763307219821931": 311, "7765957e": 491, "77678": 457, "7769775": 500, "777": 444, "7771617763704126": 311, "77751797": 97, "777e": [67, 460], "778": [444, 462, 487], "778141": 580, "77827941": 493, "778279410038923": 493, "779": [463, 487], "7796942": 511, "779e": 462, "77e": [465, 487], "78": [493, 494, 502, 510], "780": [31, 128], "7800e": 462, "7804888e": 491, "780e": 128, "78188": 466, "78188096": 97, "782": 501, "7827941": 493, "78279410038923": 493, "783": [444, 487, 511], "78332719": 472, "78333": 472, "783587001383003": 500, "783e": 472, "784": [445, 463], "7843137254901955": 476, "78499999999997": 545, "785": [481, 545], "7853981633974483": 578, "787": [67, 177], "787169465401243e": 479, "7875405607868806": 497, "7876233e": 491, "788": 487, "7887840e": 491, "788e": 487, "789": 444, "78910994": 97, "7894": 472, "78952750835169": 481, "78e": 495, "79": [459, 487], "790": 444, "791": [445, 456, 477], "7913e": 462, "7922": 457, "793": [445, 466], "793131": 496, "794": 489, "7941697": 489, "79432823": 496, "7943282347": 489, "79469899": 472, "79470": 472, "794e": 466, "795749": 558, "796": [445, 495], "797": 445, "7972": 492, "798": 445, "798218": 457, "799": 462, "7990194e": 491, "7997221e": 491, "799999952316284": 487, "7c": 493, "7d": 487, "7e": [487, 495, 496], "7e955f": 426, "8": [17, 18, 21, 22, 24, 25, 27, 38, 40, 50, 67, 87, 89, 91, 101, 103, 106, 107, 111, 112, 113, 118, 131, 151, 152, 201, 208, 241, 243, 313, 386, 390, 393, 394, 403, 427, 428, 431, 433, 434, 438, 439, 440, 443, 444, 445, 448, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 518, 520, 529, 534, 538, 542, 551, 562, 570, 586], "80": [180, 464, 466, 488, 493, 501, 534, 561, 570], "800932": 487, "801": [511, 534], "801668796295": 487, "802": [495, 511], "803": 462, "8031431e": 491, "8037638e": 491, "803921568627494": 476, "804": 495, "804492": 478, "8062607e": 491, "806457": 578, "80683246": 491, "807": [466, 549], "8071": 466, "807201": 511, "8075": [487, 511], "8075185": 487, "8077e": 464, "8084e": 470, "808687936570502e": 490, "80871364": 97, "8090746": 500, "809505": 487, "80982039": 491, "80e": 458, "81": [434, 458, 479, 551], "810": [445, 487], "810000": 478, "8100e": 458, "810e": 487, "811": 445, "8115337251905373e": 490, "812": 445, "812075194992371e": 490, "8122169596532167e": 490, "8122425483643125e": 490, "8122e": 490, "812358724314062e": 490, "8129257829574434e": 490, "812951371538087e": 490, "813": 445, "814": 445, "8150": 511, "8157971601581226e": 490, "816": 445, "8160964882165554": 311, "81699e": 457, "816e": 487, "818388e": 511, "81847286": 482, "818e": 460, "819": 487, "81e": 551, "82": [67, 426, 470, 487, 510, 538], "820": 445, "8205513": 500, "820562952023891": 311, "820734654694367e": 484, "8222980e": 491, "823": 462, "82352941176471": 476, "824": [445, 456, 461, 463, 495, 512], "8241471833009617": 497, "824868183144": 481, "825": [445, 457, 473, 487], "8256": 511, "826": 445, "826414166666": 94, "827": 445, "8272": 513, "82739": 466, "8290458e": 491, "8293": 511, "82946153": 511, "82e": 471, "83": [30, 67, 83, 85, 94, 103, 106, 107, 111, 112, 177, 180, 195, 196, 205, 208, 462, 463, 464, 466, 471, 479, 488, 492, 493, 494, 502, 503, 509, 510, 529, 532, 534, 535, 538], "830": 445, "8300": 511, "831": 445, "832": 445, "83242471": 491, "8325": 478, "833": [445, 463, 466], "833333333336": 482, "834": 445, "8341884287660133": 497, "8349780e": 491, "835": 445, "835e": [463, 472], "835fals": 460, "836": [445, 482, 487], "836626": 568, "836731": 487, "8369650e": 491, "837": [445, 495], "8377268e": 491, "838": [456, 466, 492, 499], "8383396349722769": 311, "84": [24, 426, 456, 462, 464, 472, 487, 495, 538], "840": [445, 466], "841": 487, "84196311": 97, "842": [445, 487], "84233": 466, "842x": 139, "843": [457, 482], "843137254902004": 476, "843863242310971e": 509, "843e": 67, "8441040e": 491, "844770648146": 94, "8449575657133206": 311, "845": 446, "84529": 487, "845484": 548, "8455480e": 491, "845693": 457, "846": [466, 487, 586], "847": 445, "8475576e": 491, "8475650e": 491, "84e": 470, "85": [87, 91, 452, 472, 542, 543], "851": 445, "85157506": 511, "8515948e": 491, "85188496e": 491, "85202": 511, "85287": 501, "852e": 487, "853": [456, 499, 512], "854": [445, 456, 489, 499], "854166666664": 482, "85416667": 480, "85469291": 97, "855": 445, "85527": 472, "85527359": 472, "8555500e": 491, "85624": 467, "85625": 467, "8568": 511, "856e": 487, "8570719e": 491, "85722435185": 487, "8573e": 478, "858": 445, "858e": 487, "859": [445, 462], "85900": 472, "85900392": 472, "85925": 511, "8593054": 487, "859e": 466, "85e": 487, "86": [460, 462, 463, 466, 493, 511, 522], "860": 487, "861": 511, "86111111": 480, "861150": 460, "8613613e": 491, "8620": 478, "8623": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "862745098039234": 476, "863715": 554, "864": [445, 511], "865": [445, 466], "86676": 501, "8669": 457, "8672": 472, "86793518066406": 459, "868": [445, 487], "8681e": 478, "86831929": 97, "8699": 457, "8699165e": 491, "86e": 478, "87": [67, 472, 493], "870": [67, 445], "8704": 466, "870e": 481, "871": 445, "871730083414263e": 484, "872": [445, 466], "873": 463, "8733348": 500, "87358893e": 489, "8736082200157": 473, "873659477745188": 497, "874": 459, "875": 445, "876": 495, "87621184": 468, "8769240e": 491, "876e": 466, "87710186": 97, "877563": 487, "878": [487, 495], "878932": 556, "87897": 472, "87897418": 472, "8799800e": 491, "88": [426, 448, 464, 472, 473, 484, 487, 493, 511], "880e": 466, "881": [445, 457, 466], "8815212313941426": 497, "882": 67, "882352941176466": 476, "883": 445, "8834862e": 491, "883e": 67, "884": 445, "88470839": 496, "885": 445, "886": 487, "8865": 511, "88781": 466, "888": [445, 461], "8885138e": 491, "889": 487, "8893600e": 491, "88e": [460, 487], "89": [33, 493], "890": [456, 461], "8908866e": 491, "8909e": 481, "890e": 67, "892": 495, "892070": 542, "89243456": 511, "8926": 511, "89287": 457, "893": [445, 456], "894": 460, "8943121e": 491, "89492144e": 490, "895": 482, "8954039e": 491, "89595846": 496, "89709472": 511, "898": 445, "8986348363207728": 497, "89873": 472, "8989213": 472, "898e": [466, 487], "899": 67, "8999": 472, "899a": 285, "89e": 488, "8e": [460, 470, 473, 475, 495, 501, 570], "9": [31, 33, 35, 67, 83, 87, 91, 201, 213, 241, 243, 343, 350, 383, 390, 391, 395, 403, 423, 429, 431, 442, 445, 447, 450, 452, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 537, 544, 548, 549, 550, 557, 573, 581, 586], "90": [57, 67, 409, 465, 468, 471, 472, 481, 487, 493, 496, 513], "900": 487, "9002269877996247": 482, "900269": 491, "9023670e": 491, "90242058e": 488, "9032163": 86, "904": [456, 499, 511], "905": 487, "9053655e": 491, "9053906e": 491, "906": [445, 487], "90605275e": 501, "90677811e": 489, "90685": 466, "907": 487, "9074812e": 491, "9077294": 500, "90e": [103, 463, 470, 488], "91": [465, 493, 498, 538], "911": 445, "911552434768802e": 479, "912": 487, "912525e": 511, "912779907405": 487, "913196574074": 479, "913e": 466, "914": 67, "915": 487, "91507": [103, 488], "91612243652344": 459, "9163195e": 491, "91719": 488, "918": 67, "918365": 487, "919": 445, "919e": 487, "91e": 495, "92": [465, 466, 493, 500], "920": [456, 462, 499], "92052435e": 489, "9205875e": 491, "921": 463, "9215375e": 491, "92234009259": [423, 479], "924": 463, "9240e": 496, "9245141590177": 481, "92490": 466, "925106": 472, "926": [456, 476, 477], "9269494e": 491, "9277492e": 491, "928": 487, "9280475e": 491, "929": [457, 463], "92960065298276": 509, "93": [67, 126, 128, 465, 466, 493, 500], "93026": 487, "9303": [487, 511], "93128e": 457, "932": 445, "93271046296": 479, "933": 445, "9332549000000": 511, "934": [456, 461, 462], "9343": 457, "935826709880043": 485, "93702": 501, "9382336444241555": 497, "938e": [472, 487], "939": [296, 302], "9391360e": 491, "93988308": 97, "93e": 487, "94": [465, 487, 493, 500, 509, 511], "940e": 487, "940fals": 460, "94111838": 97, "941176470588236": 476, "94186555556": [423, 479], "942": [456, 481, 483], "943282347242818": 509, "944060876": 489, "9441e": 467, "9453950989269149": 497, "9462": 472, "946923": 279, "94722599": 472, "94723": 472, "947e": 466, "948683": 457, "9489822e": 491, "949": 495, "94971705883604": 481, "9499210e": 491, "94e": [472, 487], "95": [33, 67, 158, 164, 166, 167, 168, 170, 224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280, 465, 466, 472, 478, 487, 488, 490, 493, 494, 500, 542, 587], "950": 445, "9500979841335693": 311, "95024543e": 490, "950e": 462, "952": 67, "9529719e": 491, "953": 495, "9537056583888585e": 415, "954": [456, 499], "95421509259": 479, "95451985e": 128, "9546285068162436": 497, "956": [456, 498, 499], "95615": 457, "957": 67, "9580e": 464, "95883": 511, "959198": 487, "959d": [52, 53], "96": [426, 458, 465, 488, 493, 551], "9606540e": 491, "960784313725491": 476, "9608912e": 491, "9619812963": 479, "96374320": 468, "966": 445, "96602": 467, "967546": 466, "9677107409819438": 311, "968": [462, 472], "96814": 511, "96833546296": [487, 501], "969": 487, "9692e": 458, "96e": 460, "96r": 493, "97": [465, 487, 491, 497, 510], "970": [456, 490, 499], "97003": 511, "97054": 466, "970e": 487, "97116": 472, "9721952295357764e": 484, "973": 487, "9730e": 471, "97369425926": 479, "974e": 487, "975": 445, "97596": 466, "976": 445, "97749": 472, "97749371": 472, "9776920e": 491, "979": [67, 445, 493], "97934": 466, "97978": 83, "97e": 487, "98": [83, 353, 459, 464, 465, 466, 470, 479, 481, 491, 509], "980": [67, 481], "9803921568627443": 476, "98049": 466, "981": 504, "98149518519": 479, "9816452e": 491, "982": 550, "982075849517389e": 496, "98258": 466, "9833462074166": 487, "9834338e": 491, "98359211196148547": 472, "98429": 466, "9845": 457, "9847406e": 491, "984e": 466, "985": [445, 460], "985502122122975": 497, "9858e": 478, "986": [456, 486, 499], "9868440049211211": 509, "9876": 457, "988": [445, 456, 461, 487, 495], "988409870698051e": 52, "988413141629203e": 415, "9890": 511, "989779066475214e": 415, "98e": 487, "99": [353, 465, 466, 467, 478, 489, 510, 511], "991": 487, "9910796e": 491, "9912648e": 491, "9912712e": 491, "993": 459, "9931": 511, "994": 445, "994e": 487, "995": 495, "9952623149688797": 509, "9969731e": 491, "997": [445, 478], "9973e": 478, "9977859e": 491, "9978": 511, "998": 473, "99848e": 501, "99878762e": 489, "999": [50, 167, 170, 487], "99919925926": 243, "99993896484375": 462, "9999912037958": 472, "999999": 487, "99999994": 86, "9999999995": 487, "9999999997835": 459, "99999999999545": 484, "999999999997": 474, "9999999999977": 487, "9999999999978": 480, "9999999999998": 487, "99999999999994": 487, "99999999999999": [465, 487], "99e": 487, "9e": [458, 460, 487, 570], "A": [16, 19, 20, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 107, 110, 111, 112, 126, 127, 128, 137, 140, 145, 146, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218, 219, 221, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 293, 295, 303, 304, 313, 322, 375, 376, 377, 379, 380, 387, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 425, 427, 431, 432, 433, 434, 435, 438, 440, 441, 444, 445, 446, 447, 449, 451, 452, 453, 454, 457, 459, 464, 466, 470, 472, 473, 476, 479, 480, 481, 482, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 508, 510, 511, 513, 521, 522, 523, 525, 526, 534, 535, 537, 538, 540, 542, 579, 580, 583, 584, 587], "AND": [494, 495], "AS": 416, "And": [285, 386, 389, 404, 406, 412, 418, 459, 460, 462, 463, 470, 474, 476, 481, 488, 490, 493, 494, 496, 500, 509, 510, 511], "As": [83, 313, 343, 386, 387, 389, 394, 398, 399, 400, 402, 404, 412, 413, 416, 423, 428, 447, 457, 458, 459, 462, 463, 464, 466, 467, 468, 472, 474, 475, 479, 480, 481, 484, 485, 486, 487, 488, 490, 492, 493, 496, 498, 501, 503, 509, 511, 525, 534, 587], "At": [268, 400, 403, 412, 413, 415, 417, 431, 474, 493, 500, 530, 583], "But": [386, 391, 394, 400, 405, 413, 417, 423, 447, 462, 463, 490, 498, 500, 509, 585], "By": [19, 20, 26, 50, 65, 87, 91, 102, 103, 106, 107, 111, 112, 125, 129, 133, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 174, 177, 184, 194, 196, 197, 198, 200, 206, 209, 210, 222, 223, 225, 226, 229, 230, 232, 233, 234, 238, 239, 241, 245, 246, 249, 253, 254, 255, 257, 258, 259, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 383, 386, 412, 413, 414, 432, 433, 435, 474, 475, 480, 485, 490, 493, 498, 510, 532, 536, 542, 543, 544, 588], "FOR": [140, 303], "For": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 77, 82, 87, 88, 91, 95, 99, 100, 101, 102, 103, 106, 107, 111, 112, 121, 123, 125, 126, 128, 129, 130, 133, 134, 136, 137, 154, 155, 156, 162, 167, 170, 177, 182, 183, 184, 187, 188, 190, 191, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 246, 252, 253, 254, 255, 256, 257, 259, 260, 265, 266, 267, 269, 270, 272, 273, 274, 276, 280, 281, 294, 296, 300, 302, 310, 316, 331, 385, 386, 387, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 411, 412, 413, 414, 417, 418, 422, 423, 425, 428, 429, 430, 432, 433, 434, 435, 438, 445, 449, 452, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 476, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 505, 509, 510, 511, 513, 520, 521, 523, 525, 535, 537, 538, 543, 548, 580, 584, 585, 587, 588, 589], "IN": [92, 100, 252], "If": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 123, 125, 126, 127, 128, 129, 131, 133, 137, 140, 144, 145, 147, 149, 154, 155, 156, 162, 165, 167, 170, 171, 173, 174, 177, 179, 180, 183, 184, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 292, 310, 313, 325, 326, 331, 372, 375, 379, 380, 381, 382, 386, 387, 388, 389, 391, 393, 394, 399, 400, 402, 403, 404, 407, 408, 409, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 446, 447, 448, 457, 459, 460, 462, 464, 465, 467, 470, 472, 475, 478, 479, 480, 481, 482, 484, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 511, 523, 525, 536, 538, 544, 546, 559, 585, 586, 587, 588], "In": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 77, 83, 84, 87, 88, 90, 91, 94, 102, 104, 105, 110, 127, 128, 154, 173, 196, 198, 201, 204, 210, 218, 220, 280, 292, 326, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 423, 428, 429, 430, 431, 432, 433, 434, 435, 438, 449, 452, 457, 458, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 501, 502, 509, 510, 511, 521, 523, 525, 530, 533, 534, 535, 537, 538, 539, 542, 543, 548, 561, 580, 583, 584, 585, 586, 587, 588, 589], "It": [15, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 107, 111, 112, 113, 116, 118, 126, 145, 154, 158, 165, 166, 167, 168, 170, 180, 183, 187, 188, 193, 197, 198, 200, 202, 205, 206, 209, 210, 212, 222, 223, 226, 229, 230, 232, 233, 234, 239, 243, 245, 246, 249, 253, 255, 257, 264, 268, 269, 271, 272, 273, 274, 277, 281, 294, 298, 300, 301, 321, 335, 340, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 417, 418, 422, 424, 428, 429, 430, 431, 435, 438, 440, 441, 442, 447, 449, 451, 452, 453, 454, 457, 463, 468, 471, 473, 475, 478, 482, 485, 487, 488, 489, 490, 492, 493, 494, 496, 498, 500, 501, 502, 503, 509, 510, 511, 513, 514, 521, 522, 524, 525, 529, 530, 532, 534, 538, 552, 555, 556, 558, 559, 563, 564, 566, 567, 568, 569, 582, 583, 584, 585, 586, 587, 589], "Its": [28, 398, 412, 413, 438, 440, 476, 480, 498, 510, 527, 528, 529, 531], "NOT": 494, "No": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 397, 407, 410, 411, 446, 448, 455, 476, 484, 487, 490, 492, 493, 511], "Not": [106, 111, 112, 199, 205, 207, 394, 570], "ON": [103, 106, 107, 136, 184, 185, 186, 194, 384, 392, 440, 454, 457, 458, 462, 465, 468, 472, 479, 480, 482, 490, 492, 498, 525, 534, 586, 588], "OR": [103, 107, 111, 488, 494, 495], "Of": [386, 389, 423, 470, 488, 493, 501, 585, 588], "On": [21, 148, 172, 178, 179, 182, 294, 301, 308, 386, 387, 392, 394, 401, 402, 416, 418, 419, 420, 421, 442, 470, 471, 490, 505, 587], "One": [31, 32, 37, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102, 103, 106, 107, 111, 112, 228, 237, 252, 339, 386, 387, 392, 394, 395, 396, 397, 400, 402, 403, 404, 412, 415, 452, 459, 463, 468, 479, 492, 493, 494, 509, 511, 534, 538, 561, 585, 587], "Ones": 313, "Or": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 387, 405, 406, 463, 470, 484, 488, 489, 493, 500, 501, 523], "Such": [398, 491, 529], "THE": [140, 303], "That": [16, 19, 20, 84, 90, 105, 127, 215, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 386, 387, 391, 400, 403, 406, 490, 511, 585], "The": [11, 15, 16, 17, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 53, 57, 59, 63, 69, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 174, 178, 179, 183, 184, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 284, 285, 291, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 313, 325, 331, 333, 334, 337, 353, 369, 370, 372, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 424, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 472, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 505, 509, 510, 511, 513, 514, 515, 516, 520, 521, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 542, 544, 546, 547, 548, 551, 557, 559, 561, 570, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590], "Their": 494, "Then": [67, 103, 107, 109, 111, 389, 391, 396, 399, 401, 402, 403, 404, 410, 420, 459, 462, 470, 471, 474, 478, 479, 490, 494, 496, 498, 510], "There": [87, 91, 145, 386, 387, 391, 392, 393, 395, 400, 401, 402, 403, 404, 405, 406, 407, 410, 413, 415, 417, 419, 420, 446, 454, 472, 476, 485, 486, 487, 488, 490, 491, 492, 494, 495, 502, 513, 521, 522, 525, 538], "These": [77, 95, 202, 284, 386, 387, 391, 392, 397, 399, 400, 401, 402, 406, 407, 412, 415, 430, 432, 433, 434, 438, 446, 452, 457, 471, 473, 474, 481, 485, 486, 488, 491, 493, 496, 497, 502, 505, 513, 530, 535, 537, 538, 586, 587, 588], "To": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 100, 105, 110, 125, 127, 129, 133, 196, 208, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 279, 281, 284, 294, 376, 377, 388, 389, 393, 394, 397, 398, 399, 401, 402, 407, 408, 409, 410, 411, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 433, 434, 438, 440, 446, 447, 449, 452, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 505, 509, 511, 521, 522, 523, 526, 530, 532, 534, 535, 542, 583, 585, 586, 587, 590], "With": [83, 101, 247, 386, 395, 396, 412, 434, 447, 498, 521, 587], "_": [103, 107, 111, 131, 239, 259, 386, 387, 400, 410, 412, 462, 465, 468, 486, 487, 490, 495, 498, 521, 534], "_0": [50, 51], "_1": [106, 112, 522], "_2": [106, 112], "__all__": 386, "__array__": 313, "__array_ufunc__": [464, 474, 503, 573], "__attributes__": [87, 91], "__call__": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 325, 392, 397, 414, 434], "__class__": [386, 410, 486, 519], "__dict__": [16, 84, 90, 105, 127, 386], "__enter__": 364, "__eq__": 440, "__exit__": 364, "__fields__": 413, "__getitem__": [396, 397, 398, 454], "__init__": [16, 84, 90, 105, 127, 205, 280, 386, 392, 398, 410, 415, 449], "__int__": 331, "__len__": 396, "__main__": [263, 386, 498, 507, 585], "__name__": [386, 468, 479, 480, 481, 484, 486, 507, 519, 585], "__neq__": 440, "__pydantic_extra__": [16, 84, 90, 105, 127], "__pydantic_fields_set__": [16, 84, 90, 105, 127], "__repr__": [386, 433, 447], "__str__": [386, 398, 413, 430], "__subclasses__": 486, "__version__": 422, "_basemodel__context": [16, 84, 90, 105, 127], "_build": [387, 417], "_check_interv": 452, "_compute_flux_spati": 438, "_covari": [228, 252], "_data": 410, "_dataset": 387, "_dom_class": [470, 478, 493, 509, 510], "_energy_t": 410, "_err": 484, "_errn": [129, 130, 133, 134], "_errp": [129, 130, 133, 134], "_evaluate_timevar_sourc": 452, "_f_cash_root_cython": 307, "_factr": 490, "_fields_set": [16, 84, 90, 105, 127], "_i": 131, "_k": [103, 107, 111, 521], "_l": 521, "_lat": 386, "_lon": 386, "_map": 379, "_model": 126, "_new_attribut": 386, "_old_attribut": 386, "_parameter_units_for_data_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "_parent_namespace_depth": [16, 84, 90, 105, 127], "_parse_dataset": 415, "_phi": 386, "_prior": 414, "_propagate_error": 437, "_reco": 386, "_repr_html_": 386, "_row_index": 69, "_sampl": 415, "_sample_coord_time_energi": 452, "_sampler": 415, "_scan": 490, "_time_group": 410, "_time_t": 410, "_true": 386, "_type": [414, 498], "_types_namespac": [16, 84, 90, 105, 127], "_update_model": 415, "_was_": [16, 84, 90, 105, 127], "_wc": 549, "_weight": 414, "a_": [106, 112, 157, 527, 530, 587], "a_off": 587, "a_on": 587, "a_scan": 498, "aa": [87, 91, 313, 412], "aaguasca": 449, "aatwwh2i": 484, "ab": [33, 38, 50, 52, 53, 58, 60, 61, 62, 64, 65, 83, 88, 139, 157, 210, 218, 220, 249, 284, 285, 486, 487], "abc": [18, 56, 99, 124, 176, 195, 200, 492], "abcmeta": 492, "abdalla2018": [534, 535, 584], "abeysekara": 59, "abil": [410, 415, 498], "abl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 396, 401, 404, 415, 459, 478, 479, 480, 498, 505, 585], "about": [11, 13, 16, 84, 90, 105, 127, 152, 157, 238, 243, 343, 386, 389, 391, 395, 402, 403, 405, 406, 407, 411, 412, 414, 416, 417, 422, 423, 442, 443, 447, 448, 449, 458, 460, 466, 467, 468, 470, 471, 472, 474, 487, 491, 493, 496, 501, 510, 511, 521, 522, 585, 588], "abov": [29, 44, 52, 53, 83, 125, 127, 128, 131, 135, 136, 137, 145, 146, 172, 207, 375, 377, 386, 387, 392, 395, 396, 398, 400, 402, 403, 404, 405, 406, 410, 415, 419, 420, 423, 457, 466, 472, 474, 475, 476, 479, 482, 484, 489, 490, 492, 493, 494, 496, 497, 498, 500, 501, 502, 509, 519, 521, 522, 529, 532, 538, 584, 585, 586, 587, 588], "abramowski": 157, "abruptli": [386, 411], "abs_path": 321, "absenc": [401, 468, 492, 494, 534, 586], "absolut": [82, 91, 108, 151, 152, 153, 154, 157, 159, 161, 164, 169, 197, 198, 200, 202, 206, 209, 210, 317, 343, 363, 367, 523], "absolute_tim": 589, "absopt": 404, "absorb": [281, 396, 409, 445, 551], "absorbedspectralmodel": [432, 445], "absorbt": 409, "absorpt": [230, 404, 435, 445, 454, 456, 461, 505, 539, 571], "abstract": [56, 59, 99, 124, 168, 176, 181, 195, 197, 200, 209, 397, 434, 537], "abstractsetintstr": [16, 84, 90, 105, 127], "acada": 412, "accept": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 106, 108, 112, 125, 126, 128, 172, 189, 194, 196, 197, 198, 200, 208, 209, 210, 228, 252, 295, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 414, 415, 439, 443, 452, 454, 457, 458, 463, 464, 465, 468, 472, 475, 488, 492, 493, 501, 521, 537, 543, 561, 586, 587], "acceptance_off": [106, 108, 112, 125, 126, 128, 172, 182, 398, 457, 459, 462, 465, 468, 521, 587], "acceptance_on": [125, 126, 128], "acceptang": 125, "access": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 87, 91, 103, 165, 195, 196, 205, 208, 301, 321, 386, 394, 395, 396, 397, 399, 402, 410, 417, 419, 422, 427, 428, 435, 442, 443, 445, 446, 452, 453, 460, 462, 463, 464, 470, 484, 487, 490, 491, 495, 496, 500, 503, 509, 510, 511, 520, 525, 536, 537, 538, 583], "accessor": 493, "accident": [501, 585], "accomplish": 489, "accord": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 72, 87, 91, 103, 106, 107, 111, 112, 121, 126, 149, 155, 165, 172, 196, 202, 218, 220, 310, 375, 396, 397, 400, 401, 404, 410, 412, 432, 441, 453, 468, 479, 488, 492, 496, 497, 505, 521, 522, 525], "accordingli": [398, 412, 429, 435, 494], "account": [103, 106, 107, 111, 112, 125, 126, 140, 174, 190, 228, 252, 268, 293, 295, 301, 361, 394, 399, 402, 410, 412, 434, 451, 453, 456, 457, 459, 461, 462, 464, 468, 470, 476, 481, 482, 489, 490, 492, 494, 505, 510, 521, 523, 586, 587], "accur": [138, 147, 404, 415, 448, 470, 490, 532], "accuraci": [400, 490, 525], "acee67": 273, "aceptance_off": 398, "acero": [404, 415, 428, 430, 432, 435, 438, 440, 445, 447, 453, 454], "achiev": [16, 84, 90, 105, 121, 127, 172, 376, 377, 386, 395, 396, 397, 398, 399, 400, 402, 409, 412, 435, 493, 496, 497, 535, 590], "acknowledg": [389, 412, 424], "acquir": 423, "acquisit": 584, "across": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 121, 386, 395, 398, 417, 473, 481, 495, 501, 521, 537, 546, 584], "act": [91, 402, 495, 548], "action": [172, 391, 396, 402, 412, 416, 417, 438, 481], "activ": [91, 301, 389, 403, 418, 419, 421, 422, 423, 432, 449, 485, 525], "actual": [185, 361, 362, 363, 385, 386, 387, 391, 395, 397, 399, 401, 402, 410, 411, 413, 416, 465, 475, 478, 480, 488, 489, 490, 492, 493, 494, 498, 501, 502, 510, 511, 532, 534, 584, 585, 587], "ad": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 82, 83, 84, 87, 90, 91, 103, 105, 106, 111, 112, 116, 117, 120, 127, 128, 197, 198, 200, 205, 206, 209, 210, 386, 387, 389, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406, 410, 412, 427, 428, 429, 431, 432, 433, 435, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 464, 468, 470, 471, 491, 492, 495, 496, 497, 498, 502, 521, 538, 588], "adapt": [121, 172, 215, 395, 396, 399, 400, 405, 406, 408, 409, 412, 416, 423, 428, 429, 431, 432, 433, 435, 436, 438, 441, 444, 445, 447, 449, 451, 452, 453, 454, 488, 491, 493, 494, 532, 535], "adaptiveringbackgroundestim": [182, 392], "adaptiveringbackgroundmak": [175, 432, 535], "adass": 406, "add": [13, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 79, 84, 87, 88, 90, 91, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 126, 127, 128, 151, 152, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 170, 174, 197, 198, 200, 204, 206, 209, 210, 216, 228, 252, 268, 310, 355, 374, 383, 385, 386, 387, 389, 391, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 414, 415, 416, 419, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 465, 470, 471, 474, 478, 479, 482, 488, 491, 492, 493, 494, 496, 498, 500, 511, 515, 516, 525, 538, 553, 585, 588], "add_artist": [496, 542, 543], "add_cbar": [103, 106, 107, 111, 112, 128, 151, 152, 154, 157, 158, 159, 164, 165, 166, 168, 197, 198, 200, 206, 209, 210, 228, 252, 374, 466, 467, 468, 470, 472, 478, 482, 486, 488, 491, 492, 493, 495, 496, 501, 502, 509, 510, 538, 541, 542, 543, 546, 547, 549], "add_column": [87, 91], "add_enabled_unit": [457, 465, 467, 470, 472, 478, 481, 500], "add_index": [87, 91], "add_loc": 386, "add_row": [87, 91], "add_subplot": 374, "addit": [16, 19, 20, 26, 43, 84, 87, 90, 91, 103, 105, 106, 107, 111, 112, 116, 125, 127, 129, 134, 169, 197, 198, 200, 203, 206, 209, 210, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 386, 389, 390, 391, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 410, 411, 412, 413, 415, 417, 418, 419, 420, 429, 430, 432, 434, 435, 438, 439, 446, 447, 449, 452, 453, 454, 460, 464, 476, 482, 487, 488, 489, 490, 493, 495, 496, 498, 500, 501, 510, 511, 521, 523, 525, 532, 537, 538, 582, 588], "addition": [134, 398, 488, 490, 493, 495, 496], "address": [395, 398, 399, 400, 402, 412, 498, 524], "adequ": 205, "adher": 389, "adjac": [149, 202, 438, 480, 493, 534], "adjust": [16, 67, 197, 198, 200, 206, 209, 210, 395, 397, 409, 454, 463, 485, 488, 489, 496, 497, 509, 525, 532, 584], "admit": 406, "adonath": 392, "adopt": [37, 399, 402, 407, 464, 474, 475, 486], "adress": 415, "adsab": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 157, 249, 284, 285], "adult": 386, "advanc": [398, 402, 403, 406, 414, 419, 491, 493, 525, 584, 585], "advantag": [394, 400, 403, 410, 415, 438, 493, 498, 561, 585], "advanteg": 398, "advertis": 416, "advic": [386, 412], "advis": [387, 412, 490, 498, 505], "advoc": 386, "aeff": [16, 82, 87, 88, 106, 112, 157, 183, 191, 396, 398, 399, 434, 435, 459, 462, 463, 464, 467, 468, 470, 472, 480, 484, 491, 492, 500, 502, 503, 509, 510, 527, 532, 534, 535, 584], "aeff2d": 156, "aeff_2d": [82, 87, 157, 500, 503], "aeff_3d": 491, "aeff_ev": 491, "aeff_new": 491, "aeff_perc": [183, 459, 462, 463, 472, 480, 484, 492, 502, 534], "aegi": 230, "af": 382, "affect": [140, 386, 394, 398, 400, 411, 429, 430, 441, 450, 458, 498], "affili": [400, 412, 449], "afmhot": [495, 511], "aforement": 412, "after": [16, 45, 50, 51, 52, 53, 84, 90, 91, 100, 103, 105, 106, 107, 111, 127, 167, 170, 301, 325, 343, 367, 370, 386, 389, 391, 394, 395, 397, 399, 400, 401, 402, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 423, 427, 434, 436, 437, 438, 440, 446, 448, 449, 450, 460, 468, 470, 480, 484, 485, 490, 493, 495, 500, 502, 503, 525, 585, 589], "ag": [20, 43, 44, 45, 50, 51, 52, 53, 54, 317, 386, 515], "again": [103, 106, 107, 111, 112, 167, 389, 396, 398, 400, 402, 407, 413, 418, 433, 434, 437, 444, 449, 460, 462, 463, 470, 475, 476, 493, 496, 498, 501, 509, 511, 538, 585], "against": [16, 84, 90, 105, 127, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210, 387, 389, 403, 409, 417, 487, 489, 501, 509, 520, 523], "agent": 402, "agglom": 13, "aggreg": 413, "agil": 399, "agn": [141, 299, 400, 462, 479, 481, 485, 500], "agnost": 490, "ago": 393, "agre": [199, 202, 389, 391, 400, 412], "agreement": [386, 389, 407, 482], "aguasca": [440, 449, 450, 451, 452, 454], "aharonian": 473, "ahead": [400, 427], "aheewbsn": 492, "ahelp": 215, "aic": 415, "aim": [386, 395, 396, 412, 415, 470, 474, 486, 497, 513, 584], "air": 500, "ait": [196, 197, 198, 507], "aitoff": 400, "aka": 511, "al": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 35, 39, 40, 57, 59, 63, 102, 121, 140, 141, 157, 230, 300, 301, 303, 308, 387, 396, 415, 454, 466, 473, 485, 513, 584], "alamo": 415, "albert": [63, 584], "albert2007": 584, "alexi": [435, 438], "algorithm": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 87, 91, 121, 135, 137, 172, 215, 294, 386, 392, 398, 399, 400, 405, 413, 415, 430, 435, 443, 444, 445, 454, 466, 485, 489, 490, 502, 523, 537, 583, 587], "alia": [16, 56, 84, 90, 105, 127, 389, 511], "alias": [16, 56, 84, 90, 105, 127], "align": [87, 91, 100, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 168, 169, 196, 197, 198, 200, 202, 206, 208, 209, 210, 386, 454, 491, 494, 496], "alisha": 440, "all": [6, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112, 125, 126, 127, 128, 129, 133, 134, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 171, 177, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 291, 358, 359, 360, 361, 362, 363, 373, 382, 385, 386, 387, 389, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 459, 462, 463, 464, 467, 468, 470, 472, 473, 474, 478, 479, 481, 482, 484, 487, 488, 489, 490, 491, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 515, 521, 523, 525, 534, 536, 537, 538, 539, 561, 582, 585, 586, 587], "all_quant": [126, 128], "allclos": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 199, 200, 202, 206, 207, 209, 210, 361], "alloc": [198, 206, 210], "allow": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 84, 87, 90, 91, 105, 121, 126, 127, 128, 136, 137, 167, 170, 196, 201, 203, 336, 386, 387, 389, 391, 392, 393, 396, 397, 398, 399, 400, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 429, 431, 432, 433, 434, 435, 438, 440, 447, 448, 449, 452, 454, 457, 462, 473, 481, 488, 489, 490, 491, 492, 493, 494, 510, 521, 523, 525, 532, 537, 538, 582, 583, 585, 590], "allow_extra": 201, "allow_pickl": [16, 84, 90, 105, 127], "allowed_channel": [26, 486], "allski": [83, 493], "alma": 405, "almeida": 435, "almost": [385, 387, 389, 400, 501, 511], "alogrithm": 415, "alon": 391, "along": [68, 102, 126, 128, 132, 149, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 168, 169, 197, 198, 200, 206, 208, 209, 210, 299, 300, 301, 303, 324, 325, 335, 345, 346, 395, 396, 410, 415, 449, 452, 454, 467, 476, 487, 488, 491, 492, 495, 496, 522, 537, 538, 554, 584], "alpha": [21, 27, 28, 48, 103, 106, 107, 111, 112, 125, 126, 128, 172, 194, 215, 233, 234, 244, 245, 246, 260, 295, 306, 310, 383, 384, 398, 409, 411, 438, 445, 454, 457, 458, 459, 460, 462, 464, 465, 468, 470, 471, 475, 482, 487, 490, 498, 500, 542, 551, 553, 555, 557, 559, 560, 561, 570, 576, 577, 586, 587, 588], "alpha_": [106, 112], "alpha_1": [106, 112], "alpha_2": [106, 112], "alpha_norm": [230, 409, 458, 551], "alphabet": [403, 412, 428, 429, 430, 431, 432, 433, 434, 435, 438], "alreadi": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 127, 215, 276, 277, 278, 280, 386, 392, 393, 394, 397, 398, 399, 400, 401, 403, 406, 407, 408, 410, 413, 415, 416, 417, 447, 458, 460, 464, 466, 468, 475, 482, 486, 487, 488, 493, 494, 495, 496, 500, 501, 502, 511, 513, 538, 549], "also": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 95, 121, 125, 126, 128, 129, 138, 139, 145, 147, 148, 169, 174, 180, 195, 202, 204, 205, 215, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 279, 281, 292, 313, 321, 326, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 438, 446, 447, 448, 452, 457, 458, 459, 462, 463, 464, 465, 466, 468, 470, 472, 473, 474, 475, 476, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 509, 510, 513, 521, 522, 523, 524, 525, 532, 534, 537, 538, 561, 564, 582, 584, 585, 586, 587, 589], "alt": [83, 85, 88, 94, 95, 386, 589], "alt_pnt": 91, "altaz": [83, 85, 94, 160, 386, 491, 589], "altaz_fram": [83, 94], "altaz_from_t": [83, 94], "altaz_interpol": 94, "altern": [82, 87, 91, 291, 385, 386, 389, 391, 395, 420, 438, 458, 462, 464, 466, 473, 487, 490, 491, 493, 495, 500, 521, 522, 585], "although": [386, 399, 400, 401, 403, 406, 410, 490, 500, 547, 548, 582, 589], "altitud": 459, "alwai": [77, 83, 87, 91, 154, 202, 205, 212, 218, 220, 236, 386, 387, 389, 392, 393, 394, 396, 397, 398, 400, 403, 411, 412, 415, 420, 427, 434, 449, 450, 452, 465, 466, 470, 478, 486, 490, 492, 493, 495, 497, 498, 505, 523, 537, 538], "am": 395, "ambigu": [400, 446], "amend": 389, "among": [82, 87, 91, 103, 106, 107, 111, 112, 137, 138, 147, 402, 406, 407, 409, 414, 435, 490, 584], "amount": [393, 400, 414, 525], "amp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 267, 578], "ampl_2": [158, 491], "ampl_3": [158, 491], "amplitud": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 68, 102, 129, 134, 137, 197, 198, 200, 209, 210, 215, 222, 229, 232, 234, 239, 246, 250, 257, 258, 259, 267, 269, 272, 273, 274, 285, 291, 304, 397, 398, 401, 409, 415, 458, 459, 460, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 495, 496, 500, 501, 509, 510, 511, 523, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 555, 556, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580, 587], "amplitude_err": 484, "amplitude_maximum_signific": 485, "amplitude_maximum_vari": 485, "amplitude_ref": 482, "an": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 116, 118, 119, 126, 127, 128, 129, 130, 131, 133, 134, 137, 144, 145, 146, 148, 152, 154, 155, 156, 157, 159, 162, 165, 167, 169, 170, 173, 177, 180, 182, 185, 187, 188, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 218, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 287, 294, 299, 301, 311, 313, 317, 331, 342, 346, 364, 370, 376, 377, 379, 382, 385, 387, 389, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 423, 424, 427, 428, 431, 432, 433, 434, 435, 438, 440, 441, 442, 445, 446, 447, 449, 450, 452, 453, 454, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 484, 485, 487, 489, 490, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 513, 515, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 534, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588], "anaconda": [403, 418, 419], "analog": [87, 91, 197, 198, 200, 206, 209, 210, 538], "analogi": 407, "analys": [82, 385, 386, 395, 396, 397, 398, 400, 404, 406, 408, 409, 414, 423, 424, 430, 431, 432, 434, 435, 445, 447, 450, 462, 463, 470, 480, 481, 486, 487, 494, 496, 500, 501, 502, 509, 510, 513, 521, 585], "analysi": [6, 16, 35, 57, 67, 70, 72, 74, 83, 101, 103, 105, 106, 111, 112, 117, 120, 155, 156, 162, 167, 170, 179, 183, 385, 386, 387, 390, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 413, 415, 417, 418, 419, 420, 423, 424, 427, 428, 429, 431, 432, 433, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 456, 458, 460, 461, 466, 467, 468, 469, 473, 474, 476, 477, 478, 480, 481, 483, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 510, 511, 513, 523, 525, 526, 530, 532, 533, 534, 535, 538, 564, 582, 584, 585, 587], "analysis3d": 448, "analysis_1": [456, 509, 512], "analysis_1d": 479, "analysis_2": [387, 456, 510, 512], "analysis_3d": [447, 456, 470, 477, 479], "analysis_joint": 470, "analysis_mwl": [456, 471, 477], "analysis_stack": 470, "analysisconfig": [15, 387, 463, 467, 468, 470, 479, 509], "analyt": [19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 157, 158, 166, 168, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 399, 404, 453, 454, 489, 491, 496, 523, 544, 588], "analyz": [140, 303, 396, 584], "andrea": 399, "andrew": 447, "angl": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 68, 83, 89, 91, 96, 103, 106, 107, 117, 120, 121, 125, 132, 137, 151, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 170, 173, 180, 181, 183, 185, 195, 196, 198, 203, 205, 208, 210, 211, 225, 229, 238, 241, 254, 256, 265, 266, 268, 270, 276, 278, 280, 284, 341, 373, 386, 392, 400, 402, 409, 413, 426, 428, 429, 430, 447, 454, 457, 459, 462, 465, 471, 474, 475, 480, 484, 487, 493, 494, 496, 497, 500, 501, 525, 530, 534, 537, 538, 542, 543, 544, 547, 548, 584], "angle_incr": 180, "angular": [23, 103, 106, 107, 117, 120, 131, 155, 156, 162, 167, 170, 173, 198, 205, 208, 210, 229, 238, 241, 278, 317, 320, 386, 402, 451, 464, 475, 482, 530, 531, 584], "angular_extens": 41, "angular_s": 538, "angular_separ": [409, 451, 453, 496], "ani": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 90, 91, 105, 123, 127, 133, 156, 179, 197, 198, 200, 205, 206, 208, 209, 210, 313, 336, 371, 385, 386, 387, 389, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 412, 413, 415, 416, 419, 420, 421, 422, 423, 427, 428, 446, 447, 448, 453, 463, 472, 473, 476, 479, 480, 482, 484, 488, 492, 493, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 513, 522, 523, 535, 537, 538, 553, 585, 589], "ann": [23, 446], "anna": 386, "annihil": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 449, 513], "annoi": [386, 585], "annot": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 375, 413, 542], "announc": [386, 391, 393, 400, 402, 405, 407, 409, 411, 412, 416, 417], "annuli": [476, 538], "annulu": [130, 345, 538], "anonym": 389, "anoth": [19, 20, 26, 83, 86, 87, 91, 103, 106, 107, 111, 112, 155, 156, 157, 162, 167, 169, 170, 199, 202, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 386, 387, 400, 401, 402, 404, 406, 407, 410, 413, 415, 418, 419, 421, 423, 432, 447, 482, 488, 493, 494, 496, 538, 585], "another_posit": 534, "answer": [490, 525], "anti": [493, 494], "anticip": 395, "anymor": 449, "anyon": [391, 393, 500], "anyth": [154, 402, 585], "anytim": [389, 429], "anywai": [389, 400], "anywher": [400, 403, 405, 521], "ap": [391, 403, 411], "apart": 401, "apertur": 584, "api": [236, 390, 392, 395, 396, 397, 398, 399, 400, 402, 405, 406, 407, 411, 412, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 438, 442, 446, 447, 456, 459, 462, 463, 466, 472, 474, 480, 488, 493, 494, 495, 496, 499, 500, 501, 509, 511, 512, 523, 524, 532, 582, 583, 584, 585], "apj": [296, 302], "aplpi": 447, "apologis": [427, 428, 447], "app": [87, 91, 417, 423, 446], "appar": 415, "appear": [87, 91, 386, 387, 394, 400, 413, 441, 452, 454, 487], "append": [87, 91, 92, 100, 150, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 215, 252, 398, 399, 401, 433, 452, 459, 462, 464, 465, 470, 471, 472, 474, 480, 481, 482, 484, 488, 489, 490, 492, 495, 496, 497, 498, 534], "append_ax": [151, 152, 154, 157, 158, 159, 164, 166, 168, 210, 374], "appendix": [30, 137, 157, 249, 285, 304, 466], "appl": 423, "appli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 87, 89, 91, 101, 102, 103, 104, 106, 107, 111, 112, 113, 117, 118, 120, 121, 125, 128, 129, 133, 137, 154, 155, 156, 162, 167, 169, 170, 174, 180, 183, 184, 197, 198, 200, 201, 205, 206, 208, 209, 210, 218, 220, 228, 236, 252, 268, 281, 292, 293, 294, 295, 325, 326, 371, 375, 383, 386, 392, 393, 396, 397, 399, 401, 404, 410, 411, 412, 435, 440, 445, 446, 447, 448, 452, 454, 457, 462, 464, 474, 480, 481, 482, 484, 488, 489, 492, 493, 494, 495, 496, 498, 500, 503, 510, 511, 523, 525, 532, 570, 583, 586], "applic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 148, 386, 397, 412, 414, 434, 485, 490, 537, 584], "apply_async": [333, 334], "apply_edisp": 453, "apply_hysteresis_threshold": 494, "apply_irf": [268, 434], "apply_mask": 203, "apply_psf": [397, 431], "apply_standard_scal": 96, "apply_threshold_sensit": 125, "apply_union": 212, "approach": [87, 91, 137, 386, 392, 394, 398, 402, 407, 410, 411, 413, 452, 457, 462, 492, 505, 584, 587], "appropri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 196, 197, 198, 200, 209, 210, 313, 321, 387, 464, 468, 470, 484, 493, 585], "approv": [392, 393, 394], "approx": [52, 53], "approxim": [102, 137, 138, 147, 183, 184, 196, 197, 198, 225, 229, 238, 241, 254, 265, 266, 270, 276, 280, 293, 295, 324, 397, 400, 415, 429, 454, 457, 462, 490, 500, 523, 534, 543, 544, 547, 548], "appveyor": 443, "apr": [408, 425], "april": [406, 413, 434], "apt": 420, "ar": [6, 11, 15, 16, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 46, 57, 67, 70, 74, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 114, 115, 117, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 140, 141, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 183, 184, 185, 190, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 214, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 294, 299, 303, 308, 313, 325, 331, 333, 345, 346, 361, 375, 377, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 509, 510, 511, 513, 514, 515, 516, 520, 521, 522, 523, 525, 527, 528, 529, 530, 531, 532, 535, 536, 537, 538, 539, 542, 543, 551, 561, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590], "arakelian": 300, "arang": [121, 401, 466, 480, 484, 537], "arb": 498, "arbitrari": [203, 205, 206, 397, 409, 433, 446, 474, 488, 493, 498, 537, 538], "arbitrary_types_allow": [16, 84, 90, 105, 127, 413], "arbitrarytypemetadata": 413, "archiv": [412, 503, 510], "arcsec": 180, "arctan": 400, "area": [82, 88, 106, 109, 156, 157, 172, 183, 184, 191, 198, 206, 208, 210, 386, 387, 397, 442, 444, 457, 462, 474, 482, 492, 502, 503, 530, 537, 538, 584], "areasc": [445, 447], "aren": [362, 386, 400, 405, 406, 418, 419, 421], "arf": [108, 109, 112, 201, 202, 205, 206, 462, 538], "arf_ob": 108, "arffil": 108, "arg": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 84, 87, 90, 91, 105, 111, 112, 127, 151, 152, 153, 157, 158, 159, 161, 164, 165, 166, 168, 169, 198, 199, 206, 223, 236, 250, 257, 258, 259, 336, 585], "arg_in_kwarg": 386, "argmax": 485, "argmin": 485, "argpars": [391, 585], "argsort": [87, 91], "argument": [11, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 83, 84, 86, 87, 88, 90, 91, 92, 93, 100, 102, 103, 105, 106, 107, 110, 111, 112, 127, 128, 129, 131, 133, 137, 150, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 173, 183, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 286, 292, 311, 313, 325, 331, 333, 334, 373, 374, 375, 379, 380, 381, 382, 383, 389, 392, 398, 401, 434, 435, 438, 440, 446, 452, 453, 454, 466, 470, 475, 476, 490, 492, 493, 496, 497, 501, 510, 523, 525, 536, 537, 538, 561, 585], "aris": [391, 402, 525], "arithmet": [223, 397, 448, 493, 494, 496, 553], "arjun": [445, 446], "arm": [33, 34, 38, 45, 442], "armstrong": 446, "arnau": [440, 449, 450, 451, 452, 454], "around": [56, 145, 173, 196, 198, 208, 210, 325, 400, 401, 464, 482, 486, 490, 494, 502, 511, 525, 534, 537, 538], "arpit": 445, "arr": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "arrai": [19, 20, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 82, 83, 85, 87, 91, 92, 94, 99, 100, 102, 103, 107, 111, 112, 121, 126, 128, 129, 130, 133, 134, 137, 140, 145, 146, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 218, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 272, 273, 274, 278, 279, 280, 281, 282, 292, 293, 295, 297, 303, 308, 309, 313, 324, 325, 326, 340, 341, 342, 346, 379, 380, 385, 386, 399, 400, 404, 410, 413, 423, 433, 446, 449, 451, 453, 464, 465, 474, 475, 482, 484, 487, 488, 490, 491, 493, 495, 496, 498, 500, 502, 503, 511, 537, 538, 545, 570, 573, 586, 587], "array_lik": [103, 107, 111, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 296, 302, 310], "array_shap": [451, 453], "arriba": [439, 442, 443], "arriv": [227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 391, 399, 432, 433, 434, 474, 584, 588], "arrow": 583, "arrowprop": 542, "arrowstyl": 542, "artefact": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "arthmet": 397, "articl": [139, 273, 391, 459, 480], "artifact": [125, 198], "artifici": 474, "artist": [205, 228, 252, 542, 543], "arxiv": [64, 65, 183, 258, 259, 273, 274, 471, 486, 487, 568, 569], "as_arrai": [87, 91], "as_artist": [205, 206, 496, 538, 542, 543], "as_energy_tru": [195, 196, 205, 208], "as_plot_cent": [199, 202, 207, 484], "as_plot_edg": [199, 202, 207], "as_plot_label": [199, 202, 207], "as_plot_scal": 202, "as_plot_xerr": [199, 202, 207], "asanyarrai": 386, "ascii": [87, 91, 128, 386], "ashton": 415, "ashton2022": 415, "asid": 489, "asimov": [135, 498], "asinh": 466, "asinha": 82, "ask": [387, 389, 391, 393, 400, 402, 403, 406, 412, 422, 479, 511, 525, 526, 585], "asmooth": [121, 122, 405, 433, 444, 447], "asmoothestim": 407, "asmoothmapestim": [122, 407, 433, 435, 438, 466, 525], "aspect": [389, 412, 526, 585, 590], "assert": [199, 201, 202, 207, 361, 362, 363, 389, 397, 409, 493], "assert_allclos": 386, "assert_equ": 386, "assert_nam": [199, 201, 202, 207], "assert_quantity_allclos": [386, 442], "assess": [462, 464, 485], "assign": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 104, 110, 111, 196, 218, 220, 268, 278, 382, 386, 395, 398, 401, 413, 416, 459, 478, 479, 488, 493, 496, 498, 510, 511, 537], "assist": 402, "asso": [71, 74, 75, 77, 78], "assoc": 71, "assoc1": [74, 75, 78, 487, 511], "assoc2": [74, 75, 78, 511], "assoc_fgl": 78, "assoc_fhl": 78, "assoc_gam": 75, "assoc_gam1": [74, 78], "assoc_gam2": [74, 78], "assoc_gam3": [74, 78], "assoc_new": 77, "assoc_prob_bai": 487, "assoc_prob_lr": 487, "assoc_tev": [74, 75, 78], "associ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 87, 91, 100, 103, 106, 126, 136, 140, 141, 142, 143, 155, 156, 167, 170, 187, 188, 193, 206, 279, 303, 313, 386, 392, 402, 410, 411, 412, 413, 414, 452, 453, 458, 459, 460, 462, 466, 471, 487, 488, 489, 492, 493, 495, 496, 498, 502, 511, 522, 523, 525, 538, 587], "association_catalog": [67, 487], "association_nam": [67, 487], "assum": [23, 50, 51, 52, 53, 67, 82, 83, 85, 95, 102, 125, 126, 128, 137, 138, 139, 144, 147, 148, 157, 169, 180, 194, 196, 197, 198, 200, 203, 207, 209, 210, 215, 274, 280, 284, 291, 340, 343, 386, 389, 398, 399, 401, 409, 410, 414, 423, 424, 457, 458, 459, 462, 464, 465, 468, 474, 475, 476, 478, 486, 491, 493, 496, 498, 501, 515, 521, 523, 530, 582, 587], "assumpt": [72, 95, 103, 106, 107, 111, 112, 121, 136, 139, 148, 400, 410, 458, 530, 534, 586], "astri": 97, "astrisim": 399, "astro": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 129, 190, 197, 198, 200, 209, 210, 263, 281, 386, 387, 398, 405, 406, 410, 430, 439, 443, 447, 449, 453, 464, 486, 491, 493, 500, 514, 515, 517, 518, 519, 522, 584], "astro_dark_matt": [406, 456, 486, 499], "astromodel": 513, "astronom": [13, 400, 407, 446, 584], "astronomi": [11, 285, 385, 396, 400, 404, 415, 417, 424, 445, 459, 462, 468, 472, 492, 500, 525, 534, 535, 582, 583, 584, 585, 586, 587, 589, 590], "astrophys": [6, 23, 317, 401, 525, 583, 584], "astropi": [13, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 86, 87, 88, 89, 91, 92, 94, 96, 103, 106, 107, 111, 112, 117, 120, 121, 126, 128, 130, 132, 133, 137, 145, 146, 154, 156, 165, 167, 180, 194, 195, 196, 197, 198, 200, 201, 203, 205, 206, 207, 208, 209, 210, 218, 220, 222, 223, 226, 230, 232, 233, 234, 239, 242, 243, 245, 246, 249, 253, 255, 257, 258, 259, 260, 264, 267, 268, 269, 271, 272, 273, 274, 277, 279, 281, 282, 285, 294, 303, 311, 312, 313, 343, 362, 363, 372, 376, 377, 381, 385, 387, 388, 389, 391, 392, 393, 397, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 416, 423, 424, 426, 430, 431, 432, 433, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 509, 510, 511, 515, 517, 518, 519, 521, 522, 523, 525, 527, 529, 532, 534, 535, 536, 537, 538, 542, 543, 544, 545, 546, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 586, 589], "astropy_healpix": 395, "astropy_help": [386, 428, 429, 430], "astropy_introduct": 429, "astropy_timeseri": 401, "astropy_vers": 386, "astyp": [87, 91], "asymetr": [102, 462], "asymmetr": [125, 129, 130, 133, 134, 137, 138, 147, 404, 428, 434, 453, 462, 498, 509, 523, 543], "asymmetri": 491, "asymptot": [587, 588], "atmospher": [401, 419, 424, 500], "atnf": 446, "atol": [86, 100, 133, 202, 207, 361, 363, 386], "atol_ax": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210], "atom": 402, "atproduction_gamma": 26, "atreye": [398, 401, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 446, 447, 448, 449, 450, 451, 452, 453, 454], "attach": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 85, 94, 228, 236, 252, 268, 278, 397, 407, 415, 451, 481, 490, 495, 496, 585], "attempt": [16, 84, 90, 105, 127, 389, 400, 403], "attenu": 458, "attr": 386, "attract": 406, "attribut": [15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 293, 295, 313, 396, 398, 408, 413, 414, 415, 428, 429, 432, 433, 434, 435, 438, 440, 442, 444, 446, 451, 452, 453, 460, 464, 490, 492, 493, 494, 496, 511, 521, 537, 538, 587], "attributeerror": 386, "attrribut": 493, "aug": [399, 402, 403, 405, 425], "august": [393, 399, 402, 405, 472], "author": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416], "author2": 387, "authoris": 412, "authorship": 390, "auto": [77, 197, 198, 200, 209, 210, 387, 389, 397, 406, 433, 447, 490, 585], "autocorrel": 140, "autodiff": 404, "autogener": 406, "autograd": [397, 404], "autom": [11, 394, 402, 412, 415, 416, 417, 440, 490, 585], "automat": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 105, 114, 115, 127, 129, 133, 137, 225, 229, 238, 241, 254, 265, 266, 270, 276, 280, 385, 386, 387, 389, 393, 394, 396, 397, 403, 406, 408, 412, 416, 427, 428, 434, 464, 472, 490, 493, 585, 589], "automatis": 524, "autopep8": 386, "autoscal": [218, 219, 220, 221], "avail": [11, 13, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 67, 70, 72, 77, 78, 83, 87, 88, 91, 102, 103, 106, 107, 111, 112, 125, 126, 128, 129, 133, 134, 137, 138, 147, 150, 171, 177, 183, 184, 202, 215, 218, 220, 224, 225, 229, 230, 238, 241, 254, 256, 265, 266, 270, 276, 278, 280, 285, 337, 374, 386, 389, 392, 393, 394, 395, 397, 398, 399, 400, 403, 404, 406, 413, 417, 418, 419, 420, 421, 422, 428, 432, 433, 434, 438, 441, 445, 447, 449, 452, 454, 458, 462, 463, 466, 484, 489, 490, 492, 494, 496, 500, 501, 505, 509, 511, 513, 515, 516, 522, 524, 525, 527, 528, 529, 531, 539, 551, 583, 585, 587], "available_hdu": 88, "available_irf": 88, "available_method": [174, 183], "available_quant": [126, 128, 466, 489], "available_select": [177, 184], "available_stat_typ": 102, "averag": [19, 103, 106, 107, 111, 112, 177, 184, 187, 188, 190, 191, 438, 458, 459, 462, 521], "averageaz": [474, 475], "avoid": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 125, 177, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 294, 386, 387, 392, 393, 394, 396, 400, 404, 405, 408, 409, 411, 412, 414, 419, 421, 438, 440, 449, 451, 452, 454, 462, 468, 494, 498, 522, 525, 534, 585], "awai": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 293, 295], "awar": [386, 391, 398, 406, 412], "ax": [16, 19, 20, 26, 66, 67, 83, 102, 103, 106, 107, 111, 112, 113, 114, 115, 116, 118, 125, 126, 128, 130, 131, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 177, 184, 187, 188, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 293, 295, 373, 374, 378, 379, 380, 381, 382, 383, 386, 395, 405, 429, 433, 438, 444, 445, 446, 449, 452, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 500, 501, 502, 509, 510, 511, 521, 523, 525, 527, 532, 534, 535, 536, 537, 542, 543, 544, 548, 551, 579, 580, 584], "ax1": [457, 466, 468, 472, 482, 494, 495], "ax2": [457, 466, 468, 472, 482, 494, 495], "ax3": [466, 472], "ax_crab_3fhl": 511, "ax_ebl": 551, "ax_excess": [459, 462], "ax_model": 551, "ax_residu": [102, 111, 112, 459, 462, 463, 464, 482, 509], "ax_s": [463, 509], "ax_spati": [103, 106, 107, 111, 112], "ax_spectr": [103, 106, 107, 111, 112], "ax_spectrum": [102, 111, 112, 459, 462, 463, 464, 482], "ax_sqrt_t": [459, 462], "axcols1": 493, "axcols2": 493, "axel": [395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "axes0": [197, 198, 200, 206, 209, 210], "axes_loc": [151, 152, 154, 157, 158, 159, 164, 166, 168, 210, 374], "axes_nam": [196, 197, 198, 200, 205, 206, 208, 209, 210], "axesimag": [374, 375], "axesn": [197, 198, 200, 206, 209, 210], "axi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 100, 102, 103, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 121, 125, 126, 128, 129, 130, 132, 133, 137, 138, 141, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 252, 253, 255, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 277, 278, 279, 281, 282, 289, 293, 294, 295, 299, 300, 301, 303, 324, 325, 335, 374, 379, 380, 381, 382, 392, 395, 408, 410, 430, 433, 434, 435, 438, 440, 445, 447, 448, 449, 452, 457, 459, 462, 463, 464, 465, 467, 468, 470, 472, 474, 475, 476, 478, 480, 481, 484, 485, 487, 488, 491, 492, 493, 500, 501, 502, 509, 510, 511, 521, 523, 525, 529, 534, 537, 538, 580, 584], "axis0": 537, "axis1": 493, "axis2": 493, "axis_edg": 379, "axis_nam": [102, 103, 106, 107, 111, 112, 126, 128, 141, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 210, 476, 479, 480, 481, 488, 489], "axis_new": [128, 149, 480, 485], "axis_origin": 485, "axis_rgb": 381, "axis_tru": 472, "axisymmetr": 453, "axvlin": [465, 486, 497, 498], "axvspan": [206, 482], "az": [83, 85, 88, 94, 95, 386, 589], "azimuth": 501, "azur": 434, "b": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 51, 52, 54, 77, 84, 87, 90, 91, 105, 127, 157, 215, 353, 386, 387, 400, 409, 412, 416, 462, 473, 486, 487, 490, 493, 494, 496, 501, 511, 517, 521, 538], "b1509": 487, "b5pkq73a": 458, "b_0": [542, 543], "b_1": [87, 91], "b_mean": 42, "b_psr": 43, "b_stdv": 42, "back": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 77, 87, 91, 198, 325, 389, 396, 397, 400, 406, 415, 416, 462, 463, 465, 493, 496, 509, 585], "backend": [93, 102, 123, 129, 130, 133, 134, 137, 173, 214, 215, 216, 217, 291, 328, 333, 334, 385, 395, 397, 428, 447, 448, 452, 459, 460, 462, 463, 464, 470, 471, 472, 482, 484, 489, 490, 501, 509, 510, 525, 582, 583], "backend_default": [130, 133, 137], "background": [16, 67, 82, 83, 88, 93, 103, 104, 106, 107, 108, 110, 111, 112, 115, 116, 121, 125, 126, 128, 136, 151, 152, 153, 163, 172, 174, 175, 177, 178, 179, 180, 182, 183, 184, 190, 230, 236, 278, 286, 293, 295, 304, 305, 306, 307, 310, 382, 386, 392, 395, 398, 399, 400, 402, 406, 407, 410, 419, 424, 427, 428, 429, 431, 432, 433, 434, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 452, 453, 454, 456, 457, 458, 459, 462, 463, 464, 465, 466, 467, 469, 470, 472, 475, 476, 478, 479, 480, 481, 482, 484, 487, 488, 490, 491, 493, 494, 498, 502, 503, 505, 510, 521, 523, 524, 583, 584, 585, 587, 588], "background2d": [152, 153, 163, 434, 441, 449, 451, 453, 528], "background3d": [88, 151, 163, 190, 392, 434, 438, 446, 447, 448, 454, 491, 500, 528], "background_estim": 405, "background_interp_missing_data": 177, "background_map": [278, 397], "background_min": 150, "background_model": [103, 106, 107, 111, 112, 137, 398, 399, 406, 408, 434, 467, 510, 528], "background_oversampl": [177, 184, 492], "background_pad_offset": 177, "background_r": [405, 488], "backgroundconfig": 16, "backgroundestim": [401, 432], "backgroundevalu": 397, "backgroundirf": [151, 152], "backgroundirfmodel": 408, "backgroundmodel": [398, 408, 409, 431, 433, 434, 435, 438], "backgroundtempl": 397, "backport": [393, 411, 416], "backround": 395, "backscal": 206, "backward": [391, 400, 409, 410, 411, 430, 489, 523], "bad": [86, 386, 400], "badli": 417, "balanc": 521, "band": [19, 20, 26, 68, 83, 89, 123, 126, 128, 131, 155, 156, 159, 162, 167, 170, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 392, 404, 405, 409, 410, 419, 427, 460, 462, 463, 471, 472, 473, 482, 486, 487, 496, 501, 503, 520, 521, 523, 583], "bandshdu": 493, "banner": 417, "bar": [15, 82, 87, 91, 103, 106, 107, 111, 112, 121, 133, 137, 151, 152, 210, 215, 239, 301, 334, 380, 403, 438, 441, 442, 448, 453, 482, 498, 525, 558], "bar_radiu": 38, "base": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 293, 295, 312, 321, 322, 325, 331, 333, 335, 360, 373, 381, 386, 387, 389, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 409, 414, 415, 417, 419, 420, 427, 429, 430, 432, 434, 435, 438, 440, 443, 444, 445, 446, 447, 453, 454, 458, 462, 464, 465, 467, 470, 471, 472, 473, 474, 476, 482, 485, 487, 489, 491, 493, 494, 496, 497, 498, 500, 501, 510, 511, 513, 522, 523, 525, 535, 537, 549, 559, 583, 584, 586, 587], "base_dir": [82, 87, 321, 500, 502, 503, 513], "baselin": [82, 83, 244, 500], "basement": 429, "basemodel": [16, 84, 90, 105, 127, 413, 470], "baseradi": 253, "bash": [419, 421, 585], "basi": [391, 392, 402, 405, 416, 440, 442, 482, 486], "basic": [45, 46, 67, 71, 72, 74, 75, 76, 78, 79, 80, 106, 112, 128, 243, 389, 392, 396, 397, 398, 399, 400, 402, 406, 410, 413, 423, 435, 445, 447, 456, 459, 462, 464, 477, 479, 485, 486, 487, 494, 505, 511, 513, 515, 516, 523, 534, 537, 584, 585], "basicconfig": [16, 472, 507], "bayesian": [390, 404], "bayesian_block": 485, "bayesian_edg": 485, "bayesianfit": 415, "bayesianinfer": 415, "baysian": 395, "bb": [87, 91, 412], "bbar": [19, 20], "bbox_with_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bcf": [152, 156, 157, 158, 167, 457, 465, 478, 481, 491, 500], "becam": 393, "becaus": [16, 84, 90, 105, 127, 197, 198, 200, 204, 206, 209, 210, 386, 387, 389, 391, 393, 397, 398, 400, 401, 405, 409, 410, 413, 417, 438, 440, 454, 459, 460, 463, 476, 480, 482, 492, 493, 494, 495, 500, 501, 502, 509, 510, 511, 521, 525, 585, 588], "becom": [386, 394, 396, 397, 400, 405, 413, 415, 474, 480, 496, 525, 585, 588], "been": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 100, 105, 125, 126, 127, 128, 169, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 313, 391, 392, 393, 394, 395, 397, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 418, 420, 434, 435, 438, 440, 441, 447, 448, 449, 450, 451, 452, 453, 454, 458, 463, 473, 480, 481, 482, 484, 489, 493, 496, 497, 500, 502, 509, 522, 537, 570], "befor": [13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 52, 53, 84, 87, 90, 91, 92, 100, 105, 126, 127, 197, 198, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 325, 381, 386, 387, 389, 391, 393, 394, 395, 396, 400, 401, 402, 404, 405, 411, 416, 417, 423, 441, 447, 458, 463, 465, 479, 480, 489, 490, 493, 496, 502, 505, 509, 561, 585], "begeman": 22, "begin": [52, 87, 91, 103, 107, 111, 126, 128, 137, 406, 409, 412, 462, 464, 493, 496, 542, 547, 548, 552, 568, 587], "behav": [386, 396, 452, 467, 588], "behavior": [16, 84, 87, 90, 91, 95, 105, 127, 410, 437, 441, 452, 454], "behaviour": [361, 386, 408, 409, 435, 440, 446, 453, 480, 494, 501, 502, 521, 586], "behind": 484, "being": [125, 136, 198, 386, 391, 394, 400, 407, 410, 417, 464, 473, 485, 494, 514, 525, 538, 585], "belief": 498, "believ": [422, 498], "belong": [86, 410, 434], "below": [52, 53, 87, 91, 196, 200, 207, 208, 375, 376, 377, 381, 383, 387, 389, 390, 395, 396, 400, 402, 403, 406, 409, 410, 412, 413, 414, 415, 417, 418, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 462, 466, 482, 487, 490, 492, 494, 496, 497, 498, 500, 501, 522, 525, 543, 587], "benchmark": [402, 412, 417], "benefit": 403, "benn": 402, "berg": 584, "berge2007": [400, 534, 535, 584], "bernet": 453, "besancon": 515, "besid": [125, 137, 400, 401, 410, 415, 463, 464, 493, 501, 509, 510, 538], "best": [67, 71, 74, 75, 78, 80, 102, 126, 128, 129, 130, 133, 134, 145, 216, 217, 291, 293, 295, 379, 386, 389, 396, 399, 404, 412, 415, 419, 421, 458, 460, 462, 463, 464, 467, 470, 473, 482, 487, 489, 490, 498, 509, 523, 525, 527, 551, 557, 560, 561, 565, 587, 588, 589], "best_fit_model": 464, "beta": [27, 28, 48, 215, 244, 245, 246, 269, 409, 411, 434, 458, 460, 464, 471, 487, 490, 553, 559, 560, 561, 566, 576], "better": [386, 389, 391, 392, 393, 394, 395, 399, 400, 405, 406, 407, 410, 415, 428, 445, 446, 470, 471, 474, 482, 484, 490, 493, 494, 501, 521], "between": [19, 20, 26, 67, 77, 87, 88, 91, 94, 106, 112, 123, 125, 126, 128, 130, 131, 133, 135, 145, 146, 158, 164, 166, 167, 168, 170, 180, 194, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 210, 222, 223, 226, 227, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 253, 255, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 277, 279, 281, 282, 285, 291, 310, 343, 376, 377, 384, 386, 387, 394, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 410, 411, 413, 414, 415, 416, 425, 435, 438, 441, 452, 457, 464, 466, 471, 473, 476, 481, 482, 485, 489, 490, 492, 493, 494, 495, 498, 501, 502, 511, 521, 523, 530, 531, 534, 543, 544, 584, 587, 589], "bewar": [279, 459, 480], "bexcub": 201, "bexpcub": [196, 197, 198, 200, 209, 210, 493], "beyond": [201, 400, 410, 413, 434, 492, 513], "bfg": 490, "bfvp5zge": 466, "bgstat": 444, "bi": [445, 448], "bia": [96, 154, 155, 159, 183, 446, 452, 492, 498, 529], "bias": [464, 586], "bias_energi": 154, "bias_perc": 183, "bibliographi": 584, "bic": 415, "biederbeck": [414, 453], "big": [393, 396, 403, 416, 448, 501, 586, 588], "bigger": 198, "biggest": 405, "billion": 386, "bimod": 31, "bin": [19, 20, 26, 83, 86, 88, 101, 103, 106, 107, 110, 111, 112, 114, 115, 121, 123, 125, 126, 128, 129, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 148, 149, 150, 154, 155, 156, 157, 159, 162, 165, 167, 169, 170, 177, 179, 180, 181, 183, 185, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 287, 296, 302, 303, 310, 379, 381, 384, 392, 397, 398, 399, 400, 402, 405, 406, 410, 418, 419, 429, 430, 432, 433, 435, 437, 438, 440, 443, 444, 445, 446, 447, 452, 453, 454, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 521, 523, 525, 529, 532, 533, 583, 584, 585, 586, 588], "bin_cent": 482, "bin_edg": 482, "bin_volum": [201, 205, 208, 538], "bin_width": [199, 202, 207, 482], "binari": [208, 210, 394, 400, 403, 412, 417, 438], "binary_dil": [210, 494], "binary_erod": [210, 494], "binary_eros": [210, 438], "binary_structur": 208, "bincent": 303, "bind": 389, "binder": [394, 416, 446, 449, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "binlik": 128, "binned_likelihood": 129, "binneddataaxi": [429, 445], "binnedtimeseri": [128, 401], "bins_axi": 210, "binsiz": [16, 463, 467, 468, 470, 479, 509, 510], "binsize_irf": [16, 463, 467, 468, 470, 479, 509], "binsz": [103, 106, 107, 111, 112, 113, 118, 156, 165, 167, 177, 180, 181, 185, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 402, 462, 472, 473, 474, 475, 478, 482, 486, 488, 491, 492, 493, 494, 496, 501, 502, 510, 532, 534, 535, 537, 538, 541, 543, 544, 545, 546], "binsz_irf": [103, 106, 107, 111, 112, 116, 488, 492, 525], "binsz_irf_default": [103, 106, 107, 111, 112, 492], "binsz_wc": [205, 206], "bintabl": [196, 197, 198, 200, 209, 210], "bintablehdu": [83, 86, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 201, 202, 208, 209, 210, 474, 493, 521], "birth": [29, 30, 31, 32, 36, 50, 51, 52, 53], "bit": [83, 145, 387, 389, 393, 394, 400, 404, 405, 413, 454, 482, 493, 538], "bitbucket": 503, "bitpix": 493, "bkg": [16, 82, 87, 88, 103, 107, 108, 109, 111, 112, 151, 152, 153, 183, 190, 236, 408, 433, 435, 440, 454, 457, 462, 463, 467, 468, 470, 471, 474, 475, 478, 482, 488, 491, 492, 495, 500, 502, 503, 509, 510, 521, 528, 584, 586, 587, 588], "bkg_": [103, 107, 111], "bkg_2d": [87, 151], "bkg_3d": [82, 87, 152, 500, 503], "bkg_err": 482, "bkg_maker": [408, 459, 462, 464, 472, 480, 484, 534], "bkg_model": [398, 408, 414, 470, 474, 475, 478, 495, 510, 545], "bkg_ob": 108, "bkg_sy": 136, "bkg_syst_fract": [136, 457], "bkg_syst_fraction_sensit": 125, "bkgfile": 108, "black": [111, 112, 375, 376, 383, 404, 447, 449, 457, 482, 486, 492, 497, 534, 570], "blackground": 457, "blanch": [446, 447], "blanklin": [243, 423, 523, 538], "blazar": [308, 458, 484], "blind": [449, 525, 590], "bll": 511, "blob": 426, "block": [387, 389, 392, 399, 406, 417, 426, 446], "block_reduc": 447, "blue": [102, 103, 106, 107, 111, 112, 228, 252, 376, 458, 462, 468, 470, 473, 497, 534, 570], "blur": 33, "board": [395, 406], "bodi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "boilerpl": 386, "boller": 485, "boni": [438, 441], "bool": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 120, 125, 126, 127, 128, 129, 133, 134, 137, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 177, 184, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 279, 280, 294, 310, 313, 322, 325, 326, 343, 349, 352, 354, 355, 357, 383, 386, 400, 472, 487, 492, 493], "boolean": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 126, 129, 130, 133, 134, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 215, 228, 252, 268, 402, 435, 470, 487, 493, 494, 495], "boost": 474, "bootstrap": [87, 91, 415], "border": 91, "bose": 429, "bot": 392, "both": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 70, 77, 82, 83, 86, 87, 88, 91, 100, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 154, 155, 156, 162, 167, 170, 194, 197, 198, 200, 202, 204, 205, 206, 208, 209, 210, 218, 220, 386, 391, 392, 397, 398, 399, 400, 401, 406, 411, 416, 428, 432, 434, 435, 438, 441, 463, 464, 474, 478, 488, 489, 493, 494, 495, 497, 498, 522, 523, 525, 537, 538, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 587], "bother": 467, "bottom": [406, 408, 458, 474, 479, 480, 481, 485, 487], "bound": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 103, 106, 107, 111, 112, 126, 128, 129, 130, 133, 195, 196, 202, 205, 207, 208, 215, 222, 223, 226, 227, 228, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 252, 253, 255, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 277, 278, 279, 281, 282, 307, 395, 493, 498], "boundari": [202, 208, 280, 414, 415, 443, 454, 490, 496, 537], "boundary_mask": [208, 494], "boundary_typ": 202, "bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "bounds_error": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 386, 491], "box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 103, 106, 107, 130, 131, 205, 208, 210, 345, 346, 395, 400, 404, 410, 415, 445, 494, 496, 538], "bpl": [222, 409, 496], "bpwl_norm": 409, "bracket": [154, 215, 450, 452], "brake": 51, "branch": [386, 389, 393, 400, 411, 417, 426], "branchnam": 386, "bratio": 513, "break": [222, 269, 392, 400, 402, 411, 432, 433, 434, 454, 552, 566], "brent": 466, "brentq": [19, 20, 26, 128, 215, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 292], "breviti": [470, 525], "brief": 589, "briefli": [502, 503], "bright": [68, 130, 268, 284, 468, 479, 480, 494, 496, 519, 534], "brighter": 474, "brightest": 487, "brigitta": [403, 428, 430, 432, 434, 443, 444, 445, 446, 447, 448, 449, 454], "bring": 391, "broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 197, 198, 200, 203, 206, 209, 210, 268, 325, 454, 475, 491, 493, 537], "broadcasted_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "broken": [222, 269, 412, 416, 456, 484, 539, 571], "brokenpowerlaw": 409, "brokenpowerlawspectralmodel": [263, 269, 409, 435, 496, 552], "brought": 454, "brown": [141, 485], "brows": [87, 91, 387, 423, 511], "browser": [87, 91, 389, 417, 423, 443, 446, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 507, 509, 510, 511, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "bruno": [412, 415, 430, 432, 435, 438, 441, 445, 446, 447, 449, 450, 451, 452, 453, 454], "br\u00fcgge": [446, 447], "bsd": 412, "bst": [87, 91], "buchner": [415, 438], "buchner2023": 415, "budget": 525, "buffer": 364, "bug": [386, 389, 392, 393, 411, 412, 416, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 447, 448, 450, 451], "bugfix": [393, 395, 411, 445, 446], "build": [16, 84, 90, 105, 127, 196, 230, 386, 392, 393, 394, 399, 400, 402, 406, 410, 411, 412, 413, 416, 434, 440, 449, 454, 466, 470, 482, 492, 494, 522, 525, 585], "build_doc": [350, 387, 389, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 549, 557, 573], "built": [10, 184, 230, 353, 370, 385, 386, 387, 397, 398, 400, 402, 403, 405, 413, 417, 424, 447, 452, 487, 495, 501, 505, 521], "builtin": 511, "bullet": 391, "bump": [400, 445], "bunch": [104, 110, 387, 585], "bundl": [102, 103, 106, 111, 112, 395, 398, 417, 439, 447, 472, 488, 492, 521, 538, 583, 584], "bunit": [372, 447, 493], "bureaucrat": 391, "burkert": [17, 513], "burn": 415, "burst": [36, 37, 485], "butterfli": [446, 490, 511], "button": [449, 493], "bx": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "by_alia": [16, 84, 90, 105, 127], "byte": [16, 84, 87, 90, 91, 105, 127, 331, 364, 386], "bytearrai": [16, 84, 90, 105, 127, 331], "bytestr": [87, 91], "b\u00fchler": 426, "c": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 87, 91, 203, 213, 232, 272, 296, 302, 313, 353, 385, 386, 403, 419, 420, 422, 439, 446, 462, 468, 482, 484, 486, 490, 498, 500, 501, 513, 537, 556, 567, 585, 586, 588], "c0": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c1": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "c7": 102, "c_": 213, "c_0": [195, 196, 205, 208], "c_i": [195, 196, 205, 208], "c_n": [195, 196, 205, 208], "cabot": 454, "cach": [87, 88, 91, 100, 103, 106, 107, 111, 112, 278, 321, 322, 395, 396, 398, 405, 408, 417, 431, 435, 438, 453], "cahil": 440, "cal_gen_92_002": [154, 202], "cal_gen_92_002_summari": 154, "calcul": [13, 15, 19, 20, 26, 96, 106, 112, 140, 141, 142, 143, 183, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 264, 269, 271, 272, 273, 274, 277, 280, 281, 298, 300, 301, 310, 312, 335, 368, 376, 377, 396, 399, 428, 434, 438, 439, 440, 446, 451, 453, 457, 482, 485, 486, 489, 498, 509, 510, 513, 525, 584, 588], "caldb": [82, 152, 154, 156, 157, 158, 167, 202, 440, 457, 465, 474, 475, 478, 481, 491, 500], "calendar": [411, 416], "calib_vers": [501, 511], "call": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 102, 103, 105, 106, 107, 111, 112, 127, 140, 141, 142, 143, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 179, 195, 196, 205, 208, 215, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 237, 238, 239, 241, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 261, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 283, 325, 337, 358, 364, 372, 375, 383, 386, 387, 389, 391, 392, 395, 398, 399, 400, 401, 402, 404, 406, 408, 410, 412, 414, 415, 417, 419, 423, 434, 438, 452, 462, 463, 472, 487, 488, 489, 490, 492, 493, 496, 501, 503, 509, 510, 511, 521, 525, 534, 535, 536, 537, 538, 585, 586, 587, 588], "callabl": [16, 45, 84, 90, 105, 127, 287, 415], "callback": [173, 585], "caller": [386, 397], "camera": [481, 491, 492], "can": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 56, 67, 68, 69, 77, 82, 83, 84, 87, 90, 91, 93, 103, 105, 106, 107, 110, 111, 112, 116, 121, 125, 126, 127, 128, 133, 134, 135, 137, 138, 145, 147, 152, 157, 165, 167, 170, 174, 180, 183, 195, 196, 197, 198, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 215, 219, 221, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 238, 239, 241, 243, 245, 246, 249, 252, 253, 254, 255, 257, 258, 259, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 292, 294, 299, 313, 325, 326, 331, 334, 343, 362, 364, 379, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 430, 432, 434, 435, 438, 440, 441, 445, 446, 447, 448, 449, 452, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 509, 510, 511, 513, 515, 516, 521, 522, 523, 525, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 559, 561, 570, 580, 582, 583, 584, 585, 586, 587, 588, 590], "candel": 230, "candid": [411, 440, 487], "candl": [285, 584], "cannot": [16, 67, 84, 87, 90, 91, 95, 105, 114, 115, 126, 127, 128, 212, 302, 353, 383, 389, 399, 400, 452, 491, 495, 496, 523, 538], "cao": 57, "cap": [51, 54], "capabl": [396, 501, 513], "capsiz": 498, "captur": [386, 402], "car": [103, 106, 107, 111, 112, 177, 208, 209, 210, 228, 252, 400, 430, 472, 491, 492, 493, 510, 511], "card": [83, 86, 88, 100, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 154, 155, 156, 162, 167, 170, 197, 198, 200, 204, 206, 209, 210, 493], "care": [126, 128, 313, 386, 395, 402, 411, 459, 464, 470, 493, 585], "carefulli": [412, 474, 475, 498], "carina": [33, 38], "carlo": [404, 415, 530, 584], "carri": [401, 409, 411, 413, 438, 460, 510], "carr\u00e9": 208, "cartesian": [41, 46, 198, 209, 210, 316, 318, 451, 511, 537], "case": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 69, 77, 83, 87, 91, 101, 102, 154, 173, 185, 196, 198, 204, 205, 208, 210, 215, 218, 220, 241, 253, 276, 278, 280, 292, 302, 326, 343, 381, 386, 387, 389, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 419, 427, 428, 431, 434, 440, 441, 446, 452, 453, 457, 459, 462, 463, 464, 465, 467, 468, 470, 474, 475, 478, 479, 481, 482, 485, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 503, 505, 509, 511, 520, 523, 524, 525, 535, 538, 542, 543, 544, 547, 548, 552, 561, 568, 583, 585, 587], "casebattacharya1998": [29, 30, 35, 36, 39, 40, 48], "cash": [103, 106, 111, 112, 177, 297, 302, 309, 386, 398, 438, 465, 467, 470, 478, 481, 488, 492, 495, 498, 509, 510, 521, 584], "cash1979": [584, 587], "cash_weight": 107, "cashcountsstatist": [423, 453, 585, 587], "cast": 91, "cat": [66, 67, 79, 394, 417, 445, 446, 460, 487, 496, 520, 584, 585], "catalof": 69, "catalog": [6, 45, 46, 47, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 125, 129, 228, 252, 400, 406, 426, 430, 432, 434, 438, 439, 440, 443, 444, 445, 446, 447, 449, 453, 454, 456, 458, 460, 466, 471, 488, 496, 499, 501, 505, 515, 549, 583, 584], "catalog_3fgl": 460, "catalog_3fhl": [460, 487], "catalog_3fhl_bright": 487, "catalog_4fgl": 487, "catalog_4fgl_roi": 487, "catalog_gammacat": [460, 487], "catalog_hgp": 487, "catalog_registri": [460, 487, 494], "catalogimageestim": 447, "catalogu": [78, 438, 445], "catch_warn": 525, "categori": [386, 397, 410, 438, 454, 494, 496, 539], "caus": [393, 400, 447, 450, 525], "cautious": 473, "caveat": [215, 308, 453, 543], "cax": 491, "cb98": 48, "cbar": 374, "cbar_kw": 380, "cbarlabel": 380, "cc": [395, 400, 402, 405, 407, 409, 412, 414], "ccube": [196, 197, 198, 200, 201, 202, 208, 209, 210, 493], "cd": [386, 387, 389, 402, 419, 420, 421], "cdcedkw7": 484, "cdelt": [208, 210], "cdelt1": 493, "cdelt2": 493, "cdf": [335, 399, 415, 474, 490], "cdot": [51, 52, 53, 54, 103, 107, 111, 257, 272, 409, 496, 521, 542, 547, 548, 552, 555, 556, 563, 564, 566, 567, 568, 569, 574, 575, 576, 578, 586], "celesti": [493, 537, 542, 546, 589], "celfix": 549, "cell": [394, 423, 449, 471, 482, 493, 500, 501, 511], "center": [17, 18, 21, 22, 23, 24, 25, 27, 41, 83, 87, 91, 96, 103, 106, 107, 111, 112, 114, 115, 126, 128, 130, 131, 132, 137, 154, 155, 156, 157, 158, 159, 162, 166, 167, 168, 170, 177, 180, 181, 183, 184, 185, 187, 188, 190, 191, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 224, 225, 228, 229, 238, 241, 252, 254, 256, 265, 266, 268, 270, 276, 278, 280, 315, 319, 345, 386, 387, 400, 402, 409, 410, 428, 429, 438, 440, 453, 457, 459, 462, 464, 465, 466, 467, 468, 470, 472, 474, 475, 476, 480, 481, 482, 484, 486, 491, 492, 493, 494, 495, 496, 500, 501, 510, 511, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 542, 543, 546], "center_coord": [195, 196, 201, 205, 208], "center_pix": [195, 196, 205, 208], "center_ski": 538, "center_skydir": [195, 196, 205, 208, 492, 493, 501, 502, 532, 534, 535], "centr": [486, 494, 513], "central": [135, 398, 407, 460, 511], "cern": 513, "certain": [50, 83, 87, 91, 215, 299, 385, 400, 402, 404, 410, 457, 486, 492, 493, 501, 520, 538], "certainli": 389, "certif": 412, "certifi": 412, "cfa": [215, 490], "cff": 416, "cg": 517, "ch": 53, "chain": [173, 399, 402, 415, 432, 492, 525, 535, 584], "chainer": 404, "chakraborti": [444, 445], "challeng": [393, 395, 399, 445, 468, 470, 472, 500], "chanc": 391, "chang": [16, 19, 20, 26, 84, 86, 87, 90, 91, 105, 126, 127, 128, 196, 205, 208, 222, 223, 226, 230, 232, 233, 234, 239, 243, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 361, 371, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 410, 411, 412, 416, 417, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 444, 445, 446, 447, 448, 450, 455, 464, 465, 466, 472, 474, 475, 479, 484, 485, 488, 489, 490, 494, 496, 498, 500, 509, 521, 525, 532, 534, 538, 549, 557, 585], "changelog": [386, 416, 439, 447], "channel": [19, 20, 26, 385, 388, 389, 403, 446, 475, 486, 493, 503, 513], "channel0": 513, "channel1": 513, "channel_registri": [19, 20, 26], "chapter": 486, "charact": [87, 91, 386, 495], "character": [301, 410, 474], "characterist": [21, 25, 27, 51, 52, 53, 54, 141, 299, 397, 452, 485, 584], "charg": [412, 416, 561], "chatti": [386, 472], "cheat": 422, "check": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 86, 87, 88, 91, 103, 106, 107, 108, 111, 112, 126, 128, 154, 155, 156, 162, 167, 170, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 219, 221, 228, 252, 268, 308, 360, 362, 389, 402, 408, 412, 416, 417, 419, 420, 421, 424, 433, 438, 446, 454, 460, 478, 484, 491, 505, 513, 525, 529, 538, 582, 585, 586], "check_limit": [218, 219, 220, 221], "check_random_st": 386, "check_tutorials_setup": [457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "checker": [444, 447], "checklist": 417, "checkout": [386, 389, 416, 429, 470, 474, 496], "checksum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 154, 155, 156, 162, 167, 170, 197, 198, 200, 204, 206, 209, 210, 216, 228, 252, 349, 352, 355, 453, 471, 501], "chen": [148, 447], "cherenkov": [157, 399, 419, 424, 459, 462, 468, 479, 492, 500, 502, 534, 535, 584], "cherri": [386, 393, 400, 411], "chi": [298, 401, 586, 587, 588], "chi2": [102, 135, 139, 148, 398, 429, 462, 473, 481, 490, 521, 587], "chi2assym": 432, "child": 396, "children": [470, 478, 493, 509, 510], "chime": 389, "chisq": 298, "chisquar": 298, "chmod": 585, "choic": [140, 399, 403, 405, 412, 415, 462, 463, 465, 467, 490, 502, 509, 526, 582, 585], "choos": [45, 77, 195, 196, 199, 201, 202, 205, 208, 281, 327, 398, 400, 402, 406, 415, 419, 421, 438, 460, 462, 466, 470, 472, 481, 488, 490, 492, 493, 495, 496, 497, 501, 510, 525, 585], "chose": [474, 501, 502, 587, 589], "chosen": [26, 154, 167, 170, 196, 197, 198, 206, 209, 210, 228, 238, 252, 386, 389, 401, 402, 405, 463, 480, 492, 493, 497, 498, 502, 509, 523, 533, 534, 538], "christoph": [391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 426, 427, 428, 429, 430, 431, 432, 433, 439, 442, 443, 444, 445, 446, 447, 448], "chrome": [87, 91], "chromei": 440, "chunk": [156, 167, 170], "chunk_siz": [156, 167, 170], "ci": [386, 389, 393, 412, 417, 432, 438, 440, 443, 449], "circl": [83, 185, 383, 387, 400, 440, 462, 472, 481, 486, 492, 494, 497, 500, 510, 511, 522, 532, 534, 535, 538], "circle_area": 387, "circleannulusskyregion": [265, 266, 534], "circledast": 521, "circlepixelregion": 400, "circleskyregion": [103, 106, 107, 111, 112, 179, 180, 184, 208, 229, 387, 400, 457, 459, 462, 464, 465, 468, 470, 472, 474, 475, 480, 484, 486, 488, 492, 494, 495, 510, 532, 534, 535, 538], "circular": [91, 103, 106, 107, 184, 196, 198, 208, 397, 405, 407, 459, 464, 488, 497, 534, 538], "circumv": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "cirelli": [26, 513], "citat": 416, "cite": [389, 412], "cl": [16, 84, 90, 103, 105, 107, 111, 127, 413], "clabel": 490, "claim": 415, "clang": 423, "clarif": 391, "clarifi": [410, 452], "class": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 293, 295, 321, 322, 325, 333, 335, 360, 373, 389, 392, 395, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 414, 415, 419, 423, 426, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 457, 460, 462, 463, 464, 465, 466, 467, 468, 472, 474, 475, 478, 479, 482, 487, 488, 489, 490, 491, 492, 493, 496, 498, 500, 501, 502, 509, 511, 516, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 533, 535, 536, 537, 538, 539, 561, 570, 582, 583, 584, 585, 590], "class1": 487, "class2": 487, "classic": [395, 404, 415, 419, 428, 459, 462, 468, 472, 488, 492, 523, 525, 534, 535, 584, 587], "classifi": 502, "classmethod": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 100, 102, 103, 105, 106, 107, 111, 112, 126, 127, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 413], "classproperti": 438, "classvar": [16, 84, 90, 105, 127], "claudio": [451, 453, 454], "claus": [386, 412], "clean": [386, 387, 389, 394, 395, 400, 402, 404, 426, 428, 429, 430, 431, 432, 433, 434, 435, 438, 445, 446, 447, 448], "cleaner": 449, "cleanup": [393, 405, 417, 426, 431, 432, 437, 438, 439, 443, 444, 446, 454], "clear": [92, 100, 204, 252, 386, 391, 393, 397, 400, 401, 405, 406, 407, 446, 473, 589], "clearer": 431, "clearli": [141, 386, 391, 392, 400, 403, 411], "cli": [11, 402, 448, 583], "click": [385, 402, 403, 423, 431, 446, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 585], "clip": [19, 20, 26, 195, 196, 199, 201, 202, 205, 207, 208, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 280, 281, 325, 431, 432, 466], "clockwis": [229, 238, 241, 542], "clone": [389, 420, 447], "close": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 280, 361, 362, 363, 395, 400, 416, 441, 452, 453, 454, 490, 570], "closer": 511, "closest": [121, 125, 129, 133, 137, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 489, 494, 523], "cloud": [417, 505], "cluster": [6, 24, 25, 96, 311, 312, 399, 415, 452, 453, 456, 499, 505, 522, 525], "clutter": [470, 525], "cm": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 51, 52, 53, 54, 67, 102, 128, 134, 137, 222, 226, 232, 234, 239, 246, 250, 257, 259, 268, 269, 272, 273, 274, 284, 371, 397, 409, 458, 459, 460, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 478, 480, 481, 482, 486, 487, 489, 490, 496, 498, 500, 501, 509, 511, 518, 519, 523, 525, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584], "cm2": [51, 54, 67, 109, 128, 157, 210, 285, 371, 457, 458, 460, 462, 463, 465, 466, 470, 471, 472, 474, 475, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 493, 495, 496, 498, 501, 509, 510, 511, 523, 538, 554, 557, 560, 565, 570], "cm3": [17, 18, 19, 21, 22, 24, 25, 27, 52, 486], "cm5": 486, "cmap": [103, 106, 107, 111, 112, 228, 252, 376, 377, 464, 470, 486, 493, 495, 501, 502, 509, 510, 534], "cmb": 561, "co": [53, 203, 411, 412, 457, 542, 543, 544], "coadd": [197, 198, 200, 206, 209, 210], "coars": 488, "coarser": [202, 207, 488], "codaci": 417, "codata": 52, "code": [19, 20, 26, 82, 83, 87, 91, 154, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 381, 389, 390, 391, 393, 394, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 420, 423, 426, 429, 430, 432, 433, 434, 435, 438, 440, 443, 444, 445, 446, 447, 449, 452, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 513, 525, 532, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 585], "codebas": [387, 403, 415, 426, 445, 447], "codemeta": 440, "codespel": 438, "codestyl": 389, "coeffici": [131, 244, 249, 551], "coerce_numbers_to_str": 105, "coerce_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "coher": 454, "coincid": 485, "col": [87, 91, 438], "col0": [87, 91], "col1": [87, 91], "col2": [87, 91], "col_b": [87, 91], "col_c": [87, 91], "col_d": [87, 91], "col_fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "col_label": 380, "collabor": [77, 376, 377, 391, 393, 395, 399, 440, 473, 501, 584], "colleagu": [389, 415, 585], "collect": [204, 252, 386, 388, 413, 415, 417, 445, 446, 463, 488, 495, 513, 522, 526, 530, 584, 589], "collis": 50, "colnam": [87, 91, 197, 198, 200, 206, 209, 210, 501, 511], "color": [102, 111, 112, 151, 152, 210, 228, 252, 375, 376, 377, 380, 383, 387, 457, 458, 460, 462, 463, 464, 465, 466, 468, 470, 472, 473, 476, 479, 482, 486, 489, 490, 492, 495, 497, 498, 525, 534, 538, 542, 543, 561, 570, 590], "colorbar": [128, 151, 152, 154, 157, 158, 159, 164, 165, 166, 168, 210, 374, 380, 484, 490, 493], "colorblind": 525, "colorblind10": 525, "colormap": [375, 376, 377, 426, 439, 511], "colormap_hess": [407, 590], "colormap_milagro": 590, "colour": 449, "column": [41, 43, 44, 46, 47, 56, 83, 87, 91, 104, 110, 126, 128, 131, 145, 151, 152, 154, 178, 197, 198, 199, 200, 201, 202, 206, 207, 209, 210, 279, 301, 311, 356, 357, 358, 359, 379, 380, 383, 384, 386, 399, 401, 410, 449, 452, 453, 457, 475, 482, 487, 493, 496, 500, 522, 525], "column_nam": 491, "column_prefix": 202, "columnclass": [87, 91], "columnspac": 383, "com": [139, 340, 341, 353, 389, 406, 416, 417, 420], "combin": [99, 102, 103, 106, 107, 111, 112, 138, 147, 148, 149, 183, 191, 197, 198, 200, 205, 206, 209, 210, 223, 268, 386, 392, 396, 397, 398, 399, 400, 401, 406, 409, 419, 431, 446, 452, 454, 460, 465, 470, 471, 478, 481, 488, 490, 491, 492, 493, 494, 496, 502, 510, 511, 513, 515, 525, 532, 537, 553, 583, 584], "combine_flux_map": [147, 454], "combine_significance_map": 148, "combined_ev": 522, "combining_and_defin": [457, 465, 467, 470, 472, 478, 481, 500], "come": [69, 389, 392, 393, 394, 395, 396, 400, 401, 402, 403, 405, 406, 411, 413, 416, 417, 434, 435, 438, 447, 448, 452, 462, 470, 478, 496, 500, 509, 585], "comma": [71, 72, 74, 75, 76, 78, 79, 80, 487], "command": [6, 13, 94, 102, 128, 158, 164, 166, 168, 385, 387, 389, 394, 395, 397, 402, 403, 417, 418, 419, 420, 421, 422, 428, 432, 443, 446, 447, 449, 474, 524, 583], "commensur": 210, "comment": [128, 386, 387, 391, 395, 399, 400, 402, 403, 405, 407, 409, 411, 412, 415], "commit": [386, 389, 394, 400, 411, 412, 416, 425, 426, 449], "committe": [391, 393, 411, 412], "commod": 412, "common": [95, 385, 386, 387, 389, 391, 392, 400, 402, 406, 407, 409, 410, 412, 420, 422, 423, 438, 440, 463, 464, 476, 487, 491, 494, 496, 509, 510, 513, 520, 523, 524, 538, 543, 585], "common_irf_head": 491, "commonli": [29, 83, 400, 404, 415, 447, 476, 513, 582, 583, 585, 587, 590], "commun": [386, 402, 408, 412, 416, 418, 424, 503], "comp": 487, "compact": [16, 84, 87, 90, 91, 105, 127], "compar": [87, 91, 129, 130, 133, 134, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210, 215, 291, 386, 400, 403, 406, 415, 435, 451, 452, 457, 458, 459, 462, 466, 470, 473, 476, 478, 480, 484, 487, 490, 492, 498, 501, 509, 520, 584, 586], "comparison": [86, 87, 91, 100, 133, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 343, 443, 515], "compat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 197, 198, 200, 209, 210, 236, 391, 393, 397, 400, 409, 411, 413, 414, 423, 426, 428, 430, 447, 453, 454, 493, 537], "compil": [389, 439], "complain": 389, "complaint": 404, "complement": 406, "complementari": [102, 138, 147, 462], "complet": [13, 16, 84, 90, 105, 127, 343, 386, 392, 396, 397, 398, 399, 400, 403, 404, 406, 410, 411, 412, 415, 416, 420, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 443, 444, 445, 446, 447, 448, 470, 475, 490, 497, 505, 525, 530], "complex": [386, 387, 392, 396, 400, 401, 402, 408, 410, 415, 423, 454, 459, 462, 472, 475, 481, 485, 488, 493, 494, 496, 497, 501, 534], "complianc": [412, 449], "compliant": [197, 198, 200, 209, 210, 453, 584], "complic": [400, 538], "compon": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 81, 88, 103, 104, 106, 107, 110, 111, 112, 133, 141, 169, 171, 205, 228, 252, 253, 268, 284, 397, 398, 399, 402, 408, 409, 428, 432, 434, 438, 446, 447, 458, 463, 464, 465, 467, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 484, 487, 488, 489, 495, 496, 500, 501, 509, 510, 513, 521, 523, 525, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584], "component_1": 397, "component_2": 397, "component_class": 487, "components_model": 80, "components_statu": 67, "compos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 392, 412], "composit": [21, 57, 70, 80, 324, 412, 445], "compound": [205, 212, 223, 344, 348, 400, 409, 456, 458, 476, 539, 571], "compoundmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 440], "compoundpixelregion": 348, "compoundskymodel": 397, "compoundskyregion": [212, 344, 348], "compoundsourcemodel": 397, "compoundspectralmodel": [263, 409, 452, 458, 496, 501, 551, 553, 557, 560, 562, 565, 570], "compress": 394, "compris": 502, "compromis": [386, 391, 399, 498], "compton": [253, 434, 561], "compulsori": 496, "comput": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 83, 84, 86, 88, 90, 94, 96, 100, 102, 103, 105, 106, 107, 111, 112, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 183, 184, 186, 189, 190, 191, 192, 194, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 211, 215, 222, 223, 226, 228, 230, 232, 233, 234, 239, 243, 245, 246, 249, 252, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 279, 281, 284, 285, 291, 292, 293, 295, 298, 299, 300, 301, 303, 307, 308, 312, 316, 317, 320, 386, 395, 396, 397, 398, 399, 400, 401, 404, 406, 407, 408, 409, 410, 414, 415, 417, 419, 420, 424, 426, 428, 429, 430, 431, 434, 435, 437, 438, 439, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 459, 464, 466, 470, 471, 475, 476, 479, 480, 482, 485, 486, 488, 489, 492, 495, 496, 497, 498, 501, 502, 503, 509, 511, 513, 521, 523, 525, 530, 534, 561, 583, 584, 585, 586, 587, 588, 589], "computation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 215, 399, 400, 521], "compute_chisq": 445, "compute_differential_jfactor": 23, "compute_errn": [293, 295, 449, 587], "compute_errp": [293, 295, 587], "compute_flux_doubl": 141, "compute_fpp": 142, "compute_fvar": [143, 300], "compute_jfactor": [23, 486], "compute_lightcurve_doublingtim": 485, "compute_lightcurve_fpp": 485, "compute_lightcurve_fvar": 485, "compute_lima_map": 434, "compute_npr": 399, "compute_upper_limit": [293, 295], "computedfieldinfo": [16, 84, 90, 105, 127], "con": [386, 402], "concaten": [83, 86, 92, 199, 202, 398, 402, 408, 452, 493], "concentr": 345, "concept": [16, 84, 90, 105, 127, 406, 407, 413, 415, 424, 486, 493, 526], "conception": [399, 408], "conceptu": 415, "concern": [389, 391, 400, 402, 403, 405, 407, 409, 412, 438, 448, 502, 587], "conclud": 395, "concret": [16, 84, 90, 105, 127, 403, 406], "conda": [385, 389, 393, 394, 403, 406, 411, 416, 417, 419, 420, 421, 422, 423, 428, 430, 446, 447, 585], "condit": [52, 53, 150, 202, 219, 221, 228, 252, 410, 414, 435, 454, 457, 462, 465, 475, 487, 494, 495, 497, 502, 521, 530], "conduct": [449, 481], "cone": [91, 400, 463, 497, 509, 510, 525], "conesearch": 402, "conf": [87, 91, 386, 387, 417, 429, 444], "conf_1d": 479, "conf_3d": 479, "conf_max": [218, 220], "conf_min": [218, 220], "confid": [125, 215, 218, 220, 293, 295, 397, 404, 429, 434, 448, 584, 587], "confidence_opt": [215, 489], "config": [15, 16, 84, 90, 105, 127, 385, 387, 392, 394, 395, 402, 403, 406, 413, 419, 421, 431, 432, 433, 438, 446, 463, 470, 509, 582], "config_dict": 509, "config_joint": 470, "config_paramet": [121, 123, 124, 125, 129, 130, 132, 133, 134, 136, 137], "config_stack": 470, "config_str": 16, "configdict": [16, 84, 90, 105, 127], "configpars": 444, "configur": [11, 15, 16, 46, 84, 87, 90, 91, 101, 102, 105, 111, 112, 121, 123, 124, 125, 127, 129, 130, 132, 133, 134, 136, 137, 333, 386, 387, 389, 395, 397, 401, 402, 406, 407, 413, 416, 417, 423, 431, 433, 434, 438, 440, 449, 452, 453, 462, 464, 466, 472, 474, 475, 484, 500, 505, 524, 525, 530, 584, 585], "confirm": [389, 416], "conflict": [87, 91, 386, 389, 412], "confluenc": 503, "conform": [16, 84, 90, 105, 127, 493], "confus": [386, 387, 392, 405], "connect": [396, 462, 476, 478, 494, 510, 582], "consant": [197, 198, 200, 206, 209, 210], "consciou": 391, "consecut": [180, 343, 386, 411], "consensu": [391, 412], "consent": 386, "consequ": [412, 475, 538], "conserv": [521, 546], "consid": [19, 20, 59, 96, 177, 184, 187, 188, 190, 191, 198, 210, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 291, 382, 391, 392, 397, 398, 400, 401, 402, 403, 404, 405, 406, 408, 412, 414, 459, 462, 464, 470, 474, 475, 485, 491, 494, 522, 525, 530, 588], "consider": [402, 428, 438, 446, 470], "consist": [74, 91, 95, 126, 128, 155, 156, 167, 170, 195, 196, 197, 198, 200, 205, 208, 209, 210, 238, 241, 386, 396, 397, 399, 400, 401, 406, 413, 431, 432, 433, 434, 435, 442, 446, 447, 449, 451, 452, 453, 463, 464, 465, 466, 473, 478, 481, 490, 492, 493, 496, 498, 509, 559, 561, 586], "consol": [386, 585], "consortium": [413, 500], "const": [224, 225, 226, 227, 409, 475, 496, 554], "const3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "const_norm": 409, "constant": [50, 51, 52, 53, 103, 107, 111, 121, 157, 197, 198, 200, 206, 208, 209, 210, 224, 225, 226, 227, 229, 242, 244, 342, 399, 400, 405, 446, 456, 479, 501, 518, 521, 539, 550, 571, 581, 584, 588], "constant_model": 572, "constantmodel": 448, "constantnormspectralmodel": 409, "constantspatialmodel": [262, 409, 496, 501, 541], "constantspectralmodel": [263, 409, 475, 496, 554], "constanttemporalmodel": [275, 409, 431, 496, 572], "constitu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "constitut": 488, "constrain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 412, 458, 467, 471, 492, 498, 532], "constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 525], "construct": [16, 21, 84, 90, 105, 127, 202, 245, 246, 351, 538, 584], "constructor": [195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 452, 510, 536], "consult": 422, "consum": [415, 490, 525], "contact": [388, 393, 395, 412, 422, 424, 427, 428, 429, 443, 446], "contain": [13, 16, 19, 20, 26, 57, 59, 63, 67, 69, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 100, 102, 103, 105, 106, 107, 110, 111, 112, 114, 115, 119, 126, 127, 128, 137, 138, 139, 140, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 179, 182, 184, 189, 192, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 299, 311, 312, 379, 381, 383, 384, 386, 389, 390, 392, 394, 395, 396, 399, 400, 401, 402, 403, 405, 406, 407, 408, 410, 412, 415, 416, 417, 424, 428, 432, 433, 434, 435, 437, 438, 440, 441, 444, 445, 446, 447, 448, 452, 453, 454, 457, 460, 462, 463, 464, 467, 470, 471, 474, 475, 478, 479, 480, 482, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 513, 514, 516, 521, 522, 523, 525, 529, 533, 534, 537, 538, 539, 582, 584, 586, 587, 588], "containment_correct": [16, 103, 106, 107, 184, 457, 462, 463, 464, 467, 468, 470, 472, 479, 480, 482, 484, 488, 492, 509], "containment_fract": 96, "containment_radiu": [158, 164, 166, 167, 168, 170, 457, 488, 491, 494], "containment_radius_map": [167, 170], "contains_pix": [195, 196, 205, 208], "contains_wcs_pix": 205, "contamin": [67, 468, 487, 494, 534], "content": [84, 90, 105, 127, 128, 197, 198, 200, 206, 209, 210, 349, 352, 386, 389, 391, 395, 401, 406, 413, 417, 432, 441, 446, 459, 493, 494, 500, 502, 522, 525, 536, 537], "content_typ": [16, 84, 90, 105, 127], "context": [16, 84, 87, 90, 91, 105, 127, 219, 221, 228, 252, 333, 364, 386, 401, 412, 417, 453, 493, 515], "contigu": [202, 207, 438], "continu": [202, 393, 395, 396, 399, 400, 402, 403, 405, 406, 411, 423, 426, 427, 430, 438, 443, 444, 445, 447, 462, 475, 484, 494, 537, 584], "continuous_upd": [470, 478, 493, 509, 510], "contour": [212, 215, 378, 395, 415, 448], "contour_": 490, "contourf": 210, "contract": 412, "contrari": [387, 394], "contrast": [406, 584], "contrera": 448, "contribut": [100, 117, 120, 228, 236, 252, 268, 382, 386, 388, 395, 400, 408, 410, 417, 424, 427, 438, 440, 442, 492, 526, 561, 582, 585, 586], "contributes_to_stat": 100, "contributor": [386, 389, 406, 417, 425, 436, 437], "control": [83, 87, 91, 103, 106, 107, 111, 112, 386, 399, 418, 420, 457, 486, 493, 498, 525, 587], "controversi": [386, 391, 392, 406], "conveni": [13, 126, 385, 386, 389, 396, 400, 408, 410, 418, 428, 430, 435, 438, 440, 445, 472, 484, 486, 487, 488, 493, 494, 495, 496, 500, 502, 511, 520, 524, 583], "convent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 154, 196, 197, 198, 200, 208, 209, 210, 408, 410, 430, 431, 434, 435, 449, 454, 488, 492, 493, 496, 521, 523, 530, 537, 587], "converg": [24, 414, 429, 450, 462, 464, 470, 484, 490, 521, 525, 532, 542], "convers": [84, 87, 90, 91, 105, 126, 127, 128, 138, 147, 391, 410, 413, 419, 421, 438, 451, 452, 453, 457, 538], "conversion_typ": [501, 511], "convert": [16, 19, 23, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 83, 85, 86, 87, 91, 99, 102, 103, 106, 107, 109, 111, 112, 126, 128, 131, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 180, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 217, 218, 219, 220, 221, 228, 243, 252, 291, 310, 313, 314, 318, 331, 347, 367, 369, 370, 387, 392, 400, 401, 410, 413, 417, 439, 451, 452, 453, 454, 457, 466, 473, 480, 481, 484, 488, 489, 490, 494, 495, 500, 511, 523, 529, 534, 537, 587, 589], "convert_bytestring_to_unicod": [87, 91], "convert_unicode_to_bytestr": [87, 91], "convinc": 511, "convolut": [121, 125, 131, 137, 165, 198, 210, 385, 398, 404, 426, 433, 435, 444, 446, 447, 453, 454, 468, 493, 521, 538], "convolution_method": 198, "convolv": [106, 113, 118, 137, 165, 198, 210, 397, 426, 435, 438, 447, 465, 466, 468, 493, 531, 561], "convolve_ful": 198, "convolve_wc": 198, "cookbook": [17, 19, 20, 21, 22, 24, 25, 26, 27], "cookiecutt": 402, "coolwarm": [470, 501, 502, 510], "coord": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 254, 299, 397, 431, 475, 493, 494, 534, 537, 538, 545], "coord_to_idx": [195, 196, 199, 201, 202, 205, 207, 208, 493], "coord_to_pix": [195, 196, 199, 201, 202, 205, 207, 208, 493], "coordiant": 491, "coordin": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 47, 83, 85, 87, 88, 89, 91, 94, 95, 96, 103, 104, 106, 107, 110, 111, 112, 114, 115, 126, 128, 130, 131, 132, 141, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 180, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 228, 229, 238, 241, 243, 252, 254, 256, 265, 266, 268, 280, 299, 303, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 335, 341, 345, 346, 362, 387, 391, 392, 393, 395, 399, 400, 405, 406, 409, 411, 412, 426, 428, 431, 433, 444, 446, 447, 449, 457, 459, 462, 464, 465, 468, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 488, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 510, 511, 521, 529, 534, 536, 537, 542, 543, 546, 583, 584, 589], "coordsi": 433, "copi": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 99, 100, 102, 103, 105, 106, 107, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 155, 156, 159, 162, 167, 170, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 313, 358, 386, 391, 394, 396, 400, 402, 408, 415, 416, 417, 423, 438, 440, 447, 448, 449, 452, 454, 458, 459, 462, 464, 465, 470, 472, 478, 480, 481, 484, 487, 490, 492, 496, 498, 501, 525, 534, 538, 549, 585], "copy_data": [87, 91, 228, 236, 252, 268, 276, 278, 280], "copy_indic": [87, 91], "copy_ob": [82, 525], "copy_on_getitem": [87, 91], "copyright": 423, "core": [16, 53, 84, 90, 105, 127, 163, 385, 386, 393, 399, 400, 407, 411, 412, 415, 416, 424, 427, 444, 448, 452, 457, 464, 465, 467, 470, 472, 474, 476, 478, 481, 484, 495, 500, 513, 523, 585], "corner": [400, 403, 415, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "corr_coord": [167, 170], "correct": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 88, 103, 104, 106, 107, 156, 167, 170, 184, 189, 190, 203, 236, 254, 255, 280, 386, 398, 399, 411, 412, 413, 415, 416, 430, 433, 435, 436, 437, 438, 441, 444, 445, 447, 449, 450, 451, 452, 453, 454, 457, 458, 462, 463, 464, 465, 474, 478, 479, 487, 488, 490, 492, 494, 495, 496, 498, 502, 509, 511, 522, 523, 532, 545, 557, 560, 562, 565, 570], "correctli": [19, 20, 26, 77, 101, 155, 156, 162, 167, 170, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 387, 389, 412, 413, 428, 430, 435, 440, 441, 450, 491, 492, 493, 494, 495, 498, 537, 543], "correl": [19, 20, 26, 125, 131, 140, 213, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 264, 269, 271, 272, 273, 274, 277, 281, 303, 404, 409, 410, 415, 438, 448, 454, 473, 476, 490, 494, 496, 498, 509, 523, 582], "correlate_off": [125, 468], "correlation_radiu": [16, 125, 145, 146, 148, 463, 467, 468, 470, 482, 489, 502, 509, 523], "correspond": [19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 87, 89, 91, 100, 101, 103, 106, 107, 111, 112, 126, 128, 129, 130, 131, 133, 134, 137, 138, 147, 154, 155, 156, 162, 165, 167, 169, 170, 171, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 222, 223, 226, 230, 232, 233, 234, 238, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 279, 281, 311, 379, 396, 397, 398, 399, 406, 407, 410, 412, 414, 432, 435, 459, 460, 462, 463, 464, 470, 474, 475, 479, 487, 490, 492, 493, 496, 497, 498, 500, 501, 502, 509, 511, 521, 522, 523, 525, 537, 538, 548, 551, 583, 584, 589], "cosimo": [435, 438, 440, 446, 447, 449, 452], "cosmic": [52, 230, 284, 404, 500], "cosmologi": 415, "coto": 446, "could": [16, 84, 90, 105, 127, 387, 389, 391, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 415, 417, 459, 462, 470, 472, 487, 489, 498, 500, 501, 509, 524], "count": [16, 83, 92, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 116, 121, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 144, 172, 174, 177, 178, 179, 184, 186, 190, 194, 197, 198, 200, 201, 202, 206, 209, 210, 219, 221, 228, 252, 293, 295, 296, 297, 302, 304, 307, 309, 310, 335, 371, 373, 382, 384, 392, 394, 397, 398, 399, 401, 402, 406, 410, 429, 430, 433, 435, 438, 440, 441, 447, 448, 452, 453, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 472, 474, 476, 478, 479, 480, 481, 482, 484, 488, 490, 492, 493, 494, 498, 502, 507, 509, 510, 511, 523, 525, 529, 532, 533, 534, 535, 538, 584, 585, 586, 588], "count_bkg": 482, "count_statist": 587, "counter": [229, 238, 241, 542], "counts_3d": 493, "counts_fil": 101, "counts_imag": [476, 488], "counts_min": 150, "counts_off": [103, 106, 107, 108, 111, 112, 172, 178, 179, 182, 384, 398, 440, 451, 452, 458, 463, 464, 465, 468, 472, 482, 488, 521, 587], "counts_on": 429, "counts_rat": 488, "counts_statist": 468, "countspredictor": 397, "countsspectrum": [398, 401, 429, 430, 432, 434, 443], "countsstatist": [293, 295, 410, 434, 435, 438, 449], "coupl": [394, 400, 405, 417, 435, 447, 493], "cours": [386, 389, 393, 396, 403, 423, 463, 470, 488, 493, 501, 509, 585, 588], "cousin": [429, 435, 443, 445, 584], "cousins2007": [584, 587], "coutinho": [435, 438], "cov": [258, 259, 415, 417], "cov_matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "covar": [213, 379, 448], "covar_list": 213, "covari": [15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 129, 130, 133, 134, 214, 215, 216, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 293, 295, 379, 404, 414, 415, 434, 440, 448, 449, 452, 454, 463, 509, 587], "covariance_data": [228, 236, 252, 268, 278], "covariance_opt": 215, "covariance_result": 216, "covariance_typ": 414, "covariancegaussianprior": 414, "covariancemixin": [223, 228, 268, 454], "covarianceresult": [102, 215, 216, 459, 460, 462, 463, 464, 470, 471, 472, 482, 484, 490, 501, 509, 510], "cover": [279, 386, 388, 400, 401, 402, 410, 415, 459, 479, 480, 488, 493, 505, 511, 526], "coverag": [395, 401, 417, 426, 430, 438, 444, 447, 480, 490], "coveral": [417, 426], "cpu": [129, 130, 133, 137, 333, 334, 399, 415], "cpython": 391, "crab": [67, 83, 111, 112, 134, 150, 215, 249, 285, 291, 394, 398, 406, 415, 426, 432, 444, 446, 462, 463, 464, 471, 472, 479, 487, 488, 489, 490, 494, 498, 501, 502, 503, 509, 510, 511, 523, 534, 538, 584], "crab_10gev_100tev_dataset": 471, "crab_3fhl": 511, "crab_3fhl_spec": 511, "crab_events_pass4": 502, "crab_fp": 463, "crab_fp_tabl": 463, "crab_hess_ecpl": 285, "crab_hess_fp": [126, 128, 149], "crab_magic_lp": 464, "crab_model": 490, "crab_posit": 534, "crab_spec": 471, "crab_spectrum": 490, "crabnebula": 479, "crabspectrum": 430, "creat": [11, 13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 101, 102, 103, 105, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 121, 126, 127, 128, 129, 130, 133, 137, 138, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 177, 179, 180, 181, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 313, 323, 344, 348, 364, 373, 375, 380, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 430, 431, 432, 435, 438, 440, 446, 447, 449, 450, 451, 452, 453, 454, 457, 458, 460, 463, 464, 465, 470, 472, 473, 474, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 490, 492, 495, 496, 497, 498, 500, 501, 502, 503, 507, 509, 511, 513, 520, 521, 522, 525, 529, 532, 534, 535, 536, 537, 541, 543, 544, 545, 546, 551, 561, 570, 582, 583, 585, 590], "create_crab_spectral_model": [462, 464, 471], "create_dataset": 101, "create_fermi_isotropic_diffuse_model": [495, 501], "create_map_dataset_from_observ": [93, 110], "create_mask": [195, 196, 205, 208], "create_t": 484, "creation": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 130, 208, 395, 396, 400, 409, 412, 432, 438, 454, 485, 496, 503], "creator": [105, 127, 389, 413, 463, 467, 468, 470, 496, 509, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "creatormedadata": 413, "creatormetadata": [84, 90, 105, 127, 413], "credit": 423, "crimson": 464, "criteria": [15, 91, 415, 440, 492, 497, 505], "criterion": [91, 135, 137, 311, 457, 525], "critic": [415, 498], "criticis": 377, "crop": [86, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210], "crop_width": [195, 196, 197, 198, 200, 205, 206, 208, 209, 210], "cross": [19, 392, 406, 454, 513], "crowd": 487, "crpix": 208, "crpix1": 493, "crpix2": 493, "crucial": [413, 415, 474, 475, 488], "cruft": 417, "crux": [33, 38, 484], "crval1": 493, "crval2": 493, "cryptic": 397, "csh": 585, "csobsselect": 396, "css": [87, 91, 417, 454], "cstat": [398, 415, 432], "csv": 128, "ct": [371, 447], "cta": [82, 83, 89, 103, 106, 107, 111, 112, 117, 120, 121, 125, 145, 146, 152, 156, 157, 158, 167, 230, 374, 379, 381, 390, 393, 394, 395, 399, 402, 405, 406, 416, 427, 428, 438, 444, 445, 446, 447, 454, 456, 457, 465, 467, 470, 472, 474, 475, 478, 481, 482, 488, 489, 491, 495, 504, 505, 509, 523, 527, 584], "cta_data_analysi": [406, 456, 472, 477], "cta_dataset": 495, "cta_north": 97, "cta_sensist": 406, "cta_sensit": [456, 457, 461], "cta_simul": 427, "cta_south": [97, 457, 465, 474, 475, 478, 481], "cta_util": 447, "ctadata": 500, "ctao": [82, 156, 157, 177, 284, 386, 406, 412, 416, 419, 424, 454, 456, 457, 463, 465, 467, 472, 474, 475, 482, 497, 502, 503, 504, 505, 513, 525, 583], "ctapip": [389, 393, 395, 402, 403, 405, 406, 407], "ctaspectrumobserv": 447, "ctobssim": 399, "ctool": [396, 399, 402, 406, 559], "cts_sigma": 490, "ctselect": 396, "ctype1": 493, "ctype2": 493, "cube": [46, 103, 106, 137, 172, 190, 197, 198, 200, 206, 209, 210, 248, 268, 386, 397, 398, 399, 405, 406, 407, 409, 415, 419, 426, 430, 431, 434, 439, 442, 443, 444, 445, 446, 447, 466, 467, 472, 476, 501, 511, 521, 530, 532, 537, 538, 584], "cubic": 493, "cumbersom": [396, 404], "cumsum": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210], "cumul": [100, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210, 335, 399, 415, 462, 474, 495, 525], "cunit1": 493, "cunit2": 493, "curat": [417, 427], "curl": [67, 403, 418, 419, 421, 500], "current": [11, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 88, 89, 91, 99, 100, 102, 103, 106, 107, 111, 112, 128, 129, 133, 160, 183, 195, 196, 197, 198, 200, 206, 207, 208, 209, 210, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 364, 380, 386, 387, 389, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 418, 419, 420, 421, 430, 448, 463, 486, 489, 491, 492, 493, 495, 500, 502, 503, 509, 510, 514, 521, 522, 523, 538, 582, 584, 585], "curv": [15, 19, 20, 22, 26, 73, 77, 83, 133, 141, 222, 223, 226, 230, 232, 233, 234, 239, 243, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 279, 281, 301, 378, 390, 397, 399, 402, 406, 410, 419, 428, 432, 434, 435, 439, 442, 443, 445, 447, 449, 452, 453, 456, 457, 483, 484, 485, 505, 523, 524, 534, 539, 581, 583], "curve_fit": 379, "cuspi": 513, "custom": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 89, 90, 105, 127, 132, 395, 396, 397, 402, 404, 409, 413, 418, 432, 433, 435, 447, 457, 465, 467, 470, 472, 478, 481, 488, 491, 493, 500, 525, 570], "custom_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "customari": 496, "customis": [406, 491], "customprior": 498, "cut": [91, 125, 169, 183, 184, 396, 446, 452, 456, 457, 461, 465, 482, 488, 492, 493, 497, 500, 505, 510, 511, 533, 534], "cutoff": [232, 233, 234, 272, 273, 274, 291, 432, 452, 456, 465, 470, 539, 571], "cutout": [103, 106, 107, 111, 112, 117, 120, 155, 156, 162, 167, 170, 173, 196, 198, 206, 208, 210, 278, 392, 398, 428, 433, 438, 444, 447, 454, 467, 468, 470, 472, 476, 488, 492, 501, 510, 511, 521], "cutout2d": [103, 106, 107, 155, 156, 162, 167, 170, 173, 208, 210, 278, 392], "cutout_and_mask_region": [210, 452], "cutout_info": 432, "cutout_mod": 173, "cutout_slic": 208, "cutout_template_model": 454, "cutout_width": 173, "cval": [197, 198, 200, 206, 209, 210], "cwd": 394, "cwt": [406, 432, 444, 447], "cxc": [215, 406, 490], "cyan": 383, "cycl": [383, 389, 390, 391, 403, 405, 420, 445, 449], "cycler": [383, 457], "cython": [389, 429, 439], "d": [19, 20, 23, 28, 87, 89, 91, 201, 204, 207, 243, 249, 260, 279, 285, 353, 389, 404, 406, 440, 449, 460, 468, 474, 475, 481, 484, 493, 496, 497, 530, 537, 542, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585, 588], "dai": [87, 91, 126, 128, 207, 235, 240, 242, 260, 267, 389, 400, 406, 416, 417, 493, 578, 585], "daniel": [448, 451, 453, 454], "dark": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 406, 414, 447, 452, 453, 456, 499, 505, 514, 583], "dark_matter_spectra": 26, "darkbit": 513, "darkblu": 498, "darkgreen": 498, "darkmatt": [6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 263, 387, 406, 447, 486, 514], "darkmatterannihilationspectralmodel": [20, 263, 449, 486], "darkmatterdecayspectralmodel": [263, 453, 486], "darkorang": [462, 463], "darksusi": 513, "darwin": 423, "dash": [482, 486, 498], "dashboard": 417, "dat": [26, 87, 91, 228, 252, 463, 509, 513], "data": [6, 11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 121, 126, 127, 128, 129, 130, 131, 132, 140, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 177, 178, 179, 183, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 296, 301, 302, 303, 305, 306, 310, 311, 312, 321, 322, 325, 343, 349, 352, 356, 357, 365, 374, 375, 376, 377, 379, 380, 385, 387, 390, 393, 396, 397, 398, 399, 400, 402, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 419, 423, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 452, 453, 456, 457, 460, 465, 466, 467, 468, 472, 474, 475, 478, 481, 486, 487, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 507, 512, 513, 521, 523, 525, 527, 528, 529, 530, 531, 532, 534, 535, 537, 538, 544, 545, 557, 560, 562, 564, 565, 570, 582, 583, 584, 587, 588, 589], "data_extend": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_nbyt": [195, 196, 205, 208], "data_path": 502, "data_reduct": 402, "data_shap": [102, 103, 106, 107, 111, 112, 195, 196, 205, 208, 488, 538], "data_shape_ax": [196, 205, 208], "data_shape_imag": 208, "data_spectr": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "data_stor": [82, 96, 177, 311, 312, 402, 423, 464, 472, 474, 480, 482, 484, 492, 497, 500, 502, 503, 507, 510, 522, 532, 534, 535], "data_storag": 522, "data_summari": 444, "dataaxi": 429, "databas": [392, 525], "dataclass": 386, "datafram": [87, 91], "dataset": [6, 15, 16, 19, 20, 26, 94, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 139, 144, 145, 146, 147, 148, 150, 155, 156, 162, 167, 170, 172, 173, 174, 177, 178, 179, 182, 183, 184, 199, 204, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 333, 379, 382, 383, 387, 389, 390, 392, 394, 399, 401, 402, 403, 405, 406, 410, 414, 415, 416, 417, 419, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458, 460, 462, 465, 466, 472, 473, 474, 476, 478, 482, 484, 486, 487, 493, 496, 497, 499, 500, 501, 503, 505, 507, 511, 522, 523, 525, 530, 532, 533, 534, 535, 545, 549, 551, 579, 580, 582, 583, 584, 585, 586, 587], "dataset1": [498, 521], "dataset1_prior": 498, "dataset2": [498, 521], "dataset2_prior": 498, "dataset_1": 523, "dataset_2": 523, "dataset_3fgl": 460, "dataset_3fhl": 460, "dataset_cta": 488, "dataset_empti": [459, 462, 464, 465, 472, 480, 484, 488, 492, 502, 534], "dataset_energy_depend": 473, "dataset_fak": 465, "dataset_fp": 481, "dataset_gammacat": 460, "dataset_hawc": 471, "dataset_hess": [471, 490], "dataset_imag": [472, 488], "dataset_kwarg": [93, 110], "dataset_lc": 481, "dataset_mak": [462, 464, 472, 480, 484, 492, 534], "dataset_nam": [110, 114, 115, 133, 228, 236, 252, 408, 414, 454, 470, 474, 475, 478, 488, 495, 510, 545], "dataset_on_off": [172, 178, 179, 182, 457, 462, 464, 465, 468, 472, 480, 484, 492, 534, 535], "dataset_on_off1": 457, "dataset_onoff": 398, "dataset_simul": 464, "dataset_stack": [462, 470], "datasetmodel": [217, 252, 268, 408, 435, 474, 475, 478, 484], "datasetread": [101, 108], "datasets1": 383, "datasets2": 383, "datasets3": 383, "datasets_fil": [16, 463, 467, 468, 470, 509], "datasets_hess": 471, "datasets_in_phase_bin_3": 410, "datasets_mak": 492, "datasets_nam": [19, 20, 26, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 434, 471, 495, 509, 545], "datasets_read": [495, 501], "datasets_sl": 488, "datasets_to_fit": 484, "datasetsconfig": 16, "datasetsmak": [175, 440, 452, 492, 497, 525], "datasetsmetadata": 413, "datasetwrit": 109, "datastor": [16, 89, 96, 177, 311, 312, 392, 396, 401, 419, 423, 429, 440, 441, 443, 444, 446, 452, 453, 459, 462, 463, 464, 467, 468, 470, 472, 474, 478, 480, 482, 484, 492, 497, 502, 503, 507, 509, 522, 525, 532, 534, 535, 585], "datastorecheck": 447, "datastoreindex": 396, "datastoreinmemori": 396, "datastoremak": [429, 440], "datastoremetadata": 413, "datastoreobserv": [178, 392, 396, 433, 446], "datastorexml": 396, "datasum": [83, 86, 88, 100, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 154, 155, 156, 162, 167, 170, 197, 198, 200, 204, 206, 209, 210], "datat": [87, 91], "date": [87, 91, 105, 127, 367, 403, 411, 412, 413, 415, 416, 424, 446, 463, 466, 467, 468, 470, 496, 503, 509, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 589], "datefmt": [16, 463, 467, 468, 470, 509, 585], "dateref": 466, "datetim": [105, 127, 413], "datetime64": [87, 91], "datfix": 466, "daughter": 413, "david": [396, 401, 427, 447, 448], "dc": 470, "dc1": [395, 406, 448, 474, 482, 491, 495, 500], "dc2": 395, "ddof": 485, "de": [19, 20, 26, 67, 100, 222, 223, 226, 230, 232, 233, 234, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 310, 412, 416, 435, 438, 441, 486, 584], "deabsorb": 458, "deactiv": 418, "dead": [83, 86, 88, 343, 396, 415], "dead_tim": [83, 88, 343], "deadc": 396, "deadlin": [395, 399], "deadtim": [88, 90, 190, 465, 474, 478, 500], "deadtime_fract": [88, 90], "deal": [86, 386, 392, 401, 402, 465, 474, 480, 505, 525], "debanjan": 429, "debian": [403, 420, 442], "debug": [11, 386, 392, 397, 402, 449, 462, 489, 493, 525, 585], "dec": [67, 83, 85, 87, 88, 91, 94, 145, 180, 386, 387, 391, 395, 397, 399, 402, 403, 406, 425, 451, 457, 462, 464, 466, 468, 472, 475, 479, 480, 482, 484, 487, 492, 494, 500, 501, 502, 503, 510, 511, 513, 525, 529, 534, 589], "dec_pnt": 503, "dec_tru": 399, "decad": [17, 18, 21, 22, 24, 25, 27, 101, 114, 115, 202, 287, 453, 474], "decai": [17, 18, 20, 21, 22, 23, 24, 25, 27, 235, 242, 260, 409, 474, 481, 485, 496, 513, 575], "decemb": 425, "decid": [386, 392, 395, 396, 397, 398, 400, 401, 405, 408, 409, 410, 416, 463, 497, 509], "decim": [87, 91, 308], "decis": [386, 387], "declar": [15, 87, 91, 268, 365, 366, 389, 393, 394, 397, 402, 403, 409, 417, 434, 524], "decor": [365, 366, 386, 413, 585], "decorrel": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "decoupl": 69, "dedic": [389, 400, 401, 410, 412, 413, 417, 433, 434, 435, 453, 462, 463, 464, 470, 482, 490, 509, 510, 522], "deduc": [410, 453], "deep": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 86, 87, 90, 91, 99, 100, 102, 103, 105, 106, 107, 111, 112, 126, 127, 128, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 281, 282, 283, 470], "deepcopi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 276, 278, 280], "def": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 294, 365, 366, 386, 387, 397, 398, 399, 400, 409, 410, 413, 414, 415, 462, 470, 484, 490, 496, 498, 507, 534, 585, 587], "def_unit": [457, 465, 467, 470, 472, 478, 481, 500], "defalut": [115, 154], "default": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 65, 67, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 308, 310, 311, 313, 324, 325, 326, 331, 333, 334, 340, 341, 342, 343, 345, 346, 349, 352, 354, 355, 357, 363, 368, 369, 373, 375, 376, 377, 379, 380, 382, 383, 386, 392, 398, 402, 403, 409, 412, 417, 423, 429, 431, 432, 433, 435, 438, 440, 446, 447, 449, 450, 451, 452, 453, 462, 463, 464, 466, 468, 470, 474, 475, 480, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 501, 509, 510, 511, 521, 523, 525, 532, 535, 536, 537, 538, 542, 543, 544, 551, 557, 561, 585, 589], "default_alpha": [21, 27], "default_beta": 27, "default_css": [87, 91], "default_css_nb": [87, 91], "default_epoch": 369, "default_gamma": 27, "default_hdu_t": 82, "default_interp_kwarg": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 445], "default_nam": [87, 91], "default_notebook_table_class": [87, 91], "default_obs_t": 82, "default_paramet": [19, 20, 26, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 414], "default_scale_radiu": [17, 21, 22, 24, 25, 27], "default_unit": [151, 152, 157, 159, 164, 169, 491], "defer": [106, 112], "defin": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 83, 84, 87, 88, 90, 91, 95, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 120, 125, 126, 127, 128, 129, 130, 132, 133, 137, 154, 155, 156, 158, 162, 165, 166, 167, 168, 170, 173, 174, 178, 183, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 294, 296, 302, 304, 325, 335, 340, 341, 342, 343, 346, 376, 377, 379, 386, 387, 389, 391, 392, 395, 397, 398, 399, 400, 401, 402, 403, 407, 408, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 428, 429, 432, 435, 438, 441, 445, 446, 451, 452, 453, 458, 463, 465, 466, 467, 468, 470, 471, 473, 476, 478, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 509, 511, 521, 522, 523, 525, 527, 530, 534, 535, 537, 542, 544, 546, 547, 548, 551, 552, 555, 556, 558, 559, 561, 563, 564, 566, 567, 568, 569, 570, 580, 582, 583, 584, 585, 586, 587, 588], "definit": [83, 84, 86, 88, 90, 100, 103, 105, 106, 107, 111, 112, 127, 174, 205, 294, 310, 324, 386, 395, 396, 400, 407, 408, 409, 410, 413, 430, 434, 435, 451, 453, 454, 462, 464, 467, 476, 480, 491, 492, 509, 521, 523, 530, 531, 536, 538, 542, 543, 587], "deform": 538, "deg": [16, 33, 34, 38, 47, 67, 83, 85, 87, 91, 94, 96, 103, 106, 107, 111, 112, 114, 115, 116, 117, 120, 121, 125, 130, 131, 137, 145, 146, 148, 156, 158, 159, 164, 165, 166, 167, 168, 169, 170, 172, 180, 181, 183, 185, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 228, 229, 238, 241, 252, 256, 265, 266, 268, 311, 312, 345, 381, 386, 387, 397, 400, 402, 409, 410, 413, 423, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 509, 510, 511, 522, 523, 525, 527, 529, 532, 534, 535, 536, 537, 538, 542, 543, 544, 545, 546, 547, 548, 549], "deg2": 503, "degre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 111, 112, 114, 115, 116, 123, 126, 128, 139, 148, 196, 197, 198, 200, 203, 208, 209, 210, 228, 252, 256, 268, 279, 453, 457, 459, 463, 468, 473, 480, 484, 487, 492, 493, 494, 500, 509, 523, 537, 538, 587, 588], "deil": [391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 426, 427, 428, 429, 430, 431, 432, 433, 439, 442, 443, 444, 445, 446, 447, 448], "deiml": 446, "dej2000": [487, 511], "del": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 397], "delai": [407, 411], "deleg": 402, "delet": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 386, 397, 417, 418, 419, 421, 453, 495], "delete_interv": 86, "delimit": 128, "deliv": 402, "delta": [19, 20, 23, 87, 91, 125, 126, 131, 134, 137, 159, 207, 258, 259, 292, 308, 452, 458, 466, 490, 498, 523, 530, 531, 543, 544, 546, 587], "delta_t": [123, 292, 473], "deltacstat": 415, "demonstr": [402, 428, 431, 432, 433, 434, 435, 440, 452, 453, 479, 485, 493, 495, 505, 537], "denot": [103, 107, 111, 410, 521], "densiti": [17, 18, 21, 22, 24, 25, 27, 28, 30, 35, 36, 39, 40, 45, 52, 102, 128, 159, 210, 339, 342, 379, 399, 468, 470, 486, 487, 498, 513, 515, 519, 529, 530, 531, 584], "dep": 452, "depend": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 88, 100, 103, 104, 107, 110, 111, 123, 126, 128, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 184, 195, 196, 205, 208, 210, 228, 243, 252, 268, 313, 366, 386, 388, 389, 390, 392, 397, 398, 399, 400, 401, 404, 405, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 425, 427, 431, 432, 435, 442, 444, 447, 448, 450, 452, 453, 454, 456, 457, 461, 465, 467, 468, 477, 480, 487, 490, 491, 492, 493, 494, 495, 497, 498, 500, 501, 505, 521, 525, 529, 533, 534, 537, 551], "deploy": 412, "deposit": 412, "deprec": [16, 84, 85, 90, 105, 127, 429, 438, 451, 452, 453, 454, 470, 476, 501, 549], "deprecated_argument_funct": 386, "deprecated_argument_function_kwarg": 386, "deprecated_attribut": 386, "deprecated_funct": 386, "deprecated_renamed_argu": 386, "deprecatedparseprotocol": [16, 84, 90, 105, 127], "deprecation_polici": 411, "depriv": 532, "depth": [16, 84, 90, 105, 127, 353, 419, 424, 458, 485, 551], "deriv": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 54, 100, 119, 125, 129, 133, 137, 138, 147, 279, 386, 398, 399, 404, 407, 410, 466, 489, 500, 502, 523, 537, 586, 587], "descent": 415, "describ": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 95, 128, 129, 131, 137, 166, 206, 215, 281, 304, 387, 389, 391, 392, 395, 396, 398, 399, 400, 402, 403, 405, 406, 409, 410, 411, 412, 415, 424, 430, 438, 446, 447, 463, 466, 474, 475, 485, 489, 490, 496, 498, 500, 502, 503, 509, 521, 525, 529, 538, 539, 584, 585, 586, 587], "descript": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 87, 91, 130, 215, 387, 391, 392, 400, 406, 411, 412, 424, 449, 453, 470, 478, 487, 490, 493, 500, 502, 509, 510, 525], "description1": 387, "description2": 387, "description3": 387, "description_width": [470, 478, 493, 509, 510], "descriptionstyl": [470, 478, 493, 509, 510], "descriptor": [87, 88, 91, 103, 106, 107, 111, 112, 278, 322, 387, 434], "design": [391, 392, 395, 396, 399, 400, 402, 406, 408, 410, 411, 415, 426, 446, 453], "desir": [16, 84, 87, 90, 91, 105, 127, 165, 195, 196, 205, 208, 294, 361, 362, 363, 493, 511, 538], "desktop": 424, "destin": 11, "detail": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 100, 103, 106, 107, 111, 112, 128, 129, 155, 156, 162, 167, 170, 173, 196, 208, 210, 215, 218, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 278, 279, 280, 386, 387, 389, 391, 394, 395, 396, 399, 400, 401, 405, 406, 407, 411, 412, 415, 418, 422, 424, 425, 432, 436, 437, 456, 457, 458, 462, 464, 465, 466, 467, 472, 473, 474, 477, 478, 481, 484, 488, 489, 490, 492, 493, 494, 495, 496, 498, 500, 502, 503, 505, 510, 511, 521, 522, 524, 530, 534, 535, 537, 582, 583, 585, 589], "detect": [17, 19, 20, 21, 22, 24, 25, 26, 27, 59, 137, 145, 146, 291, 376, 377, 387, 402, 405, 406, 408, 426, 432, 433, 434, 444, 446, 447, 453, 456, 469, 487, 500, 502, 505, 584, 587], "detect_t": 406, "detector": [83, 88, 104, 110, 159, 494, 502, 530, 584], "determin": [19, 20, 21, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 114, 115, 136, 158, 164, 166, 168, 180, 181, 183, 185, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 279, 281, 313, 335, 397, 401, 404, 412, 440, 452, 453, 457, 464, 467, 468, 473, 479, 492, 494, 515, 583], "determinist": 386, "deti": [83, 104, 110, 399, 500], "detx": [83, 104, 110, 399, 500], "dev": [11, 16, 82, 84, 90, 105, 127, 386, 388, 389, 402, 412, 415, 416, 417, 454, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 549, 551, 579, 580], "dev584": [105, 127, 424, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "develop": [387, 391, 392, 394, 395, 396, 397, 399, 400, 402, 403, 405, 406, 407, 408, 409, 411, 412, 414, 416, 417, 420, 424, 426, 439, 446, 447, 448, 500], "deviat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 129, 198, 210, 215, 237, 294, 298, 490, 498], "devoid": [462, 528], "devop": 412, "devot": 505, "dex": 313, "df": [87, 91, 123, 139, 148, 473, 490, 587], "dhgtbmbo": 484, "diagnosi": 395, "diagnost": 402, "diagon": [154, 155, 156, 404, 414, 501], "diagram": 589, "dialog": [419, 421], "diamet": [196, 197, 198, 459], "diamond": 497, "dict": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 69, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 121, 123, 126, 127, 128, 129, 130, 131, 133, 134, 137, 139, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 182, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 286, 291, 292, 293, 294, 295, 299, 311, 325, 333, 334, 349, 352, 353, 354, 357, 367, 368, 369, 370, 373, 374, 375, 379, 380, 381, 382, 383, 386, 401, 403, 407, 410, 413, 431, 435, 438, 446, 463, 470, 479, 480, 484, 487, 490, 493, 497, 509, 510, 537, 542, 551], "dict_kei": [458, 551], "dictionari": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 88, 89, 90, 91, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 123, 126, 127, 128, 129, 130, 133, 134, 137, 139, 140, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 182, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 214, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 293, 294, 295, 299, 323, 349, 352, 353, 354, 357, 367, 370, 380, 387, 403, 405, 410, 413, 414, 462, 464, 470, 490, 491, 497, 498, 580], "dictionnari": [379, 415], "did": [77, 393, 400, 405, 406, 407, 409, 412, 429, 457, 465, 467, 470, 472, 478, 481, 490, 498, 500], "didn": [83, 88, 393, 396, 400, 403, 513], "diemand": 24, "diff": [102, 103, 106, 107, 111, 112, 386, 389, 394, 398, 470, 478, 510], "diff_flux": 486, "diff_flux_point": [102, 488], "differ": [26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 59, 67, 80, 86, 87, 91, 94, 100, 102, 123, 125, 126, 128, 129, 130, 133, 134, 135, 137, 145, 151, 152, 153, 154, 157, 159, 161, 164, 169, 179, 197, 198, 200, 203, 204, 205, 206, 208, 209, 210, 247, 291, 292, 293, 295, 343, 347, 361, 362, 377, 386, 387, 389, 391, 392, 394, 396, 397, 398, 399, 400, 402, 403, 404, 406, 407, 408, 409, 410, 412, 414, 415, 417, 419, 421, 430, 433, 435, 445, 448, 449, 450, 452, 454, 457, 462, 463, 464, 466, 467, 470, 473, 474, 475, 476, 479, 481, 484, 485, 487, 488, 489, 490, 492, 494, 495, 496, 497, 498, 500, 501, 502, 505, 509, 511, 513, 521, 523, 525, 530, 537, 538, 543, 544, 583, 585, 586, 587], "different": 394, "differenti": [23, 79, 126, 128, 136, 197, 198, 200, 202, 206, 209, 210, 253, 268, 284, 285, 340, 392, 397, 404, 410, 445, 493, 496, 501, 511, 523, 584], "differential_flux": 128, "difficult": [397, 400, 417], "diffus": [68, 197, 198, 200, 206, 209, 210, 286, 386, 402, 405, 447, 448, 470, 474, 487, 493, 495, 496, 500, 582], "diffuse_cub": 496, "diffuse_galactic_fermi": 495, "diffuse_iem": [495, 501], "diffuse_iso": [495, 501], "diffuse_model": 286, "difrsp0": [501, 511], "difrsp1": [501, 511], "difrsp2": [501, 511], "difrsp3": [501, 511], "difrsp4": [501, 511], "digit": 386, "dilat": [210, 438], "dim": [164, 342, 443, 444, 472, 584], "dimens": [46, 53, 103, 106, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 179, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 210, 276, 277, 280, 313, 325, 379, 402, 415, 435, 446, 448, 452, 454, 490, 491, 493, 496, 505, 521, 537, 538, 543], "dimension": [31, 32, 37, 68, 87, 91, 121, 195, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 237, 238, 241, 287, 326, 339, 392, 400, 414, 419, 444, 466, 489, 490, 491, 493, 496, 511, 529, 531, 537, 538, 583, 584], "dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 159, 273, 274, 312, 476, 496], "dimitri": [438, 440], "dipol": [51, 54], "dirac": 19, "direct": [91, 105, 169, 187, 188, 191, 193, 202, 229, 238, 241, 317, 320, 387, 392, 398, 400, 405, 407, 410, 413, 438, 456, 461, 465, 492, 505, 522, 530, 531, 533, 534, 542, 583, 584], "directional_offset_bi": [457, 465], "directli": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 83, 84, 87, 90, 91, 105, 127, 138, 144, 147, 148, 169, 184, 197, 198, 200, 206, 209, 210, 276, 278, 280, 386, 388, 389, 391, 393, 394, 397, 398, 399, 400, 404, 406, 413, 415, 419, 421, 422, 426, 428, 429, 430, 432, 446, 453, 460, 462, 463, 465, 470, 471, 472, 475, 476, 478, 480, 481, 485, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 500, 501, 509, 510, 511, 513, 521, 525, 530, 534, 537, 561, 587], "directori": [11, 82, 87, 386, 402, 463, 473, 503, 509, 511, 522, 525, 585], "dirk": [429, 443, 445], "disabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 438], "disable_unicode_literals_warn": 386, "disadvantag": 585, "disagr": 391, "disambigu": 391, "disc": [467, 468, 470, 475], "discard": [413, 484, 487], "discard_on_copi": [87, 91], "discarded_ind": 487, "discarded_spati": 487, "discarded_t": 487, "disccus": 395, "discourag": 386, "discov": 585, "discoveri": 35, "discrep": 462, "discret": [91, 140, 303, 308, 399, 454, 490, 537], "discrete_correl": 140, "discrete_correlation_dict": 140, "discrete_correlation_err": [140, 303], "discuss": [13, 59, 281, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 424, 446, 498, 503, 514, 589], "disjoint": 400, "disk": [82, 112, 156, 159, 198, 208, 210, 229, 241, 243, 364, 385, 386, 396, 397, 398, 402, 409, 410, 415, 454, 456, 457, 462, 470, 471, 493, 494, 495, 496, 536, 539, 544, 548, 550], "disk_inc": 400, "diskspatialmodel": [72, 262, 409, 431, 452, 495, 496, 542], "dismiss": 100, "disp": [529, 530], "dispatch": 397, "dispers": [82, 88, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113, 116, 118, 154, 155, 156, 159, 177, 183, 184, 187, 188, 191, 386, 392, 397, 398, 399, 432, 434, 444, 445, 446, 448, 457, 459, 462, 463, 470, 474, 492, 502, 503, 509, 510, 521, 530, 533, 584], "displac": 317, "displai": [11, 15, 82, 87, 91, 121, 133, 137, 215, 299, 334, 379, 383, 386, 387, 417, 419, 421, 438, 441, 452, 453, 457, 459, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 476, 478, 479, 481, 482, 487, 488, 489, 490, 493, 495, 496, 500, 501, 503, 525, 585], "display_length": [87, 91], "disrupt": [427, 428], "dissolv": 431, "dist": [336, 417], "distanc": [17, 18, 21, 22, 23, 24, 25, 27, 41, 46, 47, 130, 145, 146, 205, 253, 280, 308, 316, 342, 400, 444, 451, 464, 466, 476, 486, 487, 490, 519, 534, 561], "distance_gc": [17, 18, 21, 22, 24, 25, 27, 486], "distance_max": [46, 47, 342, 487], "distance_min": [47, 342, 487], "distance_refer": 487, "distibut": [138, 147], "distinct": [401, 402, 407, 502, 588], "distinguish": [293, 295, 410, 413, 457, 493], "distort": [400, 430], "distrib": [102, 138, 147, 462], "distribut": [13, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 83, 102, 110, 135, 138, 139, 147, 148, 159, 194, 234, 237, 246, 253, 273, 293, 295, 335, 336, 340, 379, 382, 384, 385, 386, 390, 391, 394, 399, 404, 405, 408, 411, 412, 416, 417, 420, 431, 440, 446, 452, 453, 457, 462, 464, 465, 468, 470, 474, 476, 478, 479, 490, 495, 498, 500, 511, 513, 525, 529, 530, 532, 538, 546, 561, 584, 586, 587], "divers": 410, "divid": [196, 202, 207, 407, 410, 464, 474, 497, 502, 503], "divis": 202, "djangoproject": 406, "djuvsland": 453, "dl3": [6, 16, 82, 83, 86, 88, 91, 96, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 183, 201, 202, 311, 312, 387, 392, 394, 395, 397, 406, 413, 419, 423, 429, 432, 434, 440, 449, 453, 459, 462, 463, 464, 467, 468, 470, 479, 480, 484, 492, 494, 497, 507, 509, 510, 521, 525, 527, 528, 529, 531, 532, 534, 535, 583, 584], "dl4": [99, 102, 103, 106, 111, 112, 119, 121, 125, 129, 133, 137, 147, 148, 162, 183, 387, 392, 413, 419, 434, 481, 488, 489, 490, 525, 583, 584], "dl5": [121, 125, 129, 133, 137, 413, 453, 481, 489, 490, 583, 584], "dl6": [121, 125, 129, 133, 137, 489, 583, 584], "dm": [17, 19, 20, 21, 22, 24, 25, 26, 27, 434, 449, 486], "dm_exampl": 513, "dmfitfunct": 513, "dmpipe": 513, "dmprofil": [17, 21, 22, 23, 24, 25, 27, 486, 513], "dmsky": 513, "dn": [234, 246, 273, 486, 584], "dnde": [19, 20, 26, 67, 126, 127, 128, 136, 138, 140, 141, 142, 143, 147, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 284, 410, 438, 460, 462, 463, 472, 476, 487, 488, 489, 496, 501, 509, 511, 523], "dnde_cu": 285, "dnde_err": [126, 128, 138, 147, 523], "dnde_errn": [67, 126, 128, 138, 147, 487], "dnde_error": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "dnde_errp": [67, 126, 128, 138, 147, 487], "dnde_ref": [126, 128, 410], "dnde_scan_axi": [138, 147], "dnde_scan_valu": [126, 128], "dnde_ul": [67, 126, 128, 138, 147, 487, 511], "do": [13, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 90, 95, 100, 105, 127, 154, 165, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 337, 379, 387, 389, 391, 392, 393, 396, 400, 401, 402, 403, 404, 405, 406, 409, 410, 413, 415, 416, 417, 419, 421, 432, 458, 460, 462, 463, 465, 466, 467, 468, 470, 472, 473, 474, 478, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 500, 501, 509, 510, 511, 521, 525, 532, 537, 582, 585, 588, 589], "do_someth": 386, "doc": [11, 13, 16, 83, 84, 87, 90, 91, 105, 127, 154, 196, 202, 205, 208, 215, 228, 252, 313, 350, 386, 387, 389, 391, 394, 400, 402, 403, 405, 406, 415, 416, 423, 424, 426, 432, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 538, 549, 551, 557, 573, 579, 580, 584, 585, 589], "docker": [403, 417], "dockerfil": [394, 416, 417], "docstr": [386, 406, 412, 438, 439, 440, 442, 445, 451, 452, 453, 454, 470, 496], "doctest": [165, 374, 387], "document": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 293, 295, 321, 325, 335, 360, 373, 386, 388, 390, 391, 393, 394, 396, 400, 402, 403, 405, 407, 409, 411, 412, 415, 417, 418, 423, 424, 425, 432, 434, 435, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 493, 495, 500, 502, 503, 525, 536, 537, 538, 585], "doe": [16, 84, 87, 90, 91, 105, 127, 129, 133, 140, 157, 167, 170, 204, 243, 279, 291, 386, 387, 393, 394, 396, 398, 400, 401, 403, 405, 406, 409, 410, 412, 413, 415, 429, 438, 449, 457, 458, 462, 465, 467, 470, 472, 473, 487, 490, 491, 492, 493, 494, 502, 513, 525, 534, 585], "doesn": [69, 386, 387, 391, 393, 394, 400, 403, 404, 406, 454, 500, 501, 585], "dof": 587, "doi": [139, 412], "domain": [197, 198, 200, 206, 209, 210, 386, 400, 485], "domenico": 444, "dominguez": [230, 231, 409, 458, 551], "dominquez": 230, "don": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 154, 385, 386, 389, 391, 393, 394, 403, 413, 417, 459, 462, 467, 472, 479, 494, 496, 583, 585, 588, 589], "donath": [395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "done": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 126, 129, 155, 156, 162, 167, 170, 379, 386, 387, 389, 391, 392, 393, 397, 399, 400, 401, 402, 404, 405, 406, 409, 410, 412, 416, 419, 423, 447, 452, 459, 465, 470, 471, 475, 476, 478, 481, 482, 488, 489, 492, 493, 496, 497, 521, 525, 533, 534, 538, 570, 587, 589], "dos2unix": 386, "dot": [50, 51, 54, 111, 112, 197, 198, 200, 206, 209, 210, 452], "doubl": [27, 125, 140, 141, 299, 412, 445, 453], "doubling_dict": 299, "down": [50, 51, 54, 137, 391, 393, 396, 400, 405, 416, 430, 488, 501, 588], "downgrad": [196, 385], "download": [67, 94, 102, 128, 389, 394, 402, 403, 406, 413, 416, 418, 419, 421, 423, 427, 428, 430, 431, 438, 447, 448, 449, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585], "downsampl": [103, 106, 107, 111, 112, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 429, 435, 444, 454, 488, 489], "downsampled_energi": 488, "downsampling_factor": [137, 472], "downward": [293, 295], "dozen": 386, "dpp": 412, "dr": [17, 18, 21, 22, 24, 25, 27, 544], "dr1": [16, 65, 82, 83, 86, 88, 91, 96, 159, 177, 274, 311, 312, 387, 394, 406, 423, 456, 459, 462, 463, 468, 470, 480, 484, 492, 497, 507, 509, 510, 522, 525, 527, 528, 529, 531, 532, 534, 535, 539, 571], "dr2": [65, 274, 438, 456, 539, 571], "dr3": [65, 273, 456, 496, 539, 571], "dr4": [65, 453], "draft": [386, 390, 391, 414, 447], "drag": 389, "draw": [33, 198, 335, 399, 498], "drawback": [401, 405], "drawn": [335, 399, 415], "drift": [85, 94, 95, 449], "drive": 402, "driven": [11, 15, 392, 402, 404, 406, 446, 505, 524], "drop": [52, 53, 103, 106, 107, 111, 112, 126, 128, 133, 155, 156, 162, 167, 170, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 229, 236, 278, 371, 390, 391, 402, 403, 408, 428, 431, 432, 435, 438, 445, 448, 493, 521], "ds9": [83, 196, 205, 208, 212, 228, 252, 386, 387, 400, 430, 494, 496, 538], "ds9parser": 400, "dss": 396, "dt": [87, 91], "dtime_t": 485, "dtype": [33, 38, 87, 91, 113, 118, 152, 154, 157, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 228, 252, 313, 386, 414, 464, 467, 476, 484, 487, 488, 489, 491, 492, 493, 500, 501, 511, 523], "duck": [16, 84, 90, 105, 127], "due": [59, 87, 91, 386, 414, 415, 441, 456, 461, 462, 493, 498, 500, 505, 561, 585], "dummi": [111, 112, 400, 467, 525], "dump": [16, 84, 90, 105, 127, 402], "dumps_kwarg": [16, 84, 90, 105, 127], "duplic": [87, 91, 100, 155, 386, 387, 389, 392, 406, 407, 410, 435, 438, 454], "durat": [83, 86, 88, 94, 465, 474, 478, 480, 484, 500, 522, 525], "dure": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 52, 53, 83, 84, 85, 88, 90, 95, 103, 105, 106, 111, 112, 127, 174, 291, 387, 394, 398, 402, 405, 406, 408, 411, 412, 413, 414, 416, 417, 432, 435, 452, 453, 463, 464, 474, 479, 480, 484, 488, 492, 494, 498, 510, 521, 522, 584, 588], "dust": 230, "duti": 412, "dwarf": [17, 513], "dx": [33, 317], "dy": [33, 317], "dynam": [22, 383, 522], "dynesti": 415, "dz": 317, "e": [13, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 50, 51, 54, 59, 67, 68, 82, 83, 84, 85, 86, 87, 90, 91, 95, 105, 116, 127, 128, 129, 135, 145, 154, 155, 156, 157, 159, 183, 190, 196, 197, 198, 200, 202, 204, 206, 208, 209, 210, 215, 218, 220, 222, 223, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281, 293, 295, 299, 313, 315, 319, 345, 353, 364, 375, 376, 381, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 416, 417, 419, 420, 421, 423, 424, 426, 427, 428, 432, 438, 439, 440, 444, 446, 447, 448, 452, 454, 456, 458, 459, 460, 462, 463, 464, 465, 468, 471, 472, 473, 474, 475, 476, 478, 479, 480, 482, 484, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 507, 509, 510, 511, 513, 520, 521, 522, 523, 525, 529, 530, 535, 536, 537, 542, 543, 544, 551, 552, 554, 555, 556, 558, 559, 563, 564, 566, 567, 568, 569, 579, 582, 584, 585, 586, 587, 588, 589, 590], "e1rafdao": 484, "e2dnd": [19, 20, 26, 126, 127, 128, 136, 140, 141, 142, 143, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 410, 438, 445, 457, 458, 460, 462, 463, 464, 471, 487, 489, 510, 511, 523, 525, 561], "e2dnde_err": [126, 128], "e2dnde_errn": [126, 128, 487], "e2dnde_errp": [126, 128, 487], "e2dnde_ref": [126, 128], "e2dnde_ul": [126, 128, 487], "e501": [19, 20, 154, 190, 201, 202, 208, 383], "e_": [19, 20, 26, 50, 52, 53, 154, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 521, 527, 529, 530, 531, 552, 556, 564, 566, 567], "e_0": [232, 233, 234, 245, 246, 258, 259, 269, 272, 273, 274, 555, 556, 559, 561, 563, 566, 567, 568, 569], "e_b": 409, "e_cut": [67, 487], "e_cutoff": 561, "e_d": [258, 259], "e_edg": 435, "e_max": [67, 128, 410, 457, 462, 463, 464, 475, 479, 487, 488, 489, 490, 493, 498, 511, 523], "e_min": [67, 128, 410, 457, 462, 463, 464, 475, 479, 487, 488, 489, 490, 493, 498, 501, 511, 523], "e_peak": [234, 246, 273], "e_reco": [113, 118, 154, 159, 482, 584], "e_ref": [67, 128, 410, 457, 462, 463, 479, 487, 489, 509, 511, 523], "e_refe_mine_maxdndednde_errpdnde_errndnde_ulsqrt_tsis_ul": 460, "e_refe_mine_maxdndednde_errtssqrt_tsnprednpred_excessstatstat_nullcountssuccess": 472, "e_sn": [43, 44, 52], "e_tru": [113, 118, 159, 482, 501], "each": [11, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 86, 87, 91, 92, 100, 103, 106, 107, 110, 111, 112, 117, 120, 121, 123, 125, 126, 128, 129, 133, 136, 137, 139, 141, 142, 143, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 178, 179, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 215, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 238, 239, 241, 245, 246, 249, 252, 253, 254, 255, 257, 258, 259, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 303, 311, 350, 375, 384, 386, 389, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 406, 407, 410, 412, 415, 417, 418, 425, 432, 435, 446, 449, 452, 454, 459, 465, 466, 468, 470, 471, 472, 474, 475, 479, 480, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 502, 503, 510, 514, 520, 521, 522, 525, 529, 530, 531, 537, 538, 545, 561, 562, 584, 585, 588, 589], "eager": 402, "earli": [400, 405, 406, 500], "earlier": [393, 412], "earth": [41, 88, 284, 501], "earth_azimuth_angl": [501, 511], "earthloc": [83, 85, 88, 90, 94, 97, 323, 413], "easi": [386, 387, 392, 397, 400, 401, 402, 405, 406, 410, 413, 432, 438, 446, 493, 494, 501, 522, 582, 583, 585, 589], "easier": [386, 392, 397, 405, 410, 446, 449, 500], "easiest": 420, "easili": [87, 91, 128, 392, 397, 398, 402, 413, 415, 419, 420, 479, 480, 490, 491, 493, 501, 511, 585], "ebel": [121, 466], "ebl": [230, 231, 281, 404, 409, 432, 435, 445, 452, 454, 456, 461, 496, 505, 539, 571], "ebl_data_builtin": [458, 551], "ebl_dominguez11": [231, 551], "ebl_franceschini": [231, 281], "ebl_franceschini_2017": 231, "ebl_saldana": 231, "eblabsorbtionnormspectralmodel": 409, "eblabsorptionnormspectralmodel": [263, 409, 435, 458, 496, 551], "ebltabl": 458, "ebound": [154, 202, 538], "ebreak": [222, 269, 552, 566], "ec": [482, 496, 538], "eccentr": [229, 238, 241, 542, 543, 544], "echo": 585, "eco": 412, "ecosystem": 413, "ecpl": [67, 80, 232, 233, 234, 291, 409, 444, 460, 487, 496], "ecpl_norm": 557, "ecsv": [59, 63, 128, 398], "ecut": [232, 272, 556, 567], "edelson": [140, 300, 303, 485], "edg": [103, 106, 107, 111, 112, 121, 123, 125, 129, 132, 133, 137, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 168, 169, 177, 178, 183, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 229, 379, 400, 410, 429, 435, 438, 457, 458, 462, 471, 472, 473, 474, 475, 485, 489, 491, 492, 493, 494, 501, 502, 509, 532, 542], "edge_max": [195, 196, 205, 208, 542], "edge_min": [195, 196, 205, 208, 542], "edge_width": [229, 495, 542], "edgecolor": [383, 462, 464, 466, 472, 473, 476, 482, 486, 534, 542, 543, 544], "edges_max": [199, 201, 202, 207, 493], "edges_min": [199, 201, 202, 207, 493], "edisp": [16, 82, 87, 88, 96, 103, 106, 107, 108, 111, 112, 113, 118, 154, 155, 156, 159, 163, 177, 183, 184, 187, 188, 268, 311, 312, 387, 396, 397, 398, 399, 402, 433, 435, 438, 444, 445, 446, 454, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 472, 474, 475, 478, 480, 481, 484, 488, 492, 497, 500, 501, 502, 503, 509, 521, 529, 530, 584], "edisp2d": [156, 159, 387], "edisp2d_ax": 159, "edisp3d": 491, "edisp_": 521, "edisp_2d": [82, 87, 159, 500, 503], "edisp_3d": 491, "edisp_bin": 101, "edisp_ev": 491, "edisp_fil": 101, "edisp_kernel": [154, 488, 529], "edisp_kernel_map": [155, 502], "edisp_map": [104, 110, 155, 156, 491, 529], "edisp_new": 491, "edispkernel": [106, 113, 118, 155, 159, 187, 433, 529], "edispkernelmap": [103, 106, 107, 108, 111, 112, 116, 156, 162, 163, 167, 170, 177, 184, 187, 434, 435, 466, 492, 501, 525, 529], "edispmap": [103, 104, 106, 107, 110, 111, 112, 162, 163, 167, 170, 177, 184, 187, 188, 398, 399, 407, 428, 431, 432, 433, 435, 438, 491, 521, 529], "edit": [387, 389, 391, 393, 394, 395, 402, 406, 416, 417, 420, 509, 585], "editor": [387, 412, 463, 509, 585], "editori": 412, "edm": 490, "edu": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 157, 196, 205, 208, 215, 228, 249, 252, 284, 285, 406, 490, 538], "eemin": 561, "eff": [157, 527, 530, 543, 544], "eff_area": 491, "effarea": 491, "effect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 82, 87, 88, 91, 106, 109, 156, 157, 183, 184, 189, 191, 192, 205, 228, 252, 376, 377, 386, 391, 396, 397, 399, 400, 410, 442, 444, 462, 474, 476, 479, 485, 498, 502, 503, 505, 509, 530, 538, 543, 544, 584], "effective_area": [163, 399, 500], "effective_livetim": 492, "effective_times_src": 492, "effectivearea3d": 491, "effectiveareat": [398, 426, 438, 442], "effectiveareatable2d": [88, 156, 163, 169, 191, 392, 442, 491, 500, 527], "effici": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 112, 121, 391, 397, 398, 399, 400, 401, 408, 460, 497, 530, 535, 587], "effort": [393, 395, 402, 403, 405, 406, 409, 429, 521], "eflux": [19, 20, 26, 126, 127, 128, 140, 141, 142, 143, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 410, 438, 476, 496, 523], "eflux_err": [126, 128, 410], "eflux_errn": [126, 128], "eflux_errp": [126, 128], "eflux_ref": [126, 128], "eflux_ul": [126, 128], "eg": [386, 454, 458, 470, 478, 481, 484, 488, 491, 495, 496, 498], "egal": 500, "egg": 420, "einasto": [21, 513], "either": [67, 82, 87, 88, 91, 95, 112, 126, 128, 159, 174, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 208, 209, 210, 243, 294, 313, 343, 375, 387, 389, 391, 393, 400, 402, 405, 408, 412, 419, 438, 452, 463, 470, 476, 481, 488, 490, 496, 498, 509, 521, 523, 525, 536, 538, 582, 585], "ej": [50, 52, 53], "eject": 52, "ejecta": 52, "el": [26, 486], "elabor": [412, 466], "elaps": [83, 395, 584], "electron": [50, 284, 500, 561], "element": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 103, 106, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 210, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 379, 404, 415, 452, 454, 487, 493, 537], "elementtre": 500, "elev": 401, "elif": [386, 400, 413], "elli": [426, 439], "ellips": [229, 400, 538, 542], "ellipseannulusskyregion": [534, 538], "ellipseskyregion": [224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280, 459, 496, 534], "ellipsoid": 490, "ellipt": [538, 544], "elong": [428, 431, 432, 542, 543], "elpas": 452, "els": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 126, 128, 137, 204, 386, 389, 400, 403, 410, 413, 414, 417, 419, 421, 497, 585, 587], "elsewher": [117, 120], "email": [387, 389, 412, 417], "emax": [101, 133, 257, 285, 467, 473, 564], "emax_fit": 482, "embryon": 402, "emce": [395, 403, 428, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "emerg": 396, "emeri": 447, "emin": [101, 133, 257, 285, 467, 473, 564], "emin_fit": 482, "emiss": [52, 68, 141, 392, 397, 401, 462, 468, 470, 471, 474, 495, 500, 501, 521, 535, 561, 582], "emit": [82, 218, 219, 220, 221, 372, 386, 428, 446, 458, 530], "emitt": 462, "emmanoulopoulo": [308, 454], "emphas": 489, "emphasi": 490, "empir": 40, "emploi": 464, "empti": [92, 100, 103, 106, 107, 111, 112, 145, 177, 197, 198, 200, 204, 206, 209, 210, 215, 252, 372, 394, 396, 429, 441, 470, 474, 475, 478, 481, 492, 493, 502, 514, 521, 534, 535, 538], "empty_dataset": 457, "empty_i": 481, "empty_map": [103, 106, 107, 111, 112, 473, 492, 534], "emsembl": 93, "en": [34, 83, 87, 88, 91, 129, 190, 205, 215, 281, 313, 389, 406, 457, 465, 467, 470, 472, 478, 481, 490, 491, 494, 500, 522, 536, 538], "enabl": [395, 398, 420, 429, 438, 447, 457, 465, 467, 470, 472, 478, 481, 500, 532], "encapsul": [208, 410, 536], "enclos": [210, 387, 459, 464, 490, 494], "enclosur": [82, 161, 454, 464, 491], "encod": [16, 84, 87, 90, 91, 105, 127], "encompass": [196, 536, 538], "encount": [171, 419, 420, 421, 422, 464, 468, 474, 481, 484, 503, 573, 585], "encourag": [386, 391, 412, 416, 446], "end": [52, 53, 86, 87, 91, 92, 94, 100, 103, 107, 111, 126, 128, 137, 202, 243, 252, 391, 393, 395, 397, 398, 400, 401, 402, 403, 405, 406, 409, 415, 439, 449, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 507, 509, 510, 511, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 587], "end_po": [130, 346, 476], "endswith": 386, "energet": 474, "energi": [16, 19, 20, 26, 44, 50, 51, 52, 53, 58, 62, 63, 67, 71, 74, 75, 80, 82, 83, 88, 96, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 125, 126, 128, 129, 130, 133, 136, 137, 139, 141, 142, 143, 144, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 177, 179, 183, 184, 186, 187, 188, 190, 191, 193, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 287, 289, 381, 382, 386, 392, 395, 397, 398, 399, 400, 401, 402, 404, 405, 408, 410, 414, 419, 423, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 440, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 458, 459, 461, 462, 463, 465, 466, 467, 468, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 484, 487, 488, 489, 492, 493, 502, 503, 505, 509, 510, 511, 520, 521, 522, 525, 530, 532, 533, 534, 536, 537, 538, 545, 551, 557, 560, 562, 565, 570, 580, 583, 584, 586], "energy_axes_are_align": 100, "energy_axi": [19, 20, 26, 103, 106, 107, 111, 112, 113, 114, 115, 118, 126, 128, 154, 155, 156, 159, 167, 170, 177, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 410, 457, 459, 462, 464, 465, 466, 468, 472, 474, 475, 480, 481, 484, 488, 491, 492, 493, 496, 501, 502, 510, 529, 532, 534, 535, 537, 538], "energy_axis_new": 488, "energy_axis_tru": [103, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 154, 155, 156, 157, 159, 165, 167, 177, 387, 432, 457, 459, 462, 464, 465, 466, 468, 472, 474, 475, 478, 480, 481, 482, 484, 488, 491, 492, 501, 502, 510, 529, 532, 534, 535], "energy_bin": 402, "energy_bin_per_decade_max": [114, 115], "energy_bound": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 400, 438, 458, 460, 462, 464, 470, 471, 482, 486, 487, 490, 496, 501, 510, 511, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 570], "energy_cent": 278, "energy_column": 410, "energy_depend": 473, "energy_dependent_estim": [456, 473, 477], "energy_edg": [16, 121, 123, 125, 129, 130, 133, 137, 145, 146, 150, 202, 333, 410, 458, 462, 463, 466, 467, 468, 470, 471, 472, 473, 476, 479, 480, 481, 482, 489, 502, 509, 510, 523], "energy_estim": 502, "energy_flux": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 496, 511], "energy_flux_err": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "energy_flux_error": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "energy_index": 164, "energy_integr": 51, "energy_logspac": 405, "energy_mask": [195, 196, 205, 208, 434, 464, 470, 482, 488, 490, 494, 498], "energy_max": [19, 20, 26, 83, 100, 103, 106, 107, 111, 112, 126, 128, 129, 130, 133, 154, 195, 196, 202, 205, 208, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 278, 281, 287, 400, 402, 470, 475, 482, 484, 486, 488, 492, 496, 511], "energy_min": [19, 20, 26, 52, 53, 83, 100, 103, 106, 107, 111, 112, 126, 128, 129, 130, 133, 154, 195, 196, 202, 205, 208, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 278, 281, 287, 400, 402, 470, 475, 482, 484, 486, 488, 492, 496, 511], "energy_nam": [167, 170], "energy_nod": [409, 496], "energy_pow": [19, 20, 26, 128, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 289, 462, 470, 482, 490, 511], "energy_rang": [66, 67, 71, 74, 75, 80, 83, 100, 103, 106, 107, 111, 112, 438, 488, 494, 568, 569], "energy_range_fit": [103, 106, 107, 111, 112, 488], "energy_range_saf": [103, 106, 107, 111, 112, 488], "energy_range_tot": [103, 106, 107, 111, 112, 494], "energy_reco": [386, 478], "energy_ref": [126, 128], "energy_resolut": 446, "energy_saf": 402, "energy_tru": [16, 96, 103, 106, 107, 111, 112, 113, 118, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 177, 184, 187, 195, 196, 202, 205, 208, 311, 312, 386, 387, 399, 452, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 472, 474, 475, 478, 479, 480, 481, 482, 484, 488, 491, 492, 493, 494, 496, 497, 500, 501, 502, 509, 510, 529, 530, 532, 534, 535, 537, 538], "energy_true_axi": 154, "energyaxesconfig": 16, "energyaxisconfig": 16, "energybound": 430, "energydependentmorphologi": 473, "energydependentmorphologyestim": [453, 473], "energydependentmultigausspsf": [163, 426, 491, 500, 531], "energydependenttablepsf": [392, 407, 427, 438], "energydispers": [154, 155, 156, 159, 398, 433, 443, 446, 447], "energydispersion2d": [88, 154, 156, 163, 169, 187, 188, 387, 392, 438, 440, 445, 491, 500, 529], "energydispersion3d": 491, "energyoffsetarrai": 443, "energyrangeconfig": 16, "enforc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 389, 413], "engin": [87, 91], "english": 525, "enhanc": [391, 395, 423], "enlarg": 535, "enough": [399, 401, 402, 415, 462, 465, 468, 478, 479, 494, 532], "enrico": 402, "enrico_config": 402, "enrico_xml": 402, "enriqu": [394, 402, 406, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 446, 447, 448], "ensembl": [93, 415], "ensur": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 183, 203, 291, 386, 392, 397, 398, 409, 413, 420, 440, 454, 457, 462, 480, 489, 494, 532, 537, 546], "enter": [219, 221, 228, 252, 423], "entir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 103, 105, 106, 107, 111, 112, 127, 184, 415, 459, 470, 473, 485], "entri": [43, 44, 87, 91, 94, 123, 126, 129, 130, 133, 134, 137, 139, 140, 147, 148, 215, 216, 228, 252, 291, 353, 386, 387, 398, 406, 410, 413, 416, 438, 449, 454, 459, 463, 487, 490, 493, 496, 497, 525, 526, 538], "entry_point": 439, "enum": [95, 160, 328, 329], "enumer": [415, 462, 474, 487, 490, 495, 498], "env": [389, 403, 416, 418, 419, 421, 422, 447, 585], "envelop": [399, 490, 510], "environ": [11, 82, 351, 385, 386, 389, 393, 394, 398, 403, 406, 416, 417, 419, 420, 421, 422, 423, 427, 428, 430, 446, 447, 454, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 585], "envis": 395, "envvar": 11, "eosc": 412, "episod": 141, "epoch": 369, "epsilon": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "epsilon_": [103, 107, 111, 521], "epsilon_k": [103, 107, 111, 521], "epsmch": 490, "eq": [102, 273], "eqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "eqnarrai": 409, "equal": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 121, 125, 129, 133, 137, 154, 202, 386, 396, 399, 448, 462, 479, 480, 494, 498, 521, 537, 588], "equat": [27, 273, 274, 300, 387, 547, 548, 552, 555, 556, 558, 559, 563, 564, 566, 567, 568, 569, 587, 588], "equatori": [95, 160, 196, 197, 198, 200, 203, 205, 208, 209, 210, 491], "equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 126, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 247, 379, 387, 398, 399, 400, 409, 410, 452, 453, 462, 487, 492, 493, 494, 496, 500, 509, 521, 523, 525, 536, 537, 538, 585, 586, 587], "er": [26, 486], "era": 230, "ereco": [154, 491], "erf": [239, 542], "erg": [52, 53, 67, 457, 462, 487, 511, 518, 525], "erlangen": 405, "erod": 210, "eros": [208, 210], "err": 490, "errat": 386, "errlo": 415, "errn": [125, 129, 133, 134, 137, 215, 449, 587], "errn_2sigma": 587, "error": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 68, 79, 84, 86, 90, 102, 103, 105, 106, 107, 111, 112, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 142, 143, 147, 173, 199, 202, 207, 218, 220, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 293, 295, 299, 300, 301, 303, 308, 364, 386, 387, 400, 401, 402, 404, 409, 410, 413, 414, 415, 428, 432, 434, 436, 438, 439, 441, 445, 446, 449, 451, 452, 453, 454, 458, 459, 460, 462, 463, 465, 466, 467, 470, 471, 472, 473, 475, 478, 479, 481, 482, 484, 485, 487, 489, 496, 497, 498, 500, 509, 510, 511, 513, 521, 523, 525, 543, 561, 570, 582, 585], "error_callback": 173, "errorbar": [83, 102, 103, 106, 107, 111, 112, 202, 206, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 457, 484, 498], "errp": [125, 129, 133, 134, 137, 215, 449, 587], "errp_2sigma": 587, "errup": 415, "escap": [386, 412, 415], "especi": [87, 91, 141, 389, 393, 396, 400, 406, 407, 417, 438, 444, 459, 472, 480, 487, 493, 498, 500, 501], "ess": 415, "essenti": [396, 398, 401, 432, 433, 434, 476, 493], "establish": [386, 399], "estim": [6, 19, 20, 26, 50, 72, 102, 106, 112, 114, 115, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 172, 178, 179, 180, 186, 195, 196, 205, 208, 210, 215, 218, 222, 223, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 291, 298, 301, 306, 333, 379, 390, 392, 395, 399, 400, 401, 402, 405, 408, 414, 419, 428, 429, 432, 433, 434, 435, 438, 439, 440, 444, 445, 446, 447, 449, 452, 453, 454, 456, 457, 458, 462, 464, 468, 470, 471, 472, 475, 477, 480, 481, 482, 483, 488, 490, 494, 498, 499, 502, 505, 509, 510, 521, 525, 535, 582, 583, 584, 586, 588], "estimate_best_fit": [129, 130, 133, 134], "estimate_count": [129, 130, 133, 134], "estimate_energy_depend": 123, "estimate_errn_errp": [129, 130, 133, 134], "estimate_excess_map": 125, "estimate_exposure_reco_energi": 125, "estimate_fit_input_map": 137, "estimate_flux_default": 137, "estimate_flux_map": 137, "estimate_flux_point": [129, 130, 133], "estimate_kernel": [125, 137], "estimate_map": 121, "estimate_mask_default": [125, 137], "estimate_min_e2dnd": 136, "estimate_min_excess": 136, "estimate_npr": [129, 130, 133, 134], "estimate_npred_excess": [129, 130, 133], "estimate_pad_width": 137, "estimate_scan": [129, 130, 133, 134], "estimate_sensit": [129, 130, 133, 134], "estimate_t": [129, 130, 133, 134], "estimate_time_bin_flux": 133, "estimate_ul": [129, 130, 133, 134], "estimator_result": [139, 147, 148, 482], "et": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 35, 39, 40, 57, 59, 63, 102, 121, 140, 141, 157, 230, 300, 301, 303, 308, 387, 396, 415, 454, 466, 473, 485, 513, 584], "eta": [241, 242, 265, 544, 548, 575], "eta_": 50, "eta_b": 50, "eta_rang": [544, 548], "etc": [106, 112, 126, 386, 391, 392, 396, 397, 398, 401, 402, 406, 407, 410, 412, 413, 415, 435, 463, 465, 470, 478, 479, 481, 482, 484, 488, 493, 496, 498, 501, 509, 521, 534], "etru": 491, "eu": 406, "euclidean": 311, "europ": 412, "ev": [489, 491, 525, 561], "ev2": 491, "evalu": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 87, 91, 103, 106, 107, 110, 111, 112, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 184, 190, 205, 216, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 326, 386, 391, 395, 401, 404, 405, 408, 409, 410, 414, 427, 428, 429, 431, 434, 438, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 474, 475, 482, 491, 496, 498, 500, 501, 521, 543, 544, 551, 584, 587], "evaluate_contain": [158, 166, 168, 440], "evaluate_direct": [158, 166, 168], "evaluate_energy_flux": [258, 259], "evaluate_error": [19, 20, 26, 128, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 404], "evaluate_geom": [224, 225, 229, 236, 238, 241, 254, 256, 265, 266, 268, 270, 276, 280, 453, 496, 544], "evaluate_integr": [257, 258, 259], "evaluate_paramet": [158, 166, 168], "evaluation_bin_size_min": [224, 225, 229, 238, 241, 254, 256, 265, 266, 268, 270, 276, 280], "evaluation_radiu": [224, 225, 229, 238, 241, 254, 256, 265, 266, 268, 270, 276, 278, 280, 397, 398, 409, 496], "evaluation_region": [224, 225, 229, 238, 241, 254, 256, 265, 266, 268, 270, 276, 280], "even": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 138, 147, 208, 219, 221, 386, 389, 391, 393, 394, 400, 403, 404, 412, 413, 415, 430, 479, 482, 489, 490, 492, 493, 494, 495, 496, 509, 521, 523, 547, 548, 585], "event": [82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 104, 105, 110, 116, 125, 136, 156, 167, 170, 171, 178, 186, 197, 198, 200, 206, 209, 210, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 343, 386, 387, 390, 392, 396, 398, 400, 401, 402, 413, 419, 423, 430, 431, 432, 434, 438, 439, 440, 445, 446, 447, 448, 449, 452, 453, 454, 456, 459, 462, 463, 464, 468, 470, 471, 477, 481, 492, 502, 505, 507, 509, 510, 525, 533, 534, 535, 583, 584, 587], "event_3fhl": 511, "event_class": [84, 501, 511], "event_det_coord": [104, 110], "event_fil": 88, "event_filt": 89, "event_filter_typ": 89, "event_id": [399, 500, 501, 511, 522], "event_list": [83, 386, 387, 399], "event_list_meta": [104, 110, 433], "event_sampl": [456, 474, 477], "event_sampling_nrg_depend_model": [456, 475, 477], "event_typ": [105, 501, 511], "eventlist": [84, 88, 104, 110, 186, 197, 198, 200, 206, 209, 210, 386, 387, 392, 399, 400, 401, 413, 423, 428, 435, 440, 442, 443, 444, 446, 447, 474, 475, 482, 493, 500, 501, 511, 522, 525, 534], "eventlistbas": 89, "eventlistdataset": 447, "eventlistmetadata": [83, 413], "events2": 83, "events_": 474, "events_0001": 474, "events_1": 522, "events_2": 522, "events_3fhl": 511, "events_bkg": 399, "events_gc_3fhl": 511, "events_list": 399, "events_path": [82, 474], "events_src": 399, "events_tot": 399, "events_vela": 482, "eventu": [386, 391, 402, 405, 406, 423, 496], "ever": [415, 588], "everi": [196, 198, 210, 280, 386, 389, 394, 395, 396, 398, 402, 411, 413, 417, 459, 462, 493, 510, 585], "everyon": 391, "everyth": [386, 404, 405, 525], "everywher": [386, 400, 405, 406, 427], "evid": [141, 487], "evolut": [30, 31, 32, 50, 52, 53, 230, 392, 406, 456, 477, 505, 518, 519, 539], "evolv": [28, 29, 30, 35, 36, 39, 40, 50, 52, 53, 230, 403, 406, 413, 415, 475, 491], "evt_sampl": 474, "ex": [11, 493, 495, 496], "exact": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 404, 480, 493, 501], "exactli": [121, 125, 129, 133, 137, 202, 381, 415, 462, 464, 480, 482, 494, 498, 501, 521, 538], "exagger": 377, "examin": [412, 529], "exampl": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 96, 99, 102, 103, 106, 107, 111, 112, 113, 117, 118, 120, 121, 123, 125, 126, 128, 130, 132, 133, 134, 136, 137, 141, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 165, 167, 170, 177, 180, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 219, 221, 228, 243, 250, 252, 281, 285, 291, 294, 311, 312, 333, 337, 343, 353, 365, 366, 371, 374, 376, 377, 379, 381, 383, 386, 387, 389, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 409, 412, 413, 414, 415, 419, 420, 421, 423, 427, 429, 432, 435, 438, 439, 440, 443, 445, 446, 447, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 515, 516, 522, 525, 527, 528, 529, 531, 536, 538, 539, 540, 550, 571, 579, 580, 581, 582, 585, 587, 589, 590], "example_cub": 493, "example_cube_fgst": 493, "exce": [114, 115], "except": [67, 69, 80, 87, 91, 103, 106, 107, 111, 112, 173, 197, 198, 200, 206, 209, 210, 313, 383, 386, 397, 401, 405, 491, 495, 538], "excerpt": 503, "excess": [15, 67, 72, 103, 106, 107, 111, 112, 122, 125, 126, 128, 129, 130, 133, 136, 139, 142, 143, 147, 148, 177, 228, 252, 293, 295, 300, 301, 384, 398, 401, 434, 435, 441, 446, 453, 454, 457, 458, 462, 463, 465, 466, 467, 470, 472, 476, 478, 481, 482, 487, 488, 489, 492, 494, 495, 502, 509, 510, 523, 525], "excess_estim": 502, "excess_estimator_integr": 502, "excess_integr": 502, "excess_map": [16, 463, 467, 468, 470, 509], "excess_map_estim": 482, "excess_matching_signific": [437, 447], "excess_min": 150, "excess_r": 488, "excessestim": 410, "excessmapconfig": 16, "excessmapestim": [122, 145, 146, 147, 148, 410, 434, 435, 436, 438, 441, 451, 453, 454, 468, 470, 482, 489, 494, 502, 523], "excesspointsestim": 410, "excessprofileestim": [410, 435], "exchang": 400, "exclud": [16, 84, 90, 102, 103, 105, 106, 111, 112, 127, 132, 178, 180, 219, 221, 228, 252, 392, 450, 470, 492, 494, 534, 535], "exclude_default": [16, 84, 90, 105, 127], "exclude_non": [16, 84, 90, 105, 127], "exclude_unset": [16, 84, 90, 105, 127], "exclus": [16, 83, 172, 174, 179, 180, 181, 182, 185, 196, 208, 392, 400, 402, 434, 436, 454, 459, 467, 470, 492, 532, 534], "exclusion_mask": [172, 174, 179, 180, 181, 182, 185, 462, 468, 472, 492, 494, 510, 532, 534, 535], "exclusion_mask_2d": 492, "exclusion_mask_crab": [463, 509], "exclusion_radiu": 494, "exclusion_region": 462, "exclusionmask": 444, "execut": [11, 125, 129, 133, 134, 137, 386, 387, 389, 391, 393, 394, 395, 401, 402, 406, 417, 418, 419, 420, 421, 422, 423, 432, 440, 446, 456, 461, 469, 477, 483, 492, 493, 499, 501, 504, 505, 506, 508, 511, 512, 540, 550, 571, 581, 583], "exercis": [389, 402, 406, 412], "exhibit": 473, "exist": [11, 15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 88, 91, 99, 100, 102, 103, 106, 107, 109, 111, 112, 126, 128, 155, 156, 162, 167, 170, 182, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 216, 228, 243, 252, 276, 277, 278, 280, 355, 370, 386, 389, 391, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 412, 413, 415, 419, 420, 423, 424, 427, 431, 432, 446, 447, 449, 452, 466, 468, 488, 493, 494, 496, 497, 501, 522, 537, 538, 586], "exist_ok": [462, 463, 470, 471, 474, 509, 510], "exit": [11, 15, 87, 91, 219, 221, 228, 252, 428, 549, 585], "exot": 403, "exp": [21, 28, 29, 30, 31, 32, 35, 36, 39, 40, 157, 235, 239, 246, 258, 259, 272, 387, 409, 481, 496, 543, 544, 551, 555, 556, 557, 558, 567, 568, 569, 573, 574, 575, 588], "expand": [133, 351, 396, 438], "expand_map": 133, "expans": [50, 52, 53], "expcutoffpowerlaw": 557, "expcutoffpowerlaw3fglspectralmodel": [263, 409, 460, 496, 556], "expcutoffpowerlawnormspectralmodel": [234, 263, 453, 496, 557], "expcutoffpowerlawspectralmodel": [19, 20, 26, 80, 222, 223, 226, 230, 232, 233, 239, 245, 246, 249, 253, 255, 257, 258, 259, 263, 264, 269, 271, 272, 273, 274, 277, 281, 409, 460, 462, 470, 496, 555, 561], "expdecai": [235, 456, 539, 581], "expdecay_model": [474, 573], "expdecaytemporalmodel": [275, 409, 434, 438, 474, 481, 496, 573], "expect": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 106, 110, 112, 126, 182, 187, 188, 193, 208, 293, 294, 295, 296, 298, 302, 310, 343, 386, 391, 399, 401, 402, 403, 406, 411, 413, 457, 459, 464, 465, 466, 468, 474, 475, 479, 485, 486, 490, 493, 494, 498, 501, 503, 521, 523, 586, 587, 588], "expens": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 462, 475], "experi": [386, 389, 391, 395, 397, 401, 414, 415, 417, 446, 513, 584, 589], "experienc": [395, 422], "experiment": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 402, 585], "expert": 406, "expertis": 403, "expfactor": [273, 274, 568, 569], "expir": 399, "explain": [87, 91, 386, 389, 391, 400, 403, 405, 406, 412, 417, 419, 421, 432, 438, 457, 462, 464, 486, 490, 494, 496, 500, 525, 583, 585], "explan": [121, 125, 129, 133, 137, 387, 391, 424, 485, 589], "explicit": [87, 91, 196, 198, 386, 387, 402, 404, 410, 537, 589], "explicitli": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 313, 396, 408, 418, 428, 475, 495, 523, 537, 589], "explor": [197, 198, 200, 206, 209, 210, 394, 402, 415, 423, 456, 462, 467, 470, 473, 476, 477, 479, 480, 484, 485, 487, 488, 495, 502, 503, 509, 511, 525, 534], "explos": 52, "expomap": 399, "expon": [409, 496], "exponenti": [28, 30, 36, 39, 40, 77, 232, 233, 234, 235, 272, 273, 274, 387, 397, 432, 456, 470, 474, 481, 539, 571], "exponentialcutoffpowerlaw": 561, "export": [84, 87, 90, 91, 103, 105, 106, 107, 126, 127, 128, 389, 410, 413, 419, 421, 432, 442, 449, 450, 453, 463, 496, 502, 503, 509], "expos": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 395, 400, 401, 402, 405, 406, 451, 453, 454, 493, 505, 523, 524, 583], "exposur": [16, 83, 88, 101, 103, 106, 107, 108, 110, 111, 112, 125, 137, 144, 155, 156, 162, 165, 167, 170, 172, 177, 184, 187, 188, 189, 191, 192, 193, 268, 304, 307, 310, 392, 395, 396, 397, 398, 399, 410, 430, 435, 443, 445, 446, 447, 449, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 472, 474, 475, 478, 480, 481, 484, 488, 492, 493, 494, 502, 509, 510, 521, 530, 533, 538, 587], "exposure_fil": 101, "exposure_geom": 156, "exposure_hdu": [155, 156, 162, 167, 170], "exposure_hdu_band": [155, 156, 162, 167, 170], "exposure_hpx": 501, "exposure_map": [155, 156, 162, 167, 170, 187, 188, 193, 491], "exposure_max": 488, "exposure_min": 488, "exposure_tim": 399, "express": [125, 141, 293, 295, 397, 409, 410, 453, 468, 490, 491, 496, 498, 521, 537, 544, 586, 587, 588], "exptest": 444, "extend": [15, 19, 20, 22, 26, 69, 72, 87, 91, 92, 100, 172, 199, 202, 210, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 252, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 294, 393, 397, 398, 399, 400, 406, 408, 409, 410, 413, 419, 431, 433, 438, 456, 461, 462, 466, 475, 479, 487, 493, 494, 495, 496, 501, 505, 533, 534], "extended_archive_v18": 549, "extended_source_spectral_analysi": [456, 459, 461], "extens": [41, 154, 197, 198, 200, 202, 209, 210, 224, 225, 228, 229, 238, 241, 252, 254, 256, 265, 266, 270, 276, 280, 388, 391, 392, 393, 394, 395, 397, 399, 401, 402, 403, 404, 405, 406, 416, 417, 441, 473, 474, 475, 496, 585], "extent": [208, 228, 252, 400, 466, 496], "extern": [116, 387, 412, 439, 443, 444, 447, 500, 525], "extnam": 491, "extra": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 90, 102, 105, 127, 195, 196, 201, 205, 206, 208, 214, 215, 217, 276, 277, 311, 385, 387, 393, 394, 400, 402, 403, 406, 412, 413, 443, 446, 447, 458, 493, 494, 525, 538], "extra_term": 310, "extract": [16, 84, 90, 100, 103, 105, 106, 107, 111, 112, 126, 127, 128, 133, 155, 156, 162, 167, 170, 173, 178, 179, 184, 186, 194, 197, 198, 199, 200, 202, 207, 208, 209, 210, 278, 386, 396, 401, 410, 412, 413, 440, 441, 452, 453, 457, 459, 462, 463, 464, 465, 470, 471, 474, 475, 476, 478, 484, 488, 489, 493, 509, 521, 529, 534], "extragalact": [230, 458, 500], "extrapol": [102, 151, 152, 153, 177, 197, 198, 200, 206, 209, 210, 230, 281, 325, 326, 438, 443, 445, 446, 454, 491, 493, 500, 501, 537], "extras_requir": 403, "extrem": [386, 413, 493, 544], "ey": 415, "f": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 137, 150, 204, 215, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 312, 313, 340, 386, 389, 403, 408, 409, 414, 418, 419, 421, 440, 449, 457, 459, 462, 463, 465, 471, 472, 473, 474, 475, 480, 481, 482, 484, 486, 487, 490, 492, 494, 496, 497, 498, 501, 502, 507, 509, 510, 511, 519, 534, 551, 561, 572, 573, 574, 575, 576, 577, 578, 585, 586, 587], "f0": [279, 579], "f06": 48, "f06b": [49, 515], "f06p": 49, "f1": [279, 579], "f2": [279, 579], "f4": [152, 157, 464, 488, 491, 493, 500, 501], "f8": [491, 501], "f_": [299, 301, 312, 521], "f_0": [257, 564], "f_dead": [83, 88], "f_i": 299, "f_max": 485, "f_max_err": 485, "f_mean": 485, "f_mean_err": 485, "f_min": 485, "f_min_err": 485, "f_pp": 300, "f_var": 300, "fabio": [399, 404, 415, 428, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 445, 447, 449, 451, 452, 453, 454], "face": [391, 394], "facecolor": [383, 458, 462, 464, 472, 473, 476, 482, 486, 542, 543, 544], "facil": 411, "fact": [19, 20, 97, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 412, 459, 538], "facto": 412, "factor": [19, 20, 23, 103, 104, 106, 107, 110, 111, 112, 121, 125, 126, 155, 156, 158, 162, 164, 165, 166, 167, 168, 170, 177, 184, 190, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 213, 218, 219, 220, 221, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 254, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 279, 280, 282, 294, 386, 399, 401, 415, 434, 454, 457, 465, 466, 467, 470, 472, 476, 478, 481, 488, 489, 492, 496, 500, 521, 538, 551], "factor1": [19, 20, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280], "factor_max": [19, 20, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280], "factor_min": [19, 20, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280], "factori": [197, 198, 209, 210, 400, 405, 409, 536, 538], "factoris": [268, 409, 496, 582], "fail": [16, 84, 90, 105, 127, 215, 387, 389, 400, 415, 416, 417, 441, 454, 471, 501], "failur": [449, 452], "faint": 586, "fair": [386, 412], "fair4r": [386, 412], "fake": [103, 106, 107, 111, 112, 398, 399, 430, 464, 465, 478, 481, 498], "fall": [77, 141, 180, 207, 228, 252, 386, 393, 395, 396, 403, 415, 447, 448, 485], "fallback": 386, "fals": [16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 82, 83, 84, 86, 87, 88, 90, 91, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 120, 125, 126, 127, 128, 129, 133, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 177, 184, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 294, 313, 326, 343, 349, 352, 354, 355, 383, 386, 400, 402, 409, 414, 415, 446, 447, 453, 457, 458, 459, 462, 463, 464, 465, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 501, 509, 510, 511, 522, 525, 532, 534, 535, 549, 561, 570], "falsifi": 498, "famili": 412, "familiar": [403, 404, 493, 494, 511], "fanci": [386, 482], "far": [394, 399, 401, 403, 407, 410, 413, 415, 423, 438, 474, 513], "fashion": [401, 406], "fast": [386, 400, 404, 490], "faster": [87, 91, 138, 147, 197, 198, 200, 206, 209, 210, 364, 453, 466], "faucher": [30, 31, 32, 33, 37, 39, 45], "faucherkaspi2006": [28, 29, 35, 36, 39, 40, 48], "faucherkaspi2006velocitybimod": 49, "faucherkaspi2006velocitymaxwellian": 49, "faucherspir": 515, "favour": [391, 399, 414, 498], "favourit": 472, "fc": [496, 538], "fcluster": [311, 497], "fcluster_kwarg": [311, 497], "fcn": [415, 490], "fdx": 386, "fe": 284, "feasibl": [400, 405, 465, 478, 488], "featur": [6, 13, 87, 91, 96, 121, 145, 311, 312, 376, 377, 386, 389, 393, 395, 396, 397, 398, 400, 402, 403, 408, 409, 410, 412, 413, 414, 420, 425, 428, 429, 430, 431, 432, 434, 435, 438, 442, 445, 446, 447, 448, 485, 493, 494, 496, 497, 523, 561], "feature_irf": 497, "features_irf": [96, 311, 312, 497], "feb": [392, 393, 403, 407, 423, 425], "februari": 425, "fed": 464, "feedback": [389, 391, 395, 400, 402, 403, 406, 407, 409, 415, 416, 446, 491, 525], "feedstock": [416, 417], "feel": [396, 585], "feijen": [451, 452, 453, 454], "feldman": [429, 435, 443, 445, 584], "feldman1998": [584, 587], "fellowship": 412, "felt": 386, "fermi": [55, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 101, 129, 130, 132, 137, 197, 198, 200, 206, 207, 209, 210, 228, 230, 252, 284, 286, 291, 393, 394, 395, 396, 398, 399, 402, 403, 406, 417, 419, 424, 426, 427, 430, 432, 435, 439, 442, 443, 444, 445, 446, 447, 454, 456, 458, 460, 466, 474, 476, 487, 493, 494, 495, 496, 504, 505, 511, 513, 522, 525, 530, 549, 559, 564, 582, 589], "fermi_3fhl": [83, 197, 198, 200, 206, 209, 210, 495, 501, 511], "fermi_3fhl_events_select": [83, 501], "fermi_3fhl_exposure_cube_hpx": 501, "fermi_3fhl_psf_gc": 501, "fermi_bkg_model": 495, "fermi_ct": 132, "fermi_dataset": [228, 252, 291, 495, 501], "fermi_lat": [406, 447, 456, 501, 504], "fermi_model": 501, "fermi_prof": 130, "fermi_ts_imag": 387, "fermilat": 458, "fermipi": [101, 393, 395, 398, 402, 406, 410, 444, 446, 501, 513], "fermitool": 402, "fetch": [15, 386, 394, 416, 426, 439, 509, 585], "few": [82, 83, 87, 88, 91, 385, 386, 387, 389, 391, 392, 393, 394, 396, 398, 400, 404, 406, 411, 415, 416, 417, 423, 437, 448, 450, 453, 454, 459, 463, 468, 470, 472, 487, 489, 490, 493, 500, 509, 510, 534, 538, 590], "fewer": [400, 406], "ff": 412, "fft": 210, "fftconvolv": 210, "fgl": [207, 494], "fgst": [196, 197, 198, 200, 201, 202, 208, 209, 210, 493], "fhboezad": 492, "fhit": 502, "fi_ao5ja": 496, "fidalgo": [396, 401, 427, 447, 448], "fiduci": 493, "field": [16, 42, 50, 51, 54, 83, 84, 87, 90, 91, 105, 127, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 168, 169, 174, 236, 253, 315, 319, 373, 386, 400, 412, 413, 423, 428, 433, 440, 447, 462, 464, 468, 470, 472, 474, 491, 492, 494, 500, 501, 525, 527, 528, 529, 530, 531, 532, 534, 561, 584], "fieldinfo": [16, 84, 90, 105, 127], "fig": [210, 374, 457, 459, 462, 463, 464, 465, 466, 468, 470, 471, 472, 473, 476, 479, 481, 482, 486, 490, 494, 498, 510, 534, 535, 544, 548, 551, 583], "figsiz": [88, 103, 106, 107, 111, 112, 131, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 197, 198, 200, 206, 209, 210, 213, 374, 459, 462, 465, 466, 468, 470, 471, 472, 473, 479, 480, 481, 482, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503, 510, 534, 544, 548, 551], "figur": [88, 103, 106, 107, 111, 112, 131, 151, 152, 154, 155, 156, 157, 158, 164, 165, 166, 167, 168, 170, 197, 198, 200, 206, 209, 210, 213, 364, 373, 374, 380, 386, 387, 391, 406, 417, 458, 462, 466, 470, 472, 473, 474, 476, 479, 480, 485, 486, 487, 488, 490, 492, 493, 495, 496, 500, 501, 502, 503, 585], "file": [11, 15, 16, 26, 65, 66, 67, 82, 83, 85, 86, 87, 88, 91, 93, 94, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 178, 183, 197, 198, 200, 204, 206, 209, 210, 216, 228, 230, 243, 252, 276, 277, 278, 279, 280, 281, 321, 349, 352, 355, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 405, 406, 407, 409, 410, 413, 414, 416, 417, 418, 419, 421, 423, 431, 432, 438, 440, 442, 444, 445, 446, 447, 449, 450, 452, 453, 454, 456, 457, 461, 464, 465, 469, 470, 472, 474, 475, 477, 478, 481, 483, 487, 488, 492, 493, 494, 495, 496, 499, 502, 503, 504, 505, 506, 508, 511, 512, 513, 524, 525, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 589], "file_dir": 321, "file_model": 474, "file_nam": 321, "filemod": [16, 463, 467, 468, 470, 509, 585], "filenam": [11, 16, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 85, 86, 87, 91, 94, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 126, 128, 130, 132, 134, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 197, 198, 200, 204, 206, 209, 210, 228, 230, 243, 252, 276, 277, 278, 279, 280, 281, 286, 288, 290, 291, 321, 352, 355, 365, 386, 387, 391, 435, 454, 462, 463, 467, 468, 470, 471, 475, 476, 487, 488, 489, 493, 494, 495, 496, 500, 501, 509, 510, 511, 522, 525, 527, 528, 529, 531, 549, 551, 579, 580, 585], "filename_1": 522, "filename_2": 522, "filename_arf": 109, "filename_bkg": 109, "filename_model": [100, 126, 291, 495, 501], "filename_rmf": 109, "filepath": 16, "fill": [16, 84, 85, 87, 90, 91, 103, 105, 106, 107, 110, 111, 112, 127, 154, 165, 196, 197, 198, 200, 206, 208, 209, 210, 281, 386, 394, 395, 399, 402, 406, 412, 416, 417, 432, 439, 446, 449, 459, 474, 475, 487, 491, 492, 494, 501, 510, 537], "fill_between": [19, 20, 26, 131, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 482], "fill_by_coord": [165, 197, 198, 200, 206, 209, 210, 493, 501, 537], "fill_by_idx": [197, 198, 200, 206, 209, 210, 537], "fill_by_pix": [197, 198, 200, 206, 209, 210, 537], "fill_ev": [197, 198, 200, 206, 209, 210, 441, 452, 464, 493, 501, 507], "fill_nan": 198, "fill_valu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210, 276, 277, 280, 386, 491, 493], "filled_t": [87, 91], "filter": [88, 89, 392, 396, 398, 400, 401, 447, 448, 451, 484, 494, 497, 505, 510, 511], "filter_ev": 89, "filter_gti": 89, "filter_success_nan": [126, 128], "filtered_ev": 89, "filtered_gti": 89, "filterwarn": [481, 482], "final": [133, 294, 386, 387, 393, 394, 396, 399, 400, 402, 403, 405, 407, 409, 411, 412, 417, 432, 433, 434, 457, 458, 459, 460, 462, 470, 472, 474, 475, 479, 480, 482, 486, 488, 490, 492, 494, 497, 501, 502, 505, 509, 510, 511, 521, 522, 523], "finalis": 390, "find": [19, 20, 26, 135, 137, 145, 146, 154, 180, 181, 185, 212, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 304, 386, 391, 397, 399, 405, 416, 417, 418, 438, 440, 446, 447, 452, 453, 460, 462, 466, 487, 488, 493, 496, 500, 503, 511, 585, 587, 588], "find_peak": [146, 447, 466, 472], "find_peaks_in_flux_map": 466, "find_root": 438, "finder": [145, 180, 181, 438, 447, 466], "fine": [292, 326, 399, 468, 488, 501, 538, 585], "finer": [474, 488, 538], "fingertip": 385, "finish": [389, 393, 395, 416, 444, 446], "finit": [100, 103, 106, 107, 111, 112, 155, 156, 162, 167, 183, 198, 206, 210, 278, 404], "fink": [230, 231, 458, 551], "fir": 561, "firefox": [87, 91], "first": [57, 77, 87, 91, 92, 94, 100, 103, 106, 107, 111, 112, 126, 128, 130, 138, 140, 145, 147, 154, 171, 180, 197, 198, 199, 202, 206, 207, 228, 252, 285, 303, 346, 375, 386, 387, 389, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 410, 411, 412, 415, 417, 418, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 445, 447, 448, 449, 450, 452, 454, 457, 459, 460, 462, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 505, 509, 510, 511, 522, 534, 537, 585], "firstli": [387, 473, 474, 489], "firstnam": [87, 91], "fit": [6, 15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 57, 58, 60, 61, 62, 64, 65, 66, 67, 71, 74, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 117, 120, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 174, 177, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 214, 216, 217, 218, 220, 222, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 278, 279, 280, 281, 291, 292, 293, 295, 296, 297, 302, 305, 309, 310, 321, 322, 323, 368, 369, 372, 374, 379, 381, 385, 386, 387, 392, 396, 397, 398, 399, 402, 404, 405, 406, 407, 408, 409, 410, 413, 414, 419, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 443, 445, 446, 447, 448, 450, 452, 453, 454, 456, 457, 461, 465, 466, 468, 469, 473, 474, 475, 476, 477, 479, 480, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 495, 496, 497, 499, 500, 502, 503, 505, 507, 511, 521, 522, 523, 524, 525, 527, 528, 529, 531, 532, 533, 534, 542, 549, 551, 561, 579, 580, 583, 584, 589], "fit2": 495, "fit_covari": [463, 509], "fit_deriv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fit_joint": [459, 462, 470, 471], "fit_prior": 498, "fit_rang": [16, 463, 467, 468, 470, 509], "fit_result": [215, 291, 463, 484, 489, 509], "fit_results_nul": 291, "fit_scipi": 490, "fit_sherpa": 490, "fit_stat_scan": 401, "fit_statist": [386, 468], "fit_statistics_cython": 417, "fitconfig": 16, "fitmc": 404, "fitresult": [215, 440, 452, 454, 490, 510], "fitsfixedwarn": [466, 549], "fitsonli": 500, "fitspectrum": 442, "fitstepresult": [214, 217], "fittabl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "fittable1dmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fitter": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 445, 446, 460], "five": 511, "fix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 85, 88, 94, 95, 108, 109, 137, 149, 167, 169, 184, 215, 254, 255, 260, 280, 389, 391, 392, 393, 397, 398, 401, 403, 408, 410, 411, 412, 416, 417, 419, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 457, 464, 465, 467, 468, 470, 471, 474, 478, 480, 481, 484, 490, 491, 492, 495, 496, 497, 509, 535, 537, 545, 562], "fixed_altaz": 85, "fixed_bin": 149, "fixed_icr": [85, 167, 457, 465, 474, 475, 478, 481], "fixed_offset": [96, 183, 438], "fixed_r_in": 172, "fixed_width": 172, "fixedpointinginfo": [88, 167, 190, 452, 453, 457, 465, 474, 475, 478, 481], "fk5": [538, 549], "fkmqwayc": 484, "flag": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 91, 104, 110, 126, 128, 129, 130, 133, 134, 195, 196, 197, 198, 200, 202, 203, 205, 206, 208, 209, 210, 214, 215, 216, 217, 459, 470, 474, 487, 496], "flake8": 389, "flare": [141, 299, 419, 432, 433, 456, 479, 481, 483, 484, 485, 505, 523, 534], "flask": 446, "flat": [128, 141, 159, 169, 195, 196, 201, 203, 205, 208, 211, 212, 254, 397, 410], "flatten": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 195, 196, 203, 205, 208, 485], "fledg": 414, "flexibl": [82, 337, 386, 391, 395, 396, 397, 400, 402, 406, 407, 413, 493, 525, 582], "float": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 50, 51, 83, 87, 88, 90, 91, 96, 103, 106, 107, 111, 112, 116, 121, 125, 127, 128, 131, 134, 135, 136, 137, 145, 146, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 172, 174, 183, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 211, 212, 215, 217, 218, 220, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 291, 292, 293, 294, 295, 298, 302, 304, 313, 324, 331, 340, 342, 375, 376, 377, 492, 498, 500, 501, 585, 589], "float32": [195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 467, 472, 493], "float64": [87, 91, 113, 118, 154, 157, 386, 414, 423, 489, 491, 493, 523, 585], "float64float64float64": 472, "float64float64float64float64float64float64float64float32bool": 460, "float64float64float64float64float64float64float64float64": 472, "float_a": [87, 91], "flow": [413, 583, 584], "fluctuat": [293, 295, 410, 465, 478, 498, 587], "flux": [15, 19, 20, 26, 41, 46, 67, 71, 73, 74, 75, 77, 78, 79, 80, 83, 88, 100, 102, 103, 106, 107, 111, 112, 121, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 222, 223, 224, 226, 227, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 253, 255, 256, 257, 258, 259, 260, 264, 267, 268, 269, 271, 272, 273, 274, 277, 279, 281, 282, 284, 285, 289, 298, 299, 300, 301, 303, 308, 390, 398, 399, 401, 402, 404, 406, 407, 409, 419, 426, 429, 431, 432, 434, 438, 440, 444, 445, 446, 448, 453, 454, 456, 461, 464, 466, 470, 472, 474, 475, 477, 479, 480, 481, 482, 484, 485, 488, 493, 496, 501, 505, 519, 521, 525, 530, 539, 546, 561, 582, 583, 584, 587], "flux1": 303, "flux2": 303, "flux_err": [19, 20, 26, 126, 128, 137, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 299, 300, 301, 308, 466, 479, 485], "flux_err1": 303, "flux_err2": 303, "flux_errn": [126, 128, 487], "flux_errp": [126, 128, 487], "flux_int_cu": 285, "flux_map": [126, 128, 138, 147, 410, 486], "flux_metadata_fits_kei": 127, "flux_per_omega": 496, "flux_point": [16, 66, 67, 71, 73, 74, 75, 77, 78, 79, 80, 98, 102, 126, 128, 129, 398, 457, 460, 462, 463, 467, 468, 470, 472, 482, 487, 488, 509, 510, 511], "flux_point_dataset": 398, "flux_points_at_tim": 410, "flux_points_ctb_37b": 128, "flux_points_dataset": [462, 472, 482], "flux_points_dataset_no_ul": 462, "flux_points_fermi": 471, "flux_points_hawc": 471, "flux_points_hess": 471, "flux_points_intrins": 458, "flux_points_meta": [71, 74, 75, 78], "flux_points_no_ul": 462, "flux_points_ob": 458, "flux_points_recomput": 128, "flux_points_t": [71, 73, 74, 75, 77, 78, 79, 80], "flux_pr": 102, "flux_profil": [456, 476, 477], "flux_profile_estim": 476, "flux_profile_fermi": 476, "flux_quant": [140, 141, 142, 143, 485], "flux_ref": [126, 128, 410], "flux_sensit": [126, 128], "flux_ul": [126, 128, 137, 487], "fluxestim": [126, 128, 129, 407, 434, 436, 437, 438, 440, 453], "fluxmap": [125, 127, 128, 137, 138, 139, 146, 147, 438, 453, 454, 466, 523], "fluxmapestim": 410, "fluxmapsmetadata": 413, "fluxpoint": [71, 73, 74, 75, 77, 78, 79, 80, 102, 126, 127, 129, 130, 133, 140, 141, 142, 143, 149, 398, 401, 410, 413, 438, 445, 446, 452, 453, 454, 457, 460, 471, 476, 479, 480, 485, 487, 488, 511, 520, 521, 523, 525], "fluxpointdataset": 432, "fluxpointestim": [401, 429, 435, 448], "fluxpointfit": 398, "fluxpointfitt": 447, "fluxpointprofil": 448, "fluxpointsconfig": 16, "fluxpointsdataset": [98, 99, 103, 106, 407, 410, 413, 428, 432, 453, 454, 460, 462, 471, 472, 481, 482, 521], "fluxpointsdatasetmetadata": 413, "fluxpointsestim": [122, 130, 133, 333, 407, 408, 410, 419, 429, 434, 435, 438, 452, 453, 458, 462, 471, 472, 482, 489, 509, 510, 525], "fluxpointsetim": 410, "fluxpointsmetadata": 413, "fluxprofileestim": [122, 438, 451, 453, 476], "fly": 396, "fmoxnqwj": 484, "fmt": [484, 490, 498], "focu": [396, 406, 432, 445, 464, 585], "focus": [396, 412, 415], "fold": [110, 410, 460, 471, 480, 489, 521, 523], "folder": [11, 82, 94, 102, 108, 112, 128, 350, 386, 387, 391, 394, 416, 418, 423, 428, 438, 441, 463, 470, 474, 500, 509, 510, 583, 585], "follow": [15, 19, 20, 43, 44, 80, 82, 83, 84, 90, 91, 103, 105, 107, 108, 109, 111, 112, 126, 127, 128, 131, 137, 139, 145, 148, 196, 197, 198, 200, 204, 209, 210, 215, 268, 285, 291, 376, 377, 379, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 430, 431, 432, 434, 435, 438, 440, 441, 447, 448, 452, 453, 454, 457, 458, 459, 460, 462, 463, 465, 466, 467, 470, 471, 474, 475, 479, 480, 481, 482, 484, 486, 487, 489, 490, 492, 493, 494, 495, 496, 500, 505, 509, 511, 513, 515, 516, 521, 523, 525, 527, 529, 530, 534, 536, 537, 538, 539, 547, 548, 552, 555, 556, 558, 559, 563, 564, 566, 567, 568, 569, 570, 583, 584, 586, 587, 588, 590], "font": [197, 198, 200, 206, 209, 210, 387, 493], "fontsiz": [383, 482, 490], "foo": [87, 91], "footprint": [197, 198, 200, 206, 208, 209, 210, 545], "footprint_rectangle_sky_region": 208, "forbid": [16, 84, 90, 105, 127], "forbidden": 495, "forc": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 155, 156, 162, 165, 167, 170, 208, 210, 313, 391, 401, 428], "forecom": [386, 411], "foremost": 585, "forens": 402, "foreseen": [396, 411], "forev": 428, "forg": [385, 403, 416, 417, 419, 420, 423, 446], "forget": [463, 473, 509], "forgot": 386, "forgotten": 386, "fork": [389, 416], "form": [16, 84, 87, 90, 91, 103, 105, 127, 167, 170, 205, 325, 386, 392, 396, 401, 409, 411, 413, 415, 424, 446, 454, 494, 498, 522, 530, 543, 553, 583], "formal": [391, 414, 466], "format": [16, 83, 84, 85, 86, 87, 88, 90, 91, 94, 103, 105, 106, 107, 109, 111, 112, 126, 127, 128, 129, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 190, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 228, 236, 243, 252, 268, 278, 281, 321, 343, 367, 368, 375, 385, 394, 395, 396, 397, 398, 400, 402, 410, 412, 413, 417, 426, 438, 440, 443, 447, 449, 450, 452, 453, 454, 458, 460, 462, 463, 464, 466, 467, 468, 470, 472, 474, 475, 476, 479, 481, 485, 487, 489, 491, 493, 494, 496, 500, 501, 502, 503, 509, 511, 513, 519, 521, 522, 523, 524, 527, 528, 529, 530, 531, 538, 579, 580, 584, 585, 586], "format_plot_xaxi": [199, 202, 207, 491], "format_plot_yaxi": [202, 491], "formatt": [375, 493], "formatwarn": 386, "former": [412, 429, 434, 459, 495, 583, 586], "formula": [28, 29, 30, 31, 35, 36, 37, 39, 40, 50, 52, 53, 166, 258, 259, 310, 457, 586], "forthcom": 489, "forum": 416, "forward": [19, 20, 26, 83, 87, 91, 103, 106, 107, 111, 112, 130, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 179, 201, 205, 206, 207, 215, 222, 223, 226, 227, 230, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 245, 246, 249, 253, 255, 257, 258, 259, 260, 264, 267, 268, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 286, 311, 375, 380, 387, 393, 396, 410, 460, 471, 480, 489, 521, 523, 538], "forwardref": [16, 84, 90, 105, 127], "found": [19, 20, 26, 82, 86, 87, 91, 141, 180, 185, 204, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 299, 389, 390, 394, 401, 411, 412, 432, 435, 436, 437, 441, 468, 474, 485, 496, 498, 503, 522, 523, 534, 535], "four": [389, 397, 410, 416, 479, 500, 501, 529, 531, 537, 584], "fov": [125, 151, 152, 174, 175, 189, 190, 192, 194, 236, 386, 392, 400, 443, 446, 447, 454, 467, 484, 491, 494, 495, 500, 510, 533, 584], "fov_": 386, "fov_align": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 491], "fov_background": [467, 509], "fov_bkg_mak": [492, 532], "fov_lat": [152, 491, 500, 530], "fov_lat_axi": 491, "fov_lon": [152, 491, 500, 530], "fov_lon_axi": 491, "fov_theta": 386, "fovalign": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 491], "fovbackground": [414, 434], "fovbackgroundmak": [175, 433, 438, 492, 509, 510], "fovbackgroundmodel": [15, 103, 107, 110, 111, 115, 174, 248, 414, 435, 452, 453, 454, 470, 471, 474, 475, 478, 488, 495, 509, 510, 532, 545], "fp": [126, 128, 149, 410, 509, 523, 525], "fp_dataset": [462, 488], "fp_dnde": 410, "fp_energy_flux": 410, "fp_estim": 489, "fp_result": 489, "fpe": [333, 408, 410, 458, 462, 472, 482, 510], "fpe_no_ul": 462, "fpp": 300, "fpp_err": [300, 485], "fpp_tabl": 485, "fr": 412, "frac": [17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 54, 106, 112, 154, 157, 213, 234, 239, 257, 259, 272, 273, 299, 301, 312, 409, 521, 529, 530, 542, 543, 544, 547, 548, 552, 555, 556, 558, 559, 563, 564, 566, 567, 568, 569, 573, 574, 575, 577, 587, 588], "frac_remain": 415, "fraction": [19, 20, 26, 50, 52, 53, 83, 88, 89, 90, 125, 136, 143, 158, 164, 166, 167, 168, 170, 205, 211, 212, 222, 223, 226, 229, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 300, 301, 396, 401, 415, 445, 453, 457, 465, 474, 478, 488, 491, 494, 500, 501, 502], "frame": [16, 83, 85, 91, 94, 95, 96, 103, 106, 107, 111, 112, 113, 114, 115, 118, 130, 145, 167, 177, 180, 190, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 224, 225, 229, 238, 241, 254, 256, 265, 266, 268, 270, 276, 280, 311, 312, 347, 362, 386, 387, 395, 397, 400, 410, 428, 429, 431, 432, 433, 459, 462, 463, 464, 465, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 488, 491, 492, 493, 494, 495, 496, 497, 501, 502, 503, 509, 510, 511, 529, 534, 536, 537, 538, 542, 543, 544, 545, 546, 547, 548, 549], "framework": [397, 399, 400, 402, 404, 405, 409, 415, 428, 429, 435, 447, 482, 496, 515, 525], "franceschini": [230, 231, 281, 452, 458, 551], "franceschini17": [231, 458, 551], "franceschni": 551, "frd_ab": 231, "free": [50, 52, 53, 77, 103, 106, 107, 111, 112, 129, 133, 134, 177, 215, 219, 221, 254, 255, 291, 391, 401, 428, 454, 458, 463, 465, 467, 468, 470, 472, 473, 478, 479, 481, 484, 488, 490, 492, 495, 496, 498, 501, 505, 509, 510, 513, 523, 532, 545, 561, 562, 585, 587, 588], "free_paramet": [219, 221, 291, 415, 484, 490, 495], "freedom": [123, 126, 128, 139, 148, 412, 453, 473, 523, 587, 588], "freez": [19, 20, 26, 87, 91, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 401, 412, 428, 438, 453, 467, 478, 484, 490, 496, 561], "freeze_al": [219, 221], "frenk": 513, "frequenc": [279, 294, 517], "frequent": [202, 386, 395, 404, 412, 415, 480, 481, 485, 494, 525, 526, 585], "frequentist": 404, "fridai": 395, "friendli": [386, 391, 413, 449, 463, 509, 525, 590], "from": [13, 15, 16, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 179, 180, 183, 184, 186, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 291, 292, 293, 294, 295, 298, 301, 311, 312, 313, 323, 331, 333, 335, 336, 340, 343, 344, 348, 353, 365, 366, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 419, 421, 423, 424, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589], "from_align": [208, 438], "from_attribut": [16, 84, 90, 105, 127], "from_bound": [157, 159, 167, 196, 202, 208, 410, 471, 474, 475, 488, 491, 492, 493, 503, 537, 538], "from_covariance_matrix": 414, "from_default": 201, "from_diagonal_respons": [113, 118, 154, 155, 156, 466, 501], "from_dict": [19, 20, 26, 102, 103, 106, 107, 111, 112, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 431, 438, 498], "from_dir": [82, 89, 96, 177, 311, 312, 423, 459, 462, 464, 472, 480, 482, 484, 492, 497, 500, 503, 507, 510, 522, 525, 532, 534, 535], "from_edg": [156, 197, 198, 200, 202, 206, 209, 210, 465, 478, 481, 491, 501, 502], "from_edisp_kernel": 155, "from_energy_bound": [103, 106, 107, 111, 112, 113, 118, 154, 156, 157, 159, 165, 167, 177, 195, 196, 201, 202, 205, 208, 210, 387, 457, 459, 462, 464, 471, 472, 474, 475, 480, 482, 484, 488, 491, 492, 496, 501, 502, 510, 529, 532, 534, 535, 538], "from_energy_edg": [154, 202, 381, 488, 491], "from_events_fil": [82, 474, 500], "from_factor_matrix": 213, "from_fil": [82, 522], "from_fits_head": 85, "from_gauss": [154, 155, 159, 165, 167, 170, 529], "from_gaussian": 435, "from_geom": [103, 106, 107, 111, 112, 155, 156, 165, 167, 170, 197, 198, 200, 204, 206, 209, 210, 432, 451, 488, 493, 494, 538, 544], "from_gti": 207, "from_gti_bound": 207, "from_hdu": [196, 198, 210], "from_hdulist": [103, 106, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 204, 205, 206, 208, 209, 210, 493], "from_head": [84, 90, 105, 127, 196, 208, 413], "from_irf": 169, "from_log10": [245, 246, 559], "from_map": [126, 128], "from_map_dataset": [106, 112], "from_nam": [468, 472], "from_nod": 202, "from_orm": [16, 84, 90, 105, 127], "from_panda": [87, 91], "from_paramet": [19, 20, 26, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283], "from_parametr": [157, 527], "from_posit": [224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280, 475], "from_refer": 409, "from_region": [205, 229, 452, 534], "from_region_map": 281, "from_spatial_model": 165, "from_spectrum_dataset": [112, 457, 465], "from_stack": [83, 86, 92, 126, 128, 197, 198, 199, 200, 202, 206, 209, 210, 213, 219, 221, 452, 453, 522], "from_tabl": [128, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 199, 201, 202, 206, 207, 243, 449, 457], "from_table_hdu": [86, 201, 202], "from_time_bound": 207, "from_time_edg": [207, 484, 485], "from_time_interv": 86, "from_wcs_til": 198, "from_yaml": [16, 228, 252, 397, 463], "fromnumer": [464, 484], "front": [395, 415, 416, 445], "frozen": [19, 20, 26, 102, 129, 133, 174, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 401, 409, 414, 430, 453, 458, 459, 460, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 484, 487, 488, 489, 490, 494, 495, 496, 498, 501, 509, 510, 511, 523, 532, 561, 570], "fr\u00f6se": [453, 454], "ftol": 490, "ftool": 401, "fulfil": [413, 493], "full": [82, 129, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 198, 216, 228, 252, 321, 382, 385, 386, 391, 395, 396, 399, 401, 402, 406, 412, 414, 415, 418, 425, 428, 438, 440, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 507, 509, 510, 511, 525, 536, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583], "full_enclosur": [190, 491], "full_output": [19, 20, 26, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283], "fulli": [133, 195, 196, 205, 208, 279, 395, 396, 403, 407, 412, 417, 420, 430, 432, 440, 459, 485, 496, 500, 502, 503], "fun": [386, 389], "func": [17, 18, 21, 22, 24, 25, 27, 197, 198, 200, 206, 209, 210, 287, 334, 338, 339, 379, 468, 470], "function": [6, 15, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 82, 83, 85, 87, 88, 91, 100, 101, 102, 103, 104, 106, 107, 110, 111, 112, 121, 126, 133, 137, 138, 140, 141, 142, 143, 146, 147, 148, 157, 158, 159, 161, 162, 164, 166, 167, 168, 170, 197, 198, 200, 202, 206, 209, 210, 215, 216, 217, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 267, 268, 269, 271, 272, 273, 274, 277, 281, 287, 293, 294, 295, 303, 304, 308, 326, 334, 335, 337, 338, 342, 343, 353, 371, 374, 375, 379, 381, 383, 385, 389, 392, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 419, 421, 423, 424, 426, 428, 429, 430, 431, 432, 434, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 457, 458, 462, 463, 464, 465, 466, 470, 472, 473, 474, 475, 476, 484, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 502, 503, 505, 509, 510, 511, 513, 514, 515, 520, 521, 522, 524, 525, 534, 536, 538, 543, 544, 546, 573, 582, 583, 584, 585, 586, 588, 590], "functional_model": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "fundament": [399, 408, 413, 415], "further": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 121, 125, 129, 130, 133, 137, 203, 337, 386, 389, 390, 392, 395, 396, 399, 400, 403, 405, 406, 407, 408, 409, 433, 434, 435, 438, 440, 468, 474, 486, 487, 488, 489, 493, 510, 511, 514, 515, 530, 585], "furthermor": 500, "futur": [104, 110, 386, 391, 396, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 446, 470, 476, 493, 501, 514, 523, 582], "fvar": [143, 301, 401, 445], "fvar_err": [301, 485], "fvar_tabl": 485, "g": [13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 51, 52, 53, 54, 59, 67, 83, 85, 86, 87, 91, 95, 116, 145, 196, 197, 198, 200, 202, 206, 208, 209, 210, 215, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 299, 313, 353, 375, 381, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 412, 413, 415, 416, 417, 419, 420, 421, 438, 440, 444, 446, 447, 448, 449, 452, 459, 460, 462, 463, 465, 472, 474, 476, 486, 487, 488, 490, 493, 494, 495, 496, 500, 501, 505, 511, 513, 517, 520, 521, 522, 523, 525, 530, 535, 536, 537, 544, 582, 584, 585, 587, 589, 590], "g0": [470, 501], "g28": 67, "g320": 487, "g82d5eb34": [105, 127, 424, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "g_1": 157, "g_2": 157, "g_3": 157, "ga": 476, "gabriel": 447, "gadf": [83, 84, 85, 86, 88, 90, 95, 103, 105, 106, 107, 111, 112, 127, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 396, 399, 410, 413, 438, 440, 449, 452, 454, 489, 491, 493, 509, 521, 525, 538, 584], "gain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 391, 403, 446], "gal_diffus": 402, "galact": [17, 18, 21, 22, 24, 25, 27, 28, 29, 35, 36, 37, 45, 47, 67, 68, 83, 91, 103, 106, 107, 111, 112, 113, 118, 129, 130, 132, 167, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 229, 238, 241, 256, 265, 266, 320, 347, 386, 387, 397, 400, 406, 426, 428, 445, 458, 459, 462, 465, 466, 467, 470, 472, 473, 474, 476, 478, 481, 486, 487, 488, 493, 494, 495, 496, 500, 511, 513, 516, 520, 535, 536, 537, 538, 542, 543, 544, 545, 546, 547, 548, 584, 590], "galactic_median": 83, "galactocentr": 41, "galaxi": [17, 21, 22, 28, 30, 35, 39, 40, 41, 230, 300, 301, 426, 459], "galelli": [451, 453, 454], "gallant": 446, "galleri": [417, 433, 435, 438, 449, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 526, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "gallery_jupyt": 539, "gallery_python": 539, "galprop": [196, 197, 198, 200, 209, 210], "galprop2": [196, 197, 198, 200, 209, 210], "gambit": 513, "gamma": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 36, 37, 52, 53, 57, 59, 63, 66, 67, 79, 83, 125, 129, 136, 166, 190, 197, 198, 200, 209, 210, 230, 232, 233, 234, 257, 258, 259, 281, 285, 340, 386, 392, 394, 397, 398, 399, 400, 410, 417, 419, 423, 424, 429, 443, 444, 445, 446, 447, 457, 458, 460, 462, 463, 464, 468, 471, 472, 473, 474, 476, 487, 491, 493, 494, 497, 500, 502, 503, 509, 511, 513, 515, 516, 520, 521, 522, 525, 528, 530, 532, 534, 535, 544, 551, 555, 556, 563, 564, 582, 583, 584, 585, 586, 587, 590], "gamma1": [222, 552, 566], "gamma2": [222, 552, 566], "gamma_1": [269, 272, 273, 274, 409, 567, 568, 569], "gamma_2": [269, 272, 273, 274, 409, 567, 568, 569], "gamma_min": [136, 457], "gamma_min_sensit": 125, "gammacat": [55, 66, 445, 460], "gammalib": [386, 399], "gammamc_dif": 513, "gammapi": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 404, 408, 409, 410, 414, 415, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 504, 505, 507, 509, 510, 511, 514, 515, 517, 518, 519, 525, 526, 527, 528, 529, 531, 535, 536, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584, 585, 586, 587, 590], "gammapy_analysis_config": 402, "gammapy_data": [26, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82, 83, 86, 88, 89, 91, 94, 96, 102, 103, 106, 107, 111, 112, 117, 120, 121, 125, 126, 128, 130, 132, 134, 137, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 167, 177, 197, 198, 200, 206, 209, 210, 215, 228, 231, 243, 252, 281, 291, 311, 312, 365, 374, 379, 381, 386, 387, 389, 402, 415, 419, 421, 423, 427, 428, 429, 438, 447, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 507, 509, 510, 511, 522, 523, 525, 527, 528, 529, 531, 532, 534, 535, 549, 579, 580], "gammapy_extra": 427, "gammapybaseconfig": 16, "gammapydeprecationwarn": [386, 476, 501, 557], "gammmapi": [396, 403], "gap": 140, "garcia": 447, "gather": [400, 406, 416], "gauss": [42, 51, 54, 103, 106, 107, 131, 132, 158, 198, 210, 238, 239, 240, 241, 409, 444, 482, 493, 496, 511, 542, 543], "gauss_elong": 496, "gauss_temp": 496, "gaussian": [67, 68, 80, 81, 102, 121, 131, 138, 147, 154, 155, 159, 165, 167, 170, 198, 210, 237, 238, 239, 240, 241, 242, 247, 300, 301, 397, 405, 409, 414, 415, 431, 435, 454, 456, 458, 460, 462, 472, 474, 478, 481, 485, 487, 490, 491, 496, 498, 500, 511, 529, 531, 539, 550, 571, 581], "gaussian1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "gaussian2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50], "gaussian2dkernel": 121, "gaussian_compon": [67, 487], "gaussian_error": [138, 147], "gaussian_filt": [131, 210], "gaussian_model": 574, "gaussian_sigma": 490, "gaussianband2d": 446, "gaussianprior": [414, 458, 498], "gaussianspatialmodel": [80, 81, 117, 120, 262, 409, 431, 472, 473, 478, 496, 543], "gaussianspectralmodel": [263, 409, 496, 558], "gaussiantemporalmod": 438, "gaussiantemporalmodel": [275, 409, 434, 496, 574], "gb": [394, 396, 500, 502], "gc": [86, 103, 106, 107, 111, 112, 117, 120, 121, 125, 130, 132, 137, 145, 146, 228, 252, 374, 379, 381, 389, 466, 467, 470, 472, 474, 476, 486, 488, 489, 493, 495, 496, 500, 501, 511, 513, 522, 523], "gc_3fhl": 511, "gc_3fhl_cutout": 511, "gc_3fhl_smooth": 511, "gc_imag": 476, "gc_po": 501, "gc_sep": 495, "gca": 458, "gcc": 423, "ge": 90, "geminga": 59, "gen_gaussian_model": 575, "gener": [16, 27, 33, 42, 45, 46, 47, 56, 82, 83, 84, 87, 88, 90, 91, 92, 101, 103, 104, 105, 106, 107, 110, 111, 112, 119, 127, 156, 167, 170, 197, 198, 200, 201, 202, 206, 209, 210, 215, 227, 235, 240, 241, 242, 243, 244, 260, 267, 276, 277, 279, 281, 282, 294, 335, 337, 340, 341, 342, 343, 350, 387, 389, 395, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 411, 415, 416, 417, 420, 423, 429, 433, 434, 435, 438, 440, 445, 449, 452, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 521, 525, 530, 536, 538, 539, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 576, 577, 578, 579, 580, 581, 585, 587, 588], "generalconfig": 16, "generalis": [128, 405, 432, 491], "generalized_gaussian_model": 575, "generalizedgaussianspatialmodel": [262, 435, 496, 544], "generalizedgaussiantemporalmodel": [275, 440, 496, 575], "generalrandom": 430, "generatejsonschema": [16, 84, 90, 105, 127], "gengauss": [242, 496, 544], "geodeticloc": 94, "geolat": 459, "geom": [16, 23, 83, 103, 106, 107, 111, 112, 113, 116, 118, 119, 125, 126, 128, 130, 137, 155, 156, 165, 167, 170, 177, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 204, 205, 206, 208, 209, 210, 224, 225, 228, 229, 236, 238, 241, 252, 254, 256, 265, 266, 268, 270, 276, 280, 397, 399, 401, 435, 438, 447, 453, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 472, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 501, 502, 509, 510, 511, 523, 532, 534, 535, 536, 537, 538, 541, 543, 544, 545, 546], "geom_24_energy_bin": 538, "geom_6_energy_bin": 538, "geom_edisp": [103, 106, 107, 111, 112, 488], "geom_energi": 538, "geom_exposur": [103, 106, 107, 111, 112, 451, 488], "geom_imag": [468, 472, 538], "geom_irf": 399, "geom_psf": [103, 106, 107, 111, 112, 488], "geom_tru": 432, "geomconfig": 16, "geometri": [23, 83, 100, 103, 106, 107, 111, 112, 114, 115, 116, 119, 126, 128, 137, 138, 139, 147, 155, 156, 162, 165, 167, 170, 174, 177, 179, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 224, 225, 228, 229, 238, 241, 252, 254, 256, 265, 266, 268, 270, 276, 280, 382, 392, 398, 401, 402, 432, 438, 449, 454, 462, 463, 464, 465, 467, 468, 470, 474, 475, 478, 488, 489, 492, 501, 502, 521, 523, 525, 533, 537, 583, 584], "geomspac": [128, 414, 489], "geq": [52, 53], "gerrit": 454, "get": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 85, 87, 88, 90, 91, 94, 96, 100, 103, 105, 107, 108, 109, 111, 121, 125, 127, 129, 130, 133, 134, 137, 145, 149, 154, 155, 156, 162, 167, 170, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 213, 219, 221, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 237, 238, 239, 241, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 261, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 283, 284, 321, 337, 386, 387, 391, 392, 393, 394, 395, 396, 400, 401, 403, 410, 412, 413, 414, 417, 418, 420, 421, 423, 424, 427, 429, 444, 445, 446, 447, 454, 457, 463, 465, 466, 470, 471, 472, 478, 480, 484, 487, 488, 490, 491, 492, 494, 495, 496, 498, 500, 501, 502, 503, 505, 509, 510, 511, 513, 521, 525, 538, 584, 588], "get_altaz": [85, 94, 452], "get_bia": 154, "get_bias_energi": 154, "get_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "get_by_coord": [197, 198, 200, 206, 209, 210, 492, 493, 501, 502, 537], "get_by_idx": [197, 198, 200, 206, 209, 210, 493, 537], "get_by_pix": [197, 198, 200, 206, 209, 210, 537], "get_cl": [460, 487, 494], "get_combined_flux_map": 138, "get_combined_significance_map": 139, "get_coord": [195, 196, 201, 205, 208, 431, 438, 447, 475, 493, 494, 534, 538], "get_dataset": [15, 463, 467, 468, 470, 479, 509], "get_devel_vers": 389, "get_edges_fixed_bin": 149, "get_edges_min_t": 149, "get_edisp_kernel": [155, 156, 433, 438, 488, 501, 529], "get_events_meta_data": 399, "get_excess_map": [15, 509], "get_filenam": [108, 109], "get_flux_point": [15, 126, 128, 410, 433, 463, 509], "get_group_by_idx": 410, "get_hdu": 321, "get_icr": [85, 94, 452], "get_idx": [195, 196, 205, 208, 538], "get_image_by_coord": [197, 198, 200, 206, 209, 210, 493], "get_image_by_idx": [197, 198, 200, 206, 209, 210], "get_image_by_pix": [197, 198, 200, 206, 209, 210], "get_index_list": 196, "get_irfs_featur": [311, 312, 452, 497], "get_kernel": 121, "get_light_curv": 15, "get_mean": 154, "get_observ": [15, 82, 96, 311, 312, 429, 440, 459, 462, 463, 464, 467, 468, 470, 472, 474, 479, 480, 482, 484, 492, 497, 502, 503, 507, 509, 510, 525, 532, 534, 535], "get_ogip_meta": 109, "get_pix": 208, "get_pointing_altaz": [88, 497], "get_pointing_icr": [88, 452, 472, 492, 510], "get_psf_kernel": [165, 167, 170, 453, 454, 501], "get_random_st": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 294, 335, 340, 341, 342, 343, 386], "get_rebinned_axi": 480, "get_resolut": 154, "get_respons": 445, "get_scal": 121, "get_scale_model": [129, 130, 133], "get_spectrum": [197, 198, 200, 206, 209, 210], "get_subcovari": 213, "get_transform": [466, 472, 542, 543], "get_valid_path": 108, "get_wcs_coord_and_weight": 205, "getattr": 414, "getitem": 445, "getlogg": [386, 468, 472, 479, 480, 481, 484, 507], "getter": 387, "getting_start": 406, "gev": [17, 18, 19, 20, 21, 22, 24, 25, 27, 74, 130, 137, 197, 198, 200, 202, 206, 209, 210, 460, 464, 466, 470, 471, 476, 478, 481, 482, 486, 487, 492, 493, 494, 495, 500, 501, 502, 511, 538, 561, 583, 584], "gev2": [19, 486], "gevgevgev1": 460, "gh": [386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417], "gigu\u00e8r": [30, 31, 32, 39], "git": [86, 268, 386, 387, 389, 391, 393, 394, 412, 416, 420, 449], "github": [387, 389, 390, 391, 392, 394, 395, 404, 406, 412, 415, 416, 417, 420, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 443, 444, 445, 446, 447, 448], "giuliani": 399, "giunti": [428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 449, 452], "give": [6, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 102, 144, 299, 300, 386, 391, 395, 396, 400, 401, 402, 403, 406, 407, 412, 417, 428, 430, 432, 440, 453, 462, 463, 466, 473, 475, 480, 484, 485, 487, 490, 491, 492, 493, 496, 500, 501, 509, 525, 530, 585, 586, 588, 589], "given": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 51, 52, 53, 67, 68, 69, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 96, 99, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 179, 180, 183, 185, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 291, 293, 295, 301, 311, 313, 316, 317, 324, 331, 335, 338, 339, 347, 373, 374, 379, 383, 386, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 409, 410, 412, 414, 427, 432, 438, 446, 447, 452, 457, 458, 459, 460, 463, 466, 474, 475, 476, 478, 479, 480, 481, 486, 487, 488, 489, 491, 492, 493, 494, 496, 500, 501, 509, 511, 521, 522, 523, 525, 529, 530, 534, 535, 537, 538, 544, 548, 551, 582, 584, 585, 586, 587], "glast": 501, "glat": [41, 67, 68, 83, 386, 462, 487, 493, 501], "glat_err": 487, "glat_pnt": [472, 500], "glimps": [502, 505], "gll_iem_v06_cutout": [197, 198, 200, 206, 209, 210], "gll_iem_v06_gc": [474, 493, 495, 496, 501], "gll_psc_v16": 61, "gll_psc_v20": 487, "gll_psc_v32": 65, "gll_psch_v09": 58, "gll_psch_v13": 62, "glob": [82, 387, 488, 489], "global": [16, 33, 42, 45, 46, 47, 100, 103, 104, 106, 107, 110, 111, 112, 156, 167, 170, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 215, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 294, 335, 337, 340, 341, 342, 343, 386, 390, 392, 415, 435, 452, 462, 472, 473, 482, 495, 498, 523, 583], "global_dataset": 492, "global_to_loc": 196, "glon": [41, 67, 68, 83, 386, 462, 487, 493, 501], "glon_pnt": [472, 500], "glossari": [406, 449, 521, 538], "glue": 525, "glueviz": 403, "go": [50, 87, 91, 389, 396, 406, 411, 415, 449, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 507, 509, 510, 511, 513, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585], "goal": [391, 400, 414, 490], "goe": [41, 52, 376, 386, 405, 417, 476, 498], "gogia": 445, "good": [82, 86, 102, 128, 305, 310, 386, 391, 393, 394, 395, 396, 397, 400, 402, 403, 404, 406, 415, 458, 462, 464, 465, 468, 478, 480, 481, 485, 486, 488, 490, 492, 494, 496, 501, 502, 505, 547, 548, 584, 589], "googl": [87, 91, 406, 416, 454], "got": 500, "gov": [58, 60, 61, 62, 64, 65, 101, 154, 202, 406, 564], "gp": [82, 83, 89, 387, 396, 402, 467, 470, 472, 482, 500, 502], "gpl3": 386, "gps_baseline_110380": [82, 83, 500], "gradient": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 415], "grai": [377, 534, 561], "grand": 386, "grant": [389, 412], "granular": 485, "grayify_colormap": 405, "grb": [481, 485], "great": [391, 400, 405, 444, 505], "greater": [174, 379], "green": [102, 111, 112, 446, 473, 497, 498], "grei": 482, "grep": 422, "grid": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 129, 132, 158, 166, 168, 197, 198, 200, 202, 206, 209, 210, 224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280, 287, 379, 386, 397, 402, 415, 430, 432, 490, 537, 538, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578], "gridsearch": [215, 490], "gridspec": 373, "gridspec_kw": [466, 472, 479, 481, 551], "ground": [95, 401, 500, 586], "group": [86, 87, 91, 92, 129, 130, 133, 134, 137, 155, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 311, 392, 401, 405, 406, 407, 410, 416, 419, 429, 432, 434, 438, 444, 447, 466, 479, 481, 505, 523, 525, 539, 585], "group_1": 497, "group_2": 497, "group_bi": [87, 91, 410], "group_by_axi": 410, "group_by_label": [92, 497], "group_high_zenith": 497, "group_low_zenith": 497, "group_siz": [149, 480], "group_tabl": [86, 202, 207], "grouped_observ": 497, "grow": [394, 405, 446], "grown": 406, "gr\u00e9aux": 452, "gsbjovxf": 484, "gsfc": [58, 60, 61, 62, 64, 65, 101, 154, 202, 406, 564], "gt": 491, "gtdrm": [154, 155], "gtexpcube2": 501, "gti": [82, 87, 88, 89, 100, 102, 103, 106, 107, 111, 112, 126, 128, 130, 133, 138, 147, 171, 207, 268, 392, 395, 396, 399, 400, 401, 410, 430, 432, 433, 435, 448, 452, 453, 474, 480, 481, 484, 488, 492, 500, 502, 503, 521, 584], "gti_1": 522, "gti_2": 522, "gti_t0": 481, "gtimetadata": 413, "gtmktime": [396, 501], "gtobsim": 399, "gtol": 490, "gtpsf": [155, 156, 162, 167, 170, 202, 466, 501], "gtselect": [396, 501], "guarante": [394, 409, 411, 415], "guess": [128, 196, 198, 453], "guid": [389, 402, 404, 419, 420, 421, 424, 447, 470, 505, 525, 540, 550, 571, 581], "guidelin": [386, 390, 424, 446], "guiger": 31, "gykh1lgo": 484, "gz": [58, 60, 61, 62, 64, 65, 66, 67, 82, 83, 86, 88, 91, 94, 103, 106, 107, 111, 112, 117, 120, 121, 125, 130, 132, 137, 145, 146, 159, 228, 231, 252, 281, 374, 379, 381, 387, 408, 447, 458, 462, 463, 466, 473, 474, 475, 476, 487, 488, 489, 491, 493, 495, 496, 500, 501, 502, 507, 509, 510, 511, 522, 523, 525, 527, 528, 529, 531, 551], "h": [26, 67, 82, 86, 87, 91, 95, 129, 131, 156, 183, 197, 198, 200, 206, 209, 210, 294, 376, 406, 409, 415, 419, 423, 424, 432, 447, 454, 456, 457, 458, 459, 462, 463, 465, 468, 471, 473, 479, 480, 481, 484, 486, 490, 491, 492, 493, 496, 497, 498, 500, 501, 502, 504, 505, 507, 509, 510, 520, 525, 538, 573, 574, 584, 585], "h0": 473, "h05": [45, 49], "h1": 473, "h8irpsaa": 484, "h_0": [473, 587], "h_1": [473, 587], "h_i": 131, "ha": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 87, 91, 102, 103, 106, 107, 111, 112, 125, 126, 128, 169, 191, 195, 196, 197, 198, 200, 204, 205, 206, 208, 209, 210, 218, 222, 223, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 279, 280, 281, 379, 381, 383, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 434, 435, 438, 440, 441, 447, 448, 449, 451, 452, 453, 454, 458, 459, 462, 463, 464, 468, 473, 475, 479, 480, 482, 486, 487, 488, 490, 492, 493, 494, 496, 497, 498, 500, 502, 503, 509, 510, 521, 522, 525, 530, 534, 535, 537, 538, 542, 543, 570, 582, 585, 587], "habilit": 310, "hack": 443, "had": [386, 392, 394, 412, 435, 441, 445, 446], "hadron": [284, 392, 397, 468, 488, 500, 521, 534], "hajlaoui": [435, 438], "hal": 412, "half": [167, 170, 202, 208, 280], "halo": [17, 22, 513], "halv": [141, 299, 453], "halving_coord": 485, "halving_err": 485, "hand": [179, 386, 389, 394, 397, 406, 412, 414, 450, 490, 505, 525], "handbook": [406, 505], "handi": 470, "handl": [3, 16, 84, 90, 105, 126, 127, 128, 183, 204, 302, 385, 387, 390, 398, 399, 400, 402, 407, 409, 410, 413, 416, 419, 421, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 462, 464, 470, 471, 472, 474, 488, 491, 493, 495, 496, 501, 502, 505, 510, 511, 521, 522, 525, 584], "handler_map": 383, "hanna": [453, 454], "hap": 402, "happen": [82, 389, 391, 393, 394, 400, 404, 417, 463, 495, 505, 509, 510, 521, 525, 587], "happi": [389, 393, 406, 427, 428, 447], "hard": [386, 387, 409, 414, 433, 498], "harder": [393, 585], "hardli": 413, "harri": [442, 443], "harvard": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 157, 215, 249, 284, 285, 406, 490], "has_any_t": [126, 128], "has_energy_axi": [195, 196, 205, 208], "has_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_masked_column": [87, 91], "has_masked_valu": [87, 91], "has_mixin_column": [87, 91], "has_offset_axi": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169], "has_single_spatial_bin": [155, 156, 162, 167, 170], "has_stat_profil": [126, 128], "has_success": [126, 128], "has_ul": [126, 128], "has_user_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "has_user_invers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "hasattr": 386, "hasn": 391, "hatch": 482, "have": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 84, 87, 90, 91, 95, 100, 105, 109, 113, 118, 126, 127, 128, 129, 133, 135, 145, 146, 154, 155, 156, 165, 167, 170, 177, 179, 191, 195, 196, 197, 198, 200, 204, 205, 206, 208, 209, 210, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 313, 337, 343, 383, 385, 386, 387, 388, 389, 391, 392, 393, 395, 397, 399, 400, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 432, 435, 438, 440, 441, 444, 446, 447, 448, 449, 450, 452, 453, 454, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 505, 509, 510, 511, 513, 521, 522, 523, 525, 532, 536, 537, 538, 548, 559, 582, 585, 588, 589], "haven": 423, "hawc": [55, 59, 63, 72, 76, 97, 147, 148, 424, 432, 438, 446, 449, 450, 452, 456, 504, 505, 520, 533, 584], "hawc19_flux_point": [128, 471, 525], "hawc_crab": [128, 471, 525], "hawc_pass4_public_crab": [147, 148], "hd": 67, "hdr": 413, "hdr_dict": 413, "hdu": [67, 82, 83, 85, 86, 87, 88, 94, 103, 106, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 321, 372, 387, 396, 426, 441, 443, 446, 449, 450, 491, 493, 500, 502, 503, 521, 522, 525, 527, 528, 529, 531, 538, 580], "hdu1": 154, "hdu2": 154, "hdu_al": 474, "hdu_band": [126, 128, 155, 156, 162, 167, 170, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210], "hdu_class": [82, 87, 321, 500, 502, 503], "hdu_class_uniqu": 87, "hdu_evt": 474, "hdu_filenam": 502, "hdu_gti": 474, "hdu_hdu": 82, "hdu_index": 82, "hdu_list": [155, 156, 158, 162, 166, 167, 168, 170, 197, 198, 209, 210], "hdu_loc": 87, "hdu_nam": 321, "hdu_ob": 82, "hdu_out": [197, 198], "hdu_region": [205, 206], "hdu_tabl": [82, 502], "hdu_table_filenam": 82, "hdu_typ": [82, 87, 500, 502, 503], "hdu_type_uniqu": 87, "hduclas2": 491, "hduclas3": 491, "hduclas4": 491, "hduclasn": 491, "hduindext": [82, 321, 502], "hdulist": [103, 106, 107, 109, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 204, 205, 206, 208, 209, 210, 474, 493, 521], "hduloc": [87, 103], "he": [284, 396, 401], "hea": 401, "head": 387, "header": [82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 102, 103, 105, 106, 107, 108, 109, 111, 112, 126, 127, 128, 154, 155, 156, 162, 167, 170, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 280, 323, 368, 369, 372, 391, 396, 399, 413, 432, 440, 442, 447, 449, 452, 464, 475, 493, 500, 589], "healpi": [196, 385, 393, 395, 403, 418, 419, 421, 430, 438, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 536], "healpix": [13, 196, 197, 198, 200, 206, 209, 210, 385, 393, 395, 400, 438, 446, 493, 501, 537], "healpix_to_imag": 439, "heapsort": [87, 91], "hear": 415, "heart": 587, "heasarc": [154, 202], "heatmap": [375, 380], "heavi": [447, 448], "heavier": 470, "heavili": 438, "hegra": [97, 285], "heidelberg": [386, 416], "heidt": 485, "height": [16, 29, 87, 91, 94, 130, 346, 463, 467, 468, 470, 476, 479, 482, 486, 493, 494, 496, 509, 534, 538], "heighten": 485, "helen": 444, "hello": [423, 472], "help": [11, 87, 91, 296, 302, 386, 389, 391, 393, 400, 401, 402, 406, 412, 416, 417, 418, 423, 427, 428, 429, 446, 447, 449, 487, 492, 493, 495, 501, 503, 511, 525, 585], "helper": [13, 321, 326, 393, 395, 400, 401, 402, 405, 417, 423, 429, 430, 431, 432, 438, 440, 443, 445, 446, 452, 453, 476, 487, 494, 495, 534, 583, 590], "henc": [87, 91, 247, 402, 467, 468, 523, 538, 587], "here": [13, 82, 83, 87, 91, 101, 103, 107, 111, 128, 139, 148, 152, 157, 166, 215, 293, 295, 298, 374, 385, 386, 387, 388, 389, 392, 393, 398, 399, 400, 401, 402, 403, 404, 405, 406, 412, 413, 414, 415, 416, 417, 419, 421, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 500, 501, 502, 505, 509, 510, 511, 515, 521, 525, 530, 532, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585, 586, 587, 589, 590], "hereaft": 474, "herebi": 498, "heritag": 412, "herm": [288, 290, 453], "herr": 415, "hess": [16, 55, 67, 82, 83, 86, 88, 91, 96, 97, 102, 111, 112, 134, 149, 150, 157, 159, 177, 215, 291, 311, 312, 387, 394, 395, 400, 402, 406, 415, 416, 419, 423, 426, 428, 431, 442, 443, 446, 447, 456, 459, 460, 462, 463, 464, 468, 470, 472, 473, 480, 482, 484, 487, 488, 489, 490, 492, 497, 498, 501, 503, 504, 507, 509, 510, 513, 522, 523, 525, 527, 528, 529, 531, 532, 534, 535], "hess2": [157, 527], "hess_dl3_dr1_obs_id_020136": [88, 159, 387, 527, 528, 529, 531], "hess_dl3_dr1_obs_id_023523": [83, 86, 522], "hess_dl3_dr1_obs_id_023526": 522, "hess_ecpl": [285, 462], "hess_pl": 285, "hessian": 523, "heterogen": [413, 460, 471], "hfm": 67, "hgp": [67, 80, 81, 125, 406, 432, 444, 446, 447, 520], "hgps_catalog_v1": 67, "hgps_sourc": 67, "hgpsc": [67, 487], "hi": [386, 445], "hi_bnd": 202, "hi_threshold": 154, "hidden": 397, "hide": [13, 391, 408], "hierarch": [13, 25, 311, 353, 395, 397, 413, 453, 525, 537], "hierarchi": [311, 397, 431], "hierarchical_clust": [452, 497], "high": [6, 15, 58, 62, 63, 83, 154, 202, 336, 386, 390, 391, 392, 399, 400, 401, 406, 413, 415, 430, 431, 432, 433, 434, 438, 446, 447, 456, 457, 460, 463, 466, 467, 470, 476, 478, 479, 486, 487, 488, 489, 492, 494, 500, 501, 502, 503, 505, 510, 511, 512, 520, 521, 522, 523, 530, 533, 583, 584, 585, 586], "high_zenith": 497, "higher": [195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 242, 389, 392, 397, 402, 405, 407, 420, 460, 475, 485, 491, 493, 532, 538], "highest": [145, 183, 485, 492, 500, 511], "highli": 496, "highlight": 585, "hint": [413, 466, 523], "hire": [158, 406, 515, 517, 518, 519, 521, 522, 527, 528, 529, 531, 534, 538, 587, 590], "hist": [83, 111, 112, 206, 210, 379, 465, 498], "histogram": [83, 111, 112, 202, 206, 210, 379, 452, 482, 538, 584], "histori": [400, 412, 449], "hit": 415, "hkdn1skq": 496, "hli": [399, 433, 434, 438, 449, 456, 461, 505, 521, 524, 584], "hli_spectrum_analysi": 463, "hline": 542, "hoc": 400, "hold": [69, 82, 89, 92, 96, 100, 165, 236, 313, 395, 396, 398, 401, 585, 587], "home": [16, 350, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 549, 551, 557, 573, 579, 580], "homebrew": 403, "homework": 429, "homogen": [87, 91, 435], "honk": 391, "hood": [463, 505, 509], "hook": [389, 449], "hope": 391, "hopefulli": 393, "horizont": [85, 95, 160, 356, 491, 589], "host": [386, 415], "hour": [67, 94, 389, 402, 416, 417, 457, 487, 492, 493, 525], "hover": 387, "how": [16, 19, 20, 82, 83, 84, 85, 90, 99, 105, 127, 128, 130, 132, 177, 198, 208, 210, 337, 343, 388, 391, 394, 398, 400, 402, 403, 405, 408, 409, 412, 413, 415, 417, 418, 419, 423, 424, 427, 428, 429, 432, 433, 440, 442, 445, 446, 447, 452, 453, 457, 458, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 509, 511, 515, 521, 523, 526, 530, 534, 536, 537, 551, 570, 583, 585, 586, 587, 589, 590], "howev": [77, 87, 91, 102, 125, 300, 385, 386, 387, 389, 393, 396, 399, 400, 404, 412, 414, 415, 420, 459, 468, 476, 482, 484, 486, 487, 488, 490, 498, 502, 503, 505, 521, 525, 537, 538, 543, 559, 585], "howto": [406, 449, 450], "hpx": [196, 197, 198, 200, 209, 210, 400, 438, 493, 501], "hpx2wc": [197, 198], "hpx_map": [197, 198], "hpx_pixel": 400, "hpx_reg": 196, "hpxgeom": [126, 195, 197, 198, 433, 438, 449, 501, 536], "hpxmap": [198, 200, 536], "hpxndmap": [276, 438, 536], "hpxsparsemap": 432, "hpxtowcsmap": [197, 198], "hr": [474, 475, 478, 481], "hspace": 486, "hspec": [442, 443, 444], "hst": 230, "hstack": [87, 91, 399], "html": [83, 87, 91, 101, 129, 154, 190, 196, 202, 205, 208, 215, 228, 252, 281, 313, 340, 341, 386, 387, 389, 394, 406, 411, 412, 416, 417, 425, 446, 457, 465, 467, 470, 472, 478, 481, 490, 491, 500, 522, 528, 536, 538, 564], "htmlcov": 417, "http": [11, 13, 16, 33, 34, 38, 50, 52, 53, 58, 60, 61, 62, 64, 65, 67, 83, 84, 87, 88, 90, 91, 101, 105, 127, 129, 139, 154, 157, 183, 190, 196, 202, 205, 208, 215, 228, 249, 252, 258, 259, 273, 274, 281, 284, 285, 313, 340, 341, 353, 389, 403, 406, 411, 412, 415, 416, 417, 418, 419, 420, 421, 425, 429, 446, 457, 462, 465, 467, 470, 471, 472, 478, 481, 486, 487, 490, 491, 500, 522, 536, 538, 564, 568, 569, 585], "hubert": 447, "hue": 377, "huestart": 377, "huge": [417, 543], "hugovk": 428, "human": [367, 397, 415, 417, 440, 463, 509], "hundr": 502, "hypercub": [493, 537, 538], "hypothes": [291, 452, 525, 587], "hypothesi": [126, 128, 129, 130, 133, 134, 135, 291, 293, 295, 454, 460, 466, 473, 489, 523, 525, 584, 587], "hysteresi": 484, "hz": [343, 511], "i": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 308, 310, 311, 313, 315, 319, 321, 324, 325, 326, 331, 333, 334, 337, 340, 341, 342, 343, 345, 346, 349, 352, 354, 355, 357, 361, 363, 364, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 509, 510, 511, 513, 514, 515, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590], "i0": [87, 91], "i1": [87, 91], "i4": 476, "i8": [493, 511], "i_0": [197, 198, 200, 206, 209, 210], "i_hpx": [197, 198, 200, 206, 209, 210], "i_lat": [197, 198, 200, 206, 209, 210], "i_lon": [197, 198, 200, 206, 209, 210], "i_n": [197, 198, 200, 206, 209, 210], "i_scan": 498, "iact": [82, 83, 85, 94, 177, 180, 184, 392, 395, 396, 397, 398, 400, 402, 406, 424, 429, 443, 445, 447, 460, 466, 468, 492, 493, 495, 500, 501, 503, 522, 527, 528, 529, 531, 582, 584], "iactbasicimageestim": [392, 446], "iau": [52, 426, 430], "iau2015": 52, "ic": 561, "icon": 583, "icr": [83, 85, 88, 91, 94, 95, 96, 103, 106, 107, 111, 112, 114, 115, 145, 167, 177, 180, 196, 197, 198, 200, 203, 205, 208, 209, 210, 224, 225, 229, 238, 241, 256, 265, 266, 311, 312, 347, 386, 387, 410, 431, 462, 463, 464, 465, 466, 468, 471, 472, 474, 475, 478, 479, 480, 481, 482, 484, 487, 488, 491, 492, 493, 494, 496, 497, 500, 501, 502, 503, 509, 510, 522, 525, 529, 534, 538, 542, 543, 544, 546, 547, 548], "icrc": 442, "id": [17, 19, 20, 21, 22, 24, 25, 26, 27, 67, 80, 82, 83, 87, 88, 91, 92, 114, 115, 399, 402, 423, 463, 465, 474, 476, 478, 482, 487, 496, 500, 501, 502, 503, 509, 522], "id_obs_vela": 482, "idea": [391, 394, 401, 405, 406, 407, 463, 484, 491, 497, 501, 509], "ideal": [388, 389, 396, 400, 401, 410, 414, 416, 460, 501], "idempot": [16, 84, 90, 105, 127], "ident": [361, 389, 401, 449, 462, 464], "identif": [67, 392, 487], "identifi": [67, 88, 104, 110, 196, 268, 386, 396, 397, 399, 402, 411, 412, 417, 433, 466, 474, 485, 487, 488, 496, 500, 502, 524], "identified_object": 487, "idx": [83, 87, 91, 92, 100, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 252, 465, 474, 481, 487, 490, 493, 537], "idx1": 490, "idx2": 490, "idx_glob": 196, "idx_loc": 196, "ie": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 412, 458, 484, 495, 496, 521, 584], "iem": [495, 501], "iem_minus_iem": 493, "iem_plus_iem": 493, "iem_times_two": 493, "ignacio": 448, "ignasi": 442, "ignor": [11, 16, 84, 87, 90, 91, 102, 105, 127, 140, 161, 171, 200, 218, 220, 236, 313, 325, 387, 440, 454, 462, 476, 481, 482, 488, 494, 509, 525, 585], "ii": [213, 444], "ii_nxd_c": 458, "ij": 213, "ilist": 196, "illustr": [111, 112, 387, 396, 398, 399, 400, 402, 405, 415, 464, 466, 471, 476, 488, 492, 493, 495, 496, 501, 515, 521, 534, 535, 542, 543, 551, 583], "illustrate_colormap": 405, "iloc": [87, 91], "im": [375, 490], "imag": [103, 106, 107, 111, 112, 121, 131, 132, 145, 156, 157, 158, 164, 166, 167, 168, 170, 172, 182, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 280, 304, 307, 350, 372, 374, 375, 376, 377, 381, 386, 394, 395, 397, 402, 403, 406, 407, 417, 419, 424, 426, 427, 428, 431, 432, 433, 439, 443, 444, 445, 446, 447, 454, 456, 467, 470, 476, 477, 492, 494, 496, 500, 510, 511, 521, 530, 534, 535, 536, 537, 538, 583, 584, 590], "image_analysi": [406, 427], "image_err": 132, "image_fitting_with_sherpa": [406, 448], "image_pip": 446, "image_profil": 445, "imagehdu": [197, 198, 209, 210], "imagenorm": [376, 377], "imageprofil": 132, "images_t": 472, "imagin": 585, "img": [374, 493], "iminuit": [215, 385, 403, 412, 415, 438, 440, 447, 451, 452, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 582], "immut": 228, "impact": [393, 399, 403, 502], "imperfect": 492, "implement": [19, 20, 103, 106, 107, 111, 112, 139, 148, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 294, 300, 386, 387, 391, 392, 394, 395, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 413, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 445, 446, 448, 449, 452, 453, 454, 459, 467, 480, 485, 486, 487, 492, 493, 494, 513, 521, 523, 525, 530, 531, 532, 570, 582, 583, 584, 585, 586, 589], "implent": 386, "impli": [242, 386, 405, 415, 521, 584], "implic": 408, "implicit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 530], "implicitli": 492, "import": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 67, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 102, 103, 105, 106, 107, 111, 112, 113, 117, 118, 120, 121, 125, 126, 127, 128, 130, 132, 134, 137, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 165, 167, 177, 180, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 219, 221, 222, 223, 226, 228, 230, 232, 233, 234, 239, 243, 245, 246, 249, 250, 252, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 285, 291, 294, 300, 301, 311, 312, 333, 343, 353, 365, 366, 371, 374, 376, 377, 379, 381, 387, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 422, 423, 434, 444, 446, 451, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 507, 509, 510, 511, 514, 515, 517, 518, 519, 521, 522, 523, 525, 527, 528, 529, 531, 532, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 585, 586, 587, 589], "importantli": [410, 447, 459, 585], "importerror": [87, 91], "impos": [451, 457, 534], "imposs": 415, "improv": [110, 291, 388, 390, 391, 392, 394, 395, 396, 400, 401, 402, 403, 404, 405, 406, 411, 417, 418, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 493, 500, 525, 535, 542], "imshow": [103, 106, 107, 165, 198, 210, 374, 380, 445, 493, 511], "in2p3": 412, "in_memori": [88, 525], "in_memory_gener": 92, "in_safe_data_rang": [103, 106, 107, 111, 112], "inaccur": 386, "incex": [16, 84, 90, 105, 127], "incid": 392, "includ": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 82, 83, 84, 87, 88, 90, 91, 105, 127, 133, 155, 165, 171, 173, 174, 180, 181, 185, 195, 196, 205, 208, 253, 321, 385, 386, 392, 394, 397, 398, 399, 400, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 428, 430, 435, 446, 451, 452, 453, 454, 457, 470, 471, 473, 474, 476, 481, 486, 487, 489, 490, 492, 494, 495, 496, 500, 502, 513, 515, 521, 523, 524, 535, 537, 582, 586, 589], "include_irf": [88, 522, 525], "include_ssc": 253, "inclus": [83, 205, 400], "incompat": [411, 440], "incomplet": [386, 417, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "inconsist": [435, 441, 451, 452], "inconveni": [405, 447], "incorpor": [402, 406, 414, 584], "incorrect": [83, 386, 413, 422, 431, 449, 450, 492, 498], "incorrectli": [449, 494], "increas": [145, 172, 202, 207, 229, 238, 241, 386, 395, 413, 480, 489, 492, 521, 525, 542], "increment": [19, 20, 26, 121, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 400, 493, 537], "ind": [196, 208, 228, 252], "inde": [474, 543], "indefinit": 393, "indent": [16, 84, 90, 105, 127], "independ": [67, 129, 133, 138, 139, 147, 148, 310, 324, 386, 392, 396, 397, 398, 399, 400, 401, 404, 407, 408, 409, 410, 412, 419, 428, 438, 457, 463, 479, 487, 493, 494, 495, 496, 502, 509, 510, 520, 525, 530, 584, 588], "index": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 92, 100, 102, 103, 106, 107, 111, 112, 121, 125, 126, 128, 129, 130, 134, 136, 137, 144, 154, 155, 156, 162, 165, 167, 170, 190, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 219, 221, 222, 223, 226, 228, 230, 232, 233, 234, 239, 245, 246, 249, 250, 252, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 285, 294, 321, 335, 340, 389, 392, 395, 396, 397, 398, 401, 402, 409, 410, 411, 416, 419, 429, 443, 445, 446, 452, 453, 458, 459, 460, 462, 463, 465, 466, 467, 470, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 487, 488, 489, 490, 491, 495, 496, 500, 501, 502, 503, 509, 510, 511, 523, 536, 537, 538, 541, 542, 543, 544, 546, 547, 548, 549, 551, 553, 555, 556, 557, 562, 563, 564, 572, 573, 574, 575, 576, 577, 578, 579, 580], "index1": [222, 269, 552, 566], "index2": [222, 269, 552, 566], "index_1": [272, 273, 274, 567, 568, 569], "index_2": [77, 272, 273, 274, 567, 568, 569], "index_arrai": [87, 91], "index_column": [87, 91], "index_data": 201, "index_err": 484, "index_error": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "index_mod": [87, 91], "index_scan": 498, "indexerror": [92, 100, 252], "indic": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 386, 449, 465, 475, 485, 492, 493, 497, 498, 502, 503, 525, 537, 538, 584], "indico": 395, "indirect": [17, 19, 20, 21, 22, 24, 25, 26, 27, 486, 513], "individu": [87, 91, 110, 123, 131, 382, 392, 398, 399, 401, 406, 409, 410, 414, 459, 462, 465, 473, 476, 480, 487, 488, 490, 492, 495, 496, 511, 521, 525, 530], "indiviud": 408, "indxschm": [197, 198, 209, 210], "ineffici": [87, 91, 389], "ineqcon": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inequ": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inertia": [51, 54], "inf": [67, 241, 283, 414, 498], "infer": [126, 128, 195, 196, 197, 198, 200, 208, 209, 210, 230, 387, 390, 509, 537], "inferno": 493, "infil": 386, "infin": 498, "influenc": 498, "info": [16, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 91, 94, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 158, 164, 166, 168, 293, 295, 321, 387, 401, 402, 406, 416, 422, 432, 433, 435, 442, 443, 446, 463, 467, 468, 470, 474, 480, 484, 486, 487, 488, 493, 501, 502, 503, 505, 507, 509, 585], "info_dict": [103, 106, 107, 111, 112, 293, 295, 379, 435, 453, 488], "info_t": [100, 459, 462, 463, 465, 470, 481, 488, 495, 525], "infodict": 379, "inform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 88, 90, 91, 94, 99, 100, 102, 103, 105, 106, 107, 111, 112, 126, 127, 128, 154, 158, 164, 166, 168, 169, 172, 177, 178, 183, 184, 203, 215, 222, 223, 224, 225, 226, 227, 229, 230, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 246, 253, 254, 255, 256, 257, 259, 260, 265, 266, 267, 269, 272, 273, 274, 276, 277, 280, 281, 296, 302, 321, 337, 368, 369, 386, 390, 391, 396, 398, 399, 400, 401, 402, 409, 410, 413, 414, 415, 417, 422, 423, 424, 432, 434, 435, 438, 440, 446, 452, 453, 458, 460, 463, 464, 471, 474, 475, 478, 484, 485, 488, 489, 490, 492, 493, 496, 500, 501, 502, 503, 509, 510, 511, 520, 521, 522, 523, 525, 538, 585, 588], "infrar": 230, "infrastructur": [417, 425, 438, 449, 452], "ingredi": [410, 486], "inherit": [87, 91, 294, 386, 396, 398, 401, 410, 413, 414, 433, 438, 445, 488, 491, 536, 537], "init": [19, 20, 26, 87, 91, 125, 130, 137, 174, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 325, 337, 398, 435, 450, 452, 453, 454, 466, 476, 480, 487, 488, 489, 511], "initi": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 53, 65, 84, 87, 90, 91, 105, 126, 127, 128, 137, 195, 196, 198, 201, 202, 205, 208, 228, 252, 254, 255, 313, 386, 391, 396, 397, 398, 402, 415, 440, 457, 465, 468, 470, 471, 473, 474, 475, 478, 482, 487, 488, 493, 496, 509, 510, 511, 520, 522, 570, 584], "initialis": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 294, 335, 337, 340, 341, 342, 343, 386, 408, 498], "initiliaz": 415, "inject": [465, 478], "inlin": [391, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 493, 494, 495, 496, 500, 501, 503, 509, 510, 511], "inner": [44, 52, 53, 130, 172, 182, 266, 468, 511, 548], "inner_height": [534, 538], "inner_width": [534, 538], "input": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 84, 86, 87, 90, 91, 103, 105, 106, 107, 110, 121, 123, 125, 126, 127, 128, 129, 132, 133, 137, 141, 142, 143, 144, 146, 150, 155, 156, 158, 165, 166, 167, 168, 169, 170, 172, 174, 178, 180, 182, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 219, 221, 228, 243, 252, 279, 280, 281, 294, 313, 324, 334, 337, 356, 358, 379, 381, 392, 394, 396, 397, 398, 399, 400, 401, 402, 407, 423, 433, 438, 441, 448, 452, 454, 465, 474, 475, 482, 489, 493, 498, 523, 537, 538, 586], "input_map": [113, 118], "input_shap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_allow_dimensionless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_equival": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "input_units_strict": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "inputs_map": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "ins": 452, "insensit": 204, "insert": [87, 91, 92, 100, 252, 412, 433, 588], "insert_row": [87, 91], "insertion_order_mww_test": 415, "inset": 439, "insid": [50, 83, 103, 107, 111, 117, 120, 154, 180, 196, 197, 198, 200, 205, 208, 209, 210, 228, 252, 268, 375, 379, 386, 387, 400, 402, 410, 438, 457, 462, 465, 467, 470, 472, 478, 481, 488, 492, 494, 495, 496, 500, 502, 522, 532, 534, 535, 538], "inside_geom": 494, "insight": 422, "inspect": [398, 402, 423, 462, 464, 470, 474, 475, 490, 493, 495, 500, 501], "inspir": [386, 410, 416], "instal": [87, 91, 385, 386, 389, 393, 394, 395, 403, 416, 417, 418, 421, 423, 424, 427, 428, 438, 442, 445, 446, 447, 454, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 509, 510, 511, 525, 585], "instanc": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 84, 85, 86, 87, 88, 90, 91, 92, 105, 123, 127, 128, 129, 131, 133, 134, 169, 171, 179, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 331, 337, 373, 375, 376, 377, 380, 382, 386, 392, 397, 398, 401, 402, 408, 410, 413, 438, 460, 462, 465, 476, 487, 489, 490, 492, 494, 495, 496, 511, 515, 525, 537, 538, 561], "instanti": [15, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 197, 198, 200, 202, 209, 210, 397, 402, 459, 463, 487, 488, 493, 496, 498, 509], "instead": [16, 19, 20, 26, 84, 85, 87, 90, 91, 103, 105, 106, 107, 111, 112, 116, 127, 184, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 386, 387, 389, 391, 393, 394, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 414, 418, 419, 421, 428, 431, 434, 435, 448, 452, 454, 458, 464, 470, 474, 476, 478, 479, 481, 482, 487, 488, 491, 492, 493, 496, 498, 501, 522, 529, 530, 537, 538, 585], "instruct": [386, 395, 403, 416, 418, 419, 427, 438, 442, 446, 474, 500], "instrument": [6, 83, 95, 110, 157, 161, 162, 236, 386, 396, 397, 398, 399, 401, 406, 410, 419, 423, 432, 435, 447, 448, 449, 456, 459, 460, 462, 463, 466, 470, 477, 482, 484, 488, 490, 491, 492, 495, 496, 497, 498, 500, 501, 502, 503, 505, 509, 510, 521, 522, 523, 527, 529, 531, 583, 584], "int": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 33, 34, 38, 42, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 121, 123, 127, 128, 129, 130, 133, 134, 135, 137, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 177, 180, 184, 185, 190, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 287, 289, 291, 293, 294, 295, 299, 300, 301, 303, 308, 313, 324, 325, 331, 335, 337, 340, 341, 342, 343, 345, 346, 373, 379, 386, 400, 445, 490, 515], "int64": [103, 106, 107, 111, 112, 113, 118, 125, 137, 523], "int_": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 222, 223, 226, 230, 232, 233, 234, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 530, 542], "int_flux": 486, "integ": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 100, 103, 106, 107, 111, 112, 126, 128, 129, 130, 133, 137, 145, 146, 155, 156, 162, 167, 170, 173, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 219, 221, 228, 252, 313, 331, 337, 386, 392, 400, 537], "integr": [6, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 51, 102, 103, 106, 107, 111, 112, 126, 128, 131, 133, 144, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 172, 197, 198, 200, 202, 206, 209, 210, 211, 212, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 284, 285, 287, 324, 385, 393, 395, 397, 399, 400, 401, 403, 404, 406, 410, 412, 415, 426, 428, 429, 433, 434, 438, 443, 444, 445, 446, 447, 448, 449, 452, 462, 464, 465, 467, 481, 484, 486, 487, 488, 493, 494, 496, 511, 513, 521, 523, 529, 544, 564], "integral_error": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 404, 435, 484], "integral_flux": 484, "integral_flux_imag": 439, "integrate_geom": [224, 225, 229, 238, 241, 254, 256, 265, 266, 268, 270, 276, 280, 438, 451, 453], "integrate_log_log": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169], "integrate_spectrum": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 429, 435], "integrate_spectrum_separ": [17, 18, 21, 22, 24, 25, 27], "intend": [87, 91, 313, 396, 414, 415, 491], "intens": [197, 198, 200, 206, 209, 210, 215, 242, 396, 493, 521], "intent": 391, "interact": [19, 20, 87, 91, 167, 170, 197, 198, 200, 206, 209, 210, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 385, 386, 387, 395, 396, 397, 398, 402, 406, 409, 423, 432, 458, 470, 478, 490, 493, 495, 496, 505, 509, 510, 534, 537, 561, 585], "interchang": 537, "interest": [117, 120, 129, 133, 215, 291, 391, 399, 400, 404, 406, 417, 460, 470, 474, 476, 484, 487, 488, 490, 492, 494, 497, 500, 501, 511, 522, 523, 561, 584, 587, 588], "interfac": [6, 11, 15, 19, 20, 87, 91, 213, 215, 218, 219, 220, 221, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 386, 390, 391, 392, 396, 398, 399, 401, 403, 404, 405, 406, 415, 428, 431, 433, 434, 435, 438, 442, 445, 446, 452, 456, 458, 463, 466, 467, 470, 478, 479, 490, 496, 500, 505, 510, 511, 512, 521, 522, 525, 533, 536, 561, 582, 583, 584, 585], "interfer": 416, "intermedi": [208, 395, 402, 412, 423, 459, 480], "intern": [15, 19, 20, 26, 87, 91, 126, 128, 140, 141, 142, 143, 174, 180, 205, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 287, 313, 325, 386, 398, 400, 402, 405, 410, 438, 440, 449, 452, 457, 463, 470, 479, 485, 488, 491, 493, 503, 509, 521, 525, 580], "interp": [19, 20, 159, 197, 198, 200, 202, 206, 207, 209, 210, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 326, 381, 409, 414, 451, 453, 465, 471, 475, 478, 481, 491, 492, 493, 496, 501, 502, 503, 537, 538, 561, 562], "interp1": 493, "interp1d": 326, "interp2": 493, "interp_by_coord": [197, 198, 200, 206, 209, 210, 280, 449, 493], "interp_by_pix": [197, 198, 200, 206, 209, 210, 276, 277, 493], "interp_kwarg": [68, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 230, 276, 277, 280, 281, 386, 491, 501, 570], "interp_map": [197, 198, 200, 206, 209, 210], "interp_missing_data": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169], "interp_param": 386, "interp_scal": [102, 292, 326], "interp_to_geom": [197, 198, 200, 206, 209, 210, 435, 451, 493, 501, 525], "interp_weight": 196, "interpol": [6, 26, 94, 102, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 177, 196, 197, 198, 200, 202, 206, 207, 209, 210, 230, 243, 254, 255, 276, 277, 279, 280, 281, 292, 325, 326, 327, 385, 397, 398, 399, 428, 433, 438, 440, 443, 446, 448, 449, 450, 451, 452, 453, 462, 475, 491, 492, 496, 501, 502, 525, 533, 537, 570], "interpolatedunivariatesplin": 279, "interpret": [91, 103, 106, 107, 131, 145, 146, 198, 202, 208, 209, 210, 331, 404, 414, 493, 523, 538], "intersect": [89, 180, 181, 185, 205, 400, 480], "interspers": 391, "interstellar": [45, 474], "interv": [52, 53, 78, 82, 83, 86, 88, 89, 91, 92, 100, 102, 104, 110, 128, 133, 178, 202, 207, 215, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 395, 396, 400, 401, 404, 410, 419, 432, 434, 435, 438, 447, 448, 453, 454, 479, 481, 484, 490, 493, 502, 510, 522, 537, 584, 587], "interval_edg": 207, "intervent": 415, "intrins": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 253, 301, 397, 401], "intrinsic_model": 458, "intro": 415, "intro_map": 447, "introduc": [19, 20, 197, 198, 200, 202, 206, 209, 210, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 386, 393, 394, 396, 398, 399, 400, 401, 403, 406, 408, 411, 414, 415, 429, 431, 432, 434, 435, 438, 440, 441, 445, 446, 447, 449, 452, 453, 454, 473, 485, 492, 496, 538, 543, 585, 588], "introduct": [389, 407, 408, 409, 415, 428, 432, 433, 434, 435, 454, 460, 463, 496, 509, 510, 514], "introductori": 485, "introspect": 313, "intuit": [407, 588], "invalid": [372, 386, 400, 413, 414, 438, 454, 464, 468, 474, 503], "invalid_pixel": 494, "invers": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 208, 222, 223, 226, 230, 232, 233, 234, 239, 242, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 293, 294, 295, 335, 342, 399, 415, 474, 494, 496, 498, 561], "inverse_al": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "inverse_cdf": [415, 474], "inversecdf": 399, "inversecdfsampl": [399, 430], "inversecompton": [253, 561], "invert": [91, 196, 208, 511], "invest": 389, "investig": [473, 480, 484], "involv": [87, 91, 103, 106, 107, 111, 112, 386, 391, 400, 402, 404, 408, 466, 585], "io": [13, 83, 86, 87, 91, 129, 190, 200, 205, 215, 281, 389, 395, 406, 415, 417, 429, 432, 444, 448, 452, 474, 490, 491, 493, 500, 522, 525, 536, 538], "iop": 273, "iopscienc": 273, "ipix": 196, "ipykernel": [419, 421], "ipynb": [394, 406, 429, 432, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 507, 509, 510, 511, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "ipynb_to_galleri": 386, "ipython": [87, 91, 385, 386, 402, 403, 418, 422, 430, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 509, 510, 511, 524, 585], "ipython3": 420, "ipywidget": 493, "irap": 406, "irf": [6, 82, 88, 96, 103, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 118, 119, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 177, 183, 184, 186, 187, 188, 190, 192, 193, 196, 205, 208, 268, 312, 386, 387, 392, 396, 397, 398, 399, 402, 405, 406, 407, 408, 414, 419, 427, 429, 432, 434, 435, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 470, 474, 475, 478, 479, 481, 492, 494, 497, 498, 499, 501, 502, 503, 505, 509, 510, 521, 522, 525, 527, 528, 529, 531, 532, 583, 584], "irf_dict": 171, "irf_dl3_hdu_specif": 491, "irf_fil": [88, 152, 156, 157, 158, 167, 457, 465, 478, 481, 491, 500], "irf_filenam": [474, 475, 491, 500], "irf_map": [155, 156, 162, 167, 170], "irf_path": 474, "irfmap": [155, 156, 167, 170, 419, 435, 525], "irfmetadata": 413, "irfmodel": 397, "irfs1": 500, "irfs2": 500, "irfs_path": 82, "irfstack": [435, 444], "irregular": [196, 208, 537], "irrespect": [399, 470, 493, 537], "is_align": [196, 202, 207, 208], "is_all_point_sky_region": 205, "is_all_same_energy_shap": 100, "is_all_same_shap": 100, "is_all_same_typ": 100, "is_allclos": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210], "is_allski": [195, 196, 205, 208], "is_bkg": 109, "is_contigu": [207, 493], "is_convertible_to_flux_sed_typ": [126, 128], "is_energy_axi": 202, "is_energy_depend": [224, 225, 227, 229, 235, 238, 240, 241, 242, 243, 244, 254, 256, 260, 265, 266, 267, 270, 276, 279, 280, 282, 451, 496], "is_fixed_rad_max": 169, "is_flat": [195, 196, 201, 205, 208], "is_hpx": [196, 205, 208], "is_imag": [195, 196, 205, 208], "is_mask": [197, 198, 200, 206, 209, 210], "is_norm": [414, 440, 453], "is_norm_spectral_model": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 438, 496], "is_nul": 493, "is_pointed_observ": 83, "is_pointlik": [71, 74, 75, 76, 78, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 438], "is_region": [196, 205, 208], "is_regular": [196, 205, 208], "is_ul": [67, 126, 128, 438, 453, 463, 487, 489, 511], "is_unidimension": 201, "isf": [490, 587], "isinst": [386, 397, 400, 409, 413, 414, 415], "ism": [52, 53, 561], "isn": [389, 393, 400, 402, 405, 417, 472, 585], "isnan": [493, 494], "iso": [88, 128, 207, 212, 452, 481, 495, 501, 537, 579], "iso_p8r2_source_v6_v06": [495, 501], "isol": [30, 31, 32, 400, 418, 494], "isot": [367, 589], "isotherm": [22, 513], "isotrop": [47, 101, 225, 286, 495], "isotropic_fil": 101, "issu": [19, 20, 26, 87, 91, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 386, 387, 389, 394, 395, 397, 398, 400, 403, 406, 411, 412, 413, 414, 416, 419, 420, 421, 425, 428, 440, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 472, 494, 500, 521, 525, 585, 586], "item": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 100, 204, 252, 406, 413], "iter": [87, 91, 92, 100, 126, 128, 135, 137, 197, 198, 200, 201, 202, 204, 206, 207, 209, 210, 252, 389, 392, 394, 402, 439, 466, 481], "iter_by_axi": [126, 128, 197, 198, 200, 206, 209, 210], "iter_by_axis_data": 206, "iter_by_coord": 430, "iter_by_edg": [202, 207], "iter_by_imag": [197, 198, 200, 206, 209, 210, 447], "iter_by_image_data": [197, 198, 200, 206, 209, 210, 493], "iter_by_image_index": [197, 198, 200, 206, 209, 210], "iter_by_pix": 430, "iter_with_reshap": 201, "itercol": [87, 91], "iterrow": [87, 91], "itertool": 490, "its": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 103, 106, 107, 111, 112, 126, 128, 173, 174, 183, 196, 202, 204, 222, 223, 226, 229, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 291, 386, 389, 392, 395, 396, 398, 401, 402, 403, 405, 410, 412, 413, 417, 420, 438, 452, 453, 454, 459, 463, 464, 467, 474, 475, 479, 480, 485, 487, 489, 490, 492, 493, 494, 495, 496, 498, 509, 511, 514, 530, 532, 534, 536, 537, 538, 584, 587], "itself": [87, 91, 385, 386, 401, 412, 459, 479, 480, 482, 498, 585], "ivoa": [386, 453], "iy0idvi2": 484, "j": [19, 20, 23, 103, 107, 111, 131, 139, 387, 389, 521], "j0001": [487, 511], "j0002": [487, 511], "j0003": [487, 511], "j0006": 487, "j0007": 511, "j0008": [487, 511], "j0009": 511, "j0010": 487, "j0013": 487, "j0021": 487, "j0022": 487, "j0025": 487, "j0031": 487, "j0349": 487, "j0521": 462, "j0534": [487, 511], "j0633": 511, "j0835": [460, 511], "j0851": 487, "j1036": 487, "j1104": [487, 511], "j1506": 460, "j1507": 460, "j1513": 487, "j1514": 487, "j1555": 511, "j1653": 487, "j1713": 459, "j1731": 495, "j1732": 495, "j1741": 495, "j1744": 495, "j1745": 495, "j1746": 495, "j1747": 495, "j1748": 495, "j1753": 495, "j1800": 495, "j1801": 495, "j1802": 495, "j1809": 495, "j1811": 495, "j1824": 487, "j1825": 473, "j1843": 67, "j1844": 67, "j1ivr7j8": 470, "j1otsekn": 484, "j1t0xlzw": 484, "j2028": 487, "j2158": 487, "j2347": 511, "j2350": 511, "j2351": 511, "j2352": 511, "j2356": 511, "j2357": [487, 511], "j2358": [487, 511], "j2359": [487, 511], "j_": 23, "jackson": [87, 91], "jacob": [428, 447], "jacobian": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 434], "jalel": [435, 438], "jan": [391, 392, 395, 398, 403, 407, 425], "jana": 453, "januari": [393, 395, 411], "jargon": 419, "jason": 428, "javascript": [87, 91], "jax": 404, "jbernet": 453, "jean": [446, 447], "jeffrei": 498, "jeltema": 513, "jep": 391, "jet": 377, "jfact": 486, "jfact_decai": 486, "jfact_map": 486, "jfactor": [19, 20, 452], "jfactori": 486, "jj": 213, "jk": [103, 107, 111, 521], "jkl": 521, "jl": 521, "jo": [87, 91], "job": [93, 129, 130, 133, 137, 173, 440], "johann": [431, 438, 442, 443, 444, 445, 446, 447], "johannesbuchn": 415, "john": [87, 91, 415], "join": [388, 397, 398, 500], "joint": [100, 111, 112, 123, 134, 138, 139, 148, 150, 215, 291, 394, 395, 398, 402, 406, 408, 415, 419, 428, 429, 431, 432, 447, 448, 454, 456, 459, 460, 462, 463, 464, 466, 473, 477, 481, 488, 489, 490, 492, 496, 497, 498, 501, 505, 509, 523, 525, 582, 583, 584], "joint_fit": 482, "joint_result": 482, "jointli": [497, 502], "jonathan": [442, 443], "jose": [438, 440, 446], "joshi": 438, "jos\u00e9": [394, 402, 406, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 446, 447, 448], "journal": 412, "jouvin": [428, 430, 431, 432, 435, 443, 444, 445, 446, 447], "jp2mzfbf": 484, "jqueri": [87, 91], "jskwarg": [87, 91], "json": [16, 84, 90, 105, 127, 416, 440, 442, 446], "json_data": [16, 84, 90, 105, 127], "json_schema": [16, 84, 90, 105, 127], "jsonschema": [403, 431, 432], "jsviewer": [87, 91, 472], "juan": 453, "jul": [392, 401, 403, 405, 425], "juli": [392, 395, 400, 402, 403, 405, 409, 411, 413, 480, 484], "julia": 453, "julian": 589, "julien": [444, 445, 446], "jun": [400, 402, 403, 408, 409], "june": [400, 404, 425], "junior": [66, 406], "jupyt": [385, 393, 402, 403, 406, 418, 422, 424, 429, 444, 445, 446, 448, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585], "jupyterlab": [385, 403, 406, 423, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "jupytext": 406, "just": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 86, 157, 361, 386, 387, 388, 389, 391, 394, 396, 400, 402, 403, 404, 406, 417, 418, 420, 446, 448, 458, 462, 463, 465, 470, 472, 474, 479, 480, 482, 485, 488, 493, 501, 502, 509, 511, 522, 538, 585], "juypter": 402, "jvgq_cci": 492, "jxc3lemj": 492, "jyear": [87, 91], "k": [19, 33, 52, 53, 103, 107, 111, 204, 226, 279, 337, 460, 462, 464, 487, 490, 493, 495, 501, 521, 538, 542, 554, 561, 572], "kai": [446, 447], "kaori": 430, "kaspi": [30, 31, 32, 39, 45], "katrin": [414, 451, 452, 453], "kb": 394, "keep": [13, 87, 91, 100, 126, 165, 197, 198, 200, 206, 209, 210, 215, 386, 387, 389, 391, 392, 393, 394, 400, 403, 404, 405, 406, 409, 410, 415, 436, 446, 467, 468, 473, 478, 484, 490, 495, 501], "keep_byteord": [87, 91], "keep_column": [87, 91], "keep_mc_id": [104, 110], "keepdim": [165, 167, 170, 197, 198, 200, 206, 209, 210, 427, 432, 492], "kei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 82, 84, 87, 89, 90, 91, 103, 105, 106, 107, 111, 112, 121, 127, 137, 204, 215, 349, 354, 355, 372, 394, 396, 403, 408, 410, 413, 415, 424, 447, 458, 488, 496, 551], "kept": [89, 103, 106, 107, 111, 112, 126, 128, 129, 133, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 386, 392, 406, 410, 458, 484, 523], "kernel": [103, 106, 107, 111, 112, 121, 125, 131, 132, 137, 154, 155, 156, 165, 167, 170, 172, 177, 182, 184, 187, 198, 208, 210, 392, 413, 419, 421, 433, 434, 439, 444, 448, 449, 454, 466, 468, 482, 492, 493, 494, 501, 511, 521, 525, 529], "kernel_width": [137, 466, 472], "kernelbackgroundestim": 434, "kernelbackgroundmapestim": 407, "kev": [109, 137, 202, 466, 488, 489, 538], "keyboard": 423, "keyerror": [91, 204, 410], "keyword": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 68, 82, 83, 84, 86, 87, 88, 90, 91, 95, 102, 103, 105, 106, 107, 111, 112, 127, 128, 130, 131, 149, 150, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 215, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 286, 292, 294, 325, 333, 334, 355, 367, 369, 370, 373, 374, 375, 379, 380, 381, 382, 383, 413, 434, 438, 441, 449, 450, 464, 474, 475, 488, 493, 502, 523, 538, 549], "kg": 52, "khelifi": [415, 430, 432, 435, 438, 441, 445, 446, 447, 449, 450], "kh\u00e9lifi": [412, 449, 451, 452, 453, 454], "kill": 416, "kind": [87, 91, 361, 397, 398, 399, 404, 405, 409, 412, 447], "kinet": 44, "king": [166, 431, 442, 443, 444, 445, 446, 447, 491, 531], "kirsti": [451, 452, 453, 454], "kl": 521, "klepser": 442, "km": [32, 37], "km2": 500, "km2a": [57, 70], "know": [387, 389, 391, 395, 400, 402, 403, 410, 415, 417, 429, 446, 447, 448, 472, 475, 486, 491, 492, 493, 500, 502, 503, 585], "knowledg": [414, 415, 423, 460, 465, 471, 473, 476, 478, 479, 490, 492, 493, 495, 498], "known": [135, 293, 295, 313, 399, 425, 462, 466, 468, 473, 479, 492, 493, 494, 511, 525, 535, 585, 586, 587], "koenig": [294, 454], "konig": [294, 454], "konrad": 453, "kornecki": 453, "kovalev": 485, "kpc": [17, 18, 21, 22, 24, 25, 27, 29, 33, 34, 38, 253, 313, 316, 486, 487, 519, 561], "kurt": 453, "kwarg": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 83, 86, 87, 88, 91, 102, 103, 106, 107, 111, 112, 128, 129, 130, 131, 133, 149, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 179, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 292, 325, 336, 361, 373, 374, 375, 378, 380, 381, 382, 383, 386, 397, 413, 414, 451, 460, 464, 474, 482, 492, 503, 573], "kwargs_ax": [379, 468, 470], "kwargs_background": [111, 112], "kwargs_colorbar": [151, 152, 154, 157, 158, 159, 164, 166, 168, 210, 374], "kwargs_count": [111, 112], "kwargs_excess": [111, 112], "kwargs_extens": [224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280, 473], "kwargs_fit": [111, 112, 379], "kwargs_fp": 102, "kwargs_hist": [379, 468, 470], "kwargs_list": 204, "kwargs_model": 102, "kwargs_npred_sign": [111, 112], "kwargs_point": [205, 228, 252, 464], "kwargs_posit": [224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280, 473], "kwargs_residu": [102, 111, 112], "kwargs_saf": [111, 112], "kwargs_spati": [103, 106, 107, 111, 112, 470, 510], "kwargs_spectr": [103, 106, 107, 111, 112, 470, 510], "kwargs_spectrum": [102, 111, 112], "kyr4z19p": 484, "l": [23, 26, 51, 54, 102, 103, 111, 112, 177, 383, 387, 400, 409, 412, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 472, 473, 478, 481, 482, 487, 488, 490, 492, 493, 494, 496, 497, 498, 500, 501, 509, 510, 511, 521, 525, 538, 561, 570, 584, 586, 587, 588], "l06": [48, 515], "l_": [52, 53], "l_0": [51, 518, 542, 543], "l_snr": 44, "la": 444, "lab": [412, 419, 421, 423, 446], "label": [92, 199, 202, 207, 228, 252, 311, 374, 375, 380, 383, 386, 387, 390, 395, 399, 400, 416, 417, 438, 440, 449, 450, 452, 454, 457, 458, 460, 462, 464, 468, 470, 471, 475, 476, 479, 480, 482, 485, 486, 490, 493, 496, 497, 498, 511, 518, 519, 527, 551, 557, 560, 561, 565, 570], "label_axi": [199, 493], "label_axis2": 493, "labelcolor": 457, "labelmapaxi": [438, 452, 454], "lack": [204, 401, 482], "lafferti": [426, 584], "lafferty1994": 584, "lai": 494, "lambda": [67, 233, 234, 294, 379, 487, 500, 555, 587], "lambda_": [233, 234, 291, 460, 462, 470, 555, 557], "lancast": [139, 148], "land": 417, "landscap": 415, "langl": 19, "languag": [393, 405], "laplac": [241, 544], "laptop": 415, "lar": [402, 427, 428, 429, 445, 446, 447, 450, 452, 454], "larg": [67, 87, 91, 197, 198, 200, 206, 209, 210, 276, 278, 280, 386, 389, 391, 392, 400, 406, 407, 415, 428, 438, 447, 448, 453, 457, 462, 468, 480, 487, 494, 500, 501, 502, 511, 521, 523, 525, 526, 532, 538, 544, 582, 585, 590], "large_scale_compon": [67, 487], "larger": [27, 136, 155, 156, 162, 167, 170, 291, 300, 387, 394, 405, 452, 454, 457, 459, 462, 488, 492, 493, 494, 498, 522, 538, 544, 586, 587], "largest": [103, 106, 107, 111, 112, 210, 386], "last": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 92, 94, 100, 197, 198, 199, 200, 202, 206, 209, 210, 252, 343, 383, 393, 396, 398, 408, 412, 416, 417, 419, 421, 427, 428, 485, 532, 534], "lat": [16, 47, 58, 60, 61, 62, 64, 65, 69, 71, 74, 75, 77, 78, 83, 86, 91, 94, 96, 101, 103, 106, 107, 111, 113, 118, 125, 129, 130, 132, 137, 155, 156, 162, 167, 170, 173, 197, 198, 200, 203, 206, 208, 209, 210, 224, 225, 229, 236, 238, 241, 254, 256, 265, 266, 268, 270, 276, 278, 280, 286, 291, 315, 316, 319, 341, 386, 387, 394, 395, 396, 397, 398, 399, 405, 406, 409, 417, 419, 424, 427, 432, 445, 446, 447, 454, 456, 460, 463, 466, 467, 468, 470, 472, 476, 479, 480, 484, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 504, 505, 509, 510, 511, 513, 520, 522, 523, 525, 530, 537, 538, 542, 543, 544, 545, 546, 547, 548, 582, 589], "lat_0": [229, 238, 241, 256, 265, 266, 280, 401, 409, 466, 467, 470, 471, 473, 474, 475, 478, 479, 487, 488, 495, 496, 501, 509, 510, 542, 543, 544, 546, 547, 548, 549], "lat_0_err": 473, "lat_pnt": [315, 319], "lat_rang": 341, "lat_t": [315, 319], "later": [386, 391, 392, 393, 397, 398, 399, 402, 403, 404, 405, 406, 407, 415, 426, 428, 438, 439, 441, 442, 448, 458, 462, 464, 470, 471, 488, 492, 493, 496, 501, 511, 521], "latest": [129, 190, 281, 313, 389, 393, 406, 411, 412, 416, 420, 449, 457, 465, 467, 470, 471, 472, 478, 481, 490, 522, 538], "latex": [386, 387], "latex_inlin": 452, "latitud": [94, 152, 195, 196, 197, 198, 203, 205, 208, 209, 210, 341, 373, 431, 476, 493, 496, 530, 537, 545], "latpol": 493, "latter": [184, 215, 397, 399, 401, 407, 410, 413, 415, 432, 464, 465, 474, 475, 478, 494, 495, 532, 534, 586], "launch": [419, 421, 446, 585], "laura": [435, 438, 440, 441, 447, 449, 451, 452, 453, 454], "law": [27, 102, 121, 126, 128, 130, 136, 144, 165, 167, 170, 222, 232, 233, 234, 257, 258, 259, 260, 269, 272, 273, 274, 284, 294, 340, 399, 426, 432, 446, 456, 458, 465, 467, 470, 474, 476, 478, 480, 481, 482, 484, 495, 496, 498, 525, 539, 551, 571, 577], "law2": 564, "layer": [87, 91, 398, 405], "layout": [438, 470, 478, 493, 500, 509, 510], "lazi": [88, 100, 103, 106, 107, 111, 112, 278, 322, 446], "lazili": 103, "lazyfitsdata": 434, "lbnqx57j": 496, "lc": [86, 133, 207, 399, 401], "lc_1d": [126, 128, 149, 479, 480, 481, 485], "lc_3d": 479, "lc_estim": 401, "lc_maker_1d": [479, 480, 481], "lc_maker_3d": 479, "lc_new": 480, "le": 90, "lea": 435, "lead": [125, 386, 395, 400, 405, 407, 409, 411, 412, 415, 431, 454, 498, 500, 502, 513, 585], "leak": [464, 534], "leakag": [294, 454, 479], "learn": [152, 157, 386, 403, 406, 416, 419, 421, 423, 447, 460, 462, 466, 472, 473, 474, 476, 485, 487, 488, 490, 493, 496, 498, 500, 505, 511, 585], "least": [43, 44, 138, 147, 386, 389, 391, 395, 474, 485, 537], "leav": [391, 398, 400, 401, 403, 406, 418, 495], "lefaucheur": [444, 445, 446], "left": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 107, 111, 126, 128, 133, 137, 155, 157, 197, 198, 200, 206, 209, 210, 234, 239, 259, 272, 273, 296, 299, 302, 386, 394, 396, 400, 402, 405, 409, 423, 466, 472, 479, 481, 485, 487, 495, 523, 532, 535, 543, 544, 551, 552, 555, 556, 558, 559, 561, 563, 566, 567, 568, 569, 573, 574, 575, 577, 586, 587, 588], "legaci": [386, 446, 447], "legacy_altaz": 85, "legal": [87, 91], "legend": [383, 457, 458, 460, 462, 464, 470, 471, 475, 476, 479, 480, 482, 485, 486, 490, 496, 497, 498, 501, 518, 519, 527, 551, 557, 560, 561, 565, 570], "legend_kwarg": 383, "lemi\u00e8r": 446, "len": [83, 291, 383, 466, 473, 474, 475, 480, 482, 484, 485, 487, 492, 495, 511, 525], "lenain": [446, 447], "length": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 80, 82, 87, 91, 94, 173, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 294, 325, 379, 412, 415, 460, 462, 465, 472, 476, 484, 487, 490, 493, 501, 511, 542], "lengthi": 493, "lennarz": [429, 443, 445], "leq": [542, 547, 548], "less": [77, 196, 198, 202, 243, 279, 302, 386, 391, 393, 404, 415, 417, 446, 490, 496, 497, 498], "let": [67, 285, 386, 389, 391, 395, 400, 403, 419, 422, 446, 447, 448, 460, 463, 464, 465, 466, 470, 471, 472, 473, 474, 476, 481, 482, 487, 488, 490, 493, 494, 496, 498, 501, 509, 511, 585], "level": [6, 11, 15, 16, 83, 84, 90, 105, 125, 127, 135, 215, 293, 295, 386, 387, 389, 390, 391, 397, 399, 401, 405, 406, 407, 410, 413, 419, 423, 430, 431, 432, 433, 434, 438, 446, 453, 456, 459, 460, 462, 463, 466, 467, 468, 470, 472, 474, 478, 479, 480, 481, 482, 485, 486, 489, 490, 495, 497, 500, 501, 502, 503, 505, 507, 511, 512, 521, 522, 523, 530, 532, 533, 583, 584, 585, 589], "levelnam": 386, "levmar": [215, 490], "lf": 417, "lgpl": 386, "lgtm": 417, "lhaaso": [55, 57], "li": [121, 125, 180, 392, 415, 457, 466, 468, 474, 489, 584, 587], "lib": [350, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 549, 557, 573], "librari": [87, 91, 386, 391, 392, 396, 406, 412, 424, 459, 462, 474, 496, 500, 510, 513, 522, 525, 583, 585], "licenc": 412, "licens": [412, 423], "lie": [195, 196, 202, 205, 208, 489], "life": [393, 490], "lifetim": [20, 453], "lifetime_age_of_univers": 20, "light": [15, 73, 77, 133, 141, 230, 243, 301, 390, 397, 399, 402, 406, 410, 419, 432, 434, 435, 442, 445, 447, 452, 453, 456, 458, 483, 484, 485, 505, 523, 524, 534, 539, 581, 583], "light_curv": [16, 243, 406, 447, 456, 463, 467, 468, 470, 479, 483, 509, 580], "light_curve_flar": [456, 480, 483], "light_curve_model": 580, "light_curve_simul": [456, 481, 483], "lightcrv_pksb1222": [243, 580], "lightcurv": [71, 73, 74, 75, 77, 78, 122, 128, 133, 140, 141, 142, 143, 149, 206, 207, 243, 298, 299, 301, 395, 397, 402, 405, 407, 410, 419, 430, 432, 433, 434, 438, 444, 445, 446, 447, 449, 450, 452, 453, 456, 479, 480, 483, 489, 505, 520, 525, 580], "lightcurve1": 140, "lightcurve2": 140, "lightcurve_at_energi": 410, "lightcurveconfig": 16, "lightcurveestim": [122, 401, 402, 407, 410, 419, 430, 432, 434, 435, 438, 446, 447, 452, 479, 480, 481, 484, 525], "lightcurvetablemodel": [397, 399], "lightcurvetempl": 397, "lightcurvetemplatemodel": [451, 452], "lightcurvetemplatetemporalmodel": [275, 409, 449, 452, 454, 475, 496, 580], "like": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 50, 52, 53, 67, 80, 82, 87, 88, 91, 145, 146, 161, 169, 197, 198, 200, 204, 206, 209, 210, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 313, 333, 343, 385, 386, 387, 389, 391, 392, 393, 394, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 418, 419, 423, 429, 438, 440, 441, 445, 446, 448, 449, 451, 452, 457, 458, 460, 462, 463, 464, 465, 468, 475, 476, 482, 485, 486, 488, 490, 491, 493, 497, 498, 500, 501, 505, 509, 511, 513, 514, 521, 525, 530, 538, 548, 583, 585, 586, 587, 588], "likelhood": 398, "likelihood": [100, 102, 103, 106, 112, 125, 126, 127, 128, 130, 135, 137, 138, 147, 247, 292, 309, 310, 386, 392, 395, 398, 399, 402, 404, 406, 407, 408, 410, 415, 419, 426, 428, 429, 432, 439, 442, 445, 447, 448, 453, 454, 460, 462, 463, 464, 466, 472, 476, 479, 480, 482, 488, 489, 490, 492, 498, 501, 509, 510, 513, 521, 523, 525, 561, 583, 584, 586, 587], "likelihood_profil": [397, 428], "likelihood_typ": 433, "likewis": [198, 210], "lima": 121, "lima1983": [523, 584, 587], "lima_map": 468, "lima_maps2": 468, "limamapestim": [407, 434], "limit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 77, 80, 87, 91, 102, 114, 115, 125, 126, 127, 128, 129, 130, 133, 134, 137, 138, 147, 154, 169, 172, 202, 219, 221, 257, 292, 293, 295, 333, 334, 373, 392, 394, 395, 397, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 414, 415, 428, 434, 438, 445, 446, 447, 448, 453, 457, 462, 466, 470, 473, 476, 479, 488, 489, 490, 493, 494, 497, 501, 509, 521, 523, 525, 534, 543, 561, 570, 583, 584, 588], "lin": [19, 20, 202, 206, 207, 210, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 292, 325, 326, 327, 414, 475, 491, 493, 503, 538, 561], "line": [6, 13, 46, 82, 83, 87, 91, 102, 103, 106, 107, 111, 112, 158, 164, 166, 168, 205, 206, 228, 252, 345, 346, 383, 385, 387, 389, 392, 395, 397, 400, 402, 403, 410, 417, 418, 419, 421, 423, 432, 443, 446, 454, 470, 490, 492, 496, 513, 525, 538, 583], "line2d": [205, 228, 252], "linear": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 151, 152, 153, 154, 157, 159, 161, 164, 169, 197, 198, 200, 206, 207, 209, 210, 222, 223, 226, 230, 232, 233, 234, 239, 243, 244, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 276, 277, 279, 280, 281, 325, 386, 449, 456, 470, 475, 476, 478, 493, 496, 501, 509, 510, 539, 581], "linear_model": 576, "linearli": [207, 210, 493, 521], "linearsegmentedcolormap": [376, 377], "linearstretch": [376, 377], "lineartemporalmodel": [275, 496, 576], "lineno": 386, "liner": [279, 400], "linestyl": [457, 482, 484, 486, 498, 519, 538, 542, 543], "linewidth": [228, 252, 383, 387, 484], "linhoff": [450, 451, 452, 453, 454], "link": [67, 69, 80, 102, 228, 252, 291, 389, 391, 394, 395, 398, 406, 412, 416, 417, 423, 424, 435, 438, 440, 444, 445, 446, 458, 459, 462, 463, 464, 465, 467, 470, 471, 478, 480, 481, 487, 490, 496, 498, 500, 510, 511, 525, 570, 582], "link_to_nasaad": 387, "linkag": 311, "linkage_kwarg": 311, "linkcheck": 387, "linspac": [83, 156, 197, 198, 200, 206, 209, 210, 215, 474, 476, 482, 490, 491, 493, 498, 537, 542], "lint": [16, 84, 90, 105, 127], "linux": [393, 403, 417, 420, 447, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 585], "list": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 121, 123, 125, 126, 128, 129, 130, 133, 134, 137, 138, 139, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 172, 173, 177, 178, 180, 181, 183, 184, 185, 186, 189, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 334, 344, 345, 346, 348, 375, 379, 380, 382, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 462, 465, 466, 471, 475, 476, 478, 479, 481, 484, 485, 488, 489, 490, 491, 492, 497, 498, 500, 501, 502, 503, 505, 510, 521, 525, 528, 537, 538, 582, 583, 584, 585], "list_format": [87, 91], "listen": 525, "listenv": 389, "liter": [16, 84, 90, 105, 127, 331, 386], "literatur": [415, 513, 515, 584], "littl": [87, 91, 405, 407, 413, 493, 501, 530, 534, 585], "live": [83, 86, 88, 386, 391, 394, 396, 407, 415, 448, 451, 489], "live_point": 415, "livetim": [67, 88, 89, 106, 108, 112, 167, 189, 191, 192, 392, 457, 459, 462, 463, 465, 472, 474, 475, 478, 481, 487, 488, 491, 493, 501, 502, 511, 521, 525], "livetime_fract": 89, "ljouvin": 392, "ll": [126, 128, 137, 389, 391, 403, 420, 457, 458, 459, 462, 464, 467, 468, 472, 479, 480, 481, 482, 484, 485, 585, 587], "llvm": 423, "ln": [53, 490, 568], "lo": [23, 415, 445], "lo_bnd": 202, "lo_threshold": 154, "load": [66, 67, 83, 86, 87, 91, 100, 102, 103, 106, 107, 111, 130, 132, 171, 177, 195, 196, 197, 198, 208, 321, 386, 441, 444, 446, 452, 463, 465, 467, 468, 474, 475, 478, 481, 482, 485, 494, 500, 501, 503, 509, 511, 522], "load_cta_irf": [448, 452], "load_irf_dict_from_fil": [167, 452, 457, 465, 474, 475, 478, 481, 500], "loc": [87, 91, 210, 379, 482, 518, 519, 527, 551, 557, 560, 561, 565], "loc_indic": [87, 91], "local": [17, 18, 21, 22, 24, 25, 27, 87, 91, 145, 146, 182, 195, 196, 205, 206, 208, 386, 387, 389, 394, 400, 415, 416, 417, 420, 424, 428, 438, 463, 466, 467, 468, 473, 474, 486, 492, 505, 509, 525], "local_dataset": 492, "local_dens": [17, 18, 21, 22, 24, 25, 27, 486], "local_to_glob": 196, "localfold": 11, "localis": 321, "localn": [16, 84, 90, 105, 127], "locat": [47, 82, 83, 85, 87, 88, 90, 94, 141, 155, 156, 162, 167, 170, 208, 342, 394, 400, 404, 407, 412, 413, 419, 421, 452, 454, 457, 465, 474, 475, 478, 481, 487, 502, 503, 522, 538, 585], "location_info": 87, "log": [16, 19, 20, 26, 42, 84, 90, 103, 105, 126, 127, 128, 135, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 202, 206, 210, 218, 222, 223, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 276, 277, 279, 280, 281, 284, 287, 296, 302, 324, 325, 327, 372, 381, 398, 402, 415, 425, 442, 449, 453, 456, 458, 463, 465, 466, 467, 468, 470, 471, 472, 475, 478, 479, 480, 481, 484, 486, 488, 490, 491, 492, 493, 496, 498, 501, 502, 507, 509, 510, 525, 527, 537, 538, 539, 562, 570, 571, 577, 584, 585, 586, 587, 588], "log10": 482, "log_": [245, 246, 496, 559], "log_2": 299, "log_en": 496, "log_level": 11, "log_parabola": 460, "log_parabola_norm": 409, "logarithm": [34, 493, 498, 559], "logarithmic_spir": 34, "logb": 42, "logconfig": 16, "logenergyaxi": 445, "loggaussian": 397, "logger": [352, 355, 386, 472], "logic": [16, 84, 86, 90, 105, 127, 183, 410, 454, 493, 494], "logical_and": [197, 198, 200, 206, 209, 210], "logical_or": [197, 198, 200, 206, 209, 210, 492], "loglog": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 324, 457, 486, 517, 518, 519], "lognorm": 486, "logo": 417, "logparabola": [397, 560], "logparabolanormspectralmodel": [246, 263, 409, 435, 496, 560], "logparabolaspectralmodel": [215, 245, 263, 409, 458, 460, 462, 464, 471, 487, 490, 496, 553, 559], "logscal": 432, "logspac": [156, 197, 198, 200, 206, 209, 210, 465, 478, 481, 482, 486, 493, 517, 518, 519, 538], "logspir": [33, 38], "loguniform": [247, 415], "logz": 415, "logz_b": 415, "logz_singl": 415, "logzerr": 415, "logzerr_b": 415, "logzerr_singl": 415, "logzerr_tail": 415, "lomb": [401, 446], "lon": [16, 47, 91, 94, 96, 103, 106, 107, 111, 113, 118, 125, 130, 132, 137, 155, 156, 162, 167, 170, 173, 197, 198, 200, 203, 206, 208, 209, 210, 224, 225, 229, 236, 238, 241, 254, 256, 265, 266, 268, 270, 276, 278, 280, 315, 316, 319, 341, 386, 387, 397, 400, 405, 409, 431, 454, 463, 466, 467, 468, 470, 472, 476, 479, 480, 484, 487, 488, 489, 491, 492, 493, 496, 497, 501, 509, 510, 511, 523, 537, 538, 542, 543, 544, 545, 546, 547, 548], "lon_0": [229, 238, 241, 256, 265, 266, 280, 401, 409, 466, 467, 470, 471, 473, 474, 475, 478, 479, 487, 488, 495, 496, 501, 509, 510, 542, 543, 544, 546, 547, 548, 549], "lon_0_err": 473, "lon_pnt": [315, 319], "lon_rang": 341, "lon_t": [315, 319], "long": [386, 389, 391, 393, 400, 402, 405, 406, 408, 411, 413, 415, 440, 449, 458, 487, 505, 537], "longer": [300, 386, 392, 393, 400, 401, 403, 406, 420, 438, 441, 446, 447, 449, 452, 459, 465, 479], "longest": 201, "longitud": [68, 94, 152, 195, 196, 197, 198, 203, 205, 208, 209, 210, 341, 373, 400, 476, 493, 496, 530, 537, 545], "lonpol": 493, "look": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 83, 88, 103, 106, 107, 111, 112, 128, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 343, 386, 388, 389, 391, 398, 400, 401, 403, 405, 406, 409, 415, 423, 446, 459, 462, 463, 465, 466, 467, 468, 470, 472, 474, 476, 478, 479, 481, 482, 488, 491, 493, 496, 500, 501, 503, 505, 509, 511, 513, 522, 525, 585], "look_up": 444, "lookup": 203, "loop": [87, 91, 334, 399, 452, 462, 487, 493, 502, 509, 525], "lopez": [230, 446, 452, 551], "lopez21": [231, 458, 551], "lopez_2021": 231, "lorim": 35, "lorimer2006": [28, 29, 30, 36, 39, 40, 48], "lose": 386, "loss": 52, "lost": [100, 103, 106, 107, 111, 112, 525, 538], "lot": [82, 386, 389, 391, 392, 393, 394, 397, 399, 400, 402, 406, 417, 427, 429, 430, 438, 446, 447, 463, 472, 501, 509, 510, 535], "low": [87, 91, 154, 202, 336, 386, 387, 390, 395, 416, 444, 446, 456, 459, 462, 466, 472, 474, 488, 494, 495, 500, 501, 505, 509, 512, 532, 586], "low_zenith": 497, "lower": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 126, 128, 154, 183, 202, 204, 207, 222, 223, 226, 227, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 253, 255, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 277, 279, 281, 282, 386, 400, 405, 406, 413, 476, 492, 510], "lower_error": 128, "lowest": [405, 485], "lp": [245, 246, 409, 460, 487, 496, 553], "lp_norm": 560, "lss": 462, "lst": [393, 500], "lsw": 416, "lt": [386, 412, 440, 449, 547, 548], "ltcube": [196, 197, 198, 200, 209, 210, 493], "lts_author": 412, "luca": [428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 449, 452], "lui": 448, "luigi": 443, "luminos": [41, 46, 51, 52, 53, 54, 253], "luminosity_spindown": [51, 54], "luminosity_tev": [52, 53, 519], "lvtm": 481, "lw": [462, 464, 466, 472, 482, 490, 538, 542, 544], "ly": [438, 495], "lyne": 37, "l\u00e9a": [428, 430, 431, 432, 435, 443, 444, 445, 446, 447], "l\u00f3pez": 446, "m": [19, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 52, 53, 87, 91, 94, 97, 113, 118, 133, 195, 196, 197, 198, 200, 206, 208, 209, 210, 310, 386, 387, 389, 400, 416, 418, 419, 420, 421, 475, 486, 490, 491, 493, 496, 507, 530, 534, 536, 537, 538, 549, 585, 588], "m2": [103, 157, 177, 458, 463, 465, 467, 468, 470, 472, 478, 488, 491, 492, 500, 509, 510], "m_": [20, 50, 52, 53], "m_3fhl_gc": 493, "m_4d": 493, "m_allski": 493, "m_b": 586, "m_cube": 493, "m_ejecta": [52, 518], "m_gc": 493, "m_hpx": 493, "m_i": 586, "m_iem_10gev": 493, "m_iem_cutout": 493, "m_iem_gc": 493, "m_iem_interp": 493, "m_sub": 493, "m_sun": 518, "m_wc": [197, 198, 200, 206, 209, 210, 493], "ma": [87, 91, 121, 125, 457, 466, 468, 489, 584, 587], "mac": [87, 91, 386, 393, 417, 445, 585], "machin": [389, 393, 394, 399, 403, 417, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "machineri": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 470], "maco": [403, 447], "macport": [403, 445, 447], "made": [177, 184, 205, 208, 219, 221, 228, 252, 313, 345, 346, 386, 389, 391, 402, 405, 407, 410, 411, 412, 438, 449, 450, 454, 462, 466, 470, 471, 492, 500, 538, 549], "madrid": 396, "magenta": [383, 473, 497], "magic": [97, 419, 424, 440, 446, 449, 464, 501, 584], "magic_ecpl": 285, "magic_lp": [285, 464], "magnet": [42, 50, 51, 54, 561], "magnetic_field": [50, 51, 54], "magnitud": [325, 474], "mai": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 94, 102, 105, 127, 128, 386, 387, 389, 394, 395, 399, 400, 402, 403, 411, 412, 417, 418, 420, 425, 426, 458, 467, 468, 474, 489, 500, 524, 525, 537, 544, 561, 582, 585, 589], "mail": [387, 389, 391, 393, 400, 402, 405, 407, 409, 412, 416, 422, 427, 428, 511, 585], "mailmap": [438, 449], "main": [91, 103, 111, 386, 389, 391, 392, 394, 398, 401, 402, 403, 406, 410, 412, 416, 417, 428, 434, 438, 441, 446, 452, 463, 473, 474, 476, 478, 484, 487, 491, 493, 494, 495, 507, 509, 510, 520, 522, 526, 585], "mainli": [386, 396, 397, 400, 407, 493], "maint": 454, "maintain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 386, 388, 403, 405, 406, 407, 411, 417, 447, 492], "mainten": [386, 393, 412, 417, 429, 451], "major": [205, 229, 238, 241, 386, 390, 391, 395, 403, 411, 440, 446, 447, 542, 543, 544], "majorana": 19, "make": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 46, 59, 82, 84, 87, 90, 91, 95, 102, 105, 127, 172, 173, 177, 178, 179, 180, 182, 183, 184, 187, 188, 193, 194, 196, 197, 198, 201, 202, 205, 207, 208, 209, 210, 279, 343, 345, 346, 357, 385, 387, 388, 391, 392, 393, 396, 398, 400, 402, 403, 404, 405, 406, 407, 410, 412, 413, 417, 419, 421, 423, 426, 427, 429, 432, 433, 438, 440, 443, 444, 445, 446, 449, 451, 454, 458, 459, 462, 464, 465, 468, 470, 474, 478, 479, 491, 492, 493, 496, 500, 501, 507, 511, 522, 525, 585, 586], "make_background": [177, 184], "make_background_fit": 174, "make_background_scal": 174, "make_base_catalog_galact": [446, 515], "make_concentric_annulus_sky_region": 476, "make_contour": 490, "make_count": [177, 178, 179, 184], "make_counts_off": [178, 179], "make_cub": 172, "make_dataset": 173, "make_default_fov_background_model": 174, "make_edisp": [177, 184], "make_edisp_kernel": [177, 184], "make_edisp_kernel_map": 491, "make_edisp_map": 156, "make_effective_livetime_map": [454, 492], "make_exclusion_mask": 174, "make_exposur": [177, 184], "make_exposure_irf": [177, 184], "make_imag": 447, "make_lupton_rgb": 381, "make_map_background_irf": 441, "make_map_count": 392, "make_map_cutout": 392, "make_map_exposure_reco_energi": 392, "make_map_exposure_true_energi": [156, 392, 491], "make_map_fov_background": 392, "make_map_hadron_accept": 392, "make_map_ring_background": 392, "make_map_xxx": 392, "make_maps_off": 182, "make_mask_bkg_invalid": 183, "make_mask_energy_aeff_default": 183, "make_mask_energy_aeff_max": 183, "make_mask_energy_bkg_peak": 183, "make_mask_energy_edisp_bia": 183, "make_mask_offset_max": 183, "make_mean_edisp": 448, "make_mean_psf": 448, "make_meta_t": [177, 184], "make_model": 405, "make_more_random_stuff": 386, "make_observation_time_map": 492, "make_orthogonal_rectangle_sky_region": [130, 476], "make_path": [128, 471, 488, 489], "make_pixel_region": 400, "make_psf": [167, 177, 184, 448], "make_psf_map": 491, "make_quant": 357, "make_random_stuff": 386, "make_region": 400, "make_sky_coord": 400, "make_some_random_stuff": 386, "make_theta_squared_t": [438, 503], "makefil": [417, 442], "maker": [6, 156, 167, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 392, 399, 401, 412, 432, 434, 435, 440, 449, 452, 453, 456, 457, 462, 464, 465, 468, 472, 474, 475, 478, 481, 482, 484, 488, 491, 494, 499, 502, 503, 505, 535, 584], "maker_fov": 510, "maker_safe_mask": [472, 478, 510], "mamba": [389, 418, 419, 440], "manag": [87, 91, 219, 221, 228, 252, 333, 364, 385, 386, 389, 394, 402, 403, 405, 408, 412, 413, 416, 438, 443, 445, 449, 453, 493, 495, 585], "manconi": 430, "mandatori": [183, 389, 399, 412, 475, 496], "mandatory_keyword": 491, "mani": [87, 91, 325, 386, 387, 389, 391, 393, 395, 398, 400, 401, 402, 403, 406, 407, 412, 415, 417, 423, 429, 430, 435, 438, 444, 445, 446, 447, 448, 451, 452, 459, 462, 465, 473, 478, 485, 489, 493, 503, 505, 513, 521, 523, 535, 538, 582, 583, 584, 585, 589], "manifest": 396, "manipul": [87, 91, 410, 413, 440, 498, 537], "manner": [451, 452], "manpow": [391, 403], "manual": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 393, 398, 408, 416, 525, 533, 585, 586], "manuel": [439, 442, 443], "map": [6, 15, 16, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 80, 83, 84, 87, 90, 91, 96, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 118, 119, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 137, 138, 139, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 225, 228, 229, 236, 238, 241, 243, 252, 254, 256, 265, 266, 268, 270, 276, 277, 278, 280, 281, 289, 294, 335, 373, 374, 379, 381, 383, 385, 386, 387, 389, 393, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 413, 415, 419, 423, 427, 428, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 443, 444, 446, 447, 448, 449, 452, 453, 454, 456, 457, 459, 462, 463, 464, 465, 469, 470, 473, 474, 475, 476, 477, 479, 480, 481, 484, 485, 487, 488, 489, 492, 496, 499, 500, 501, 502, 503, 505, 506, 509, 510, 513, 520, 521, 524, 525, 529, 531, 532, 533, 534, 535, 541, 543, 544, 545, 546, 549, 580, 583, 584], "map_": [211, 212, 374, 381], "map_4d": 493, "map_analysi": 405, "map_cent": 280, "map_coord": [83, 156, 167, 170], "map_dataset": [398, 482], "map_dataset_empti": 482, "map_dataset_mak": 482, "map_dataset_on_off": 482, "map_edisp": [113, 118], "map_in": [197, 198, 200, 206, 209, 210], "map_out": [106, 112, 155, 156, 162, 167, 170, 197, 198, 200, 206, 209, 210], "map_result": 466, "map_select": [16, 463, 467, 468, 470, 509], "map_typ": [197, 198, 200, 206, 209, 210, 493, 537], "mapax": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 435, 438, 440, 493], "mapaxi": [19, 20, 26, 103, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 126, 128, 130, 138, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 177, 187, 188, 193, 194, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 381, 387, 401, 410, 429, 430, 432, 435, 438, 448, 452, 454, 457, 459, 462, 464, 465, 471, 472, 474, 475, 478, 480, 481, 482, 484, 488, 491, 492, 493, 496, 501, 502, 503, 510, 529, 532, 534, 535, 537, 538], "mapcoord": [83, 156, 167, 170, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 254, 446, 447, 493, 538, 545], "mapdataset": [98, 99, 101, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 125, 130, 133, 137, 144, 145, 146, 147, 148, 172, 173, 174, 177, 178, 182, 183, 228, 236, 252, 379, 382, 399, 401, 407, 408, 428, 429, 430, 431, 432, 433, 434, 435, 438, 452, 453, 454, 466, 467, 471, 472, 473, 475, 476, 478, 479, 481, 482, 489, 490, 492, 494, 495, 501, 509, 510, 523, 525, 532, 535, 584, 586, 587], "mapdataseteventsampl": [93, 110, 432, 433, 434, 441, 452, 454, 474, 475], "mapdatasetmak": [167, 175, 184, 399, 432, 435, 438, 441, 449, 472, 474, 475, 478, 482, 491, 492, 502, 509, 510, 525, 532, 535], "mapdatasetmetadata": [103, 106, 413], "mapdatasetoff": 440, "mapdatasetonoff": [98, 103, 107, 111, 112, 121, 125, 144, 172, 178, 182, 432, 433, 435, 438, 451, 452, 468, 482, 492, 521, 535, 586], "mapdatasetsampl": 399, "mapdatasetweight": 98, "mapevalu": [397, 398, 431, 432, 435, 438, 449, 450, 451, 453], "mapeventsampl": [430, 431], "mapfit": [397, 398, 428, 447, 448], "mapgeom": [392, 448, 449], "mapmak": [177, 402, 428, 432, 447], "mapmakerob": [431, 432], "mappabl": 410, "mappanelplott": [407, 590], "mapper": 321, "mappingintstrani": [16, 84, 90, 105, 127], "mappingnamespac": [16, 84, 90, 105, 127], "maps_off": 182, "mar": [403, 424, 425, 450], "march": [393, 395, 425, 427, 448], "marco": [17, 19, 20, 21, 22, 24, 25, 26, 27], "margin": [101, 102, 106, 112, 117, 120, 196, 198, 208, 210, 228, 252, 268, 397, 494, 542, 586], "marion": [428, 447], "mark": [91, 386, 397, 416], "marker": [102, 103, 106, 107, 111, 112, 228, 252, 457, 459, 462, 464, 466, 472, 479, 480, 481, 485, 511], "markerfacecolor": [103, 106, 107, 111, 112], "markers": [102, 103, 106, 107, 111, 112, 228, 252, 498], "markov": [415, 584], "mask": [83, 87, 91, 99, 102, 103, 106, 107, 111, 112, 125, 129, 130, 132, 133, 134, 137, 155, 156, 162, 167, 170, 172, 174, 179, 180, 181, 182, 183, 185, 195, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 219, 221, 228, 252, 268, 379, 398, 414, 432, 434, 435, 436, 438, 441, 447, 449, 450, 451, 452, 454, 456, 457, 459, 470, 472, 492, 495, 499, 502, 505, 521, 532, 534, 537, 584], "mask_1": 497, "mask_2": 497, "mask_bright": 487, "mask_contains_region": 210, "mask_data": 494, "mask_energi": [488, 494], "mask_fit": [102, 103, 106, 107, 111, 112, 117, 120, 398, 432, 449, 464, 468, 470, 482, 488, 490, 494, 498, 521], "mask_fit_imag": [103, 106, 107, 111, 112], "mask_imag": [103, 106, 107, 111, 112], "mask_map": [196, 208, 456, 494, 499], "mask_map_catalog": 494, "mask_nearest_posit": [197, 198, 200, 206, 209, 210], "mask_off": 482, "mask_roi": 487, "mask_saf": [102, 103, 106, 107, 108, 111, 112, 183, 398, 432, 488, 492, 494, 521], "mask_safe_edisp": [103, 106, 107, 111, 112, 454], "mask_safe_imag": [103, 106, 107, 111, 112, 155, 156, 162, 167, 170], "mask_safe_psf": [103, 106, 107, 111, 112], "mask_spac": 488, "mask_valid": 102, "masked_ev": 83, "maskedarrai": [87, 91], "maskedcolumn": [87, 91], "mass": [19, 20, 26, 52, 399, 434, 453, 486, 513, 546], "massdm": [19, 20, 486], "master": [392, 393, 400, 416, 417, 426], "match": [87, 91, 110, 115, 135, 195, 196, 198, 201, 202, 203, 205, 208, 210, 212, 293, 295, 386, 394, 446, 448, 453, 462, 465, 481, 489, 501, 520, 537], "match_by_nam": 203, "materi": 415, "math": [238, 385], "mathcal": [490, 521], "mathemat": [496, 498], "mathieu": [438, 441], "mathrm": [19, 20, 23, 103, 107, 111, 157, 486, 490, 521, 586, 588], "mathworld": [340, 341], "matomo": 454, "matplotlib": [19, 20, 26, 66, 67, 83, 132, 151, 154, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 197, 198, 200, 206, 209, 210, 213, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 364, 374, 375, 376, 379, 380, 381, 383, 385, 386, 387, 400, 403, 412, 420, 423, 430, 438, 440, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 517, 518, 519, 525, 527, 528, 529, 531, 534, 542, 544, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 589, 590], "matric": 213, "matrix": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 113, 118, 154, 155, 156, 159, 213, 214, 215, 219, 228, 252, 293, 295, 379, 403, 404, 414, 448, 449, 452, 454, 490, 491, 521, 523, 529], "matter": [1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 400, 406, 414, 447, 452, 453, 456, 492, 499, 501, 505, 514, 583, 585], "matthew": [393, 444, 446, 447], "matthia": [446, 447], "mattox": 466, "max": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 88, 91, 103, 114, 115, 129, 131, 133, 169, 173, 177, 179, 183, 210, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281, 283, 341, 394, 402, 409, 414, 423, 434, 435, 436, 438, 440, 452, 454, 458, 459, 462, 463, 464, 465, 467, 468, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 484, 485, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 501, 502, 509, 510, 511, 513, 532, 534, 535, 542, 561, 564, 570, 587], "max_ag": [45, 515], "max_column": [87, 91], "max_energi": 485, "max_lin": [87, 91], "max_nit": [135, 137, 454], "max_offset": 402, "max_percentil": 83, "max_radiu": [165, 167, 170, 208, 501], "max_region_numb": [180, 534], "max_width": [87, 91], "maxcal": 215, "maxclust": 311, "maxfev": 490, "maxim": [45, 82, 91, 114, 115, 135, 137, 183, 225, 229, 238, 241, 254, 265, 266, 270, 276, 280, 415, 450, 451, 452, 453, 454, 534], "maxima": [145, 219, 221], "maximilian": [438, 440, 441, 450, 451, 452, 453, 454], "maximum": [19, 20, 45, 46, 47, 83, 87, 91, 100, 126, 128, 131, 137, 167, 170, 172, 180, 183, 189, 192, 196, 202, 207, 208, 218, 220, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 293, 295, 340, 342, 345, 383, 389, 392, 400, 440, 460, 466, 485, 489, 492, 493, 498, 502, 510, 515, 523, 534, 561, 583, 584, 587], "maximum_likelihood": 415, "maxmimum": 283, "maxwellian": 32, "mayb": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 394, 396, 397, 408], "mb": [195, 196, 205, 208, 394, 419, 421, 456, 461, 469, 477, 483, 499, 500, 501, 503, 504, 506, 508, 512, 540, 550, 571, 581], "mbox": [103, 107, 111], "mc": 404, "mc_id": [83, 396, 399, 440, 474, 500], "mcerp": 404, "mckee": [53, 453], "mcmc": [404, 406, 415, 428, 433, 435, 561, 584], "mcmc_sampl": [406, 430], "md": [389, 406, 412], "mdm": [26, 486], "mean": [42, 68, 87, 91, 96, 102, 103, 130, 132, 154, 155, 156, 159, 162, 167, 170, 237, 239, 243, 279, 294, 298, 312, 331, 386, 387, 389, 391, 393, 399, 400, 402, 403, 409, 414, 415, 420, 423, 435, 444, 462, 465, 466, 475, 485, 489, 490, 492, 496, 497, 498, 501, 502, 511, 543, 558, 585, 586], "meaning": 496, "meant": [392, 452, 457, 465, 467, 470, 472, 478, 481, 500], "measur": [27, 67, 102, 106, 112, 132, 135, 138, 147, 202, 285, 293, 295, 298, 299, 300, 301, 303, 305, 306, 308, 310, 392, 400, 405, 410, 417, 426, 431, 439, 445, 447, 458, 459, 462, 464, 465, 468, 471, 473, 476, 478, 479, 480, 485, 487, 501, 510, 511, 523, 530, 532, 535, 583, 584, 587, 588], "mechan": [394, 404, 410, 413], "media": 412, "median": [83, 167, 170, 415, 423, 482, 497, 501], "median_zenith": 497, "medium": [45, 52, 386, 395], "meeseeksdev": 386, "meeseeksmachin": 386, "meet": [228, 252, 313, 392, 394, 406, 411, 417], "megabyt": [195, 196, 205, 208], "megnygxr": 484, "mem": [456, 461, 469, 477, 483, 499, 504, 506, 508, 512, 540, 550, 571, 581], "member": [83, 387, 391, 400, 412, 413, 446, 452, 489, 500, 503], "memo": [154, 202], "memori": [87, 88, 91, 92, 100, 103, 104, 106, 107, 110, 111, 112, 195, 196, 205, 208, 276, 278, 280, 364, 386, 396, 398, 399, 402, 408, 410, 432, 438, 453, 465, 478, 525], "memoryobserv": 88, "mender": [451, 452, 453], "mention": [59, 149, 386, 387, 389, 393, 394, 398, 400, 403, 405, 406, 411, 412, 416, 417, 491, 495, 496, 498, 513, 584], "mentor": [389, 406], "mere": 396, "merg": [67, 86, 87, 91, 199, 202, 228, 252, 353, 386, 389, 390, 391, 392, 399, 400, 401, 405, 406, 411, 412, 416, 417, 427, 428, 429, 430, 431, 432, 433, 434, 435, 443, 444, 445, 446, 447, 448], "merge_equ": 86, "mergesort": [87, 91], "mess": 387, "messag": [102, 214, 216, 217, 389, 400, 402, 409, 415, 436, 451, 459, 460, 462, 463, 464, 470, 471, 472, 481, 482, 484, 489, 490, 501, 509, 510, 525, 585], "met": [86, 367, 452, 480, 484, 584], "met_start": 86, "met_stop": 86, "meta": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 87, 88, 91, 94, 100, 103, 104, 106, 107, 109, 110, 111, 112, 126, 128, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 184, 197, 198, 200, 206, 209, 210, 276, 277, 280, 281, 323, 367, 368, 369, 370, 396, 399, 400, 401, 410, 413, 416, 434, 435, 446, 450, 452, 453, 474, 482, 493, 497, 500, 502, 522, 523, 580], "meta_t": [100, 102, 103, 106, 107, 111, 112, 177, 184, 410, 413, 435, 459, 465, 492, 521], "metaattribut": [87, 91], "metadata": [16, 83, 84, 85, 87, 88, 90, 91, 105, 108, 126, 127, 128, 151, 152, 153, 157, 158, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210, 368, 390, 392, 403, 453, 463, 467, 468, 470, 474, 496, 509, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "metadata_fits_export_kei": [84, 90, 105, 127], "metadatabas": 413, "metadatabasemodel": 413, "metapackag": 403, "method": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 293, 295, 301, 303, 311, 321, 325, 329, 333, 334, 335, 360, 373, 375, 385, 386, 389, 392, 395, 396, 397, 400, 401, 402, 404, 405, 406, 408, 410, 412, 413, 415, 419, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 457, 459, 460, 462, 463, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 478, 480, 482, 484, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 520, 522, 524, 525, 529, 532, 534, 535, 536, 538, 559, 573, 582, 583, 584, 585, 587], "method_kwarg": [333, 334], "methoda": 430, "metric": 311, "metropoli": 415, "mev": [74, 83, 151, 152, 153, 157, 274, 457, 458, 465, 467, 470, 472, 478, 481, 482, 487, 491, 493, 496, 500, 501, 511, 570], "meval": 544, "mexico": 502, "meyer": [249, 285, 471, 584], "meyer2010": 584, "mf83z_p0": 484, "mgtime": 401, "michael": [451, 453], "michel": 454, "mid": [114, 441, 452, 500], "middl": [375, 402], "midli": 462, "midpoint": 88, "might": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 185, 202, 215, 386, 391, 397, 398, 400, 403, 405, 410, 412, 413, 415, 416, 419, 421, 428, 462, 480, 482, 488, 492, 494, 501, 502, 505, 511, 513, 521, 525, 532, 538, 585, 587], "migra": [103, 106, 107, 111, 112, 156, 159, 164, 188, 402, 474, 475, 491, 530], "migra_axi": [103, 106, 107, 111, 112, 116, 156, 158, 159, 474, 475, 491, 492], "migrad": [102, 215, 459, 460, 462, 463, 464, 470, 471, 472, 482, 484, 489, 490, 501, 509, 510], "migrad_opt": [215, 490], "migrat": [103, 106, 107, 111, 112, 116, 158, 159, 164, 395, 431, 438, 447, 470, 474, 492, 529, 530], "milagro": [97, 377], "mileston": [395, 416], "milki": [33, 38, 426, 515], "miller": [87, 91], "million": [386, 413], "min": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 91, 103, 129, 131, 133, 149, 177, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281, 283, 299, 341, 401, 402, 409, 414, 423, 438, 446, 454, 458, 459, 462, 463, 464, 465, 467, 468, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 484, 485, 487, 488, 490, 491, 492, 493, 496, 497, 498, 501, 509, 510, 511, 513, 534, 561, 564, 570], "min_count": 174, "min_dist": [145, 146, 180, 466, 472, 534], "min_distance_input": [180, 534], "min_energi": 485, "min_npix": [155, 156, 162, 167, 170, 208, 210], "min_npred_background": 174, "min_num_live_point": 415, "min_pix": 454, "min_signific": 401, "min_significance_lc": 401, "minaya": 448, "mind": [389, 406, 478, 490], "mini": 406, "miniconda": 418, "minim": [19, 20, 26, 114, 115, 136, 197, 198, 200, 205, 206, 209, 210, 211, 215, 222, 223, 225, 226, 229, 230, 232, 233, 234, 238, 239, 241, 245, 246, 249, 253, 254, 255, 256, 257, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 291, 398, 401, 409, 413, 415, 440, 450, 452, 457, 474, 488, 490, 498, 510, 525, 534, 535, 538, 583, 588], "minima": [219, 221, 415, 498], "minimis": [481, 497], "minimmum": [155, 156, 162, 167, 170, 208, 210], "minimum": [19, 20, 26, 47, 83, 100, 125, 126, 128, 131, 136, 141, 145, 146, 149, 150, 172, 174, 180, 202, 205, 207, 217, 218, 220, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281, 283, 287, 292, 296, 299, 313, 340, 342, 345, 381, 403, 415, 440, 446, 462, 466, 474, 489, 490, 493, 498, 501, 523, 525, 534, 561, 588], "mino": [215, 490], "minor": [386, 391, 406, 409, 411, 437, 450, 543, 544], "minos_contour": [430, 448], "minu": [159, 482], "minuit": [102, 123, 215, 216, 217, 291, 397, 404, 432, 447, 448, 452, 459, 460, 462, 463, 464, 470, 471, 472, 482, 484, 489, 490, 501, 509, 510], "minuit_opt": 490, "minut": [406, 417, 446, 458, 462, 463, 466, 468, 470, 472, 473, 474, 476, 479, 480, 481, 482, 484, 486, 488, 489, 490, 492, 495, 498, 509], "mireia": [449, 454], "mirror": 194, "misc": [426, 439, 443, 444, 445], "miss": [82, 87, 91, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 386, 389, 394, 395, 396, 397, 400, 406, 407, 410, 436, 438, 440, 446, 451, 454, 493], "mission": [83, 452, 584], "mistak": [391, 411], "mix": [385, 386, 402, 488, 493], "mixin": [87, 91], "mjd": [86, 94, 128, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 368, 370, 387, 451, 452, 466, 474, 475, 479, 480, 481, 484, 485, 493, 496, 522, 573, 574, 575, 576, 577, 578, 579, 580, 589], "mjdref": [466, 493], "mjdreff": [94, 367, 370, 475], "mjdrefi": [94, 367, 370, 475], "mkdir": [402, 462, 463, 470, 471, 474, 509, 510], "mkn": [511, 584], "mkn_421_3fhl": 511, "mncontour": 215, "mnt": 449, "mock": 473, "mock_dl4": 473, "mode": [16, 84, 85, 87, 90, 91, 94, 103, 105, 106, 107, 111, 127, 131, 155, 156, 162, 167, 170, 173, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 278, 413, 415, 433, 446, 449, 453, 481], "model": [1, 6, 15, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 88, 90, 93, 99, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 117, 120, 121, 123, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 144, 147, 148, 151, 157, 158, 165, 166, 167, 168, 170, 174, 177, 190, 197, 198, 200, 206, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 304, 307, 310, 382, 385, 386, 387, 390, 391, 392, 398, 399, 401, 402, 404, 406, 407, 410, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 460, 465, 466, 468, 473, 476, 478, 482, 489, 491, 492, 493, 494, 499, 501, 502, 505, 513, 514, 520, 521, 523, 525, 526, 530, 532, 533, 540, 550, 571, 581, 583, 584, 587, 588], "model1": [223, 551, 553, 557, 560, 562, 565], "model2": [223, 458, 481, 551, 553, 557, 560, 562, 565], "model_1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 463], "model_2d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_3d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_add": [496, 553], "model_best": 458, "model_best_joint": 462, "model_best_stack": 462, "model_bin_": 484, "model_bin_0": 484, "model_bkg": 488, "model_computed_field": [16, 84, 90, 105, 127], "model_config": [16, 84, 90, 105, 127, 467, 509], "model_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_construct": [16, 84, 90, 105, 127], "model_copi": [16, 84, 90, 105, 127, 470, 496], "model_dump": [16, 84, 90, 105, 127], "model_dump_json": [16, 84, 90, 105, 127], "model_extra": [16, 84, 90, 105, 127], "model_field": [16, 84, 90, 105, 127], "model_fields_set": [16, 84, 90, 105, 127], "model_fit": 481, "model_in_bin": 484, "model_joint": 470, "model_json_schema": [16, 84, 90, 105, 127], "model_manag": [456, 495, 499], "model_nam": [103, 106, 107, 111, 112, 228, 252, 382, 488], "model_parametrized_nam": [16, 84, 90, 105, 127], "model_plot": 473, "model_post_init": [16, 84, 90, 105, 127], "model_prior": 498, "model_read": 498, "model_rebuild": [16, 84, 90, 105, 127], "model_set_axi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "model_simu": [465, 478, 481], "model_spectrum": 496, "model_str": 463, "model_typ": [228, 236, 250, 252, 268, 278, 291, 409, 495], "model_valid": [16, 84, 90, 105, 127], "model_validate_json": [16, 84, 90, 105, 127], "model_validate_str": [16, 84, 90, 105, 127], "model_weak": 498, "model_weak_prior": 498, "model_without_nam": 496, "modelbas": [236, 261, 268, 270, 271, 278, 282, 414], "modeldm": [19, 20], "modelevalu": 397, "modeling_2d": [456, 467, 469], "modelmetadata": 413, "modelmodel_dump": [16, 84, 90, 105, 127], "modelmodel_dump_json": [16, 84, 90, 105, 127], "models_3fhl": 495, "models_4fgl_roi": 487, "models_as_dict": [16, 84, 90, 105, 127], "models_diffus": 474, "models_fil": [16, 463, 467, 468, 470, 509], "models_fit": 478, "models_gc": 495, "models_gp": 500, "models_joint": 470, "models_or": 495, "models_read": 496, "models_select": 495, "models_stack": 470, "models_yaml": 496, "modelsmetadata": 413, "modern": [87, 91, 404], "modernis": [403, 432], "modest": [386, 543], "modif": [16, 84, 87, 90, 91, 105, 127, 386, 389, 408, 415, 416, 449], "modifi": [22, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 87, 91, 93, 103, 107, 111, 128, 129, 130, 133, 137, 173, 215, 333, 358, 383, 396, 398, 402, 408, 412, 413, 415, 433, 435, 436, 438, 440, 448, 451, 452, 454, 458, 463, 475, 492, 494, 498, 502, 509, 523, 538, 589], "modul": [6, 267, 386, 387, 391, 395, 402, 407, 426, 428, 434, 446, 481, 487, 489, 492, 495, 513, 514, 515, 516, 561, 578, 589], "modular": 392, "mohanti": 102, "mohrmann": [402, 427, 428, 429, 445, 446, 447, 450, 452, 454, 584], "mohrmann2019": 584, "moment": [15, 51, 54, 86, 95, 268, 362, 392, 400, 402, 403, 406, 411, 412, 491, 493, 530], "moncar": [215, 490], "monitor": [399, 500, 525], "monkei": 386, "mono": 394, "monoton": 202, "mont": [404, 415, 530, 584], "montecarlo": [104, 110, 215], "month": [78, 389, 395, 400, 403, 405, 406, 411, 416, 420, 426, 427, 428, 429, 430, 439, 442, 443, 444, 445, 446, 447, 448], "monthli": [395, 413, 419, 448], "moor": 24, "morcuend": [448, 451, 453, 454], "more": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 71, 74, 75, 78, 87, 91, 99, 100, 102, 103, 106, 111, 112, 138, 145, 147, 154, 183, 197, 198, 200, 209, 210, 222, 223, 224, 225, 226, 227, 229, 230, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 246, 253, 254, 255, 256, 257, 259, 260, 265, 266, 267, 269, 272, 273, 274, 280, 281, 296, 302, 321, 361, 386, 387, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 423, 432, 433, 434, 435, 438, 445, 447, 448, 452, 454, 458, 459, 462, 464, 466, 468, 470, 474, 475, 481, 484, 485, 486, 488, 490, 492, 493, 494, 495, 496, 497, 498, 502, 503, 505, 511, 521, 522, 523, 525, 534, 535, 537, 538, 543, 582, 583, 585, 587, 589], "moreov": [402, 487, 492, 521], "morpholog": [123, 399, 456, 477, 505], "morphologi": [50, 52, 123, 397, 399, 409, 426, 443, 445, 459, 467, 473, 474, 475, 478, 487, 492, 539], "mosaic": 392, "most": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 83, 87, 91, 95, 121, 128, 385, 386, 387, 389, 391, 392, 393, 394, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 415, 417, 419, 420, 438, 445, 446, 448, 449, 452, 453, 467, 468, 476, 479, 481, 487, 489, 490, 491, 492, 493, 494, 500, 501, 505, 511, 513, 523, 524, 525, 530, 532, 538, 582, 584, 585, 588], "mostli": [56, 69, 313, 386, 387, 392, 393, 394, 395, 400, 402, 405, 406, 407, 410, 411, 413, 417, 438, 446, 487, 492, 503, 511, 587, 589], "motion": [45, 317], "motiv": [183, 391, 393, 394, 400, 403, 405, 416, 496, 525], "move": [291, 391, 392, 393, 394, 397, 400, 405, 406, 407, 410, 416, 422, 428, 429, 431, 432, 433, 434, 438, 439, 443, 444, 446, 447, 448, 449, 465], "move_axi": 452, "movement": 412, "mpatch": 476, "mpg": 67, "mpi": [67, 415], "mpl": 386, "mpl_check_plot": 386, "mpl_kwarg": [462, 472, 476], "mpl_normal": [376, 377], "mpl_plot_check": 386, "mpl_style": 446, "msg": [457, 465, 467, 470, 472, 478, 481, 500], "msh": [468, 487, 492], "msh15": 503, "mst": 500, "mu": [26, 237, 293, 295, 296, 379, 414, 458, 486, 498, 529, 530, 587], "mu_": [296, 302, 586, 587, 588], "mu_background": 585, "mu_bkg": [106, 112, 293, 306, 310, 423, 585, 587], "mu_off": 587, "mu_on": [296, 302, 587], "mu_sig": [295, 306, 310, 468, 586, 587], "mu_x": 587, "much": [198, 386, 392, 397, 400, 402, 405, 406, 415, 431, 438, 465, 470, 476, 482, 498, 501, 511, 544], "mul": [26, 458, 486, 496, 551, 557, 560, 562, 565, 570], "mulitpli": [237, 247, 261, 283], "multi": [87, 91, 196, 208, 395, 400, 414, 432, 435, 439, 446, 456, 460, 466, 477, 488, 490, 491, 496, 497, 501, 505, 523, 525, 537, 583, 584], "multibeam": 35, "multicompon": 454, "multidimension": [392, 402, 414, 453, 489, 505, 530, 583], "multinorm": 404, "multipl": [19, 20, 26, 82, 87, 91, 92, 100, 102, 103, 106, 107, 110, 111, 112, 115, 117, 120, 137, 145, 171, 197, 198, 200, 206, 209, 210, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 386, 387, 392, 395, 398, 399, 400, 402, 404, 407, 408, 410, 414, 415, 419, 428, 435, 436, 438, 446, 452, 453, 454, 464, 470, 480, 487, 488, 489, 492, 493, 494, 496, 501, 523, 537, 561, 570, 582, 583, 584, 585, 590], "multipli": [19, 20, 26, 128, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 238, 239, 241, 243, 245, 246, 249, 252, 253, 254, 255, 257, 258, 259, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 289, 294, 304, 307, 313, 458, 466, 468, 482, 486, 496, 551, 587], "multiprocess": [13, 93, 129, 130, 133, 137, 173, 328, 333, 334, 432, 452, 453], "multithread": 13, "multivari": 404, "multivariategaussianprior": 414, "multiwavelength": 230, "muon": 497, "muoneff": 497, "mur": [26, 486], "must": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 87, 88, 91, 102, 103, 106, 107, 108, 112, 113, 118, 128, 133, 137, 138, 145, 146, 147, 165, 173, 177, 179, 184, 191, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 300, 301, 313, 331, 381, 386, 391, 397, 398, 401, 410, 411, 412, 413, 415, 457, 462, 467, 480, 488, 489, 492, 494, 495, 496, 500, 501, 510, 511, 525, 537], "mutablemap": 204, "mutablesequ": [92, 100, 252], "mutipl": 419, "mutltipl": 389, "my": [386, 408, 409, 415, 418, 474, 475, 488, 496], "my8hv59d": 492, "my_custom_model": 496, "my_flux_map": 410, "my_ob": 89, "my_obs_filt": 89, "my_sourc": 408, "mybind": [417, 446], "myconfig": [11, 585], "mycustomgaussianmodel": [409, 496], "mycustomprior": 498, "mycustomspectralmodel": [263, 496], "mz9f3f2j": 484, "n": [19, 20, 51, 82, 87, 91, 126, 128, 195, 196, 197, 198, 200, 202, 203, 206, 208, 209, 210, 218, 220, 284, 291, 386, 389, 400, 403, 415, 418, 420, 444, 478, 480, 484, 486, 487, 489, 490, 493, 495, 498, 500, 501, 502, 503, 508, 530, 537, 538, 540, 543, 544, 584, 586, 588], "n_": [103, 107, 111, 296, 302, 521, 586, 587, 588], "n_0": [239, 558], "n_bad": 501, "n_bin": 488, "n_bkg": [293, 295, 587], "n_dof": [126, 128, 523], "n_event": [197, 198, 200, 206, 209, 210, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 399], "n_event_bunch": [104, 110], "n_events_bkg": 399, "n_fit_bin": [470, 481, 488, 495], "n_free_paramet": [135, 291], "n_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_ism": [43, 44, 45, 52, 518, 519], "n_job": [16, 93, 129, 130, 133, 137, 173, 333, 452, 463, 466, 467, 468, 470, 476, 480, 492, 509], "n_jobs_default": [93, 129, 130, 133, 137, 173], "n_model": [72, 76], "n_ob": [465, 474, 481], "n_observ": 585, "n_off": [106, 112, 295, 305, 306, 310, 468, 586, 587], "n_off_posit": 464, "n_off_region": [185, 464], "n_on": [293, 295, 296, 302, 305, 306, 310, 423, 468, 585, 586, 587], "n_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49], "n_point": [19, 20, 26, 222, 223, 226, 227, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 253, 255, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 277, 279, 281, 282, 414, 579], "n_scale": 121, "n_sig": [293, 295, 482, 587], "n_sig_matching_signific": [293, 295], "n_sigma": [71, 74, 75, 78, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 291, 293, 295, 457, 466, 476, 480, 487, 488, 489, 509, 511, 523], "n_sigma_sensit": [125, 126, 127, 128, 129, 134, 137, 476], "n_sigma_ul": [71, 74, 75, 78, 125, 126, 127, 128, 129, 130, 133, 134, 137, 466, 476, 479, 480, 487, 488, 489, 509, 511, 523], "n_sourc": [45, 515], "n_spatial_ax": 201, "n_submodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "n_tel": 91, "n_time_bin": [480, 484], "nachiketa": [444, 445], "nadarajah": 148, "naima": [253, 385, 403, 404, 405, 406, 409, 429, 456, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 525, 539, 570, 571], "naimamodel": [429, 432, 434], "naimaspectralmodel": [263, 409, 438, 496, 525, 561], "nakashima": 430, "name": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 94, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 112, 113, 117, 118, 119, 120, 126, 127, 128, 129, 130, 133, 134, 137, 141, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 177, 178, 187, 188, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 311, 312, 334, 365, 366, 381, 387, 389, 392, 395, 396, 398, 399, 400, 401, 404, 405, 408, 409, 410, 412, 413, 414, 415, 416, 419, 421, 428, 429, 430, 431, 432, 433, 434, 435, 438, 447, 449, 450, 452, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 513, 523, 525, 529, 532, 534, 535, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 587], "name1": 490, "name2": 490, "name_err": [129, 130, 133, 134], "name_scan": [129, 130, 133, 134], "name_substr": [228, 252, 495], "name_ul": [129, 130, 133, 134], "namedtupl": 386, "nameerror": 386, "namespac": [6, 16, 84, 90, 105, 127, 386, 405, 407, 431, 434, 444, 496, 514, 589], "namibia": 503, "nan": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 87, 91, 103, 126, 128, 140, 177, 195, 196, 197, 198, 200, 206, 209, 210, 218, 220, 222, 223, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281, 386, 409, 414, 454, 458, 459, 462, 463, 464, 465, 467, 468, 470, 471, 476, 478, 479, 480, 481, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 509, 510, 511, 525, 561, 570], "nan_to_num": [100, 103, 106, 107, 111, 112, 155, 156, 162, 167, 170, 198, 206, 210, 278], "nansum": [197, 198, 200, 209, 210], "nasa": [58, 60, 61, 62, 64, 65, 101, 154, 202, 406, 564], "nativ": [87, 91, 203, 398, 403, 438, 493], "natur": [87, 91, 386, 392, 409, 412, 496, 559], "nauroi": [310, 584], "naurois2012": 584, "navarro": [25, 513], "navi": 458, "navig": [446, 448], "naxi": 493, "naxis1": 493, "naxis2": 493, "naxis3": 493, "naxis4": 493, "nbin": [16, 113, 118, 130, 157, 159, 165, 167, 199, 202, 207, 210, 345, 346, 402, 457, 462, 463, 464, 467, 468, 470, 471, 472, 474, 475, 476, 479, 480, 482, 484, 488, 491, 492, 493, 496, 501, 502, 503, 509, 529, 532, 534, 535, 538], "nbin_per_decad": 202, "nbstripout": 394, "ncall": 415, "nchunk": 294, "ncol": [151, 152, 197, 198, 200, 206, 209, 210, 379, 383, 459, 462, 466, 468, 470, 472, 482, 488, 490, 493, 494, 534, 551], "ncp": 485, "nd": [197, 198, 200, 206, 209, 210, 276, 277, 407, 493, 538], "ndarrai": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 87, 91, 92, 102, 121, 151, 152, 153, 154, 155, 158, 159, 161, 164, 165, 166, 167, 168, 170, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 213, 214, 218, 219, 220, 221, 228, 254, 255, 281, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 310, 313, 324, 325, 326, 335, 340, 342, 375, 379, 380, 386, 488, 493, 511, 537, 538], "nddata": [429, 432], "nddataarrai": [430, 444, 445], "ndecad": [17, 18, 21, 22, 23, 24, 25, 27, 287], "ndim": [103, 107, 111, 113, 118, 152, 154, 157, 196, 203, 208, 464, 467, 472, 476, 488, 489, 491, 492, 493, 500, 501, 511, 523, 538], "ndimag": [210, 400], "ndmap": 489, "ndmin": 313, "ne": 398, "nearest": [26, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 197, 198, 200, 202, 206, 209, 210, 325, 440, 447, 449, 493, 523, 525, 537], "nearli": [386, 438, 459], "nebula": [50, 285, 291, 432, 462, 463, 464, 468, 471, 472, 473, 479, 490, 494, 496, 498, 501, 502, 503, 509, 510, 511, 516, 538, 584], "necess": [410, 498], "necessari": [16, 84, 90, 102, 105, 127, 389, 396, 401, 412, 416, 440, 459, 462, 464, 465, 468, 474, 475, 478, 480, 481, 489, 492, 493, 495, 496, 510, 521, 522, 525], "necessarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 401, 467], "need": [11, 16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 89, 90, 91, 94, 102, 103, 105, 106, 107, 111, 112, 125, 127, 128, 155, 156, 167, 169, 170, 205, 284, 285, 313, 385, 386, 387, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 415, 417, 418, 423, 427, 428, 429, 446, 448, 453, 458, 459, 463, 465, 466, 467, 468, 472, 474, 475, 480, 481, 484, 485, 490, 491, 493, 494, 495, 496, 497, 500, 502, 509, 511, 521, 534, 536, 537, 585, 589], "need_upd": 438, "neg": [19, 20, 26, 87, 91, 126, 128, 129, 130, 133, 134, 137, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 280, 281, 293, 295, 387, 435, 453, 454, 498, 523, 587, 588], "neglect": [131, 183, 457, 492, 523, 588], "neighbor": [158, 166, 168, 440, 447], "neighbour": [325, 546], "neither": [96, 183, 403, 411], "neldermead": 215, "nep": [391, 411], "neraest": 198, "nest": [15, 196, 197, 198, 253, 291, 313, 353, 390, 452, 501, 536, 587], "nested_model": 253, "nestedsampl": 415, "net": [87, 91, 462], "neutrino": [52, 386], "neutron": 36, "never": [383, 385, 386, 389, 392, 396, 400, 408, 415, 502], "nevertheless": [419, 421], "new": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 86, 87, 88, 90, 91, 92, 102, 103, 105, 106, 107, 111, 112, 126, 127, 128, 129, 133, 137, 140, 149, 151, 152, 153, 154, 157, 159, 161, 164, 169, 180, 181, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 228, 252, 268, 278, 303, 313, 337, 364, 371, 389, 391, 392, 393, 394, 395, 396, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 439, 442, 470, 484, 485, 487, 488, 493, 495, 496, 522, 523, 525, 570, 584], "new_attribut": 386, "new_axi": 149, "new_dataset_nam": [228, 252], "new_datasets_nam": [19, 20, 26, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283], "new_ev": 525, "new_flux_map": 410, "new_funct": 386, "new_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "new_model": 570, "new_nam": [87, 91, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210], "new_ob": [88, 525], "new_observ": 92, "newaxi": 537, "newer": [403, 417, 428, 447], "newli": [432, 433, 434], "next": [87, 91, 103, 386, 387, 391, 402, 406, 407, 411, 414, 416, 444, 445, 457, 470, 473, 474, 476, 478, 487, 488, 489, 492, 493, 496, 497, 498, 501], "nfcn": 490, "nfev": [102, 215, 216, 217, 459, 460, 462, 463, 464, 470, 471, 472, 482, 484, 489, 490, 501, 509, 510], "nfw": [25, 27, 513], "nfwprofil": 486, "ni": 386, "nice": [386, 391, 397, 403, 405, 413, 430, 438, 466, 470, 487, 585], "nicer": [386, 423, 511], "nieto": [435, 438, 440, 441, 449, 451, 452, 453, 454], "nieva": [449, 454], "night": [401, 480], "nightli": [419, 479], "nightwise_lc": 479, "nigro": [435, 438, 440, 446, 447, 449, 452], "niter": [126, 128, 137, 415, 466], "nlgvnudi": 484, "nlp9drk3": 470, "nmcid": 441, "nn": 502, "noah": [414, 453], "node": [19, 20, 26, 167, 170, 199, 202, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 254, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 429, 490, 491, 493, 500, 501, 545, 562], "node_typ": [159, 199, 202, 207, 474, 475, 491, 501], "noeth": [435, 436], "nois": [137, 294, 300, 404, 584], "noisi": 500, "non": [16, 84, 87, 90, 91, 100, 103, 105, 106, 107, 111, 112, 117, 120, 126, 127, 128, 135, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 179, 183, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 278, 313, 376, 377, 379, 381, 392, 397, 400, 404, 406, 407, 413, 415, 428, 432, 433, 434, 438, 446, 449, 450, 452, 453, 454, 459, 484, 501, 505, 521, 525, 536, 537, 561, 584], "none": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 286, 291, 293, 294, 295, 310, 311, 313, 316, 321, 325, 333, 334, 335, 337, 340, 341, 342, 343, 352, 355, 361, 369, 373, 374, 375, 379, 380, 381, 382, 383, 386, 398, 400, 403, 410, 413, 414, 415, 440, 451, 452, 454, 458, 459, 460, 462, 463, 465, 466, 470, 471, 472, 474, 475, 476, 478, 480, 481, 482, 484, 486, 487, 488, 489, 492, 493, 495, 496, 498, 501, 509, 513, 521, 537, 542, 543, 544, 585], "nonposit": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "nonposx": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 438], "nonstopmod": 387, "nonzero": 39, "nooverlaperror": 451, "noqa": [19, 20, 154, 190, 201, 202, 208, 383], "nor": [96, 183, 396, 407, 411, 416], "norm": [19, 20, 26, 125, 126, 128, 129, 130, 133, 134, 137, 139, 148, 174, 222, 223, 226, 227, 230, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 245, 246, 249, 253, 254, 255, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 277, 279, 281, 282, 379, 397, 408, 410, 414, 432, 433, 435, 438, 453, 454, 456, 462, 466, 467, 468, 470, 471, 473, 474, 475, 476, 478, 480, 481, 482, 486, 487, 488, 489, 490, 501, 509, 510, 511, 513, 523, 525, 532, 539, 544, 550, 551, 570, 571, 579, 587], "norm_0": [545, 562], "norm_1": [545, 562], "norm_2": [545, 562], "norm_3": [545, 562], "norm_4": 562, "norm_5": 562, "norm_err": [125, 126, 128, 130, 137, 410, 466, 476, 480, 488, 489, 523], "norm_errn": [126, 128, 480, 487, 489, 511, 523], "norm_errp": [126, 128, 480, 487, 489, 511, 523], "norm_only_chang": 450, "norm_prior": 414, "norm_scan": [126, 410, 462, 463, 489, 523], "norm_sensit": [126, 128, 480, 489], "norm_ul": [126, 128, 410, 476, 480, 487, 488, 489, 511, 523], "norma": [33, 38], "normal": [42, 102, 103, 106, 107, 111, 112, 129, 130, 131, 133, 144, 151, 152, 153, 154, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 174, 197, 198, 200, 206, 207, 209, 210, 236, 254, 255, 258, 278, 280, 284, 313, 376, 377, 386, 387, 391, 392, 396, 397, 400, 404, 410, 427, 431, 440, 454, 458, 468, 474, 479, 480, 482, 492, 493, 494, 495, 496, 501, 510, 511, 537, 542, 543, 544, 547, 548, 549, 570, 586, 587], "normalis": [67, 80, 125, 126, 128, 133, 151, 152, 153, 154, 157, 159, 161, 164, 165, 169, 174, 194, 197, 198, 200, 206, 209, 210, 254, 255, 268, 384, 463, 466, 467, 468, 481, 489, 494, 495, 496, 501, 509], "normed_templ": 496, "normspectralmodel": [228, 252, 409, 435, 451, 453, 496, 532], "north": [229, 238, 241, 542], "notat": [435, 527, 529, 535, 588], "note": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 78, 82, 83, 84, 86, 87, 90, 91, 94, 102, 103, 104, 105, 106, 107, 110, 111, 112, 121, 125, 127, 128, 133, 137, 154, 159, 167, 169, 179, 190, 208, 212, 215, 218, 222, 223, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281, 300, 301, 313, 334, 361, 377, 383, 385, 388, 389, 391, 394, 399, 400, 403, 406, 410, 411, 412, 414, 415, 416, 417, 420, 426, 428, 448, 450, 452, 454, 457, 458, 459, 463, 464, 466, 467, 470, 473, 475, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 521, 523, 525, 532, 537, 538, 547, 548, 559, 587, 588, 589], "notebook": [87, 91, 350, 389, 390, 395, 396, 400, 401, 402, 403, 404, 406, 416, 417, 419, 420, 421, 424, 427, 428, 429, 430, 432, 433, 434, 436, 438, 440, 444, 445, 446, 447, 448, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 524, 525, 526, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585], "noth": [337, 403, 498], "notic": [392, 490, 505], "notimplementederror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "notion": 415, "nov": [393, 398, 403, 404, 406, 410, 425, 449], "novemb": [395, 425, 435, 436, 437, 438], "now": [16, 82, 84, 88, 90, 99, 101, 105, 126, 127, 128, 207, 253, 386, 389, 391, 392, 393, 396, 398, 399, 400, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 462, 463, 464, 465, 467, 468, 470, 471, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 488, 490, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 522, 523, 534, 572, 576, 577, 578, 585, 587, 588, 589], "np": [19, 20, 83, 87, 91, 103, 106, 107, 111, 112, 113, 118, 121, 125, 128, 137, 156, 197, 198, 200, 206, 209, 210, 215, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 284, 386, 387, 397, 398, 401, 409, 410, 414, 415, 423, 449, 454, 457, 465, 466, 468, 474, 476, 478, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 496, 497, 498, 517, 518, 519, 523, 525, 532, 537, 538, 542, 543, 545, 570, 578, 585], "npanel": 373, "npix": [196, 205, 208, 209, 210, 462, 472, 491, 501, 534, 538, 541, 545], "npix_max": 196, "npoint": [294, 490], "npred": [103, 106, 107, 111, 112, 125, 126, 128, 129, 130, 133, 134, 135, 137, 278, 297, 309, 397, 398, 399, 408, 410, 426, 428, 435, 438, 444, 446, 454, 466, 474, 476, 480, 487, 488, 489, 498, 501, 521, 523, 587], "npred_background": [103, 106, 107, 111, 112, 126, 128, 435, 464, 465, 476, 488, 523, 587], "npred_background_min": 150, "npred_excess": [125, 126, 128, 130, 137, 139, 148, 466, 468, 476, 480, 482, 489, 523], "npred_excess_err": [126, 128], "npred_excess_errn": [126, 128], "npred_excess_errp": [126, 128], "npred_excess_ref": [126, 128], "npred_excess_ul": [126, 128], "npred_min": 150, "npred_off": [106, 112, 587], "npred_sig": [103, 106, 107, 111, 112, 398], "npred_sign": [103, 106, 107, 111, 112, 382, 438, 452, 488, 587], "npred_signal_min": 150, "npred_sourc": 488, "nrow": [459, 462, 490, 551], "nside": [196, 197, 198, 449, 501, 536], "nside2resol": 198, "nside_til": [196, 198], "nsou": 466, "nstep": 401, "nu": [19, 26], "nu_e": [26, 486], "nu_mu": [26, 486], "nu_tau": [26, 486], "nuclei": 27, "nuisanc": [462, 490, 584, 588], "null": [126, 128, 129, 130, 133, 134, 135, 291, 293, 295, 454, 463, 467, 468, 470, 473, 489, 496, 509, 523, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 587], "null_valu": [134, 135, 291, 476], "nullabl": [87, 91], "num": 83, "numba": 403, "number": [11, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 67, 72, 76, 82, 83, 85, 86, 87, 91, 92, 93, 94, 100, 101, 103, 104, 106, 107, 110, 111, 112, 114, 115, 121, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 173, 174, 177, 180, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281, 282, 287, 291, 293, 294, 295, 308, 313, 331, 333, 334, 335, 336, 337, 340, 341, 342, 343, 345, 346, 373, 379, 390, 391, 392, 395, 397, 398, 399, 400, 401, 405, 407, 410, 412, 413, 415, 416, 423, 428, 438, 440, 441, 442, 447, 448, 449, 452, 453, 454, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 475, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 492, 493, 494, 496, 497, 500, 501, 502, 503, 509, 510, 511, 515, 521, 523, 525, 532, 534, 537, 538, 584, 585, 586, 587, 588], "number_of_column": [87, 91], "number_param": 213, "numer": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 87, 91, 128, 202, 218, 222, 223, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281, 282, 313, 385, 386, 399, 404, 420, 438, 457, 465, 467, 470, 472, 478, 481, 493, 500], "numpi": [19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 92, 102, 113, 118, 121, 128, 151, 152, 153, 154, 156, 157, 158, 159, 161, 164, 165, 166, 168, 169, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 212, 213, 215, 218, 219, 221, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 272, 273, 274, 279, 280, 293, 295, 313, 337, 342, 380, 385, 386, 387, 389, 393, 397, 399, 403, 404, 405, 412, 414, 423, 424, 431, 432, 435, 443, 444, 445, 447, 449, 450, 451, 453, 454, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 509, 510, 511, 517, 518, 519, 523, 525, 537, 538, 542, 543, 545, 570, 578], "numpoint": [215, 490], "numpy121": 389, "nupeak_ob": 511, "nutshel": 589, "n\u00f6the": [438, 440, 441], "o": [67, 82, 87, 91, 102, 204, 228, 252, 386, 395, 400, 403, 407, 410, 418, 419, 421, 430, 438, 441, 444, 445, 446, 452, 457, 459, 462, 466, 472, 479, 480, 481, 484, 485, 493, 497, 498, 500, 584, 585], "ob": [40, 82, 83, 88, 89, 91, 92, 96, 167, 177, 311, 312, 398, 399, 402, 403, 408, 423, 441, 442, 451, 457, 459, 462, 465, 466, 472, 474, 478, 480, 481, 482, 484, 492, 497, 500, 501, 502, 503, 507, 510, 522, 525, 530, 532, 534, 535], "obei": 537, "obj": [16, 84, 90, 105, 127, 464, 484], "object": [6, 15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 100, 102, 103, 104, 105, 106, 107, 111, 112, 126, 127, 128, 131, 132, 133, 135, 140, 141, 142, 143, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 293, 295, 313, 317, 321, 322, 325, 333, 335, 337, 343, 346, 360, 361, 362, 363, 368, 373, 379, 381, 382, 383, 392, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 412, 413, 415, 419, 423, 429, 430, 432, 433, 434, 435, 438, 440, 445, 446, 447, 449, 452, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 471, 473, 476, 478, 479, 480, 481, 484, 485, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 515, 520, 521, 522, 523, 531, 534, 536, 537, 538, 570, 582, 584, 585, 589], "obs2": 525, "obs_": 462, "obs_clust": [92, 497], "obs_col": 472, "obs_con": [16, 463, 467, 468, 470, 509], "obs_copi": 88, "obs_fil": [16, 463, 467, 468, 470, 509], "obs_filenam": 502, "obs_filt": [88, 89], "obs_id": [16, 82, 87, 88, 89, 91, 96, 150, 215, 311, 312, 396, 398, 408, 413, 423, 459, 462, 463, 464, 465, 467, 468, 470, 471, 472, 474, 475, 479, 480, 481, 484, 490, 492, 497, 500, 502, 503, 507, 509, 510, 534], "obs_id_uniqu": 87, "obs_index": 82, "obs_info": [90, 105, 413], "obs_list": [446, 448], "obs_list_vela": 482, "obs_mod": 95, "obs_model": 458, "obs_muoneff": 497, "obs_po": [41, 316], "obs_tabl": [82, 91, 96, 311, 312, 440, 472, 474, 480, 484, 492, 497, 500, 502, 503, 507, 510, 534], "obs_table_filenam": 82, "obs_tim": [16, 463, 467, 468, 470, 509], "obs_time_src": 492, "obs_zenith": 497, "obscor": 453, "observ": [6, 15, 16, 41, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 119, 167, 172, 173, 174, 177, 178, 179, 180, 182, 183, 184, 187, 188, 189, 190, 192, 193, 194, 227, 230, 235, 240, 242, 243, 244, 260, 267, 279, 282, 296, 302, 310, 312, 321, 342, 390, 392, 398, 399, 400, 401, 402, 406, 408, 410, 413, 419, 428, 432, 433, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 456, 457, 459, 464, 465, 467, 468, 470, 471, 478, 481, 482, 484, 485, 490, 498, 499, 500, 502, 503, 505, 507, 513, 521, 522, 525, 528, 530, 532, 534, 535, 561, 584, 585, 586, 587], "observation_clust": [456, 497, 499], "observation_dead_time_fract": [83, 88], "observation_list": 92, "observation_live_time_dur": [83, 88], "observation_time_dur": [83, 88], "observation_time_start": 83, "observation_time_stop": 83, "observationcheck": 447, "observationcta": 396, "observationeventsampl": 453, "observationfilt": [88, 396, 401, 427, 448], "observationlist": [396, 448], "observationmetadata": 413, "observations_list": 92, "observationsconfig": 16, "observationseventsampl": 453, "observationseventssampl": 454, "observationssummari": 432, "observationstat": [427, 432], "observationt": [82, 399, 400, 449, 497, 502, 510], "observationtablecheck": 447, "observationtablesummari": 444, "observatori": [57, 59, 63, 82, 83, 85, 88, 90, 94, 399, 413, 416, 419, 439, 500, 502, 503, 520, 525], "observatory_earth_loc": [83, 88, 454], "observatory_loc": [413, 440, 457, 465, 474, 475, 478, 481], "obsinfometadata": [90, 105], "obstim": [85, 94, 190, 589], "obtain": [85, 103, 106, 107, 110, 112, 126, 128, 141, 299, 396, 401, 403, 404, 410, 448, 454, 462, 463, 464, 466, 468, 474, 475, 480, 484, 485, 490, 493, 494, 498, 509, 511, 521, 525, 529, 530, 586, 587], "obviou": [398, 405, 406, 407, 413], "obvious": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 513], "occur": [197, 198, 200, 209, 210, 343, 386, 406, 407, 411, 501], "occurr": [92, 100, 201, 219, 221, 228, 252], "oct": [394, 396, 397, 401, 403, 406, 412], "octob": 395, "odd": [208, 210], "odd_npix": [208, 210], "odot": [28, 35, 39, 40, 52], "off": [103, 104, 106, 107, 109, 110, 111, 112, 125, 126, 128, 172, 178, 179, 182, 185, 194, 295, 310, 383, 384, 389, 392, 398, 400, 401, 402, 432, 438, 440, 442, 452, 454, 457, 458, 459, 463, 464, 468, 472, 479, 480, 482, 484, 488, 490, 492, 498, 521, 534, 535, 584, 586, 587, 588], "off_2": [106, 112], "off_ev": 482, "off_patch": 482, "off_phas": [178, 482], "off_phase_rang": 482, "offdatabackgroundmak": 443, "offer": [126, 389, 397, 412, 413, 419, 420, 447, 464, 489, 490, 492, 496, 525], "offici": [412, 526, 585], "offlin": [87, 91], "offset": [83, 96, 114, 115, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 173, 177, 183, 184, 189, 192, 197, 198, 200, 202, 206, 209, 210, 386, 392, 400, 423, 432, 442, 444, 446, 451, 452, 453, 454, 457, 464, 465, 467, 470, 471, 472, 478, 482, 491, 492, 497, 500, 503, 510, 522, 530, 532, 535], "offset2": 83, "offset_axi": [157, 158, 159], "offset_band": 83, "offset_from_median": 83, "offset_index": 164, "offset_max": [16, 83, 173, 183, 189, 192, 463, 467, 468, 470, 472, 478, 482, 492, 509, 510, 532, 535], "offset_min": 83, "often": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 141, 285, 376, 377, 386, 391, 400, 401, 402, 404, 445, 457, 459, 463, 467, 468, 471, 472, 478, 484, 488, 490, 492, 494, 509, 510, 521, 525, 584], "ogip": [95, 108, 109, 112, 154, 199, 201, 202, 205, 206, 207, 398, 401, 445, 458, 462, 471, 521, 529, 538], "ogip_column": 206, "ogipdatasetread": 112, "ogipdatasetwrit": [112, 451, 453], "ok": [386, 400, 490], "old": [201, 371, 386, 391, 394, 398, 402, 403, 429, 430, 445, 446, 447, 485], "old_attribut": 386, "older": [393, 403, 420, 445, 487], "oldest": 406, "olga": [443, 444], "olivera": [435, 438, 440, 441, 449, 451, 452, 453, 454], "omega": [19, 20, 23, 267, 284, 500, 542, 578], "omit": [137, 387, 470, 500, 585], "omp": 406, "on_circl": 534, "on_ellipse_annulu": 534, "on_ev": 482, "on_patch": 482, "on_phas": [178, 482], "on_phase_rang": 482, "on_posit": 194, "on_radii": 457, "on_radiu": [472, 482], "on_rectangl": 534, "on_region": [16, 103, 106, 107, 180, 457, 459, 462, 463, 464, 465, 467, 468, 470, 472, 474, 475, 479, 480, 482, 484, 488, 509, 534], "on_region_radiu": [457, 462, 465, 474, 475, 480, 484], "onc": [87, 91, 103, 135, 208, 386, 389, 391, 396, 397, 400, 401, 402, 406, 407, 408, 410, 411, 415, 416, 417, 418, 419, 421, 464, 480, 482, 492, 495, 502, 505, 522, 525, 585], "one": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 70, 84, 87, 89, 90, 91, 92, 93, 95, 99, 103, 105, 106, 107, 110, 111, 112, 115, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 139, 140, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 177, 179, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 287, 291, 293, 294, 295, 321, 326, 342, 357, 373, 379, 380, 386, 387, 388, 389, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 446, 449, 450, 452, 454, 457, 459, 462, 463, 464, 467, 470, 474, 479, 481, 482, 485, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 509, 510, 511, 520, 521, 522, 523, 525, 530, 532, 534, 537, 538, 544, 582, 583, 585, 586, 587, 588, 589], "ones": [87, 91, 121, 125, 129, 133, 137, 154, 201, 390, 394, 398, 400, 403, 406, 414, 420, 423, 481, 485, 491, 493, 513, 532, 584, 585], "ones_lik": [482, 532], "ongo": [389, 392, 393, 417], "onli": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 125, 127, 128, 129, 133, 137, 138, 140, 147, 148, 155, 156, 160, 162, 167, 170, 173, 179, 184, 195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 209, 210, 218, 219, 221, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 272, 273, 274, 278, 279, 280, 293, 295, 313, 333, 361, 383, 386, 387, 389, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 420, 428, 430, 434, 438, 440, 441, 446, 450, 452, 453, 454, 459, 460, 462, 463, 464, 467, 468, 470, 471, 473, 474, 475, 476, 479, 480, 481, 482, 484, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 510, 513, 521, 523, 529, 532, 535, 538, 580, 584, 585, 586, 587], "onlin": [87, 91, 387, 391, 394, 406, 423], "onlinelibrari": 139, "onoff": [441, 521], "onserv": 93, "ontim": [190, 396, 474, 488], "onto": [106, 112, 197, 198, 200, 206, 208, 209, 210, 373, 392, 510, 521, 525, 537, 583], "oo": 412, "op": 402, "opac": 230, "open": [66, 87, 91, 386, 387, 389, 391, 397, 400, 403, 405, 406, 410, 411, 412, 416, 418, 419, 421, 423, 424, 445, 463, 471, 493, 500, 502, 503, 509, 520, 584, 585], "openastronomi": 446, "oper": [87, 91, 196, 208, 223, 386, 392, 397, 400, 433, 435, 438, 447, 448, 452, 458, 488, 495, 496, 537, 538, 551, 553, 557, 560, 562, 565, 570], "opinion": [391, 585], "oppos": [485, 561, 585], "opposit": [197, 198, 415], "opt": [89, 487, 551, 561], "opt_method": 490, "optic": [230, 400, 458, 551], "optim": [19, 20, 26, 102, 134, 137, 148, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 379, 385, 386, 395, 398, 399, 408, 410, 459, 460, 462, 463, 464, 465, 466, 470, 471, 472, 482, 484, 485, 489, 490, 498, 501, 509, 510], "optimis": [19, 20, 215, 216, 217, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 400, 402, 404, 447, 454, 523, 582], "optimize_opt": [215, 470, 478, 489, 490, 510], "optimize_result": [215, 216, 452], "optimizeresult": [102, 215, 216, 459, 460, 462, 463, 464, 470, 471, 472, 482, 484, 489, 490, 501, 509, 510], "optin": 412, "optinon": [111, 112], "option": [11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 287, 289, 291, 292, 293, 294, 295, 299, 300, 301, 303, 308, 310, 311, 313, 324, 334, 337, 340, 341, 342, 343, 345, 346, 349, 354, 355, 357, 368, 369, 373, 374, 375, 379, 380, 381, 382, 383, 386, 387, 389, 391, 392, 394, 395, 397, 398, 400, 402, 404, 406, 409, 413, 415, 417, 418, 419, 420, 421, 427, 428, 429, 432, 434, 435, 438, 440, 444, 446, 447, 448, 449, 451, 452, 453, 454, 466, 470, 478, 479, 481, 487, 488, 492, 493, 494, 496, 497, 500, 501, 509, 510, 521, 523, 525, 537, 538, 580, 584, 585], "option1": 387, "option2": 387, "option3": 387, "option_context": [87, 91], "optionali": 545, "optout": 412, "optpars": 391, "oral": 412, "orang": [387, 462, 470, 476, 479, 482, 486, 489, 498, 534], "orchestr": [392, 396, 398, 402, 463, 509, 510], "orcid": 412, "order": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 94, 100, 101, 102, 103, 106, 107, 128, 140, 151, 152, 154, 155, 156, 157, 158, 159, 162, 164, 167, 169, 170, 173, 177, 184, 187, 188, 193, 195, 196, 197, 198, 200, 201, 205, 206, 207, 208, 209, 210, 278, 291, 313, 383, 386, 387, 392, 397, 398, 400, 401, 402, 403, 410, 411, 412, 414, 415, 428, 429, 430, 431, 432, 433, 434, 435, 438, 454, 462, 463, 464, 466, 470, 471, 474, 482, 487, 490, 491, 492, 493, 496, 502, 509, 510, 511, 536, 537, 538, 585, 588], "ordereddict": [392, 403, 431], "ordinari": 511, "org": [11, 34, 64, 65, 83, 87, 88, 91, 183, 215, 258, 259, 273, 274, 313, 389, 394, 403, 406, 411, 412, 416, 418, 419, 421, 425, 444, 446, 457, 465, 467, 470, 471, 472, 478, 481, 486, 487, 490, 500, 568, 569, 585], "organ": [390, 406, 411, 412, 438, 502, 503, 522, 537], "organis": [393, 402, 405, 412, 446], "orient": [152, 160, 161, 386, 397], "origin": [16, 36, 37, 41, 84, 87, 90, 91, 103, 105, 107, 111, 126, 127, 128, 198, 210, 276, 278, 280, 396, 400, 412, 413, 416, 444, 463, 467, 468, 470, 480, 485, 493, 496, 501, 509, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 588, 589], "orthogon": 346, "orthonorm": 148, "oscar": [446, 447], "osx": 434, "other": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 69, 83, 84, 86, 87, 90, 91, 103, 105, 106, 107, 111, 112, 126, 127, 129, 133, 134, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 179, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 219, 221, 278, 292, 313, 326, 356, 375, 380, 385, 389, 391, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 418, 446, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 521, 522, 523, 525, 530, 532, 534, 538, 553, 582, 583, 585, 589], "other_id": 459, "otherwis": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 103, 105, 106, 107, 111, 112, 127, 165, 204, 208, 210, 212, 218, 219, 220, 221, 228, 252, 283, 313, 379, 399, 409, 412, 454, 495, 496, 501, 552], "our": [386, 389, 395, 400, 402, 403, 405, 408, 409, 410, 412, 428, 429, 445, 454, 457, 459, 462, 463, 464, 467, 468, 470, 471, 472, 475, 480, 481, 482, 484, 493, 494, 498, 502, 509, 510, 585], "ourself": 511, "out": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 92, 94, 100, 102, 128, 197, 198, 200, 206, 209, 210, 252, 265, 266, 385, 386, 387, 389, 391, 394, 396, 398, 400, 402, 404, 405, 406, 411, 415, 416, 423, 424, 426, 432, 446, 460, 464, 467, 468, 484, 493, 494, 500, 501, 509, 511, 513, 514, 534, 547, 548, 582, 585, 589], "out_fold": 402, "outcom": [391, 400], "outdat": [403, 406], "outdir": [16, 82, 93, 463, 467, 468, 470, 509], "outer": [43, 44, 52, 53, 130, 172, 265, 548], "outer_height": [534, 538], "outer_width": [534, 538], "outfil": 386, "outflow": 207, "outlin": [103, 106, 107, 111, 112, 224, 225, 229, 238, 241, 256, 265, 266, 280, 389, 391, 394, 395, 396, 397, 400, 406, 409], "output": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 83, 84, 86, 87, 88, 90, 91, 93, 105, 119, 127, 145, 146, 154, 159, 197, 198, 200, 206, 209, 210, 216, 228, 243, 252, 294, 342, 387, 394, 396, 399, 402, 403, 407, 410, 413, 427, 442, 448, 451, 452, 454, 470, 474, 475, 478, 481, 489, 492, 493, 509, 510, 523, 525, 585, 586], "output_map": [197, 198, 200, 206, 209, 210], "output_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "outsid": [87, 91, 103, 106, 107, 111, 112, 117, 120, 154, 174, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 218, 220, 230, 281, 326, 374, 386, 400, 401, 402, 438, 468, 489, 490, 492, 493, 494, 525, 532, 544, 570], "ov_3vj65": 484, "over": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 83, 87, 88, 91, 92, 95, 102, 103, 106, 107, 111, 112, 129, 137, 141, 154, 155, 165, 167, 170, 177, 184, 187, 188, 190, 191, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 228, 252, 284, 293, 295, 299, 324, 325, 338, 377, 386, 387, 391, 394, 395, 396, 399, 400, 401, 406, 409, 413, 415, 418, 420, 438, 459, 462, 466, 468, 470, 473, 474, 481, 487, 488, 489, 492, 493, 496, 510, 511, 523, 525, 529, 586, 587], "overal": [394, 400, 454, 462], "overcom": [415, 494], "overestim": [523, 587], "overflow": [207, 464, 481, 484, 573], "overkil": 481, "overlai": [463, 489], "overlaid": [103, 106, 107, 111, 112, 462, 463], "overlap": [86, 91, 117, 120, 133, 185, 202, 207, 383, 401, 462], "overlap_ok": 86, "overlin": [103, 107, 111, 521], "overload": 438, "overplot": [487, 520], "overrid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 353, 397, 462, 464, 472, 476], "overridden": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 127, 205, 383], "oversampl": [104, 110, 165, 167, 170, 177, 184, 190, 196, 197, 198, 200, 205, 206, 209, 210, 225, 229, 238, 241, 242, 243, 254, 265, 266, 268, 270, 276, 280, 282, 287, 429, 492], "oversample_energy_factor": [104, 110, 475], "oversampling_factor": [198, 208, 224, 225, 229, 238, 241, 242, 243, 254, 256, 265, 266, 268, 270, 276, 280, 282], "overview": [6, 389, 415, 417, 432, 433, 435, 438, 456, 482, 489, 493, 496, 505, 511, 512, 525, 526, 539, 586], "overwrit": [11, 15, 16, 19, 20, 26, 82, 88, 93, 100, 102, 103, 106, 107, 109, 111, 112, 126, 128, 155, 156, 162, 167, 170, 195, 196, 197, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 216, 218, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 276, 277, 278, 279, 280, 333, 355, 410, 447, 449, 454, 462, 463, 470, 471, 474, 475, 476, 491, 493, 494, 495, 496, 500, 501, 507, 509, 510, 521, 538, 549, 585], "overwrite_templ": [216, 228, 252], "overwritten": [167, 170, 325], "owen": [426, 439], "own": [87, 91, 99, 126, 128, 204, 206, 389, 392, 402, 408, 412, 438, 457, 474, 496, 501, 510, 525, 537, 538], "p": [38, 51, 54, 87, 91, 111, 112, 132, 298, 310, 386, 438, 463, 473, 486, 490, 509, 525, 530, 531, 587], "p0_birth": 43, "p90": 48, "p_": [527, 529, 530, 531], "p_0": [51, 197, 200, 206, 209, 210, 517], "p_dot": [51, 54], "p_i": [197, 200, 206, 209, 210], "p_lat": [197, 200, 206, 209, 210], "p_lon": [197, 200, 206, 209, 210], "p_mean": 42, "p_n": [197, 200, 206, 209, 210], "p_stdv": 42, "p_valu": [293, 295, 490, 585, 587], "pace": [394, 395], "packag": [6, 11, 145, 313, 350, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 400, 403, 404, 406, 411, 412, 413, 415, 416, 418, 422, 423, 424, 425, 426, 428, 431, 432, 434, 435, 438, 441, 442, 443, 444, 445, 446, 447, 449, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 521, 524, 525, 526, 533, 538, 549, 557, 559, 573, 585, 589], "pacman": 443, "paczynski": [36, 37], "paczynski1990": [28, 29, 30, 35, 39, 40, 48], "paczynski1990veloc": 49, "pad": [87, 91, 103, 106, 107, 111, 112, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 177, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 208, 209, 210, 374, 435, 438], "pad_width": [103, 107, 111, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210], "pad_with": [197, 198, 200, 206, 209, 210], "page": [6, 87, 91, 215, 296, 302, 310, 387, 389, 391, 398, 400, 403, 406, 412, 415, 416, 417, 419, 420, 424, 432, 433, 438, 441, 442, 445, 446, 447, 448, 454, 490, 493, 503, 505, 523, 525, 536, 538, 586, 589], "pain": [386, 389, 393], "pair": [16, 84, 90, 103, 105, 106, 107, 111, 112, 126, 127, 128, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 402, 458], "panda": [87, 91, 385, 403, 447, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "panel": [88, 102, 103, 106, 107, 111, 112, 373, 441, 474, 490], "panel_fov": 373, "panni": 438, "papadopoulo": [438, 440], "paper": [57, 59, 63, 72, 74, 129, 183, 406, 412, 415, 447, 480, 485, 487, 492, 502, 513], "papermil": 402, "par": [397, 409, 414, 415, 458, 484, 490, 498, 500], "par_000_amplitud": 490, "par_001_alpha": 490, "par_002_beta": 490, "par_00x_": 397, "par_1": [215, 490], "par_2": [215, 490], "par_alpha": [215, 490], "par_beta": [215, 490], "par_box": 91, "par_nam": [228, 236, 252, 268, 278], "par_to_v": 500, "par_typ": [228, 236, 252, 268, 278], "parabol": [292, 326, 490], "parabola": [245, 246, 456, 471, 490, 539, 571], "paragraph": 391, "parallel": [6, 93, 129, 130, 133, 137, 173, 328, 329, 330, 331, 332, 333, 334, 389, 403, 417, 440, 452, 453, 454, 466, 488], "parallel_backend": [93, 129, 130, 133, 137, 173, 333, 476], "parallelbackendenum": 328, "parallelis": 415, "parallelmixin": [93, 129, 137, 173], "param": [16, 84, 90, 105, 127, 230, 281, 379, 402, 433, 490], "param_nam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "param_pair": 490, "param_set": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "paramet": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 315, 317, 319, 320, 322, 324, 325, 326, 327, 333, 334, 335, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 395, 398, 399, 401, 402, 404, 405, 408, 410, 412, 424, 427, 428, 429, 430, 431, 432, 434, 435, 438, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 479, 481, 482, 484, 486, 487, 488, 489, 491, 492, 497, 498, 500, 501, 510, 511, 513, 521, 523, 524, 525, 532, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588], "parameter": 496, "parameter_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "parameter_matching_signific": 135, "parameter_nam": 387, "parameter_name_scan": 215, "parameter_typ": 387, "parameterestim": [122, 434, 453], "parameteris": [527, 529], "parameters_list": [219, 221], "parameters_nam": [228, 252], "parameters_stat_sum": 414, "parameters_unique_nam": [19, 20, 26, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 490], "parametersensitivityestim": 122, "parametr": [16, 27, 84, 90, 102, 105, 127, 157, 158, 163, 166, 168, 245, 246, 265, 398, 402, 409, 428, 435, 438, 464, 466, 496, 500, 547, 548, 559], "parametricpsf": [158, 166, 438, 440], "parametris": [166, 409, 432, 529, 531, 542, 543, 544, 545, 552, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580], "paramnam": 415, "parent": [16, 84, 90, 105, 121, 125, 127, 129, 133, 137, 208, 386, 396, 413, 480, 489, 523, 561], "parenthes": [397, 403, 450, 452], "parfiv": [403, 431], "park": 35, "parnam": 498, "pars": [16, 84, 85, 90, 105, 127, 196, 205, 387, 400, 454, 457, 465, 467, 470, 472, 478, 481, 494, 500, 585], "parse_arg": 585, "parse_fil": [16, 84, 90, 105, 127], "parse_obj": [16, 84, 90, 105, 127], "parse_raw": [16, 84, 90, 105, 127], "parseabl": 313, "parser": 585, "part": [102, 386, 389, 392, 395, 397, 399, 400, 401, 402, 404, 405, 406, 411, 412, 415, 419, 421, 428, 432, 433, 434, 442, 447, 452, 453, 457, 459, 462, 470, 478, 487, 488, 493, 494, 510, 511, 525, 530, 534], "parti": 391, "partial": [91, 103, 106, 107, 155, 156, 162, 167, 170, 173, 196, 208, 210, 278, 400, 404, 433, 447, 536], "partial_overlap": 91, "particip": [391, 395, 406], "particl": [17, 19, 20, 21, 22, 24, 25, 26, 27, 253, 284, 434, 513, 561], "particle_distribut": [253, 561], "particular": [87, 91, 386, 392, 399, 401, 408, 410, 411, 413, 415, 435, 438, 449, 450, 459, 462, 463, 464, 465, 467, 471, 474, 480, 481, 485, 490, 492, 495, 500, 502, 503, 509, 510, 522, 525, 532, 534, 538, 587], "particularli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "partli": [389, 395, 396, 400, 406, 407], "pass": [15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 68, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 102, 103, 105, 106, 107, 110, 111, 112, 127, 128, 131, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 182, 190, 195, 196, 197, 198, 200, 202, 204, 205, 206, 208, 209, 210, 213, 214, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 292, 294, 313, 325, 333, 334, 335, 340, 341, 342, 343, 373, 374, 379, 381, 382, 386, 389, 396, 398, 399, 400, 401, 413, 434, 438, 440, 452, 453, 454, 459, 460, 462, 463, 470, 471, 475, 479, 480, 485, 487, 488, 490, 491, 492, 493, 494, 496, 497, 500, 509, 510, 511, 525, 536, 537, 538, 542, 543, 585, 589], "pass4": 502, "pass8_edisp_usag": 101, "passkwarg": [464, 484], "past": [386, 391, 394, 402, 403, 406, 407, 409, 412, 414, 423, 444, 446, 447, 493, 585], "patch": [383, 386, 393, 412, 441, 450, 462, 464, 472, 476, 482], "path": [11, 15, 16, 66, 82, 83, 84, 86, 87, 88, 90, 91, 93, 100, 101, 105, 108, 109, 112, 127, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 171, 197, 198, 200, 205, 206, 209, 210, 216, 228, 243, 252, 279, 321, 350, 351, 352, 355, 386, 389, 415, 422, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 523, 579, 580, 585], "path_effect": [205, 228, 252], "path_to_notebook": 386, "path_to_script": 386, "patheffect": [205, 228, 252], "pathlib": [16, 82, 83, 86, 87, 91, 154, 206, 216, 228, 252, 351, 462, 463, 470, 471, 474, 475, 500, 509, 510], "pathpatch": 476, "pattern": [386, 392, 400], "paula": 453, "paulakx": 453, "paz": [439, 442, 443], "pbar": 525, "pc": [46, 47, 50, 52, 518, 519], "pcolormesh": [83, 128, 151, 152, 154, 157, 158, 159, 164, 166, 168, 169, 445, 451, 490, 491], "pd": [87, 91], "pdf": [154, 158, 183, 258, 259, 273, 274, 335, 379, 387, 471, 474, 486, 515, 517, 518, 519, 521, 522, 527, 528, 529, 531, 534, 538, 568, 569, 587, 590], "pdf_in_safe_rang": 154, "pdf_matrix": 154, "pdf_threshold": [154, 155, 159], "pdflatex": 387, "peak": [68, 131, 145, 146, 154, 183, 234, 240, 242, 246, 273, 440, 446, 453, 466, 485, 487, 492, 548], "peak_bright": 68, "peak_brightness_error": 68, "peak_latitud": 68, "peak_latitude_error": 68, "pedant": 386, "peek": [83, 88, 103, 106, 107, 111, 112, 131, 132, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 386, 398, 423, 435, 441, 445, 449, 459, 464, 470, 474, 475, 482, 488, 491, 500, 502, 503, 522, 525, 527, 528, 529, 531], "pei": 454, "penal": 247, "penalti": [415, 498], "peopl": [391, 393, 406, 412, 416, 417, 486, 513, 525, 585], "pep": 391, "pep8": 389, "per": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 99, 101, 102, 103, 106, 107, 111, 112, 114, 115, 125, 126, 128, 129, 130, 133, 134, 139, 145, 148, 149, 150, 167, 170, 202, 235, 243, 244, 287, 296, 302, 310, 386, 392, 398, 399, 402, 410, 412, 413, 426, 434, 438, 440, 453, 457, 465, 474, 478, 479, 481, 486, 492, 493, 497, 498, 502, 503, 521, 525, 528, 532, 584, 586], "per_decad": [202, 462, 464, 474, 475, 482, 488, 501, 529, 535], "percent": 136, "percentag": [154, 183, 492], "percentil": 83, "peresano": 454, "perfect": 154, "perfectli": [543, 585], "perform": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 85, 87, 90, 91, 94, 100, 105, 110, 127, 174, 182, 196, 208, 210, 225, 228, 229, 238, 241, 252, 254, 265, 266, 270, 276, 280, 293, 295, 349, 352, 379, 386, 387, 392, 395, 396, 397, 401, 402, 410, 413, 415, 416, 417, 419, 428, 435, 438, 440, 443, 447, 450, 452, 453, 454, 457, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 478, 479, 480, 481, 484, 488, 490, 492, 493, 494, 495, 497, 502, 505, 509, 521, 525, 533, 534, 537, 543, 561, 583, 584, 585, 586], "perhap": 538, "period": [42, 51, 54, 202, 279, 393, 412, 415, 446, 454, 497, 517], "period_dot": 51, "periodicmapaxi": 454, "periodogram": [294, 401, 447, 454], "permit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 412], "perseu": [33, 38], "person": [386, 389, 391, 393, 394, 395, 399, 404, 407], "perspect": [87, 91], "pertain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "peter": 446, "pf": 26, "pformat": [87, 91], "pformat_al": [87, 91], "pg": 511, "ph": 371, "pha": [108, 109, 112, 206, 398, 444, 447, 462, 471], "pha_": 488, "pha_meta": 108, "pha_ob": [108, 150, 215, 471, 489, 490], "pha_obs23523": [111, 112, 134, 291, 415, 498, 523], "pha_obs23592": 523, "phacountsspectrum": 430, "phacountsspectrumlist": 429, "phase": [50, 52, 53, 89, 175, 178, 279, 391, 396, 397, 400, 401, 403, 405, 410, 423, 428, 447, 449, 452, 454, 456, 496, 514, 525, 539, 581], "phase_axi": 410, "phase_bkg_mak": 482, "phase_column_nam": [178, 482], "phase_curve_model": 579, "phase_filt": 89, "phase_max": 482, "phase_min": 482, "phase_model": 579, "phasebackgroundestim": 432, "phasebackgroundmak": [175, 432, 452, 454, 482], "phasecurv": [279, 446, 579], "phasecurve_lsi_dc": 579, "phasecurvemodel": 409, "phasecurvetablemodel": [397, 399], "phasecurvetempl": 397, "phasogram": [279, 579], "phi": [19, 20, 26, 203, 222, 223, 226, 229, 230, 232, 233, 234, 238, 241, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 317, 409, 478, 495, 496, 501, 511, 530, 542, 543, 544, 546, 547, 548, 552, 554, 555, 556, 558, 559, 563, 564, 566, 567, 568, 569], "phi_0": [222, 224, 225, 229, 232, 233, 234, 238, 241, 245, 246, 254, 256, 258, 259, 265, 266, 269, 270, 272, 273, 274, 276, 280, 409, 490, 552, 555, 556, 559, 563, 566, 567, 568, 569], "phi_ref": [279, 579], "philipp": [446, 447], "phone": 406, "photon": [44, 230, 253, 371, 401, 458, 465, 474, 478, 494, 496, 511, 530, 561, 584], "photutil": [145, 386, 400, 447], "physic": [129, 130, 133, 137, 333, 334, 385, 410, 414, 429, 463, 471, 493, 496, 498, 500, 509, 523, 525, 561, 584, 587, 588], "physicist": [17, 19, 20, 21, 22, 24, 25, 26, 27], "pi": [19, 20, 30, 31, 32, 37, 54, 239, 284, 409, 496, 519, 542, 543, 544, 547, 548, 558, 578], "pick": [386, 393, 400, 411, 428, 511], "pictur": 387, "pie": 525, "piec": [386, 392, 400, 405, 414], "piecewis": [254, 255, 456, 496, 539, 550, 571], "piecewisebrokenpowerlawnormspectralmodel": 409, "piecewisebrokenpowerlawnormspectramodel": 409, "piecewisenormsectralmodel": 435, "piecewisenormspatialmodel": [262, 452, 454, 496, 545], "piecewisenormspectralmodel": [263, 414, 435, 438, 451, 453, 496, 532, 562], "pig": [13, 386, 388, 389, 427, 428, 430, 431, 432, 434, 435, 446, 448, 449, 453], "pii": 139, "pillar": 402, "pin": 447, "pink": [111, 112], "pint": [482, 525], "pintor": [399, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 449, 451, 452, 453, 454], "pip": [385, 389, 393, 403, 418, 419, 421, 428, 447, 500, 585], "pipe": [443, 444, 445], "pipelin": [399, 401, 415, 434], "piron": 584, "piron2001": 584, "pivot": [19, 20, 26, 67, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 453, 487], "pivot_energi": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "pix": [195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 537], "pix_reg": 486, "pix_reg_rec": 486, "pix_to_coord": [195, 196, 199, 201, 202, 205, 207, 208, 453], "pix_to_idx": [195, 196, 199, 201, 202, 205, 207, 208], "pix_tuple_to_idx": 454, "pixcoord": 400, "pixel": [13, 83, 103, 106, 107, 111, 112, 114, 115, 116, 121, 131, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 180, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 225, 228, 229, 238, 241, 252, 254, 265, 266, 270, 276, 280, 397, 426, 430, 444, 447, 466, 474, 476, 488, 492, 493, 501, 511, 521, 523, 535, 536, 537, 546], "pixel_area": 208, "pixel_scal": [121, 196, 208], "pixelis": 537, "pixelregion": [400, 534], "pixilis": 493, "pixreg": 544, "pixregion": 210, "pk": [141, 433, 458, 480, 481, 484, 485, 487, 497, 511, 551], "pks2155": [458, 480, 484], "pks2155_hess_lc": [126, 128, 149, 485, 489], "pl": [67, 80, 125, 130, 137, 174, 250, 257, 258, 259, 409, 460, 466, 476, 480, 487, 488, 489, 496, 511], "pl_model": 577, "pl_spectrum": 498, "place": [83, 86, 87, 91, 92, 100, 103, 106, 107, 111, 112, 145, 151, 152, 153, 154, 155, 156, 157, 161, 162, 167, 169, 170, 180, 185, 197, 198, 200, 206, 209, 210, 252, 278, 308, 359, 386, 387, 393, 394, 397, 398, 399, 400, 402, 405, 406, 407, 408, 411, 417, 431, 433, 462, 479, 493, 494, 496, 511, 521, 522, 583, 589], "placehold": 391, "plai": [406, 472], "plain": [403, 493], "plan": [390, 391, 395, 396, 400, 402, 403, 406, 411, 416, 427, 444, 446, 447, 448, 582], "planar": [280, 397], "plane": [29, 67, 68, 129, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 406, 486, 487, 493, 500, 520, 535, 538, 543, 584, 590], "plate": [208, 493], "platform": [403, 412, 438], "plausibl": [413, 473], "pleas": [104, 110, 387, 389, 391, 393, 395, 422, 427, 428, 429, 438, 446, 448, 454, 460, 462, 463, 464, 465, 467, 470, 474, 475, 480, 481, 485, 488, 489, 509, 514, 525], "pleasant": 389, "plot": [6, 19, 20, 26, 66, 67, 83, 88, 102, 103, 106, 107, 111, 112, 128, 131, 132, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 197, 198, 199, 200, 202, 205, 206, 207, 209, 210, 213, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 285, 289, 364, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 387, 400, 401, 402, 404, 405, 407, 410, 415, 423, 426, 429, 432, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 457, 459, 460, 464, 466, 467, 468, 470, 471, 475, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 494, 496, 497, 498, 500, 501, 502, 503, 509, 511, 515, 517, 518, 519, 521, 525, 527, 528, 529, 531, 534, 579, 580, 584, 587, 589], "plot_absorb": [456, 551, 571], "plot_at_energi": [151, 152, 500], "plot_bia": [154, 159], "plot_broken_powerlaw": [456, 552, 571], "plot_compound": [456, 553, 571], "plot_const": [456, 541, 550], "plot_constant_spectr": [456, 554, 571], "plot_constant_tempor": [456, 572, 581], "plot_containment_radiu": [158, 164, 166, 168], "plot_containment_radius_vs_energi": [158, 164, 166, 167, 168, 170, 500, 501], "plot_contour_lin": 490, "plot_correl": [213, 490], "plot_count": [111, 112], "plot_dat": 589, "plot_disk": [456, 542, 550], "plot_distribut": [454, 468, 470], "plot_energi": [83, 475], "plot_energy_depend": [151, 157, 500, 527], "plot_energy_offset": 83, "plot_err": 131, "plot_error": [19, 20, 26, 66, 67, 102, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 238, 239, 241, 245, 246, 249, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 404, 458, 460, 462, 464, 470, 471, 473, 487, 490, 510], "plot_excess": [111, 112, 441], "plot_exp_cutoff_powerlaw": [456, 555, 571], "plot_exp_cutoff_powerlaw_3fgl": [456, 556, 571], "plot_exp_cutoff_powerlaw_norm_spectr": [456, 557, 571], "plot_expdecay_tempor": [456, 573, 581], "plot_extension_error": [224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280], "plot_fit": [102, 111, 112, 459, 462, 463, 464, 472, 482, 509], "plot_gauss": [456, 543, 550], "plot_gauss_spectr": [456, 558, 571], "plot_gaussian_tempor": [456, 574, 581], "plot_gen_gauss": [456, 544, 550], "plot_generalized_gaussian_tempor": [456, 575, 581], "plot_grid": [165, 197, 198, 200, 206, 209, 210, 224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280, 410, 440, 451, 470, 488, 491, 492, 493, 494, 496, 502], "plot_heatmap": 213, "plot_hist": [206, 538], "plot_imag": 83, "plot_interact": [197, 198, 200, 206, 209, 210, 224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280, 440, 447, 470, 478, 493, 509, 510], "plot_kernel": 165, "plot_kwarg": [462, 464, 472], "plot_linear_tempor": [456, 576, 581], "plot_logparabola": [456, 559, 571], "plot_logparabola_norm_spectr": [456, 560, 571], "plot_map_rgb": 452, "plot_mask": [111, 112, 198, 206, 210, 534], "plot_matrix": [154, 488, 501], "plot_migr": 159, "plot_naima": [456, 561, 571], "plot_npred_sign": [452, 470, 472, 510], "plot_offset2_distribut": 83, "plot_offset_depend": [151, 157], "plot_panel": 373, "plot_phasogram": 279, "plot_piecewise_norm_spati": [456, 545, 550], "plot_piecewise_norm_spectr": [456, 562, 571], "plot_point": [456, 546, 550], "plot_posit": [228, 252, 495], "plot_position_error": [224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280], "plot_powerlaw": [456, 563, 571], "plot_powerlaw2": [456, 564, 571], "plot_powerlaw_norm_spectr": [456, 565, 571], "plot_powerlaw_tempor": [456, 577, 581], "plot_profil": 131, "plot_psf_vs_rad": [158, 164, 166, 167, 168, 170, 501], "plot_rad_max_vs_energi": [169, 454, 464], "plot_region": [205, 206, 228, 252, 383, 464, 476, 495, 534, 538], "plot_residu": [102, 103, 106, 107, 111, 112, 436, 438, 470, 510], "plot_residuals_spati": [103, 106, 107, 111, 112, 470, 478, 510], "plot_residuals_spectr": [103, 106, 107, 111, 112], "plot_rgb": 452, "plot_shel": [456, 547, 550], "plot_shell2": [456, 548, 550], "plot_sine_tempor": [456, 578, 581], "plot_smooth_broken_powerlaw": [456, 566, 571], "plot_spati": 438, "plot_spectrum": [102, 151, 470, 481, 488], "plot_spectrum_datasets_off_region": [435, 451, 452, 462, 464, 472, 534], "plot_stat": 462, "plot_super_exp_cutoff_powerlaw_3fgl": [456, 567, 571], "plot_super_exp_cutoff_powerlaw_4fgl": [456, 568, 571], "plot_super_exp_cutoff_powerlaw_4fgl_dr1": [456, 569, 571], "plot_templ": [456, 549, 550], "plot_template_phase_tempor": [456, 579, 581], "plot_template_spectr": [456, 570, 571], "plot_template_tempor": [456, 580, 581], "plot_theta_squared_t": 503, "plot_tim": 83, "plot_ts_profil": [128, 462, 463, 476, 479, 489], "plotmixin": [111, 112], "plotter": 373, "plsuperexpcutoff3fgl": 445, "plsuperexpcutoff4fgl": 430, "plt": [19, 20, 26, 66, 67, 132, 151, 157, 158, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 374, 383, 386, 387, 423, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 517, 518, 519, 525, 527, 528, 529, 531, 534, 542, 544, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578], "plu": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 229, 406, 412, 496], "plug": 415, "pmf": 399, "png": [158, 394, 423, 515, 517, 518, 519, 521, 522, 527, 528, 529, 531, 534, 538, 587, 590], "po": [156, 208, 534], "point": [15, 17, 18, 21, 22, 24, 25, 27, 61, 65, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 91, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 114, 115, 122, 126, 128, 129, 130, 133, 134, 136, 137, 138, 142, 147, 149, 156, 158, 161, 167, 169, 170, 180, 181, 183, 184, 185, 187, 188, 190, 191, 193, 194, 197, 198, 200, 205, 206, 209, 210, 215, 228, 252, 256, 268, 287, 291, 294, 300, 315, 319, 325, 331, 341, 378, 386, 388, 389, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 419, 426, 429, 431, 432, 438, 440, 441, 443, 444, 445, 446, 448, 451, 452, 453, 456, 459, 461, 464, 465, 466, 470, 475, 476, 478, 479, 480, 481, 482, 484, 488, 490, 491, 492, 493, 496, 497, 501, 503, 505, 513, 514, 520, 521, 522, 525, 530, 534, 537, 539, 543, 544, 550, 561, 582, 583, 584], "point_sourc": 397, "pointer": 394, "pointing_altaz": [413, 452], "pointing_galact": 91, "pointing_info": [85, 94, 457], "pointing_posit": [167, 465, 475, 478], "pointing_radec": [83, 91, 452, 500], "pointing_t": 94, "pointing_zen": 452, "pointinginfo": [85, 444], "pointinginfometadata": [90, 105], "pointingmetadata": 413, "pointingmod": 85, "pointlik": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 446, 534], "points_scal": 325, "pointskyregion": [179, 184, 205, 256, 441, 464, 475], "pointsourc": [397, 513], "pointspatialmodel": [19, 20, 72, 80, 137, 262, 409, 410, 431, 451, 466, 467, 470, 471, 474, 475, 479, 487, 488, 495, 496, 501, 509, 510, 546], "pointspreadfunct": 491, "poisson": [106, 112, 293, 294, 295, 296, 302, 305, 306, 310, 343, 398, 399, 429, 434, 460, 465, 468, 478, 584, 585, 587], "poissonian": [137, 294, 482, 485, 584], "poissonlikelihoodfitt": 443, "polar": [51, 54, 314, 386], "pole": [51, 400, 493], "poli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 198], "polici": 390, "pollut": 401, "polygon": [198, 212, 400], "polygonis": 400, "polygonpixelregion": 400, "polygonskyregion": [212, 400], "polynomi": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 249, 493], "polynomial1d": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "polynomialmodel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pool": [329, 333, 334], "pool_kwarg": [333, 334], "poolmethodenum": 329, "poon": 444, "poor": [17, 19, 20, 21, 22, 24, 25, 26, 27], "poorli": [492, 532], "pop": [92, 100, 204, 252], "popitem": 204, "popul": [6, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 387, 406, 445, 514, 516, 561, 583], "popular": 585, "port": 445, "pos_ob": 472, "pos_on": 194, "pos_target": [472, 482], "posit": [16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 90, 91, 94, 95, 96, 103, 104, 105, 106, 107, 110, 114, 115, 126, 127, 128, 129, 130, 133, 134, 137, 155, 156, 162, 165, 167, 170, 180, 183, 185, 194, 196, 197, 198, 200, 205, 206, 207, 208, 209, 210, 211, 218, 219, 220, 221, 224, 225, 228, 229, 238, 241, 252, 254, 256, 265, 266, 268, 270, 276, 278, 280, 291, 293, 295, 311, 312, 315, 316, 319, 320, 374, 386, 393, 397, 399, 400, 409, 410, 411, 412, 428, 430, 435, 438, 440, 453, 454, 457, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 481, 482, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 500, 501, 503, 511, 521, 522, 523, 525, 530, 531, 534, 535, 536, 538, 542, 543, 544, 546, 561, 587], "position_angl": 465, "position_error": [224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280, 432], "position_lonlat": [224, 225, 229, 238, 241, 254, 256, 265, 266, 268, 270, 276, 280], "position_off": 194, "positv": 449, "posixpath": [16, 350], "possibl": [33, 82, 87, 91, 140, 160, 386, 387, 389, 393, 394, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 410, 413, 416, 417, 419, 429, 430, 438, 445, 447, 452, 454, 458, 462, 466, 467, 468, 473, 476, 488, 490, 491, 492, 493, 501, 510, 511, 523, 525, 532, 537, 538, 561, 585, 586], "possibli": [87, 91, 126, 392, 396, 397, 399, 400, 404, 405, 406, 407, 413, 416, 438, 532], "post": [52, 395, 413], "postbuild": 416, "poster": [389, 412, 417, 442], "posterior": [404, 498], "posteriori": 498, "postfix": 386, "potenti": [123, 394, 402, 415, 473, 525], "potentiel": 412, "power": [19, 20, 26, 27, 102, 121, 126, 128, 130, 136, 144, 165, 167, 170, 196, 218, 220, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 260, 264, 269, 271, 272, 273, 274, 277, 281, 284, 289, 294, 340, 397, 399, 426, 432, 444, 446, 454, 456, 458, 465, 467, 470, 474, 476, 478, 480, 481, 482, 484, 495, 496, 498, 525, 539, 551, 571, 577], "power_spectrum": 294, "power_spectrum_param": 294, "powerlaw": [183, 258, 260, 294, 397, 398, 402, 444, 446, 456, 459, 467, 475, 476, 487, 496, 498, 510, 539, 565, 581], "powerlaw2spectralmodel": [250, 258, 259, 263, 409, 460, 467, 496, 511, 564], "powerlaw_with_paramet": 294, "powerlawnormspectralmodel": [67, 236, 257, 259, 263, 278, 408, 409, 414, 435, 453, 470, 471, 474, 475, 478, 488, 495, 496, 501, 509, 532, 545, 565, 570], "powerlawspectr": 137, "powerlawspectralmodel": [70, 72, 76, 80, 102, 111, 112, 117, 120, 125, 128, 134, 137, 219, 221, 257, 258, 263, 285, 409, 410, 414, 458, 459, 460, 463, 465, 466, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 487, 488, 489, 495, 496, 498, 500, 501, 509, 510, 511, 523, 541, 542, 543, 544, 546, 547, 548, 549, 551, 553, 562, 563, 572, 573, 574, 575, 576, 577, 578, 579, 580], "powerlawspectramodel": 414, "powerlawtemporalmodel": [275, 496, 577], "pppc": [17, 19, 20, 21, 22, 24, 25, 26, 27], "pppc4dm": 513, "pprint": [87, 91, 586], "pprint_al": [87, 91], "pprint_exclude_nam": [87, 91], "pprint_include_nam": [87, 91], "pr": [386, 396, 398, 400, 409, 410, 412, 414, 415, 416, 432, 433], "practic": [399, 403, 407, 410, 411, 412, 413, 462, 488, 494, 496, 510, 521, 525, 534, 584], "pre": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 102, 105, 110, 127, 128, 386, 389, 395, 406, 412, 413, 418, 419, 435, 447, 449, 463, 467, 468, 471, 473, 476, 485, 487, 489, 490, 495, 498, 521, 527], "preced": [331, 400, 402, 412, 496], "precis": [135, 137, 158, 164, 166, 168, 225, 229, 238, 241, 254, 265, 266, 270, 276, 280, 386, 404, 411, 412, 475], "precision_factor": [167, 170, 197, 198, 200, 206, 209, 210], "precomput": [26, 102, 128, 454, 488, 495], "pred": 521, "predefin": [419, 421, 440, 476, 479, 480, 509], "predic": 397, "predict": [102, 103, 106, 107, 110, 111, 112, 125, 126, 128, 129, 130, 133, 134, 144, 174, 177, 183, 190, 256, 268, 297, 309, 335, 382, 392, 397, 398, 399, 435, 452, 453, 458, 463, 465, 467, 468, 470, 472, 474, 476, 478, 488, 489, 492, 498, 509, 510, 523, 525, 529, 532, 551, 584, 587], "prefer": [87, 91, 361, 386, 391, 393, 397, 405, 406, 412, 418, 419, 423, 476, 481, 493, 494, 498, 505, 585, 587], "prefix": [202, 397], "preliminari": [395, 406, 414, 443, 445, 453, 466, 491, 501], "prepar": [82, 177, 396, 397, 415, 416, 463, 471, 489, 492, 496, 501, 509, 533, 582], "prepare_input": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepare_output": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "prepend": [87, 91, 313], "presenc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 454, 466, 485, 493, 561, 584], "present": [15, 70, 82, 83, 85, 91, 92, 100, 108, 112, 126, 128, 171, 199, 204, 228, 236, 252, 313, 386, 387, 389, 399, 402, 406, 410, 413, 415, 417, 438, 459, 464, 467, 468, 479, 480, 484, 485, 486, 491, 492, 493, 495, 521, 523, 526, 538, 585, 587], "preserv": [87, 91, 106, 197, 198, 200, 202, 206, 209, 210, 403, 488, 494], "preserve_count": [197, 198, 200, 206, 209, 210, 493], "press": 500, "pretti": [400, 406, 417, 423], "prevent": [198, 230, 313, 438, 470, 532], "preview": [389, 503], "previou": [74, 87, 91, 386, 389, 400, 406, 407, 411, 416, 429, 435, 453, 454, 464, 473, 474, 493, 496, 497, 498, 511, 520], "previous": [291, 403, 434, 446, 447, 457, 462, 470, 471, 487, 492, 494], "primari": [26, 87, 91, 197, 198, 200, 201, 209, 210, 391, 412, 434, 449, 489, 493], "primarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "primary_axi": 201, "primary_band": 493, "primary_hdu": 474, "primaryflux": [19, 20, 486, 513], "primaryhdu": [474, 493], "prime": 23, "primer": 404, "princip": 473, "principl": [386, 412, 414, 462, 535], "print": [11, 67, 82, 83, 85, 86, 87, 88, 91, 94, 96, 102, 103, 107, 111, 113, 118, 125, 128, 130, 137, 152, 154, 157, 158, 164, 166, 168, 177, 180, 219, 221, 228, 243, 252, 285, 311, 312, 321, 353, 386, 387, 397, 398, 401, 410, 413, 422, 423, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 509, 510, 511, 523, 525, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585, 586, 587, 589], "print0": 386, "print_level": [470, 478, 490, 510], "print_stack": 386, "printout": [386, 445, 446, 488], "prior": [19, 20, 99, 102, 103, 107, 111, 218, 219, 220, 221, 222, 225, 226, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 283, 390, 395, 415, 453, 454, 456, 458, 459, 462, 463, 464, 465, 467, 470, 471, 476, 478, 480, 481, 487, 490, 496, 499, 505, 510, 511, 570, 582], "prior_inverse_cdf": 415, "prior_registri": 498, "prior_stat_sum": [218, 219, 220, 221, 414, 498], "priorfitstatist": 414, "priori": [410, 468, 494], "prioriti": [383, 395, 397, 398, 400, 412, 416], "priormodel": 414, "priorparamet": [237, 247, 261, 283, 414, 498], "privat": [386, 389, 395, 409, 446, 502, 503], "pro": [386, 402], "probabl": [13, 102, 138, 147, 148, 159, 389, 392, 393, 394, 396, 399, 400, 404, 406, 408, 414, 415, 417, 462, 465, 478, 490, 493, 496, 498, 501, 529, 530, 531, 584, 585, 587, 588], "probe": [137, 300, 415, 496], "problem": [19, 20, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 308, 364, 394, 396, 400, 407, 414, 422, 450, 490, 525], "problemat": [405, 410, 413, 480, 525], "proce": [389, 417, 419, 421, 449, 458, 459, 462, 463, 474, 478, 480, 494, 495, 500, 501, 509, 510], "procedur": [399, 411, 416, 417, 458, 466, 470], "proceed": [406, 412, 502], "process": [11, 83, 93, 129, 130, 133, 137, 138, 147, 173, 198, 210, 332, 333, 334, 343, 386, 387, 389, 391, 392, 394, 395, 396, 398, 399, 401, 402, 408, 411, 412, 413, 420, 424, 430, 435, 438, 440, 446, 453, 454, 459, 462, 466, 472, 474, 475, 487, 488, 492, 502, 507, 510, 515, 522, 524, 525, 583, 584, 585], "process_lots_of_data": 386, "processor": 406, "prod": 427, "prod3": 406, "prod3b": 500, "prod5": [474, 475, 500], "produc": [15, 103, 106, 107, 111, 112, 116, 126, 288, 290, 386, 387, 392, 401, 402, 410, 411, 413, 415, 417, 432, 458, 459, 462, 464, 466, 471, 472, 473, 474, 478, 480, 482, 486, 490, 492, 498, 500, 510, 525, 528, 530, 585], "product": [110, 138, 147, 197, 198, 200, 203, 206, 209, 210, 279, 392, 401, 402, 412, 413, 423, 438, 452, 453, 458, 460, 466, 475, 482, 488, 490, 492, 501, 503, 523, 530, 584], "prof_mak": 130, "profil": [17, 18, 21, 22, 23, 24, 25, 27, 102, 122, 126, 128, 129, 130, 131, 132, 133, 134, 137, 138, 147, 158, 164, 166, 167, 168, 170, 194, 198, 206, 215, 240, 242, 292, 310, 326, 345, 346, 398, 400, 404, 405, 412, 419, 421, 426, 428, 435, 438, 443, 445, 447, 448, 453, 454, 456, 462, 463, 472, 477, 479, 480, 481, 489, 490, 498, 505, 513, 523, 525, 542, 587], "profile_err": 131, "profile_high": 476, "profile_new": 476, "profuma": 513, "program": [386, 402], "programmat": 470, "progress": [15, 82, 121, 133, 137, 215, 334, 392, 395, 402, 403, 417, 438, 445, 446, 447, 453, 525], "progress_download": 525, "proj": [103, 106, 107, 111, 112, 177, 196, 197, 198, 208, 209, 210, 462, 492, 493, 501, 510, 534], "project": [103, 107, 111, 130, 174, 180, 196, 197, 198, 200, 205, 206, 208, 209, 210, 225, 228, 229, 238, 241, 252, 254, 265, 266, 270, 276, 280, 320, 346, 386, 387, 388, 389, 391, 393, 400, 402, 403, 406, 412, 430, 438, 446, 452, 463, 466, 468, 472, 476, 482, 491, 493, 494, 495, 501, 507, 509, 510, 511, 513, 534, 537, 538, 547, 548, 583, 585], "projected_distance_axi": 130, "prompt": 585, "pronounc": 525, "pronunci": 525, "prop_cycl": 383, "propag": [19, 20, 26, 53, 131, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 299, 397, 404, 432, 452, 490], "proper": [45, 100, 387, 401, 412, 451, 452, 464, 470, 525], "properli": [137, 190, 391, 401, 412, 450, 451, 462, 463, 489, 490, 509, 521, 586], "properti": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 96, 105, 126, 127, 174, 208, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 301, 383, 386, 387, 397, 399, 409, 410, 413, 414, 435, 438, 440, 445, 446, 448, 451, 452, 462, 464, 472, 474, 476, 487, 494, 496, 497, 511, 522, 538, 584], "propos": [386, 388, 390, 391, 392, 393, 395, 403, 411, 412, 414, 416, 428, 431, 432, 434, 435, 446, 452], "protect": 454, "proto": [16, 84, 90, 105, 127], "proton": [284, 561], "prototyp": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 391, 397, 399, 402, 403, 404, 406, 443, 445, 446, 453, 514], "proven": 402, "provid": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 85, 87, 88, 90, 91, 102, 103, 105, 106, 107, 111, 112, 116, 127, 133, 137, 138, 140, 147, 154, 155, 173, 187, 188, 193, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 280, 294, 310, 313, 379, 386, 387, 396, 397, 399, 401, 402, 403, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 428, 431, 432, 433, 435, 438, 440, 449, 452, 454, 457, 462, 464, 465, 466, 475, 478, 485, 487, 488, 489, 490, 492, 493, 494, 496, 497, 501, 502, 503, 505, 510, 511, 513, 515, 520, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 535, 536, 537, 538, 539, 546, 549, 561, 570, 582, 583, 584, 585, 587, 590], "proxi": 396, "prune": [389, 416], "pset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "pseudonym": 389, "psf": [16, 82, 87, 88, 96, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 156, 158, 163, 164, 165, 166, 167, 168, 170, 177, 184, 193, 208, 228, 252, 268, 311, 312, 386, 392, 396, 397, 398, 399, 402, 426, 428, 432, 433, 434, 435, 438, 439, 443, 444, 445, 446, 447, 448, 449, 450, 452, 454, 457, 459, 462, 463, 464, 466, 467, 468, 470, 472, 474, 475, 478, 479, 488, 492, 494, 497, 500, 502, 503, 509, 510, 521, 523, 525, 530, 533, 538, 584], "psf3d": [88, 158, 163, 166, 168, 193, 428, 446, 531], "psf68": 457, "psf_": 521, "psf_3gauss": [87, 158, 500, 531], "psf_assym": 491, "psf_file": 101, "psf_kernel": [167, 501], "psf_kernel_map": [165, 501], "psf_king": [87, 166, 531], "psf_map": [104, 110, 167, 170], "psf_map_reco": [170, 502], "psf_mean": 501, "psf_new": 491, "psf_out": [167, 170], "psf_r95": 494, "psf_tabl": [82, 87, 164, 491, 503], "psf_theta": 386, "psf_updat": [104, 110], "psf_valu": [158, 166, 168], "psfkernel": [106, 167, 170, 198, 210, 398, 407, 447, 531], "psfking": [163, 440, 531], "psfmap": [103, 104, 106, 107, 110, 111, 112, 156, 162, 163, 165, 170, 177, 184, 193, 398, 399, 407, 428, 431, 432, 434, 435, 447, 453, 454, 466, 488, 501, 525, 531], "psfnd": 491, "psr": [482, 487, 511], "public": [6, 376, 377, 389, 391, 400, 405, 408, 411, 417, 442, 459, 471, 479, 480, 484, 583, 590], "publicli": [500, 502, 503], "publish": [11, 403, 417, 462, 501], "pull": [387, 390, 391, 394, 395, 396, 397, 398, 399, 400, 406, 411, 412, 416, 417, 425], "puls": 242, "pulsar": [30, 31, 32, 35, 39, 40, 42, 50, 54, 60, 64, 77, 83, 396, 406, 428, 430, 449, 452, 454, 456, 468, 473, 483, 496, 505, 515, 516, 525], "pulsar_analysi": [406, 456, 482, 483], "pulsat": 267, "pulse_stat": 482, "punch": [451, 453], "pure": [386, 403, 405, 406, 534], "purpl": 538, "purpos": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 337, 361, 390, 392, 398, 401, 405, 409, 411, 412, 446, 466, 488, 495, 496, 529], "push": [386, 389, 416, 449], "put": [202, 386, 387, 389, 391, 393, 394, 397, 406, 416, 417, 423, 429, 465, 474, 494, 501, 525, 585], "puv9bl5v": 484, "pwbpl": 409, "pwd": [389, 419, 421], "pwl": [19, 20, 26, 128, 219, 221, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 285, 397, 409, 414, 458, 460, 474, 489, 496, 498, 523, 541, 542, 543, 544, 546, 547, 548, 549, 551, 553], "pwl2": 496, "pwl_decai": 474, "pwl_norm": [409, 496, 565], "pwn": [43, 487, 511, 518], "pwne": 473, "py": [386, 387, 393, 400, 403, 405, 407, 416, 417, 423, 428, 430, 431, 439, 444, 448, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 510, 511, 512, 525, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 585], "py310": 389, "py35": 445, "pycharm": 429, "pydant": [16, 84, 90, 105, 127, 385, 432, 451, 453, 470], "pydantic_cor": [16, 84, 90, 105, 127], "pydanticdeprecatedsince20": 470, "pydanticserializationerror": [16, 84, 90, 105, 127], "pydanticundefin": [16, 84, 90, 105, 127], "pydata": [440, 454], "pydocstyl": 387, "pyfact": [426, 444], "pyflak": 440, "pyirf": 453, "pyjok": 385, "pymc": 404, "pymotw": 585, "pypi": [403, 413, 416, 417, 419, 420], "pyplot": [19, 20, 26, 66, 67, 83, 132, 158, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 374, 379, 423, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 517, 518, 519, 525, 527, 528, 529, 531, 534, 542, 544, 548, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578], "pyproject": 435, "pyregion": 400, "pytest": [386, 387, 389, 417, 446], "python": [11, 16, 84, 90, 105, 127, 145, 313, 354, 385, 389, 390, 391, 395, 396, 398, 399, 400, 402, 403, 404, 405, 406, 407, 412, 413, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 430, 431, 438, 440, 443, 444, 445, 446, 447, 448, 449, 452, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 513, 524, 525, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 585], "python3": [350, 420, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 549, 557, 573], "python_execut": [457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "python_vers": [457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "pytorch": 404, "pyx": [389, 417], "pyyaml": [385, 403, 427, 431], "q": [26, 83, 87, 91, 381, 486], "qgsyutc0": 484, "qol": 454, "qtabl": [87, 91, 401, 484], "quadrat": [493, 503, 511, 588], "qualiti": [206, 406, 446, 447, 452, 497, 510, 525, 583, 590], "quantifi": [453, 473, 484, 485, 498], "quantiti": [13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 50, 51, 52, 53, 54, 71, 74, 75, 80, 83, 86, 87, 88, 91, 94, 96, 100, 103, 104, 106, 107, 108, 110, 111, 112, 114, 115, 116, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 172, 181, 182, 183, 185, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 287, 293, 294, 295, 298, 299, 300, 301, 303, 308, 312, 313, 315, 317, 319, 320, 325, 343, 345, 346, 357, 361, 386, 387, 392, 395, 397, 400, 401, 402, 404, 409, 410, 413, 414, 429, 431, 435, 438, 439, 447, 448, 449, 457, 464, 466, 474, 475, 476, 480, 484, 485, 487, 488, 491, 492, 493, 494, 496, 500, 502, 503, 511, 517, 518, 519, 521, 525, 538, 564, 573, 575, 584, 587, 589], "quantity_support": [491, 542], "quasar": 141, "quentin": [404, 408, 409, 430, 431, 432, 433, 434, 435, 438, 440, 441, 449, 450, 451, 452, 453, 454], "queri": [402, 443, 487], "question": [353, 389, 391, 393, 394, 395, 397, 398, 399, 400, 403, 405, 410, 422, 427, 428, 446, 447, 448, 472, 511, 525, 526, 585], "questionnair": [393, 446], "quetin": 432, "quick": [83, 88, 103, 106, 107, 111, 112, 151, 152, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 386, 389, 406, 417, 466, 467, 470, 472, 474, 481, 488, 491, 495, 500, 502, 503, 505, 511, 513, 522], "quickest": 387, "quickli": [386, 387, 389, 391, 402, 403, 406, 412, 415, 417, 419, 445, 462, 470, 485, 502, 529, 585], "quicklook": 83, "quickplot": 198, "quicksort": [87, 91], "quickstart": 424, "quiescent": 551, "quit": [87, 91, 386, 414, 474], "quival": 397, "quot": [74, 285, 386, 387, 486], "r": [17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 35, 36, 39, 40, 51, 53, 54, 86, 87, 91, 159, 194, 207, 314, 386, 387, 411, 417, 463, 471, 475, 490, 492, 509, 515, 530, 534, 542, 543, 544, 548, 551], "r68": [83, 114, 115, 158, 167, 170], "r70": [67, 487], "r_": [17, 18, 21, 22, 24, 25, 27, 28, 35, 36, 39, 40, 50, 52, 53, 265, 266, 486, 544, 547, 548], "r_0": [30, 33, 38, 48, 229, 241, 265, 495, 542, 544, 548], "r_1": [39, 48], "r_eval": 241, "r_exp": [36, 48], "r_in": [44, 172, 182, 265, 468, 535], "r_m": 544, "r_out": 44, "r_out_max": 172, "r_out_pwn": 43, "r_sun": 38, "ra": [67, 83, 85, 87, 88, 91, 94, 145, 180, 386, 387, 399, 402, 457, 462, 464, 466, 468, 472, 475, 479, 480, 482, 484, 487, 492, 494, 500, 501, 502, 503, 510, 511, 513, 525, 529, 589], "ra_pnt": 503, "ra_tru": [386, 399], "rad": [33, 83, 88, 103, 106, 107, 111, 112, 114, 115, 116, 158, 164, 166, 167, 168, 169, 170, 180, 193, 267, 402, 440, 452, 464, 488, 491, 492, 501, 530, 531, 534, 578], "rad_axi": [103, 106, 107, 111, 112, 116, 167, 170, 488, 491, 492, 525], "rad_di": [45, 515], "rad_index": 164, "rad_max": [82, 83, 87, 88, 163, 169, 186, 440, 449, 451, 452, 464], "rad_max_2d": [87, 169, 179, 184, 186, 464], "radec": [83, 94, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 168, 169, 386, 387, 491, 493, 511], "radecsi": 549, "radesysa": 549, "radi": [253, 561], "radial": [28, 30, 35, 36, 39, 40, 45, 132, 194, 198, 339, 386, 397, 405, 410, 428, 443, 445, 453, 474, 476, 492, 500, 513, 515, 531, 534], "radian": [17, 18, 21, 22, 24, 25, 27, 203, 224, 225, 229, 238, 241, 254, 256, 265, 266, 268, 270, 276, 280], "radiat": [230, 525, 547, 548, 561], "radiative_model": [253, 561], "radii": [27, 486, 501, 543], "radio": [30, 31, 32, 141, 400, 493], "radiobutton": [470, 478, 493, 509, 510], "radiu": [16, 17, 18, 21, 22, 24, 25, 27, 33, 34, 38, 43, 44, 50, 51, 52, 53, 54, 72, 82, 83, 91, 96, 103, 106, 107, 111, 112, 125, 130, 131, 158, 164, 166, 167, 168, 170, 172, 180, 182, 198, 208, 210, 211, 228, 229, 238, 241, 252, 254, 256, 265, 266, 268, 270, 276, 278, 280, 311, 312, 345, 387, 400, 402, 409, 410, 428, 437, 438, 442, 452, 457, 459, 462, 463, 465, 466, 467, 468, 470, 472, 474, 475, 479, 480, 482, 484, 486, 488, 491, 492, 494, 495, 496, 497, 500, 509, 510, 511, 518, 519, 532, 534, 535, 538, 542, 543, 544, 547, 548], "radius_inn": [52, 53], "radius_max": [345, 476], "radius_min": 345, "radius_reverse_shock": [50, 53, 518], "radmax": [440, 441, 452, 453], "radmax2d": [83, 88, 163, 186, 438, 454, 464], "rai": [11, 19, 20, 26, 36, 37, 52, 53, 57, 59, 63, 66, 83, 93, 125, 129, 130, 133, 136, 137, 141, 173, 230, 284, 285, 300, 301, 333, 334, 386, 392, 397, 398, 400, 404, 415, 417, 419, 423, 424, 429, 445, 447, 452, 453, 457, 458, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 513, 515, 516, 520, 521, 522, 525, 528, 530, 532, 534, 535, 551, 582, 583, 584, 585, 586, 587, 590], "rais": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 84, 86, 87, 90, 91, 92, 100, 105, 127, 199, 204, 228, 230, 252, 276, 277, 278, 280, 313, 364, 386, 400, 409, 410, 413, 414, 432, 449, 452, 453, 454, 475], "raise_error": [16, 84, 90, 105, 127], "raj2000": [487, 511], "ran": [416, 500], "random": [6, 33, 42, 45, 46, 47, 87, 91, 103, 104, 106, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 294, 335, 336, 337, 338, 339, 340, 341, 342, 343, 389, 398, 399, 402, 415, 430, 442, 446, 474, 496, 525, 586, 587, 589], "random_se": 398, "random_st": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 294, 335, 336, 337, 340, 341, 342, 343, 386, 399, 465, 474, 475], "randomli": [46, 101, 119, 386], "randomnumb": 340, "randomst": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 294, 335, 337, 340, 341, 342, 343, 386], "rang": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 67, 71, 74, 75, 80, 83, 87, 91, 92, 100, 101, 102, 103, 106, 107, 111, 112, 129, 137, 154, 167, 169, 170, 183, 195, 196, 199, 201, 202, 205, 206, 208, 218, 220, 222, 223, 226, 227, 229, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 252, 253, 255, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 277, 278, 279, 281, 282, 287, 326, 338, 340, 341, 342, 379, 386, 392, 398, 399, 401, 410, 429, 434, 435, 438, 446, 447, 449, 459, 462, 464, 465, 467, 470, 471, 473, 475, 480, 481, 482, 485, 487, 488, 489, 490, 491, 493, 494, 496, 497, 498, 501, 502, 509, 510, 511, 521, 523, 525, 544, 554, 583, 587], "rangl": 19, "rapid": [141, 300, 392, 395, 410, 411], "rare": [385, 386, 405, 493], "raster": [95, 198], "rate": [44, 45, 83, 88, 151, 152, 183, 190, 294, 343, 399, 423, 447, 462, 464, 482, 492, 500, 501, 503, 515, 528, 584], "rather": [121, 125, 129, 133, 137, 391, 404, 407, 446, 449, 451, 453, 454, 459, 490, 493, 511, 521, 543, 587], "ratio": [106, 112, 172, 196, 197, 198, 295, 310, 410, 457, 482, 500, 535, 584, 586, 587, 588, 590], "ravel": [196, 474], "raw": [126, 183, 511], "rc": [197, 198, 200, 206, 209, 210, 383, 493], "rc_context": [197, 198, 200, 206, 209, 210, 493], "rc_param": [197, 198, 200, 206, 209, 210, 493], "rcparam": 383, "rdbtybyd": 484, "rdbu": 509, "rdbu_r": [103, 106, 107, 111, 112], "re": [87, 91, 96, 128, 129, 134, 174, 197, 198, 200, 206, 209, 210, 215, 311, 312, 379, 386, 387, 389, 391, 393, 394, 400, 401, 402, 404, 407, 408, 409, 410, 422, 426, 438, 440, 447, 460, 462, 463, 468, 470, 471, 472, 481, 490, 491, 495, 497, 501, 509, 511, 523, 525, 546, 585], "reach": [53, 136, 211, 391, 396, 399, 415, 496], "reactiv": 449, "reactivenestedsampl": 415, "read": [15, 16, 83, 85, 86, 87, 88, 91, 94, 100, 101, 102, 103, 106, 107, 108, 111, 112, 117, 120, 121, 125, 126, 128, 130, 132, 134, 137, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 179, 197, 198, 200, 204, 205, 206, 209, 210, 215, 228, 230, 243, 252, 279, 280, 281, 286, 288, 290, 291, 349, 352, 372, 374, 379, 381, 386, 387, 389, 391, 396, 397, 398, 399, 402, 406, 408, 410, 412, 413, 414, 419, 421, 432, 435, 438, 446, 447, 449, 452, 453, 454, 458, 462, 463, 464, 468, 470, 473, 474, 485, 488, 489, 490, 491, 496, 498, 500, 501, 502, 505, 509, 511, 522, 523, 525, 527, 528, 529, 531, 549, 579, 580, 585, 588], "read_arf": 108, "read_bkg": 108, "read_builtin": [230, 458, 551], "read_covari": [228, 252], "read_dataset": 15, "read_fil": 415, "read_lazi": 440, "read_model": 15, "read_pha": 108, "read_rmf": 108, "read_xspec_model": 281, "readabl": [367, 397, 440, 463, 509], "reader": [413, 457, 465, 467, 470, 472, 475, 478, 481, 500], "readi": [396, 413, 422, 584], "readili": [406, 415], "readm": [389, 412], "readthedoc": [13, 129, 190, 205, 215, 281, 389, 406, 429, 444, 490, 491, 500, 522, 536, 538], "real": [51, 386, 389, 417, 465, 466, 468, 475, 490, 494, 521], "realis": [391, 400, 412], "realist": 414, "realiti": 458, "realiz": [392, 584], "realli": [386, 393, 400, 403, 465, 478, 490], "rearrang": 406, "reason": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 391, 392, 393, 394, 397, 398, 399, 401, 403, 405, 407, 412, 415, 446, 458, 474, 490, 498, 502, 521, 585], "reassign": [19, 20, 26, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283], "rebas": [386, 400], "rebin": [128, 149, 401, 440, 453, 480, 485, 488], "rebuild": [16, 84, 90, 105, 127, 471], "recarrai": [87, 91, 158, 168], "receiv": [404, 406, 407, 409, 411], "recent": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 396, 400, 401, 402, 403, 406, 415, 420, 427, 441, 447, 471, 500, 502], "recip": [388, 402, 416, 424, 438, 482, 525, 526, 584, 587], "reco": [103, 106, 107, 111, 112, 154, 187, 386, 392, 401, 410, 448, 449, 457, 488, 492, 502, 584], "reco_exposur": [125, 454], "reco_psf": [103, 106, 107, 111, 112, 116, 492, 502], "recogn": [457, 465, 467, 470, 472, 478, 481, 500], "recognis": [397, 585], "recognit": 412, "recommend": [92, 100, 101, 102, 184, 228, 252, 292, 325, 326, 385, 386, 387, 389, 393, 395, 403, 412, 417, 418, 420, 423, 430, 447, 462, 463, 464, 473, 488, 490, 492, 496, 501, 509, 525, 532, 537, 538, 585, 586, 589], "recomput": [128, 410, 468], "recompute_ul": 128, "recon_vers": [501, 511], "reconstruct": [83, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 125, 136, 137, 144, 151, 152, 154, 155, 156, 159, 169, 170, 183, 190, 386, 392, 397, 399, 435, 450, 457, 459, 462, 465, 467, 468, 470, 474, 478, 481, 488, 492, 494, 498, 502, 521, 523, 529, 530, 531, 538, 584], "recopsfmap": [163, 449, 452], "record": [83, 88, 386, 391, 392, 412, 500], "recov": 402, "rectangl": [225, 229, 238, 241, 254, 265, 266, 270, 276, 280, 346, 400, 476, 534], "rectangleskyregion": [208, 224, 225, 280, 345, 346, 400, 459, 486, 494, 534, 538], "rectangular": [476, 534, 538], "recurr": 401, "recurs": [353, 413], "red": [102, 228, 252, 294, 300, 376, 457, 458, 462, 465, 468, 470, 473, 486, 497, 498, 542, 543], "redesign": 395, "redistribut": 529, "redo": 482, "redshift": [19, 20, 230, 409, 511, 551], "redshift_scan": 458, "reduc": [6, 11, 15, 100, 103, 106, 107, 111, 112, 165, 167, 170, 175, 185, 197, 198, 200, 202, 206, 209, 210, 392, 393, 395, 397, 398, 402, 405, 407, 412, 413, 419, 426, 431, 438, 447, 453, 456, 458, 459, 460, 463, 464, 465, 470, 471, 474, 478, 479, 480, 481, 484, 494, 497, 499, 502, 505, 521, 525, 535, 538, 543, 544, 583, 584, 585], "reduce_data": 402, "reduce_over_ax": [197, 198, 200, 206, 209, 210, 467, 492, 502], "reduct": [6, 11, 173, 392, 398, 399, 402, 406, 407, 408, 413, 419, 432, 434, 452, 456, 468, 472, 473, 476, 482, 488, 491, 494, 495, 497, 499, 505, 522, 525, 532, 534, 535, 583, 584], "ref": [83, 94, 103, 107, 111, 125, 130, 137, 196, 205, 208, 228, 252, 387, 410, 466, 472, 476, 480, 487, 488, 489, 491, 493, 501, 511, 538, 573, 574, 575, 576, 577, 578, 585], "ref_templ": [16, 84, 90, 105, 127], "refactor": [386, 398, 400, 401, 402, 409, 428, 429, 430, 432, 433, 434, 435, 438, 440, 442, 444, 446], "refer": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 52, 53, 57, 59, 63, 67, 69, 77, 83, 84, 85, 86, 87, 88, 90, 91, 94, 102, 103, 105, 106, 107, 108, 111, 112, 114, 115, 116, 121, 126, 127, 128, 129, 131, 137, 138, 140, 141, 147, 148, 159, 173, 174, 177, 180, 181, 184, 185, 186, 189, 190, 192, 207, 208, 209, 210, 215, 222, 223, 226, 227, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 253, 255, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 277, 279, 281, 282, 285, 294, 296, 300, 301, 302, 303, 308, 310, 340, 341, 367, 368, 369, 370, 386, 387, 392, 394, 397, 398, 400, 402, 404, 409, 410, 411, 412, 413, 415, 417, 424, 438, 445, 446, 454, 458, 459, 460, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 492, 493, 495, 496, 498, 500, 501, 502, 509, 510, 511, 514, 521, 523, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 555, 556, 557, 559, 560, 562, 563, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 587, 589], "referenc": [386, 584], "reference_flux": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "reference_map": 493, "reference_model": [126, 128, 138, 147, 457, 458, 466, 471, 489], "reference_model_default": [126, 128], "reference_spectral_model": [126, 128], "reference_tim": [86, 88, 103, 106, 107, 111, 112, 201, 207, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 451, 452, 475, 481, 485, 492, 493, 580], "refit": 489, "reflect": [175, 179, 180, 181, 185, 194, 395, 400, 402, 405, 407, 419, 431, 438, 440, 443, 444, 447, 458, 459, 462, 463, 464, 472, 480, 484, 494, 533, 584], "reflected_bkg_mak": 492, "reflectedbgestim": 402, "reflectedregion": 458, "reflectedregionsbackgroundmak": [175, 180, 432, 454, 459, 462, 464, 472, 480, 484, 492], "reflectedregionsfind": [179, 185, 430, 534], "refpix": [208, 209, 210], "refresh": [87, 91], "refus": 386, "reg": [103, 106, 107, 111, 112, 494, 496], "reg_dataset": 488, "regard": [410, 413, 462], "regardless": [87, 91], "regeard": [450, 451, 452, 453, 454], "regi": [392, 397, 398, 402], "region": [6, 27, 83, 91, 100, 103, 106, 107, 109, 111, 112, 117, 120, 125, 126, 128, 130, 132, 136, 141, 155, 156, 162, 167, 170, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 194, 196, 197, 198, 200, 205, 206, 208, 209, 210, 212, 215, 224, 225, 228, 229, 238, 241, 252, 254, 256, 265, 266, 268, 270, 276, 278, 280, 281, 284, 295, 310, 344, 345, 346, 347, 348, 379, 382, 383, 385, 387, 390, 392, 393, 401, 402, 403, 405, 408, 410, 415, 419, 430, 431, 432, 434, 438, 440, 441, 443, 444, 446, 447, 449, 451, 452, 454, 458, 463, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 493, 496, 498, 500, 501, 502, 503, 509, 510, 511, 520, 521, 522, 523, 525, 532, 533, 535, 536, 537, 542, 543, 561, 583, 584, 586, 587, 588], "region_coord": 205, "region_ev": 482, "region_find": [179, 464], "region_io": 205, "region_map": [206, 210, 538], "region_map_1": 538, "region_map_2": 538, "region_mask": [83, 196, 208, 400, 462, 468, 472, 488, 492, 494, 510, 532, 534, 535], "region_nd_map": 206, "region_new": 347, "region_pix": 496, "region_weight": 208, "regionfind": [180, 181, 185], "regiongeom": [103, 106, 107, 111, 112, 126, 130, 177, 184, 186, 187, 188, 190, 191, 206, 225, 229, 238, 241, 254, 265, 266, 268, 270, 276, 280, 400, 401, 408, 419, 434, 435, 438, 457, 459, 462, 464, 465, 472, 476, 480, 481, 482, 484, 487, 488, 489, 492, 501, 511, 521, 534, 537], "regionndmap": [26, 108, 111, 112, 136, 178, 179, 184, 186, 197, 198, 200, 205, 209, 210, 225, 229, 238, 241, 243, 254, 265, 266, 270, 276, 277, 280, 383, 400, 419, 434, 435, 438, 441, 449, 452, 475, 489, 501, 521, 537, 580], "regions_ds9": 494, "regionsfind": [179, 180, 185, 440], "regist": 496, "registri": [55, 98, 122, 163, 175, 248, 250, 262, 263, 275, 407, 414, 431, 434, 435, 438, 447, 487, 496], "regress": 389, "regul": 412, "regular": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 196, 204, 208, 395, 414, 415, 440, 452, 478, 493, 494, 502], "regulargridinterpol": [325, 386], "regularis": 414, "regularli": [414, 503], "reichardt": 442, "reimplement": 397, "rej_sampl": 399, "reject": [390, 391, 399], "rel": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 91, 106, 108, 112, 135, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 207, 208, 209, 210, 265, 285, 299, 343, 401, 412, 438, 481, 485, 502, 548, 587], "rel_reduction_of_f_": 490, "relat": [11, 13, 28, 67, 83, 85, 213, 300, 392, 394, 397, 399, 400, 403, 405, 406, 407, 412, 415, 417, 434, 435, 447, 453, 488, 496, 500, 515, 582, 587], "relative_variability_amplitud": 485, "relative_variability_error": 485, "relative_variability_signific": 485, "relativist": 561, "releas": [11, 51, 65, 95, 388, 390, 391, 393, 394, 400, 403, 404, 413, 418, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 459, 462, 463, 471, 479, 480, 484, 500, 502, 503, 509, 510, 513, 525, 527, 528, 529, 531], "relev": [126, 293, 295, 369, 386, 392, 401, 406, 410, 415, 416, 462, 463, 466, 479, 480, 481, 484, 495, 497, 500, 502, 503, 509, 510, 521, 522, 589], "reli": [126, 386, 391, 392, 396, 397, 401, 405, 410, 411, 430, 435, 438, 449, 460, 470, 494, 513, 587], "reliabl": [389, 420, 468, 490, 494, 586], "remain": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 391, 392, 393, 394, 399, 403, 412, 428, 447, 464, 495, 531], "remaind": 502, "remark": 464, "rememb": [386, 400, 490, 505, 585], "remi": [408, 409, 430, 431, 432, 433, 434, 435, 438, 449, 450, 451, 452, 453, 454], "remind": [202, 412, 466, 472, 489], "remnant": [28, 52, 459, 473, 496, 516], "remot": [389, 416], "remov": [13, 16, 84, 87, 90, 91, 92, 96, 100, 105, 127, 167, 170, 182, 195, 196, 201, 204, 205, 208, 210, 252, 312, 389, 393, 394, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 415, 418, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 462, 468, 470, 476, 482, 488, 494, 497, 500, 501, 514, 525, 534], "remove_column": [87, 91], "remove_indic": [87, 91], "remove_row": [87, 91], "renam": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 128, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 389, 396, 397, 405, 406, 409, 426, 429, 431, 432, 433, 434, 438, 448, 449, 452, 585], "rename_ax": [195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 449], "rename_column": [87, 91, 128], "rename_dupl": [87, 91], "render": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 364, 386, 387, 394, 446], "renorm": [468, 532], "renormalis": 182, "reoptim": [129, 133, 134, 215, 428, 458, 476, 479, 489, 490, 498, 509], "reorder": 454, "reorder_ax": [197, 198, 200, 206, 209, 210, 452], "reorgan": 438, "reorganis": 406, "repeat": [387, 470, 502], "repl": 386, "replac": [15, 87, 91, 100, 103, 106, 107, 111, 112, 155, 156, 162, 167, 195, 196, 198, 201, 205, 206, 208, 210, 278, 291, 386, 396, 397, 400, 404, 407, 413, 415, 420, 429, 430, 432, 434, 435, 452, 453, 454, 482], "replace_axi": [195, 196, 205, 208], "replace_column": [87, 91], "repo": [387, 394, 416, 417, 426, 439], "report": [87, 389, 402, 416, 417, 426, 440, 441, 446], "repositori": [87, 91, 386, 389, 391, 394, 396, 412, 416, 438, 447, 474, 503], "repres": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 87, 90, 91, 103, 105, 106, 107, 111, 112, 127, 196, 198, 200, 202, 203, 205, 207, 268, 313, 321, 331, 386, 397, 398, 399, 400, 404, 407, 408, 409, 410, 428, 452, 458, 475, 476, 487, 489, 490, 492, 493, 494, 496, 501, 511, 520, 521, 523, 527, 528, 529, 531, 537, 582, 583, 584, 589], "represent": [16, 19, 20, 26, 83, 84, 86, 87, 90, 91, 105, 127, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 386, 400, 413, 428, 430, 452, 460, 487, 493, 496, 537], "reprocess": 392, "reproduc": [94, 102, 128, 387, 402, 403, 404, 406, 412, 413, 418, 420, 447, 492], "reproject": [183, 197, 198, 200, 206, 209, 210, 382, 386, 392, 400, 403, 410, 432, 439, 447, 449, 453, 493, 494], "reproject_by_imag": [197, 198, 200, 206, 209, 210, 453], "reproject_to_geom": [197, 198, 200, 206, 209, 210, 449], "request": [85, 126, 128, 387, 390, 391, 393, 394, 395, 396, 397, 398, 400, 406, 410, 411, 412, 414, 417, 425, 474, 489, 494, 523], "requir": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 44, 82, 83, 84, 85, 87, 88, 90, 91, 95, 103, 105, 106, 107, 111, 112, 113, 118, 127, 128, 131, 135, 137, 151, 152, 154, 157, 158, 159, 164, 166, 169, 174, 197, 198, 199, 200, 201, 202, 205, 206, 207, 209, 210, 211, 313, 361, 365, 366, 384, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 408, 409, 410, 411, 412, 414, 415, 416, 418, 420, 426, 431, 432, 433, 434, 439, 440, 442, 443, 444, 445, 448, 449, 450, 454, 458, 459, 464, 468, 471, 480, 481, 482, 484, 485, 488, 491, 493, 494, 496, 500, 510, 523, 525, 538], "require_ev": 82, "required_ax": [151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 491], "required_hdu": 441, "required_irf": [16, 82, 463, 464, 467, 468, 470, 509], "required_nam": [199, 201, 202, 207], "required_paramet": [158, 166, 168], "rerun": [401, 484], "resampl": [103, 106, 107, 111, 112, 128, 149, 150, 155, 195, 196, 197, 198, 199, 200, 201, 205, 206, 208, 209, 210, 381, 438, 440, 485, 525], "resample_axi": [128, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 381, 435, 480, 485], "resample_energy_axi": [103, 106, 107, 111, 112, 155, 435, 440, 488], "resample_energy_edg": [462, 525], "resampled_energy_edg": 150, "resampled_map": [197, 198, 200, 206, 209, 210], "rescal": 492, "research": [402, 412], "reset": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 111, 112, 236, 278, 387, 435], "reset_data_cach": [103, 106, 107, 111, 112], "reset_to_default": 236, "reshap": [197, 198, 200, 206, 209, 210, 457, 475, 491, 493], "resid": [408, 496], "residu": [72, 102, 103, 106, 107, 111, 112, 174, 397, 398, 402, 430, 435, 441, 448, 454, 468, 488, 490, 501, 521, 534, 584], "resolut": [52, 154, 155, 159, 196, 208, 395, 397, 399, 400, 446, 452, 454, 487, 501], "resolv": [16, 84, 90, 105, 127, 387, 389, 396, 400, 401, 408, 409, 422, 428, 447, 454, 456, 480, 483, 505, 534], "resort": 467, "resourc": [446, 505], "respect": [15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 83, 84, 87, 90, 91, 105, 108, 127, 128, 141, 196, 198, 208, 210, 292, 386, 396, 401, 412, 414, 435, 454, 466, 468, 481, 489, 493, 494, 502, 523, 538, 588], "respond": 412, "respons": [6, 110, 154, 155, 156, 159, 161, 162, 180, 386, 392, 393, 395, 397, 398, 399, 401, 402, 410, 412, 419, 445, 446, 447, 448, 459, 462, 463, 464, 465, 478, 481, 491, 492, 495, 500, 502, 503, 505, 509, 510, 521, 522, 527, 529, 531, 583, 584], "rest": [26, 389, 403, 405, 487, 520], "restor": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 495], "restore_statu": [219, 221, 228, 252, 498], "restore_valu": [219, 221, 228, 252], "restrict": [87, 91, 400, 470, 488, 494], "restructur": [387, 401, 402, 403, 405, 407, 413, 417, 432, 438, 439, 440, 441, 443, 452], "result": [16, 46, 74, 84, 86, 87, 90, 91, 92, 102, 103, 105, 106, 107, 111, 112, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 139, 140, 145, 147, 148, 159, 165, 167, 170, 183, 187, 188, 193, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 214, 215, 216, 217, 228, 252, 280, 291, 294, 313, 379, 385, 386, 387, 389, 391, 393, 395, 396, 397, 398, 399, 402, 404, 405, 408, 412, 414, 415, 420, 423, 430, 438, 440, 441, 446, 448, 452, 453, 454, 458, 460, 462, 464, 465, 470, 472, 474, 475, 478, 480, 481, 482, 485, 487, 488, 490, 493, 494, 497, 498, 501, 502, 503, 509, 510, 520, 523, 525, 538, 573, 584, 586, 587], "result1": 458, "result2": 495, "result_ecpl": 460, "result_joint": [459, 462, 470], "result_list": 379, "result_log_parabola": 460, "result_minuit": 490, "result_pwl": 460, "result_scipi": 490, "result_stack": 462, "results_joint": 471, "results_prior": 498, "results_simplex": 490, "results_t": 473, "retain": [487, 538], "retriev": [87, 91, 410, 412, 459, 460, 462, 493, 496, 497, 502, 510, 522, 537, 538], "return": [16, 19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 308, 310, 311, 312, 313, 315, 317, 319, 320, 324, 326, 331, 335, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 356, 357, 358, 367, 368, 369, 370, 371, 374, 376, 377, 379, 381, 382, 392, 396, 397, 398, 399, 400, 401, 409, 410, 413, 414, 415, 431, 432, 435, 438, 441, 447, 449, 454, 462, 464, 468, 472, 476, 480, 481, 484, 487, 488, 489, 490, 492, 493, 494, 496, 498, 511, 515, 537, 538, 570, 587], "return_delta": 343, "return_diff": 343, "return_unit": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "reus": [402, 435, 453], "reval": 544, "reveal": 415, "revers": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 53, 87, 91, 92, 100, 201, 252, 493, 518], "reverse_lon_radec": 160, "revert": 454, "review": [389, 394, 395, 396, 399, 400, 402, 403, 405, 406, 407, 409, 410, 412, 414, 415, 448, 449, 537], "revis": 406, "revisit": [39, 40, 230], "rework": 433, "rewrit": [392, 395, 402, 433, 443, 444, 446, 447, 448, 585], "rewritten": [445, 448], "rf": 486, "rgb": [381, 383, 452, 457, 462], "rglob": [82, 474, 500], "rhe": 186, "rho": [17, 18, 21, 22, 23, 24, 25, 27], "rho_": [17, 21, 22, 24, 25, 27, 52, 53], "rich": [386, 402], "rid": 392, "right": [21, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 87, 91, 103, 107, 111, 126, 128, 137, 157, 234, 239, 259, 272, 273, 296, 299, 302, 374, 386, 400, 409, 412, 466, 472, 474, 479, 481, 500, 542, 543, 544, 551, 552, 555, 556, 558, 559, 563, 566, 567, 568, 569, 573, 574, 575, 577, 585, 586, 587, 588], "rightarrow": [548, 588], "rigid": 391, "ring": [106, 125, 172, 175, 182, 196, 197, 198, 392, 395, 402, 405, 419, 428, 432, 434, 444, 445, 446, 447, 456, 469, 473, 494, 505, 524, 533, 536, 584], "ring2dkernel": [172, 182], "ring_background": [456, 468, 469], "ring_bkg_mak": 535, "ring_mak": 468, "ringbackgroundestim": [392, 446], "ringbackgroundmak": [172, 175, 432, 468, 492, 535], "rint": 454, "rise": [141, 242, 485, 575], "risk": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 389, 412], "rm": [154, 155, 159, 274, 409, 464, 490, 527, 529, 530, 531, 544, 573, 574, 575, 576, 577, 578], "rmax": [17, 18, 21, 22, 24, 25, 27], "rmf": [108, 109, 112, 154, 155, 156, 444, 462], "rmf_ob": 108, "rmffile": 108, "rmin": [17, 18, 21, 22, 24, 25, 27], "rng": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 294, 335, 337, 340, 341, 342, 343, 386], "roadmap": [390, 393, 402, 411, 427, 448], "roberta": [446, 447], "robust": [386, 415, 447], "roellinghoff": 454, "roi": [67, 402, 487, 503, 584], "roi_max": 402, "role": [446, 492], "rolf": 426, "rolk": 584, "rolke2005": [584, 587], "roll": 501, "room": 396, "root": [19, 20, 26, 126, 127, 135, 137, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 304, 307, 386, 404, 438, 466, 513, 523, 585, 587], "rosillo": 449, "rotang": 475, "rotat": [22, 51, 54, 180, 181, 185, 190, 229, 238, 241, 475, 534, 542, 543], "rough": [72, 402], "roughli": [121, 389, 394, 400, 402, 405, 406, 445, 468], "round": [87, 91, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 415, 462, 537], "round_to_edg": [195, 196, 205, 208], "round_trip": [16, 84, 90, 105, 127], "routin": 426, "row": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 91, 145, 154, 321, 357, 380, 401, 410, 413, 449, 452, 462, 465, 475, 476, 484, 487, 490, 493, 500, 502, 503, 511, 520], "row_idx": [67, 87], "row_index": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 487], "row_label": 380, "row_specifi": [83, 87, 91], "royalblu": 482, "rpovid": 401, "rspec": [67, 487], "rst": [389, 391, 406, 412, 416, 417, 433, 438], "rtd": 447, "rtol": [135, 137, 361, 386], "rtol_ax": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 205, 206, 208, 209, 210], "rtol_wc": 208, "ruben": 446, "rub\u00e9n": 446, "ruiz": [394, 402, 406, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 446, 447, 448], "rule": [87, 91, 268, 287, 324, 412, 493, 537], "run": [16, 82, 83, 84, 88, 90, 93, 102, 104, 105, 110, 121, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 137, 145, 146, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 205, 208, 215, 333, 334, 360, 379, 385, 386, 387, 393, 394, 396, 399, 401, 402, 403, 406, 408, 410, 414, 415, 416, 417, 418, 423, 429, 430, 433, 434, 445, 447, 448, 452, 454, 457, 458, 459, 460, 465, 466, 467, 468, 470, 471, 472, 474, 478, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 510, 511, 521, 522, 523, 525, 530, 532, 534, 535, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "run_fit": [15, 463, 467, 509], "run_id": [501, 511], "run_multiprocess": 525, "runner": [16, 350, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 549, 551, 557, 573, 579, 580], "runtim": [395, 413, 416], "runtimewarn": [464, 468, 474, 484, 503, 573], "rwge02lh": 465, "rx": 459, "rxj": 459, "rxj1713_2016_250gev": 549, "r\u00e9gi": [392, 395, 396, 400, 401, 403, 405, 407, 408, 409, 410, 411, 413, 415, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "r\u00e9my": [404, 438, 440, 441, 449], "s0167947313003204": 139, "s180": 300, "s2": 279, "s3": 279, "s_0": 525, "s_1": 525, "safari": [87, 91], "safe": [99, 102, 103, 106, 107, 111, 112, 155, 156, 162, 167, 170, 175, 183, 386, 398, 400, 412, 432, 434, 435, 449, 450, 451, 452, 454, 459, 462, 488, 494, 510, 521, 583], "safe_mask": [16, 103, 107, 111, 463, 467, 468, 470, 509], "safe_mask_mak": [173, 459, 462, 482, 492, 502, 532, 534, 535], "safe_mask_mask": [464, 472, 480, 484, 492], "safemaskconfig": 16, "safemaskmak": [173, 175, 407, 432, 433, 438, 440, 441, 453, 459, 462, 464, 472, 478, 480, 482, 484, 492, 494, 502, 509, 510, 532, 533, 534, 535], "safer": 415, "safeti": 412, "sagittariu": [33, 38], "saha": 446, "sai": [74, 391, 405, 585], "said": [386, 391, 393, 502, 503, 585], "sake": [474, 490], "saldana": [230, 231, 452, 458, 551], "saldana21": 551, "samantha": 454, "same": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 87, 91, 95, 100, 103, 106, 107, 108, 111, 112, 125, 137, 138, 139, 145, 146, 147, 148, 158, 159, 165, 166, 167, 168, 170, 171, 173, 194, 195, 196, 197, 198, 200, 201, 204, 205, 206, 208, 209, 210, 285, 294, 300, 379, 386, 389, 394, 396, 398, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 419, 420, 430, 431, 435, 438, 452, 460, 463, 464, 465, 470, 471, 474, 478, 479, 480, 482, 487, 488, 493, 494, 495, 496, 497, 498, 501, 502, 505, 509, 521, 522, 523, 529, 537, 538, 585], "sampl": [47, 93, 104, 110, 137, 140, 156, 158, 164, 166, 167, 168, 170, 197, 198, 200, 206, 208, 209, 210, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 292, 294, 303, 326, 335, 340, 341, 342, 343, 390, 398, 400, 401, 404, 406, 419, 426, 428, 430, 431, 434, 440, 447, 449, 452, 453, 454, 456, 464, 477, 485, 488, 490, 505, 525], "sample_axi": 335, "sample_background": [104, 110, 432], "sample_coord": [156, 167, 170, 197, 198, 200, 206, 209, 210, 432, 434, 449], "sample_edisp": [104, 110], "sample_powerlaw": 405, "sample_psf": [104, 110], "sample_sourc": [104, 110], "sample_spher": [442, 589], "sample_tim": [227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 438, 449, 454], "sampler": [104, 335, 395, 399, 415, 434, 438, 454, 474], "sampler_kwarg": 93, "samplerlikelihood": 415, "saniti": 446, "santiago": 454, "satisfi": [150, 174, 196, 197, 198, 313, 495, 525], "save": [15, 19, 20, 26, 100, 137, 212, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 386, 394, 402, 410, 414, 415, 454, 458, 470, 471, 474, 490, 494, 495, 502, 522], "savefig": [364, 423], "savez": 212, "saw": 424, "sbj14xu1": 492, "sbpl": [269, 409, 496], "sc": [87, 91], "scalar": [87, 91, 165, 196, 197, 198, 200, 206, 209, 210, 313, 405, 440, 451, 453, 493, 537], "scale": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 52, 53, 67, 86, 88, 96, 100, 105, 106, 112, 121, 127, 129, 130, 133, 158, 174, 202, 206, 207, 208, 210, 218, 220, 222, 223, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 271, 272, 273, 274, 277, 279, 280, 281, 289, 292, 312, 325, 326, 327, 343, 367, 368, 369, 379, 387, 395, 400, 401, 404, 409, 415, 433, 438, 439, 447, 450, 451, 452, 454, 463, 466, 475, 476, 479, 480, 481, 485, 486, 487, 489, 491, 492, 493, 496, 497, 498, 500, 509, 511, 513, 551, 572, 573, 574, 575, 576, 577, 578, 579, 580], "scale10": [19, 20, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 414, 561], "scale_method": [19, 20, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 414, 561], "scale_to_local_dens": [17, 18, 21, 22, 24, 25, 27, 486], "scaled_featur": 312, "scaled_features_irf": [311, 312, 497], "scaledregulargridinterpol": [68, 230, 281, 433, 448], "scalespectralmodel": [129, 130, 133, 263, 409, 496], "scan": [19, 20, 95, 126, 128, 129, 130, 133, 134, 215, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 401, 410, 438, 476, 480, 489, 498, 523, 525], "scan_max": [19, 20, 129, 133, 137, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 458, 480, 489, 490], "scan_min": [19, 20, 129, 133, 137, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 458, 489, 490], "scan_n_sigma": [19, 20, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 490], "scan_n_valu": [19, 20, 129, 133, 134, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 458, 490, 498], "scan_prior": 498, "scan_valu": [19, 20, 215, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 476, 490], "scargl": [401, 446, 485], "scatter": [24, 228, 252, 407, 466, 472, 484, 542, 543], "scenario": [87, 91, 391, 398, 408, 419, 489, 493, 496, 514, 586], "scengin": [87, 91], "schedul": 395, "schema": [15, 16, 84, 90, 105, 127, 402, 405], "schema_gener": [16, 84, 90, 105, 127], "schema_json": [16, 84, 90, 105, 127], "scheme": [16, 84, 90, 102, 105, 108, 109, 127, 196, 197, 198, 207, 243, 386, 392, 396, 398, 401, 408, 409, 410, 411, 413, 416, 431, 438, 449, 453, 475, 491, 493, 496, 525, 530, 536, 537, 539], "schiavo": 454, "school": [412, 415], "scienc": [139, 197, 198, 200, 209, 210, 393, 395, 399, 402, 403, 406, 412, 415, 424, 446, 447, 465, 471, 481, 493, 496, 497, 500, 501, 505, 513, 525, 559, 584, 585], "sciencedirect": 139, "scientif": [387, 393, 409, 412, 420], "scientist": 500, "scikit": [145, 386, 400, 403, 406, 447, 494], "scipi": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 210, 215, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 279, 281, 311, 325, 366, 379, 385, 386, 389, 395, 400, 403, 404, 406, 412, 424, 428, 429, 430, 431, 443, 444, 445, 448, 450, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 582, 587], "scipy_mvn": 213, "scipy_opt": 490, "scitool": 564, "scope": [399, 400, 401, 402, 405, 413, 514], "scratch": [157, 386, 396, 400, 417, 470, 494], "screen": [87, 91, 493, 511], "script": [6, 87, 91, 128, 349, 350, 351, 352, 353, 354, 355, 387, 392, 393, 395, 397, 400, 402, 405, 406, 412, 416, 417, 427, 428, 429, 430, 438, 439, 443, 446, 447, 448, 449, 453, 456, 458, 462, 463, 466, 468, 470, 471, 472, 473, 474, 476, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 495, 498, 501, 506, 509, 524, 525, 585], "scriptabl": 413, "scutum": [33, 38], "sdc": 500, "sdist": 417, "seaborn": 525, "search": [87, 91, 293, 295, 350, 386, 387, 423, 446, 447, 463, 466, 472, 473, 486, 487, 497, 509, 510, 511, 513, 525, 585], "season": 406, "sebastian": 438, "sec": [54, 83, 94, 100, 133, 343], "second": [42, 58, 83, 86, 87, 88, 91, 140, 154, 279, 303, 343, 346, 363, 367, 370, 375, 387, 394, 396, 398, 400, 404, 410, 412, 417, 432, 451, 458, 462, 463, 466, 468, 470, 472, 473, 474, 475, 476, 479, 480, 481, 482, 484, 486, 488, 489, 490, 492, 493, 495, 498, 500, 505, 509, 520, 586, 589], "secpl": [272, 273, 274, 409, 496], "section": [19, 87, 91, 294, 296, 302, 386, 387, 389, 391, 400, 402, 403, 405, 409, 412, 415, 417, 435, 448, 465, 470, 474, 475, 478, 481, 487, 489, 490, 494, 495, 496, 511, 514, 525, 538, 583, 585, 589, 590], "secur": 494, "sed": [122, 125, 126, 127, 128, 130, 137, 206, 230, 385, 402, 404, 410, 419, 426, 445, 460, 466, 476, 480, 487, 488, 489, 509, 511, 584], "sed_fit": [456, 460, 461], "sed_fitting_gammacat_fermi": 406, "sed_typ": [19, 20, 26, 126, 127, 128, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 438, 457, 458, 460, 462, 463, 464, 471, 472, 476, 479, 480, 481, 487, 489, 510, 511, 523, 525, 561, 584], "sed_type_init": [71, 74, 75, 78, 126, 127, 128], "sed_type_plot_default": [126, 128], "sedov": [52, 53], "sedov_taylor_begin": [52, 53, 519], "sedov_taylor_end": [52, 53, 519], "seds_20230803": 64, "sedtypeenum": 127, "see": [11, 13, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 66, 82, 83, 85, 87, 89, 91, 95, 99, 100, 101, 102, 103, 106, 107, 111, 112, 121, 123, 125, 128, 129, 130, 133, 136, 137, 139, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 173, 180, 182, 183, 190, 195, 196, 198, 200, 202, 203, 205, 208, 210, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 286, 296, 302, 305, 306, 310, 313, 321, 337, 353, 376, 377, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 406, 407, 411, 412, 413, 414, 415, 417, 419, 420, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 443, 444, 445, 446, 447, 448, 449, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 505, 509, 510, 511, 513, 521, 522, 525, 535, 536, 538, 564, 568, 569, 582, 584, 585, 586, 587, 589, 590], "seed": [33, 42, 45, 46, 47, 103, 104, 106, 107, 110, 111, 112, 156, 167, 170, 197, 198, 200, 206, 209, 210, 227, 235, 240, 242, 243, 244, 253, 260, 267, 279, 282, 294, 335, 336, 337, 340, 341, 342, 343, 386, 446, 474, 561], "seed_photon_field": [253, 561], "seem": [386, 393, 394, 397, 403, 407, 513], "seen": [386, 400, 407, 459, 466, 471, 480, 493, 496, 501], "select": [16, 82, 83, 86, 87, 88, 89, 91, 92, 96, 100, 103, 106, 107, 111, 112, 125, 177, 184, 197, 198, 199, 200, 202, 207, 209, 210, 219, 221, 228, 252, 268, 278, 291, 382, 383, 396, 398, 399, 400, 401, 402, 406, 408, 410, 413, 419, 421, 427, 430, 438, 442, 457, 462, 464, 465, 467, 468, 470, 471, 473, 474, 475, 478, 481, 482, 488, 489, 490, 492, 493, 494, 497, 500, 502, 503, 505, 511, 523, 525, 529, 530, 534, 583, 585], "select_energi": [83, 522], "select_from_geom": [228, 252], "select_map_mask": 428, "select_mask": [83, 228, 252, 438, 495], "select_nested_model": [452, 454], "select_obs_id": [91, 472], "select_observ": [91, 96, 402, 480, 484, 497, 510, 525], "select_offset": [83, 474, 503, 522], "select_paramet": [83, 89, 482, 522], "select_phas": 396, "select_rad_max": 83, "select_rang": 91, "select_region": [83, 89, 228, 252, 400, 430, 438, 474, 475, 482, 495, 511, 522], "select_row_subset": 83, "select_sky_box": 400, "select_sky_circl": [91, 400], "select_tim": [83, 86, 88, 92, 100, 396, 410, 432, 475, 480, 484, 522], "select_time_rang": 91, "selected_energi": 522, "selected_ev": 83, "selected_id": 522, "selected_obs_t": [91, 497, 510], "selected_offset": 522, "selected_region": 522, "selected_tim": 522, "selection_al": [121, 137], "selection_mask": [228, 252, 495], "selection_opt": [16, 121, 123, 124, 125, 129, 130, 132, 133, 134, 136, 137, 438, 454, 458, 462, 463, 466, 467, 468, 470, 471, 472, 476, 479, 480, 481, 482, 489, 494, 502, 509], "selection_vari": 91, "selectionconfig": 16, "selectionslid": [470, 478, 493, 509, 510], "self": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 90, 91, 105, 126, 127, 128, 205, 206, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 268, 269, 271, 272, 273, 274, 277, 281, 386, 387, 397, 398, 400, 403, 409, 410, 413, 414, 415, 434, 468, 493, 496], "semant": [400, 411], "semi": 229, "semiaxi": [229, 238, 241, 542, 543, 544], "semilogi": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 457, 475], "semimajor": 487, "semiminor": 487, "semver": 411, "send": 416, "sens": [386, 393, 396, 400, 402, 405, 406, 407, 468], "sensibl": 497, "sensit": [122, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 285, 399, 406, 433, 435, 445, 446, 452, 453, 456, 461, 478, 500, 505, 513, 530], "sensitivity_estim": 457, "sensitivity_t": 457, "sensitivityestim": [122, 427, 433, 457], "sent": 391, "sentenc": [391, 406, 412], "sep": [205, 395, 403, 409, 425, 496], "separ": [17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 71, 72, 74, 75, 76, 78, 79, 80, 83, 91, 196, 205, 208, 308, 375, 386, 387, 392, 393, 394, 395, 398, 399, 400, 401, 402, 405, 406, 407, 408, 415, 434, 438, 444, 446, 447, 451, 452, 465, 468, 470, 472, 478, 481, 487, 495, 496, 497, 514, 522, 530, 531, 542, 543, 547, 548, 561, 584], "septemb": [395, 403, 405, 406, 411], "sequenc": [87, 91, 92, 100, 103, 107, 111, 151, 152, 153, 154, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 219, 228, 252, 313, 417], "sequenti": [392, 462, 510], "seri": [87, 91, 128, 294, 299, 343, 395, 400, 401, 438, 454, 485], "serial": [16, 84, 87, 90, 91, 99, 100, 102, 103, 105, 106, 107, 111, 112, 127, 392, 397, 401, 402, 407, 410, 431, 434, 438, 440, 447, 449, 450, 451, 452, 453, 493, 496, 498, 513], "serialis": [20, 103, 106, 107, 111, 112, 222, 223, 226, 228, 230, 232, 233, 234, 236, 237, 239, 243, 245, 246, 247, 249, 251, 252, 253, 255, 257, 258, 259, 261, 264, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 398, 400, 402, 405, 407, 408, 409, 430, 432, 434, 438, 443, 446, 448, 449, 451, 452, 453, 498, 509, 525, 538, 580], "serializ": [16, 84, 90, 105, 127], "serialize_as_ani": [16, 84, 90, 105, 127], "serialize_method": [87, 91], "serializiaton": 398, "serilis": [26, 224, 225, 227, 229, 235, 238, 240, 241, 242, 244, 254, 256, 260, 265, 266, 267, 268, 270, 277, 280, 282], "sersic": 409, "sersic2d": 409, "sersicspatialmodel": 409, "serv": [87, 91, 386, 391, 398, 402, 410, 415, 417, 440, 486, 529], "server": [408, 419, 421, 505], "servic": 446, "session": [402, 412, 524], "set": [15, 16, 19, 20, 23, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 87, 90, 91, 95, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 116, 123, 125, 126, 127, 128, 129, 130, 132, 133, 137, 139, 148, 154, 156, 167, 170, 173, 174, 177, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 218, 219, 220, 221, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 270, 272, 273, 274, 276, 279, 280, 281, 291, 303, 333, 335, 386, 387, 392, 395, 396, 398, 399, 401, 402, 403, 404, 406, 410, 411, 412, 413, 414, 417, 419, 421, 434, 440, 442, 444, 446, 449, 452, 453, 454, 457, 458, 459, 462, 464, 465, 466, 467, 470, 472, 473, 474, 475, 476, 479, 480, 482, 487, 488, 489, 490, 492, 494, 496, 497, 498, 500, 502, 503, 505, 510, 513, 521, 522, 525, 534, 536, 537, 538, 561, 582, 585, 588, 589], "set_by_coord": [197, 198, 200, 206, 209, 210, 493, 537], "set_by_idx": [197, 198, 200, 206, 209, 210, 493, 537], "set_by_pix": [197, 198, 200, 206, 209, 210, 537], "set_label": 484, "set_lim": [218, 220], "set_log": 16, "set_model": [15, 408, 463, 467, 479, 509], "set_models_paramet": 408, "set_parameter_factor": [219, 221], "set_parameters_bound": [228, 252], "set_prior": [252, 414], "set_prop_cycl": 457, "set_slice_arg": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "set_subcovari": 213, "set_titl": [458, 459, 462, 466, 468, 472, 482, 486, 490, 491, 492, 495, 534, 544, 548, 551], "set_unit": [460, 489, 525], "set_xlabel": [457, 458, 459, 462, 465, 482, 484, 490, 497, 498], "set_xlim": [460, 462, 463, 471, 482, 527, 551], "set_xscal": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "set_xtick": [544, 548], "set_ylabel": [457, 458, 459, 462, 476, 482, 484, 486, 490, 497, 551], "set_ylim": [457, 460, 462, 463, 464, 479, 482, 527, 551], "set_yscal": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 476, 486, 527], "set_ytick": [544, 548], "setdefault": 204, "seterr": 386, "setlevel": 472, "setter": [387, 414, 432, 438, 488], "settl": 412, "setup": [13, 388, 389, 390, 393, 398, 399, 403, 406, 414, 444, 448, 505, 585], "setuptool": [439, 585], "sever": [87, 91, 179, 391, 392, 393, 400, 401, 402, 405, 410, 413, 415, 432, 433, 434, 438, 441, 450, 451, 452, 465, 471, 487, 500, 501, 502, 525, 585, 587], "seyfert": 300, "sf": [308, 587], "sgr": 511, "shade": [198, 206, 210, 490, 583], "shall": 389, "shape": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 100, 102, 103, 106, 107, 111, 112, 113, 118, 125, 126, 130, 131, 137, 144, 145, 146, 152, 154, 157, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 210, 213, 241, 292, 313, 326, 342, 397, 400, 404, 436, 451, 454, 460, 462, 464, 466, 467, 472, 475, 476, 480, 484, 485, 487, 488, 489, 491, 492, 493, 494, 496, 500, 501, 511, 523, 537, 538, 539, 544, 548], "shape_ax": [196, 208], "share": [197, 198, 200, 204, 206, 209, 210, 386, 391, 398, 401, 405, 408, 420, 438, 440, 452, 470, 471, 494, 495, 525, 585], "sharp": [242, 376, 377, 542], "she": [396, 401], "shear": 400, "sheet": [422, 525, 590], "shell": [52, 53, 80, 265, 266, 397, 402, 409, 419, 421, 456, 496, 539, 548, 550, 585], "shell2": [265, 456, 496, 539, 550], "shell2d": 52, "shell2spatialmodel": [262, 266, 496, 548], "shellspatialmodel": [80, 262, 265, 409, 438, 496, 547], "sherpa": [109, 112, 154, 201, 202, 205, 206, 215, 296, 302, 385, 386, 395, 403, 404, 406, 407, 418, 419, 421, 428, 442, 443, 444, 445, 447, 454, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 538, 559, 586], "sherpa_opt": 490, "shift": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 280, 423, 454], "shim": 393, "shini": 371, "ship": [393, 394, 403, 427, 445, 465, 478, 482, 496, 525], "shock": [50, 52, 53, 518], "short": [386, 387, 390, 391, 395, 400, 403, 406, 409, 412, 435, 480, 485, 501, 525, 526, 584, 587, 590], "short_observ": [480, 484], "shortcut": [82, 423, 440], "shorten": 438, "shorter": [300, 386, 387, 400, 406, 411, 435, 465, 480, 496, 585], "should": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 101, 103, 105, 106, 107, 110, 111, 112, 115, 117, 120, 126, 127, 128, 129, 133, 137, 140, 141, 142, 143, 149, 155, 156, 159, 165, 167, 170, 182, 187, 188, 193, 195, 196, 197, 198, 200, 202, 204, 205, 206, 208, 209, 210, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 313, 361, 375, 376, 377, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 411, 412, 413, 415, 416, 417, 419, 421, 422, 423, 428, 430, 452, 464, 470, 473, 474, 475, 481, 482, 488, 490, 491, 492, 493, 494, 495, 496, 498, 500, 502, 521, 523, 525, 530, 532, 537, 585, 586, 588, 589], "shoulder": 284, "shouldn": [83, 386, 389], "show": [11, 82, 87, 91, 130, 131, 132, 158, 177, 243, 383, 386, 387, 389, 398, 400, 401, 405, 406, 414, 415, 417, 427, 428, 432, 440, 445, 446, 447, 452, 453, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 509, 510, 511, 517, 518, 519, 525, 527, 528, 529, 531, 532, 534, 536, 542, 551, 570, 583, 585, 587, 590], "show_dtyp": [87, 91], "show_in_brows": [87, 91, 472], "show_in_notebook": [87, 91], "show_nam": [87, 91], "show_progress_bar": 525, "show_row_index": [87, 91], "show_unit": [87, 91], "showcas": 498, "shower": [442, 500, 530], "shown": [19, 20, 26, 83, 165, 205, 206, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 381, 386, 393, 403, 404, 405, 413, 414, 416, 417, 432, 434, 459, 462, 466, 470, 472, 473, 474, 475, 480, 481, 482, 485, 492, 495, 496, 497, 498, 500, 510, 522], "showwarn": 386, "si": [83, 196, 205, 208, 228, 252, 284, 538], "side": [208, 210, 293, 295, 386, 400], "sider": 589, "sidereal_tim": 387, "siejkowski": 447, "sig": [379, 586, 587, 588], "sight": 513, "sigma": [19, 20, 30, 32, 48, 49, 125, 126, 127, 128, 129, 133, 134, 137, 145, 146, 154, 155, 159, 165, 166, 167, 170, 213, 215, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 291, 293, 295, 301, 409, 414, 458, 466, 472, 473, 478, 479, 485, 489, 490, 494, 496, 498, 509, 523, 529, 543, 558, 574, 587], "sigma1": 31, "sigma2": 31, "sigma_": [213, 543], "sigma_1": [31, 49, 158, 491], "sigma_10tev": [409, 496], "sigma_1tev": [409, 496], "sigma_2": [31, 49, 158, 491], "sigma_3": [158, 491], "sigma_err": 473, "sigma_gauss": 241, "sigma_laplac": 241, "sigma_m": 543, "sigma_nod": 496, "sigma_to_t": 587, "sigmav": 513, "sign": [218, 220, 293, 295, 389, 412, 434, 449, 523, 587], "signal": [83, 103, 106, 107, 110, 111, 112, 182, 210, 267, 293, 295, 310, 410, 457, 462, 463, 468, 471, 479, 494, 509, 513, 528, 532, 534, 584, 586, 587, 588], "signif_avg": 511, "signific": [77, 121, 125, 126, 127, 128, 129, 135, 136, 137, 139, 148, 149, 291, 293, 295, 299, 376, 377, 384, 391, 392, 393, 394, 401, 402, 406, 407, 410, 412, 434, 435, 443, 446, 447, 452, 453, 454, 456, 457, 462, 463, 469, 470, 471, 472, 473, 479, 482, 484, 485, 487, 489, 490, 502, 505, 509, 511, 523, 525, 583, 584, 585], "significance_lima": 434, "significance_map": [468, 470], "significance_map_off": 468, "significance_mask": 494, "significance_mask_inv": 494, "significancemapestim": 434, "significantli": [438, 458, 474, 500], "signoff": 389, "silent": [449, 454], "silvia": 430, "simeq": 53, "similar": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 377, 386, 389, 398, 399, 400, 401, 402, 405, 406, 407, 410, 438, 452, 464, 485, 489, 493, 497, 498, 511, 521, 529, 585], "similarli": [392, 394, 410, 413, 415, 438, 487, 490, 491, 493, 494, 496, 538], "simlat": 294, "simon": [451, 452, 453], "simpifi": 395, "simpl": [50, 52, 121, 145, 225, 229, 238, 241, 254, 265, 266, 270, 276, 280, 284, 386, 387, 398, 399, 400, 401, 402, 405, 410, 413, 414, 428, 438, 442, 446, 447, 452, 457, 459, 460, 462, 463, 464, 465, 467, 470, 482, 484, 485, 489, 490, 493, 494, 497, 503, 509, 510, 511, 515, 525, 583, 584, 585], "simple_norm": 210, "simple_rebin_lc": 401, "simplefilt": 525, "simpler": [185, 394, 399, 400, 408], "simplest": [457, 462, 485], "simplex": [215, 490], "simpli": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 87, 91, 174, 215, 219, 221, 386, 400, 401, 410, 419, 420, 421, 449, 452, 457, 458, 459, 472, 488, 494, 495, 496, 511, 538, 585, 587], "simplic": [471, 474, 490, 496, 498, 501], "simplif": [397, 409, 449], "simplifi": [137, 204, 393, 395, 397, 404, 410, 428, 431, 432, 433, 435, 438, 442, 449, 458, 460, 466, 530, 588], "simu": [478, 481, 498], "simul": [45, 83, 88, 93, 103, 106, 107, 110, 111, 112, 115, 156, 167, 170, 294, 343, 396, 399, 402, 406, 413, 414, 419, 426, 430, 432, 434, 440, 443, 445, 446, 447, 452, 453, 454, 456, 461, 467, 470, 472, 477, 482, 483, 495, 498, 500, 505, 515, 530, 583], "simulate_3d": [406, 447, 456, 477, 478], "simulate_dataset": [428, 432, 433], "simulate_observ": 93, "simulated_d": 464, "simulated_data": 93, "simulated_model": 464, "simultan": [414, 481, 488, 496, 498, 521], "sin": [542, 543, 544, 578], "sinc": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 51, 87, 91, 198, 208, 361, 386, 387, 392, 396, 400, 402, 403, 404, 405, 406, 410, 412, 413, 414, 417, 438, 448, 449, 450, 451, 452, 453, 454, 458, 464, 468, 470, 480, 481, 484, 488, 495, 496, 498, 500, 502, 557, 586, 589], "sine": [267, 397, 456, 539, 581], "sine_model": 578, "sinetemporalmodel": [275, 496, 578], "singl": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 87, 88, 89, 91, 93, 95, 125, 129, 130, 133, 137, 155, 156, 167, 169, 170, 173, 177, 179, 184, 187, 188, 193, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 228, 252, 386, 392, 393, 396, 398, 399, 400, 401, 402, 403, 407, 408, 413, 414, 415, 419, 426, 428, 433, 434, 446, 452, 453, 457, 462, 464, 466, 467, 468, 479, 481, 487, 488, 492, 493, 495, 498, 502, 503, 509, 511, 521, 523, 535, 537, 538, 582, 584], "singleobscubemak": 392, "singleobsimagemak": 392, "singleton": 337, "sinha": [398, 401, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 446, 447, 448, 449, 450, 451, 452, 453, 454], "sink": 403, "sinu": [267, 496], "sinusoid": [267, 578], "sipocz": [403, 428, 430, 432, 434, 443, 444, 445, 446, 447, 448], "sip\u0151cz": [449, 454], "sit": 389, "site": [350, 417, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 549, 557, 573, 585], "situat": [400, 401, 403, 530], "six": [405, 411], "size": [19, 20, 26, 46, 47, 67, 72, 80, 87, 88, 91, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 120, 131, 137, 140, 151, 152, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 170, 172, 173, 179, 180, 181, 184, 185, 186, 194, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 213, 222, 223, 225, 226, 229, 230, 232, 233, 234, 238, 239, 241, 245, 246, 249, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 303, 335, 336, 340, 341, 342, 343, 374, 386, 394, 397, 399, 400, 419, 421, 451, 453, 457, 464, 468, 470, 474, 480, 482, 487, 492, 493, 494, 496, 500, 501, 502, 503, 511, 521, 536, 542, 543, 589], "skeleton": 402, "sketch": 402, "skill": [389, 415, 423], "skimag": 447, "skip": [16, 82, 84, 90, 105, 127, 165, 374, 387, 389, 398, 400, 406, 445, 484, 495], "skip_miss": [82, 446], "sklearn": 386, "sky": [6, 13, 41, 57, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 88, 96, 103, 106, 107, 110, 111, 112, 121, 145, 155, 156, 167, 170, 190, 196, 197, 198, 200, 205, 206, 208, 209, 210, 228, 252, 268, 280, 284, 286, 315, 319, 320, 344, 346, 348, 373, 385, 386, 387, 399, 405, 419, 428, 430, 444, 445, 447, 458, 462, 463, 465, 466, 468, 478, 481, 482, 487, 493, 496, 500, 501, 505, 507, 509, 510, 511, 513, 520, 521, 522, 525, 530, 531, 534, 536, 538, 542, 543, 547, 548, 549, 583, 584], "sky_circl": [91, 96, 480, 484, 497, 510], "sky_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 117, 120, 401, 458, 479, 480, 484, 487, 495, 496, 510, 553], "sky_model_pntpwl": 474, "sky_reg": 486, "sky_reg_rec": 486, "sky_region": 89, "skycood": 397, "skycoord": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 91, 94, 96, 103, 106, 107, 111, 112, 114, 115, 126, 128, 130, 132, 155, 156, 162, 167, 170, 180, 181, 183, 185, 187, 188, 190, 191, 193, 194, 196, 197, 198, 200, 203, 205, 206, 208, 209, 210, 211, 224, 225, 228, 229, 238, 241, 252, 254, 256, 265, 266, 268, 270, 276, 278, 280, 311, 312, 345, 346, 362, 382, 387, 397, 400, 410, 413, 457, 459, 462, 464, 465, 468, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 510, 511, 525, 529, 534, 536, 538, 546], "skycoord_from_t": 400, "skycoord_to_pixel_scale_angl": 400, "skycoordconfig": 16, "skycub": [392, 405, 444, 445, 446, 447], "skydiffusecub": [397, 409, 429, 434, 435, 447], "skydiffusemap": [397, 429], "skydir": [16, 83, 103, 106, 107, 111, 112, 113, 118, 156, 167, 177, 195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 462, 463, 464, 467, 468, 470, 472, 473, 474, 475, 478, 479, 482, 486, 488, 491, 492, 493, 494, 496, 501, 502, 509, 510, 532, 534, 535, 536, 538, 543, 544, 545, 546], "skydirfunct": 513, "skydisk": 429, "skydiskelong": 397, "skyellips": [428, 429, 430, 431], "skygaussian": 428, "skygaussianelong": 397, "skyimag": [392, 405, 444, 445, 446, 447], "skyimagelist": 444, "skymap": [197, 198, 200, 206, 209, 210, 400, 443, 444, 475], "skymap_band": [475, 580], "skymap_region": 475, "skymask": 445, "skymodel": [67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 103, 106, 107, 111, 112, 117, 120, 126, 128, 134, 137, 138, 147, 174, 215, 228, 248, 252, 286, 291, 397, 398, 399, 401, 407, 409, 410, 428, 432, 433, 434, 438, 447, 453, 458, 459, 460, 462, 463, 464, 465, 466, 467, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 484, 487, 488, 489, 490, 495, 498, 501, 509, 510, 520, 521, 523, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582], "skypointsourc": 431, "skyregion": [100, 103, 106, 107, 111, 112, 130, 155, 156, 162, 167, 170, 180, 181, 185, 200, 205, 206, 210, 228, 252, 344, 347, 400, 459, 474, 476, 494, 496, 529, 534, 538], "skyspatialmodel": [397, 447], "slack": [388, 389, 393, 409, 416, 422, 427, 428, 585], "slew": 95, "slice": [83, 87, 91, 100, 101, 103, 106, 107, 111, 112, 123, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 278, 280, 304, 392, 435, 473, 476, 480, 488, 489, 500, 537], "slice_by_coord": [126, 128, 453], "slice_by_energi": [100, 103, 106, 107, 111, 112, 126, 128, 278, 435, 488], "slice_by_idx": [103, 106, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 435, 447, 449, 476, 480, 489, 493, 501], "slice_by_tim": [126, 128], "sliced_ax": 201, "sliced_geom": [195, 196, 205, 208], "sliced_lc": 480, "slicesampl": 415, "slide": [395, 466, 487], "slider": 493, "sliderstyl": [470, 478, 493, 509, 510], "slightli": [121, 202], "slope": [27, 429], "slow": [87, 91, 215, 393, 402, 463, 490, 509, 510], "slower": [87, 91, 198, 386, 394, 404], "slowest": 417, "small": [377, 386, 392, 394, 400, 402, 403, 406, 408, 413, 415, 417, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 479, 480, 493, 498, 500, 501, 502, 503, 543, 547, 548, 584, 585], "smaller": [27, 156, 167, 170, 185, 196, 197, 198, 200, 206, 209, 210, 379, 389, 428, 447, 474, 480, 485, 490, 493, 498, 543], "smallest": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 264, 269, 271, 272, 273, 274, 277, 281, 466], "smooth": [103, 106, 107, 111, 112, 121, 131, 132, 145, 197, 198, 200, 206, 209, 210, 228, 229, 252, 269, 378, 381, 438, 443, 444, 445, 447, 448, 456, 468, 470, 472, 476, 478, 482, 488, 492, 493, 495, 501, 509, 510, 511, 539, 542, 571], "smooth_kernel": [103, 106, 107], "smooth_radiu": [103, 106, 107], "smoothbrokenpowerlawspectralmodel": [222, 263, 409, 433, 434, 496, 566], "sn": [45, 50, 52, 53], "sn_rate": [45, 515], "snippet": [387, 406, 525], "snr": [44, 50, 53, 67, 501, 518, 519], "snr_model": 519, "snrcat": [442, 487], "snrtruelovemcke": [50, 518, 519], "so": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 87, 91, 95, 102, 106, 112, 125, 129, 131, 133, 134, 137, 138, 147, 150, 155, 156, 162, 167, 170, 194, 197, 198, 200, 202, 206, 209, 210, 215, 218, 220, 241, 280, 291, 361, 369, 376, 377, 386, 387, 389, 391, 392, 393, 394, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 413, 415, 416, 418, 419, 421, 423, 428, 430, 438, 448, 450, 451, 454, 459, 462, 464, 466, 467, 472, 473, 474, 478, 479, 486, 487, 489, 490, 493, 494, 496, 498, 500, 501, 502, 505, 510, 525, 532, 534, 538, 544, 548, 585, 586, 587, 588], "social": 412, "soft": 300, "softwar": [197, 198, 200, 209, 210, 400, 401, 403, 412, 413, 417, 493], "solar": 52, "sole": [396, 412], "solid": [195, 196, 205, 208, 225, 229, 238, 241, 254, 265, 266, 270, 276, 280, 284, 402, 426, 428, 429, 430, 447, 468, 492, 493, 500, 528, 534, 584], "solid_angl": [195, 196, 205, 208, 493, 538], "solut": [19, 20, 26, 52, 138, 147, 154, 222, 223, 226, 230, 232, 233, 234, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 279, 281, 387, 389, 391, 393, 394, 399, 400, 402, 403, 404, 406, 408, 410, 414, 415, 420, 489, 521, 523, 525, 588], "solv": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 389, 394, 396, 397, 398, 399, 440, 525], "some": [13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 77, 82, 84, 87, 90, 91, 105, 127, 183, 204, 313, 321, 389, 391, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 415, 417, 419, 420, 421, 422, 423, 424, 426, 428, 430, 438, 439, 441, 443, 445, 446, 447, 452, 457, 459, 460, 462, 464, 466, 467, 468, 471, 472, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 492, 493, 495, 496, 498, 500, 501, 510, 511, 513, 514, 521, 522, 525, 530, 535, 537, 585, 586, 587, 589], "some_class": 386, "some_map": 165, "some_map_convolv": 165, "somehow": [394, 400, 405], "someon": [389, 391, 406], "someth": [87, 91, 386, 387, 388, 389, 391, 394, 400, 403, 404, 406, 417, 419, 421, 465, 487, 538, 585], "sometim": [19, 20, 83, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 364, 386, 389, 393, 400, 406, 417, 419, 490, 525, 584, 589], "somewhat": [403, 500], "somewher": [389, 403, 417], "soon": [389, 400, 417], "sort": [82, 83, 87, 91, 102, 145, 349, 354, 355, 386, 403, 429, 454, 511], "sort_kei": [349, 354, 355], "sortedarrai": [87, 91], "sourc": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 389, 391, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 417, 419, 424, 426, 428, 432, 433, 438, 439, 444, 445, 446, 447, 452, 453, 454, 456, 458, 460, 461, 463, 464, 465, 467, 468, 469, 470, 471, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 502, 503, 505, 507, 509, 510, 513, 514, 519, 521, 523, 525, 530, 533, 534, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 586, 587], "source1": 496, "source2": 496, "source_1": [397, 402], "source_2": 397, "source_42": 402, "source_fermi_3fgl": 460, "source_fermi_3fhl": 460, "source_gammacat": 460, "source_irf_model": 397, "source_librari": 500, "source_model": 564, "source_nam": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 487, 511], "source_name_alia": 56, "source_name_kei": 56, "source_po": [468, 472, 492], "source_population_model": [406, 432], "source_posit": [457, 473, 497], "sourcebackground": 397, "sourcecatalog": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 400, 438, 487, 494, 511, 520], "sourcecatalog1lhaaso": [55, 70, 487], "sourcecatalog2fhl": [55, 71, 487, 520], "sourcecatalog2hwc": [55, 72, 487, 520], "sourcecatalog2pc": [55, 487], "sourcecatalog3fgl": [55, 74, 460, 487, 520], "sourcecatalog3fhl": [55, 75, 228, 252, 460, 487, 495, 511, 520], "sourcecatalog3hwc": [55, 76, 487, 520], "sourcecatalog3pc": [55, 487], "sourcecatalog4fgl": [55, 78, 440, 458, 487, 520], "sourcecataloggammacat": [55, 79, 460, 487, 520], "sourcecataloghgp": [55, 80, 81, 487, 520], "sourcecataloglargescalehgp": 67, "sourcecatalogobject": [70, 79, 80, 81, 487, 520], "sourcecatalogobject1lhaaso": 57, "sourcecatalogobject2fhl": 58, "sourcecatalogobject2hwc": 59, "sourcecatalogobject2pc": 60, "sourcecatalogobject3fgl": 61, "sourcecatalogobject3fhl": 62, "sourcecatalogobject3hwc": 63, "sourcecatalogobject3pc": 64, "sourcecatalogobject4fgl": 65, "sourcecatalogobjectfermibas": [71, 74, 75, 78], "sourcecatalogobjectfermipcbas": [73, 77], "sourcecatalogobjectgammacat": 66, "sourcecatalogobjecthgp": [67, 81, 427, 487], "sourcecatalogobjecthgpscompon": 67, "sourcecatalogobjecthwcbas": [72, 76], "sourceevalu": 397, "sources_flux_map": 466, "sourcetempl": 397, "south": [474, 475, 500], "south_z20_50h": [82, 152, 156, 157, 158, 167, 457, 465, 478, 481, 491, 500], "south_z40_50h": 500, "southaz": 500, "southern": 500, "space": [87, 91, 103, 106, 107, 111, 112, 207, 210, 276, 277, 294, 324, 342, 385, 386, 396, 402, 408, 415, 482, 488, 490, 493, 537, 561, 570], "span": 497, "spars": [196, 197, 198, 200, 205, 208, 209, 210, 415, 429, 438, 446, 475, 493], "sparsif": 410, "sparsifi": [197, 198, 200, 209, 210], "spatail": 137, "spatial": [1, 46, 48, 67, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 103, 106, 107, 111, 112, 114, 115, 126, 128, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 179, 195, 196, 197, 198, 200, 201, 203, 205, 206, 208, 209, 210, 219, 221, 224, 225, 228, 229, 236, 238, 241, 252, 254, 256, 262, 265, 266, 268, 270, 276, 278, 280, 291, 379, 381, 386, 392, 395, 398, 399, 400, 402, 404, 405, 410, 419, 427, 428, 430, 431, 432, 433, 435, 438, 446, 447, 449, 452, 453, 454, 456, 458, 460, 463, 465, 466, 467, 470, 471, 473, 474, 475, 476, 478, 480, 481, 482, 484, 487, 488, 489, 492, 495, 499, 501, 505, 509, 513, 514, 521, 523, 525, 526, 536, 537, 550, 582, 583, 584], "spatial_bin_s": [114, 115], "spatial_bin_size_min": [114, 115], "spatial_model": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 117, 120, 137, 229, 236, 268, 278, 291, 401, 432, 458, 466, 470, 472, 473, 474, 475, 478, 479, 480, 484, 487, 488, 495, 496, 501, 510, 541, 542, 543, 544, 545, 546, 547, 548, 549], "spatial_model_point": 474, "spatial_model_registri": 496, "spatial_par": 409, "spatial_typ": 409, "spatial_width": [114, 115], "spatial_width_max": [114, 115], "spatialbackground": 397, "spatialcircleconfig": 16, "spatialconst": 397, "spatialgaussian": 397, "spatialmodel": [70, 71, 72, 74, 75, 76, 78, 79, 80, 224, 225, 229, 236, 238, 241, 254, 256, 265, 266, 268, 276, 278, 280, 397, 409, 432, 447, 451, 487, 496, 510, 513, 520, 539, 582], "spatialtempl": 397, "spatiamodel": 165, "speak": 490, "spec": [80, 112, 386, 400, 443, 470, 475, 487, 500, 510], "spec_model_tru": 482, "special": [87, 91, 241, 386, 396, 398, 400, 401, 409, 412, 413, 427, 454, 467, 487, 488, 489, 495, 496], "specialis": [400, 406], "specif": [15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 86, 87, 91, 94, 103, 106, 107, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 173, 187, 188, 193, 197, 198, 199, 200, 202, 206, 207, 208, 209, 210, 215, 243, 278, 291, 375, 385, 386, 387, 389, 391, 396, 398, 400, 401, 402, 403, 404, 405, 407, 410, 411, 412, 413, 415, 417, 419, 420, 432, 435, 438, 440, 449, 450, 452, 458, 459, 462, 464, 465, 468, 470, 471, 476, 478, 481, 482, 488, 490, 491, 493, 494, 497, 498, 503, 505, 511, 521, 522, 523, 525, 527, 528, 529, 531, 536, 537, 538, 589], "specifi": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 87, 88, 90, 91, 92, 96, 102, 103, 105, 106, 107, 111, 112, 121, 123, 126, 127, 128, 129, 131, 133, 134, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 172, 183, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 208, 209, 210, 228, 243, 252, 291, 313, 315, 319, 324, 373, 396, 403, 408, 411, 415, 420, 431, 434, 438, 454, 458, 464, 467, 468, 470, 473, 476, 478, 488, 489, 490, 491, 492, 493, 495, 496, 500, 510, 521, 523, 536], "spectra": [26, 111, 112, 129, 134, 150, 215, 263, 284, 291, 392, 395, 397, 399, 401, 405, 409, 415, 426, 430, 443, 447, 458, 459, 464, 465, 471, 475, 479, 481, 482, 488, 489, 490, 492, 496, 498, 513, 521, 523, 525, 584], "spectral": [1, 19, 20, 26, 52, 53, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 102, 103, 106, 107, 111, 112, 121, 125, 126, 128, 129, 130, 133, 136, 137, 144, 165, 167, 170, 174, 219, 221, 222, 223, 226, 228, 230, 232, 233, 234, 236, 239, 243, 245, 246, 249, 250, 252, 253, 255, 257, 258, 259, 263, 264, 268, 269, 271, 272, 273, 274, 277, 278, 279, 281, 284, 285, 300, 340, 392, 395, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 410, 419, 427, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 461, 465, 466, 467, 470, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 487, 488, 489, 490, 492, 494, 495, 498, 499, 500, 501, 509, 510, 513, 514, 520, 521, 523, 524, 525, 526, 532, 533, 534, 541, 542, 543, 544, 545, 546, 547, 548, 549, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 586], "spectral_analysi": [456, 461, 462], "spectral_analysis_hli": [456, 461, 463], "spectral_analysis_rad_max": [456, 461, 464], "spectral_cub": 439, "spectral_index": [19, 20, 26, 52, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281], "spectral_index_error": [19, 20, 26, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 452], "spectral_irf_model": 397, "spectral_model": [66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 102, 111, 112, 117, 120, 121, 125, 130, 134, 136, 137, 144, 165, 167, 170, 174, 215, 228, 236, 250, 252, 268, 278, 291, 401, 404, 408, 409, 410, 414, 435, 454, 457, 458, 459, 460, 462, 464, 465, 466, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 487, 488, 489, 490, 495, 496, 498, 501, 510, 511, 523, 532, 541, 542, 543, 544, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "spectral_model1": 481, "spectral_model2": 481, "spectral_model_pwl": 474, "spectral_model_registri": 496, "spectral_par": 409, "spectral_point": 402, "spectral_typ": 409, "spectralbackground": 397, "spectralbackgroundmodel": 398, "spectralcompoundmodel": 397, "spectralconst": 397, "spectralevalu": 397, "spectralexponentialcutoffpowerlaw3fgl": 405, "spectralgaussian": [397, 430], "spectralmodel": [19, 20, 71, 74, 75, 78, 79, 80, 102, 121, 125, 126, 128, 130, 136, 144, 165, 167, 170, 174, 222, 223, 226, 228, 230, 232, 233, 234, 236, 239, 245, 246, 249, 252, 253, 255, 257, 258, 259, 264, 268, 269, 272, 273, 274, 277, 278, 281, 284, 397, 398, 401, 404, 410, 435, 438, 445, 452, 454, 487, 496, 510, 511, 520, 539, 582], "spectralregion": 400, "spectraltempl": 397, "spectroscopi": [454, 456, 480, 483, 505, 534], "spectrum": [19, 20, 26, 72, 76, 98, 100, 102, 103, 106, 107, 108, 111, 112, 126, 128, 133, 136, 141, 167, 170, 175, 179, 183, 184, 197, 198, 200, 209, 210, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 284, 285, 294, 300, 383, 392, 397, 398, 401, 402, 405, 406, 407, 419, 429, 430, 431, 432, 434, 438, 440, 443, 444, 445, 446, 447, 449, 451, 454, 456, 459, 460, 461, 463, 470, 471, 474, 475, 476, 481, 486, 487, 488, 494, 496, 500, 501, 505, 509, 511, 513, 521, 525, 530, 538, 552, 555, 556, 558, 559, 563, 564, 566, 567, 568, 569, 585], "spectrum_analysi": 462, "spectrum_dataset": [150, 398, 482, 488], "spectrum_dataset_1": 398, "spectrum_dataset_2": 398, "spectrum_dataset_empti": [482, 492], "spectrum_dataset_mak": [482, 492], "spectrum_dataset_on_off": 482, "spectrum_fitting_with_sherpa": 406, "spectrum_mak": 457, "spectrum_simul": [406, 456, 461, 465], "spectrumanalysisiact": [402, 431, 445], "spectrumdataset": [98, 99, 100, 103, 106, 107, 112, 133, 136, 150, 178, 179, 183, 184, 236, 407, 429, 430, 431, 432, 433, 434, 435, 438, 441, 457, 459, 462, 464, 465, 472, 480, 481, 482, 484, 490, 492, 498, 534, 586], "spectrumdatasetmak": [175, 432, 438, 457, 459, 462, 464, 465, 472, 480, 481, 482, 484, 492, 534], "spectrumdatasetonoff": [98, 106, 108, 109, 111, 134, 136, 150, 178, 179, 215, 291, 383, 401, 429, 430, 431, 433, 434, 450, 451, 452, 457, 458, 459, 462, 463, 465, 471, 472, 479, 482, 484, 488, 489, 490, 492, 498, 521, 523, 586], "spectrumdatasetonoffstack": 431, "spectrumdatasetsonoff": 398, "spectrumenergygroup": 446, "spectrumevalu": 434, "spectrumextract": [401, 429, 432, 445], "spectrumfit": [429, 445, 446, 447], "spectrumobserv": [398, 429, 445], "spectrumobservationlist": [429, 444], "spectrumobservationstack": 444, "spectrumonoffdataset": 401, "spectrumresult": 429, "spectrumsimul": [430, 444, 447], "spectrumstack": 446, "spectrumstat": 430, "specutil": 400, "speed": [137, 313, 389, 415, 420, 430, 432, 440, 446, 447, 454, 490], "spell": [391, 525], "spend": [399, 406], "spent": [393, 492], "sphere": [47, 341, 426, 428, 537, 542, 543, 546], "spherepointpick": 341, "spheric": [47, 386, 428, 537, 583], "sphericalcircleskyregion": [405, 482, 511], "sphinx": [389, 393, 406, 417, 429, 433, 440, 446, 447, 449, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "sphinx_gallery_conf": 417, "sphinx_gallery_thumbnail_numb": [387, 458, 462, 464, 466, 468, 473, 476, 491, 551], "sphinxext": 387, "spill": 492, "spin": [50, 51, 54, 430, 517], "spir": [428, 447], "spiral": [22, 33, 34, 38, 45, 442], "spiralarm": [33, 38, 45, 446, 515], "spiralarm_index": [33, 34, 38], "spirit": 412, "split": [19, 20, 87, 91, 92, 117, 120, 126, 128, 197, 198, 200, 206, 209, 210, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 392, 394, 396, 398, 400, 401, 405, 407, 409, 415, 419, 435, 453, 480, 496, 514, 590], "split_by_axi": [197, 198, 200, 206, 209, 210], "split_template_model": [117, 120], "sporad": 413, "spot": 386, "spread": [82, 88, 101, 158, 167, 170, 386, 408, 435, 457, 466, 491, 530, 584], "spring": [396, 448], "sprint": [394, 395, 399, 402, 403, 404, 405, 407], "spuriou": 145, "sqrt": [19, 20, 30, 31, 32, 67, 102, 103, 106, 107, 111, 112, 121, 126, 128, 131, 137, 197, 198, 200, 202, 206, 209, 210, 213, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 292, 301, 325, 326, 327, 398, 459, 462, 466, 468, 470, 476, 478, 482, 485, 487, 490, 492, 493, 495, 501, 509, 510, 511, 523, 543, 544, 547, 548, 558, 587], "sqrt_space": [405, 432], "sqrt_t": [121, 125, 126, 128, 137, 145, 150, 293, 295, 379, 410, 423, 435, 459, 462, 463, 466, 468, 470, 472, 482, 487, 488, 489, 494, 502, 509, 511, 523, 585, 587], "sqrt_ts_min": [150, 462], "sqrt_ts_threshold_ul": [71, 74, 75, 78, 125, 126, 127, 128, 130, 137, 466, 476, 479, 480, 487, 488, 489, 509, 511], "squar": [17, 18, 21, 22, 24, 25, 27, 46, 103, 106, 107, 126, 127, 154, 155, 156, 162, 167, 170, 173, 194, 208, 210, 278, 298, 401, 404, 435, 494, 498, 513, 523, 537, 585, 586, 587, 588], "squash": [156, 195, 196, 199, 201, 202, 205, 207, 208, 452, 457, 468, 488, 493], "squeez": [457, 491], "sr": [151, 152, 153, 164, 195, 196, 205, 208, 225, 280, 284, 457, 465, 467, 470, 472, 478, 481, 487, 488, 491, 493, 496, 500, 501, 530, 541, 549], "src": [399, 458, 473, 521], "src_above_bkg": 473, "src_event": [474, 475], "src_posit": [474, 475], "srcmap": [196, 197, 198, 200, 209, 210, 493], "ssc": [58, 60, 61, 62, 64, 65, 101, 253, 406, 564], "ssc_model": 253, "st": [53, 490, 501], "stabil": [19, 20, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 411, 478], "stabl": [11, 87, 91, 205, 215, 313, 393, 394, 395, 402, 403, 406, 411, 416, 417, 418, 420, 432, 433, 434, 440, 445, 447, 449, 490, 522], "stack": [16, 83, 86, 92, 100, 102, 103, 105, 106, 107, 111, 112, 125, 126, 128, 138, 147, 155, 156, 162, 167, 170, 173, 197, 198, 199, 200, 205, 206, 209, 210, 213, 219, 221, 278, 356, 386, 398, 401, 402, 408, 413, 428, 431, 432, 435, 438, 443, 444, 449, 450, 452, 454, 458, 459, 463, 467, 471, 472, 479, 482, 488, 490, 492, 497, 498, 509, 510, 522, 523, 532, 535], "stack_dataset": [173, 482, 492], "stack_reduc": [100, 150, 215, 431, 459, 462, 464, 470, 471, 472, 482, 488, 490, 523], "stacked_dataset": [472, 473], "stacked_fit": 462, "stacked_on_off": 468, "stackedobscubemak": 392, "stackedobsimagemak": 392, "stackoverflow": 353, "stage": [389, 402, 468, 470, 481, 488, 521, 584], "stai": [398, 416], "stand": 391, "standard": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 86, 87, 91, 96, 198, 210, 215, 237, 285, 294, 312, 368, 369, 386, 387, 389, 391, 395, 397, 398, 399, 402, 404, 410, 412, 413, 415, 423, 430, 431, 447, 453, 457, 458, 463, 465, 468, 471, 473, 475, 478, 480, 481, 484, 486, 490, 493, 496, 497, 498, 500, 503, 505, 509, 521, 524, 529, 537, 583, 584, 585], "standard_broadcast": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "standard_scal": [96, 311, 497], "standardis": [358, 359, 371, 446], "standardise_unit": [358, 372], "standpoint": 386, "stapel": [453, 454], "star": [36, 40, 230], "starmap": [329, 333, 334], "start": [16, 53, 83, 86, 88, 89, 91, 92, 94, 100, 133, 145, 207, 227, 228, 235, 240, 242, 243, 244, 252, 260, 267, 279, 282, 386, 387, 389, 391, 393, 394, 395, 396, 399, 400, 402, 403, 411, 412, 414, 415, 416, 417, 421, 422, 423, 424, 426, 431, 440, 443, 444, 445, 446, 447, 452, 454, 456, 457, 458, 459, 460, 462, 463, 464, 466, 467, 468, 470, 472, 473, 474, 475, 476, 479, 480, 481, 482, 484, 485, 486, 487, 489, 493, 496, 500, 501, 502, 505, 509, 511, 512, 525, 529, 583], "start_po": [130, 346, 476], "startswith": 386, "stat": [6, 100, 102, 106, 112, 126, 128, 129, 130, 133, 134, 137, 215, 216, 218, 220, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 379, 386, 398, 406, 414, 415, 417, 423, 430, 432, 433, 434, 435, 438, 444, 447, 448, 449, 453, 454, 459, 460, 462, 463, 464, 466, 468, 470, 471, 472, 473, 476, 480, 482, 484, 485, 489, 490, 498, 501, 509, 510, 523, 585, 586, 587], "stat_arrai": [99, 102, 103, 106, 107, 111, 112, 414, 454], "stat_contour": 215, "stat_kwarg": 102, "stat_max": [293, 295], "stat_nul": [126, 128, 129, 130, 133, 134, 137, 293, 295, 453, 466, 476, 480, 489, 523], "stat_per_bin": 398, "stat_profil": [215, 458, 490, 498, 525], "stat_scan": [102, 126, 128, 129, 130, 133, 134, 137, 138, 147, 215, 292, 454, 458, 462, 480, 489, 490, 498, 523], "stat_sum": [99, 100, 102, 103, 106, 107, 111, 112, 414, 415, 451, 452, 470, 481, 488, 495, 525], "stat_sum_no_prior": 415, "stat_surfac": [215, 435, 525], "stat_typ": [102, 103, 106, 107, 111, 112, 433, 462, 470, 481, 488, 495], "state": [16, 45, 47, 207, 215, 386, 392, 396, 398, 402, 406, 408, 410, 415, 458, 463, 509, 530, 551], "stateless": 413, "statement": [386, 389, 393, 451, 453, 514], "static": [17, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 101, 104, 108, 109, 110, 121, 125, 126, 128, 129, 130, 133, 134, 137, 158, 166, 177, 183, 184, 196, 197, 198, 200, 206, 207, 209, 210, 222, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 257, 258, 259, 260, 265, 266, 267, 269, 272, 273, 274, 279, 281, 282, 283, 383, 394, 397, 417, 429, 446], "staticmethod": [397, 409, 414, 415, 496, 498], "stationari": 415, "statist": [6, 19, 20, 26, 79, 99, 100, 102, 103, 106, 107, 111, 112, 125, 126, 128, 129, 130, 133, 134, 137, 146, 150, 177, 215, 217, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 264, 269, 271, 272, 273, 274, 277, 281, 291, 292, 293, 295, 296, 297, 302, 309, 310, 398, 401, 404, 405, 406, 408, 414, 429, 433, 434, 435, 438, 440, 452, 453, 457, 458, 463, 465, 466, 467, 468, 470, 472, 476, 478, 479, 481, 482, 485, 488, 490, 492, 498, 509, 510, 521, 523, 525, 532, 535, 583, 584], "statu": [19, 20, 26, 126, 128, 214, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 386, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 448, 453, 495, 496], "std": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 294, 312, 465, 485, 501], "stddev": 68, "stderr": 386, "stdev": 415, "stdout": [321, 386], "steadi": 458, "steep": 465, "stefan": [442, 453, 454], "step": [19, 20, 26, 125, 129, 133, 134, 137, 215, 216, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 386, 389, 392, 393, 396, 397, 398, 400, 401, 402, 404, 407, 411, 414, 415, 416, 417, 423, 440, 447, 448, 452, 457, 462, 464, 467, 470, 472, 473, 474, 475, 480, 481, 488, 489, 490, 492, 496, 498, 509, 510, 511, 525, 533, 538], "stepprior": 414, "stepsampl": 415, "stepsiz": 172, "steradian": 205, "stewart": [137, 304, 466, 584], "stewart2009": [584, 587], "stick": [389, 409, 428, 447, 490, 584], "still": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 393, 394, 396, 399, 400, 403, 405, 406, 407, 410, 411, 413, 415, 416, 417, 445, 446, 447, 496, 498, 511, 523, 547, 548, 585], "stipul": 412, "stone": [386, 406], "stop": [16, 52, 83, 86, 88, 89, 91, 92, 100, 133, 135, 137, 207, 227, 228, 235, 240, 242, 243, 244, 252, 260, 267, 279, 282, 396, 423, 452, 463, 467, 468, 470, 480, 482, 484, 490, 501, 509], "storag": [82, 525], "store": [11, 15, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 82, 83, 85, 86, 87, 91, 126, 127, 128, 131, 133, 165, 178, 179, 197, 198, 200, 206, 209, 210, 215, 216, 218, 220, 228, 252, 369, 386, 387, 389, 392, 394, 395, 396, 398, 399, 402, 404, 408, 410, 412, 413, 417, 435, 438, 439, 454, 459, 464, 465, 474, 475, 482, 484, 485, 488, 489, 490, 491, 492, 493, 494, 497, 500, 501, 502, 503, 511, 521, 522, 525, 530, 531, 532, 537, 538, 561, 582, 583, 585, 589], "store_per_ob": 402, "store_trac": [215, 490], "str": [15, 16, 19, 20, 26, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 119, 123, 125, 126, 127, 128, 129, 131, 133, 134, 137, 138, 140, 141, 142, 143, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 174, 177, 178, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 286, 313, 325, 334, 349, 350, 351, 355, 368, 369, 371, 375, 379, 380, 382, 400, 413, 462, 464, 484, 492, 496], "str3": [87, 91], "straight": [387, 419], "straightforward": [417, 588], "strang": 386, "strategi": [291, 386, 393, 400, 452, 490, 588], "stream": 386, "streil": [414, 451, 452, 453], "strength": [51, 54, 414, 561], "stretch": [197, 198, 200, 206, 209, 210, 376, 377, 381, 466, 470, 476, 478, 492, 493, 495, 501, 509, 510, 511], "strict": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 103, 105, 106, 107, 127, 155, 156, 162, 167, 170, 173, 202, 208, 210, 278, 454], "strict_bound": 202, "strictli": [16, 84, 90, 105, 127, 202], "strike": 521, "string": [15, 16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 105, 126, 127, 128, 129, 130, 133, 137, 158, 164, 166, 168, 173, 196, 197, 198, 200, 202, 203, 205, 206, 208, 209, 210, 218, 220, 228, 252, 313, 331, 375, 386, 399, 400, 403, 405, 412, 413, 426, 430, 438, 440, 463, 487, 494, 496, 509, 537, 538], "strip": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strip_units_from_tre": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "strong": [52, 399, 406, 462], "stronger": 498, "strongli": [300, 401, 403, 412, 438, 467, 490, 498], "structur": [17, 87, 91, 208, 308, 390, 391, 392, 395, 397, 399, 402, 406, 409, 412, 413, 425, 431, 432, 434, 438, 441, 453, 454, 456, 476, 488, 489, 492, 493, 494, 496, 505, 512, 513, 522, 526, 537, 538, 585], "stuck": 585, "student": 389, "studi": [46, 148, 284, 308, 399, 402, 410, 420, 447, 454, 459, 460, 471, 472, 473, 476, 478, 480, 481, 484, 490, 493, 496, 500, 515, 525, 534, 586], "stuff": [387, 417, 525], "stuff1": 386, "stuff2": 386, "style": [87, 91, 102, 197, 198, 200, 206, 209, 210, 383, 389, 395, 412, 442, 444, 470, 478, 491, 493, 509, 510, 525, 538, 590], "sub": [11, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 103, 106, 107, 111, 112, 117, 120, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 197, 198, 199, 200, 202, 206, 207, 209, 210, 213, 386, 389, 393, 395, 396, 400, 405, 406, 407, 408, 413, 417, 426, 428, 432, 434, 435, 443, 445, 446, 472, 474, 489, 492, 494, 496, 502, 503, 521, 524, 525, 533, 583, 585, 589], "subcategori": 415, "subclass": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 127, 313, 400, 444, 447, 496, 498], "subcompon": [67, 80], "subfold": [394, 438], "submit": [391, 412], "submodul": [394, 428, 429, 434, 493, 511, 523], "subok": 313, "subpackag": [407, 413, 431, 438, 442], "subplot": [66, 67, 197, 198, 200, 206, 209, 210, 457, 459, 460, 462, 463, 464, 465, 466, 468, 470, 471, 472, 476, 479, 481, 482, 484, 486, 489, 490, 491, 493, 494, 495, 497, 498, 510, 525, 527, 534, 544, 548, 551], "subplot_kw": [466, 468, 472, 482, 494, 534], "subplots_adjust": [480, 485, 486, 487], "subsect": [406, 493], "subsequ": [299, 395], "subset": [82, 83, 87, 91, 129, 133, 137, 253, 413, 442, 443, 472, 482, 495, 500, 502, 524, 583], "subspac": 400, "substanti": [87, 91], "substitut": 586, "substr": [228, 252], "subtract": 464, "succeed": 126, "success": [16, 84, 90, 102, 105, 126, 127, 128, 129, 130, 133, 134, 137, 214, 215, 216, 217, 414, 415, 416, 438, 459, 460, 462, 463, 464, 466, 470, 471, 472, 476, 479, 480, 482, 484, 489, 490, 495, 501, 509, 510, 549], "successfulli": [102, 416, 459, 460, 462, 463, 464, 470, 471, 472, 481, 482, 484, 489, 490, 501, 509, 510], "sudo": 420, "suffer": [403, 482], "suffic": 481, "suffici": [389, 392, 399, 412, 452, 525], "suffix": [102, 126, 387, 397, 409, 496, 537, 539], "suggest": [389, 391, 393, 396, 400, 406, 408, 410, 414, 466, 474, 475, 525, 585], "suit": [198, 386, 538], "suitabl": 198, "sum": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 86, 103, 106, 107, 111, 112, 128, 129, 130, 132, 133, 134, 137, 138, 139, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 197, 198, 200, 206, 209, 210, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 284, 293, 295, 297, 382, 386, 396, 397, 399, 408, 410, 414, 429, 453, 466, 470, 474, 482, 486, 488, 498, 501, 509, 510, 511, 521, 531, 584, 586], "sum_": 521, "sum_band": [197, 198], "sum_i": 131, "sum_j": 521, "sum_k": 521, "sum_of_implicit_term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "sum_over_ax": [197, 198, 200, 206, 209, 210, 228, 252, 374, 447, 468, 470, 476, 482, 488, 492, 494, 495, 501, 510], "sum_over_energy_group": [125, 129, 137, 466, 472, 476], "summar": [395, 513], "summari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 293, 295, 321, 325, 335, 360, 373, 387, 389, 406, 425, 459, 463, 480, 481, 488, 500, 509, 525], "summaris": [386, 391, 393, 406], "summat": [293, 295, 392], "summer": 394, "sun": 41, "sunpi": [403, 406, 407], "super": [196, 198, 272, 273, 274, 456, 464, 474, 503, 539, 571, 573], "superexpcutoffpowerlaw3fglspectralmodel": [263, 409, 496, 567], "superexpcutoffpowerlaw4fgldr3spectralmodel": [77, 263, 496, 568], "superexpcutoffpowerlaw4fglspectralmodel": [263, 409, 496, 569], "superflu": [396, 482], "supernova": [28, 52, 459, 473, 496, 515, 516], "superpixel": 196, "supersed": [196, 197, 198, 208, 209, 210], "supervisor": 402, "suppli": [19, 20, 26, 87, 91, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 458, 480, 481], "support": [83, 85, 86, 87, 88, 89, 91, 92, 95, 100, 101, 103, 106, 107, 111, 112, 116, 128, 149, 160, 165, 196, 197, 198, 199, 200, 202, 207, 208, 209, 210, 215, 228, 252, 385, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 413, 415, 420, 424, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 463, 465, 467, 470, 472, 478, 481, 486, 487, 488, 493, 498, 500, 501, 502, 503, 509, 524, 530, 537, 538, 580, 582, 583, 585], "suppos": [243, 279, 391, 398, 584, 586], "suppress": [154, 155, 159, 525], "sure": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386, 389, 391, 402, 416, 462, 479, 493, 525, 585], "surfac": [28, 30, 35, 36, 39, 40, 45, 215, 268, 284, 339, 405, 435, 490, 496, 515], "surface_brightness_err": 487, "surprisingli": 400, "surround": [52, 331, 386], "survei": [35, 67, 129, 230, 393, 396, 406, 423, 456, 500, 505, 506, 515, 520, 525, 584], "survey_map": [456, 506, 507], "suspect": 587, "suss": [395, 412], "svg": 386, "swap": 196, "swept": 52, "swh": 412, "swhid": 412, "switch": [104, 110, 291, 386, 393, 396, 416, 440, 444], "switcher": 416, "sy": [386, 422], "syllabl": 525, "symbol": 494, "symmetr": [103, 106, 107, 111, 112, 125, 134, 137, 185, 194, 198, 238, 386, 397, 428, 440, 443, 460, 481, 492, 498, 500, 513, 523, 531, 542, 543, 587], "symmetri": [198, 428], "sync": 447, "sync_constraint": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "synchronis": 412, "synchrotron": [253, 434, 561], "syntact": [87, 91], "syntax": [16, 87, 91, 387, 402, 405, 432, 449, 585], "synthesi": [515, 516], "synthet": 426, "system": [11, 21, 83, 87, 91, 114, 115, 152, 160, 161, 196, 197, 198, 200, 203, 205, 208, 209, 210, 228, 252, 386, 392, 397, 399, 403, 406, 407, 411, 412, 414, 420, 428, 446, 452, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 536, 537, 583, 585, 589], "systemat": [397, 410, 412, 413, 435, 462, 479, 492, 523, 584, 586], "t": [16, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 50, 51, 52, 53, 67, 69, 83, 84, 86, 87, 88, 90, 91, 105, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 138, 139, 147, 148, 149, 154, 194, 207, 228, 243, 247, 252, 291, 293, 294, 295, 311, 358, 362, 385, 386, 387, 389, 391, 393, 394, 396, 398, 400, 402, 403, 404, 405, 406, 409, 410, 411, 413, 415, 417, 418, 419, 421, 423, 435, 439, 442, 443, 444, 447, 452, 454, 457, 458, 459, 462, 467, 470, 472, 473, 476, 478, 479, 480, 482, 484, 485, 486, 487, 489, 490, 492, 493, 494, 496, 497, 498, 500, 501, 513, 517, 518, 519, 521, 523, 525, 534, 572, 573, 574, 575, 576, 577, 578, 583, 585, 588, 589], "t0": [235, 260, 474, 480, 481, 484, 573, 577], "t1": [87, 91], "t2": [87, 91], "t_": [52, 53, 299, 530, 573, 574, 575, 576, 577, 578, 586], "t_0": 577, "t_b": 586, "t_decai": [242, 575], "t_delta": [104, 110, 207, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282], "t_i": 299, "t_j": 521, "t_live": [83, 88], "t_max": [227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 399, 410, 484], "t_min": [227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 399, 410, 484], "t_observ": [83, 88], "t_r": 243, "t_ref": [235, 240, 242, 243, 244, 260, 267, 279, 451, 452, 474, 475, 481, 496, 573, 574, 575, 576, 577, 578, 579, 580], "t_rise": [242, 575], "t_start": [86, 522], "t_stop": [52, 86, 522], "ta": 294, "ta2": 294, "ta3": 294, "tab": [154, 391, 470, 476, 479, 489, 498, 534], "tabl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590], "table_arrai": [87, 91], "table_associ": 67, "table_bkg_src": 473, "table_class": [87, 91], "table_compon": [67, 487], "table_filenam": 26, "table_format": 128, "table_from_row_data": 452, "table_hdu": 86, "table_identif": 67, "table_large_scale_compon": [67, 487], "table_model": [281, 409], "table_oth": 356, "tableau": 525, "tableclass": [87, 91], "tablegroup": [87, 91], "tableid": [87, 91], "tableiloc": [87, 91], "tableindic": [87, 91], "tableloc": [87, 91], "tablelocindic": [87, 91], "tablemodel": [397, 448], "tablepsf": [407, 426, 428], "tablepsfcheck": 444, "tabul": 513, "tabular": [496, 570], "tackl": 395, "tag": [19, 20, 26, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 84, 87, 90, 91, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 197, 198, 200, 206, 209, 210, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 272, 273, 274, 276, 277, 278, 279, 280, 281, 283, 411, 414, 416, 435, 449, 491, 496, 498, 544, 548], "tail": [500, 585], "take": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 103, 106, 107, 111, 112, 125, 152, 172, 174, 206, 208, 213, 215, 228, 252, 268, 361, 384, 386, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 410, 415, 417, 433, 434, 435, 438, 440, 448, 449, 451, 452, 453, 457, 459, 462, 464, 465, 474, 475, 476, 481, 482, 484, 489, 490, 492, 493, 494, 496, 497, 498, 500, 510, 511, 522, 525, 538, 554, 586, 587, 588], "taken": [15, 87, 91, 103, 106, 107, 111, 112, 126, 128, 157, 165, 184, 190, 192, 206, 207, 210, 215, 302, 387, 391, 395, 399, 451, 458, 462, 470, 471, 482, 484, 489, 491, 494, 495, 500, 511, 521, 523, 534, 535, 587], "talk": [389, 391, 393, 403, 412], "tan": [198, 205, 400, 430, 462, 493, 501, 534], "tandem": 513, "tangent": [180, 225, 229, 238, 241, 254, 265, 266, 270, 276, 280], "tangenti": [196, 538], "tar": [417, 500], "target": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 88, 90, 103, 106, 107, 111, 112, 116, 121, 125, 127, 135, 137, 155, 156, 167, 170, 187, 188, 192, 193, 197, 198, 200, 202, 206, 209, 210, 387, 392, 393, 399, 412, 415, 416, 444, 459, 464, 472, 480, 492, 494, 510], "target_nam": 534, "target_posit": [180, 459, 462, 464, 472, 479, 480, 484, 510], "target_radec": 88, "targetmetadata": [90, 127], "task": [334, 406, 410, 412, 413, 416, 417, 448, 463, 466, 492, 493, 501, 505, 509, 525, 533, 583, 585, 589], "task_nam": 334, "tast": 585, "tau": [26, 51, 54, 140, 303, 414, 486, 551], "tau_0": 51, "taul": [26, 486], "taur": [26, 486], "taylor": [52, 53], "tb00058": 139, "tbc": 415, "tbd": 247, "tbl": [87, 91], "tdelta_precis": 308, "team": [391, 395, 403, 406, 408, 412, 425, 446], "technic": [388, 389, 391, 399, 406, 408, 410, 412, 415, 417, 467], "techniqu": [392, 401, 402, 404, 415, 459, 462, 470, 473, 492, 494, 502, 532, 535, 583], "tediou": 487, "tel": [87, 91], "telescop": [82, 83, 85, 91, 95, 105, 157, 399, 400, 413, 419, 423, 424, 474, 479, 482, 497, 500, 501, 503], "tell": 464, "temp": [442, 475], "temperatur": [52, 53], "templat": [16, 26, 57, 70, 84, 90, 105, 106, 112, 117, 120, 127, 174, 182, 196, 197, 198, 200, 201, 202, 208, 209, 210, 216, 228, 243, 252, 276, 277, 278, 279, 280, 281, 288, 290, 304, 307, 391, 397, 398, 402, 409, 435, 449, 452, 453, 456, 465, 466, 468, 475, 493, 494, 495, 496, 513, 534, 539, 550, 557, 560, 565, 571, 579], "template_diffus": [495, 501], "template_extrapol": 570, "template_model": 474, "template_noextrapol": 570, "templatelightcurvetemporalmodel": 449, "templatend": [276, 277, 496], "templatendspatialmodel": [262, 496], "templatendspectralmodel": [26, 263, 440, 451, 496], "templatenpredmodel": [248, 438], "templatephasecurvetemporalmodel": [275, 449, 454, 496, 579], "templatespatialmodel": [67, 262, 408, 409, 435, 449, 450, 452, 453, 454, 474, 495, 496, 501, 549], "templatespectralmodel": [228, 252, 263, 286, 409, 496, 501, 521, 557, 560, 565, 570], "templatetemporalmodel": 449, "tempo2": [482, 525], "tempor": [219, 221, 227, 228, 235, 240, 242, 243, 244, 252, 260, 267, 268, 275, 279, 282, 299, 397, 399, 409, 410, 431, 433, 434, 435, 440, 449, 451, 452, 453, 454, 456, 458, 460, 463, 465, 466, 470, 471, 472, 474, 477, 478, 484, 485, 487, 488, 489, 495, 501, 505, 509, 525, 526, 581, 582, 584], "temporal_model": [268, 399, 474, 475, 481, 496, 572, 573, 574, 575, 576, 577, 578, 579, 580], "temporal_model1": 481, "temporal_model2": 481, "temporal_model_map": 475, "temporal_model_registri": 496, "temporal_typ": 409, "temporalbackground": 397, "temporalmodel": [227, 235, 240, 242, 243, 244, 260, 267, 268, 279, 397, 410, 434, 449, 451, 452, 454, 539], "temporari": 505, "temporarili": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 397], "ten": [392, 406], "tend": [386, 544], "tension": 485, "tensorflow": [404, 406], "tent": 416, "term": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 244, 247, 305, 310, 389, 391, 393, 395, 396, 400, 403, 406, 411, 413, 415, 436, 440, 449, 458, 466, 490, 491, 585, 587, 588], "termin": [87, 91, 102, 402, 418, 419, 420, 421, 422, 459, 460, 462, 463, 464, 470, 471, 472, 482, 484, 489, 490, 501, 509, 510, 585], "terrier": [392, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 413, 415, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "test": [6, 16, 36, 37, 84, 90, 94, 101, 102, 105, 117, 120, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 137, 146, 148, 165, 167, 170, 197, 198, 200, 206, 209, 210, 243, 291, 292, 293, 295, 298, 343, 360, 361, 362, 363, 364, 365, 366, 387, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 411, 414, 416, 417, 427, 429, 430, 432, 434, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 452, 454, 459, 465, 466, 475, 478, 479, 480, 481, 484, 488, 489, 491, 523, 525, 529, 535, 579, 580, 584, 587], "test2": 481, "test_aeff3d": 491, "test_edisp": 491, "test_events_with_gti": 522, "test_gti": 522, "test_person_txt": 386, "test_plot": 386, "test_psf": 491, "test_someth": 386, "test_using_data_fil": 365, "test_using_scipi": 366, "testcod": 387, "testoutput": 387, "testpar": 414, "teststatisticnest": [452, 454], "tev": [16, 19, 20, 26, 44, 52, 53, 66, 67, 71, 75, 83, 96, 102, 103, 106, 107, 111, 112, 113, 118, 121, 126, 128, 129, 145, 146, 151, 152, 154, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 177, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 268, 269, 271, 272, 273, 274, 277, 281, 284, 285, 311, 312, 333, 381, 387, 397, 409, 410, 413, 414, 423, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 519, 522, 523, 529, 530, 532, 534, 535, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583], "tevcat": [439, 487], "tevcat_nam": 71, "tevpi": 426, "tevtevtev1": 472, "tex": 387, "texliv": 387, "text": [17, 18, 21, 22, 23, 24, 25, 27, 50, 51, 52, 53, 54, 106, 112, 126, 128, 137, 265, 266, 312, 349, 355, 375, 387, 394, 402, 412, 417, 463, 482, 491, 500, 509, 511, 542, 543, 544, 547, 548, 552, 568, 575, 585, 587], "textcolor": 375, "textkw": 375, "th": 202, "than": [27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 87, 91, 136, 155, 156, 158, 159, 162, 166, 167, 168, 170, 174, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 291, 300, 364, 379, 386, 387, 389, 391, 392, 393, 396, 399, 400, 401, 404, 405, 410, 412, 413, 415, 417, 446, 449, 450, 451, 453, 457, 459, 470, 471, 474, 479, 480, 485, 490, 492, 494, 497, 498, 521, 538, 543, 544, 585, 587], "thank": [410, 432, 433, 438, 440, 454, 492, 525], "thaw": 495, "thei": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 95, 105, 110, 114, 115, 127, 133, 141, 171, 279, 299, 333, 386, 387, 389, 391, 392, 393, 394, 395, 397, 400, 402, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 424, 435, 438, 440, 452, 453, 459, 460, 464, 486, 488, 490, 494, 495, 496, 497, 498, 500, 503, 513, 522, 523, 525, 530, 537, 538, 583, 584, 585, 586, 587, 589], "them": [11, 15, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 87, 90, 91, 100, 105, 127, 219, 221, 228, 252, 313, 386, 387, 389, 391, 393, 394, 400, 402, 405, 412, 413, 415, 416, 417, 423, 430, 446, 459, 460, 462, 465, 467, 470, 471, 473, 475, 479, 487, 488, 489, 490, 493, 494, 496, 498, 500, 502, 505, 510, 522, 525, 534, 585, 587], "theme": [440, 447, 454], "themselv": [87, 91, 402, 492, 494, 532], "theorem": [291, 523, 587], "theoret": 498, "therefor": [106, 392, 396, 399, 400, 401, 405, 407, 409, 415, 420, 438, 454, 459, 479, 482, 490, 493, 494, 497, 498, 502, 511, 523, 587, 588], "thereof": 397, "thermal": [19, 561, 584], "thermal_relic_cross_sect": 19, "theta": [33, 34, 38, 52, 53, 158, 164, 166, 168, 172, 180, 194, 203, 314, 317, 386, 435, 464, 501, 511, 542, 543, 547, 548], "theta2": [184, 194, 384, 446], "theta2_axi": 503, "theta2_max": 384, "theta2_min": 384, "theta2_t": 503, "theta_0": [33, 38], "theta_squared_axi": [194, 503], "thew": 487, "thi": [6, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 47, 56, 67, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 100, 103, 104, 105, 106, 107, 110, 111, 112, 116, 121, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 141, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 174, 177, 179, 180, 181, 183, 185, 187, 188, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 218, 220, 222, 223, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 284, 291, 293, 295, 301, 313, 321, 331, 334, 337, 342, 343, 361, 364, 371, 373, 375, 376, 377, 381, 383, 385, 386, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 513, 514, 521, 522, 523, 525, 527, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589], "thick": 383, "thin": [56, 325], "thing": [386, 389, 391, 394, 400, 401, 402, 403, 406, 410, 417, 426, 445, 464, 467, 481, 482, 494, 501], "think": [391, 403, 404, 406], "third": [62, 63, 87, 91, 387, 438, 487, 490, 493, 505, 511, 520], "thoma": [412, 446], "thorough": [493, 513], "those": [15, 83, 183, 197, 198, 200, 206, 209, 210, 215, 219, 221, 228, 252, 321, 375, 386, 389, 391, 393, 395, 400, 402, 405, 406, 407, 408, 409, 411, 417, 418, 419, 421, 422, 432, 435, 479, 484, 490, 493, 494, 495, 497, 505, 511, 523, 525, 534, 589], "though": [15, 389, 394, 400, 401, 402, 404, 406, 463, 496, 509], "thought": [391, 400], "three": [87, 91, 165, 294, 386, 395, 398, 400, 412, 416, 454, 472, 474, 479, 485, 493, 498, 505, 530, 537, 584], "threshold": [67, 103, 107, 111, 121, 126, 127, 128, 135, 137, 145, 146, 154, 155, 159, 172, 183, 207, 291, 375, 376, 377, 400, 428, 434, 435, 457, 462, 464, 466, 472, 476, 479, 487, 488, 490, 492, 494, 500, 509, 521, 523], "threshold_alpha": 172, "through": [41, 87, 91, 312, 313, 383, 389, 391, 399, 400, 406, 410, 411, 415, 420, 424, 438, 449, 458, 466, 475, 485, 490, 492, 493, 494, 495, 501, 502, 525, 530, 537, 584, 587], "throughout": [13, 393, 395, 396, 400, 402, 445, 487], "throught": 476, "thrown": 496, "thu": [386, 393, 400, 403, 404, 406, 442, 457, 458, 467, 468, 472, 474, 489, 582, 588], "thumbnail": 438, "ti": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 198, 395, 481], "tibaldo": 443, "tick": [451, 452], "tick_param": 457, "ticker": 375, "tight_layout": [480, 490, 498, 544, 548], "tightli": 405, "tikonov": 414, "tild": [196, 208], "tile": [196, 198], "tilt": [258, 278, 397, 408, 409, 414, 427, 433, 467, 470, 471, 474, 475, 478, 488, 496, 501, 509, 510, 532, 538, 545, 565, 570], "tilt_prior": 414, "tim": 453, "time": [6, 19, 20, 35, 50, 51, 52, 53, 78, 82, 83, 85, 86, 87, 88, 89, 91, 92, 94, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 126, 127, 128, 133, 137, 140, 141, 149, 173, 179, 190, 192, 197, 198, 199, 200, 201, 206, 207, 209, 210, 215, 218, 220, 227, 230, 235, 240, 242, 243, 244, 260, 267, 268, 279, 282, 294, 299, 303, 308, 343, 363, 367, 368, 369, 370, 386, 387, 389, 391, 392, 393, 394, 396, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 416, 417, 419, 423, 427, 428, 431, 432, 433, 435, 438, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 458, 462, 463, 464, 465, 466, 468, 470, 472, 473, 475, 476, 479, 482, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 509, 510, 511, 517, 518, 519, 521, 522, 523, 525, 530, 534, 538, 543, 544, 551, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584, 585, 586, 587, 588], "time1": 303, "time2": 303, "time_axi": [197, 198, 200, 201, 206, 209, 210, 294, 475, 484, 493, 538], "time_bin": 401, "time_bin_end": 401, "time_bin_s": 401, "time_bin_start": 401, "time_bound": 207, "time_box": 91, "time_column": 410, "time_delta": [86, 207, 367, 370], "time_edg": [207, 485, 493], "time_filt": 89, "time_format": [128, 207, 452, 481], "time_info": 90, "time_interv": [16, 83, 86, 88, 92, 133, 463, 467, 468, 470, 475, 479, 480, 484, 509], "time_map_axi": [207, 493], "time_map_axis_contigu": 493, "time_max": [100, 126, 128, 207, 400, 401, 402, 475, 479, 484, 487, 493], "time_mid": [207, 485], "time_min": [100, 126, 128, 207, 400, 401, 402, 475, 479, 484, 487, 493], "time_rang": [91, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 475, 572, 573, 574, 575, 576, 577, 578, 579, 580], "time_ref": [83, 85, 86, 91, 94, 201], "time_ref_default": 86, "time_ref_from_dict": 589, "time_relative_to_ref": 589, "time_resolved_spectroscopi": [456, 483, 484], "time_seri": 294, "time_start": [85, 86, 91, 401], "time_step": 401, "time_stop": [85, 86, 91, 401], "time_sum": [86, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282], "timedelta": [87, 91, 94, 207, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 343, 367, 370, 589], "timedelta64": [87, 91], "timeinfometadata": 90, "timelin": [391, 393, 446], "timemapaxi": [128, 149, 199, 201, 438, 453, 454, 480, 481, 484, 485], "timerangeconfig": 16, "timeref": 474, "timescal": [141, 235, 300, 411, 485], "timeseri": 401, "timesi": [94, 450, 452, 474], "timestamp": 386, "timeunit": 474, "timmer": [294, 454], "tini": [472, 500], "tip": 525, "titl": [387, 391, 476, 486], "title2": 387, "tiziani": 444, "tke": 501, "tm": [87, 91], "tmax": 401, "tmid": [88, 452, 472, 492, 497, 510], "tmin": 401, "to_2d": [152, 503], "to_3d": [151, 451, 453], "to_bands_hdu": [195, 196, 205, 208], "to_binsz": [196, 205, 208, 438], "to_binsz_wc": 205, "to_contigu": [207, 493], "to_counts_hdulist": 109, "to_cub": [195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 435, 468, 538], "to_dict": [19, 20, 26, 99, 102, 103, 106, 107, 111, 112, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 413, 498], "to_edisp_kernel": [159, 454, 529], "to_edisp_kernel_map": [156, 438, 529], "to_energy_dependent_table_psf": 446, "to_even_npix": 208, "to_fits_head": 85, "to_fram": 203, "to_gti": [207, 453], "to_hdu": [197, 198, 209, 210], "to_hdulist": [103, 106, 107, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 197, 198, 204, 205, 206, 209, 210, 493], "to_head": [84, 90, 105, 127, 196, 199, 201, 202, 207, 208, 413], "to_html": 386, "to_imag": [103, 106, 107, 111, 112, 154, 155, 165, 167, 170, 195, 196, 205, 208, 408, 432, 433, 457, 468, 472, 488, 501, 535, 538], "to_json": [16, 84, 90, 105, 127], "to_map": [126, 128], "to_map_dataset": [106, 112], "to_mask": [103, 106, 107, 111, 112, 486], "to_model": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 228, 252, 438, 487], "to_node_typ": 202, "to_nsid": [196, 198], "to_odd_npix": 208, "to_panda": [87, 91], "to_parameters_t": [228, 252, 458, 459, 462, 463, 464, 467, 470, 480, 490, 498, 510], "to_pixel": [400, 462, 472, 486, 492, 496, 534, 542, 543, 544], "to_polygon": 400, "to_psf3d": [158, 166, 168], "to_python": [16, 84, 90, 105, 127], "to_region": [224, 225, 228, 229, 238, 241, 252, 256, 265, 266, 280, 400, 432, 496, 542, 543, 544], "to_region_map_dataset": [103, 106, 107, 111, 112, 488], "to_region_nd_map": [155, 156, 162, 167, 170, 198, 206, 210, 435, 438, 501], "to_region_nd_map_histogram": [210, 452], "to_sed_typ": 410, "to_sherpa": [432, 446, 447], "to_spectrum": 438, "to_spectrum_dataset": [100, 103, 106, 107, 111, 112, 408, 431, 433, 482, 488, 498], "to_st": 452, "to_str": [452, 457], "to_swap": [196, 197, 198], "to_tabl": [102, 128, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 201, 202, 206, 207, 219, 221, 243, 438, 454, 458, 460, 462, 463, 472, 476, 478, 479, 481, 487, 489, 496, 511, 523], "to_table_hdu": [83, 86, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 201, 202, 493], "to_table_psf": 444, "to_template_sky_model": [228, 252], "to_template_spectral_model": [228, 252, 409], "to_unit": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 197, 198, 200, 206, 209, 210], "to_wc": [197, 198], "to_wcs_geom": [196, 205, 538], "to_wcs_til": [196, 198], "to_yaml": [16, 84, 90, 105, 127, 228, 252, 397, 413, 496, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "tob": 463, "todai": 412, "todo": [13, 79, 99, 165, 281, 387, 410, 429, 500, 515, 516, 589], "tof": 164, "togeth": [100, 103, 106, 111, 112, 129, 133, 228, 252, 383, 386, 399, 403, 406, 418, 430, 458, 468, 470, 471, 476, 480, 488, 490, 492, 495, 496, 497, 498, 503, 510, 521, 522, 585], "tol": [291, 490], "toler": [86, 100, 133, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 363, 490], "tolist": 490, "tomato": 458, "toml": 435, "ton": [300, 500], "too": [386, 391, 392, 415, 437, 438, 451, 452, 453, 490, 494], "took": [411, 415], "tool": [6, 13, 197, 198, 200, 209, 210, 385, 389, 393, 395, 397, 399, 402, 403, 406, 412, 424, 432, 443, 446, 447, 473, 476, 481, 488, 490, 493, 497, 500, 501, 503, 513, 525, 559, 583, 584], "toolbox": [402, 443], "top": [111, 112, 373, 382, 386, 391, 402, 406, 408, 420, 446, 464, 466, 472, 476, 479, 481, 485, 487, 492, 511, 525, 538, 583, 585, 589], "top_five_ts_3fhl": 511, "tophat2dkernel": 125, "topic": [391, 395, 406, 414, 511], "total": [51, 67, 99, 102, 103, 106, 107, 111, 112, 129, 130, 133, 134, 144, 177, 192, 196, 216, 227, 235, 240, 242, 243, 244, 260, 267, 279, 282, 310, 394, 410, 414, 419, 421, 453, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 498, 499, 501, 504, 506, 508, 509, 510, 511, 512, 515, 521, 525, 530, 540, 550, 561, 571, 581, 584], "total_jfact": 486, "total_jfact_decai": 486, "total_model": 397, "total_obstim": 492, "total_stat": [216, 217, 415, 458, 484, 490, 586], "touch": [86, 427], "tour": 505, "toward": [331, 393, 400, 406, 448], "tox": [350, 387, 389, 449, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 549, 557, 573], "tqdm": 525, "trace": [215, 216, 217, 435, 490], "traceback": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 386], "track": [85, 94, 386, 395, 401, 412, 440, 495], "tracker": [389, 400, 416, 454], "tradit": 415, "tradition": [415, 496, 586], "train": 411, "traitlet": [402, 413], "traittyp": 413, "transfer": 413, "transform": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 85, 94, 165, 199, 201, 202, 207, 208, 228, 252, 315, 319, 342, 347, 386, 400, 402, 410, 414, 415, 426, 428, 444, 447, 466, 472, 492, 498, 537, 542, 543, 589], "transit": [27, 376, 377, 393, 427, 428, 446, 502], "transit_map": 502, "transit_numb": 502, "transitsmap_crab": 502, "translat": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 402, 523], "transpar": 401, "transport": 493, "transpos": 447, "trapezoid": [151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 287, 324], "trapz": 324, "trapz_loglog": 433, "trash": 429, "travi": [432, 434, 438], "treat": [95, 419, 451, 452, 462, 474, 588], "treatment": [438, 462, 470, 584], "trend": 474, "tri": [77, 394, 400], "tributor": 412, "tricki": 400, "trigger": [364, 386, 416, 502], "trim": [103, 106, 107, 155, 156, 162, 167, 170, 173, 208, 210, 278], "tripl": 158, "trivial": 393, "troubl": 585, "troubleshoot": [419, 420, 421], "trough": 485, "true": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 45, 80, 82, 83, 84, 86, 87, 88, 90, 91, 93, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 125, 126, 127, 128, 129, 133, 134, 137, 138, 144, 147, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 177, 183, 184, 187, 188, 190, 191, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 310, 313, 321, 322, 325, 343, 355, 357, 374, 379, 383, 386, 392, 399, 400, 401, 402, 409, 410, 413, 415, 429, 433, 434, 445, 447, 448, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 501, 502, 507, 509, 510, 511, 515, 521, 523, 525, 530, 535, 537, 538, 541, 542, 543, 546, 547, 549, 570, 584, 587], "truelov": 53, "truncat": [137, 331, 438], "truncation_valu": [296, 302], "trust": [16, 84, 90, 105, 127], "trustworthi": 414, "truth": 498, "try": [16, 77, 84, 90, 105, 127, 197, 198, 200, 206, 209, 210, 386, 387, 396, 400, 406, 416, 417, 423, 428, 460, 462, 464, 474, 475, 479, 487, 490, 493, 511, 585], "ts2": 294, "ts3": 294, "ts_image_estim": 472, "ts_scan": [126, 128], "ts_threshold": [149, 291], "ts_threshold_ul": [482, 523], "ts_to_sigma": [473, 587], "tsimageestim": 446, "tsmap": 454, "tsmap_est": 379, "tsmapestim": [122, 147, 148, 379, 407, 410, 433, 434, 436, 438, 452, 454, 466, 472, 525], "tstart": [88, 91, 399, 401, 465, 474, 478, 480, 481, 484, 500], "tstop": [88, 399, 401, 465, 474, 478, 480, 484, 500], "tt": [86, 94, 368, 369, 412, 475, 480, 484, 589], "tth_sec3": 202, "tupl": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 56, 83, 84, 87, 88, 90, 91, 102, 103, 105, 106, 107, 111, 112, 127, 131, 137, 151, 152, 154, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 170, 173, 178, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 278, 281, 293, 295, 298, 325, 335, 342, 386, 493, 537], "turn": [83, 88, 387, 389, 400, 500, 582], "tutori": [82, 99, 123, 133, 136, 182, 386, 389, 390, 395, 398, 399, 400, 401, 402, 403, 404, 407, 415, 417, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 444, 445, 446, 447, 448, 449, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 501, 503, 504, 506, 508, 509, 510, 511, 512, 525, 526, 528, 537, 582, 585], "tutorials_jupyt": [416, 505], "tutorials_python": 505, "tweak": [402, 438, 454, 493], "twice": [125, 537, 588], "twinx": 457, "two": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 77, 86, 87, 89, 91, 102, 103, 106, 107, 111, 112, 121, 140, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 168, 169, 173, 178, 180, 196, 197, 198, 199, 200, 202, 205, 206, 208, 209, 210, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 343, 353, 375, 380, 383, 385, 386, 387, 389, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 410, 411, 412, 414, 416, 417, 419, 440, 446, 448, 452, 454, 463, 464, 470, 471, 473, 476, 481, 487, 488, 489, 490, 491, 493, 494, 496, 497, 498, 500, 502, 509, 510, 515, 521, 522, 523, 525, 534, 537, 538, 553, 587, 588], "txt": [128, 411, 413, 416, 495, 501], "tyler": 440, "type": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 69, 84, 87, 89, 90, 91, 96, 99, 100, 102, 103, 105, 116, 125, 126, 127, 128, 130, 137, 171, 177, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 313, 343, 392, 395, 396, 397, 398, 400, 401, 402, 405, 409, 410, 412, 414, 417, 418, 423, 431, 438, 444, 445, 446, 452, 454, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 509, 510, 511, 513, 525, 537, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584, 585], "typeerror": [16, 84, 90, 105, 127, 313, 400, 410, 414], "typic": [126, 392, 395, 397, 404, 408, 409, 410, 411, 413, 416, 419, 420, 459, 464, 468, 476, 478, 479, 480, 487, 488, 489, 491, 494, 496, 497, 513, 520, 521, 522, 530, 534, 583, 584], "typing_extens": [16, 84, 90, 105, 127], "typo": [386, 424, 450, 451, 454], "u": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 83, 85, 87, 91, 96, 103, 106, 107, 111, 112, 117, 120, 121, 126, 128, 130, 132, 137, 145, 146, 154, 156, 165, 195, 196, 197, 198, 200, 201, 205, 206, 207, 208, 209, 210, 222, 223, 226, 230, 232, 233, 234, 239, 243, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 284, 285, 294, 311, 312, 313, 333, 381, 386, 389, 393, 394, 395, 401, 402, 403, 404, 409, 410, 413, 414, 427, 428, 429, 446, 447, 448, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 515, 522, 523, 525, 527, 532, 534, 535, 538, 542, 544, 545, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579], "u03c3": 473, "u18": [33, 38], "uc": [87, 91], "udrtc": 484, "ufunc": [197, 198, 200, 206, 209, 210, 464, 484], "ui": [33, 38, 50, 52, 53, 58, 60, 61, 62, 83, 88, 157, 249, 284, 285], "ul": [67, 125, 126, 128, 129, 130, 133, 134, 137, 292, 471, 476, 481, 487], "ultim": 386, "ultranest": 415, "un": [398, 412, 435, 495], "unambigu": 496, "unbehaun": 453, "unbin": [398, 399, 447], "unboundlocalerror": 386, "uncertaint": 404, "uncertainti": [52, 103, 106, 107, 111, 112, 293, 295, 390, 403, 415, 445, 460, 462, 482, 490, 498, 510, 583, 584, 586], "unchang": [103, 106, 107, 111, 112, 117, 120, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 170, 195, 196, 197, 198, 200, 201, 205, 206, 208, 209, 210, 446], "unclear": [386, 396, 397, 403, 413], "uncom": [402, 500], "undefin": 588, "under": [72, 91, 135, 138, 139, 147, 148, 386, 390, 395, 403, 412, 447, 448, 458, 463, 505, 509, 521, 587, 588], "underestim": 523, "underflow": 207, "underli": [87, 91, 205, 399, 460, 487, 493, 498, 511, 513, 522, 534, 537], "underscor": 386, "understand": [402, 424, 432, 433, 459, 462, 463, 464, 467, 474, 475, 480, 481, 485, 493, 494, 495, 500, 509, 510, 585], "undertak": 406, "underwai": 415, "unevenli": [140, 303], "unexpect": 502, "unfold": 584, "unfreez": [19, 20, 26, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 561], "unfreeze_al": [219, 221, 495], "unfrozen": 532, "unheard": 585, "uni": [414, 416], "uni_prior_stat_sum": 498, "unicod": [87, 91, 386], "unid": 67, "unidimension": 201, "unif": 432, "unifi": [87, 91, 390, 395, 400, 427, 430, 432, 433, 434, 435, 438, 447, 448, 584], "uniform": [165, 215, 247, 283, 342, 386, 395, 397, 398, 408, 410, 414, 415, 429, 430, 434, 438, 454, 459, 493, 498, 583], "uniform_filt": [131, 210], "uniformli": [399, 523], "uniformprior": [414, 454, 498], "uninstal": 385, "union": [86, 89, 103, 106, 205, 348, 400, 401, 412, 413, 430, 521], "uniqu": [87, 91, 100, 154, 196, 197, 198, 199, 200, 206, 208, 209, 210, 219, 221, 228, 236, 252, 268, 278, 379, 396, 397, 398, 399, 409, 412, 433, 454, 463, 488, 496, 502, 538, 582], "unique_id": 496, "unique_paramet": [219, 221], "uniquifi": [87, 91], "unit": [6, 19, 20, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 83, 85, 87, 88, 91, 96, 102, 103, 106, 107, 109, 111, 112, 113, 117, 118, 120, 121, 126, 128, 130, 132, 137, 145, 146, 151, 152, 153, 154, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 177, 180, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 218, 220, 222, 223, 225, 226, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 253, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 277, 278, 279, 280, 281, 284, 285, 294, 303, 311, 312, 313, 343, 357, 358, 359, 361, 370, 371, 372, 375, 376, 377, 381, 387, 395, 397, 400, 402, 404, 409, 410, 414, 415, 427, 428, 430, 438, 440, 446, 447, 449, 450, 451, 452, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 515, 517, 518, 519, 522, 523, 525, 527, 529, 530, 532, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584], "unit_string_format": [452, 457], "unitbas": 313, "uniti": [131, 199, 280, 415, 450, 544], "unitless": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 236, 278], "unitsmap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "unitswarn": [457, 465, 467, 470, 472, 478, 481, 500], "univers": [25, 197, 198, 200, 206, 209, 210, 584], "univsers": 20, "unknown": [102, 295, 466, 490, 586, 587], "unless": [93, 95, 129, 130, 133, 137, 173, 313, 385, 392, 411, 413, 491], "unlik": [87, 91, 291, 393, 404], "unmaintain": 428, "unmask": [87, 91], "unnam": [87, 91, 203], "unnecessari": [438, 449, 470], "unneed": 452, "unphys": 588, "unrealist": 386, "unrel": 589, "unreli": 500, "unsaf": 386, "unstabl": [386, 500], "unsupport": 403, "unt7ubzk": 484, "untar": 500, "until": [386, 389, 393, 400, 411, 445], "unus": [402, 430, 432], "unusu": 391, "unweight": [106, 112], "unzip": 500, "up": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 102, 130, 132, 137, 158, 164, 166, 168, 205, 313, 386, 387, 390, 391, 393, 394, 395, 398, 400, 402, 403, 404, 406, 408, 412, 414, 415, 417, 418, 419, 421, 423, 426, 428, 429, 430, 431, 432, 433, 434, 435, 438, 442, 444, 445, 446, 447, 448, 454, 462, 463, 470, 473, 474, 498, 500, 501, 538, 585], "upcast": 313, "upcom": [394, 395], "updat": [15, 16, 84, 87, 90, 91, 104, 105, 110, 127, 204, 218, 220, 228, 252, 280, 291, 333, 353, 386, 389, 391, 392, 393, 394, 395, 398, 403, 408, 410, 412, 413, 415, 416, 417, 419, 420, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 444, 445, 446, 447, 449, 452, 453, 454, 493, 496, 536, 537], "update_config": 15, "update_forward_ref": [16, 84, 90, 105, 127], "update_from_dict": [218, 220], "update_link_label": [228, 252], "update_parameters_from_t": [228, 252], "updated_model": 415, "upgrad": [196, 385, 411, 420], "upload": [403, 416], "upon": [103, 106, 107, 111, 112, 395, 467, 495, 500, 521], "upper": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 80, 102, 125, 126, 127, 128, 129, 130, 133, 134, 137, 138, 147, 154, 202, 207, 215, 222, 223, 226, 227, 230, 232, 233, 234, 235, 239, 240, 242, 243, 244, 245, 246, 249, 253, 255, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 277, 279, 281, 282, 292, 293, 295, 413, 423, 434, 438, 445, 446, 447, 453, 462, 466, 476, 479, 488, 489, 492, 509, 521, 523, 525], "upper_error": 128, "upsampl": [167, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 429, 449], "upsample_geom": 167, "upstream": [386, 389, 416], "upward": [293, 295], "url": 394, "us": [11, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 46, 47, 53, 56, 57, 59, 65, 69, 70, 71, 74, 75, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 119, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 285, 287, 292, 294, 296, 308, 311, 313, 321, 324, 325, 326, 333, 334, 337, 342, 343, 350, 353, 369, 370, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 416, 417, 418, 419, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 475, 476, 478, 480, 481, 482, 484, 485, 486, 487, 489, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 507, 511, 514, 515, 525, 527, 528, 529, 531, 535, 536, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 584, 585, 586, 587, 589, 590], "usabl": 386, "usag": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 105, 123, 127, 133, 136, 182, 195, 196, 205, 208, 337, 387, 392, 396, 397, 399, 401, 405, 410, 431, 452, 453, 487, 492, 494, 495, 585], "use_cach": 253, "use_center_as_plot_label": 202, "use_enum_valu": [16, 84, 90, 105, 127], "use_evaluation_region": [228, 252], "use_fft": 210, "use_local_fil": [87, 91], "use_nullable_int": [87, 91], "use_region_cent": [177, 184, 187, 188, 190, 191, 438, 459], "useless": 500, "user": [15, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 77, 82, 88, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 386, 387, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 424, 431, 438, 439, 445, 446, 447, 449, 463, 466, 473, 474, 475, 488, 489, 491, 493, 494, 495, 496, 497, 505, 509, 522, 523, 524, 525, 530, 534, 537, 540, 546, 550, 571, 581, 582, 585], "userdataset": 398, "usernam": 389, "userwarn": [462, 464, 471, 472, 476, 501], "uses_quant": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "usr": 585, "usual": [29, 82, 83, 126, 145, 151, 152, 153, 165, 206, 321, 386, 387, 389, 391, 392, 393, 394, 400, 401, 406, 412, 415, 417, 452, 457, 458, 459, 460, 462, 464, 465, 467, 468, 472, 474, 475, 478, 479, 480, 481, 484, 485, 486, 488, 494, 497, 502, 510, 513, 521, 525, 527, 528, 529, 531, 534, 538, 543, 582, 584, 585, 586], "ut1": 589, "utc": [86, 88, 105, 127, 367, 474, 479, 480, 484, 493, 496, 572, 573, 574, 575, 576, 577, 578, 579, 580, 589], "utf": [87, 91], "utf8": [16, 84, 90, 105, 127], "util": [6, 96, 105, 113, 117, 118, 119, 120, 127, 128, 130, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 186, 187, 188, 189, 190, 191, 192, 193, 194, 290, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 386, 395, 397, 398, 399, 400, 410, 426, 429, 430, 431, 432, 439, 440, 443, 444, 445, 446, 447, 448, 452, 453, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 513, 514, 525, 584], "utilis": [146, 291, 387, 419, 421, 457, 462, 466, 473, 485, 489, 493, 497, 502, 510, 522, 525, 532], "v": [26, 31, 32, 37, 87, 91, 158, 164, 166, 167, 168, 170, 179, 186, 204, 279, 291, 317, 389, 394, 401, 402, 413, 414, 415, 416, 417, 440, 457, 479, 486, 497, 509], "v0": [95, 393, 394, 397, 398, 400, 403, 405, 406, 411, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 447, 448, 449, 474, 475, 491, 495, 500], "v1": [13, 101, 386, 393, 395, 397, 402, 403, 404, 405, 411, 412, 416, 432, 433, 434, 440, 445, 449, 450, 451, 452, 453, 454, 476, 501, 557], "v15": 454, "v2": [412, 413, 438, 446, 453, 470], "v3": [16, 84, 90, 105, 127, 430, 470], "v7cm9fjd": 484, "v_0": [37, 49], "v_glat": 320, "v_glon": 320, "va": 542, "vagu": 391, "vain": 389, "val": [87, 91, 197, 198, 200, 206, 209, 210, 219, 221, 493, 537], "valfmt": 375, "valid": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 87, 90, 91, 105, 108, 126, 127, 130, 139, 148, 169, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 313, 331, 385, 386, 395, 399, 402, 403, 412, 432, 440, 449, 459, 462, 484, 490, 492, 493, 496, 501, 523, 525, 530, 584], "valid_hdu_class": [82, 87], "valid_hdu_typ": 87, "valid_interv": 484, "valid_tim": 484, "validate_al": 413, "validate_assign": [16, 84, 90, 105, 127, 413], "validate_default": [16, 84, 90, 105, 127], "validate_loc": 413, "validate_scalar": 90, "validate_zenith_angl": 413, "validationerror": [16, 84, 90, 105, 127, 413], "valle": 38, "valleespir": 515, "valu": [11, 15, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 52, 83, 84, 86, 87, 88, 90, 91, 92, 95, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 114, 115, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 140, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 173, 177, 183, 184, 186, 187, 188, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 291, 292, 293, 295, 296, 298, 299, 300, 303, 313, 317, 325, 326, 340, 343, 353, 357, 372, 375, 376, 377, 387, 389, 392, 397, 398, 400, 402, 404, 406, 409, 410, 413, 415, 429, 432, 438, 449, 452, 453, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 500, 501, 502, 503, 509, 510, 511, 513, 517, 518, 519, 523, 525, 529, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 585, 586, 587, 588], "value_rang": 91, "value_scan": 292, "valueerror": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 72, 87, 91, 92, 100, 228, 252, 386, 400, 413], "values_equ": [87, 91], "values_err": 482, "values_scal": [151, 152, 153, 206, 210, 243, 276, 280, 281, 325, 450, 452, 475, 491], "vanilla": [87, 91], "var": [301, 419, 421], "vari": [68, 104, 110, 133, 165, 215, 325, 353, 398, 400, 401, 411, 432, 435, 456, 458, 467, 472, 473, 475, 483, 484, 492, 496, 498, 501, 505], "variability_amplitud": 485, "variability_amplitude_100": 485, "variability_amplitude_error": 485, "variability_amplitude_signific": 485, "variability_estim": [456, 480, 483, 485], "variabl": [11, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 84, 90, 91, 105, 127, 140, 141, 210, 293, 295, 298, 299, 300, 301, 303, 308, 324, 351, 386, 387, 389, 399, 401, 402, 417, 419, 421, 427, 428, 444, 445, 446, 452, 453, 454, 456, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 479, 480, 481, 482, 483, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 509, 510, 511, 530, 585, 586, 587], "varianc": [96, 142, 143, 300, 301, 312, 401, 453, 497, 532], "variant": 417, "variat": [141, 244, 300, 392, 402, 457, 485, 491, 492, 535, 587], "varieti": [397, 583], "variou": [123, 129, 130, 133, 134, 137, 146, 386, 392, 396, 398, 401, 410, 413, 417, 419, 438, 439, 453, 458, 460, 463, 466, 471, 473, 479, 489, 490, 509, 521, 525, 583, 589], "vasco": 454, "vast": [403, 440], "vaughan": [301, 485], "ve": [386, 387, 389, 585], "vector": [195, 196, 197, 198, 200, 205, 206, 208, 209, 210, 493, 529, 537], "vega": 447, "vel": 482, "vel_di": [45, 515], "vela": [66, 426, 460, 482, 511], "veloc": [31, 32, 37, 45, 49, 317, 320], "ver": 493, "verbos": [11, 82, 387, 409, 585, 587], "veri": [63, 87, 91, 145, 215, 376, 385, 386, 387, 388, 391, 392, 397, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 413, 415, 417, 448, 457, 458, 465, 485, 487, 489, 490, 493, 498, 501, 511, 521, 525, 538, 547, 548, 582, 584, 585, 586], "verif": [100, 228, 252, 349, 352, 471, 501], "verifi": [219, 221, 241, 291, 386, 399, 487, 525], "verifywarn": 525, "verita": [97, 419, 424, 501], "versa": 196, "version": [11, 78, 85, 87, 91, 128, 185, 385, 387, 389, 390, 393, 394, 395, 396, 400, 403, 406, 412, 413, 414, 415, 417, 418, 419, 420, 422, 424, 426, 427, 428, 429, 431, 432, 437, 439, 440, 442, 445, 446, 447, 449, 450, 452, 453, 454, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 523, 585], "versu": [151, 157, 291, 293, 295, 500, 519], "vert": 259, "vertex": 400, "vhe": [459, 513], "vi": 35, "via": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 67, 82, 83, 91, 104, 110, 198, 203, 213, 385, 387, 389, 394, 398, 400, 401, 402, 403, 404, 405, 407, 409, 412, 413, 414, 415, 416, 417, 419, 420, 427, 435, 443, 445, 446, 447, 451, 452, 454, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 507, 509, 510, 511, 525, 529, 534, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 585, 589], "viabil": 413, "vice": 196, "vicin": 415, "victor": 442, "view": [83, 87, 91, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 166, 168, 169, 174, 197, 198, 200, 204, 206, 209, 210, 236, 315, 319, 373, 386, 400, 415, 428, 433, 438, 440, 447, 448, 462, 464, 468, 470, 474, 484, 488, 491, 492, 494, 500, 501, 525, 527, 528, 529, 530, 531, 532, 534, 584], "vika": 438, "vila": 454, "vin\u00edciu": 445, "viridi": [464, 486], "virtual": [389, 417, 419, 420, 421, 585], "visibl": [87, 91, 376, 377, 394, 438, 457, 474, 502, 510, 511, 584], "vision": 391, "visit": [415, 475], "visual": [6, 198, 210, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 400, 415, 433, 434, 452, 453, 454, 462, 464, 468, 470, 472, 475, 490, 491, 497, 503, 510, 511, 525, 534, 539, 542, 583], "visualis": [383, 398, 400, 407, 434, 449, 464, 491, 496, 498, 500, 525], "vline": [519, 542, 543], "vmax": [103, 106, 107, 111, 112, 376, 377, 467, 470, 472, 478, 488, 493, 494, 501, 502, 509, 510, 534], "vmin": [103, 106, 107, 111, 112, 376, 377, 466, 470, 478, 488, 493, 494, 501, 502, 509, 510, 534], "volum": [27, 201, 205, 208], "vorokh": [443, 444], "voruganti": [445, 446], "vstack": [83, 86, 399], "vuillaum": [412, 446], "vx": [317, 320, 411], "vy": [317, 320], "vz": [317, 320], "w": [26, 31, 49, 86, 194, 207, 310, 387, 411, 466, 468, 476, 486, 492, 496, 498, 534, 586, 588], "wa": [16, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 59, 84, 85, 87, 90, 91, 93, 94, 103, 105, 121, 127, 129, 130, 133, 137, 173, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 379, 386, 389, 391, 392, 393, 394, 395, 396, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 417, 427, 430, 431, 432, 433, 434, 435, 442, 446, 447, 448, 449, 450, 451, 452, 458, 460, 462, 468, 470, 472, 476, 492, 498, 500, 501, 502, 503, 511, 585], "wagner": 485, "wai": [33, 38, 83, 87, 91, 202, 294, 337, 343, 385, 386, 387, 389, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 406, 407, 410, 412, 415, 419, 420, 421, 423, 426, 430, 446, 447, 460, 462, 464, 467, 470, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 500, 501, 502, 503, 505, 515, 522, 524, 525, 529, 538, 583, 585, 587], "wait": [386, 416, 417], "walk": 415, "walker": 415, "wall": [83, 88], "want": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 84, 90, 105, 109, 127, 154, 180, 205, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 386, 388, 389, 391, 392, 393, 396, 400, 401, 402, 404, 405, 406, 415, 417, 418, 419, 420, 421, 423, 424, 427, 447, 459, 462, 463, 464, 465, 467, 474, 475, 478, 479, 481, 482, 484, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 509, 510, 511, 529, 582, 585, 586, 587, 588, 589], "ward": 311, "warmup": 415, "warn": [11, 16, 26, 82, 84, 87, 90, 91, 105, 127, 198, 218, 219, 220, 221, 276, 277, 278, 280, 372, 411, 417, 429, 446, 451, 452, 453, 454, 457, 465, 466, 467, 470, 471, 472, 475, 478, 481, 482, 500, 501, 525, 549, 557, 585], "warn_miss": 87, "warn_with_traceback": 386, "wasn": [393, 447], "watch": [501, 589], "water": [419, 502], "watson": 428, "wavelength": 405, "wavelet": [426, 444], "wc": [13, 16, 83, 103, 106, 107, 111, 130, 172, 180, 181, 185, 196, 197, 198, 200, 205, 206, 208, 209, 210, 225, 228, 229, 238, 241, 252, 254, 265, 266, 270, 276, 280, 346, 381, 386, 392, 400, 405, 428, 429, 430, 432, 438, 446, 447, 451, 453, 462, 463, 466, 467, 468, 470, 472, 476, 479, 482, 486, 488, 491, 492, 494, 495, 496, 501, 509, 510, 511, 534, 537, 542, 543, 544, 549], "wcda": [57, 70], "wcs_geom": [205, 228, 252, 493, 538], "wcs_geom_3d": 493, "wcs_geom_cel": 493, "wcs_map": [209, 210, 379], "wcs_tile": [196, 198], "wcsax": [103, 106, 107, 111, 112, 198, 205, 206, 210, 228, 252, 381, 383, 470, 493, 511, 541, 545, 546, 547], "wcsconfig": 16, "wcsgeom": [23, 83, 103, 106, 107, 111, 112, 113, 116, 118, 119, 125, 126, 137, 156, 165, 167, 177, 190, 191, 195, 196, 205, 209, 210, 224, 225, 229, 238, 241, 254, 256, 265, 266, 270, 276, 280, 387, 392, 400, 428, 431, 432, 433, 438, 451, 453, 454, 462, 466, 467, 472, 474, 475, 476, 478, 482, 486, 488, 489, 491, 492, 493, 494, 496, 501, 502, 510, 511, 521, 523, 532, 534, 535, 538, 541, 543, 544, 545, 546], "wcslib": 386, "wcsmap": [197, 198, 200, 210, 449], "wcsndmap": [103, 106, 113, 118, 121, 137, 145, 165, 167, 170, 172, 174, 179, 180, 181, 182, 185, 190, 191, 196, 197, 198, 200, 206, 208, 209, 211, 212, 228, 252, 268, 276, 373, 379, 381, 392, 431, 432, 433, 435, 438, 440, 447, 449, 452, 453, 466, 467, 476, 486, 488, 492, 493, 501, 511, 521, 523, 531, 534], "wcsprm": 549, "wcsshape": 493, "we": [13, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 65, 83, 87, 88, 89, 91, 95, 102, 137, 179, 205, 208, 218, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 285, 361, 386, 387, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 412, 413, 415, 416, 417, 418, 419, 420, 421, 423, 426, 427, 428, 429, 434, 438, 440, 445, 446, 447, 448, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 507, 509, 510, 511, 522, 529, 530, 532, 534, 537, 548, 551, 561, 582, 585, 586, 587, 588, 589], "weak": [405, 415, 489, 498], "weaker": 291, "weakli": 494, "web": [87, 91, 394, 412, 417, 423, 424, 438, 446, 454, 487], "webpag": [388, 394, 406, 412, 416, 446, 449], "websit": 454, "wedg": 400, "week": [389, 394, 404, 406, 411, 416], "weekli": [392, 395, 399, 400, 479], "wegen": [446, 447], "weigh": [167, 170, 498], "weight": [67, 106, 112, 148, 155, 156, 162, 165, 167, 170, 196, 197, 198, 200, 205, 206, 208, 209, 210, 237, 247, 261, 278, 283, 309, 414, 415, 448, 452, 473, 498, 521, 537], "weighted_chi2_paramet": 473, "weighted_kernel": 165, "weighted_sampl": 415, "welcom": [391, 400, 501], "well": [11, 19, 20, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 56, 67, 83, 87, 91, 106, 112, 117, 120, 125, 126, 134, 196, 200, 202, 206, 208, 218, 222, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 376, 377, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 423, 424, 427, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 446, 447, 448, 452, 453, 458, 459, 465, 468, 473, 475, 479, 481, 484, 488, 489, 490, 491, 492, 493, 494, 496, 500, 501, 505, 509, 510, 511, 521, 522, 523, 534, 537, 538, 582, 583, 585, 587], "went": 427, "were": [16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 84, 90, 105, 127, 141, 299, 386, 391, 392, 393, 394, 399, 401, 402, 403, 404, 405, 406, 407, 409, 411, 414, 417, 427, 430, 431, 432, 433, 434, 435, 438, 441, 446, 447, 450, 471, 482, 484, 494, 498, 500, 588], "wfh_fvlw": 470, "wg": 416, "what": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 285, 343, 387, 392, 400, 403, 405, 406, 413, 415, 417, 425, 476, 486, 487, 489, 490, 500, 501, 505, 510, 513, 521, 538, 570, 585, 586, 589], "whatev": [400, 402, 403, 585], "wheel": [403, 454], "when": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 53, 83, 84, 86, 87, 88, 89, 90, 91, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 125, 126, 127, 128, 144, 155, 156, 162, 167, 169, 170, 180, 183, 197, 198, 200, 202, 204, 206, 209, 210, 215, 216, 222, 223, 226, 228, 230, 232, 233, 234, 237, 239, 243, 245, 246, 247, 249, 252, 253, 255, 257, 258, 259, 261, 264, 269, 271, 272, 273, 274, 277, 280, 281, 283, 325, 385, 386, 387, 389, 391, 392, 393, 396, 398, 400, 401, 403, 406, 411, 412, 413, 414, 416, 419, 420, 421, 432, 440, 441, 446, 448, 451, 452, 453, 458, 464, 468, 472, 475, 476, 479, 480, 482, 487, 490, 492, 493, 496, 497, 500, 501, 521, 523, 525, 530, 532, 536, 537, 584, 586, 587, 588, 589], "whenev": [87, 91], "where": [11, 16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 69, 83, 84, 87, 88, 90, 91, 105, 126, 127, 128, 131, 137, 154, 155, 156, 162, 167, 170, 172, 183, 195, 196, 197, 198, 200, 202, 205, 206, 208, 209, 210, 211, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 296, 299, 302, 304, 313, 350, 387, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 413, 414, 417, 419, 421, 423, 429, 441, 447, 457, 462, 467, 474, 475, 487, 492, 493, 494, 496, 498, 500, 501, 502, 511, 513, 521, 522, 525, 530, 537, 542, 543, 544, 547, 548, 551, 584, 585, 586, 587, 588, 589], "wherea": [392, 400, 403, 415, 585], "whether": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 83, 84, 86, 87, 88, 90, 91, 100, 103, 105, 106, 107, 109, 111, 112, 126, 127, 128, 129, 137, 151, 152, 153, 154, 157, 158, 159, 161, 164, 166, 168, 169, 183, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 215, 222, 223, 226, 228, 230, 232, 233, 234, 239, 243, 245, 246, 249, 252, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 278, 280, 281, 294, 313, 322, 349, 352, 354, 355, 383, 391, 393, 400, 403, 405, 406, 413, 415, 452, 465, 478, 489, 492, 493, 511, 537, 586, 587], "which": [16, 19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 56, 57, 59, 67, 70, 72, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 100, 102, 103, 105, 106, 107, 109, 111, 112, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 141, 145, 146, 147, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 168, 169, 170, 172, 173, 177, 178, 183, 184, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 209, 210, 213, 215, 218, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 285, 291, 293, 294, 295, 299, 300, 301, 303, 308, 311, 325, 335, 345, 346, 364, 373, 375, 380, 382, 385, 387, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 428, 429, 430, 432, 433, 434, 435, 438, 441, 447, 449, 452, 454, 457, 458, 459, 462, 465, 466, 467, 468, 470, 473, 474, 475, 476, 479, 481, 482, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 509, 510, 511, 515, 516, 521, 522, 523, 525, 527, 528, 529, 531, 532, 534, 536, 537, 538, 539, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 582, 583, 584, 585, 586, 587, 588], "whichev": [196, 197, 198], "while": [87, 91, 106, 197, 198, 200, 202, 206, 209, 210, 386, 389, 391, 392, 393, 395, 398, 399, 401, 405, 407, 408, 410, 411, 412, 415, 416, 417, 419, 457, 462, 464, 467, 475, 481, 482, 488, 489, 491, 492, 493, 495, 496, 521, 523, 525, 536, 538, 585], "whilst": [387, 497, 505], "whippl": 97, "whirlwind": 505, "white": [300, 375, 376, 472, 482, 490, 495, 513, 538], "whitespac": 331, "who": [412, 486, 513], "whole": [95, 121, 174, 177, 184, 187, 188, 190, 191, 196, 197, 198, 200, 209, 210, 253, 284, 293, 295, 386, 392, 398, 401, 412, 459, 462, 470, 475, 479, 482, 488, 496, 501, 503, 582], "whose": [412, 417, 475, 531, 543], "why": [386, 387, 391, 393, 400, 490, 538], "wich": 415, "wide": [393, 412, 413, 428, 447, 460, 471, 584], "wider": [480, 494, 532], "widget": [197, 198, 200, 206, 209, 210, 470, 478, 493, 509, 510], "width": [16, 27, 68, 83, 87, 91, 103, 106, 107, 111, 112, 113, 114, 115, 117, 118, 120, 121, 131, 137, 154, 155, 156, 159, 162, 165, 167, 170, 172, 177, 182, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 225, 228, 229, 238, 240, 241, 252, 254, 265, 266, 268, 270, 276, 278, 280, 376, 377, 402, 409, 448, 463, 464, 466, 467, 468, 470, 472, 473, 474, 475, 476, 478, 479, 482, 486, 487, 488, 491, 492, 493, 494, 496, 501, 502, 509, 510, 511, 532, 534, 535, 536, 537, 538, 542, 543, 544, 546, 547, 548], "width_err": 487, "width_error": 68, "width_min": 205, "width_pix": [196, 197, 198], "widthconfig": 16, "wiki": [34, 83, 88, 438, 503], "wikipedia": [34, 83, 88, 342, 400, 404], "wilei": 139, "wilk": [291, 523, 587], "willing": 389, "wind": [50, 468, 473, 496, 516], "window": [114, 115, 385, 386, 393, 403, 417, 418, 419, 421, 427, 443, 447, 466, 487, 584, 585, 587], "wise": [19, 20, 26, 87, 91, 145, 146, 198, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 414, 440, 454, 468, 470, 521], "wish": [205, 389, 404, 473, 490], "with_bbox": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_bounding_box": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "with_units_from_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "withdraw": [396, 397, 398, 401, 408, 410], "withdrawn": [390, 391, 396, 397, 398, 401, 408, 410], "within": [129, 132, 145, 196, 210, 227, 228, 229, 235, 240, 241, 242, 243, 244, 252, 260, 265, 267, 268, 279, 282, 385, 386, 387, 391, 395, 400, 402, 403, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 418, 419, 421, 441, 444, 446, 450, 452, 454, 463, 464, 470, 473, 479, 480, 481, 484, 487, 489, 491, 492, 493, 496, 497, 501, 505, 511, 521, 524, 525, 584], "without": [13, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 133, 157, 195, 196, 201, 205, 208, 247, 383, 386, 389, 391, 394, 396, 400, 401, 402, 403, 405, 410, 415, 417, 428, 429, 433, 454, 463, 466, 470, 471, 484, 486, 492, 493, 494, 509, 525, 536, 537, 538, 580, 585, 587], "without_units_for_data": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "wl": [26, 486], "wo": 482, "wobbl": [95, 481, 500], "wobbleregionfind": 440, "wobbleregionsfind": 464, "wolfram": [340, 341], "women": 443, "won": [121, 125, 129, 133, 137, 358, 411, 470, 493, 500, 588], "wong": [430, 454], "wood": [393, 444, 446, 447], "word": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 525], "work": [11, 13, 16, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 87, 91, 100, 128, 207, 350, 385, 386, 387, 389, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 408, 411, 412, 415, 416, 417, 418, 419, 420, 422, 423, 424, 426, 427, 428, 429, 430, 432, 433, 439, 442, 443, 444, 445, 446, 447, 448, 449, 454, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511, 521, 525, 535, 537, 549, 551, 557, 573, 579, 580, 585], "workaround": [403, 454], "workflow": [389, 394, 395, 402, 407, 411, 417, 432, 454, 463, 468, 505, 509, 510, 526], "workshop": 395, "workspac": 389, "world": [83, 208, 228, 252, 386, 392, 472, 511, 537], "worst": 389, "worth": [386, 513], "would": [16, 84, 87, 90, 91, 95, 105, 127, 197, 198, 200, 206, 209, 210, 247, 386, 389, 392, 393, 394, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 415, 429, 438, 460, 462, 465, 466, 478, 490, 493, 494, 496, 498, 501, 538], "wouldn": 400, "wrap": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 202, 264, 321, 400, 431, 454], "wrap_at": 397, "wrap_coord": 202, "wrapper": [56, 253, 264, 325, 400, 401, 415, 429, 432, 513, 525], "write": [11, 15, 16, 26, 82, 86, 87, 88, 91, 100, 102, 103, 106, 107, 109, 111, 112, 126, 128, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 197, 198, 200, 204, 206, 209, 210, 216, 228, 243, 252, 276, 277, 278, 279, 280, 355, 364, 387, 389, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 408, 409, 410, 412, 413, 414, 417, 423, 426, 432, 435, 440, 442, 445, 446, 447, 448, 453, 454, 457, 462, 470, 471, 474, 476, 491, 495, 496, 500, 501, 507, 509, 510, 525, 530, 586, 588], "write_arf": 109, "write_bkg": 109, "write_covari": [15, 100, 216, 228, 252], "write_dataset": 15, "write_ds9": 496, "write_model": 15, "write_pha": 109, "write_rmf": 109, "writeabl": 414, "writer": [87, 91, 406, 413], "writeto": [86, 151, 152, 153, 157, 158, 159, 161, 164, 166, 168, 169, 474], "written": [88, 100, 102, 103, 106, 107, 109, 111, 112, 126, 128, 155, 156, 162, 167, 170, 197, 198, 200, 204, 206, 209, 210, 212, 386, 387, 389, 391, 395, 396, 406, 412, 414, 450, 457, 475, 495, 498, 513, 521, 522, 525, 538, 584], "wrong": [386, 436, 450, 451, 452], "wrote": 412, "wrt": [83, 167, 170, 386, 404, 481, 580], "wstat": [106, 112, 305, 306, 398, 426, 444, 445, 458, 462, 463, 465, 468, 472, 482, 488, 498, 521, 584], "wstatcountsstatist": [482, 587], "wt": [26, 486], "wun": 430, "www": [67, 87, 91, 139, 406, 500], "wyatt": [426, 584], "x": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 67, 68, 87, 91, 103, 107, 111, 131, 139, 145, 152, 202, 206, 207, 215, 218, 220, 222, 225, 226, 229, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 256, 257, 258, 259, 260, 264, 265, 266, 267, 269, 272, 273, 274, 279, 280, 294, 300, 301, 304, 316, 317, 318, 320, 324, 326, 331, 340, 375, 378, 379, 386, 387, 391, 393, 394, 395, 400, 411, 415, 416, 419, 421, 460, 465, 466, 472, 475, 482, 484, 485, 487, 490, 491, 493, 498, 501, 511, 519, 525, 542, 543, 585, 587], "x27": [489, 491], "x86_64": [457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "x_": 131, "x_0": [197, 198, 200, 206, 209, 210], "x_1": 325, "x_2": 325, "x_3": 325, "x_bkg": 482, "x_edg": 132, "x_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_i": [197, 198, 200, 206, 209, 210], "x_j": 131, "x_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_max": [131, 338, 340, 476], "x_min": [131, 338, 340, 476], "x_n": [197, 198, 200, 206, 209, 210], "x_r_0": 241, "x_ref": [131, 476], "x_sigma": 238, "x_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "x_valu": [215, 490], "xarg": 386, "xaxi": [489, 525], "xerr": [457, 484, 498], "xf": 500, "xfail": 386, "xkvdvapk": 484, "xlabel": [387, 452, 468, 481, 484, 498, 501, 517, 518, 519, 542, 579], "xlim": [373, 470, 498, 501, 519], "xmax": [17, 18, 21, 22, 24, 25, 27, 206, 414], "xmin": [17, 18, 21, 22, 24, 25, 27, 206, 414], "xml": [395, 396, 397, 431, 445, 447, 500, 513], "xmltodict": [439, 500], "xpo": 484, "xref": 131, "xspec": [230, 281, 310, 445, 458, 586], "xunit": [464, 551], "xviii": 406, "xx": [397, 412], "xxx": [87, 91, 391, 412], "xxx_by_coord": 493, "xxxx": 525, "xy": [462, 472, 476, 542], "xy_posit": [33, 34, 38], "xytext": 542, "xyz": 416, "y": [19, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 68, 87, 91, 145, 152, 202, 215, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 316, 317, 318, 320, 324, 326, 378, 386, 400, 411, 419, 421, 452, 457, 466, 472, 475, 484, 490, 498, 519, 525], "y_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_stddev": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "y_valu": [215, 490], "yaml": [11, 15, 16, 20, 26, 84, 90, 99, 100, 102, 103, 105, 106, 107, 111, 112, 126, 127, 147, 148, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 291, 349, 352, 354, 355, 385, 394, 395, 397, 398, 399, 402, 403, 408, 413, 414, 416, 417, 418, 430, 431, 432, 435, 440, 449, 453, 454, 457, 459, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 510, 511, 524, 582, 583, 584, 585], "yaml_str": [228, 252, 463], "yaxi": [460, 489, 525], "ye": 417, "year": [45, 61, 65, 78, 386, 391, 393, 394, 396, 403, 406, 407, 411, 413, 417, 444, 446, 447, 471, 473, 487, 500, 517, 518, 519, 520], "yearli": [420, 445], "yellow": 376, "yerr": [482, 484], "yet": [89, 385, 386, 389, 391, 393, 400, 403, 406, 407, 454, 455, 460, 463, 509, 589], "yield": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 82, 83, 88, 92, 197, 198, 200, 206, 209, 210, 350, 393, 399, 400, 405, 407, 409, 414, 494, 586, 587, 588], "yk04": [45, 48], "yk04b": 48, "ylabel": [387, 481, 484, 498, 501, 517, 518, 519, 542, 579], "ylim": [373, 458, 468, 498, 501, 517, 519, 558, 567, 568, 569], "ymax": [542, 543], "ymin": [542, 543], "yml": [389, 403, 416, 417, 418, 419, 421, 446, 454], "you": [16, 19, 20, 26, 67, 82, 83, 84, 87, 90, 91, 94, 102, 105, 109, 127, 128, 145, 152, 154, 157, 180, 197, 198, 200, 206, 209, 210, 215, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 284, 291, 385, 386, 387, 388, 389, 391, 393, 396, 400, 403, 404, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 438, 446, 447, 448, 454, 458, 459, 460, 462, 463, 464, 465, 467, 468, 470, 472, 474, 475, 478, 480, 481, 482, 484, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 505, 509, 510, 511, 521, 522, 525, 528, 532, 536, 559, 582, 585, 586, 587, 588, 589], "your": [16, 19, 20, 26, 84, 90, 99, 105, 127, 222, 223, 226, 230, 232, 233, 234, 239, 245, 246, 249, 253, 255, 257, 258, 259, 264, 269, 271, 272, 273, 274, 277, 281, 385, 386, 387, 389, 391, 393, 416, 417, 418, 419, 420, 421, 423, 424, 427, 428, 429, 432, 433, 438, 447, 448, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 520, 525, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584, 587], "yourself": [585, 586], "yr": [45, 52, 53, 515, 517, 518, 519], "yscale": [468, 577], "yt": 386, "yu": [430, 454], "yueyhwnp": 484, "yunit": [462, 464, 486, 487, 501, 562], "yusifov": [39, 40], "yusifovkucuk2004": [28, 29, 30, 35, 36, 40, 48], "yusifovkucuk2004b": [28, 29, 30, 35, 36, 39, 48], "yve": 446, "yy": 412, "yyyi": 412, "z": [19, 20, 26, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 46, 87, 91, 148, 316, 317, 320, 411, 412, 415, 419, 421, 486, 515, 551], "z_0": 29, "z_high": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "z_low": [28, 29, 30, 31, 32, 35, 36, 37, 39, 40], "zabalza": 442, "zanin": [446, 447], "zd": 83, "zen": 497, "zen_pnt": 497, "zenith": [457, 471, 497, 500, 501, 502, 530], "zenith_angl": [83, 413, 501, 511], "zenodo": [412, 440, 500], "zero": [52, 53, 67, 87, 91, 100, 103, 106, 107, 111, 112, 137, 145, 154, 155, 156, 159, 162, 167, 183, 197, 198, 200, 206, 209, 210, 256, 278, 280, 325, 331, 343, 386, 431, 434, 449, 454, 487, 492, 493, 498, 588], "zhao": [27, 453], "zhen": 139, "zip": [401, 414, 416, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 507, 509, 510, 511, 519, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "zl": [26, 486], "zmj8vab7": 489, "zone": 482, "zsh": 387, "zt": [26, 486], "z\u00e9": 445, "\u00e0": 444, "\u0261\u00e6m\u0259pa\u026a": 525, "\u03b3": [141, 513, 584], "\u03c3": [28, 473]}, "titles": ["analysis - High level interface", "astro - Astrophysics", "catalog - Source catalogs", "data - DL3 data and observations", "datasets - Reduced datasets", "estimators - High level estimators", "API reference", "irf - Instrument response functions", "makers - Data reduction", "maps - Sky maps", "modeling - Models and fitting", "scripts - Command line tools", "stats - Statistics", "utils - Utilities", "visualization - Plotting features", "Analysis", "AnalysisConfig", "BurkertProfile", "DMProfile", "DarkMatterAnnihilationSpectralModel", "DarkMatterDecaySpectralModel", "EinastoProfile", "IsothermalProfile", "JFactory", "MooreProfile", "NFWProfile", "PrimaryFlux", "ZhaoProfile", "CaseBattacharya1998", "Exponential", "FaucherKaspi2006", "FaucherKaspi2006VelocityBimodal", "FaucherKaspi2006VelocityMaxwellian", "FaucherSpiral", "LogSpiral", "Lorimer2006", "Paczynski1990", "Paczynski1990Velocity", "ValleeSpiral", "YusifovKucuk2004", "YusifovKucuk2004B", "add_observed_parameters", "add_pulsar_parameters", "add_pwn_parameters", "add_snr_parameters", "make_base_catalog_galactic", "make_catalog_random_positions_cube", "make_catalog_random_positions_sphere", "radial_distributions", "velocity_distributions", "PWN", "Pulsar", "SNR", "SNRTrueloveMcKee", "SimplePulsar", "CATALOG_REGISTRY", "SourceCatalog", "SourceCatalog1LHAASO", "SourceCatalog2FHL", "SourceCatalog2HWC", "SourceCatalog2PC", "SourceCatalog3FGL", "SourceCatalog3FHL", "SourceCatalog3HWC", "SourceCatalog3PC", "SourceCatalog4FGL", "SourceCatalogGammaCat", "SourceCatalogHGPS", "SourceCatalogLargeScaleHGPS", "SourceCatalogObject", "SourceCatalogObject1LHAASO", "SourceCatalogObject2FHL", "SourceCatalogObject2HWC", "SourceCatalogObject2PC", "SourceCatalogObject3FGL", "SourceCatalogObject3FHL", "SourceCatalogObject3HWC", "SourceCatalogObject3PC", "SourceCatalogObject4FGL", "SourceCatalogObjectGammaCat", "SourceCatalogObjectHGPS", "SourceCatalogObjectHGPSComponent", "DataStore", "EventList", "EventListMetaData", "FixedPointingInfo", "GTI", "HDUIndexTable", "Observation", "ObservationFilter", "ObservationMetaData", "ObservationTable", "Observations", "ObservationsEventsSampler", "PointingInfo", "PointingMode", "get_irfs_features", "observatory_locations", "DATASET_REGISTRY", "Dataset", "Datasets", "FermipyDatasetsReader", "FluxPointsDataset", "MapDataset", "MapDatasetEventSampler", "MapDatasetMetaData", "MapDatasetOnOff", "MapDatasetWeighted", "OGIPDatasetReader", "OGIPDatasetWriter", "ObservationEventSampler", "SpectrumDataset", "SpectrumDatasetOnOff", "apply_edisp", "create_empty_map_dataset_from_irfs", "create_map_dataset_from_observation", "create_map_dataset_geoms", "split_dataset", "apply_edisp", "create_map_dataset_from_dl4", "split_dataset", "ASmoothMapEstimator", "ESTIMATOR_REGISTRY", "EnergyDependentMorphologyEstimator", "Estimator", "ExcessMapEstimator", "FluxMaps", "FluxMetaData", "FluxPoints", "FluxPointsEstimator", "FluxProfileEstimator", "ImageProfile", "ImageProfileEstimator", "LightCurveEstimator", "ParameterEstimator", "ParameterSensitivityEstimator", "SensitivityEstimator", "TSMapEstimator", "combine_flux_maps", "combine_significance_maps", "compute_lightcurve_discrete_correlation", "compute_lightcurve_doublingtime", "compute_lightcurve_fpp", "compute_lightcurve_fvar", "estimate_exposure_reco_energy", "find_peaks", "find_peaks_in_flux_map", "get_combined_flux_maps", "get_combined_significance_maps", "get_rebinned_axis", "resample_energy_edges", "Background2D", "Background3D", "BackgroundIRF", "EDispKernel", "EDispKernelMap", "EDispMap", "EffectiveAreaTable2D", "EnergyDependentMultiGaussPSF", "EnergyDispersion2D", "FoVAlignment", "IRF", "IRFMap", "IRF_REGISTRY", "PSF3D", "PSFKernel", "PSFKing", "PSFMap", "ParametricPSF", "RadMax2D", "RecoPSFMap", "load_irf_dict_from_file", "AdaptiveRingBackgroundMaker", "DatasetsMaker", "FoVBackgroundMaker", "MAKER_REGISTRY", "Maker", "MapDatasetMaker", "PhaseBackgroundMaker", "ReflectedRegionsBackgroundMaker", "ReflectedRegionsFinder", "RegionsFinder", "RingBackgroundMaker", "SafeMaskMaker", "SpectrumDatasetMaker", "WobbleRegionsFinder", "make_counts_rad_max", "make_edisp_kernel_map", "make_edisp_map", "make_effective_livetime_map", "make_map_background_irf", "make_map_exposure_true_energy", "make_observation_time_map", "make_psf_map", "make_theta_squared_table", "Geom", "HpxGeom", "HpxMap", "HpxNDMap", "LabelMapAxis", "Map", "MapAxes", "MapAxis", "MapCoord", "Maps", "RegionGeom", "RegionNDMap", "TimeMapAxis", "WcsGeom", "WcsMap", "WcsNDMap", "containment_radius", "containment_region", "Covariance", "CovarianceResult", "Fit", "FitResult", "OptimizeResult", "Parameter", "Parameters", "PriorParameter", "PriorParameters", "BrokenPowerLawSpectralModel", "CompoundSpectralModel", "ConstantFluxSpatialModel", "ConstantSpatialModel", "ConstantSpectralModel", "ConstantTemporalModel", "DatasetModels", "DiskSpatialModel", "EBLAbsorptionNormSpectralModel", "EBL_DATA_BUILTIN", "ExpCutoffPowerLaw3FGLSpectralModel", "ExpCutoffPowerLawNormSpectralModel", "ExpCutoffPowerLawSpectralModel", "ExpDecayTemporalModel", "FoVBackgroundModel", "GaussianPrior", "GaussianSpatialModel", "GaussianSpectralModel", "GaussianTemporalModel", "GeneralizedGaussianSpatialModel", "GeneralizedGaussianTemporalModel", "LightCurveTemplateTemporalModel", "LinearTemporalModel", "LogParabolaNormSpectralModel", "LogParabolaSpectralModel", "LogUniformPrior", "MODEL_REGISTRY", "MeyerCrabSpectralModel", "Model", "ModelBase", "Models", "NaimaSpectralModel", "PiecewiseNormSpatialModel", "PiecewiseNormSpectralModel", "PointSpatialModel", "PowerLaw2SpectralModel", "PowerLawNormSpectralModel", "PowerLawSpectralModel", "PowerLawTemporalModel", "Prior", "SPATIAL_MODEL_REGISTRY", "SPECTRAL_MODEL_REGISTRY", "ScaleSpectralModel", "Shell2SpatialModel", "ShellSpatialModel", "SineTemporalModel", "SkyModel", "SmoothBrokenPowerLawSpectralModel", "SpatialModel", "SpectralModel", "SuperExpCutoffPowerLaw3FGLSpectralModel", "SuperExpCutoffPowerLaw4FGLDR3SpectralModel", "SuperExpCutoffPowerLaw4FGLSpectralModel", "TEMPORAL_MODEL_REGISTRY", "TemplateNDSpatialModel", "TemplateNDSpectralModel", "TemplateNPredModel", "TemplatePhaseCurveTemporalModel", "TemplateSpatialModel", "TemplateSpectralModel", "TemporalModel", "UniformPrior", "create_cosmic_ray_spectral_model", "create_crab_spectral_model", "create_fermi_isotropic_diffuse_model", "integrate_spectrum", "read_hermes_cube", "scale_plot_flux", "read_hermes_cube", "select_nested_models", "stat_profile_ul_scipy", "CashCountsStatistic", "TimmerKonig_lightcurve_simulator", "WStatCountsStatistic", "cash", "cash_sum_cython", "compute_chisq", "compute_flux_doubling", "compute_fpp", "compute_fvar", "cstat", "discrete_correlation", "f_cash_root_cython", "get_wstat_gof_terms", "get_wstat_mu_bkg", "norm_bounds_cython", "structure_function", "weighted_cash_sum_cython", "wstat", "hierarchical_clustering", "standard_scaler", "D_SUN_TO_GALACTIC_CENTER", "cartesian", "fov_to_sky", "galactic", "motion_since_birth", "polar", "sky_to_fov", "velocity_glon_glat", "HDULocation", "LazyFitsData", "earth_location_from_dict", "trapz_loglog", "ScaledRegularGridInterpolator", "interpolate_profile", "interpolation_scale", "BACKEND_DEFAULT", "METHOD_DEFAULT", "METHOD_KWARGS_DEFAULT", "N_JOBS_DEFAULT", "POOL_KWARGS_DEFAULT", "multiprocessing_manager", "run_multiprocessing", "InverseCDFSampler", "draw", "get_random_state", "normalize", "pdf", "sample_powerlaw", "sample_sphere", "sample_sphere_distance", "sample_times", "compound_region_to_regions", "make_concentric_annulus_sky_regions", "make_orthogonal_rectangle_sky_regions", "region_to_frame", "regions_to_compound_region", "from_yaml", "get_images_paths", "make_path", "read_yaml", "recursive_merge_dicts", "to_yaml", "write_yaml", "hstack_columns", "table_row_to_dict", "table_standardise_units_copy", "table_standardise_units_inplace", "Checker", "assert_quantity_allclose", "assert_skycoord_allclose", "assert_time_allclose", "mpl_plot_check", "requires_data", "requires_dependency", "absolute_time", "time_ref_from_dict", "time_ref_to_dict", "time_relative_to_ref", "standardise_unit", "unit_from_fits_image_hdu", "MapPanelPlotter", "add_colorbar", "annotate_heatmap", "colormap_hess", "colormap_milagro", "plot_contour_line", "plot_distribution", "plot_heatmap", "plot_map_rgb", "plot_npred_signal", "plot_spectrum_datasets_off_regions", "plot_theta_squared_table", "Dependencies", "Developer How To", "Documentation How To", "Developer guide", "How to contribute to Gammapy", "PIGs", "PIG 1 - PIG purpose and guidelines", "PIG 2 - Organization of low level analysis code", "PIG 3 - Plan for dropping Python 2.7 support", "PIG 4 - Setup for tutorial notebooks and data", "PIG 5 - Gammapy 1.0 roadmap", "PIG 6 - CTA observation handling", "PIG 7 - Models", "PIG 8 - Datasets", "PIG 9 - Event sampling", "PIG 10 - Regions", "PIG 11 - Light curves", "PIG 12 - High level interface", "PIG 13 - Gammapy dependencies and distribution", "PIG 14 - Uncertainty estimation", "PIG 16 - Gammapy package structure", "PIG 18 - Documentation", "PIG 19 - Gammapy package structure follow up", "PIG 20 - Global Model API", "PIG 21 - Models improvements", "PIG 22 - Unified flux estimators API", "PIG 23 - Gammapy release cycle and version numbering", "PIG 24 - Authorship policy", "PIG 25 - Metadata container for Gammapy", "PIG 26 - Model Priors API", "PIG 27 - Bayesian Inference using Nested Sampling", "How to make a Gammapy release", "Project setup", "Virtual Environments", "Getting started", "Installation", "Recommended Setup", "Troubleshooting", "Using Gammapy", "Gammapy", "Release notes", "0.1 (Aug 25, 2014)", "0.10 (Jan 28, 2019)", "0.11 (Mar 29, 2019)", "0.12 (May 30, 2019)", "0.13 (Jul 26, 2019)", "0.14 (Sep 30, 2019)", "0.15 (Dec 3, 2019)", "0.16 (Feb 1, 2020)", "0.17 (Apr 1, 2020)", "0.18 (Nov 4th, 2020)", "0.18.1 (Nov 6th, 2020)", "0.18.2 (Nov 19th, 2020)", "0.19 (Nov 22nd, 2021)", "0.2 (Apr 13, 2015)", "0.20 (May 12th, 2022)", "0.20.1 (June 16th, 2022)", "0.3 (Aug 13, 2015)", "0.4 (Apr 20, 2016)", "0.5 (Nov 22, 2016)", "0.6 (Apr 28, 2017)", "0.7 (Feb 28, 2018)", "0.8 (Sep 23, 2018)", "0.9 (Nov 29, 2018)", "1.0 (November 10th, 2022)", "1.0.1 (March 14th, 2023)", "1.0.2 (December 6th, 2023)", "1.1 (June 13th 2023)", "1.2 (February 29th 2024)", "1.3 (November 26th, 2024)", "2.0 (unreleased)", "Computation times", "Point source sensitivity", "Account for spectral absorption due to the EBL", "Spectral analysis of extended sources", "Flux point fitting", "Computation times", "Spectral analysis", "Spectral analysis with the HLI", "Spectral analysis with energy-dependent directional cuts", "1D spectrum simulation", "Source detection and significance maps", "2D map fitting", "Ring background map", "Computation times", "3D detailed analysis", "Multi instrument joint 3D and 1D analysis", "Basic image exploration and fitting", "Morphological energy dependence estimation", "Event sampling", "Sample a source with energy-dependent temporal evolution", "Flux Profile Estimation", "Computation times", "3D map simulation", "Light curves", "Light curves for flares", "Simulating and fitting a time varying source", "Pulsar analysis", "Computation times", "Time resolved spectroscopy estimator", "Estimation of time variability in a lightcurve", "Dark matter spatial and spectral models", "Source catalogs", "Datasets - Reduced data, IRFs, models", "Estimators", "Fitting", "Using Gammapy IRFs", "Makers - Data reduction", "Maps", "Mask maps", "Modelling", "Models", "Observational clustering", "Priors", "Computation times", "CTAO with Gammapy", "Fermi-LAT with Gammapy", "HAWC with Gammapy", "H.E.S.S. with Gammapy", "Computation times", "Tutorials", "Computation times", "Survey Map Script", "Computation times", "High level interface", "Low level API", "Data structures", "Computation times", "Dark matter", "Astrophysics", "Astrophysical source population models", "Astrophysical source models", "Pulsar Source Models", "Pulsar Wind Nebula Source Models", "Supernova Remnant Models", "Source catalogs", "Datasets (DL4)", "Data access and selection (DL3)", "Estimators (DL4 to DL5, and DL6)", "High Level Analysis Interface", "How To", "User guide", "Effective area", "Background", "Energy Dispersion", "Instrument Response Functions (DL3)", "Point Spread Function", "FoV background", "Data reduction (DL3 to DL4)", "Reflected regions background", "Ring background", "HEALPix-based maps", "Sky maps (DL4)", "RegionGeom and RegionNDMap", "Model gallery", "Computation times", "Constant spatial model", "Disk spatial model", "Gaussian spatial model", "Generalized gaussian spatial model", "Piecewise norm spatial model", "Point spatial model", "Shell spatial model", "Shell2 spatial model", "Template spatial model", "Computation times", "EBL absorption spectral model", "Broken power law spectral model", "Compound spectral model", "Constant spectral model", "Exponential cutoff power law spectral model", "Exponential cutoff power law spectral model used for 3FGL", "Exponential cutoff power law norm spectral model", "Gaussian spectral model", "Log parabola spectral model", "Log parabola spectral norm model", "Naima spectral model", "Piecewise  norm spectral model", "Power law spectral model", "Power law 2 spectral model", "Power law norm spectral model", "Smooth broken power law spectral model", "Super exponential cutoff power law model used for 3FGL", "Super Exponential Cutoff Power Law Model used for 4FGL-DR3", "Super Exponential Cutoff Power Law Model used for 4FGL-DR1 (and DR2)", "Template spectral model", "Computation times", "Constant temporal model", "ExpDecay temporal model", "Gaussian temporal model", "Generalized Gaussian temporal model", "Linear temporal model", "PowerLaw temporal model", "Sine temporal model", "Phase curve temporal model", "Light curve temporal model", "Computation times", "Modeling and Fitting (DL4 to DL5)", "Gammapy analysis workflow and package structure", "Glossary and references", "Command line tools", "Fit statistics", "Statistical utility functions", "Derivation of the WStat formula", "Utility functions", "Visualization"], "titleterms": {"": [427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 446, 447, 448, 463, 475, 503, 509], "0": [395, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 455], "1": [391, 395, 414, 415, 425, 426, 433, 434, 436, 441, 449, 450, 451, 452, 453, 454, 498], "10": [400, 425, 427], "10th": 449, "11": [401, 425, 428], "12": [402, 425, 429], "12th": 440, "13": [403, 425, 430, 439, 442], "13th": 452, "14": [404, 425, 431], "14th": 450, "15": [425, 432], "16": [405, 425, 433], "16th": 441, "17": [425, 434], "18": [406, 425, 435, 436, 437], "19": [407, 425, 438], "19th": 437, "1d": [463, 465, 471, 479, 480, 505], "1dc": 500, "2": [392, 393, 414, 415, 425, 437, 439, 451, 453, 455, 498, 564], "20": [408, 425, 440, 441, 443], "2014": 426, "2015": [439, 442], "2016": [443, 444], "2017": 445, "2018": [446, 447, 448], "2019": [427, 428, 429, 430, 431, 432], "2020": [433, 434, 435, 436, 437], "2021": 438, "2022": [440, 441, 449], "2023": [450, 451, 452], "2024": [453, 454], "21": 409, "2155": 489, "22": [410, 444], "22nd": 438, "23": [411, 447], "24": 412, "25": [413, 426], "26": [414, 430], "26th": 454, "27": 415, "28": [427, 445, 446], "29": [428, 448], "29th": 453, "2d": [467, 505], "3": [393, 414, 415, 425, 432, 442, 454], "30": [429, 431], "304": 489, "32": 386, "3955": 414, "3d": [470, 471, 478, 479, 505], "3fgl": [556, 567], "3fhl": 471, "4": [394, 415, 425, 443], "4122": 414, "4fgl": [568, 569], "4th": 435, "5": [395, 425, 444], "6": [396, 425, 445], "64": 386, "6th": [436, 451], "7": [393, 397, 425, 446], "8": [398, 425, 447], "9": [399, 425, 448], "A": [462, 489], "As": 531, "In": 387, "ON": [459, 464, 471], "On": 465, "The": [392, 417, 471, 473, 489, 490, 498, 522, 534], "To": [386, 387, 406, 525], "about": 498, "abov": 473, "absolute_tim": 367, "absorpt": [409, 458, 551], "abstract": [391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415], "accept": 389, "access": [466, 488, 489, 493, 502, 522], "accessor": 537, "account": 458, "action": [386, 406], "ad": 493, "adapt": 466, "adaptiveringbackgroundmak": 172, "add": [397, 495], "add_colorbar": 374, "add_observed_paramet": 41, "add_pulsar_paramet": 42, "add_pwn_paramet": 43, "add_snr_paramet": 44, "addit": [409, 414, 531, 583], "aeff_2d": 527, "against": 464, "aim": 495, "aka": 415, "algorithm": 484, "alia": 409, "all": 480, "along": 413, "altern": [394, 397, 399, 400, 401, 402, 403, 404, 406, 407, 410, 413], "amplitud": [414, 498], "an": [386, 457, 474, 475, 488, 494], "anaconda": 420, "analysi": [0, 11, 15, 392, 395, 457, 459, 462, 463, 464, 465, 470, 471, 472, 479, 482, 505, 509, 521, 524, 583], "analysisconfig": 16, "angl": [527, 528, 529, 531], "angular": 538, "annihil": 486, "annotate_heatmap": 375, "api": [6, 386, 387, 408, 410, 413, 414, 415, 449, 452, 453, 454, 489, 505, 510], "apply_edisp": [113, 118], "approach": [401, 415, 459, 460, 463, 465, 466, 467, 468, 471, 474, 475, 476, 478, 479, 480, 481, 484, 485, 490, 494, 495, 497, 509, 510], "apr": [434, 439, 443, 445], "arbitrari": 413, "area": [491, 500, 527], "argument": [386, 400], "arm": 515, "asmoothmapestim": 121, "assert": 386, "assert_quantity_allclos": 361, "assert_skycoord_allclos": 362, "assert_time_allclos": 363, "assess": [470, 490], "assign": [480, 495], "astro": [1, 513, 516], "astronomi": 401, "astrophys": [1, 514, 515, 516], "astropi": [386, 411], "asymmetr": 491, "attribut": [386, 387, 397], "aug": [426, 442], "author": 412, "authorship": 412, "avail": 487, "ax": [493, 538], "axi": [386, 530], "backend_default": 328, "background": [397, 401, 405, 408, 414, 468, 473, 474, 492, 495, 500, 501, 509, 528, 532, 533, 534, 535, 586], "background2d": 151, "background3d": 152, "backgroundirf": 153, "backgroundirfmodel": 397, "backgroundmodel": 397, "backport": 386, "base": [410, 413, 536], "basic": [472, 493], "bayesian": [415, 485], "between": 408, "bin": [401, 457, 473, 538], "binder": 417, "bit": 386, "bkg_2d": 528, "bkg_3d": 528, "block": 485, "boundari": 494, "branch": 416, "break": 386, "broken": [387, 552, 566], "brokenpowerlawspectralmodel": 222, "bsd": 386, "bug": [440, 449, 452, 453, 454], "bugfix": 416, "build": [387, 389, 417, 479, 480], "built": 582, "bullet": 387, "bundl": 386, "burkertprofil": 17, "butterfli": 510, "call": 397, "candid": [416, 466], "caplog": 386, "cartesian": 314, "case": [392, 396, 414, 415, 588], "casebattacharya1998": 28, "cash": [296, 586, 587], "cash_sum_cython": 297, "cashcountsstatist": 293, "catalog": [2, 487, 494, 495, 511, 520], "catalog_registri": 55, "caveat": 586, "cell": 386, "certif": 389, "cff": 412, "chain": [462, 464], "chang": [386, 407, 449, 452, 453, 454], "changelog": 406, "character": 485, "check": [11, 386, 387, 422, 457, 459, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 486, 487, 488, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "checker": 360, "chi": 473, "choos": 387, "citat": 412, "class": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 386, 387, 396, 397, 410, 413, 510, 531, 587], "clean": 405, "cli": 585, "click": 386, "clobber": 386, "clumpi": 513, "cluster": [13, 497], "code": [386, 387, 392, 395, 417], "codemeta": 412, "collect": 412, "colormap": 590, "colormap_hess": 376, "colormap_milagro": 377, "combin": [495, 522], "combine_flux_map": 138, "combine_significance_map": 139, "command": [11, 386, 585], "common": 489, "compar": [464, 479], "comparison": 415, "compound": [496, 553], "compound_region_to_region": 344, "compoundspectralmodel": 223, "comput": [456, 457, 461, 462, 463, 468, 469, 472, 477, 483, 490, 499, 504, 506, 508, 510, 512, 540, 550, 571, 581], "compute_chisq": 298, "compute_flux_doubl": 299, "compute_fpp": 300, "compute_fvar": 301, "compute_lightcurve_discrete_correl": 140, "compute_lightcurve_doublingtim": 141, "compute_lightcurve_fpp": 142, "compute_lightcurve_fvar": 143, "conda": 418, "confer": 412, "confid": 490, "config": [11, 467, 468, 585], "configur": [463, 470, 476, 479, 489, 509, 583], "constant": [541, 554, 572], "constantfluxspatialmodel": 224, "constantspatialmodel": 225, "constantspectralmodel": 226, "constanttemporalmodel": 227, "contain": 413, "containment_radiu": 211, "containment_region": 212, "content": [488, 538], "context": [459, 460, 462, 463, 464, 465, 466, 467, 468, 471, 473, 474, 476, 478, 479, 480, 481, 484, 485, 494, 497, 498, 509, 510], "contigu": 493, "continu": 417, "contour": 490, "contribut": [389, 412, 495], "contributor": [412, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "conveni": 398, "convent": 386, "converg": 415, "convers": [386, 489], "convert": 386, "coordin": [13, 386, 397, 528, 538], "correct": 387, "correl": 468, "count": [489, 495, 501, 521, 587], "covari": [213, 490], "covarianceresult": 214, "creat": [459, 462, 467, 468, 475, 488, 489, 491, 493, 494, 510, 538], "create_cosmic_ray_spectral_model": 284, "create_crab_spectral_model": 285, "create_empty_map_dataset_from_irf": 114, "create_fermi_isotropic_diffuse_model": 286, "create_map_dataset_from_dl4": 119, "create_map_dataset_from_observ": 115, "create_map_dataset_geom": 116, "creation": [459, 463, 480], "cstat": 302, "cta": [396, 500], "ctao": 500, "cube": [392, 493, 505], "cumul": 459, "current": 411, "curv": [401, 479, 480, 481, 489, 579, 580], "custom": [496, 498, 582], "cut": [460, 464], "cutoff": [555, 556, 557, 567, 568, 569], "cutout": 493, "cycl": 411, "cython": [411, 417], "d_sun_to_galactic_cent": 313, "dark": [486, 513], "darkmatt": [1, 513], "darkmatterannihilationspectralmodel": 19, "darkmatterdecayspectralmodel": 20, "data": [3, 8, 386, 392, 394, 395, 401, 413, 417, 458, 459, 462, 463, 464, 470, 471, 473, 476, 479, 480, 482, 484, 488, 492, 493, 502, 505, 509, 510, 511, 522, 533, 585, 586], "dataflow": 413, "dataset": [4, 11, 99, 100, 386, 395, 398, 407, 408, 413, 457, 459, 463, 464, 467, 468, 470, 471, 475, 479, 480, 481, 488, 489, 490, 492, 494, 495, 498, 502, 509, 510, 521], "dataset_registri": 98, "datasetmodel": 228, "datasetsmak": 173, "datastor": [82, 500, 510], "dco": [389, 412], "deal": 387, "dec": 432, "decai": 486, "decemb": 451, "decis": [391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415], "default": 397, "defin": [457, 459, 462, 464, 472, 474, 475, 479, 480, 494, 510, 538], "definit": [412, 479, 533], "depend": [385, 403, 409, 440, 464, 473, 475, 496], "deprec": [386, 411], "deriv": 588, "detail": [393, 470], "detect": [407, 466, 472, 530], "detector": 528, "develop": [386, 388, 389, 393], "diagram": 396, "differ": [471, 493, 589], "diffus": 501, "dilat": 494, "direct": 464, "discrete_correl": 303, "discuss": 401, "disk": [463, 475, 509, 510, 542], "diskspatialmodel": 229, "dispers": [491, 500, 501, 529], "dissolv": 405, "distribut": [403, 415, 503, 515], "dl3": [3, 471, 503, 522, 530, 533], "dl4": [491, 521, 523, 533, 537, 582], "dl5": [523, 582], "dl6": 523, "dmprofil": 18, "do": 386, "doc": 417, "docstr": 387, "document": [387, 389, 395, 406, 453, 454], "doubl": 485, "download": [11, 417], "downsampl": 538, "dr1": [503, 569], "dr2": 569, "dr3": 568, "draw": 336, "driven": 585, "drop": 393, "due": 458, "durat": 492, "e": 503, "each": 473, "earli": 389, "earth_location_from_dict": 323, "ebl": [458, 551], "ebl_data_builtin": 231, "eblabsorptionnormspectralmodel": 230, "edg": 523, "edisp": 491, "edisp_2d": 529, "edispkernel": 154, "edispkernelmap": 155, "edispmap": 156, "effect": [491, 492, 500, 527], "effectiveareatable2d": 157, "einastoprofil": 21, "elaps": 589, "empti": 488, "encourag": 498, "end": 386, "energi": [409, 457, 464, 473, 475, 491, 494, 496, 500, 501, 523, 527, 528, 529, 531], "energydependentmorphologyestim": 123, "energydependentmultigausspsf": 158, "energydispersion2d": 159, "environ": 418, "eros": 494, "error": [490, 587], "estim": [5, 124, 404, 407, 410, 413, 415, 463, 466, 473, 476, 479, 484, 485, 489, 492, 523, 533, 534, 587], "estimate_exposure_reco_energi": 144, "estimator_registri": 122, "evalu": [397, 398, 399], "event": [395, 399, 474, 475, 482, 493, 500, 501, 503, 511, 522, 530], "eventlist": 83, "eventlistmetadata": 84, "evid": 415, "evolut": 475, "exampl": [417, 498, 521, 523, 524, 532, 533, 534, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 586], "excess": [410, 459, 468, 485, 587], "excessmapestim": 125, "exclus": [462, 463, 468, 494, 509], "execut": 585, "exemplari": 414, "exercis": [457, 460, 462, 465, 470, 472, 474, 475, 481, 484, 500, 501, 502, 503, 511], "exist": 392, "expcutoffpowerlaw3fglspectralmodel": 232, "expcutoffpowerlawnormspectralmodel": 233, "expcutoffpowerlawspectralmodel": 234, "expdecai": 573, "expdecaytemporalmodel": 235, "expect": 530, "explor": [459, 463, 472, 505], "exponenti": [29, 460, 555, 556, 557, 567, 568, 569], "expos": 397, "exposur": [491, 501], "extend": [459, 474], "extens": [387, 458], "extern": 386, "extra": 417, "extract": [468, 479, 480, 481], "extrapol": [386, 570], "f_cash_root_cython": 304, "factor": 486, "factori": 493, "factoris": 530, "faucherkaspi2006": 30, "faucherkaspi2006velocitybimod": 31, "faucherkaspi2006velocitymaxwellian": 32, "faucherspir": 33, "favor": 414, "featur": [14, 411, 416, 449, 452, 453, 454, 489], "feb": [433, 446], "februari": 453, "fermi": [471, 501], "fermipydatasetsread": 101, "fermist": 513, "file": [387, 412, 463, 467, 468, 471, 500, 509, 522, 538], "fill": [493, 538], "filter": 480, "final": [391, 416, 463, 588], "find_peak": 145, "find_peaks_in_flux_map": 146, "finder": 534, "first": [416, 463], "fit": [10, 13, 215, 395, 401, 415, 458, 459, 460, 462, 463, 464, 467, 470, 471, 472, 478, 481, 490, 494, 498, 501, 509, 510, 538, 582, 586, 587, 588], "fitresult": 216, "fix": [386, 440, 449, 452, 453, 454], "fixedpointinginfo": 85, "fixtur": 386, "flare": 480, "float": 386, "flux": [410, 414, 457, 458, 460, 462, 463, 471, 476, 486, 487, 489, 509, 510, 511, 523], "fluxestim": 410, "fluxmap": [126, 410, 489], "fluxmetadata": 127, "fluxpoint": [128, 489], "fluxpointscollect": 410, "fluxpointsdataset": [102, 398, 488], "fluxpointsestim": [129, 523], "fluxprofileestim": 130, "fold": 397, "folder": 417, "follow": 407, "format": [386, 387, 589], "formula": 588, "forward": 397, "found": 585, "fov": [492, 532], "fov_to_ski": 315, "fovalign": 160, "fovbackgroundmak": [174, 532], "fovbackgroundmodel": 236, "fraction": 485, "free": 415, "freez": [411, 416, 495], "from": [386, 415, 480, 493, 494, 495, 538], "from_yaml": 349, "fulli": 489, "function": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 386, 387, 500, 527, 528, 529, 530, 531, 587, 589], "further": [401, 458, 586], "galact": [316, 501], "galactocentr": 515, "galleri": [386, 387, 539], "gamlik": 513, "gamma": [401, 486], "gammapi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 386, 389, 392, 395, 403, 405, 406, 407, 411, 412, 413, 416, 417, 423, 424, 491, 500, 501, 502, 503, 513, 516, 520, 521, 522, 523, 524, 530, 532, 533, 534, 537, 582, 583, 589], "gaussian": [543, 544, 558, 574, 575], "gaussianprior": 237, "gaussianspatialmodel": 238, "gaussianspectralmodel": 239, "gaussiantemporalmodel": 240, "gener": [386, 392, 396, 401, 412, 413, 523, 544, 575], "generalist": 410, "generalizedgaussianspatialmodel": 241, "generalizedgaussiantemporalmodel": 242, "geom": 195, "geometri": [459, 472, 479, 480, 493, 494, 509, 510, 536, 538], "get": [389, 406, 419, 458, 467, 468, 493, 514, 515, 516, 522, 537], "get_combined_flux_map": 147, "get_combined_significance_map": 148, "get_images_path": 350, "get_irfs_featur": 96, "get_random_st": 337, "get_rebinned_axi": 149, "get_wstat_gof_term": 305, "get_wstat_mu_bkg": 306, "github": 386, "given": 495, "global": 408, "glossari": 584, "good": 588, "gpl": 386, "group": 497, "gti": [86, 522], "guid": [388, 526], "guidelin": [387, 391, 392, 406], "h": 503, "halv": 485, "handl": [386, 395, 396, 397, 408, 412, 492, 589], "have": [394, 396, 401, 402, 410], "hawc": [471, 502], "hduindext": 87, "hduloc": 321, "healpix": 536, "help": 422, "helper": 398, "hess": 471, "hgp": 487, "hierarch": 497, "hierarchi": 413, "hierarchical_clust": 311, "high": [0, 5, 395, 402, 509, 524], "hli": 463, "how": [386, 387, 389, 406, 416, 493, 525], "hpxgeom": 196, "hpxmap": 197, "hpxndmap": 198, "hstack_column": 356, "i": [386, 389, 391, 476], "idea": 396, "imag": [387, 392, 400, 405, 466, 472, 493, 505], "imageprofil": 131, "imageprofileestim": 132, "impact": 415, "implement": [396, 397, 406, 412, 414, 415, 496, 498], "import": [386, 478], "improv": [397, 409, 440, 449, 452, 453, 454], "inbuilt": 491, "includ": [387, 498], "index": [493, 498, 522], "infer": 415, "info": [11, 386], "inform": [412, 487, 498, 529], "infrastructur": 454, "input": [386, 413, 466], "inspect": 510, "instal": [406, 419, 420, 422], "instrument": [7, 471, 530], "integr": [13, 417, 457], "integrate_spectrum": 287, "interact": 408, "interest": 473, "interfac": [0, 395, 397, 402, 509, 524, 537], "intern": 489, "interpol": [13, 386, 493], "interpolate_profil": 326, "interpolation_scal": 327, "interv": 480, "intrins": 458, "introduc": [397, 405, 407, 409, 410, 476], "introduct": [397, 400, 401, 403, 404, 406, 410, 412, 413, 457, 462, 464, 472, 482, 486, 487, 488, 492, 493, 500, 501, 502, 503, 505, 511, 513, 515, 516, 586], "inversecdfsampl": 335, "ipython": 423, "irf": [7, 161, 395, 413, 457, 488, 491, 500, 530], "irf_registri": 163, "irfmap": 162, "isothermalprofil": 22, "isotrop": 501, "issu": [415, 422, 454], "iter": 493, "j": 486, "jan": 427, "jfactori": 23, "joint": [470, 471, 521], "json": 412, "jul": 430, "june": [441, 452], "jupyt": [386, 419, 421, 423], "kei": 489, "kernel": 491, "known": 454, "labelmapaxi": [199, 493], "lat": [471, 501], "latest": 500, "law": [460, 552, 555, 556, 557, 563, 564, 565, 566, 567, 568, 569], "lazi": 398, "lazyfitsdata": 322, "lc": 479, "let": 475, "level": [0, 5, 392, 395, 402, 509, 510, 524], "li": 482, "licens": 386, "light": [401, 479, 480, 481, 489, 580], "lightcurv": [401, 474, 481, 485, 487], "lightcurveestim": [133, 523], "lightcurvetemplatetemporalmodel": 243, "like": [474, 489], "likelihood": 588, "limit": 396, "line": [11, 386, 585], "linear": 576, "lineartemporalmodel": 244, "link": 387, "list": [387, 397, 398, 399, 400, 401, 402, 403, 415, 474, 480, 487, 493, 494, 495, 496, 511, 522], "literatur": 464, "livetim": 492, "load": [398, 457, 458, 460, 462, 464, 487, 489, 495, 502], "load_irf_dict_from_fil": 171, "locat": 386, "log": [11, 386, 460, 559, 560], "logparabolanormspectralmodel": 245, "logparabolaspectralmodel": 246, "logspir": 34, "loguniformprior": 247, "long": 412, "loop": [459, 492, 510], "lorimer2006": 35, "low": [392, 510], "lt": 411, "ma": 482, "mai": [429, 440], "maintain": [393, 412], "mainten": 395, "major": 416, "make": [386, 389, 416, 472, 475, 482, 510], "make_base_catalog_galact": 45, "make_catalog_random_positions_cub": 46, "make_catalog_random_positions_spher": 47, "make_concentric_annulus_sky_region": 345, "make_counts_rad_max": 186, "make_edisp_kernel_map": 187, "make_edisp_map": 188, "make_effective_livetime_map": 189, "make_map_background_irf": 190, "make_map_exposure_true_energi": 191, "make_observation_time_map": 192, "make_orthogonal_rectangle_sky_region": 346, "make_path": 351, "make_psf_map": 193, "make_theta_squared_t": 194, "maker": [8, 176, 407, 413, 459, 480, 492, 509, 510, 532, 533, 534], "maker_registri": 175, "mamba": 420, "manag": [395, 420], "manual": [494, 497], "map": [9, 200, 204, 392, 395, 396, 466, 467, 468, 471, 472, 478, 482, 486, 491, 493, 494, 495, 507, 511, 523, 536, 537, 538], "mapax": 201, "mapaxi": 202, "mapcoord": [203, 537], "mapdataset": [103, 398, 470, 474, 488, 502, 521], "mapdataseteventsampl": [104, 399], "mapdatasetmak": [177, 533], "mapdatasetmetadata": 105, "mapdatasetonoff": [106, 398], "mapdatasetweight": 107, "mappanelplott": 373, "mar": 428, "march": 450, "margin": 415, "mask": [400, 462, 463, 468, 488, 494, 509], "materi": 412, "matter": [486, 513], "measur": 586, "meet": 395, "messag": 386, "met": 589, "metadata": [412, 413], "method": [387, 398, 399, 414, 485, 493, 523, 537], "method_default": 329, "method_kwargs_default": 330, "meyercrabspectralmodel": 249, "miniconda": 420, "minor": 407, "minuit": 415, "mission": 589, "model": [10, 250, 252, 395, 397, 405, 408, 409, 413, 414, 415, 458, 459, 462, 463, 464, 467, 470, 471, 472, 474, 475, 479, 480, 481, 484, 486, 487, 488, 490, 495, 496, 498, 500, 509, 510, 511, 515, 516, 517, 518, 519, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 586], "model_registri": 248, "modelbas": 251, "modif": 494, "modifi": [386, 493, 496], "modul": [4, 5, 8, 10, 13], "mooreprofil": 24, "morpholog": 473, "morphologi": 496, "motion_since_birth": 317, "motiv": [414, 415], "mpl_plot_check": 364, "multi": 471, "multipl": [474, 495, 498, 521], "multiprocessing_manag": 333, "n_jobs_default": 331, "naima": 561, "naimaspectralmodel": 253, "name": [386, 397, 530], "nebula": 518, "nest": 415, "new": [386, 397, 401, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 480], "next": [460, 462, 463, 466, 472, 479, 500, 502, 503, 509, 511], "nfwprofil": 25, "night": 479, "non": [386, 493, 538], "norm": [409, 496, 545, 557, 560, 562, 565], "norm_bounds_cython": 307, "normal": [338, 509], "notat": 587, "note": [386, 425, 462, 489, 586], "notebook": [11, 386, 394, 423], "nov": [435, 436, 437, 438, 444, 448], "novemb": [449, 454], "now": 401, "nuisanc": 414, "number": [386, 411, 530], "numpi": 411, "o": 476, "object": [386, 387, 396, 408, 467, 468, 474, 475, 487, 489, 497], "observ": [3, 88, 92, 395, 396, 458, 462, 463, 472, 474, 475, 479, 480, 492, 497, 509, 510], "observationeventsampl": 110, "observationfilt": 89, "observationmetadata": 90, "observationseventssampl": 93, "observationt": 91, "observatory_loc": 97, "obtain": [457, 473, 481, 497], "off": [460, 462, 465, 471], "offset": [527, 528, 529, 531], "ogipdatasetread": 108, "ogipdatasetwrit": 109, "old": 417, "one": 489, "onto": 493, "open": 482, "oper": [493, 494], "optimizeresult": 217, "option": [385, 403, 490], "org": 417, "organ": [392, 401], "origin": [386, 389], "other": [386, 387, 396, 417, 420, 513], "outlin": 414, "outlook": [398, 399, 400, 402, 403, 405, 406, 407, 410], "output": [386, 415], "over": 482, "overview": [406, 419, 473, 500, 502, 532, 534, 535], "overwrit": 386, "own": 585, "packag": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 405, 407, 417, 420, 440, 505, 513, 514, 583], "paczynski1990": 36, "paczynski1990veloc": 37, "panel": 590, "paper": 395, "parabola": [460, 559, 560], "parallel": [13, 398, 415], "paramet": [218, 219, 397, 409, 414, 415, 463, 473, 490, 495, 496, 509], "parameterestim": 134, "parametersensitivityestim": 135, "parametr": 397, "parametricpsf": 168, "pdf": 339, "perform": [399, 459, 500, 510], "person": 412, "perspect": 393, "phase": [482, 579], "phasebackgroundmak": 178, "phasogram": 482, "piecewis": [545, 562], "piecewisenormspatialmodel": 254, "piecewisenormspectralmodel": 255, "pig": [390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415], "pip": 420, "pixel": [386, 400, 494], "pk": 489, "plan": 393, "plot": [14, 386, 458, 462, 463, 472, 473, 476, 493, 495, 510, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 590], "plot_contour_lin": 378, "plot_distribut": 379, "plot_heatmap": 380, "plot_map_rgb": 381, "plot_npred_sign": 382, "plot_spectrum_datasets_off_region": 383, "plot_theta_squared_t": 384, "png": 387, "point": [387, 414, 457, 458, 460, 462, 463, 471, 472, 474, 485, 487, 489, 500, 509, 510, 511, 523, 531, 546], "pointinginfo": 94, "pointingmod": 95, "pointspatialmodel": 256, "poisson": 586, "polar": 318, "polici": 412, "pool_kwargs_default": 332, "popul": [1, 515], "posit": [414, 498, 529], "possibl": 412, "post": 416, "posterior": 415, "power": [460, 552, 555, 556, 557, 563, 564, 565, 566, 567, 568, 569], "powerlaw": [460, 577], "powerlaw2spectralmodel": 257, "powerlawnormspectralmodel": 258, "powerlawspectralmodel": 259, "powerlawtemporalmodel": 260, "precis": 399, "predict": 521, "prepar": [401, 411, 457, 459, 475, 510], "prerequisit": [459, 460, 462, 463, 464, 465, 467, 471, 473, 474, 475, 476, 478, 479, 480, 481, 485, 490, 494, 495, 498, 509, 510], "pretti": 487, "primaryflux": 26, "print": 487, "prior": [261, 414, 498], "priorparamet": [220, 221], "produc": 502, "product": [486, 491], "profil": [458, 476, 486, 588], "project": [395, 417], "propag": 413, "propos": [394, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 413, 415, 459, 460, 463, 465, 466, 467, 468, 471, 474, 475, 476, 478, 479, 480, 481, 484, 485, 490, 494, 495, 497, 509, 510], "psf": [491, 501, 531], "psf3d": 164, "psf_tabl": 531, "psfkernel": 165, "psfking": 166, "psfmap": [167, 491], "public": 412, "pull": [386, 389, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "pulsar": [51, 482, 517, 518], "purpos": 391, "pwn": 50, "pydant": 413, "python": [386, 387, 393, 411, 423], "qualiti": [395, 417, 462, 464, 470, 490], "quantiti": [489, 497, 523], "radial": 528, "radial_distribut": 48, "radmax2d": 169, "rai": [401, 486], "random": [13, 386], "rang": [492, 533], "read": [466, 471, 475, 476, 493, 494, 495, 538], "read_hermes_cub": [288, 290], "read_yaml": 352, "recommend": [419, 421], "reconstruct": 528, "recopsfmap": 170, "recursive_merge_dict": 353, "redshift": 458, "reduc": [4, 467, 468, 488, 509, 510], "reduct": [8, 395, 401, 459, 462, 463, 464, 470, 479, 480, 484, 492, 502, 509, 510, 533, 585], "refer": [6, 406, 584, 585, 586], "reflect": [492, 534], "reflectedregionsbackgroundmak": [179, 534], "reflectedregionsfind": 180, "region": [13, 397, 400, 457, 459, 462, 464, 492, 494, 495, 534, 538], "region_to_fram": 347, "regiongeom": [205, 538], "regionndmap": [206, 538], "regions_to_compound_region": 348, "regionsfind": 181, "relat": 538, "releas": [386, 395, 411, 412, 416, 417, 425], "remark": 391, "remnant": 519, "remov": [386, 495], "renam": 386, "repositori": 417, "repr": 386, "represent": [409, 489, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "request": [386, 389, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "requir": [385, 386, 403, 413], "requires_data": 365, "requires_depend": 366, "resampl": 488, "resample_energy_edg": 150, "residu": [462, 464, 470, 510], "resolv": [407, 482, 484], "respons": [7, 530], "restructur": 406, "result": [401, 410, 457, 459, 463, 466, 473, 476, 479, 484, 489, 588], "return": [386, 387], "review": 391, "ring": [468, 492, 535], "ringbackgroundmak": 182, "rmf": 529, "road": 396, "roadmap": 395, "rotat": 400, "rst": 387, "run": [11, 389, 462, 463, 464, 473, 475, 476, 479, 509, 585], "run_multiprocess": 334, "safe": [492, 533], "safemaskmak": 183, "sampl": [399, 415, 474, 475], "sample_powerlaw": 340, "sample_spher": 341, "sample_sphere_dist": 342, "sample_tim": 343, "sampler": 475, "save": [463, 509, 510], "scale": 589, "scale_plot_flux": 289, "scaledregulargridinterpol": 325, "scalespectralmodel": 264, "scenario": 396, "schedul": 411, "scheme": [397, 412], "script": [11, 13, 386, 423, 505, 507], "section": 406, "sed": 523, "select": [459, 463, 472, 479, 480, 484, 487, 495, 509, 510, 522], "select_nested_model": 291, "sensit": 457, "sensitivityestim": 136, "sep": [431, 447], "serial": [398, 413, 471], "serialis": [414, 415, 463, 476, 491, 495, 496, 501, 521], "seril": 397, "set": [389, 463, 493, 509], "setup": [394, 417, 419, 421, 422, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 500, 501, 502, 503, 509, 510, 511], "sever": 386, "share": 496, "shell": 547, "shell2": 548, "shell2spatialmodel": 265, "shellspatialmodel": 266, "shorter": 409, "should": 386, "show": [472, 473, 497], "signal": 473, "signific": [459, 466, 468, 494, 587], "simplepulsar": 54, "simplifi": 409, "simul": [395, 398, 464, 465, 474, 475, 478, 481], "sine": 578, "sinetemporalmodel": 267, "singl": [387, 465], "size": 538, "skip": 386, "sky": [9, 397, 400, 472, 474, 494, 529, 537], "sky_to_fov": 319, "skycoord": 537, "skymodel": [268, 496], "slice": 493, "small": 389, "smooth": [466, 566], "smoothbrokenpowerlawspectralmodel": 269, "snr": 52, "snrtruelovemcke": 53, "solut": 413, "some": [386, 396, 494], "sourc": [1, 2, 457, 459, 462, 466, 472, 473, 474, 475, 481, 487, 494, 498, 500, 511, 515, 516, 517, 518, 520], "sourcecatalog": 56, "sourcecatalog1lhaaso": 57, "sourcecatalog2fhl": 58, "sourcecatalog2hwc": 59, "sourcecatalog2pc": 60, "sourcecatalog3fgl": 61, "sourcecatalog3fhl": 62, "sourcecatalog3hwc": 63, "sourcecatalog3pc": 64, "sourcecatalog4fgl": 65, "sourcecataloggammacat": 66, "sourcecataloghgp": 67, "sourcecataloglargescalehgp": 68, "sourcecatalogobject": 69, "sourcecatalogobject1lhaaso": 70, "sourcecatalogobject2fhl": 71, "sourcecatalogobject2hwc": 72, "sourcecatalogobject2pc": 73, "sourcecatalogobject3fgl": 74, "sourcecatalogobject3fhl": 75, "sourcecatalogobject3hwc": 76, "sourcecatalogobject3pc": 77, "sourcecatalogobject4fgl": 78, "sourcecatalogobjectgammacat": 79, "sourcecatalogobjecthgp": 80, "sourcecatalogobjecthgpscompon": 81, "sourceirfmodel": 397, "sourcemodel": 397, "spatial": [397, 409, 472, 486, 493, 496, 515, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549], "spatial_model_registri": 262, "spatialirfmodel": 397, "spatialmodel": 270, "special": 588, "specif": [397, 406, 487, 489], "spectra": 486, "spectral": [409, 414, 458, 459, 460, 462, 463, 464, 471, 472, 486, 496, 505, 511, 539, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 570], "spectral_model_registri": 263, "spectralirfmodel": 397, "spectralmodel": 271, "spectroscopi": 484, "spectrum": [458, 462, 464, 465, 472, 482, 492, 510], "spectrumdataset": [111, 398, 488, 521], "spectrumdatasetmak": [184, 533], "spectrumdatasetonoff": [112, 398], "sphinx": [386, 387], "spiral": 515, "split_dataset": [117, 120], "spread": [500, 531], "squar": [473, 503], "stack": [462, 468, 470, 521], "standard_scal": 312, "standardise_unit": 371, "start": [406, 419, 514, 515, 516, 522, 537], "stat": [12, 458], "stat_contour": 490, "stat_profile_ul_scipi": 292, "stat_surfac": 490, "statist": [12, 462, 494, 586, 587], "statu": [391, 396, 405, 411], "step": [463, 500, 502, 503, 583], "store": [401, 463, 529], "str": 386, "structur": [405, 407, 440, 511, 583], "structure_funct": 308, "studi": 401, "style": 392, "sub": [493, 514], "subclass": 414, "subpackag": 392, "subset": 487, "suggest": 412, "summari": [426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 470, 501], "super": [567, 568, 569], "superexpcutoffpowerlaw3fglspectralmodel": 272, "superexpcutoffpowerlaw4fgldr3spectralmodel": 273, "superexpcutoffpowerlaw4fglspectralmodel": 274, "supernova": 519, "support": [386, 393, 411, 412, 414, 491, 521], "survei": [507, 590], "symmetr": 528, "systemat": 414, "t": [466, 587], "tabl": [13, 473, 487, 489, 502, 522], "table_row_to_dict": 357, "table_standardise_units_copi": 358, "table_standardise_units_inplac": 359, "tag": 409, "target": 462, "task": [397, 398, 399, 400, 401, 402, 403, 415], "templat": [474, 549, 570], "templatendspatialmodel": 276, "templatendspectralmodel": 277, "templatenpredmodel": 278, "templatephasecurvetemporalmodel": 279, "templatespatialmodel": 280, "templatespectralmodel": 281, "tempor": [475, 481, 496, 539, 572, 573, 574, 575, 576, 577, 578, 579, 580], "temporal_model_registri": 275, "temporalmodel": 282, "term": 412, "terminologi": 396, "test": [13, 386, 389, 415, 473, 482], "text": 386, "theta": 503, "thi": 389, "through": 489, "thumbnail": 387, "time": [13, 395, 401, 456, 461, 469, 474, 477, 480, 481, 483, 484, 485, 499, 504, 505, 506, 508, 512, 540, 550, 571, 581, 589], "time_ref_from_dict": 368, "time_ref_to_dict": 369, "time_relative_to_ref": 370, "timemapaxi": [207, 493], "timmerkonig_lightcurve_simul": 294, "to_yaml": 354, "tool": [11, 386, 585], "tooltip": 387, "touch": 389, "trapz_loglog": 324, "troubleshoot": [422, 585], "true": [527, 529, 531], "tsmapestim": 137, "tune": 415, "tutori": [387, 394, 406, 419, 473, 500, 502, 505], "two": 495, "type": [386, 413, 521, 523], "uncertainti": 404, "underli": [480, 538], "unfold": 414, "unfreez": 495, "unif": 410, "unifi": [397, 410], "uniformprior": 283, "unit": [13, 386], "unit_from_fits_image_hdu": 372, "unix": 386, "unreleas": 455, "up": [389, 405, 407], "upsampl": 538, "us": [386, 396, 414, 415, 420, 423, 463, 473, 474, 479, 488, 490, 491, 493, 509, 510, 513, 516, 520, 521, 522, 523, 524, 530, 532, 533, 534, 537, 556, 567, 568, 569, 582], "user": [393, 415, 526], "util": [4, 5, 8, 10, 13, 405, 583, 587, 589], "valid": 413, "valleespir": 38, "valu": [386, 414, 473, 493, 498], "vari": 481, "variabl": [1, 2, 3, 4, 5, 7, 8, 10, 13, 474, 485], "varianc": 485, "variou": 497, "veloc": 515, "velocity_distribut": 49, "velocity_glon_glat": 320, "venv": 418, "version": [386, 411, 416, 425, 478], "virtual": 418, "visual": [14, 407, 493, 538, 590], "visualis": [466, 484, 489], "volum": 538, "warn": 386, "wc": [493, 538], "wcsgeom": 208, "wcsmap": 209, "wcsndmap": 210, "we": [394, 401, 402, 410, 502], "webpag": 417, "weighted_cash_sum_cython": 309, "what": [386, 389, 391, 394, 396, 401, 402, 410, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 446, 447, 448, 460, 462, 463, 466, 472, 479, 509, 511], "where": 386, "which": 386, "wind": 518, "wise": 479, "without": 498, "wobbleregionsfind": 185, "work": 522, "workflow": [11, 583], "write": [386, 391, 463, 475, 493, 494, 522, 538, 585], "write_yaml": 355, "wstat": [310, 586, 587, 588], "wstatcountsstatist": 295, "yaml": [409, 463, 509, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580], "your": [422, 463, 585], "yusifovkucuk2004": 39, "yusifovkucuk2004b": 40, "zhaoprofil": 27}})